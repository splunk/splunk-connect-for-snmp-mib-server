#
# PySNMP MIB module ENTERASYS-POLICY-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-POLICY-PROFILE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:49:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
StationAddress, StationAddressType = mibBuilder.importSymbols("ENTERASYS-UPN-TC-MIB", "StationAddress", "StationAddressType")
ifName, ifAlias = mibBuilder.importSymbols("IF-MIB", "ifName", "ifAlias")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIndex, PortList = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, Gauge32, ObjectIdentity, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, Counter64, MibIdentifier, Counter32, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Gauge32", "ObjectIdentity", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "Counter64", "MibIdentifier", "Counter32", "ModuleIdentity", "iso")
TruthValue, RowPointer, StorageType, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowPointer", "StorageType", "DisplayString", "TextualConvention", "RowStatus")
etsysPolicyProfileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6))
etsysPolicyProfileMIB.setRevisions(('2010-08-09 15:11', '2009-04-10 12:00', '2009-04-01 13:36', '2008-02-19 14:29', '2007-03-21 21:02', '2006-06-15 20:40', '2005-05-18 20:08', '2005-03-28 15:35', '2005-03-14 21:34', '2004-08-11 15:17', '2004-05-18 17:02', '2004-04-02 20:35', '2004-03-25 18:03', '2004-02-03 22:00', '2004-02-03 15:33', '2004-01-19 21:43', '2003-11-04 17:16', '2003-02-06 22:59', '2002-09-17 14:53', '2002-07-19 13:37', '2001-06-11 20:00', '2001-01-09 00:00',))
if mibBuilder.loadTexts: etsysPolicyProfileMIB.setLastUpdated('201008091511Z')
if mibBuilder.loadTexts: etsysPolicyProfileMIB.setOrganization('Enterasys Networks, Inc')
class PolicyProfileIDTC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), )
class PortPolicyProfileIndexTypeTC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ifIndex", 1), ("dot1dBasePort", 2))

class PolicyRFC3580MapRadiusResponseTC(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("policyProfile", 1), ("vlanTunnelAttribute", 2), ("vlanTunnelAttributeWithPolicyProfile", 3))

class VlanList(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(512, 512)
    fixedLength = 512

class PolicyClassificationRuleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31))
    namedValues = NamedValues(("macSource", 1), ("macDestination", 2), ("ipxSource", 3), ("ipxDestination", 4), ("ipxSourcePort", 5), ("ipxDestinationPort", 6), ("ipxCos", 7), ("ipxType", 8), ("ip6Source", 9), ("ip6Destination", 10), ("ip6FlowLabel", 11), ("ip4Source", 12), ("ip4Destination", 13), ("ipFragment", 14), ("udpSourcePort", 15), ("udpDestinationPort", 16), ("tcpSourcePort", 17), ("tcpDestinationPort", 18), ("icmpTypeCode", 19), ("ipTtl", 20), ("ipTos", 21), ("ipType", 22), ("icmpTypeCodeV6", 23), ("etherType", 25), ("llcDsapSsap", 26), ("vlanId", 27), ("ieee8021dTci", 28), ("acl", 30), ("bridgePort", 31))

class PolicyRulesSupported(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("macSource", 1), ("macDestination", 2), ("ipxSource", 3), ("ipxDestination", 4), ("ipxSourcePort", 5), ("ipxDestinationPort", 6), ("ipxCos", 7), ("ipxType", 8), ("ip6Source", 9), ("ip6Destination", 10), ("ip6FlowLabel", 11), ("ip4Source", 12), ("ip4Destination", 13), ("ipFragment", 14), ("udpSourcePort", 15), ("udpDestinationPort", 16), ("tcpSourcePort", 17), ("tcpDestinationPort", 18), ("icmpTypeCode", 19), ("ipTtl", 20), ("ipTos", 21), ("ipType", 22), ("icmpTypeCodeV6", 23), ("etherType", 25), ("llcDsapSsap", 26), ("vlanId", 27), ("ieee8021dTci", 28), ("acl", 30), ("bridgePort", 31))

class TriStateStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2), ("prohibited", 3))

etsysPolicyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 0))
etsysPolicyProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1))
etsysPolicyClassification = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2))
etsysPortPolicyProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3))
etsysPolicyVlanEgress = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 4))
etsysStationPolicyProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5))
etsysInvalidPolicyPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 6))
etsysDevicePolicyProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 8))
etsysPolicyCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9))
etsysPolicyMap = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10))
etsysPolicyRules = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11))
etsysPolicyRFC3580Map = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12))
etsysPolicyRulePortHitNotification = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 0, 1)).setObjects(("IF-MIB", "ifName"), ("IF-MIB", "ifAlias"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHit"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileName"))
if mibBuilder.loadTexts: etsysPolicyRulePortHitNotification.setStatus('current')
etsysPolicyProfileMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyProfileMaxEntries.setStatus('current')
etsysPolicyProfileNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyProfileNumEntries.setStatus('current')
etsysPolicyProfileLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyProfileLastChange.setStatus('current')
etsysPolicyProfileTableNextAvailableIndex = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyProfileTableNextAvailableIndex.setStatus('current')
etsysPolicyProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5), )
if mibBuilder.loadTexts: etsysPolicyProfileTable.setStatus('current')
etsysPolicyProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileIndex"))
if mibBuilder.loadTexts: etsysPolicyProfileEntry.setStatus('current')
etsysPolicyProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysPolicyProfileIndex.setStatus('current')
etsysPolicyProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileName.setStatus('current')
etsysPolicyProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileRowStatus.setStatus('current')
etsysPolicyProfilePortVidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 4), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfilePortVidStatus.setStatus('current')
etsysPolicyProfilePortVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ValueRangeConstraint(4095, 4095), )).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfilePortVid.setStatus('current')
etsysPolicyProfilePriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 6), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfilePriorityStatus.setStatus('current')
etsysPolicyProfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfilePriority.setStatus('current')
etsysPolicyProfileEgressVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 8), VlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileEgressVlans.setStatus('current')
etsysPolicyProfileForbiddenVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 9), VlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileForbiddenVlans.setStatus('current')
etsysPolicyProfileUntaggedVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 10), VlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileUntaggedVlans.setStatus('current')
etsysPolicyProfileOverwriteTCI = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 11), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileOverwriteTCI.setStatus('current')
etsysPolicyProfileRulePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileRulePrecedence.setStatus('current')
etsysPolicyProfileVlanRFC3580Mappings = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 13), VlanList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyProfileVlanRFC3580Mappings.setStatus('current')
etsysPolicyProfileMirrorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileMirrorIndex.setStatus('current')
etsysPolicyProfileAuditSyslogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 15), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileAuditSyslogEnable.setStatus('current')
etsysPolicyProfileAuditTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 16), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileAuditTrapEnable.setStatus('current')
etsysPolicyProfileDisablePort = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 17), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyProfileDisablePort.setStatus('current')
etsysPolicyProfileUsageList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 1, 5, 1, 18), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyProfileUsageList.setStatus('current')
etsysPolicyClassificationMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyClassificationMaxEntries.setStatus('deprecated')
etsysPolicyClassificationNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyClassificationNumEntries.setStatus('deprecated')
etsysPolicyClassificationLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyClassificationLastChange.setStatus('deprecated')
etsysPolicyClassificationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 4), )
if mibBuilder.loadTexts: etsysPolicyClassificationTable.setStatus('deprecated')
etsysPolicyClassificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 4, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileIndex"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationIndex"))
if mibBuilder.loadTexts: etsysPolicyClassificationEntry.setStatus('deprecated')
etsysPolicyClassificationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysPolicyClassificationIndex.setStatus('deprecated')
etsysPolicyClassificationOID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 4, 1, 2), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyClassificationOID.setStatus('deprecated')
etsysPolicyClassificationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyClassificationRowStatus.setStatus('deprecated')
etsysPolicyClassificationIngressList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 2, 4, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyClassificationIngressList.setStatus('deprecated')
etsysPortPolicyProfileLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPortPolicyProfileLastChange.setStatus('deprecated')
etsysPortPolicyProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 2), )
if mibBuilder.loadTexts: etsysPortPolicyProfileTable.setStatus('deprecated')
etsysPortPolicyProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 2, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileIndexType"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileIndex"))
if mibBuilder.loadTexts: etsysPortPolicyProfileEntry.setStatus('deprecated')
etsysPortPolicyProfileIndexType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 2, 1, 1), PortPolicyProfileIndexTypeTC())
if mibBuilder.loadTexts: etsysPortPolicyProfileIndexType.setStatus('deprecated')
etsysPortPolicyProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: etsysPortPolicyProfileIndex.setStatus('deprecated')
etsysPortPolicyProfileAdminID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 2, 1, 3), PolicyProfileIDTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPortPolicyProfileAdminID.setStatus('deprecated')
etsysPortPolicyProfileOperID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 2, 1, 4), PolicyProfileIDTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPortPolicyProfileOperID.setStatus('deprecated')
etsysPortPolicyProfileSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 3), )
if mibBuilder.loadTexts: etsysPortPolicyProfileSummaryTable.setStatus('current')
etsysPortPolicyProfileSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 3, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileIndex"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileSummaryIndexType"))
if mibBuilder.loadTexts: etsysPortPolicyProfileSummaryEntry.setStatus('current')
etsysPortPolicyProfileSummaryIndexType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 3, 1, 1), PortPolicyProfileIndexTypeTC())
if mibBuilder.loadTexts: etsysPortPolicyProfileSummaryIndexType.setStatus('current')
etsysPortPolicyProfileSummaryAdminID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 3, 1, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPortPolicyProfileSummaryAdminID.setStatus('current')
etsysPortPolicyProfileSummaryOperID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 3, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPortPolicyProfileSummaryOperID.setStatus('current')
etsysPortPolicyProfileSummaryDynamicID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 3, 3, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPortPolicyProfileSummaryDynamicID.setStatus('current')
etsysStationPolicyProfileMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationPolicyProfileMaxEntries.setStatus('current')
etsysStationPolicyProfileNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationPolicyProfileNumEntries.setStatus('current')
etsysStationPolicyProfileLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationPolicyProfileLastChange.setStatus('current')
etsysStationPolicyProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4), )
if mibBuilder.loadTexts: etsysStationPolicyProfileTable.setStatus('current')
etsysStationPolicyProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileIndex"))
if mibBuilder.loadTexts: etsysStationPolicyProfileEntry.setStatus('current')
etsysStationPolicyProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: etsysStationPolicyProfileIndex.setStatus('current')
etsysStationIdentifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1, 3), StationAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationIdentifierType.setStatus('current')
etsysStationIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1, 4), StationAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationIdentifier.setStatus('current')
etsysStationPolicyProfileOperID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1, 5), PolicyProfileIDTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationPolicyProfileOperID.setStatus('current')
etsysStationPolicyProfilePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1, 6), PortPolicyProfileIndexTypeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationPolicyProfilePortType.setStatus('current')
etsysStationPolicyProfilePortID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 5, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysStationPolicyProfilePortID.setStatus('current')
etsysInvalidPolicyAction = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("applyDefaultPolicy", 1), ("dropPackets", 2), ("forwardPackets", 3))).clone('applyDefaultPolicy')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysInvalidPolicyAction.setStatus('current')
etsysInvalidPolicyCount = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysInvalidPolicyCount.setStatus('current')
etsysDevicePolicyProfileDefault = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysDevicePolicyProfileDefault.setStatus('current')
etsysPolicyCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 1), Bits().clone(namedValues=NamedValues(("supportsVLANForwarding", 0), ("supportsPriority", 1), ("supportsPermit", 2), ("supportsDeny", 3), ("supportsDeviceLevelPolicy", 4), ("supportsPrecedenceReordering", 5), ("supportsTciOverwrite", 6), ("supportsRulesTable", 7), ("supportsRuleUseAccounting", 8), ("supportsRuleUseNotification", 9), ("supportsCoSTable", 10), ("supportsLongestPrefixRules", 11), ("supportsPortDisableAction", 12), ("supportsRuleUseAutoClearOnLink", 13), ("supportsRuleUseAutoClearOnInterval", 14), ("supportsRuleUseAutoClearOnProfile", 15), ("supportsPolicyRFC3580MapTable", 16), ("supportsPolicyEnabledTable", 17), ("supportsMirror", 18), ("supportsEgressPolicy", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyCapabilities.setStatus('current')
etsysPolicyDynaPIDRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 2), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyDynaPIDRuleCapabilities.setStatus('current')
etsysPolicyAdminPIDRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 3), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyAdminPIDRuleCapabilities.setStatus('current')
etsysPolicyVlanRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 4), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyVlanRuleCapabilities.setStatus('current')
etsysPolicyCosRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 5), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyCosRuleCapabilities.setStatus('current')
etsysPolicyDropRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 6), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyDropRuleCapabilities.setStatus('current')
etsysPolicyForwardRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 7), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyForwardRuleCapabilities.setStatus('current')
etsysPolicySyslogRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 8), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicySyslogRuleCapabilities.setStatus('current')
etsysPolicyTrapRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 9), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyTrapRuleCapabilities.setStatus('current')
etsysPolicyDisablePortRuleCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 10), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyDisablePortRuleCapabilities.setStatus('current')
etsysPolicySupportedPortList = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 11), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicySupportedPortList.setStatus('current')
etsysPolicyEnabledTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 12), )
if mibBuilder.loadTexts: etsysPolicyEnabledTable.setStatus('current')
etsysPolicyEnabledTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 12, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: etsysPolicyEnabledTableEntry.setStatus('current')
etsysPolicyEnabledSupportedRuleTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 12, 1, 1), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyEnabledSupportedRuleTypes.setStatus('current')
etsysPolicyEnabledEnabledRuleTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 12, 1, 2), PolicyRulesSupported()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyEnabledEnabledRuleTypes.setStatus('current')
etsysPolicyEnabledEgressEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 12, 1, 3), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyEnabledEgressEnabled.setStatus('current')
etsysPolicyRuleAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 13), )
if mibBuilder.loadTexts: etsysPolicyRuleAttributeTable.setStatus('current')
etsysPolicyRuleAttributeTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 13, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleType"))
if mibBuilder.loadTexts: etsysPolicyRuleAttributeTableEntry.setStatus('current')
etsysPolicyRuleAttributeByteLength = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleAttributeByteLength.setStatus('current')
etsysPolicyRuleAttributeBitLength = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleAttributeBitLength.setStatus('current')
etsysPolicyRuleAttributeMaxCreatable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleAttributeMaxCreatable.setStatus('current')
etsysPolicyRuleTciOverwriteCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 14), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleTciOverwriteCapabilities.setStatus('current')
etsysPolicyRuleMirrorCapabilities = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 9, 15), PolicyRulesSupported()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleMirrorCapabilities.setStatus('current')
etsysPolicyMapMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyMapMaxEntries.setStatus('obsolete')
etsysPolicyMapNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyMapNumEntries.setStatus('obsolete')
etsysPolicyMapLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyMapLastChange.setStatus('obsolete')
etsysPolicyMapPvidOverRide = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyMapPvidOverRide.setStatus('obsolete')
etsysPolicyMapUnknownPvidPolicy = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("denyAccess", 1), ("applyDefaultPolicy", 2), ("applyPvid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyMapUnknownPvidPolicy.setStatus('obsolete')
etsysPolicyMapTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6), )
if mibBuilder.loadTexts: etsysPolicyMapTable.setStatus('obsolete')
etsysPolicyMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapIndex"))
if mibBuilder.loadTexts: etsysPolicyMapEntry.setStatus('obsolete')
etsysPolicyMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: etsysPolicyMapIndex.setStatus('obsolete')
etsysPolicyMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyMapRowStatus.setStatus('obsolete')
etsysPolicyMapStartVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyMapStartVid.setStatus('obsolete')
etsysPolicyMapEndVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyMapEndVid.setStatus('obsolete')
etsysPolicyMapPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 10, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyMapPolicyIndex.setStatus('obsolete')
etsysPolicyRulesMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRulesMaxEntries.setStatus('current')
etsysPolicyRulesNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRulesNumEntries.setStatus('current')
etsysPolicyRulesLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRulesLastChange.setStatus('current')
etsysPolicyRulesAccountingEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 4), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRulesAccountingEnable.setStatus('current')
etsysPolicyRulesPortDisabledList = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRulesPortDisabledList.setStatus('current')
etsysPolicyRuleTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6), )
if mibBuilder.loadTexts: etsysPolicyRuleTable.setStatus('current')
etsysPolicyRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleProfileIndex"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleType"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleData"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePrefixBits"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortType"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePort"))
if mibBuilder.loadTexts: etsysPolicyRuleEntry.setStatus('current')
etsysPolicyRuleProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), )))
if mibBuilder.loadTexts: etsysPolicyRuleProfileIndex.setStatus('current')
etsysPolicyRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 2), PolicyClassificationRuleType())
if mibBuilder.loadTexts: etsysPolicyRuleType.setStatus('current')
etsysPolicyRuleData = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: etsysPolicyRuleData.setStatus('current')
etsysPolicyRulePrefixBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2048), )))
if mibBuilder.loadTexts: etsysPolicyRulePrefixBits.setStatus('current')
etsysPolicyRulePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 5), PortPolicyProfileIndexTypeTC())
if mibBuilder.loadTexts: etsysPolicyRulePortType.setStatus('current')
etsysPolicyRulePort = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), )))
if mibBuilder.loadTexts: etsysPolicyRulePort.setStatus('current')
etsysPolicyRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleRowStatus.setStatus('current')
etsysPolicyRuleStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 8), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleStorageType.setStatus('current')
etsysPolicyRuleUsageList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 9), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleUsageList.setStatus('current')
etsysPolicyRuleResult1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ValueRangeConstraint(4095, 4095), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleResult1.setStatus('current')
etsysPolicyRuleResult2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 4095), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleResult2.setStatus('current')
etsysPolicyRuleAuditSyslogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 12), TriStateStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleAuditSyslogEnable.setStatus('current')
etsysPolicyRuleAuditTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 13), TriStateStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleAuditTrapEnable.setStatus('current')
etsysPolicyRuleDisablePort = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 14), TriStateStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleDisablePort.setStatus('current')
etsysPolicyRuleOperPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 4095), )).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleOperPid.setStatus('current')
etsysPolicyRuleOverwriteTCI = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 16), TriStateStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleOverwriteTCI.setStatus('current')
etsysPolicyRuleMirrorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysPolicyRuleMirrorIndex.setStatus('current')
etsysPolicyRulePortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 7), )
if mibBuilder.loadTexts: etsysPolicyRulePortTable.setStatus('current')
etsysPolicyRulePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 7, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleProfileIndex"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleType"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleData"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePrefixBits"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortType"), (0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePort"))
if mibBuilder.loadTexts: etsysPolicyRulePortEntry.setStatus('current')
etsysPolicyRulePortHit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 7, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRulePortHit.setStatus('current')
etsysPolicyRuleDynamicProfileAssignmentOverride = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleDynamicProfileAssignmentOverride.setStatus('current')
etsysPolicyRuleDefaultDynamicSyslogStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 9), TriStateStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleDefaultDynamicSyslogStatus.setStatus('current')
etsysPolicyRuleDefaultDynamicTrapStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 10), TriStateStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleDefaultDynamicTrapStatus.setStatus('current')
etsysPolicyRuleStatsAutoClearOnLink = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 11), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleStatsAutoClearOnLink.setStatus('current')
etsysPolicyRuleStatsAutoClearInterval = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleStatsAutoClearInterval.setStatus('current')
etsysPolicyRuleStatsAutoClearPorts = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 13), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleStatsAutoClearPorts.setStatus('current')
etsysPolicyRuleStatsAutoClearOnProfile = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 14), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleStatsAutoClearOnProfile.setStatus('current')
etsysPolicyRuleStatsDroppedNotifications = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRuleStatsDroppedNotifications.setStatus('current')
etsysPolicyRuleSylogMachineReadableFormat = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 16), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleSylogMachineReadableFormat.setStatus('current')
etsysPolicyRuleSylogExtendedFormat = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 17), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleSylogExtendedFormat.setStatus('current')
etsysPolicyRuleSylogEveryTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 11, 18), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRuleSylogEveryTime.setStatus('current')
etsysPolicyRFC3580MapResolveReponseConflict = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 1), PolicyRFC3580MapRadiusResponseTC().clone('policyProfile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRFC3580MapResolveReponseConflict.setStatus('current')
etsysPolicyRFC3580MapLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRFC3580MapLastChange.setStatus('current')
etsysPolicyRFC3580MapTableDefault = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRFC3580MapTableDefault.setStatus('current')
etsysPolicyRFC3580MapTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 4), )
if mibBuilder.loadTexts: etsysPolicyRFC3580MapTable.setStatus('current')
etsysPolicyRFC3580MapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 4, 1), ).setIndexNames((0, "ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapVlanId"))
if mibBuilder.loadTexts: etsysPolicyRFC3580MapEntry.setStatus('current')
etsysPolicyRFC3580MapVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 4, 1, 1), VlanIndex())
if mibBuilder.loadTexts: etsysPolicyRFC3580MapVlanId.setStatus('current')
etsysPolicyRFC3580MapPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 4, 1, 2), PolicyProfileIDTC().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysPolicyRFC3580MapPolicyIndex.setStatus('current')
etsysPolicyRFC3580MapInvalidMapping = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysPolicyRFC3580MapInvalidMapping.setStatus('current')
etsysPolicyProfileConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7))
etsysPolicyProfileGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1))
etsysPolicyProfileCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2))
etsysPolicyProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 1)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileTableNextAvailableIndex"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileName"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePortVidStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePortVid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePriorityStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePriority"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileEgressVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileForbiddenVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileUntaggedVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileOverwriteTCI"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileRulePrecedence"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileVlanRFC3580Mappings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileGroup = etsysPolicyProfileGroup.setStatus('deprecated')
etsysPolicyClassificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 2)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationOID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationIngressList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyClassificationGroup = etsysPolicyClassificationGroup.setStatus('deprecated')
etsysPortPolicyProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 3)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileAdminID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileOperID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileSummaryAdminID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileSummaryOperID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPortPolicyProfileGroup = etsysPortPolicyProfileGroup.setStatus('deprecated')
etsysStationPolicyProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 5)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationIdentifierType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationIdentifier"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileOperID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfilePortType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfilePortID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysStationPolicyProfileGroup = etsysStationPolicyProfileGroup.setStatus('current')
etsysInvalidPolicyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 6)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyAction"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysInvalidPolicyPolicyGroup = etsysInvalidPolicyPolicyGroup.setStatus('current')
etsysDevicePolicyProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 7)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileDefault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysDevicePolicyProfileGroup = etsysDevicePolicyProfileGroup.setStatus('current')
etsysPolicyCapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 8)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyVlanRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCosRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDropRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyForwardRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDynaPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyAdminPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySyslogRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyTrapRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDisablePortRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySupportedPortList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledSupportedRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledEnabledRuleTypes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyCapabilitiesGroup = etsysPolicyCapabilitiesGroup.setStatus('deprecated')
etsysPolicyMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 9)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapPvidOverRide"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapUnknownPvidPolicy"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapStartVid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapEndVid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyMapPolicyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyMapGroup = etsysPolicyMapGroup.setStatus('obsolete')
etsysPolicyRulesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 10)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesAccountingEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesPortDisabledList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStorageType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleUsageList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult1"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDisablePort"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOperPid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHit"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDynamicProfileAssignmentOverride"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicSyslogStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicTrapStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnLink"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearInterval"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearPorts"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRulesGroup = etsysPolicyRulesGroup.setStatus('deprecated')
etsysPortPolicyProfileGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 11)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileSummaryAdminID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileSummaryOperID"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileSummaryDynamicID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPortPolicyProfileGroup2 = etsysPortPolicyProfileGroup2.setStatus('current')
etsysPolicyRFC3580MapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 12)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapResolveReponseConflict"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapTableDefault"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapPolicyIndex"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapInvalidMapping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRFC3580MapGroup = etsysPolicyRFC3580MapGroup.setStatus('current')
etsysPolicyCapabilitiesGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 13)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyVlanRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCosRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDropRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyForwardRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDynaPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyAdminPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySyslogRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyTrapRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDisablePortRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySupportedPortList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledSupportedRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledEnabledRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeByteLength"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeBitLength"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeMaxCreatable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyCapabilitiesGroup2 = etsysPolicyCapabilitiesGroup2.setStatus('deprecated')
etsysPolicyRulesGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 14)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesAccountingEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesPortDisabledList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStorageType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleUsageList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult1"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDisablePort"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOperPid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHit"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDynamicProfileAssignmentOverride"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicSyslogStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicTrapStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnLink"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearInterval"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearPorts"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnProfile"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsDroppedNotifications"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogMachineReadableFormat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRulesGroup2 = etsysPolicyRulesGroup2.setStatus('deprecated')
etsysPolicyRulePortHitNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 15)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHitNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRulePortHitNotificationGroup = etsysPolicyRulePortHitNotificationGroup.setStatus('current')
etsysPolicyRulesGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 16)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesAccountingEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesPortDisabledList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStorageType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleUsageList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult1"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDisablePort"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOperPid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHit"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDynamicProfileAssignmentOverride"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicSyslogStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicTrapStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnLink"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearInterval"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearPorts"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnProfile"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsDroppedNotifications"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogMachineReadableFormat"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogExtendedFormat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRulesGroup3 = etsysPolicyRulesGroup3.setStatus('deprecated')
etsysPolicyRulesGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 17)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesAccountingEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesPortDisabledList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStorageType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleUsageList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult1"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDisablePort"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOperPid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHit"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDynamicProfileAssignmentOverride"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicSyslogStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicTrapStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnLink"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearInterval"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearPorts"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnProfile"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsDroppedNotifications"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogMachineReadableFormat"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogExtendedFormat"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOverwriteTCI"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleMirrorIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRulesGroup4 = etsysPolicyRulesGroup4.setStatus('current')
etsysPolicyCapabilitiesGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 18)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyVlanRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCosRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDropRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyForwardRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDynaPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyAdminPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySyslogRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyTrapRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDisablePortRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySupportedPortList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledSupportedRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledEnabledRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeByteLength"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeBitLength"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeMaxCreatable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleTciOverwriteCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleMirrorCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyCapabilitiesGroup3 = etsysPolicyCapabilitiesGroup3.setStatus('deprecated')
etsysPolicyProfileGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 19)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileTableNextAvailableIndex"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileName"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePortVidStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePortVid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePriorityStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePriority"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileEgressVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileForbiddenVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileUntaggedVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileOverwriteTCI"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileRulePrecedence"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileVlanRFC3580Mappings"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileMirrorIndex"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileDisablePort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileGroup2 = etsysPolicyProfileGroup2.setStatus('deprecated')
etsysPolicyRulesGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 20)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesAccountingEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesPortDisabledList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStorageType"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleUsageList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult1"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleResult2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDisablePort"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOperPid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHit"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDynamicProfileAssignmentOverride"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicSyslogStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleDefaultDynamicTrapStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnLink"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearInterval"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearPorts"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsAutoClearOnProfile"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleStatsDroppedNotifications"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogMachineReadableFormat"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogExtendedFormat"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleSylogEveryTime"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleOverwriteTCI"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleMirrorIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyRulesGroup5 = etsysPolicyRulesGroup5.setStatus('current')
etsysPolicyCapabilitiesGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 21)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyVlanRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCosRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDropRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyForwardRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDynaPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyAdminPIDRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySyslogRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyTrapRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyDisablePortRuleCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicySupportedPortList"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledSupportedRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledEnabledRuleTypes"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyEnabledEgressEnabled"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeByteLength"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeBitLength"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleAttributeMaxCreatable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleTciOverwriteCapabilities"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRuleMirrorCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyCapabilitiesGroup4 = etsysPolicyCapabilitiesGroup4.setStatus('current')
etsysPolicyProfileGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 1, 22)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileMaxEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileNumEntries"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileLastChange"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileTableNextAvailableIndex"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileName"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileRowStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePortVidStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePortVid"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePriorityStatus"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfilePriority"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileEgressVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileForbiddenVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileUntaggedVlans"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileOverwriteTCI"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileRulePrecedence"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileVlanRFC3580Mappings"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileMirrorIndex"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileAuditSyslogEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileAuditTrapEnable"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileDisablePort"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileUsageList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileGroup3 = etsysPolicyProfileGroup3.setStatus('current')
etsysPolicyProfileCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 1)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance = etsysPolicyProfileCompliance.setStatus('deprecated')
etsysPolicyProfileCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 2)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilitiesGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyClassificationGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance2 = etsysPolicyProfileCompliance2.setStatus('deprecated')
etsysPolicyProfileCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 3)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilitiesGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance3 = etsysPolicyProfileCompliance3.setStatus('deprecated')
etsysPolicyProfileCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 4)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilitiesGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHitNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance4 = etsysPolicyProfileCompliance4.setStatus('deprecated')
etsysPolicyProfileCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 5)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilitiesGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesGroup3"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHitNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance5 = etsysPolicyProfileCompliance5.setStatus('deprecated')
etsysPolicyProfileCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 6)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilitiesGroup3"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesGroup4"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHitNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance6 = etsysPolicyProfileCompliance6.setStatus('current')
etsysPolicyProfileCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 6, 7, 2, 7)).setObjects(("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyProfileGroup3"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPortPolicyProfileGroup2"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyCapabilitiesGroup4"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysStationPolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysInvalidPolicyPolicyGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysDevicePolicyProfileGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRFC3580MapGroup"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulesGroup5"), ("ENTERASYS-POLICY-PROFILE-MIB", "etsysPolicyRulePortHitNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysPolicyProfileCompliance7 = etsysPolicyProfileCompliance7.setStatus('current')
mibBuilder.exportSymbols("ENTERASYS-POLICY-PROFILE-MIB", etsysPolicyCapabilities=etsysPolicyCapabilities, etsysPolicyRuleStatsAutoClearOnProfile=etsysPolicyRuleStatsAutoClearOnProfile, etsysPolicyMapEntry=etsysPolicyMapEntry, etsysPolicyRFC3580MapResolveReponseConflict=etsysPolicyRFC3580MapResolveReponseConflict, PolicyClassificationRuleType=PolicyClassificationRuleType, etsysPolicyRuleAttributeTableEntry=etsysPolicyRuleAttributeTableEntry, etsysPolicyRulesAccountingEnable=etsysPolicyRulesAccountingEnable, etsysPolicyClassificationIngressList=etsysPolicyClassificationIngressList, etsysPolicyProfilePortVidStatus=etsysPolicyProfilePortVidStatus, etsysPolicyRFC3580MapEntry=etsysPolicyRFC3580MapEntry, etsysPolicyDropRuleCapabilities=etsysPolicyDropRuleCapabilities, etsysPolicyRFC3580MapTableDefault=etsysPolicyRFC3580MapTableDefault, etsysPolicyRulesLastChange=etsysPolicyRulesLastChange, etsysPolicyRulePortHitNotification=etsysPolicyRulePortHitNotification, etsysPolicyRulesPortDisabledList=etsysPolicyRulesPortDisabledList, etsysPolicyRuleDynamicProfileAssignmentOverride=etsysPolicyRuleDynamicProfileAssignmentOverride, etsysPolicyProfileMirrorIndex=etsysPolicyProfileMirrorIndex, etsysPolicyRFC3580MapVlanId=etsysPolicyRFC3580MapVlanId, etsysPolicyProfileCompliance6=etsysPolicyProfileCompliance6, etsysPolicyProfilePriorityStatus=etsysPolicyProfilePriorityStatus, etsysPolicyDisablePortRuleCapabilities=etsysPolicyDisablePortRuleCapabilities, PolicyProfileIDTC=PolicyProfileIDTC, etsysPolicyProfilePortVid=etsysPolicyProfilePortVid, etsysPolicyRuleStatsDroppedNotifications=etsysPolicyRuleStatsDroppedNotifications, etsysPolicyProfileVlanRFC3580Mappings=etsysPolicyProfileVlanRFC3580Mappings, etsysPolicyRFC3580Map=etsysPolicyRFC3580Map, etsysPolicyProfileTable=etsysPolicyProfileTable, etsysPortPolicyProfileLastChange=etsysPortPolicyProfileLastChange, etsysPortPolicyProfileIndex=etsysPortPolicyProfileIndex, etsysPolicyRulesGroup=etsysPolicyRulesGroup, etsysInvalidPolicyPolicyGroup=etsysInvalidPolicyPolicyGroup, etsysPolicyRulePortEntry=etsysPolicyRulePortEntry, etsysStationPolicyProfileMaxEntries=etsysStationPolicyProfileMaxEntries, etsysPolicyMapStartVid=etsysPolicyMapStartVid, etsysPolicyEnabledEnabledRuleTypes=etsysPolicyEnabledEnabledRuleTypes, etsysPolicyMapIndex=etsysPolicyMapIndex, etsysStationPolicyProfileIndex=etsysStationPolicyProfileIndex, PYSNMP_MODULE_ID=etsysPolicyProfileMIB, etsysStationPolicyProfileNumEntries=etsysStationPolicyProfileNumEntries, etsysStationPolicyProfilePortID=etsysStationPolicyProfilePortID, etsysPolicyCapabilitiesGroup3=etsysPolicyCapabilitiesGroup3, etsysPolicyRuleDefaultDynamicSyslogStatus=etsysPolicyRuleDefaultDynamicSyslogStatus, etsysPolicyClassification=etsysPolicyClassification, etsysPolicyClassificationEntry=etsysPolicyClassificationEntry, etsysStationPolicyProfileLastChange=etsysStationPolicyProfileLastChange, etsysPolicyRFC3580MapTable=etsysPolicyRFC3580MapTable, etsysInvalidPolicyPolicy=etsysInvalidPolicyPolicy, etsysPolicyRuleAuditSyslogEnable=etsysPolicyRuleAuditSyslogEnable, etsysPolicyProfileDisablePort=etsysPolicyProfileDisablePort, etsysPolicyMapPolicyIndex=etsysPolicyMapPolicyIndex, etsysPolicyProfileCompliance2=etsysPolicyProfileCompliance2, etsysPolicyRulesGroup5=etsysPolicyRulesGroup5, etsysPolicyEnabledSupportedRuleTypes=etsysPolicyEnabledSupportedRuleTypes, etsysPolicyMap=etsysPolicyMap, etsysPolicyRuleAttributeMaxCreatable=etsysPolicyRuleAttributeMaxCreatable, etsysPolicyRuleStatsAutoClearInterval=etsysPolicyRuleStatsAutoClearInterval, etsysStationPolicyProfilePortType=etsysStationPolicyProfilePortType, etsysPolicyCapabilitiesGroup2=etsysPolicyCapabilitiesGroup2, etsysPolicyRulesGroup2=etsysPolicyRulesGroup2, etsysPolicyProfileGroup2=etsysPolicyProfileGroup2, etsysPolicyCapabilitiesGroup4=etsysPolicyCapabilitiesGroup4, etsysPolicyRuleType=etsysPolicyRuleType, etsysPolicyTrapRuleCapabilities=etsysPolicyTrapRuleCapabilities, etsysDevicePolicyProfileGroup=etsysDevicePolicyProfileGroup, etsysPortPolicyProfileSummaryAdminID=etsysPortPolicyProfileSummaryAdminID, etsysPolicyVlanRuleCapabilities=etsysPolicyVlanRuleCapabilities, VlanList=VlanList, etsysPolicyProfileAuditTrapEnable=etsysPolicyProfileAuditTrapEnable, etsysPolicyRuleAttributeTable=etsysPolicyRuleAttributeTable, etsysPolicyMapLastChange=etsysPolicyMapLastChange, etsysPolicyRuleAuditTrapEnable=etsysPolicyRuleAuditTrapEnable, etsysPolicyRulePort=etsysPolicyRulePort, etsysPolicyRuleStatsAutoClearPorts=etsysPolicyRuleStatsAutoClearPorts, etsysPolicyClassificationLastChange=etsysPolicyClassificationLastChange, etsysPolicyMapGroup=etsysPolicyMapGroup, etsysPortPolicyProfileIndexType=etsysPortPolicyProfileIndexType, etsysPortPolicyProfileSummaryOperID=etsysPortPolicyProfileSummaryOperID, etsysPolicySyslogRuleCapabilities=etsysPolicySyslogRuleCapabilities, etsysPolicyRuleResult1=etsysPolicyRuleResult1, etsysPolicyProfileGroups=etsysPolicyProfileGroups, etsysPolicyProfileMIB=etsysPolicyProfileMIB, etsysPortPolicyProfileSummaryDynamicID=etsysPortPolicyProfileSummaryDynamicID, etsysPortPolicyProfileGroup2=etsysPortPolicyProfileGroup2, etsysPolicyProfileCompliance3=etsysPolicyProfileCompliance3, etsysPolicyMapMaxEntries=etsysPolicyMapMaxEntries, etsysPolicyEnabledTableEntry=etsysPolicyEnabledTableEntry, etsysPolicyRuleSylogExtendedFormat=etsysPolicyRuleSylogExtendedFormat, etsysPolicyClassificationRowStatus=etsysPolicyClassificationRowStatus, etsysInvalidPolicyAction=etsysInvalidPolicyAction, etsysPolicyRuleOverwriteTCI=etsysPolicyRuleOverwriteTCI, etsysPolicyRuleDisablePort=etsysPolicyRuleDisablePort, etsysPortPolicyProfile=etsysPortPolicyProfile, etsysPortPolicyProfileEntry=etsysPortPolicyProfileEntry, etsysPolicyEnabledTable=etsysPolicyEnabledTable, etsysPolicyRuleResult2=etsysPolicyRuleResult2, etsysPortPolicyProfileSummaryIndexType=etsysPortPolicyProfileSummaryIndexType, etsysPolicyRuleTciOverwriteCapabilities=etsysPolicyRuleTciOverwriteCapabilities, etsysStationPolicyProfileGroup=etsysStationPolicyProfileGroup, etsysPolicyProfileAuditSyslogEnable=etsysPolicyProfileAuditSyslogEnable, etsysPolicyProfileCompliance=etsysPolicyProfileCompliance, etsysPolicyRFC3580MapGroup=etsysPolicyRFC3580MapGroup, etsysPolicyProfileName=etsysPolicyProfileName, etsysPolicyRFC3580MapLastChange=etsysPolicyRFC3580MapLastChange, etsysPolicyProfileConformance=etsysPolicyProfileConformance, etsysPolicyRuleMirrorCapabilities=etsysPolicyRuleMirrorCapabilities, etsysPolicyProfileCompliances=etsysPolicyProfileCompliances, etsysPolicyDynaPIDRuleCapabilities=etsysPolicyDynaPIDRuleCapabilities, etsysPolicyClassificationNumEntries=etsysPolicyClassificationNumEntries, etsysPolicyRuleDefaultDynamicTrapStatus=etsysPolicyRuleDefaultDynamicTrapStatus, etsysPortPolicyProfileGroup=etsysPortPolicyProfileGroup, etsysPolicyRulePortType=etsysPolicyRulePortType, etsysPolicyMapPvidOverRide=etsysPolicyMapPvidOverRide, etsysPolicyProfileCompliance4=etsysPolicyProfileCompliance4, etsysPolicyRulePrefixBits=etsysPolicyRulePrefixBits, etsysPolicyRulePortHitNotificationGroup=etsysPolicyRulePortHitNotificationGroup, etsysPolicyMapUnknownPvidPolicy=etsysPolicyMapUnknownPvidPolicy, etsysPolicyRuleEntry=etsysPolicyRuleEntry, etsysPortPolicyProfileOperID=etsysPortPolicyProfileOperID, etsysPolicyRuleUsageList=etsysPolicyRuleUsageList, etsysPolicyProfileLastChange=etsysPolicyProfileLastChange, etsysStationPolicyProfileTable=etsysStationPolicyProfileTable, etsysPolicyRuleAttributeBitLength=etsysPolicyRuleAttributeBitLength, etsysPolicyRulePortTable=etsysPolicyRulePortTable, etsysStationPolicyProfileOperID=etsysStationPolicyProfileOperID, etsysPolicyProfileRulePrecedence=etsysPolicyProfileRulePrecedence, etsysPolicyCapability=etsysPolicyCapability, etsysPolicyCosRuleCapabilities=etsysPolicyCosRuleCapabilities, etsysDevicePolicyProfileDefault=etsysDevicePolicyProfileDefault, etsysPolicyRules=etsysPolicyRules, etsysPolicyMapRowStatus=etsysPolicyMapRowStatus, etsysPolicyProfileGroup=etsysPolicyProfileGroup, etsysPolicyProfileNumEntries=etsysPolicyProfileNumEntries, etsysPolicyProfilePriority=etsysPolicyProfilePriority, etsysPolicyMapEndVid=etsysPolicyMapEndVid, etsysDevicePolicyProfile=etsysDevicePolicyProfile, etsysPolicyProfileMaxEntries=etsysPolicyProfileMaxEntries, etsysPolicyNotifications=etsysPolicyNotifications, etsysPolicyRuleSylogEveryTime=etsysPolicyRuleSylogEveryTime, etsysPolicyVlanEgress=etsysPolicyVlanEgress, etsysPolicyRulePortHit=etsysPolicyRulePortHit, TriStateStatus=TriStateStatus, etsysPolicyProfileEntry=etsysPolicyProfileEntry, etsysPolicyProfileIndex=etsysPolicyProfileIndex, etsysPolicyEnabledEgressEnabled=etsysPolicyEnabledEgressEnabled, etsysPolicyClassificationMaxEntries=etsysPolicyClassificationMaxEntries, PolicyRFC3580MapRadiusResponseTC=PolicyRFC3580MapRadiusResponseTC, etsysPortPolicyProfileAdminID=etsysPortPolicyProfileAdminID, etsysPolicyProfileGroup3=etsysPolicyProfileGroup3, etsysPolicyProfileCompliance5=etsysPolicyProfileCompliance5, etsysStationPolicyProfile=etsysStationPolicyProfile, etsysStationPolicyProfileEntry=etsysStationPolicyProfileEntry, etsysPolicyRuleProfileIndex=etsysPolicyRuleProfileIndex, etsysPolicyRFC3580MapPolicyIndex=etsysPolicyRFC3580MapPolicyIndex, etsysPolicyRuleData=etsysPolicyRuleData, etsysPolicySupportedPortList=etsysPolicySupportedPortList, etsysPolicyRuleRowStatus=etsysPolicyRuleRowStatus, etsysPolicyProfileForbiddenVlans=etsysPolicyProfileForbiddenVlans, etsysPolicyProfileTableNextAvailableIndex=etsysPolicyProfileTableNextAvailableIndex, etsysPolicyProfileUsageList=etsysPolicyProfileUsageList, etsysPolicyRulesMaxEntries=etsysPolicyRulesMaxEntries, etsysPolicyProfile=etsysPolicyProfile, etsysPolicyClassificationTable=etsysPolicyClassificationTable, etsysPolicyRuleStatsAutoClearOnLink=etsysPolicyRuleStatsAutoClearOnLink, etsysStationIdentifier=etsysStationIdentifier, etsysPolicyRuleAttributeByteLength=etsysPolicyRuleAttributeByteLength, etsysPortPolicyProfileTable=etsysPortPolicyProfileTable, etsysPolicyClassificationGroup=etsysPolicyClassificationGroup, etsysPolicyAdminPIDRuleCapabilities=etsysPolicyAdminPIDRuleCapabilities, etsysPolicyProfileRowStatus=etsysPolicyProfileRowStatus, etsysPolicyMapTable=etsysPolicyMapTable, etsysPolicyRulesGroup3=etsysPolicyRulesGroup3, etsysPolicyRuleStorageType=etsysPolicyRuleStorageType, etsysPolicyForwardRuleCapabilities=etsysPolicyForwardRuleCapabilities, etsysPolicyRuleOperPid=etsysPolicyRuleOperPid, etsysPolicyRulesNumEntries=etsysPolicyRulesNumEntries, etsysPolicyRulesGroup4=etsysPolicyRulesGroup4, etsysPolicyProfileOverwriteTCI=etsysPolicyProfileOverwriteTCI, PortPolicyProfileIndexTypeTC=PortPolicyProfileIndexTypeTC, etsysPolicyClassificationIndex=etsysPolicyClassificationIndex, etsysPolicyCapabilitiesGroup=etsysPolicyCapabilitiesGroup, etsysPolicyRuleTable=etsysPolicyRuleTable, etsysPortPolicyProfileSummaryTable=etsysPortPolicyProfileSummaryTable, etsysPolicyRuleMirrorIndex=etsysPolicyRuleMirrorIndex, etsysStationIdentifierType=etsysStationIdentifierType, etsysPolicyClassificationOID=etsysPolicyClassificationOID, etsysPolicyProfileCompliance7=etsysPolicyProfileCompliance7, etsysPolicyMapNumEntries=etsysPolicyMapNumEntries, etsysPolicyProfileEgressVlans=etsysPolicyProfileEgressVlans, etsysPolicyRFC3580MapInvalidMapping=etsysPolicyRFC3580MapInvalidMapping, etsysInvalidPolicyCount=etsysInvalidPolicyCount, etsysPolicyProfileUntaggedVlans=etsysPolicyProfileUntaggedVlans, etsysPolicyRuleSylogMachineReadableFormat=etsysPolicyRuleSylogMachineReadableFormat, PolicyRulesSupported=PolicyRulesSupported, etsysPortPolicyProfileSummaryEntry=etsysPortPolicyProfileSummaryEntry)
