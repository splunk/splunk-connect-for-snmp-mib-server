#
# PySNMP MIB module HH3C-FC-TRACE-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-FC-TRACE-ROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
Hh3cFcVsanIndex, Hh3cFcAddressType, Hh3cFcStartOper, Hh3cFcNameId, Hh3cFcAddress = mibBuilder.importSymbols("HH3C-FC-TC-MIB", "Hh3cFcVsanIndex", "Hh3cFcAddressType", "Hh3cFcStartOper", "Hh3cFcNameId", "Hh3cFcAddress")
hh3cSan, = mibBuilder.importSymbols("HH3C-VSAN-MIB", "hh3cSan")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, Bits, TimeTicks, Gauge32, NotificationType, Counter32, ModuleIdentity, MibIdentifier, Integer32, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "Bits", "TimeTicks", "Gauge32", "NotificationType", "Counter32", "ModuleIdentity", "MibIdentifier", "Integer32", "Counter64", "IpAddress", "Unsigned32")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
hh3cFcTraceRoute = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4))
hh3cFcTraceRoute.setRevisions(('2013-02-27 00:00',))
if mibBuilder.loadTexts: hh3cFcTraceRoute.setLastUpdated('201302270000Z')
if mibBuilder.loadTexts: hh3cFcTraceRoute.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cFcTraceRouteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1))
hh3cFcTraceRouteConfigurations = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1))
hh3cFcTraceRouteResults = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 2))
hh3cFcTraceRouteNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 3))
hh3cFcTraceRouteNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 3, 0))
hh3cFcTraceRouteTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cFcTraceRouteTable.setStatus('current')
hh3cFcTraceRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteIndex"))
if mibBuilder.loadTexts: hh3cFcTraceRouteEntry.setStatus('current')
hh3cFcTraceRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cFcTraceRouteIndex.setStatus('current')
hh3cFcTraceRouteVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 2), Hh3cFcVsanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteVsan.setStatus('current')
hh3cFcTraceRouteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 3), Hh3cFcAddressType().clone('fcid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteAddressType.setStatus('current')
hh3cFcTraceRouteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 4), Hh3cFcAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteAddress.setStatus('current')
hh3cFcTraceRouteTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteTimeout.setStatus('current')
hh3cFcTraceRouteAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 6), Hh3cFcStartOper().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteAdminStatus.setStatus('current')
hh3cFcTraceRouteOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("partialSuccess", 3), ("failure", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcTraceRouteOperStatus.setStatus('current')
hh3cFcTraceRouteAgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 900)).clone(500)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteAgeInterval.setStatus('current')
hh3cFcTraceRouteTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteTrapOnCompletion.setStatus('current')
hh3cFcTraceRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcTraceRouteRowStatus.setStatus('current')
hh3cFcTraceRouteHopsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cFcTraceRouteHopsTable.setStatus('current')
hh3cFcTraceRouteHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteIndex"), (0, "HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteHopsIndex"))
if mibBuilder.loadTexts: hh3cFcTraceRouteHopsEntry.setStatus('current')
hh3cFcTraceRouteHopsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cFcTraceRouteHopsIndex.setStatus('current')
hh3cFcTraceRouteHopsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 2, 1, 1, 2), Hh3cFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcTraceRouteHopsAddr.setStatus('current')
hh3cFcTraceRouteCompletionNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 4, 1, 3, 0, 1)).setObjects(("HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteIndex"), ("HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteVsan"), ("HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteAddressType"), ("HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteAddress"), ("HH3C-FC-TRACE-ROUTE-MIB", "hh3cFcTraceRouteOperStatus"))
if mibBuilder.loadTexts: hh3cFcTraceRouteCompletionNotify.setStatus('current')
mibBuilder.exportSymbols("HH3C-FC-TRACE-ROUTE-MIB", hh3cFcTraceRouteIndex=hh3cFcTraceRouteIndex, hh3cFcTraceRouteRowStatus=hh3cFcTraceRouteRowStatus, hh3cFcTraceRouteAdminStatus=hh3cFcTraceRouteAdminStatus, hh3cFcTraceRouteNotifications=hh3cFcTraceRouteNotifications, hh3cFcTraceRoute=hh3cFcTraceRoute, hh3cFcTraceRouteHopsAddr=hh3cFcTraceRouteHopsAddr, hh3cFcTraceRouteAgeInterval=hh3cFcTraceRouteAgeInterval, hh3cFcTraceRouteObjects=hh3cFcTraceRouteObjects, hh3cFcTraceRouteTrapOnCompletion=hh3cFcTraceRouteTrapOnCompletion, hh3cFcTraceRouteTimeout=hh3cFcTraceRouteTimeout, hh3cFcTraceRouteOperStatus=hh3cFcTraceRouteOperStatus, hh3cFcTraceRouteCompletionNotify=hh3cFcTraceRouteCompletionNotify, hh3cFcTraceRouteNotifyPrefix=hh3cFcTraceRouteNotifyPrefix, hh3cFcTraceRouteEntry=hh3cFcTraceRouteEntry, hh3cFcTraceRouteHopsIndex=hh3cFcTraceRouteHopsIndex, hh3cFcTraceRouteHopsTable=hh3cFcTraceRouteHopsTable, hh3cFcTraceRouteHopsEntry=hh3cFcTraceRouteHopsEntry, hh3cFcTraceRouteAddressType=hh3cFcTraceRouteAddressType, PYSNMP_MODULE_ID=hh3cFcTraceRoute, hh3cFcTraceRouteResults=hh3cFcTraceRouteResults, hh3cFcTraceRouteVsan=hh3cFcTraceRouteVsan, hh3cFcTraceRouteAddress=hh3cFcTraceRouteAddress, hh3cFcTraceRouteConfigurations=hh3cFcTraceRouteConfigurations, hh3cFcTraceRouteTable=hh3cFcTraceRouteTable)
