#
# PySNMP MIB module CISCO-STP-EXTENSIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-STP-EXTENSIONS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:56:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
dot1dStpPortEntry, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dStpPortEntry")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
VlanIndex, vlanTrunkPortEntry, vtpVlanEditEntry, vtpVlanEntry = mibBuilder.importSymbols("CISCO-VTP-MIB", "VlanIndex", "vlanTrunkPortEntry", "vtpVlanEditEntry", "vtpVlanEntry")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, TimeTicks, Gauge32, IpAddress, Integer32, Bits, Counter32, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "TimeTicks", "Gauge32", "IpAddress", "Integer32", "Bits", "Counter32", "iso", "ObjectIdentity")
DisplayString, TimeStamp, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "RowStatus", "TruthValue", "TextualConvention")
ciscoStpExtensionsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 82))
ciscoStpExtensionsMIB.setRevisions(('2013-03-07 00:00', '2005-12-20 00:00', '2005-04-12 00:00', '2004-07-21 00:00', '2004-04-08 00:00', '2004-01-14 00:00', '2003-10-23 00:00', '2002-07-11 00:00', '2001-12-06 00:00', '2001-09-14 00:00', '2001-06-20 00:00', '2001-04-12 00:00', '2000-05-23 00:00', '2000-03-21 00:00', '1997-11-10 12:00', '1997-08-19 12:00',))
if mibBuilder.loadTexts: ciscoStpExtensionsMIB.setLastUpdated('201303070000Z')
if mibBuilder.loadTexts: ciscoStpExtensionsMIB.setOrganization('Cisco Systems, Inc.')
stpxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1))
stpxUplinkFastObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 1))
stpxVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2))
stpxInconsistencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 3))
stpxBackboneFastObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4))
stpxRootGuardObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5))
stpxSpanningTreeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6))
stpxMISTPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7))
stpxLoopGuardObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8))
stpxFastStartObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9))
stpxBpduSkewingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10))
stpxMSTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11))
stpxRSTPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12))
stpxRPVSTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 13))
stpxSMSTObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14))
stpxNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 2))
class StpxMSTConfigurationDigest(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

stpxUplinkFastEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxUplinkFastEnabled.setStatus('current')
stpxUplinkFastTransitions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 1, 2), Counter32()).setUnits('transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxUplinkFastTransitions.setStatus('current')
stpxUplinkStationLearningGenRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000))).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxUplinkStationLearningGenRate.setStatus('current')
stpxUplinkStationLearningFrames = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxUplinkStationLearningFrames.setStatus('current')
stpxUplinkFastOperEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxUplinkFastOperEnabled.setStatus('current')
stpxPreferredVlansTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 1), )
if mibBuilder.loadTexts: stpxPreferredVlansTable.setStatus('current')
stpxPreferredVlansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 1, 1), )
vlanTrunkPortEntry.registerAugmentions(("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansEntry"))
stpxPreferredVlansEntry.setIndexNames(*vlanTrunkPortEntry.getIndexNames())
if mibBuilder.loadTexts: stpxPreferredVlansEntry.setStatus('current')
stpxPreferredVlansMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPreferredVlansMap.setStatus('current')
stpxPreferredVlansMap2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPreferredVlansMap2k.setStatus('current')
stpxPreferredVlansMap3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPreferredVlansMap3k.setStatus('current')
stpxPreferredVlansMap4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPreferredVlansMap4k.setStatus('current')
stpxPVSTVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 2), )
if mibBuilder.loadTexts: stpxPVSTVlanTable.setStatus('current')
stpxPVSTVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanIndex"))
if mibBuilder.loadTexts: stpxPVSTVlanEntry.setStatus('current')
stpxPVSTVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: stpxPVSTVlanIndex.setStatus('current')
stpxPVSTVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("notApplicable", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPVSTVlanEnable.setStatus('current')
stpxInconsistencyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 3, 1), )
if mibBuilder.loadTexts: stpxInconsistencyTable.setStatus('current')
stpxInconsistencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxVlanIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxPortIndex"))
if mibBuilder.loadTexts: stpxInconsistencyEntry.setStatus('current')
stpxVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 3, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: stpxVlanIndex.setStatus('current')
stpxPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxPortIndex.setStatus('current')
stpxInconsistentState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 3, 1, 1, 3), Bits().clone(namedValues=NamedValues(("typeInconsistent", 0), ("pvidInconsistent", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxInconsistentState.setStatus('current')
stpxBackboneFastEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxBackboneFastEnabled.setStatus('current')
stpxBackboneFastInInferiorBPDUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBackboneFastInInferiorBPDUs.setStatus('current')
stpxBackboneFastInRLQRequestPDUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBackboneFastInRLQRequestPDUs.setStatus('current')
stpxBackboneFastInRLQResponsePDUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBackboneFastInRLQResponsePDUs.setStatus('current')
stpxBackboneFastOutRLQRequestPDUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBackboneFastOutRLQRequestPDUs.setStatus('current')
stpxBackboneFastOutRLQResponsePDUs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBackboneFastOutRLQResponsePDUs.setStatus('current')
stpxBackboneFastOperEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 4, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBackboneFastOperEnabled.setStatus('current')
stpxRootGuardConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 1), )
if mibBuilder.loadTexts: stpxRootGuardConfigTable.setStatus('current')
stpxRootGuardConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardConfigPortIndex"))
if mibBuilder.loadTexts: stpxRootGuardConfigEntry.setStatus('current')
stpxRootGuardConfigPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxRootGuardConfigPortIndex.setStatus('current')
stpxRootGuardConfigEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxRootGuardConfigEnabled.setStatus('current')
stpxRootInconsistencyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 2), )
if mibBuilder.loadTexts: stpxRootInconsistencyTable.setStatus('current')
stpxRootInconsistencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyPortIndex"))
if mibBuilder.loadTexts: stpxRootInconsistencyEntry.setStatus('current')
stpxRootInconsistencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: stpxRootInconsistencyIndex.setStatus('current')
stpxRootInconsistencyPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxRootInconsistencyPortIndex.setStatus('current')
stpxRootInconsistencyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 5, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxRootInconsistencyState.setStatus('current')
stpxSpanningTreeType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("pvstPlus", 1), ("mistp", 2), ("mistpPvstPlus", 3), ("mst", 4), ("rapidPvstPlus", 5))).clone('pvstPlus')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxSpanningTreeType.setStatus('current')
stpxSpanningTreePathCostMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("short", 1), ("long", 2))).clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxSpanningTreePathCostMode.setStatus('current')
stpxLongStpPortPathCostTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 3), )
if mibBuilder.loadTexts: stpxLongStpPortPathCostTable.setStatus('current')
stpxLongStpPortPathCostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 3, 1), )
dot1dStpPortEntry.registerAugmentions(("CISCO-STP-EXTENSIONS-MIB", "stpxLongStpPortPathCostEntry"))
stpxLongStpPortPathCostEntry.setIndexNames(*dot1dStpPortEntry.getIndexNames())
if mibBuilder.loadTexts: stpxLongStpPortPathCostEntry.setStatus('current')
stpxLongStpPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 3, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxLongStpPortPathCost.setStatus('current')
stpxExtendedSysIDAdminEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxExtendedSysIDAdminEnabled.setStatus('current')
stpxExtendedSysIDOperEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxExtendedSysIDOperEnabled.setStatus('current')
stpxNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 6), Bits().clone(namedValues=NamedValues(("newRoot", 0), ("topologyChange", 1), ("inconsistency", 2), ("rootInconsistency", 3), ("loopInconsistency", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxNotificationEnable.setStatus('current')
stpxSpanningTreePathCostOperMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("short", 1), ("long", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSpanningTreePathCostOperMode.setStatus('current')
stpxMISTPInstanceNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMISTPInstanceNumber.setStatus('current')
stpxMISTPInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2), )
if mibBuilder.loadTexts: stpxMISTPInstanceTable.setStatus('current')
stpxMISTPInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceIndex"))
if mibBuilder.loadTexts: stpxMISTPInstanceEntry.setStatus('current')
stpxMISTPInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: stpxMISTPInstanceIndex.setStatus('current')
stpxMISTPInstanceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMISTPInstanceEnable.setStatus('current')
stpxMISTPInstanceVlansMapped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMISTPInstanceVlansMapped.setStatus('current')
stpxMISTPInstanceVlansMapped2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMISTPInstanceVlansMapped2k.setStatus('current')
stpxMISTPInstanceVlansMapped3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMISTPInstanceVlansMapped3k.setStatus('current')
stpxMISTPInstanceVlansMapped4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMISTPInstanceVlansMapped4k.setStatus('current')
stpxVlanMISTPInstMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 3), )
if mibBuilder.loadTexts: stpxVlanMISTPInstMapTable.setStatus('current')
stpxVlanMISTPInstMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 3, 1), )
vtpVlanEntry.registerAugmentions(("CISCO-STP-EXTENSIONS-MIB", "stpxVlanMISTPInstMapEntry"))
stpxVlanMISTPInstMapEntry.setIndexNames(*vtpVlanEntry.getIndexNames())
if mibBuilder.loadTexts: stpxVlanMISTPInstMapEntry.setStatus('current')
stpxVlanMISTPInstMapInstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxVlanMISTPInstMapInstIndex.setStatus('current')
stpxVlanMISTPInstMapEditTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 4), )
if mibBuilder.loadTexts: stpxVlanMISTPInstMapEditTable.setStatus('current')
stpxVlanMISTPInstMapEditEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 4, 1), )
vtpVlanEditEntry.registerAugmentions(("CISCO-STP-EXTENSIONS-MIB", "stpxVlanMISTPInstMapEditEntry"))
stpxVlanMISTPInstMapEditEntry.setIndexNames(*vtpVlanEditEntry.getIndexNames())
if mibBuilder.loadTexts: stpxVlanMISTPInstMapEditEntry.setStatus('current')
stpxVlanMISTPInstMapEditInstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stpxVlanMISTPInstMapEditInstIndex.setStatus('current')
stpxPreferredMISTPInstancesTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 5), )
if mibBuilder.loadTexts: stpxPreferredMISTPInstancesTable.setStatus('current')
stpxPreferredMISTPInstancesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 5, 1), )
vlanTrunkPortEntry.registerAugmentions(("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMISTPInstancesEntry"))
stpxPreferredMISTPInstancesEntry.setIndexNames(*vlanTrunkPortEntry.getIndexNames())
if mibBuilder.loadTexts: stpxPreferredMISTPInstancesEntry.setStatus('current')
stpxPreferredMISTPInstancesMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 7, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPreferredMISTPInstancesMap.setStatus('current')
stpxLoopGuardConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 1), )
if mibBuilder.loadTexts: stpxLoopGuardConfigTable.setStatus('current')
stpxLoopGuardConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardConfigPortIndex"))
if mibBuilder.loadTexts: stpxLoopGuardConfigEntry.setStatus('current')
stpxLoopGuardConfigPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxLoopGuardConfigPortIndex.setStatus('current')
stpxLoopGuardConfigEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxLoopGuardConfigEnabled.setStatus('deprecated')
stpxLoopGuardConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("default", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxLoopGuardConfigMode.setStatus('current')
stpxLoopInconsistencyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 2), )
if mibBuilder.loadTexts: stpxLoopInconsistencyTable.setStatus('current')
stpxLoopInconsistencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 2, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyPortIndex"))
if mibBuilder.loadTexts: stpxLoopInconsistencyEntry.setStatus('current')
stpxLoopInconsistencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: stpxLoopInconsistencyIndex.setStatus('current')
stpxLoopInconsistencyPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxLoopInconsistencyPortIndex.setStatus('current')
stpxLoopInconsistencyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxLoopInconsistencyState.setStatus('current')
stpxLoopGuardGlobalDefaultMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxLoopGuardGlobalDefaultMode.setStatus('current')
stpxFastStartBpduGuardEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartBpduGuardEnable.setStatus('current')
stpxFastStartBpduFilterEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartBpduFilterEnable.setStatus('current')
stpxFastStartPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3), )
if mibBuilder.loadTexts: stpxFastStartPortTable.setStatus('current')
stpxFastStartPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxFastStartPortIndex"))
if mibBuilder.loadTexts: stpxFastStartPortEntry.setStatus('current')
stpxFastStartPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxFastStartPortIndex.setStatus('current')
stpxFastStartPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartPortEnable.setStatus('deprecated')
stpxFastStartPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("enableForTrunk", 3), ("default", 4), ("network", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartPortMode.setStatus('current')
stpxFastStartPortBpduGuardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("default", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartPortBpduGuardMode.setStatus('current')
stpxFastStartPortBpduFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("default", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartPortBpduFilterMode.setStatus('current')
stpxFastStartGlobalDefaultMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxFastStartGlobalDefaultMode.setStatus('current')
stpxFastStartOperModeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 5), )
if mibBuilder.loadTexts: stpxFastStartOperModeTable.setStatus('current')
stpxFastStartOperModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 5, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModeInstIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModePortIndex"))
if mibBuilder.loadTexts: stpxFastStartOperModeEntry.setStatus('current')
stpxFastStartOperModeInstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: stpxFastStartOperModeInstIndex.setStatus('current')
stpxFastStartOperModePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxFastStartOperModePortIndex.setStatus('current')
stpxFastStartOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxFastStartOperMode.setStatus('current')
stpxBpduSkewingDetectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxBpduSkewingDetectionEnable.setStatus('current')
stpxBpduSkewingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2), )
if mibBuilder.loadTexts: stpxBpduSkewingTable.setStatus('current')
stpxBpduSkewingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingInstanceIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingPortIndex"))
if mibBuilder.loadTexts: stpxBpduSkewingEntry.setStatus('current')
stpxBpduSkewingInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: stpxBpduSkewingInstanceIndex.setStatus('current')
stpxBpduSkewingPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxBpduSkewingPortIndex.setStatus('current')
stpxBpduSkewingLastSkewDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2, 1, 3), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBpduSkewingLastSkewDuration.setStatus('current')
stpxBpduSkewingWorstSkewDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2, 1, 4), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBpduSkewingWorstSkewDuration.setStatus('current')
stpxBpduSkewingWorstSkewTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 10, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxBpduSkewingWorstSkewTime.setStatus('current')
stpxMSTMaxInstanceNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTMaxInstanceNumber.setStatus('deprecated')
stpxMSTRegionName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTRegionName.setStatus('current')
stpxMSTRegionRevision = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTRegionRevision.setStatus('deprecated')
stpxMSTInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4), )
if mibBuilder.loadTexts: stpxMSTInstanceTable.setStatus('deprecated')
stpxMSTInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceIndex"))
if mibBuilder.loadTexts: stpxMSTInstanceEntry.setStatus('deprecated')
stpxMSTInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)))
if mibBuilder.loadTexts: stpxMSTInstanceIndex.setStatus('deprecated')
stpxMSTInstanceVlansMapped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTInstanceVlansMapped.setStatus('deprecated')
stpxMSTInstanceVlansMapped2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTInstanceVlansMapped2k.setStatus('deprecated')
stpxMSTInstanceVlansMapped3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTInstanceVlansMapped3k.setStatus('deprecated')
stpxMSTInstanceVlansMapped4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTInstanceVlansMapped4k.setStatus('deprecated')
stpxMSTInstanceRemainingHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTInstanceRemainingHopCount.setStatus('deprecated')
stpxMSTRegionEditBufferStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("released", 1), ("acquiredBySnmp", 2), ("acquiredByNonSnmp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTRegionEditBufferStatus.setStatus('current')
stpxMSTRegionEditBufferOperation = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("acquire", 2), ("releaseWithForce", 3), ("commit", 4), ("rollBack", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTRegionEditBufferOperation.setStatus('current')
stpxMSTRegionEditName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTRegionEditName.setStatus('current')
stpxMSTRegionEditRevision = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTRegionEditRevision.setStatus('deprecated')
stpxMSTInstanceEditTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9), )
if mibBuilder.loadTexts: stpxMSTInstanceEditTable.setStatus('deprecated')
stpxMSTInstanceEditEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditIndex"))
if mibBuilder.loadTexts: stpxMSTInstanceEditEntry.setStatus('deprecated')
stpxMSTInstanceEditIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)))
if mibBuilder.loadTexts: stpxMSTInstanceEditIndex.setStatus('deprecated')
stpxMSTInstanceEditVlansMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTInstanceEditVlansMap.setStatus('deprecated')
stpxMSTInstanceEditVlansMap2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTInstanceEditVlansMap2k.setStatus('deprecated')
stpxMSTInstanceEditVlansMap3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTInstanceEditVlansMap3k.setStatus('deprecated')
stpxMSTInstanceEditVlansMap4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 9, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTInstanceEditVlansMap4k.setStatus('deprecated')
stpxPreferredMSTInstancesTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 10), )
if mibBuilder.loadTexts: stpxPreferredMSTInstancesTable.setStatus('deprecated')
stpxPreferredMSTInstancesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 10, 1), )
vlanTrunkPortEntry.registerAugmentions(("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMSTInstancesEntry"))
stpxPreferredMSTInstancesEntry.setIndexNames(*vlanTrunkPortEntry.getIndexNames())
if mibBuilder.loadTexts: stpxPreferredMSTInstancesEntry.setStatus('deprecated')
stpxPreferredMSTInstancesMap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxPreferredMSTInstancesMap.setStatus('deprecated')
stpxMSTPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11), )
if mibBuilder.loadTexts: stpxMSTPortTable.setStatus('deprecated')
stpxMSTPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortIndex"))
if mibBuilder.loadTexts: stpxMSTPortEntry.setStatus('deprecated')
stpxMSTPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxMSTPortIndex.setStatus('deprecated')
stpxMSTPortAdminLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pointToPoint", 1), ("shared", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTPortAdminLinkType.setStatus('deprecated')
stpxMSTPortOperLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pointToPoint", 1), ("shared", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTPortOperLinkType.setStatus('deprecated')
stpxMSTPortProtocolMigration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTPortProtocolMigration.setStatus('deprecated')
stpxMSTPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 11, 1, 5), Bits().clone(namedValues=NamedValues(("edge", 0), ("boundary", 1), ("pvst", 2), ("stp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTPortStatus.setStatus('deprecated')
stpxMSTPortRoleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 12), )
if mibBuilder.loadTexts: stpxMSTPortRoleTable.setStatus('deprecated')
stpxMSTPortRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 12, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortRoleInstanceIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortRolePortIndex"))
if mibBuilder.loadTexts: stpxMSTPortRoleEntry.setStatus('deprecated')
stpxMSTPortRoleInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256)))
if mibBuilder.loadTexts: stpxMSTPortRoleInstanceIndex.setStatus('deprecated')
stpxMSTPortRolePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxMSTPortRolePortIndex.setStatus('deprecated')
stpxMSTPortRoleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("root", 2), ("designated", 3), ("alternate", 4), ("backUp", 5), ("boundary", 6), ("master", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxMSTPortRoleValue.setStatus('deprecated')
stpxMSTMaxHopCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 11, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxMSTMaxHopCount.setStatus('deprecated')
stpxRSTPPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 1), )
if mibBuilder.loadTexts: stpxRSTPPortTable.setStatus('current')
stpxRSTPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 1, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortIndex"))
if mibBuilder.loadTexts: stpxRSTPPortEntry.setStatus('current')
stpxRSTPPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxRSTPPortIndex.setStatus('current')
stpxRSTPPortAdminLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pointToPoint", 1), ("shared", 2), ("auto", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxRSTPPortAdminLinkType.setStatus('current')
stpxRSTPPortOperLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pointToPoint", 1), ("shared", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxRSTPPortOperLinkType.setStatus('current')
stpxRSTPPortProtocolMigration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxRSTPPortProtocolMigration.setStatus('current')
stpxRSTPPortRoleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 2), )
if mibBuilder.loadTexts: stpxRSTPPortRoleTable.setStatus('current')
stpxRSTPPortRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 2, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortRoleInstanceIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortRolePortIndex"))
if mibBuilder.loadTexts: stpxRSTPPortRoleEntry.setStatus('current')
stpxRSTPPortRoleInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: stpxRSTPPortRoleInstanceIndex.setStatus('current')
stpxRSTPPortRolePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxRSTPPortRolePortIndex.setStatus('current')
stpxRSTPPortRoleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disabled", 1), ("root", 2), ("designated", 3), ("alternate", 4), ("backUp", 5), ("boundary", 6), ("master", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxRSTPPortRoleValue.setStatus('current')
stpxRSTPTransmitHoldCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 12, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxRSTPTransmitHoldCount.setStatus('current')
stpxRPVSTPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 13, 1), )
if mibBuilder.loadTexts: stpxRPVSTPortTable.setStatus('current')
stpxRPVSTPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 13, 1, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTPortVlanIndex"), (0, "CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTPortIndex"))
if mibBuilder.loadTexts: stpxRPVSTPortEntry.setStatus('current')
stpxRPVSTPortVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 13, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: stpxRPVSTPortVlanIndex.setStatus('current')
stpxRPVSTPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxRPVSTPortIndex.setStatus('current')
stpxRPVSTPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 13, 1, 1, 3), Bits().clone(namedValues=NamedValues(("edge", 0), ("unused1", 1), ("unused2", 2), ("stp", 3), ("dispute", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxRPVSTPortStatus.setStatus('current')
stpxSMSTMaxInstances = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTMaxInstances.setStatus('current')
stpxSMSTMaxInstanceID = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTMaxInstanceID.setStatus('current')
stpxSMSTRegionRevision = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTRegionRevision.setStatus('current')
stpxSMSTRegionEditRevision = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxSMSTRegionEditRevision.setStatus('current')
stpxSMSTInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5), )
if mibBuilder.loadTexts: stpxSMSTInstanceTable.setStatus('current')
stpxSMSTInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceIndex"))
if mibBuilder.loadTexts: stpxSMSTInstanceEntry.setStatus('current')
stpxSMSTInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: stpxSMSTInstanceIndex.setStatus('current')
stpxSMSTInstanceVlansMapped1k2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTInstanceVlansMapped1k2k.setStatus('current')
stpxSMSTInstanceVlansMapped3k4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTInstanceVlansMapped3k4k.setStatus('current')
stpxSMSTInstanceRemainingHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTInstanceRemainingHopCount.setStatus('current')
stpxSMSTInstanceCISTRegionalRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTInstanceCISTRegionalRoot.setStatus('current')
stpxSMSTInstanceCISTIntRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTInstanceCISTIntRootCost.setStatus('current')
stpxSMSTInstanceEditTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 6), )
if mibBuilder.loadTexts: stpxSMSTInstanceEditTable.setStatus('current')
stpxSMSTInstanceEditEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 6, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditIndex"))
if mibBuilder.loadTexts: stpxSMSTInstanceEditEntry.setStatus('current')
stpxSMSTInstanceEditIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: stpxSMSTInstanceEditIndex.setStatus('current')
stpxSMSTInstanceEditVlansMap1k2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stpxSMSTInstanceEditVlansMap1k2k.setStatus('current')
stpxSMSTInstanceEditVlansMap3k4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stpxSMSTInstanceEditVlansMap3k4k.setStatus('current')
stpxSMSTInstanceEditRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stpxSMSTInstanceEditRowStatus.setStatus('current')
stpxSMSTPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7), )
if mibBuilder.loadTexts: stpxSMSTPortTable.setStatus('current')
stpxSMSTPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1), ).setIndexNames((0, "CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortIndex"))
if mibBuilder.loadTexts: stpxSMSTPortEntry.setStatus('current')
stpxSMSTPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: stpxSMSTPortIndex.setStatus('current')
stpxSMSTPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 2), Bits().clone(namedValues=NamedValues(("edge", 0), ("boundary", 1), ("pvst", 2), ("stp", 3), ("dispute", 4), ("rstp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTPortStatus.setStatus('current')
stpxSMSTPortAdminHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 3), Unsigned32()).setUnits('hundredth of seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxSMSTPortAdminHelloTime.setStatus('current')
stpxSMSTPortConfigedHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 4), Unsigned32()).setUnits('hundredth of seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTPortConfigedHelloTime.setStatus('current')
stpxSMSTPortOperHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('hundredth of seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTPortOperHelloTime.setStatus('current')
stpxSMSTPortAdminMSTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("preStandard", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxSMSTPortAdminMSTMode.setStatus('current')
stpxSMSTPortOperMSTMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("preStandard", 2), ("standard", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTPortOperMSTMode.setStatus('current')
stpxSMSTMaxHopCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpxSMSTMaxHopCount.setStatus('current')
stpxSMSTConfigDigest = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 9), StpxMSTConfigurationDigest()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTConfigDigest.setStatus('current')
stpxSMSTConfigPreStandardDigest = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 82, 1, 14, 10), StpxMSTConfigurationDigest()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpxSMSTConfigPreStandardDigest.setStatus('current')
stpxNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 2, 0))
stpxInconsistencyUpdate = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 82, 2, 0, 1)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxInconsistentState"))
if mibBuilder.loadTexts: stpxInconsistencyUpdate.setStatus('current')
stpxRootInconsistencyUpdate = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 82, 2, 0, 2)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyState"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeType"))
if mibBuilder.loadTexts: stpxRootInconsistencyUpdate.setStatus('current')
stpxLoopInconsistencyUpdate = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 82, 2, 0, 3)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyState"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeType"))
if mibBuilder.loadTexts: stpxLoopInconsistencyUpdate.setStatus('current')
stpxMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 3))
stpxMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1))
stpxMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2))
stpxMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 1)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance = stpxMIBCompliance.setStatus('deprecated')
stpxMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 2)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance2 = stpxMIBCompliance2.setStatus('deprecated')
stpxMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 3)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance3 = stpxMIBCompliance3.setStatus('deprecated')
stpxMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 4)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance4 = stpxMIBCompliance4.setStatus('deprecated')
stpxMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 5)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance5 = stpxMIBCompliance5.setStatus('deprecated')
stpxMIBCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 6)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMSTInstancesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance6 = stpxMIBCompliance6.setStatus('deprecated')
stpxMIBCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 7)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMSTInstancesGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance7 = stpxMIBCompliance7.setStatus('deprecated')
stpxMIBCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 8)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMSTInstancesGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationEnableGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance8 = stpxMIBCompliance8.setStatus('deprecated')
stpxMIBCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 9)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationEnableGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortStatusGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortHelloTimeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance9 = stpxMIBCompliance9.setStatus('deprecated')
stpxMIBCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 10)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationEnableGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortStatusGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortHelloTimeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceCISTGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance10 = stpxMIBCompliance10.setStatus('deprecated')
stpxMIBCompliance11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 11)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationEnableGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortStatusGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortHelloTimeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceCISTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPathCostOperModeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance11 = stpxMIBCompliance11.setStatus('deprecated')
stpxMIBCompliance12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 1, 12)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSstpGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpx4kVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongPathCostModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyNotificationsGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGroup3"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneGroup2"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPTransmitHoldCountGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationEnableGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTGroup4"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTMaxHopCountGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortStatusGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortHelloTimeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceCISTGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPathCostOperModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortMSTModeGroup"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTConfigDigestGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMIBCompliance12 = stpxMIBCompliance12.setStatus('current')
stpxUplinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 1)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkFastEnabled"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkFastTransitions"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkStationLearningGenRate"), ("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkStationLearningFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxUplinkGroup = stpxUplinkGroup.setStatus('current')
stpxPreferredVlansGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 2)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansMap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxPreferredVlansGroup = stpxPreferredVlansGroup.setStatus('current')
stpxSstpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 3)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxInconsistentState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSstpGroup = stpxSstpGroup.setStatus('current')
stpxNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 4)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxInconsistencyUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxNotificationsGroup = stpxNotificationsGroup.setStatus('current')
stpxBackboneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 5)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastEnabled"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastInInferiorBPDUs"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastInRLQRequestPDUs"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastInRLQResponsePDUs"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastOutRLQRequestPDUs"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastOutRLQResponsePDUs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxBackboneGroup = stpxBackboneGroup.setStatus('current')
stpxRootGuardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 6)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxRootGuardConfigEnabled"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxRootGuardGroup = stpxRootGuardGroup.setStatus('current')
stpxRootInconsistencyNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 7)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxRootInconsistencyUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxRootInconsistencyNotificationsGroup = stpxRootInconsistencyNotificationsGroup.setStatus('current')
stpx4kVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 8)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansMap2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansMap3k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredVlansMap4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpx4kVlanGroup = stpx4kVlanGroup.setStatus('current')
stpxSpanningTreeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 9)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreeType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSpanningTreeGroup = stpxSpanningTreeGroup.setStatus('current')
stpxMISTPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 10)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceNumber"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceEnable"), ("CISCO-STP-EXTENSIONS-MIB", "stpxVlanMISTPInstMapInstIndex"), ("CISCO-STP-EXTENSIONS-MIB", "stpxVlanMISTPInstMapEditInstIndex"), ("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMISTPInstancesMap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMISTPGroup = stpxMISTPGroup.setStatus('current')
stpxLongPathCostModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 11)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreePathCostMode"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLongStpPortPathCost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxLongPathCostModeGroup = stpxLongPathCostModeGroup.setStatus('current')
stpxPVSTVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 12)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxPVSTVlanEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxPVSTVlanGroup = stpxPVSTVlanGroup.setStatus('current')
stpxMISTPGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 13)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceVlansMapped"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceVlansMapped2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceVlansMapped3k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMISTPInstanceVlansMapped4k"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMISTPGroup2 = stpxMISTPGroup2.setStatus('current')
stpxLoopGuardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 14)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardConfigEnabled"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxLoopGuardGroup = stpxLoopGuardGroup.setStatus('deprecated')
stpxLoopInconsistencyNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 15)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxLoopInconsistencyNotificationsGroup = stpxLoopInconsistencyNotificationsGroup.setStatus('current')
stpxFastStartGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 16)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartBpduGuardEnable"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartBpduFilterEnable"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartPortEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxFastStartGroup = stpxFastStartGroup.setStatus('deprecated')
stpxBpduSkewingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 17)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingDetectionEnable"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingLastSkewDuration"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingWorstSkewDuration"), ("CISCO-STP-EXTENSIONS-MIB", "stpxBpduSkewingWorstSkewTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxBpduSkewingGroup = stpxBpduSkewingGroup.setStatus('current')
stpxFastStartGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 18)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartBpduGuardEnable"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartBpduFilterEnable"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartPortMode"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartGlobalDefaultMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxFastStartGroup2 = stpxFastStartGroup2.setStatus('current')
stpxLoopGuardGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 19)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxLoopInconsistencyState"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardConfigMode"), ("CISCO-STP-EXTENSIONS-MIB", "stpxLoopGuardGlobalDefaultMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxLoopGuardGroup2 = stpxLoopGuardGroup2.setStatus('current')
stpxMSTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 20)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxMSTMaxInstanceNumber"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionRevision"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped3k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped4k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceRemainingHopCount"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferStatus"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferOperation"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditRevision"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap3k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap4k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortAdminLinkType"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortOperLinkType"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortProtocolMigration"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortStatus"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortRoleValue"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTMaxHopCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMSTGroup = stpxMSTGroup.setStatus('deprecated')
stpxPreferredMSTInstancesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 21)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxPreferredMSTInstancesMap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxPreferredMSTInstancesGroup = stpxPreferredMSTInstancesGroup.setStatus('deprecated')
stpxFastStartGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 22)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartPortBpduGuardMode"), ("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartPortBpduFilterMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxFastStartGroup3 = stpxFastStartGroup3.setStatus('current')
stpxUplinkGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 23)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxUplinkFastOperEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxUplinkGroup2 = stpxUplinkGroup2.setStatus('current')
stpxBackboneGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 24)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxBackboneFastOperEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxBackboneGroup2 = stpxBackboneGroup2.setStatus('current')
stpxMSTGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 25)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxMSTMaxInstanceNumber"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionRevision"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped3k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceVlansMapped4k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceRemainingHopCount"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferStatus"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferOperation"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditRevision"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap3k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTInstanceEditVlansMap4k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTPortStatus"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTMaxHopCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMSTGroup2 = stpxMSTGroup2.setStatus('deprecated')
stpxRSTPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 26)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortAdminLinkType"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortOperLinkType"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortProtocolMigration"), ("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPPortRoleValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxRSTPGroup = stpxRSTPGroup.setStatus('current')
stpxRPVSTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 27)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxRPVSTPortStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxRPVSTGroup = stpxRPVSTGroup.setStatus('current')
stpxExtendedSysIDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 28)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDAdminEnabled"), ("CISCO-STP-EXTENSIONS-MIB", "stpxExtendedSysIDOperEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxExtendedSysIDGroup = stpxExtendedSysIDGroup.setStatus('current')
stpxNotificationEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 29)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxNotificationEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxNotificationEnableGroup = stpxNotificationEnableGroup.setStatus('current')
stpxFastStartOperModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 30)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxFastStartOperMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxFastStartOperModeGroup = stpxFastStartOperModeGroup.setStatus('current')
stpxMSTGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 31)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferStatus"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferOperation"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTMaxHopCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMSTGroup3 = stpxMSTGroup3.setStatus('deprecated')
stpxSMSTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 32)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTMaxInstances"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTMaxInstanceID"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTRegionRevision"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTRegionEditRevision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTGroup = stpxSMSTGroup.setStatus('current')
stpxSMSTInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 33)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceVlansMapped1k2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceVlansMapped3k4k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceRemainingHopCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTInstanceGroup = stpxSMSTInstanceGroup.setStatus('current')
stpxSMSTInstanceEditGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 34)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditVlansMap1k2k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditVlansMap3k4k"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceEditRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTInstanceEditGroup = stpxSMSTInstanceEditGroup.setStatus('current')
stpxSMSTPortStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 35)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTPortStatusGroup = stpxSMSTPortStatusGroup.setStatus('current')
stpxSMSTPortHelloTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 36)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortAdminHelloTime"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortConfigedHelloTime"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortOperHelloTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTPortHelloTimeGroup = stpxSMSTPortHelloTimeGroup.setStatus('current')
stpxSMSTInstanceCISTGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 37)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceCISTRegionalRoot"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTInstanceCISTIntRootCost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTInstanceCISTGroup = stpxSMSTInstanceCISTGroup.setStatus('current')
stpxPathCostOperModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 38)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSpanningTreePathCostOperMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxPathCostOperModeGroup = stpxPathCostOperModeGroup.setStatus('current')
stpxRSTPTransmitHoldCountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 39)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxRSTPTransmitHoldCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxRSTPTransmitHoldCountGroup = stpxRSTPTransmitHoldCountGroup.setStatus('current')
stpxSMSTPortMSTModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 40)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortAdminMSTMode"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTPortOperMSTMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTPortMSTModeGroup = stpxSMSTPortMSTModeGroup.setStatus('current')
stpxSMSTMaxHopCountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 41)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTMaxHopCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTMaxHopCountGroup = stpxSMSTMaxHopCountGroup.setStatus('current')
stpxSMSTConfigDigestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 42)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTConfigDigest"), ("CISCO-STP-EXTENSIONS-MIB", "stpxSMSTConfigPreStandardDigest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxSMSTConfigDigestGroup = stpxSMSTConfigDigestGroup.setStatus('current')
stpxMSTGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 82, 3, 2, 43)).setObjects(("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionName"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferStatus"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditBufferOperation"), ("CISCO-STP-EXTENSIONS-MIB", "stpxMSTRegionEditName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    stpxMSTGroup4 = stpxMSTGroup4.setStatus('current')
mibBuilder.exportSymbols("CISCO-STP-EXTENSIONS-MIB", stpxMIBCompliance2=stpxMIBCompliance2, stpxBackboneFastInRLQRequestPDUs=stpxBackboneFastInRLQRequestPDUs, stpxFastStartOperModeInstIndex=stpxFastStartOperModeInstIndex, stpxPathCostOperModeGroup=stpxPathCostOperModeGroup, stpxRootGuardConfigEntry=stpxRootGuardConfigEntry, stpxSMSTInstanceEditVlansMap3k4k=stpxSMSTInstanceEditVlansMap3k4k, stpxSMSTConfigDigest=stpxSMSTConfigDigest, stpxFastStartGroup3=stpxFastStartGroup3, stpxVlanMISTPInstMapTable=stpxVlanMISTPInstMapTable, stpxFastStartPortMode=stpxFastStartPortMode, stpxRSTPPortIndex=stpxRSTPPortIndex, stpxSpanningTreeGroup=stpxSpanningTreeGroup, stpxSMSTInstanceEditTable=stpxSMSTInstanceEditTable, PYSNMP_MODULE_ID=ciscoStpExtensionsMIB, stpxPreferredVlansMap4k=stpxPreferredVlansMap4k, stpxUplinkFastTransitions=stpxUplinkFastTransitions, stpxRSTPPortRolePortIndex=stpxRSTPPortRolePortIndex, stpxSMSTInstanceCISTGroup=stpxSMSTInstanceCISTGroup, stpxRSTPPortEntry=stpxRSTPPortEntry, stpxFastStartGroup=stpxFastStartGroup, stpxFastStartOperMode=stpxFastStartOperMode, stpxMIBCompliance8=stpxMIBCompliance8, stpxBackboneFastInInferiorBPDUs=stpxBackboneFastInInferiorBPDUs, stpxBpduSkewingWorstSkewTime=stpxBpduSkewingWorstSkewTime, stpxSstpGroup=stpxSstpGroup, stpxPreferredMSTInstancesMap=stpxPreferredMSTInstancesMap, stpxSMSTPortAdminMSTMode=stpxSMSTPortAdminMSTMode, stpxRootInconsistencyUpdate=stpxRootInconsistencyUpdate, stpxPreferredVlansEntry=stpxPreferredVlansEntry, stpxBpduSkewingWorstSkewDuration=stpxBpduSkewingWorstSkewDuration, stpxRSTPPortProtocolMigration=stpxRSTPPortProtocolMigration, stpxPreferredVlansMap3k=stpxPreferredVlansMap3k, stpxMSTGroup4=stpxMSTGroup4, stpxMSTPortRoleTable=stpxMSTPortRoleTable, stpxLoopGuardConfigEnabled=stpxLoopGuardConfigEnabled, stpxFastStartPortIndex=stpxFastStartPortIndex, stpxVlanMISTPInstMapEditEntry=stpxVlanMISTPInstMapEditEntry, stpxRootInconsistencyPortIndex=stpxRootInconsistencyPortIndex, stpxMSTInstanceVlansMapped3k=stpxMSTInstanceVlansMapped3k, stpxFastStartGroup2=stpxFastStartGroup2, stpxUplinkFastEnabled=stpxUplinkFastEnabled, stpxRootInconsistencyIndex=stpxRootInconsistencyIndex, stpxMSTPortAdminLinkType=stpxMSTPortAdminLinkType, stpxMSTPortRoleInstanceIndex=stpxMSTPortRoleInstanceIndex, stpxSMSTMaxHopCountGroup=stpxSMSTMaxHopCountGroup, stpxRootGuardObjects=stpxRootGuardObjects, stpxLoopGuardGlobalDefaultMode=stpxLoopGuardGlobalDefaultMode, stpxMSTInstanceEditVlansMap2k=stpxMSTInstanceEditVlansMap2k, stpxObjects=stpxObjects, stpxSMSTPortConfigedHelloTime=stpxSMSTPortConfigedHelloTime, stpxMSTInstanceTable=stpxMSTInstanceTable, stpxMSTRegionEditBufferOperation=stpxMSTRegionEditBufferOperation, stpxMSTPortProtocolMigration=stpxMSTPortProtocolMigration, stpxMSTRegionEditRevision=stpxMSTRegionEditRevision, stpxSMSTObjects=stpxSMSTObjects, stpxMISTPInstanceVlansMapped3k=stpxMISTPInstanceVlansMapped3k, stpxRootGuardGroup=stpxRootGuardGroup, stpxMIBCompliances=stpxMIBCompliances, stpxUplinkStationLearningGenRate=stpxUplinkStationLearningGenRate, stpxSMSTInstanceRemainingHopCount=stpxSMSTInstanceRemainingHopCount, stpxBackboneFastEnabled=stpxBackboneFastEnabled, stpxMSTInstanceEditEntry=stpxMSTInstanceEditEntry, stpxSMSTPortOperHelloTime=stpxSMSTPortOperHelloTime, stpxMSTGroup2=stpxMSTGroup2, stpxVlanMISTPInstMapInstIndex=stpxVlanMISTPInstMapInstIndex, stpxSMSTPortIndex=stpxSMSTPortIndex, stpxFastStartObjects=stpxFastStartObjects, stpxRPVSTPortEntry=stpxRPVSTPortEntry, stpxInconsistencyObjects=stpxInconsistencyObjects, stpxUplinkStationLearningFrames=stpxUplinkStationLearningFrames, stpxNotificationEnableGroup=stpxNotificationEnableGroup, stpxBackboneFastOperEnabled=stpxBackboneFastOperEnabled, stpxLongStpPortPathCostEntry=stpxLongStpPortPathCostEntry, stpxMISTPInstanceEntry=stpxMISTPInstanceEntry, stpxMSTPortRoleValue=stpxMSTPortRoleValue, stpxMISTPGroup=stpxMISTPGroup, stpxRootGuardConfigTable=stpxRootGuardConfigTable, stpxMISTPInstanceVlansMapped=stpxMISTPInstanceVlansMapped, stpxMSTInstanceEntry=stpxMSTInstanceEntry, stpxMSTInstanceVlansMapped=stpxMSTInstanceVlansMapped, stpxSMSTInstanceVlansMapped1k2k=stpxSMSTInstanceVlansMapped1k2k, stpxPortIndex=stpxPortIndex, stpxRootGuardConfigPortIndex=stpxRootGuardConfigPortIndex, stpxLoopGuardConfigMode=stpxLoopGuardConfigMode, stpxSMSTInstanceCISTRegionalRoot=stpxSMSTInstanceCISTRegionalRoot, stpxSMSTPortEntry=stpxSMSTPortEntry, stpxSMSTPortStatus=stpxSMSTPortStatus, stpxSMSTMaxHopCount=stpxSMSTMaxHopCount, stpxLoopInconsistencyNotificationsGroup=stpxLoopInconsistencyNotificationsGroup, stpxLoopInconsistencyPortIndex=stpxLoopInconsistencyPortIndex, stpxSMSTPortOperMSTMode=stpxSMSTPortOperMSTMode, stpxLoopGuardConfigTable=stpxLoopGuardConfigTable, stpxLoopGuardGroup2=stpxLoopGuardGroup2, stpxSMSTConfigPreStandardDigest=stpxSMSTConfigPreStandardDigest, stpxFastStartPortTable=stpxFastStartPortTable, stpxRSTPTransmitHoldCount=stpxRSTPTransmitHoldCount, stpxMIBCompliance5=stpxMIBCompliance5, stpxMSTInstanceVlansMapped2k=stpxMSTInstanceVlansMapped2k, stpxUplinkFastOperEnabled=stpxUplinkFastOperEnabled, stpxSMSTInstanceEditIndex=stpxSMSTInstanceEditIndex, stpxBackboneFastOutRLQRequestPDUs=stpxBackboneFastOutRLQRequestPDUs, stpxBackboneFastOutRLQResponsePDUs=stpxBackboneFastOutRLQResponsePDUs, stpxMSTRegionEditName=stpxMSTRegionEditName, stpxMISTPInstanceVlansMapped2k=stpxMISTPInstanceVlansMapped2k, stpxMSTInstanceEditVlansMap3k=stpxMSTInstanceEditVlansMap3k, stpxSMSTInstanceCISTIntRootCost=stpxSMSTInstanceCISTIntRootCost, stpxFastStartBpduFilterEnable=stpxFastStartBpduFilterEnable, stpxFastStartPortEntry=stpxFastStartPortEntry, stpxLoopInconsistencyUpdate=stpxLoopInconsistencyUpdate, stpxRootInconsistencyNotificationsGroup=stpxRootInconsistencyNotificationsGroup, stpxMSTGroup=stpxMSTGroup, stpxMISTPInstanceIndex=stpxMISTPInstanceIndex, stpxMSTPortOperLinkType=stpxMSTPortOperLinkType, stpxPreferredVlansGroup=stpxPreferredVlansGroup, stpxSMSTInstanceEditVlansMap1k2k=stpxSMSTInstanceEditVlansMap1k2k, stpxVlanMISTPInstMapEditInstIndex=stpxVlanMISTPInstMapEditInstIndex, stpxFastStartPortEnable=stpxFastStartPortEnable, stpxPreferredVlansMap=stpxPreferredVlansMap, stpxLoopInconsistencyIndex=stpxLoopInconsistencyIndex, stpxRSTPPortRoleEntry=stpxRSTPPortRoleEntry, stpxNotificationsGroup=stpxNotificationsGroup, stpxExtendedSysIDOperEnabled=stpxExtendedSysIDOperEnabled, stpxMIBCompliance4=stpxMIBCompliance4, stpxMSTRegionEditBufferStatus=stpxMSTRegionEditBufferStatus, stpxMSTPortIndex=stpxMSTPortIndex, stpxMSTPortRoleEntry=stpxMSTPortRoleEntry, stpxPVSTVlanTable=stpxPVSTVlanTable, stpxSMSTPortStatusGroup=stpxSMSTPortStatusGroup, stpxBpduSkewingTable=stpxBpduSkewingTable, stpxRPVSTPortTable=stpxRPVSTPortTable, stpxPreferredVlansMap2k=stpxPreferredVlansMap2k, stpxMSTInstanceRemainingHopCount=stpxMSTInstanceRemainingHopCount, stpxBpduSkewingInstanceIndex=stpxBpduSkewingInstanceIndex, stpxVlanMISTPInstMapEditTable=stpxVlanMISTPInstMapEditTable, stpxMSTPortStatus=stpxMSTPortStatus, stpxPVSTVlanEntry=stpxPVSTVlanEntry, stpxFastStartOperModePortIndex=stpxFastStartOperModePortIndex, stpxMSTInstanceEditTable=stpxMSTInstanceEditTable, stpxFastStartBpduGuardEnable=stpxFastStartBpduGuardEnable, stpxSMSTPortTable=stpxSMSTPortTable, stpxSMSTPortHelloTimeGroup=stpxSMSTPortHelloTimeGroup, stpxPVSTVlanGroup=stpxPVSTVlanGroup, stpx4kVlanGroup=stpx4kVlanGroup, stpxSpanningTreeType=stpxSpanningTreeType, stpxMSTPortTable=stpxMSTPortTable, stpxMSTMaxInstanceNumber=stpxMSTMaxInstanceNumber, stpxPreferredMSTInstancesEntry=stpxPreferredMSTInstancesEntry, stpxMISTPObjects=stpxMISTPObjects, stpxMISTPInstanceVlansMapped4k=stpxMISTPInstanceVlansMapped4k, stpxNotifications=stpxNotifications, stpxMISTPInstanceNumber=stpxMISTPInstanceNumber, stpxMSTInstanceIndex=stpxMSTInstanceIndex, stpxSMSTInstanceGroup=stpxSMSTInstanceGroup, stpxSMSTInstanceEditEntry=stpxSMSTInstanceEditEntry, ciscoStpExtensionsMIB=ciscoStpExtensionsMIB, stpxLoopGuardObjects=stpxLoopGuardObjects, stpxRPVSTPortStatus=stpxRPVSTPortStatus, stpxMIBCompliance3=stpxMIBCompliance3, stpxLongPathCostModeGroup=stpxLongPathCostModeGroup, stpxMISTPGroup2=stpxMISTPGroup2, stpxLoopInconsistencyTable=stpxLoopInconsistencyTable, stpxSMSTInstanceEditGroup=stpxSMSTInstanceEditGroup, stpxMSTInstanceVlansMapped4k=stpxMSTInstanceVlansMapped4k, stpxSMSTInstanceTable=stpxSMSTInstanceTable, stpxRootInconsistencyTable=stpxRootInconsistencyTable, stpxPVSTVlanIndex=stpxPVSTVlanIndex, stpxMISTPInstanceTable=stpxMISTPInstanceTable, stpxMSTInstanceEditVlansMap4k=stpxMSTInstanceEditVlansMap4k, stpxRSTPPortTable=stpxRSTPPortTable, stpxBpduSkewingPortIndex=stpxBpduSkewingPortIndex, stpxRSTPGroup=stpxRSTPGroup, stpxMIBCompliance11=stpxMIBCompliance11, stpxRSTPPortRoleInstanceIndex=stpxRSTPPortRoleInstanceIndex, stpxSpanningTreeObjects=stpxSpanningTreeObjects, stpxSMSTMaxInstances=stpxSMSTMaxInstances, stpxSMSTConfigDigestGroup=stpxSMSTConfigDigestGroup, stpxSMSTRegionEditRevision=stpxSMSTRegionEditRevision, stpxRSTPPortOperLinkType=stpxRSTPPortOperLinkType, stpxRPVSTObjects=stpxRPVSTObjects, stpxPreferredMSTInstancesTable=stpxPreferredMSTInstancesTable, stpxUplinkFastObjects=stpxUplinkFastObjects, stpxRPVSTGroup=stpxRPVSTGroup, stpxSMSTInstanceVlansMapped3k4k=stpxSMSTInstanceVlansMapped3k4k, stpxMIBConformance=stpxMIBConformance, stpxMIBCompliance=stpxMIBCompliance, stpxFastStartOperModeEntry=stpxFastStartOperModeEntry, stpxRSTPPortRoleTable=stpxRSTPPortRoleTable, stpxRSTPPortAdminLinkType=stpxRSTPPortAdminLinkType, stpxMIBCompliance9=stpxMIBCompliance9, stpxLoopGuardConfigPortIndex=stpxLoopGuardConfigPortIndex, stpxSMSTInstanceEditRowStatus=stpxSMSTInstanceEditRowStatus, stpxFastStartOperModeGroup=stpxFastStartOperModeGroup, stpxLoopGuardGroup=stpxLoopGuardGroup, stpxExtendedSysIDAdminEnabled=stpxExtendedSysIDAdminEnabled, stpxLoopGuardConfigEntry=stpxLoopGuardConfigEntry, stpxUplinkGroup2=stpxUplinkGroup2, stpxNotificationsPrefix=stpxNotificationsPrefix, stpxLongStpPortPathCost=stpxLongStpPortPathCost, stpxRootInconsistencyState=stpxRootInconsistencyState, stpxRootGuardConfigEnabled=stpxRootGuardConfigEnabled, stpxMIBCompliance6=stpxMIBCompliance6, stpxMIBCompliance10=stpxMIBCompliance10, stpxMIBCompliance12=stpxMIBCompliance12, stpxSMSTPortMSTModeGroup=stpxSMSTPortMSTModeGroup, stpxRSTPObjects=stpxRSTPObjects, stpxMSTPortRolePortIndex=stpxMSTPortRolePortIndex, stpxSpanningTreePathCostMode=stpxSpanningTreePathCostMode, stpxVlanIndex=stpxVlanIndex, stpxBpduSkewingObjects=stpxBpduSkewingObjects, stpxNotificationEnable=stpxNotificationEnable, stpxFastStartPortBpduFilterMode=stpxFastStartPortBpduFilterMode, stpxBpduSkewingDetectionEnable=stpxBpduSkewingDetectionEnable, stpxBackboneFastInRLQResponsePDUs=stpxBackboneFastInRLQResponsePDUs, stpxBackboneGroup2=stpxBackboneGroup2, stpxMSTPortEntry=stpxMSTPortEntry, stpxBackboneGroup=stpxBackboneGroup, stpxMSTInstanceEditVlansMap=stpxMSTInstanceEditVlansMap, stpxMSTInstanceEditIndex=stpxMSTInstanceEditIndex, stpxInconsistencyEntry=stpxInconsistencyEntry, stpxInconsistencyUpdate=stpxInconsistencyUpdate, stpxRPVSTPortIndex=stpxRPVSTPortIndex, stpxBackboneFastObjects=stpxBackboneFastObjects, stpxPreferredMISTPInstancesTable=stpxPreferredMISTPInstancesTable, stpxMSTRegionRevision=stpxMSTRegionRevision, stpxFastStartPortBpduGuardMode=stpxFastStartPortBpduGuardMode, stpxPreferredMISTPInstancesEntry=stpxPreferredMISTPInstancesEntry, stpxSMSTInstanceIndex=stpxSMSTInstanceIndex, stpxInconsistentState=stpxInconsistentState, stpxLongStpPortPathCostTable=stpxLongStpPortPathCostTable, stpxFastStartGlobalDefaultMode=stpxFastStartGlobalDefaultMode, stpxBpduSkewingEntry=stpxBpduSkewingEntry, stpxSMSTPortAdminHelloTime=stpxSMSTPortAdminHelloTime, stpxSMSTGroup=stpxSMSTGroup, stpxVlanObjects=stpxVlanObjects, stpxMISTPInstanceEnable=stpxMISTPInstanceEnable, stpxMIBCompliance7=stpxMIBCompliance7, stpxLoopInconsistencyEntry=stpxLoopInconsistencyEntry, stpxRPVSTPortVlanIndex=stpxRPVSTPortVlanIndex, stpxMSTGroup3=stpxMSTGroup3, StpxMSTConfigurationDigest=StpxMSTConfigurationDigest, stpxBpduSkewingLastSkewDuration=stpxBpduSkewingLastSkewDuration, stpxMSTRegionName=stpxMSTRegionName, stpxPreferredMISTPInstancesMap=stpxPreferredMISTPInstancesMap, stpxMSTObjects=stpxMSTObjects, stpxPreferredMSTInstancesGroup=stpxPreferredMSTInstancesGroup, stpxInconsistencyTable=stpxInconsistencyTable, stpxMSTMaxHopCount=stpxMSTMaxHopCount, stpxExtendedSysIDGroup=stpxExtendedSysIDGroup, stpxRootInconsistencyEntry=stpxRootInconsistencyEntry, stpxRSTPPortRoleValue=stpxRSTPPortRoleValue, stpxRSTPTransmitHoldCountGroup=stpxRSTPTransmitHoldCountGroup, stpxLoopInconsistencyState=stpxLoopInconsistencyState, stpxFastStartOperModeTable=stpxFastStartOperModeTable, stpxPVSTVlanEnable=stpxPVSTVlanEnable)
mibBuilder.exportSymbols("CISCO-STP-EXTENSIONS-MIB", stpxSMSTRegionRevision=stpxSMSTRegionRevision, stpxBpduSkewingGroup=stpxBpduSkewingGroup, stpxPreferredVlansTable=stpxPreferredVlansTable, stpxMIBGroups=stpxMIBGroups, stpxSpanningTreePathCostOperMode=stpxSpanningTreePathCostOperMode, stpxVlanMISTPInstMapEntry=stpxVlanMISTPInstMapEntry, stpxUplinkGroup=stpxUplinkGroup, stpxSMSTMaxInstanceID=stpxSMSTMaxInstanceID, stpxSMSTInstanceEntry=stpxSMSTInstanceEntry)
