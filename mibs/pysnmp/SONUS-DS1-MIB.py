#
# PySNMP MIB module SONUS-DS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-DS1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, Counter32, Unsigned32, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, iso, NotificationType, Integer32, Gauge32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Counter32", "Unsigned32", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "iso", "NotificationType", "Integer32", "Gauge32", "Bits")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
sonusDs3Index, sonusSlotIndex, sonusEventLevel, sonusEventClass, sonusShelfIndex, sonusDs1Index, sonusPortIndex, sonusEventDescription = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusDs3Index", "sonusSlotIndex", "sonusEventLevel", "sonusEventClass", "sonusShelfIndex", "sonusDs1Index", "sonusPortIndex", "sonusEventDescription")
sonusCircuitMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusCircuitMIBs")
SonusAdminState, SonusServiceState, SonusAdminAction, SonusName = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState", "SonusServiceState", "SonusAdminAction", "SonusName")
sonusDsx1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1))
if mibBuilder.loadTexts: sonusDsx1MIB.setLastUpdated('200107310000Z')
if mibBuilder.loadTexts: sonusDsx1MIB.setOrganization('Sonus Networks, Inc.')
sonusDsx1MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1))
sonusDsx1Admn = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1))
sonusDsx1AdmnNextIndex = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 1))
sonusDsx1AdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2), )
if mibBuilder.loadTexts: sonusDsx1AdmnTable.setStatus('current')
sonusDsx1AdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-DS1-MIB", "sonusDsx1AdmnShelfIndex"), (0, "SONUS-DS1-MIB", "sonusDsx1AdmnSlotIndex"), (0, "SONUS-DS1-MIB", "sonusDsx1AdmnPortIndex"), (0, "SONUS-DS1-MIB", "sonusDsx1AdmnDs3Index"), (0, "SONUS-DS1-MIB", "sonusDsx1AdmnDs1Index"))
if mibBuilder.loadTexts: sonusDsx1AdmnEntry.setStatus('current')
sonusDsx1AdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnRowStatus.setStatus('current')
sonusDsx1AdmnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnName.setStatus('current')
sonusDsx1AdmnProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnProfileName.setStatus('current')
sonusDsx1AdmnShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnShelfIndex.setStatus('current')
sonusDsx1AdmnSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnSlotIndex.setStatus('current')
sonusDsx1AdmnPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnPortIndex.setStatus('current')
sonusDsx1AdmnDs3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnDs3Index.setStatus('current')
sonusDsx1AdmnDs1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnDs1Index.setStatus('current')
sonusDsx1AdmnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnIfIndex.setStatus('current')
sonusDsx1AdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 10), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnState.setStatus('current')
sonusDsx1AdmnLineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("buildOut0to110", 1), ("buildOut110to220", 2), ("buildOut220to330", 3), ("buildOut330to440", 4), ("buildOut440to550", 5), ("buildOut550to660", 6), ("buildOut120Ohms", 7), ("buildOut75Ohms", 8))).clone('buildOut110to220')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnLineBuildOut.setStatus('current')
sonusDsx1AdmnTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnTimeout.setStatus('current')
sonusDsx1AdmnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 13), SonusServiceState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnMode.setStatus('current')
sonusDsx1AdmnAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 14), SonusAdminAction().clone('dryUp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnAction.setStatus('current')
sonusDsx1AdmnIdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnIdleCode.setStatus('current')
sonusDsx1AdmnAvailChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 16), Bits().clone(namedValues=NamedValues(("channel1", 0), ("channel2", 1), ("channel3", 2), ("channel4", 3), ("channel5", 4), ("channel6", 5), ("channel7", 6), ("channel8", 7), ("channel9", 8), ("channel10", 9), ("channel11", 10), ("channel12", 11), ("channel13", 12), ("channel14", 13), ("channel15", 14), ("channel16", 15), ("channel17", 16), ("channel18", 17), ("channel19", 18), ("channel20", 19), ("channel21", 20), ("channel22", 21), ("channel23", 22), ("channel24", 23), ("channel25", 24), ("channel26", 25), ("channel27", 26), ("channel28", 27), ("channel29", 28), ("channel30", 29), ("channel31", 30), ("channel32", 31)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnAvailChannels.setStatus('current')
sonusDsx1AdmnType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2))).clone('t1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnType.setStatus('current')
sonusDsx1AdmnESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnESThreshold.setStatus('current')
sonusDsx1AdmnSESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnSESThreshold.setStatus('current')
sonusDsx1AdmnCSSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnCSSThreshold.setStatus('current')
sonusDsx1AdmnDayESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnDayESThreshold.setStatus('current')
sonusDsx1AdmnDaySESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnDaySESThreshold.setStatus('current')
sonusDsx1AdmnDayCSSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnDayCSSThreshold.setStatus('current')
sonusDsx1AdmnFarESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarESThreshold.setStatus('current')
sonusDsx1AdmnFarSESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarSESThreshold.setStatus('current')
sonusDsx1AdmnFarDayESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarDayESThreshold.setStatus('current')
sonusDsx1AdmnFarDaySESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarDaySESThreshold.setStatus('current')
sonusDsx1AdmnPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(13296)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnPCVThreshold.setStatus('current')
sonusDsx1AdmnLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(13340)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnLCVThreshold.setStatus('current')
sonusDsx1AdmnUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnUASThreshold.setStatus('current')
sonusDsx1AdmnFarPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(72)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarPCVThreshold.setStatus('current')
sonusDsx1AdmnFarLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(72)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarLCVThreshold.setStatus('current')
sonusDsx1AdmnFarUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarUASThreshold.setStatus('current')
sonusDsx1AdmnDayPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(132960)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnDayPCVThreshold.setStatus('current')
sonusDsx1AdmnDayLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(133400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnDayLCVThreshold.setStatus('current')
sonusDsx1AdmnDayUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnDayUASThreshold.setStatus('current')
sonusDsx1AdmnFarDayPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(691)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarDayPCVThreshold.setStatus('current')
sonusDsx1AdmnFarDayLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(691)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarDayLCVThreshold.setStatus('current')
sonusDsx1AdmnFarDayUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnFarDayUASThreshold.setStatus('current')
sonusDsx1AdmnInitCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 40), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnInitCounters.setStatus('current')
sonusDsx1AdmnEchoProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoProfileName.setStatus('current')
sonusDsx1AdmnEchoCancellorMaxTail = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("millisec24", 1), ("millisec32", 2), ("millisec48", 3), ("millisec64", 4))).clone('millisec64')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorMaxTail.setStatus('current')
sonusDsx1AdmnEchoCancellorAudioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uLaw", 1), ("aLaw", 2))).clone('uLaw')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorAudioType.setStatus('current')
sonusDsx1AdmnEchoCancellorSignallingTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("c5", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorSignallingTone.setStatus('current')
sonusDsx1AdmnEchoCancellorNlpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorNlpDisable.setStatus('current')
sonusDsx1AdmnEchoCancellorNlpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 80)).clone(75)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorNlpEnable.setStatus('current')
sonusDsx1AdmnEchoCancellorReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dB6", 1), ("dB3", 2), ("dB0", 3))).clone('dB6')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorReturnLoss.setStatus('current')
sonusDsx1AdmnEchoCancellorResidualEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("cancelOnly", 1), ("suppressResidual", 2), ("comfortNoise", 4))).clone('comfortNoise')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorResidualEcho.setStatus('current')
sonusDsx1AdmnEchoCancellorHiLevelComp = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dB6", 2))).clone('dB6')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorHiLevelComp.setStatus('current')
sonusDsx1AdmnEchoCancellorModemDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("ignore2100Hz", 1), ("g164", 2), ("g165", 4))).clone('g165')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorModemDisable.setStatus('current')
sonusDsx1AdmnZeroSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("jamBit8", 2), ("signalFrameOnlyJamBit8", 3), ("gteZeroSuppression", 4), ("bellZeroSuppression", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnZeroSuppression.setStatus('current')
sonusDsx1AdmnCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 52), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDsx1AdmnCircuitId.setStatus('current')
sonusDsx1AdmnEchoCancellorNarrowbandDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 1, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1AdmnEchoCancellorNarrowbandDetection.setStatus('current')
sonusDsx1StatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2), )
if mibBuilder.loadTexts: sonusDsx1StatTable.setStatus('current')
sonusDsx1StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1), ).setIndexNames((0, "SONUS-DS1-MIB", "sonusDsx1StatShelfIndex"), (0, "SONUS-DS1-MIB", "sonusDsx1StatSlotIndex"), (0, "SONUS-DS1-MIB", "sonusDsx1StatPortIndex"), (0, "SONUS-DS1-MIB", "sonusDsx1StatDs3Index"), (0, "SONUS-DS1-MIB", "sonusDsx1StatDs1Index"))
if mibBuilder.loadTexts: sonusDsx1StatEntry.setStatus('current')
sonusDsx1StatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatShelfIndex.setStatus('current')
sonusDsx1StatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatSlotIndex.setStatus('current')
sonusDsx1StatPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatPortIndex.setStatus('current')
sonusDsx1StatDs3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatDs3Index.setStatus('current')
sonusDsx1StatDs1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatDs1Index.setStatus('current')
sonusDsx1StatValidInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatValidInt.setStatus('current')
sonusDsx1StatRxSlips = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatRxSlips.setStatus('current')
sonusDsx1StatTxSlips = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatTxSlips.setStatus('current')
sonusDsx1StatLOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatLOF.setStatus('current')
sonusDsx1StatAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatAIS.setStatus('current')
sonusDsx1StatRAI = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatRAI.setStatus('current')
sonusDsx1StatRED = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatRED.setStatus('current')
sonusDsx1StatCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatCRC.setStatus('current')
sonusDsx1StatCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatCOFA.setStatus('current')
sonusDsx1StatFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatFBE.setStatus('current')
sonusDsx1StatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatStatus.setStatus('deprecated')
sonusDsx1StatAllocChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatAllocChannels.setStatus('current')
sonusDsx1StatEnabChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatEnabChannels.setStatus('current')
sonusE1StatLOMF = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatLOMF.setStatus('current')
sonusE1StatMFError = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatMFError.setStatus('current')
sonusE1StatFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatFEBE.setStatus('current')
sonusE1StatOOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatOOOF.setStatus('current')
sonusE1StatC2NCIWCK = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatC2NCIWCK.setStatus('current')
sonusE1StatRAIContCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatRAIContCRC.setStatus('current')
sonusE1StatContFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatContFEBE.setStatus('current')
sonusE1StatExcessCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatExcessCRC.setStatus('current')
sonusE1StatFASErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusE1StatFASErr.setStatus('current')
sonusDsx1StatSendPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("dsx1SendNoCode", 1), ("dsx1SendLineCode", 2), ("dsx1SendPayloadCode", 3), ("dsx1SendResetCode", 4), ("dsx1SendQRS", 5), ("dsx1Send511Pattern", 6), ("dsx1Send3in24Pattern", 7), ("dsx1SendOtherTestPattern", 8))).clone('dsx1SendNoCode')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatSendPattern.setStatus('current')
sonusDsx1StatStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dsx1StatStatusCodeNoAlarm", 1), ("dsx1StatStatusCodeRedAlarm", 2), ("dsx1StatStatusCodeYellowAlarm", 3), ("dsx1StatStatusCodeAisAlarm", 4), ("dsx1StatStatusCodeDspFailure", 5), ("dsx1StatStatusCodeLoopback", 6))).clone('dsx1StatStatusCodeNoAlarm')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatStatusCode.setStatus('current')
sonusDsx1StatLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("dsx1StatLoopbackStatusNoLoopback", 1), ("dsx1StatLoopbackStatusNeLineLoopback", 2), ("dsx1StatLoopbackStatusNePayloadLoopback", 3), ("dsx1StatLoopbackStatusNeInwardLoopback", 4), ("dsx1StatLoopbackStatusNeDualLoopback", 5), ("dsx1StatLoopbackStatusFeLineLoopback", 6), ("dsx1StatLoopbackStatusFePayloadLoopback", 7))).clone('dsx1StatLoopbackStatusNoLoopback')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatLoopbackStatus.setStatus('current')
sonusDsx1StatOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("dryingUp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDsx1StatOperStatus.setStatus('current')
sonusDs0AdmnTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3), )
if mibBuilder.loadTexts: sonusDs0AdmnTable.setStatus('current')
sonusDs0AdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1), ).setIndexNames((0, "SONUS-DS1-MIB", "sonusDs0AdmnShelfIndex"), (0, "SONUS-DS1-MIB", "sonusDs0AdmnSlotIndex"), (0, "SONUS-DS1-MIB", "sonusDs0AdmnPortIndex"), (0, "SONUS-DS1-MIB", "sonusDs0AdmnDs3Index"), (0, "SONUS-DS1-MIB", "sonusDs0AdmnDs1Index"), (0, "SONUS-DS1-MIB", "sonusDs0AdmnDs0Index"))
if mibBuilder.loadTexts: sonusDs0AdmnEntry.setStatus('current')
sonusDs0AdmnShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs0AdmnShelfIndex.setStatus('current')
sonusDs0AdmnSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs0AdmnSlotIndex.setStatus('current')
sonusDs0AdmnPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs0AdmnPortIndex.setStatus('current')
sonusDs0AdmnDs3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs0AdmnDs3Index.setStatus('current')
sonusDs0AdmnDs1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs0AdmnDs1Index.setStatus('current')
sonusDs0AdmnDs0Index = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs0AdmnDs0Index.setStatus('current')
sonusDs0AdmnTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnTimeout.setStatus('current')
sonusDs0AdmnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 8), SonusServiceState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnMode.setStatus('current')
sonusDs0AdmnAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 9), SonusAdminAction().clone('dryUp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnAction.setStatus('current')
sonusDs0AdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unavailable", 1), ("available", 2))).clone('available')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnState.setStatus('current')
sonusDs0AdmnIdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnIdleCode.setStatus('current')
sonusDs0AdmnTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("dmw", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnTone.setStatus('current')
sonusDs0AdmnLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs0AdmnLoopback.setStatus('current')
sonusDs1Profile = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4))
sonusDs1ProfileNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1ProfileNextIndex.setStatus('current')
sonusDs1ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2), )
if mibBuilder.loadTexts: sonusDs1ProfileTable.setStatus('current')
sonusDs1ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1), ).setIndexNames((0, "SONUS-DS1-MIB", "sonusDs1ProfileIndex"))
if mibBuilder.loadTexts: sonusDs1ProfileEntry.setStatus('current')
sonusDs1ProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileRowStatus.setStatus('current')
sonusDs1ProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileName.setStatus('current')
sonusDs1ProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1ProfileIndex.setStatus('current')
sonusDs1ProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 4), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileState.setStatus('current')
sonusDs1ProfileDs1LineBO = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("buildOut0to110", 1), ("buildOut110to220", 2), ("buildOut220to330", 3), ("buildOut330to440", 4), ("buildOut440to550", 5), ("buildOut550to660", 6), ("buildOut120Ohms", 7), ("buildOut75Ohms", 8))).clone('buildOut110to220')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1LineBO.setStatus('current')
sonusDs1ProfileDs1LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("esf", 2), ("d4", 3), ("e1", 4), ("e1crc", 5))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1LineType.setStatus('current')
sonusDs1ProfileDs1LineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 5))).clone(namedValues=NamedValues(("b8zs", 2), ("hdb3", 3), ("ami", 5))).clone('b8zs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1LineCoding.setStatus('current')
sonusDs1ProfileDs1SignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("none", 1))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1SignalMode.setStatus('current')
sonusDs1ProfileDs1Fdl = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 8))).clone(namedValues=NamedValues(("ansi", 2), ("none", 8))).clone('ansi')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1Fdl.setStatus('current')
sonusDs1ProfileDs0IdleCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs0IdleCode.setStatus('current')
sonusDs1ProfileAvailChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 11), Bits().clone(namedValues=NamedValues(("channel1", 0), ("channel2", 1), ("channel3", 2), ("channel4", 3), ("channel5", 4), ("channel6", 5), ("channel7", 6), ("channel8", 7), ("channel9", 8), ("channel10", 9), ("channel11", 10), ("channel12", 11), ("channel13", 12), ("channel14", 13), ("channel15", 14), ("channel16", 15), ("channel17", 16), ("channel18", 17), ("channel19", 18), ("channel20", 19), ("channel21", 20), ("channel22", 21), ("channel23", 22), ("channel24", 23), ("channel25", 24), ("channel26", 25), ("channel27", 26), ("channel28", 27), ("channel29", 28), ("channel30", 29), ("channel31", 30)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileAvailChannels.setStatus('current')
sonusDs1ProfileDs1LineBOState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 12), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1LineBOState.setStatus('current')
sonusDs1ProfileDs1LineTypeState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 13), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1LineTypeState.setStatus('current')
sonusDs1ProfileDs1LineCodingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 14), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1LineCodingState.setStatus('current')
sonusDs1ProfileDs1SignalModeState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 15), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1SignalModeState.setStatus('current')
sonusDs1ProfileDs1FdlState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 16), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs1FdlState.setStatus('current')
sonusDs1ProfileDs0IdleCodeState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 17), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDs0IdleCodeState.setStatus('current')
sonusDs1ProfileAvailChannelsState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 18), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileAvailChannelsState.setStatus('current')
sonusDs1ProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2))).clone('t1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileType.setStatus('current')
sonusDs1ProfileESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileESThreshold.setStatus('current')
sonusDs1ProfileSESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileSESThreshold.setStatus('current')
sonusDs1ProfileCSSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileCSSThreshold.setStatus('current')
sonusDs1ProfileDayESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayESThreshold.setStatus('current')
sonusDs1ProfileDaySESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDaySESThreshold.setStatus('current')
sonusDs1ProfileDayCSSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayCSSThreshold.setStatus('current')
sonusDs1ProfileFarESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(65)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarESThreshold.setStatus('current')
sonusDs1ProfileFarSESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarSESThreshold.setStatus('current')
sonusDs1ProfileFarDayESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayESThreshold.setStatus('current')
sonusDs1ProfileFarDaySESThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDaySESThreshold.setStatus('current')
sonusDs1ProfilePCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(13296)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfilePCVThreshold.setStatus('current')
sonusDs1ProfileLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(13340)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileLCVThreshold.setStatus('current')
sonusDs1ProfileUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileUASThreshold.setStatus('current')
sonusDs1ProfileFarPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(72)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarPCVThreshold.setStatus('current')
sonusDs1ProfileFarLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(72)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarLCVThreshold.setStatus('current')
sonusDs1ProfileFarUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarUASThreshold.setStatus('current')
sonusDs1ProfileDayPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(132960)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayPCVThreshold.setStatus('current')
sonusDs1ProfileDayLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(133400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayLCVThreshold.setStatus('current')
sonusDs1ProfileDayUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayUASThreshold.setStatus('current')
sonusDs1ProfileFarDayPCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(691)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayPCVThreshold.setStatus('current')
sonusDs1ProfileFarDayLCVThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1048575)).clone(691)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayLCVThreshold.setStatus('current')
sonusDs1ProfileFarDayUASThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayUASThreshold.setStatus('current')
sonusDs1ProfileESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 42), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileESThresholdState.setStatus('current')
sonusDs1ProfileSESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 43), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileSESThresholdState.setStatus('current')
sonusDs1ProfileCSSThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 44), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileCSSThresholdState.setStatus('current')
sonusDs1ProfileDayESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 45), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayESThresholdState.setStatus('current')
sonusDs1ProfileDaySESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 46), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDaySESThresholdState.setStatus('current')
sonusDs1ProfileDayCSSThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 47), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayCSSThresholdState.setStatus('current')
sonusDs1ProfileFarESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 48), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarESThresholdState.setStatus('current')
sonusDs1ProfileFarSESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 49), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarSESThresholdState.setStatus('current')
sonusDs1ProfileFarDayESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 50), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayESThresholdState.setStatus('current')
sonusDs1ProfileFarDaySESThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 51), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDaySESThresholdState.setStatus('current')
sonusDs1ProfilePCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 52), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfilePCVThresholdState.setStatus('current')
sonusDs1ProfileLCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 53), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileLCVThresholdState.setStatus('current')
sonusDs1ProfileUASThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 54), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileUASThresholdState.setStatus('current')
sonusDs1ProfileFarPCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 55), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarPCVThresholdState.setStatus('current')
sonusDs1ProfileFarLCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 56), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarLCVThresholdState.setStatus('current')
sonusDs1ProfileFarUASThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 57), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarUASThresholdState.setStatus('current')
sonusDs1ProfileDayPCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 58), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayPCVThresholdState.setStatus('current')
sonusDs1ProfileDayLCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 59), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayLCVThresholdState.setStatus('current')
sonusDs1ProfileDayUASThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 60), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileDayUASThresholdState.setStatus('current')
sonusDs1ProfileFarDayPCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 61), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayPCVThresholdState.setStatus('current')
sonusDs1ProfileFarDayLCVThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 62), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayLCVThresholdState.setStatus('current')
sonusDs1ProfileFarDayUASThresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 1, 4, 2, 1, 63), SonusAdminState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusDs1ProfileFarDayUASThresholdState.setStatus('current')
sonusDsx1MIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2))
sonusDsx1MIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 0))
sonusDsx1MIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 1))
sonusDs1OutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("maintenance", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1OutOfServiceReason.setStatus('current')
sonusDs1OutOfServiceType = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("admin", 1), ("hwFailure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1OutOfServiceType.setStatus('current')
sonusDs1ThresholdType = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("currentLineCodeViolation", 1), ("currentPathCodeViolation", 2), ("currentPathCodeViolationFarEnd", 3), ("currentControlledSlips", 4), ("currentErroredSeconds", 5), ("currentSeverelyErrSeconds", 6), ("currentUnavailableSeconds", 7), ("totalLineCodeViolation", 8), ("totalPathCodeViolation", 9), ("totalPathCodeViolationFarEnd", 10), ("totalControlledSlips", 11), ("totalErroredSeconds", 12), ("totalSeverelyErrSeconds", 13), ("totalUnavailableSeconds", 14), ("currentFarEndErroredSeconds", 15), ("currentFarEndSeverelyErrSeconds", 16), ("totalFarEndErroredSeconds", 17), ("totalFarEndCurrentSeverelyErrSeconds", 18), ("currentFarEndUnavailableSeconds", 19), ("totalFarEndUnavailableSeconds", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1ThresholdType.setStatus('current')
sonusDs1LineState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("green", 1), ("red", 2), ("yellow", 3), ("ais", 4), ("hwfailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1LineState.setStatus('current')
sonusDs1AdmnState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("deleted", 3), ("inservice", 4), ("dryingUp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusDs1AdmnState.setStatus('current')
sonusDsx1AdminChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 0, 1)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-COMMON-MIB", "sonusDs1Index"), ("SONUS-DS1-MIB", "sonusDs1AdmnState"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx1AdminChangeNotification.setStatus('current')
sonusDsx1OutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 0, 2)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-COMMON-MIB", "sonusDs1Index"), ("SONUS-DS1-MIB", "sonusDs1OutOfServiceReason"), ("SONUS-DS1-MIB", "sonusDs1OutOfServiceType"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx1OutOfServiceNotification.setStatus('current')
sonusDsx1ThresholdCrossingNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 0, 3)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-COMMON-MIB", "sonusDs1Index"), ("SONUS-DS1-MIB", "sonusDs1ThresholdType"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx1ThresholdCrossingNotification.setStatus('current')
sonusDsx1LineStatusChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 4, 1, 2, 0, 4)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusPortIndex"), ("SONUS-COMMON-MIB", "sonusDs3Index"), ("SONUS-COMMON-MIB", "sonusDs1Index"), ("SONUS-DS1-MIB", "sonusDs1LineState"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusDsx1LineStatusChangeNotification.setStatus('current')
mibBuilder.exportSymbols("SONUS-DS1-MIB", sonusDs1ProfileFarDaySESThreshold=sonusDs1ProfileFarDaySESThreshold, sonusDs1ProfileAvailChannelsState=sonusDs1ProfileAvailChannelsState, sonusDs1ProfileFarDayUASThreshold=sonusDs1ProfileFarDayUASThreshold, sonusDs0AdmnDs0Index=sonusDs0AdmnDs0Index, sonusDsx1AdmnDayPCVThreshold=sonusDsx1AdmnDayPCVThreshold, sonusDsx1StatLoopbackStatus=sonusDsx1StatLoopbackStatus, sonusDs1ProfileFarDayPCVThresholdState=sonusDs1ProfileFarDayPCVThresholdState, sonusDs0AdmnMode=sonusDs0AdmnMode, sonusDs1ProfileCSSThresholdState=sonusDs1ProfileCSSThresholdState, sonusDsx1AdmnFarDayLCVThreshold=sonusDsx1AdmnFarDayLCVThreshold, sonusDsx1AdmnLCVThreshold=sonusDsx1AdmnLCVThreshold, sonusDsx1AdmnFarDayUASThreshold=sonusDsx1AdmnFarDayUASThreshold, sonusDs1ProfileFarLCVThreshold=sonusDs1ProfileFarLCVThreshold, sonusDsx1AdmnEchoCancellorMaxTail=sonusDsx1AdmnEchoCancellorMaxTail, sonusDs1ProfileDaySESThreshold=sonusDs1ProfileDaySESThreshold, sonusE1StatExcessCRC=sonusE1StatExcessCRC, sonusDsx1AdmnTable=sonusDsx1AdmnTable, sonusDsx1MIBNotificationsObjects=sonusDsx1MIBNotificationsObjects, sonusDs1ProfileAvailChannels=sonusDs1ProfileAvailChannels, sonusDs1ProfileFarSESThresholdState=sonusDs1ProfileFarSESThresholdState, sonusDsx1StatOperStatus=sonusDsx1StatOperStatus, sonusE1StatLOMF=sonusE1StatLOMF, sonusDs1ProfileDayLCVThresholdState=sonusDs1ProfileDayLCVThresholdState, sonusDs1ProfileESThreshold=sonusDs1ProfileESThreshold, sonusDs1ProfileFarDayESThreshold=sonusDs1ProfileFarDayESThreshold, sonusDsx1AdmnIdleCode=sonusDsx1AdmnIdleCode, sonusDs1ProfileFarDayLCVThresholdState=sonusDs1ProfileFarDayLCVThresholdState, sonusDs1OutOfServiceReason=sonusDs1OutOfServiceReason, sonusDsx1AdmnEntry=sonusDsx1AdmnEntry, sonusDs0AdmnDs3Index=sonusDs0AdmnDs3Index, sonusDsx1AdmnFarDaySESThreshold=sonusDsx1AdmnFarDaySESThreshold, sonusDsx1AdmnCSSThreshold=sonusDsx1AdmnCSSThreshold, sonusDs1ProfileNextIndex=sonusDs1ProfileNextIndex, sonusDs0AdmnTimeout=sonusDs0AdmnTimeout, sonusDs1ProfileDs1LineTypeState=sonusDs1ProfileDs1LineTypeState, sonusDs1ProfileFarUASThreshold=sonusDs1ProfileFarUASThreshold, sonusDsx1StatCRC=sonusDsx1StatCRC, sonusDs1ProfileFarPCVThresholdState=sonusDs1ProfileFarPCVThresholdState, sonusDsx1OutOfServiceNotification=sonusDsx1OutOfServiceNotification, sonusDsx1AdmnInitCounters=sonusDsx1AdmnInitCounters, sonusDs1ProfileDs1Fdl=sonusDs1ProfileDs1Fdl, sonusDs1ProfileFarLCVThresholdState=sonusDs1ProfileFarLCVThresholdState, sonusDsx1AdmnEchoProfileName=sonusDsx1AdmnEchoProfileName, sonusDs1ProfileFarDayESThresholdState=sonusDs1ProfileFarDayESThresholdState, sonusDsx1AdmnType=sonusDsx1AdmnType, sonusDsx1StatLOF=sonusDsx1StatLOF, sonusDs1ProfilePCVThresholdState=sonusDs1ProfilePCVThresholdState, sonusDsx1AdmnAction=sonusDsx1AdmnAction, sonusDs1ProfileFarESThreshold=sonusDs1ProfileFarESThreshold, sonusDs0AdmnShelfIndex=sonusDs0AdmnShelfIndex, sonusDs1ProfileType=sonusDs1ProfileType, sonusDsx1StatSendPattern=sonusDsx1StatSendPattern, sonusDsx1AdmnPortIndex=sonusDsx1AdmnPortIndex, sonusDs1ProfilePCVThreshold=sonusDs1ProfilePCVThreshold, sonusDs1ProfileDs0IdleCodeState=sonusDs1ProfileDs0IdleCodeState, sonusDs1ProfileDs0IdleCode=sonusDs1ProfileDs0IdleCode, sonusDsx1AdmnNextIndex=sonusDsx1AdmnNextIndex, sonusDs1ProfileDs1SignalMode=sonusDs1ProfileDs1SignalMode, sonusDsx1AdmnLineBuildOut=sonusDsx1AdmnLineBuildOut, sonusDs0AdmnLoopback=sonusDs0AdmnLoopback, sonusDsx1StatRAI=sonusDsx1StatRAI, sonusDs1ProfileUASThreshold=sonusDs1ProfileUASThreshold, sonusDs0AdmnAction=sonusDs0AdmnAction, sonusDsx1StatAllocChannels=sonusDsx1StatAllocChannels, sonusE1StatMFError=sonusE1StatMFError, sonusE1StatFASErr=sonusE1StatFASErr, sonusDsx1AdmnIfIndex=sonusDsx1AdmnIfIndex, sonusDs1ProfileRowStatus=sonusDs1ProfileRowStatus, sonusE1StatC2NCIWCK=sonusE1StatC2NCIWCK, sonusDsx1AdmnEchoCancellorNlpDisable=sonusDsx1AdmnEchoCancellorNlpDisable, sonusDs1LineState=sonusDs1LineState, sonusDs1ProfileFarUASThresholdState=sonusDs1ProfileFarUASThresholdState, sonusE1StatRAIContCRC=sonusE1StatRAIContCRC, sonusDsx1StatTable=sonusDsx1StatTable, sonusDsx1StatPortIndex=sonusDsx1StatPortIndex, sonusDs1ProfileSESThresholdState=sonusDs1ProfileSESThresholdState, sonusDs1ProfileDs1FdlState=sonusDs1ProfileDs1FdlState, sonusDsx1AdmnEchoCancellorResidualEcho=sonusDsx1AdmnEchoCancellorResidualEcho, sonusDs1ProfileTable=sonusDs1ProfileTable, sonusDs1ProfileLCVThreshold=sonusDs1ProfileLCVThreshold, sonusDsx1StatRxSlips=sonusDsx1StatRxSlips, sonusDs1ProfileCSSThreshold=sonusDs1ProfileCSSThreshold, sonusDsx1AdmnDaySESThreshold=sonusDsx1AdmnDaySESThreshold, sonusDs1ProfileDayESThreshold=sonusDs1ProfileDayESThreshold, sonusDs1ProfileDayCSSThreshold=sonusDs1ProfileDayCSSThreshold, sonusDsx1AdmnDs3Index=sonusDsx1AdmnDs3Index, sonusDs1ProfileFarDaySESThresholdState=sonusDs1ProfileFarDaySESThresholdState, sonusE1StatContFEBE=sonusE1StatContFEBE, sonusDs1ProfileDs1LineBOState=sonusDs1ProfileDs1LineBOState, sonusDsx1AdmnPCVThreshold=sonusDsx1AdmnPCVThreshold, sonusDsx1AdmnEchoCancellorAudioType=sonusDsx1AdmnEchoCancellorAudioType, sonusDs1ProfileState=sonusDs1ProfileState, sonusDsx1AdmnUASThreshold=sonusDsx1AdmnUASThreshold, sonusDsx1StatValidInt=sonusDsx1StatValidInt, sonusDs1ProfileName=sonusDs1ProfileName, sonusDsx1AdmnShelfIndex=sonusDsx1AdmnShelfIndex, sonusDs1ProfileDaySESThresholdState=sonusDs1ProfileDaySESThresholdState, sonusDs1ProfileFarPCVThreshold=sonusDs1ProfileFarPCVThreshold, sonusDs1ThresholdType=sonusDs1ThresholdType, sonusDs0AdmnPortIndex=sonusDs0AdmnPortIndex, sonusDsx1AdmnEchoCancellorNarrowbandDetection=sonusDsx1AdmnEchoCancellorNarrowbandDetection, sonusDs1ProfileEntry=sonusDs1ProfileEntry, sonusDs1ProfileSESThreshold=sonusDs1ProfileSESThreshold, sonusDsx1StatStatusCode=sonusDsx1StatStatusCode, sonusDsx1AdmnEchoCancellorModemDisable=sonusDsx1AdmnEchoCancellorModemDisable, sonusDs1ProfileDs1SignalModeState=sonusDs1ProfileDs1SignalModeState, sonusE1StatOOOF=sonusE1StatOOOF, sonusDs1ProfileFarESThresholdState=sonusDs1ProfileFarESThresholdState, sonusDsx1AdmnFarDayESThreshold=sonusDsx1AdmnFarDayESThreshold, sonusDs1Profile=sonusDs1Profile, sonusDs1ProfileDayUASThreshold=sonusDs1ProfileDayUASThreshold, sonusDsx1AdmnProfileName=sonusDsx1AdmnProfileName, sonusDs0AdmnTable=sonusDs0AdmnTable, sonusDsx1AdmnFarSESThreshold=sonusDsx1AdmnFarSESThreshold, sonusDsx1Admn=sonusDsx1Admn, sonusDsx1AdmnEchoCancellorNlpEnable=sonusDsx1AdmnEchoCancellorNlpEnable, sonusDsx1AdmnEchoCancellorReturnLoss=sonusDsx1AdmnEchoCancellorReturnLoss, sonusDs0AdmnState=sonusDs0AdmnState, sonusDsx1MIBObjects=sonusDsx1MIBObjects, sonusDsx1AdmnFarPCVThreshold=sonusDsx1AdmnFarPCVThreshold, sonusDs1ProfileDs1LineCodingState=sonusDs1ProfileDs1LineCodingState, sonusDsx1MIB=sonusDsx1MIB, sonusDsx1AdmnFarUASThreshold=sonusDsx1AdmnFarUASThreshold, sonusDsx1StatEntry=sonusDsx1StatEntry, sonusDs1OutOfServiceType=sonusDs1OutOfServiceType, sonusDsx1ThresholdCrossingNotification=sonusDsx1ThresholdCrossingNotification, sonusDsx1AdmnSlotIndex=sonusDsx1AdmnSlotIndex, sonusDs1ProfileDayCSSThresholdState=sonusDs1ProfileDayCSSThresholdState, sonusDs1ProfileLCVThresholdState=sonusDs1ProfileLCVThresholdState, sonusDsx1AdmnName=sonusDsx1AdmnName, sonusDsx1AdmnAvailChannels=sonusDsx1AdmnAvailChannels, sonusDsx1AdmnDayLCVThreshold=sonusDsx1AdmnDayLCVThreshold, sonusDsx1MIBNotificationsPrefix=sonusDsx1MIBNotificationsPrefix, sonusDsx1StatTxSlips=sonusDsx1StatTxSlips, sonusDsx1AdmnDayUASThreshold=sonusDsx1AdmnDayUASThreshold, PYSNMP_MODULE_ID=sonusDsx1MIB, sonusDsx1LineStatusChangeNotification=sonusDsx1LineStatusChangeNotification, sonusDs0AdmnTone=sonusDs0AdmnTone, sonusDs0AdmnIdleCode=sonusDs0AdmnIdleCode, sonusDs1ProfileFarSESThreshold=sonusDs1ProfileFarSESThreshold, sonusDs1ProfileDs1LineType=sonusDs1ProfileDs1LineType, sonusDsx1AdminChangeNotification=sonusDsx1AdminChangeNotification, sonusDsx1AdmnDayESThreshold=sonusDsx1AdmnDayESThreshold, sonusDsx1AdmnESThreshold=sonusDsx1AdmnESThreshold, sonusDsx1StatAIS=sonusDsx1StatAIS, sonusDs0AdmnSlotIndex=sonusDs0AdmnSlotIndex, sonusDsx1StatFBE=sonusDsx1StatFBE, sonusDsx1AdmnDayCSSThreshold=sonusDsx1AdmnDayCSSThreshold, sonusDsx1StatStatus=sonusDsx1StatStatus, sonusDsx1StatEnabChannels=sonusDsx1StatEnabChannels, sonusDsx1AdmnRowStatus=sonusDsx1AdmnRowStatus, sonusDs1ProfileFarDayUASThresholdState=sonusDs1ProfileFarDayUASThresholdState, sonusDs1AdmnState=sonusDs1AdmnState, sonusDsx1AdmnTimeout=sonusDsx1AdmnTimeout, sonusDs1ProfileESThresholdState=sonusDs1ProfileESThresholdState, sonusDsx1AdmnSESThreshold=sonusDsx1AdmnSESThreshold, sonusDsx1AdmnFarESThreshold=sonusDsx1AdmnFarESThreshold, sonusDs1ProfileDayPCVThreshold=sonusDs1ProfileDayPCVThreshold, sonusDsx1MIBNotifications=sonusDsx1MIBNotifications, sonusDsx1AdmnFarDayPCVThreshold=sonusDsx1AdmnFarDayPCVThreshold, sonusDs0AdmnEntry=sonusDs0AdmnEntry, sonusDs1ProfileDs1LineBO=sonusDs1ProfileDs1LineBO, sonusDsx1StatSlotIndex=sonusDsx1StatSlotIndex, sonusDsx1StatDs1Index=sonusDsx1StatDs1Index, sonusDsx1StatRED=sonusDsx1StatRED, sonusDs1ProfileFarDayPCVThreshold=sonusDs1ProfileFarDayPCVThreshold, sonusDsx1AdmnState=sonusDsx1AdmnState, sonusDsx1AdmnEchoCancellorSignallingTone=sonusDsx1AdmnEchoCancellorSignallingTone, sonusDsx1AdmnMode=sonusDsx1AdmnMode, sonusDsx1AdmnZeroSuppression=sonusDsx1AdmnZeroSuppression, sonusDs1ProfileFarDayLCVThreshold=sonusDs1ProfileFarDayLCVThreshold, sonusDs1ProfileDayLCVThreshold=sonusDs1ProfileDayLCVThreshold, sonusDs1ProfileDs1LineCoding=sonusDs1ProfileDs1LineCoding, sonusDs1ProfileDayUASThresholdState=sonusDs1ProfileDayUASThresholdState, sonusDs1ProfileDayESThresholdState=sonusDs1ProfileDayESThresholdState, sonusDsx1AdmnDs1Index=sonusDsx1AdmnDs1Index, sonusDsx1AdmnCircuitId=sonusDsx1AdmnCircuitId, sonusDsx1AdmnEchoCancellorHiLevelComp=sonusDsx1AdmnEchoCancellorHiLevelComp, sonusE1StatFEBE=sonusE1StatFEBE, sonusDs1ProfileDayPCVThresholdState=sonusDs1ProfileDayPCVThresholdState, sonusDs0AdmnDs1Index=sonusDs0AdmnDs1Index, sonusDsx1StatDs3Index=sonusDsx1StatDs3Index, sonusDs1ProfileUASThresholdState=sonusDs1ProfileUASThresholdState, sonusDs1ProfileIndex=sonusDs1ProfileIndex, sonusDsx1StatShelfIndex=sonusDsx1StatShelfIndex, sonusDsx1StatCOFA=sonusDsx1StatCOFA, sonusDsx1AdmnFarLCVThreshold=sonusDsx1AdmnFarLCVThreshold)
