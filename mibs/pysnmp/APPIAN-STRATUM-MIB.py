#
# PySNMP MIB module APPIAN-STRATUM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPIAN-STRATUM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:08:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acChassisCurrentTime, acChassisRingId = mibBuilder.importSymbols("APPIAN-CHASSIS-MIB", "acChassisCurrentTime", "acChassisRingId")
AcOpStatus, AcNodeId, acOsap = mibBuilder.importSymbols("APPIAN-SMI-MIB", "AcOpStatus", "AcNodeId", "acOsap")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, Counter64, Unsigned32, TimeTicks, MibIdentifier, IpAddress, iso, Gauge32, Counter32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "Counter64", "Unsigned32", "TimeTicks", "MibIdentifier", "IpAddress", "iso", "Gauge32", "Counter32", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
acStratum = ModuleIdentity((1, 3, 6, 1, 4, 1, 2785, 2, 9))
acStratum.setRevisions(('1900-08-22 00:00',))
if mibBuilder.loadTexts: acStratum.setLastUpdated('0008220000Z')
if mibBuilder.loadTexts: acStratum.setOrganization('Appian Communications, Inc.')
acStratumTable = MibTable((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1), )
if mibBuilder.loadTexts: acStratumTable.setStatus('current')
acStratumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1), ).setIndexNames((0, "APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumEntry.setStatus('current')
acStratumNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 1), AcNodeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acStratumNodeId.setStatus('current')
acStratumClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("bits", 2), ("line", 3))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumClockSource.setStatus('current')
acStratumOpStatusModuleA = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 3), AcOpStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumOpStatusModuleA.setStatus('current')
acStratumOpStatusModuleB = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 4), AcOpStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumOpStatusModuleB.setStatus('current')
acStratumAlarmStatusModuleA = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumAlarmStatusModuleA.setStatus('current')
acStratumAlarmStatusModuleB = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumAlarmStatusModuleB.setStatus('current')
acStratumCurrentClockSourceModuleA = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("bits-a", 2), ("bits-b", 3), ("line-slot1-port1", 4), ("line-slot1-port2", 5), ("line-slot2-port1", 6), ("line-slot2-port2", 7), ("holdover", 8), ("internal", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumCurrentClockSourceModuleA.setStatus('current')
acStratumCurrentClockSourceModuleB = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 0), ("none", 1), ("bits-a", 2), ("bits-b", 3), ("line-slot1-port1", 4), ("line-slot1-port2", 5), ("line-slot2-port1", 6), ("line-slot2-port2", 7), ("holdover", 8), ("internal", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumCurrentClockSourceModuleB.setStatus('current')
acStratumLockoutReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumLockoutReference.setStatus('current')
acStratumManualSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("bits-a", 1), ("bits-b", 2), ("line-slot1", 3), ("line-slot2", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumManualSwitch.setStatus('current')
acStratumForcedSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("bits-a", 1), ("bits-b", 2), ("line-slot1", 3), ("line-slot2", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumForcedSwitch.setStatus('current')
acStratumRevertiveRefSwitchEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumRevertiveRefSwitchEnabled.setStatus('current')
acStratumClearAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumClearAlarms.setStatus('current')
acStratumLineTimingPortSlot1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumLineTimingPortSlot1.setStatus('current')
acStratumLineTimingPortSlot2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumLineTimingPortSlot2.setStatus('current')
acStratumBITSFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("esf", 1), ("d4", 2))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acStratumBITSFramingType.setStatus('current')
acStratumCurrentClockSourceSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 0), ("bits-a", 1), ("bits-b", 2), ("line-slot1-port1", 3), ("line-slot1-port2", 4), ("line-slot2-port1", 5), ("line-slot2-port2", 6), ("holdover-clock-a", 7), ("holdover-clock-b", 8), ("internal-clock-a", 9), ("internal-clock-b", 10), ("internal-sonet-slot1", 11), ("internal-sonet-slot2", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acStratumCurrentClockSourceSystem.setStatus('current')
acStratumTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0))
acStratumFailedModuleATrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 1)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumFailedModuleATrap.setStatus('current')
acStratumFailedModuleBTrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 2)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumFailedModuleBTrap.setStatus('current')
acStratumClockFailureModuleATrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 3)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"), ("APPIAN-STRATUM-MIB", "acStratumAlarmStatusModuleA"))
if mibBuilder.loadTexts: acStratumClockFailureModuleATrap.setStatus('current')
acStratumClockFailureModuleBTrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 4)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"), ("APPIAN-STRATUM-MIB", "acStratumAlarmStatusModuleB"))
if mibBuilder.loadTexts: acStratumClockFailureModuleBTrap.setStatus('current')
acStratumRemovalModuleATrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 5)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumRemovalModuleATrap.setStatus('current')
acStratumRemovalModuleBTrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 6)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumRemovalModuleBTrap.setStatus('current')
acStratumInsertedModuleATrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 7)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumInsertedModuleATrap.setStatus('current')
acStratumInsertedModuleBTrap = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 8)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"))
if mibBuilder.loadTexts: acStratumInsertedModuleBTrap.setStatus('current')
acStratumClockModuleAOk = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 9)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"), ("APPIAN-STRATUM-MIB", "acStratumAlarmStatusModuleA"))
if mibBuilder.loadTexts: acStratumClockModuleAOk.setStatus('current')
acStratumClockModuleBOk = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 10)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"), ("APPIAN-STRATUM-MIB", "acStratumAlarmStatusModuleB"))
if mibBuilder.loadTexts: acStratumClockModuleBOk.setStatus('current')
acStratumSystemClockSourceChange = NotificationType((1, 3, 6, 1, 4, 1, 2785, 2, 9, 0, 11)).setObjects(("APPIAN-CHASSIS-MIB", "acChassisCurrentTime"), ("APPIAN-CHASSIS-MIB", "acChassisRingId"), ("APPIAN-STRATUM-MIB", "acStratumNodeId"), ("APPIAN-STRATUM-MIB", "acStratumCurrentClockSourceSystem"))
if mibBuilder.loadTexts: acStratumSystemClockSourceChange.setStatus('current')
mibBuilder.exportSymbols("APPIAN-STRATUM-MIB", PYSNMP_MODULE_ID=acStratum, acStratumClearAlarms=acStratumClearAlarms, acStratumAlarmStatusModuleA=acStratumAlarmStatusModuleA, acStratumLineTimingPortSlot1=acStratumLineTimingPortSlot1, acStratumForcedSwitch=acStratumForcedSwitch, acStratumSystemClockSourceChange=acStratumSystemClockSourceChange, acStratumRemovalModuleATrap=acStratumRemovalModuleATrap, acStratumLockoutReference=acStratumLockoutReference, acStratumNodeId=acStratumNodeId, acStratumAlarmStatusModuleB=acStratumAlarmStatusModuleB, acStratumLineTimingPortSlot2=acStratumLineTimingPortSlot2, acStratum=acStratum, acStratumFailedModuleBTrap=acStratumFailedModuleBTrap, acStratumCurrentClockSourceSystem=acStratumCurrentClockSourceSystem, acStratumClockFailureModuleBTrap=acStratumClockFailureModuleBTrap, acStratumOpStatusModuleB=acStratumOpStatusModuleB, acStratumBITSFramingType=acStratumBITSFramingType, acStratumManualSwitch=acStratumManualSwitch, acStratumClockSource=acStratumClockSource, acStratumFailedModuleATrap=acStratumFailedModuleATrap, acStratumInsertedModuleBTrap=acStratumInsertedModuleBTrap, acStratumCurrentClockSourceModuleB=acStratumCurrentClockSourceModuleB, acStratumClockModuleBOk=acStratumClockModuleBOk, acStratumClockModuleAOk=acStratumClockModuleAOk, acStratumEntry=acStratumEntry, acStratumCurrentClockSourceModuleA=acStratumCurrentClockSourceModuleA, acStratumTraps=acStratumTraps, acStratumOpStatusModuleA=acStratumOpStatusModuleA, acStratumClockFailureModuleATrap=acStratumClockFailureModuleATrap, acStratumRemovalModuleBTrap=acStratumRemovalModuleBTrap, acStratumInsertedModuleATrap=acStratumInsertedModuleATrap, acStratumTable=acStratumTable, acStratumRevertiveRefSwitchEnabled=acStratumRevertiveRefSwitchEnabled)
