#
# PySNMP MIB module BAY-STACK-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Integer32, iso, Counter32, NotificationType, MibIdentifier, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, TimeTicks, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "iso", "Counter32", "NotificationType", "MibIdentifier", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "TimeTicks", "Gauge32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackStatsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 12))
bayStackStatsMib.setRevisions(('2015-05-11 00:00', '2014-12-03 00:00', '2014-10-15 00:00', '2012-09-12 00:00', '2007-03-09 00:00', '2005-08-12 00:00',))
if mibBuilder.loadTexts: bayStackStatsMib.setLastUpdated('201505110000Z')
if mibBuilder.loadTexts: bayStackStatsMib.setOrganization('Avaya Networks')
bayStackStatsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 12, 0))
bayStackStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 12, 1))
bayStackStatsIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 1), )
if mibBuilder.loadTexts: bayStackStatsIfTable.setStatus('current')
bayStackStatsIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 1, 1), ).setIndexNames((0, "BAY-STACK-STATS-MIB", "bayStackStatsIfIndex"))
if mibBuilder.loadTexts: bayStackStatsIfEntry.setStatus('current')
bayStackStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bayStackStatsIfIndex.setStatus('current')
bayStackStatsIfNoResourcesPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsIfNoResourcesPktsDropped.setStatus('current')
bayStackStatsIfInPfcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsIfInPfcFrames.setStatus('current')
bayStackStatsIfOutPfcFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsIfOutPfcFrames.setStatus('current')
bayStackStatsUnitTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 2), )
if mibBuilder.loadTexts: bayStackStatsUnitTable.setStatus('current')
bayStackStatsUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-STATS-MIB", "bayStackStatsUnitIndex"))
if mibBuilder.loadTexts: bayStackStatsUnitEntry.setStatus('current')
bayStackStatsUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: bayStackStatsUnitIndex.setStatus('current')
bayStackStatsUnitNoResourcesPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsUnitNoResourcesPktsDropped.setStatus('current')
bayStackStatsCoSQueueTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3), )
if mibBuilder.loadTexts: bayStackStatsCoSQueueTable.setStatus('current')
bayStackStatsCoSQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1), ).setIndexNames((0, "BAY-STACK-STATS-MIB", "bayStackStatsCoSQueueIfIndex"), (0, "BAY-STACK-STATS-MIB", "bayStackStatsCoSQueueQueue"))
if mibBuilder.loadTexts: bayStackStatsCoSQueueEntry.setStatus('current')
bayStackStatsCoSQueueIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bayStackStatsCoSQueueIfIndex.setStatus('current')
bayStackStatsCoSQueueQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: bayStackStatsCoSQueueQueue.setStatus('current')
bayStackStatsCoSQueueOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsCoSQueueOutPackets.setStatus('current')
bayStackStatsCoSQueueOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsCoSQueueOutBytes.setStatus('current')
bayStackStatsCoSQueueDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsCoSQueueDropPackets.setStatus('current')
bayStackStatsCoSQueueDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bayStackStatsCoSQueueDropBytes.setStatus('current')
bayStackStatsCoSQueueClear = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 12, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bayStackStatsCoSQueueClear.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-STATS-MIB", bayStackStatsIfEntry=bayStackStatsIfEntry, bayStackStatsIfIndex=bayStackStatsIfIndex, bayStackStatsUnitEntry=bayStackStatsUnitEntry, bayStackStatsIfOutPfcFrames=bayStackStatsIfOutPfcFrames, bayStackStatsCoSQueueOutBytes=bayStackStatsCoSQueueOutBytes, bayStackStatsIfNoResourcesPktsDropped=bayStackStatsIfNoResourcesPktsDropped, bayStackStatsUnitNoResourcesPktsDropped=bayStackStatsUnitNoResourcesPktsDropped, bayStackStatsCoSQueueDropPackets=bayStackStatsCoSQueueDropPackets, bayStackStatsIfInPfcFrames=bayStackStatsIfInPfcFrames, bayStackStatsObjects=bayStackStatsObjects, bayStackStatsUnitIndex=bayStackStatsUnitIndex, bayStackStatsCoSQueueQueue=bayStackStatsCoSQueueQueue, bayStackStatsIfTable=bayStackStatsIfTable, bayStackStatsUnitTable=bayStackStatsUnitTable, bayStackStatsCoSQueueEntry=bayStackStatsCoSQueueEntry, bayStackStatsCoSQueueTable=bayStackStatsCoSQueueTable, bayStackStatsMib=bayStackStatsMib, bayStackStatsCoSQueueDropBytes=bayStackStatsCoSQueueDropBytes, bayStackStatsCoSQueueClear=bayStackStatsCoSQueueClear, bayStackStatsCoSQueueOutPackets=bayStackStatsCoSQueueOutPackets, bayStackStatsNotifications=bayStackStatsNotifications, bayStackStatsCoSQueueIfIndex=bayStackStatsCoSQueueIfIndex, PYSNMP_MODULE_ID=bayStackStatsMib)
