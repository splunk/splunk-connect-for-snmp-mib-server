#
# PySNMP MIB module IANA-MAU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IANA-MAU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:49:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, iso, mib_2, Counter64, ModuleIdentity, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, Counter32, IpAddress, ObjectIdentity, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "mib-2", "Counter64", "ModuleIdentity", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "Counter32", "IpAddress", "ObjectIdentity", "Integer32", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ianaMauMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 154))
ianaMauMIB.setRevisions(('2014-08-01 00:00', '2014-05-22 00:00', '2011-08-12 00:00', '2010-02-23 00:00', '2007-04-21 00:00',))
if mibBuilder.loadTexts: ianaMauMIB.setLastUpdated('201408010000Z')
if mibBuilder.loadTexts: ianaMauMIB.setOrganization('IANA')
class IANAifMauTypeListBits(TextualConvention, Bits):
    reference = '[IEEE802.3], Section 30.5.1.1.2'
    status = 'current'
    namedValues = NamedValues(("bOther", 0), ("bAUI", 1), ("b10base5", 2), ("bFoirl", 3), ("b10base2", 4), ("b10baseT", 5), ("b10baseFP", 6), ("b10baseFB", 7), ("b10baseFL", 8), ("b10broad36", 9), ("b10baseTHD", 10), ("b10baseTFD", 11), ("b10baseFLHD", 12), ("b10baseFLFD", 13), ("b100baseT4", 14), ("b100baseTXHD", 15), ("b100baseTXFD", 16), ("b100baseFXHD", 17), ("b100baseFXFD", 18), ("b100baseT2HD", 19), ("b100baseT2FD", 20), ("b1000baseXHD", 21), ("b1000baseXFD", 22), ("b1000baseLXHD", 23), ("b1000baseLXFD", 24), ("b1000baseSXHD", 25), ("b1000baseSXFD", 26), ("b1000baseCXHD", 27), ("b1000baseCXFD", 28), ("b1000baseTHD", 29), ("b1000baseTFD", 30), ("b10GbaseX", 31), ("b10GbaseLX4", 32), ("b10GbaseR", 33), ("b10GbaseER", 34), ("b10GbaseLR", 35), ("b10GbaseSR", 36), ("b10GbaseW", 37), ("b10GbaseEW", 38), ("b10GbaseLW", 39), ("b10GbaseSW", 40), ("b10GbaseCX4", 41), ("b2BaseTL", 42), ("b10PassTS", 43), ("b100BaseBX10D", 44), ("b100BaseBX10U", 45), ("b100BaseLX10", 46), ("b1000BaseBX10D", 47), ("b1000BaseBX10U", 48), ("b1000BaseLX10", 49), ("b1000BasePX10D", 50), ("b1000BasePX10U", 51), ("b1000BasePX20D", 52), ("b1000BasePX20U", 53), ("b10GbaseT", 54), ("b10GbaseLRM", 55), ("b1000baseKX", 56), ("b10GbaseKX4", 57), ("b10GbaseKR", 58), ("b10G1GbasePRXD1", 59), ("b10G1GbasePRXD2", 60), ("b10G1GbasePRXD3", 61), ("b10G1GbasePRXU1", 62), ("b10G1GbasePRXU2", 63), ("b10G1GbasePRXU3", 64), ("b10GbasePRD1", 65), ("b10GbasePRD2", 66), ("b10GbasePRD3", 67), ("b10GbasePRU1", 68), ("b10GbasePRU3", 69), ("b40GbaseKR4", 70), ("b40GbaseCR4", 71), ("b40GbaseSR4", 72), ("b40GbaseFR", 73), ("b40GbaseLR4", 74), ("b100GbaseCR10", 75), ("b100GbaseSR10", 76), ("b100GbaseLR4", 77), ("b100GbaseER4", 78))

class IANAifMauMediaAvailable(TextualConvention, Integer32):
    reference = '[IEEE802.3], Section 30.5.1.1.4'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("available", 3), ("notAvailable", 4), ("remoteFault", 5), ("invalidSignal", 6), ("remoteJabber", 7), ("remoteLinkLoss", 8), ("remoteTest", 9), ("offline", 10), ("autoNegError", 11), ("pmdLinkFault", 12), ("wisFrameLoss", 13), ("wisSignalLoss", 14), ("pcsLinkFault", 15), ("excessiveBER", 16), ("dxsLinkFault", 17), ("pxsLinkFault", 18), ("availableReduced", 19), ("ready", 20))

class IANAifMauAutoNegCapBits(TextualConvention, Bits):
    reference = '[IEEE802.3], Section 30.6.1.1.5'
    status = 'current'
    namedValues = NamedValues(("bOther", 0), ("b10baseT", 1), ("b10baseTFD", 2), ("b100baseT4", 3), ("b100baseTX", 4), ("b100baseTXFD", 5), ("b100baseT2", 6), ("b100baseT2FD", 7), ("bFdxPause", 8), ("bFdxAPause", 9), ("bFdxSPause", 10), ("bFdxBPause", 11), ("b1000baseX", 12), ("b1000baseXFD", 13), ("b1000baseT", 14), ("b1000baseTFD", 15), ("b10GbaseT", 16), ("b1000baseKX", 17), ("b10GbaseKX4", 18), ("b10GbaseKR", 19), ("b40GbaseKR4", 20), ("b40GbaseCR4", 21), ("b100GbaseCR10", 22))

class IANAifJackType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("other", 1), ("rj45", 2), ("rj45S", 3), ("db9", 4), ("bnc", 5), ("fAUI", 6), ("mAUI", 7), ("fiberSC", 8), ("fiberMIC", 9), ("fiberST", 10), ("telco", 11), ("mtrj", 12), ("hssdc", 13), ("fiberLC", 14), ("cx4", 15), ("sfpPlusDA", 16))

dot3MauType = MibIdentifier((1, 3, 6, 1, 2, 1, 26, 4))
dot3MauTypeAUI = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 1))
if mibBuilder.loadTexts: dot3MauTypeAUI.setStatus('current')
dot3MauType10Base5 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 2))
if mibBuilder.loadTexts: dot3MauType10Base5.setStatus('current')
dot3MauTypeFoirl = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 3))
if mibBuilder.loadTexts: dot3MauTypeFoirl.setStatus('current')
dot3MauType10Base2 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 4))
if mibBuilder.loadTexts: dot3MauType10Base2.setStatus('current')
dot3MauType10BaseT = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 5))
if mibBuilder.loadTexts: dot3MauType10BaseT.setStatus('current')
dot3MauType10BaseFP = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 6))
if mibBuilder.loadTexts: dot3MauType10BaseFP.setStatus('current')
dot3MauType10BaseFB = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 7))
if mibBuilder.loadTexts: dot3MauType10BaseFB.setStatus('current')
dot3MauType10BaseFL = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 8))
if mibBuilder.loadTexts: dot3MauType10BaseFL.setStatus('current')
dot3MauType10Broad36 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 9))
if mibBuilder.loadTexts: dot3MauType10Broad36.setStatus('current')
dot3MauType10BaseTHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 10))
if mibBuilder.loadTexts: dot3MauType10BaseTHD.setStatus('current')
dot3MauType10BaseTFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 11))
if mibBuilder.loadTexts: dot3MauType10BaseTFD.setStatus('current')
dot3MauType10BaseFLHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 12))
if mibBuilder.loadTexts: dot3MauType10BaseFLHD.setStatus('current')
dot3MauType10BaseFLFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 13))
if mibBuilder.loadTexts: dot3MauType10BaseFLFD.setStatus('current')
dot3MauType100BaseT4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 14))
if mibBuilder.loadTexts: dot3MauType100BaseT4.setStatus('current')
dot3MauType100BaseTXHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 15))
if mibBuilder.loadTexts: dot3MauType100BaseTXHD.setStatus('current')
dot3MauType100BaseTXFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 16))
if mibBuilder.loadTexts: dot3MauType100BaseTXFD.setStatus('current')
dot3MauType100BaseFXHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 17))
if mibBuilder.loadTexts: dot3MauType100BaseFXHD.setStatus('current')
dot3MauType100BaseFXFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 18))
if mibBuilder.loadTexts: dot3MauType100BaseFXFD.setStatus('current')
dot3MauType100BaseT2HD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 19))
if mibBuilder.loadTexts: dot3MauType100BaseT2HD.setStatus('current')
dot3MauType100BaseT2FD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 20))
if mibBuilder.loadTexts: dot3MauType100BaseT2FD.setStatus('current')
dot3MauType1000BaseXHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 21))
if mibBuilder.loadTexts: dot3MauType1000BaseXHD.setStatus('current')
dot3MauType1000BaseXFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 22))
if mibBuilder.loadTexts: dot3MauType1000BaseXFD.setStatus('current')
dot3MauType1000BaseLXHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 23))
if mibBuilder.loadTexts: dot3MauType1000BaseLXHD.setStatus('current')
dot3MauType1000BaseLXFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 24))
if mibBuilder.loadTexts: dot3MauType1000BaseLXFD.setStatus('current')
dot3MauType1000BaseSXHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 25))
if mibBuilder.loadTexts: dot3MauType1000BaseSXHD.setStatus('current')
dot3MauType1000BaseSXFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 26))
if mibBuilder.loadTexts: dot3MauType1000BaseSXFD.setStatus('current')
dot3MauType1000BaseCXHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 27))
if mibBuilder.loadTexts: dot3MauType1000BaseCXHD.setStatus('current')
dot3MauType1000BaseCXFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 28))
if mibBuilder.loadTexts: dot3MauType1000BaseCXFD.setStatus('current')
dot3MauType1000BaseTHD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 29))
if mibBuilder.loadTexts: dot3MauType1000BaseTHD.setStatus('current')
dot3MauType1000BaseTFD = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 30))
if mibBuilder.loadTexts: dot3MauType1000BaseTFD.setStatus('current')
dot3MauType10GigBaseX = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 31))
if mibBuilder.loadTexts: dot3MauType10GigBaseX.setStatus('current')
dot3MauType10GigBaseLX4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 32))
if mibBuilder.loadTexts: dot3MauType10GigBaseLX4.setStatus('current')
dot3MauType10GigBaseR = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 33))
if mibBuilder.loadTexts: dot3MauType10GigBaseR.setStatus('current')
dot3MauType10GigBaseER = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 34))
if mibBuilder.loadTexts: dot3MauType10GigBaseER.setStatus('current')
dot3MauType10GigBaseLR = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 35))
if mibBuilder.loadTexts: dot3MauType10GigBaseLR.setStatus('current')
dot3MauType10GigBaseSR = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 36))
if mibBuilder.loadTexts: dot3MauType10GigBaseSR.setStatus('current')
dot3MauType10GigBaseW = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 37))
if mibBuilder.loadTexts: dot3MauType10GigBaseW.setStatus('current')
dot3MauType10GigBaseEW = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 38))
if mibBuilder.loadTexts: dot3MauType10GigBaseEW.setStatus('current')
dot3MauType10GigBaseLW = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 39))
if mibBuilder.loadTexts: dot3MauType10GigBaseLW.setStatus('current')
dot3MauType10GigBaseSW = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 40))
if mibBuilder.loadTexts: dot3MauType10GigBaseSW.setStatus('current')
dot3MauType10GigBaseCX4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 41))
if mibBuilder.loadTexts: dot3MauType10GigBaseCX4.setStatus('current')
dot3MauType2BaseTL = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 42))
if mibBuilder.loadTexts: dot3MauType2BaseTL.setStatus('current')
dot3MauType10PassTS = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 43))
if mibBuilder.loadTexts: dot3MauType10PassTS.setStatus('current')
dot3MauType100BaseBX10D = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 44))
if mibBuilder.loadTexts: dot3MauType100BaseBX10D.setStatus('current')
dot3MauType100BaseBX10U = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 45))
if mibBuilder.loadTexts: dot3MauType100BaseBX10U.setStatus('current')
dot3MauType100BaseLX10 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 46))
if mibBuilder.loadTexts: dot3MauType100BaseLX10.setStatus('current')
dot3MauType1000BaseBX10D = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 47))
if mibBuilder.loadTexts: dot3MauType1000BaseBX10D.setStatus('current')
dot3MauType1000BaseBX10U = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 48))
if mibBuilder.loadTexts: dot3MauType1000BaseBX10U.setStatus('current')
dot3MauType1000BaseLX10 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 49))
if mibBuilder.loadTexts: dot3MauType1000BaseLX10.setStatus('current')
dot3MauType1000BasePX10D = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 50))
if mibBuilder.loadTexts: dot3MauType1000BasePX10D.setStatus('current')
dot3MauType1000BasePX10U = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 51))
if mibBuilder.loadTexts: dot3MauType1000BasePX10U.setStatus('current')
dot3MauType1000BasePX20D = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 52))
if mibBuilder.loadTexts: dot3MauType1000BasePX20D.setStatus('current')
dot3MauType1000BasePX20U = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 53))
if mibBuilder.loadTexts: dot3MauType1000BasePX20U.setStatus('current')
dot3MauType10GbaseT = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 54))
if mibBuilder.loadTexts: dot3MauType10GbaseT.setStatus('current')
dot3MauType10GbaseLRM = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 55))
if mibBuilder.loadTexts: dot3MauType10GbaseLRM.setStatus('current')
dot3MauType1000baseKX = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 56))
if mibBuilder.loadTexts: dot3MauType1000baseKX.setStatus('current')
dot3MauType10GbaseKX4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 57))
if mibBuilder.loadTexts: dot3MauType10GbaseKX4.setStatus('current')
dot3MauType10GbaseKR = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 58))
if mibBuilder.loadTexts: dot3MauType10GbaseKR.setStatus('current')
dot3MauType10G1GbasePRXD1 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 59))
if mibBuilder.loadTexts: dot3MauType10G1GbasePRXD1.setStatus('current')
dot3MauType10G1GbasePRXD2 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 60))
if mibBuilder.loadTexts: dot3MauType10G1GbasePRXD2.setStatus('current')
dot3MauType10G1GbasePRXD3 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 61))
if mibBuilder.loadTexts: dot3MauType10G1GbasePRXD3.setStatus('current')
dot3MauType10G1GbasePRXU1 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 62))
if mibBuilder.loadTexts: dot3MauType10G1GbasePRXU1.setStatus('current')
dot3MauType10G1GbasePRXU2 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 63))
if mibBuilder.loadTexts: dot3MauType10G1GbasePRXU2.setStatus('current')
dot3MauType10G1GbasePRXU3 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 64))
if mibBuilder.loadTexts: dot3MauType10G1GbasePRXU3.setStatus('current')
dot3MauType10GbasePRD1 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 65))
if mibBuilder.loadTexts: dot3MauType10GbasePRD1.setStatus('current')
dot3MauType10GbasePRD2 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 66))
if mibBuilder.loadTexts: dot3MauType10GbasePRD2.setStatus('current')
dot3MauType10GbasePRD3 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 67))
if mibBuilder.loadTexts: dot3MauType10GbasePRD3.setStatus('current')
dot3MauType10GbasePRU1 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 68))
if mibBuilder.loadTexts: dot3MauType10GbasePRU1.setStatus('current')
dot3MauType10GbasePRU3 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 69))
if mibBuilder.loadTexts: dot3MauType10GbasePRU3.setStatus('current')
dot3MauType40GbaseKR4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 70))
if mibBuilder.loadTexts: dot3MauType40GbaseKR4.setStatus('current')
dot3MauType40GbaseCR4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 71))
if mibBuilder.loadTexts: dot3MauType40GbaseCR4.setStatus('current')
dot3MauType40GbaseSR4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 72))
if mibBuilder.loadTexts: dot3MauType40GbaseSR4.setStatus('current')
dot3MauType40GbaseFR = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 73))
if mibBuilder.loadTexts: dot3MauType40GbaseFR.setStatus('current')
dot3MauType40GbaseLR4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 74))
if mibBuilder.loadTexts: dot3MauType40GbaseLR4.setStatus('current')
dot3MauType100GbaseCR10 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 75))
if mibBuilder.loadTexts: dot3MauType100GbaseCR10.setStatus('current')
dot3MauType100GbaseSR10 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 76))
if mibBuilder.loadTexts: dot3MauType100GbaseSR10.setStatus('current')
dot3MauType100GbaseLR4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 77))
if mibBuilder.loadTexts: dot3MauType100GbaseLR4.setStatus('current')
dot3MauType100GbaseER4 = ObjectIdentity((1, 3, 6, 1, 2, 1, 26, 4, 78))
if mibBuilder.loadTexts: dot3MauType100GbaseER4.setStatus('current')
mibBuilder.exportSymbols("IANA-MAU-MIB", dot3MauType=dot3MauType, dot3MauType10GbasePRD2=dot3MauType10GbasePRD2, dot3MauType10Broad36=dot3MauType10Broad36, dot3MauType10G1GbasePRXD1=dot3MauType10G1GbasePRXD1, dot3MauType1000BaseBX10D=dot3MauType1000BaseBX10D, dot3MauType40GbaseSR4=dot3MauType40GbaseSR4, dot3MauType10GigBaseLR=dot3MauType10GigBaseLR, dot3MauType100BaseLX10=dot3MauType100BaseLX10, dot3MauType10GbaseLRM=dot3MauType10GbaseLRM, dot3MauType100GbaseER4=dot3MauType100GbaseER4, dot3MauType100BaseFXFD=dot3MauType100BaseFXFD, dot3MauType10BaseFLFD=dot3MauType10BaseFLFD, IANAifJackType=IANAifJackType, IANAifMauMediaAvailable=IANAifMauMediaAvailable, dot3MauType100BaseBX10D=dot3MauType100BaseBX10D, dot3MauType10GbasePRU1=dot3MauType10GbasePRU1, dot3MauType1000BaseXFD=dot3MauType1000BaseXFD, dot3MauType1000BaseLXHD=dot3MauType1000BaseLXHD, dot3MauType10BaseFP=dot3MauType10BaseFP, dot3MauType10GigBaseR=dot3MauType10GigBaseR, dot3MauType1000BaseBX10U=dot3MauType1000BaseBX10U, dot3MauType10Base5=dot3MauType10Base5, dot3MauType10PassTS=dot3MauType10PassTS, dot3MauType10GbaseKX4=dot3MauType10GbaseKX4, dot3MauType10GbasePRD3=dot3MauType10GbasePRD3, dot3MauType1000BasePX10U=dot3MauType1000BasePX10U, dot3MauType100BaseT4=dot3MauType100BaseT4, dot3MauType100GbaseCR10=dot3MauType100GbaseCR10, dot3MauType100GbaseLR4=dot3MauType100GbaseLR4, dot3MauType10GigBaseX=dot3MauType10GigBaseX, dot3MauType100GbaseSR10=dot3MauType100GbaseSR10, dot3MauType1000BaseCXHD=dot3MauType1000BaseCXHD, dot3MauType1000baseKX=dot3MauType1000baseKX, dot3MauType10GigBaseER=dot3MauType10GigBaseER, dot3MauType10BaseFLHD=dot3MauType10BaseFLHD, PYSNMP_MODULE_ID=ianaMauMIB, dot3MauType100BaseBX10U=dot3MauType100BaseBX10U, dot3MauType1000BaseCXFD=dot3MauType1000BaseCXFD, dot3MauType10GigBaseEW=dot3MauType10GigBaseEW, dot3MauType10GbaseT=dot3MauType10GbaseT, dot3MauType1000BasePX10D=dot3MauType1000BasePX10D, dot3MauType40GbaseFR=dot3MauType40GbaseFR, dot3MauType10G1GbasePRXU1=dot3MauType10G1GbasePRXU1, dot3MauType10GigBaseSR=dot3MauType10GigBaseSR, dot3MauType1000BaseTFD=dot3MauType1000BaseTFD, dot3MauType2BaseTL=dot3MauType2BaseTL, dot3MauType10GbasePRU3=dot3MauType10GbasePRU3, dot3MauType100BaseFXHD=dot3MauType100BaseFXHD, dot3MauType100BaseTXHD=dot3MauType100BaseTXHD, dot3MauType10Base2=dot3MauType10Base2, dot3MauType10GigBaseSW=dot3MauType10GigBaseSW, dot3MauType10GigBaseW=dot3MauType10GigBaseW, dot3MauType10GbasePRD1=dot3MauType10GbasePRD1, dot3MauType10G1GbasePRXU2=dot3MauType10G1GbasePRXU2, dot3MauType1000BaseLX10=dot3MauType1000BaseLX10, dot3MauType1000BasePX20U=dot3MauType1000BasePX20U, dot3MauType10BaseFB=dot3MauType10BaseFB, dot3MauType1000BaseSXHD=dot3MauType1000BaseSXHD, IANAifMauAutoNegCapBits=IANAifMauAutoNegCapBits, dot3MauType10BaseT=dot3MauType10BaseT, dot3MauType40GbaseLR4=dot3MauType40GbaseLR4, dot3MauType10G1GbasePRXD2=dot3MauType10G1GbasePRXD2, dot3MauType10GigBaseLX4=dot3MauType10GigBaseLX4, ianaMauMIB=ianaMauMIB, dot3MauType1000BaseXHD=dot3MauType1000BaseXHD, dot3MauType100BaseT2HD=dot3MauType100BaseT2HD, dot3MauType1000BaseSXFD=dot3MauType1000BaseSXFD, dot3MauType1000BaseTHD=dot3MauType1000BaseTHD, IANAifMauTypeListBits=IANAifMauTypeListBits, dot3MauType100BaseT2FD=dot3MauType100BaseT2FD, dot3MauType1000BaseLXFD=dot3MauType1000BaseLXFD, dot3MauType10GigBaseCX4=dot3MauType10GigBaseCX4, dot3MauType40GbaseCR4=dot3MauType40GbaseCR4, dot3MauType10BaseFL=dot3MauType10BaseFL, dot3MauType10G1GbasePRXD3=dot3MauType10G1GbasePRXD3, dot3MauType10G1GbasePRXU3=dot3MauType10G1GbasePRXU3, dot3MauType10GbaseKR=dot3MauType10GbaseKR, dot3MauType1000BasePX20D=dot3MauType1000BasePX20D, dot3MauType10BaseTFD=dot3MauType10BaseTFD, dot3MauType100BaseTXFD=dot3MauType100BaseTXFD, dot3MauType40GbaseKR4=dot3MauType40GbaseKR4, dot3MauType10BaseTHD=dot3MauType10BaseTHD, dot3MauTypeAUI=dot3MauTypeAUI, dot3MauTypeFoirl=dot3MauTypeFoirl, dot3MauType10GigBaseLW=dot3MauType10GigBaseLW)
