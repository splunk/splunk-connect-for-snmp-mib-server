#
# PySNMP MIB module HH3C-QINQ-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-QINQ-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, Gauge32, Counter64, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Unsigned32, ModuleIdentity, Counter32, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "Gauge32", "Counter64", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Unsigned32", "ModuleIdentity", "Counter32", "IpAddress", "ObjectIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hh3cQINQ = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 69))
hh3cQINQ.setRevisions(('2006-03-10 00:00',))
if mibBuilder.loadTexts: hh3cQINQ.setLastUpdated('200603100000Z')
if mibBuilder.loadTexts: hh3cQINQ.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cQinQSwitchState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hh3cQinQMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1))
hh3cQinQGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 1))
hh3cQinQBpduTunnelSwitch = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 1, 1), Hh3cQinQSwitchState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cQinQBpduTunnelSwitch.setStatus('current')
hh3cQinQEthernetTypeValue = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cQinQEthernetTypeValue.setStatus('current')
hh3cQinQServiceTPIDValue = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cQinQServiceTPIDValue.setStatus('current')
hh3cQinQCustomerTPIDValue = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cQinQCustomerTPIDValue.setStatus('current')
hh3cQinQBpduTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 2), )
if mibBuilder.loadTexts: hh3cQinQBpduTunnelTable.setStatus('current')
hh3cQinQBpduTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-QINQ-MIB", "hh3cQinQProtocolIndex"))
if mibBuilder.loadTexts: hh3cQinQBpduTunnelEntry.setStatus('current')
hh3cQinQProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bpdu", 1), ("stp", 2), ("gmosaic", 3), ("igmp", 4))))
if mibBuilder.loadTexts: hh3cQinQProtocolIndex.setStatus('current')
hh3cQinQBpduRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQBpduRowStatus.setStatus('current')
hh3cQinQPriorityRemarkTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 3), )
if mibBuilder.loadTexts: hh3cQinQPriorityRemarkTable.setStatus('current')
hh3cQinQPriorityRemarkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-QINQ-MIB", "hh3cQinQPriorityValue"))
if mibBuilder.loadTexts: hh3cQinQPriorityRemarkEntry.setStatus('current')
hh3cQinQPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: hh3cQinQPriorityValue.setStatus('current')
hh3cQinQPriorityRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQPriorityRemarkValue.setStatus('current')
hh3cQinQPriorityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQPriorityRowStatus.setStatus('current')
hh3cQinQVidTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4), )
if mibBuilder.loadTexts: hh3cQinQVidTable.setStatus('current')
hh3cQinQVidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-QINQ-MIB", "hh3cQinQVlanID"))
if mibBuilder.loadTexts: hh3cQinQVidEntry.setStatus('current')
hh3cQinQVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hh3cQinQVlanID.setStatus('current')
hh3cQinQInboundVidListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQInboundVidListLow.setStatus('current')
hh3cQinQInboundVidListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQInboundVidListHigh.setStatus('current')
hh3cQinQVidEthernetType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33024)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQVidEthernetType.setStatus('current')
hh3cQinQVidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQVidRowStatus.setStatus('current')
hh3cQinQVidSwapTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 5), )
if mibBuilder.loadTexts: hh3cQinQVidSwapTable.setStatus('current')
hh3cQinQVidSwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-QINQ-MIB", "hh3cQinQVlanID"), (0, "HH3C-QINQ-MIB", "hh3cQinQVidSwapOld"))
if mibBuilder.loadTexts: hh3cQinQVidSwapEntry.setStatus('current')
hh3cQinQVidSwapOld = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hh3cQinQVidSwapOld.setStatus('current')
hh3cQinQVidSwapNew = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQVidSwapNew.setStatus('current')
hh3cQinQVidSwapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQVidSwapRowStatus.setStatus('current')
hh3cQinQPrioritySwapTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 6), )
if mibBuilder.loadTexts: hh3cQinQPrioritySwapTable.setStatus('current')
hh3cQinQPrioritySwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-QINQ-MIB", "hh3cQinQVlanID"), (0, "HH3C-QINQ-MIB", "hh3cQinQPrioritySwapOld"))
if mibBuilder.loadTexts: hh3cQinQPrioritySwapEntry.setStatus('current')
hh3cQinQPrioritySwapOld = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: hh3cQinQPrioritySwapOld.setStatus('current')
hh3cQinQPrioritySwapNew = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQPrioritySwapNew.setStatus('current')
hh3cQinQPrioritySwapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQPrioritySwapRowStatus.setStatus('current')
hh3cQinQIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7), )
if mibBuilder.loadTexts: hh3cQinQIfConfigTable.setStatus('current')
hh3cQinQIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cQinQIfConfigEntry.setStatus('current')
hh3cQinQIfEthernetType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33024)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfEthernetType.setStatus('current')
hh3cQinQIfSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 2), Hh3cQinQSwitchState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfSwitch.setStatus('current')
hh3cQinQIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfRowStatus.setStatus('current')
hh3cQinQIfServiceTPIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfServiceTPIDValue.setStatus('current')
hh3cQinQIfCustomerTPIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfCustomerTPIDValue.setStatus('current')
hh3cQinQIfUplinkSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 6), Hh3cQinQSwitchState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfUplinkSwitch.setStatus('current')
hh3cQinQIfDownlinkSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 69, 1, 7, 1, 7), Hh3cQinQSwitchState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQinQIfDownlinkSwitch.setStatus('current')
mibBuilder.exportSymbols("HH3C-QINQ-MIB", hh3cQinQMibObject=hh3cQinQMibObject, hh3cQinQVidSwapTable=hh3cQinQVidSwapTable, hh3cQinQIfConfigEntry=hh3cQinQIfConfigEntry, hh3cQinQIfServiceTPIDValue=hh3cQinQIfServiceTPIDValue, hh3cQinQPrioritySwapRowStatus=hh3cQinQPrioritySwapRowStatus, hh3cQinQIfConfigTable=hh3cQinQIfConfigTable, hh3cQinQBpduTunnelSwitch=hh3cQinQBpduTunnelSwitch, hh3cQinQVidSwapNew=hh3cQinQVidSwapNew, hh3cQinQPriorityValue=hh3cQinQPriorityValue, hh3cQinQPrioritySwapOld=hh3cQinQPrioritySwapOld, hh3cQinQBpduRowStatus=hh3cQinQBpduRowStatus, hh3cQinQVidRowStatus=hh3cQinQVidRowStatus, hh3cQinQVidEntry=hh3cQinQVidEntry, hh3cQinQIfEthernetType=hh3cQinQIfEthernetType, hh3cQinQIfCustomerTPIDValue=hh3cQinQIfCustomerTPIDValue, hh3cQinQCustomerTPIDValue=hh3cQinQCustomerTPIDValue, hh3cQinQVidTable=hh3cQinQVidTable, hh3cQinQProtocolIndex=hh3cQinQProtocolIndex, hh3cQinQIfRowStatus=hh3cQinQIfRowStatus, hh3cQinQPrioritySwapTable=hh3cQinQPrioritySwapTable, hh3cQinQVidEthernetType=hh3cQinQVidEthernetType, hh3cQinQIfUplinkSwitch=hh3cQinQIfUplinkSwitch, hh3cQinQPriorityRemarkEntry=hh3cQinQPriorityRemarkEntry, hh3cQinQPriorityRowStatus=hh3cQinQPriorityRowStatus, hh3cQinQBpduTunnelTable=hh3cQinQBpduTunnelTable, hh3cQinQVlanID=hh3cQinQVlanID, hh3cQinQIfDownlinkSwitch=hh3cQinQIfDownlinkSwitch, hh3cQinQPrioritySwapEntry=hh3cQinQPrioritySwapEntry, hh3cQinQBpduTunnelEntry=hh3cQinQBpduTunnelEntry, PYSNMP_MODULE_ID=hh3cQINQ, hh3cQinQIfSwitch=hh3cQinQIfSwitch, hh3cQinQInboundVidListLow=hh3cQinQInboundVidListLow, hh3cQinQInboundVidListHigh=hh3cQinQInboundVidListHigh, hh3cQINQ=hh3cQINQ, hh3cQinQPriorityRemarkValue=hh3cQinQPriorityRemarkValue, Hh3cQinQSwitchState=Hh3cQinQSwitchState, hh3cQinQVidSwapRowStatus=hh3cQinQVidSwapRowStatus, hh3cQinQGlobalConfigGroup=hh3cQinQGlobalConfigGroup, hh3cQinQPriorityRemarkTable=hh3cQinQPriorityRemarkTable, hh3cQinQVidSwapEntry=hh3cQinQVidSwapEntry, hh3cQinQEthernetTypeValue=hh3cQinQEthernetTypeValue, hh3cQinQServiceTPIDValue=hh3cQinQServiceTPIDValue, hh3cQinQVidSwapOld=hh3cQinQVidSwapOld, hh3cQinQPrioritySwapNew=hh3cQinQPrioritySwapNew)
