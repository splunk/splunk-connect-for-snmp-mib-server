#
# PySNMP MIB module SSL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SSL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ObjectIdentity, Gauge32, MibIdentifier, ModuleIdentity, Integer32, Counter32, IpAddress, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ObjectIdentity", "Gauge32", "MibIdentifier", "ModuleIdentity", "Integer32", "Counter32", "IpAddress", "Counter64", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
swSSLMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 7))
if mibBuilder.loadTexts: swSSLMIB.setLastUpdated('9911220000Z')
if mibBuilder.loadTexts: swSSLMIB.setOrganization('Working Group')
swSSLMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 7, 1))
swSSLStatusAdmin = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLStatusAdmin.setStatus('current')
swSSLCipherSuites = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 1, 2), Bits().clone(namedValues=NamedValues(("rsa-with-rc4-128-MD5", 0), ("rsa-with-3des-ede-cbc-sha", 1), ("dhe-dss-with-3des-ede-cbc-sha", 2), ("rsa-export-with-rc4-40-md5", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLCipherSuites.setStatus('current')
swSSLCacheTimeout = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLCacheTimeout.setStatus('current')
swSSLCertificateFile = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 7, 2))
swSSLCertificateFileIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLCertificateFileIPAddr.setStatus('current')
swSSLCertificateFilePath = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLCertificateFilePath.setStatus('current')
swSSLCertificateKeyFilePath = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLCertificateKeyFilePath.setStatus('current')
swSSLCertificateFileCtrl = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("inactive", 2), ("start", 3), ("delete", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swSSLCertificateFileCtrl.setStatus('current')
swSSLCertificateFileShowSatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 7, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("rsa", 2), ("dsa", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSSLCertificateFileShowSatus.setStatus('current')
mibBuilder.exportSymbols("SSL-MIB", swSSLMIB=swSSLMIB, swSSLCertificateFile=swSSLCertificateFile, swSSLMgmt=swSSLMgmt, swSSLCipherSuites=swSSLCipherSuites, swSSLStatusAdmin=swSSLStatusAdmin, swSSLCertificateKeyFilePath=swSSLCertificateKeyFilePath, swSSLCertificateFilePath=swSSLCertificateFilePath, swSSLCacheTimeout=swSSLCacheTimeout, swSSLCertificateFileShowSatus=swSSLCertificateFileShowSatus, swSSLCertificateFileIPAddr=swSSLCertificateFileIPAddr, PYSNMP_MODULE_ID=swSSLMIB, swSSLCertificateFileCtrl=swSSLCertificateFileCtrl)
