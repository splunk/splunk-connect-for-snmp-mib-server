#
# PySNMP MIB module CISCO-NAT-CGN-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-NAT-CGN-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:51:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
natCountersEntry, natInstanceIndex, NatBehaviorType, NatPoolingType, natInstanceEntry = mibBuilder.importSymbols("NAT-MIB", "natCountersEntry", "natInstanceIndex", "NatBehaviorType", "NatPoolingType", "natInstanceEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, ObjectIdentity, IpAddress, Counter64, Counter32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, Unsigned32, MibIdentifier, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "IpAddress", "Counter64", "Counter32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "Unsigned32", "MibIdentifier", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoNatCgnExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 818))
ciscoNatCgnExtMIB.setRevisions(('2014-04-03 00:00',))
if mibBuilder.loadTexts: ciscoNatCgnExtMIB.setLastUpdated('201404030000Z')
if mibBuilder.loadTexts: ciscoNatCgnExtMIB.setOrganization('Cisco Systems, Inc.')
ciscoNatCgnExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 818, 0))
ciscoNatCgnExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 818, 1))
ciscoNatCgnExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 818, 2))
class NatCgnInstanceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("nat44", 1), ("nat64Stateful", 2), ("dsLite", 3))

class NatCgnALGType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("algActiveFTP", 1), ("algDNS", 2), ("algH323", 3), ("algHTTP", 4), ("algLDAP", 5), ("algMSRPC", 6), ("algNetBIOS", 7), ("algPCP", 8), ("algPPTP", 9), ("algRCMD", 10), ("algRTSP", 11), ("algSCCP", 12), ("algSIP", 13), ("algSunRPC", 14))

cNatCgnInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1), )
if mibBuilder.loadTexts: cNatCgnInstanceTable.setStatus('current')
cNatCgnInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1), )
natInstanceEntry.registerAugmentions(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceEntry"))
cNatCgnInstanceEntry.setIndexNames(*natInstanceEntry.getIndexNames())
if mibBuilder.loadTexts: cNatCgnInstanceEntry.setStatus('current')
cNatCgnInstanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 1), NatCgnInstanceType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceType.setStatus('current')
cNatCgnInstanceServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceServiceName.setStatus('current')
cNatCgnInstanceVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceVrf.setStatus('current')
cNatCgnInstanceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceInterface.setStatus('current')
cNatCgnInstanceBehaviorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 5), NatBehaviorType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceBehaviorType.setStatus('current')
cNatCgnInstancePoolingType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 6), NatPoolingType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstancePoolingType.setStatus('current')
cNatCgnInstanceProtocolPortLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceProtocolPortLimit.setStatus('current')
cNatCgnInstanceProtocolPortBulkAllocControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnInstanceProtocolPortBulkAllocControl.setStatus('current')
cNatCgnCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2))
cNatCgnCounterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1), )
if mibBuilder.loadTexts: cNatCgnCounterTable.setStatus('current')
cNatCgnCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1), )
natCountersEntry.registerAugmentions(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterEntry"))
cNatCgnCounterEntry.setIndexNames(*natCountersEntry.getIndexNames())
if mibBuilder.loadTexts: cNatCgnCounterEntry.setStatus('current')
cNatCgnCounterSessionCreations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterSessionCreations.setStatus('current')
cNatCgnCounterSessionRemovals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterSessionRemovals.setStatus('current')
cNatCgnCounterOutOfSessionDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterOutOfSessionDrops.setStatus('current')
cNatCgnCounterSessionLimitDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 4), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterSessionLimitDrops.setStatus('current')
cNatCgnCounterNoMappingEntryDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterNoMappingEntryDrops.setStatus('current')
cNatCgnCounterSourceIPOutOfRangeDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 6), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterSourceIPOutOfRangeDrops.setStatus('current')
cNatCgnCounterEndPointFilteringDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 7), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterEndPointFilteringDrops.setStatus('current')
cNatCgnCounterTCPSequenceDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 8), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterTCPSequenceDrops.setStatus('current')
cNatCgnCounterTCPMappingDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 9), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterTCPMappingDrops.setStatus('current')
cNatCgnCounterFragmentPktsInToOutDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterFragmentPktsInToOutDrops.setStatus('current')
cNatCgnCounterFragmentPktsOutToInDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterFragmentPktsOutToInDrops.setStatus('current')
cNatCgnCounterCurrentPortAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterCurrentPortAllocation.setStatus('current')
cNatCgnCounterPortUsageLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnCounterPortUsageLowThreshold.setStatus('current')
cNatCgnCounterPortUsageClearLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnCounterPortUsageClearLowThreshold.setStatus('current')
cNatCgnCounterPortUsageHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnCounterPortUsageHighThreshold.setStatus('current')
cNatCgnCounterPortUsageClearHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cNatCgnCounterPortUsageClearHighThreshold.setStatus('current')
cNatCgnCounterAverageBulkPortUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 1, 1, 17), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnCounterAverageBulkPortUsage.setStatus('current')
cNatCgnLogStatTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2), )
if mibBuilder.loadTexts: cNatCgnLogStatTable.setStatus('current')
cNatCgnLogStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"))
if mibBuilder.loadTexts: cNatCgnLogStatEntry.setStatus('current')
cNatCgnLogStatMappingCreateRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatMappingCreateRecords.setStatus('current')
cNatCgnLogStatMappingDeleteRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatMappingDeleteRecords.setStatus('current')
cNatCgnLogStatSessionCreateRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatSessionCreateRecords.setStatus('current')
cNatCgnLogStatSessionDeleteRecords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatSessionDeleteRecords.setStatus('current')
cNatCgnLogStatNetflowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatNetflowPackets.setStatus('current')
cNatCgnLogStatNetflowPacketDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatNetflowPacketDrops.setStatus('current')
cNatCgnLogStatSyslogPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatSyslogPackets.setStatus('current')
cNatCgnLogStatSyslogPacketDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnLogStatSyslogPacketDrops.setStatus('current')
cNatCgnALGCountersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3), )
if mibBuilder.loadTexts: cNatCgnALGCountersTable.setStatus('current')
cNatCgnALGCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGType"))
if mibBuilder.loadTexts: cNatCgnALGCountersEntry.setStatus('current')
cNatCgnALGType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1, 1), NatCgnALGType())
if mibBuilder.loadTexts: cNatCgnALGType.setStatus('current')
cNatCgnALGStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("unSupported", 2), ("notEnabled", 3), ("enabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnALGStatus.setStatus('current')
cNatCgnALGMappingCreations = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnALGMappingCreations.setStatus('current')
cNatCgnALGMappingRemovals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnALGMappingRemovals.setStatus('current')
cNatCgnALGUnsupportedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnALGUnsupportedErrors.setStatus('current')
cNatCgnALGProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 818, 1, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cNatCgnALGProtocolErrors.setStatus('current')
cNatCgnNotifPortUsageWatermarkLow = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 818, 0, 1)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterCurrentPortAllocation"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageLowThreshold"))
if mibBuilder.loadTexts: cNatCgnNotifPortUsageWatermarkLow.setStatus('current')
cNatCgnNotifPortUsageWatermarkLowClear = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 818, 0, 2)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterCurrentPortAllocation"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageClearLowThreshold"))
if mibBuilder.loadTexts: cNatCgnNotifPortUsageWatermarkLowClear.setStatus('current')
cNatCgnNotifPortUsageWatermarkHigh = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 818, 0, 3)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterCurrentPortAllocation"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageHighThreshold"))
if mibBuilder.loadTexts: cNatCgnNotifPortUsageWatermarkHigh.setStatus('current')
cNatCgnNotifPortUsageWatermarkHighClear = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 818, 0, 4)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterCurrentPortAllocation"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageClearHighThreshold"))
if mibBuilder.loadTexts: cNatCgnNotifPortUsageWatermarkHighClear.setStatus('current')
cNatCgnMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 1))
cNatCgnMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2))
cNatCgnModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 1, 1)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnConfigGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCountersGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnNotificationsGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnOptionConfigGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnBulkAllocGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnSessionGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnNetflowLoggingGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnSyslogLoggingGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnFragmentsGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGCountersGroup"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnServiceNameGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnModuleCompliance = cNatCgnModuleCompliance.setStatus('current')
cNatCgnConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 1)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceType"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceInterface"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceVrf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnConfigGroup = cNatCgnConfigGroup.setStatus('current')
cNatCgnOptionConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 2)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceBehaviorType"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstancePoolingType"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceProtocolPortLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnOptionConfigGroup = cNatCgnOptionConfigGroup.setStatus('current')
cNatCgnCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 3)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterNoMappingEntryDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterSourceIPOutOfRangeDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterEndPointFilteringDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterTCPSequenceDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterTCPMappingDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterCurrentPortAllocation"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageLowThreshold"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageClearLowThreshold"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageHighThreshold"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterPortUsageClearHighThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnCountersGroup = cNatCgnCountersGroup.setStatus('current')
cNatCgnSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 4)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterSessionCreations"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterSessionRemovals"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterOutOfSessionDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterEndPointFilteringDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterSessionLimitDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnSessionGroup = cNatCgnSessionGroup.setStatus('current')
cNatCgnBulkAllocGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 5)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceProtocolPortBulkAllocControl"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterAverageBulkPortUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnBulkAllocGroup = cNatCgnBulkAllocGroup.setStatus('current')
cNatCgnNetflowLoggingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 6)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatMappingCreateRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatMappingDeleteRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatSessionCreateRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatSessionDeleteRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatNetflowPackets"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatNetflowPacketDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnNetflowLoggingGroup = cNatCgnNetflowLoggingGroup.setStatus('current')
cNatCgnSyslogLoggingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 7)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatMappingCreateRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatMappingDeleteRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatSessionCreateRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatSessionDeleteRecords"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatSyslogPackets"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnLogStatSyslogPacketDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnSyslogLoggingGroup = cNatCgnSyslogLoggingGroup.setStatus('current')
cNatCgnFragmentsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 8)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterFragmentPktsInToOutDrops"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnCounterFragmentPktsOutToInDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnFragmentsGroup = cNatCgnFragmentsGroup.setStatus('current')
cNatCgnALGCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 9)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGStatus"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGMappingCreations"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGMappingRemovals"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGUnsupportedErrors"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnALGProtocolErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnALGCountersGroup = cNatCgnALGCountersGroup.setStatus('current')
cNatCgnNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 15)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnNotifPortUsageWatermarkLow"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnNotifPortUsageWatermarkLowClear"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnNotifPortUsageWatermarkHigh"), ("CISCO-NAT-CGN-EXT-MIB", "cNatCgnNotifPortUsageWatermarkHighClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnNotificationsGroup = cNatCgnNotificationsGroup.setStatus('current')
cNatCgnServiceNameGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 818, 2, 2, 11)).setObjects(("CISCO-NAT-CGN-EXT-MIB", "cNatCgnInstanceServiceName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cNatCgnServiceNameGroup = cNatCgnServiceNameGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-NAT-CGN-EXT-MIB", cNatCgnCounterOutOfSessionDrops=cNatCgnCounterOutOfSessionDrops, cNatCgnConfigGroup=cNatCgnConfigGroup, cNatCgnLogStatNetflowPacketDrops=cNatCgnLogStatNetflowPacketDrops, cNatCgnLogStatSyslogPackets=cNatCgnLogStatSyslogPackets, cNatCgnCounterNoMappingEntryDrops=cNatCgnCounterNoMappingEntryDrops, ciscoNatCgnExtMIBNotifs=ciscoNatCgnExtMIBNotifs, cNatCgnInstanceInterface=cNatCgnInstanceInterface, cNatCgnCounters=cNatCgnCounters, cNatCgnALGType=cNatCgnALGType, cNatCgnNotifPortUsageWatermarkLow=cNatCgnNotifPortUsageWatermarkLow, cNatCgnServiceNameGroup=cNatCgnServiceNameGroup, cNatCgnLogStatMappingCreateRecords=cNatCgnLogStatMappingCreateRecords, cNatCgnNotifPortUsageWatermarkLowClear=cNatCgnNotifPortUsageWatermarkLowClear, cNatCgnMIBGroups=cNatCgnMIBGroups, cNatCgnCounterFragmentPktsOutToInDrops=cNatCgnCounterFragmentPktsOutToInDrops, NatCgnInstanceType=NatCgnInstanceType, cNatCgnInstanceProtocolPortLimit=cNatCgnInstanceProtocolPortLimit, cNatCgnALGMappingCreations=cNatCgnALGMappingCreations, cNatCgnALGStatus=cNatCgnALGStatus, cNatCgnALGCountersTable=cNatCgnALGCountersTable, cNatCgnLogStatSyslogPacketDrops=cNatCgnLogStatSyslogPacketDrops, cNatCgnCounterPortUsageHighThreshold=cNatCgnCounterPortUsageHighThreshold, cNatCgnInstanceType=cNatCgnInstanceType, cNatCgnCounterEndPointFilteringDrops=cNatCgnCounterEndPointFilteringDrops, cNatCgnFragmentsGroup=cNatCgnFragmentsGroup, cNatCgnInstanceEntry=cNatCgnInstanceEntry, cNatCgnOptionConfigGroup=cNatCgnOptionConfigGroup, cNatCgnMIBCompliances=cNatCgnMIBCompliances, cNatCgnInstanceBehaviorType=cNatCgnInstanceBehaviorType, cNatCgnCounterPortUsageLowThreshold=cNatCgnCounterPortUsageLowThreshold, PYSNMP_MODULE_ID=ciscoNatCgnExtMIB, cNatCgnLogStatTable=cNatCgnLogStatTable, NatCgnALGType=NatCgnALGType, cNatCgnLogStatSessionDeleteRecords=cNatCgnLogStatSessionDeleteRecords, ciscoNatCgnExtMIB=ciscoNatCgnExtMIB, cNatCgnLogStatSessionCreateRecords=cNatCgnLogStatSessionCreateRecords, cNatCgnCounterFragmentPktsInToOutDrops=cNatCgnCounterFragmentPktsInToOutDrops, cNatCgnCounterSessionCreations=cNatCgnCounterSessionCreations, cNatCgnCounterAverageBulkPortUsage=cNatCgnCounterAverageBulkPortUsage, cNatCgnALGMappingRemovals=cNatCgnALGMappingRemovals, cNatCgnSessionGroup=cNatCgnSessionGroup, cNatCgnSyslogLoggingGroup=cNatCgnSyslogLoggingGroup, cNatCgnNotificationsGroup=cNatCgnNotificationsGroup, cNatCgnBulkAllocGroup=cNatCgnBulkAllocGroup, cNatCgnCounterTable=cNatCgnCounterTable, cNatCgnCounterSessionRemovals=cNatCgnCounterSessionRemovals, cNatCgnLogStatEntry=cNatCgnLogStatEntry, cNatCgnALGProtocolErrors=cNatCgnALGProtocolErrors, cNatCgnLogStatMappingDeleteRecords=cNatCgnLogStatMappingDeleteRecords, cNatCgnALGCountersEntry=cNatCgnALGCountersEntry, cNatCgnNetflowLoggingGroup=cNatCgnNetflowLoggingGroup, cNatCgnCounterPortUsageClearLowThreshold=cNatCgnCounterPortUsageClearLowThreshold, cNatCgnModuleCompliance=cNatCgnModuleCompliance, cNatCgnALGUnsupportedErrors=cNatCgnALGUnsupportedErrors, cNatCgnCountersGroup=cNatCgnCountersGroup, cNatCgnInstanceServiceName=cNatCgnInstanceServiceName, cNatCgnInstanceVrf=cNatCgnInstanceVrf, cNatCgnALGCountersGroup=cNatCgnALGCountersGroup, cNatCgnInstanceProtocolPortBulkAllocControl=cNatCgnInstanceProtocolPortBulkAllocControl, cNatCgnInstancePoolingType=cNatCgnInstancePoolingType, ciscoNatCgnExtMIBConform=ciscoNatCgnExtMIBConform, cNatCgnCounterEntry=cNatCgnCounterEntry, cNatCgnCounterSessionLimitDrops=cNatCgnCounterSessionLimitDrops, cNatCgnNotifPortUsageWatermarkHigh=cNatCgnNotifPortUsageWatermarkHigh, cNatCgnNotifPortUsageWatermarkHighClear=cNatCgnNotifPortUsageWatermarkHighClear, cNatCgnLogStatNetflowPackets=cNatCgnLogStatNetflowPackets, ciscoNatCgnExtMIBObjects=ciscoNatCgnExtMIBObjects, cNatCgnCounterSourceIPOutOfRangeDrops=cNatCgnCounterSourceIPOutOfRangeDrops, cNatCgnCounterTCPSequenceDrops=cNatCgnCounterTCPSequenceDrops, cNatCgnInstanceTable=cNatCgnInstanceTable, cNatCgnCounterPortUsageClearHighThreshold=cNatCgnCounterPortUsageClearHighThreshold, cNatCgnCounterTCPMappingDrops=cNatCgnCounterTCPMappingDrops, cNatCgnCounterCurrentPortAllocation=cNatCgnCounterCurrentPortAllocation)
