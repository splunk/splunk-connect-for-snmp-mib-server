#
# PySNMP MIB module Wellfleet-IPEX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-IPEX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, TimeTicks, Gauge32, NotificationType, Integer32, ObjectIdentity, MibIdentifier, Counter32, ModuleIdentity, IpAddress, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "TimeTicks", "Gauge32", "NotificationType", "Integer32", "ObjectIdentity", "MibIdentifier", "Counter32", "ModuleIdentity", "IpAddress", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfIpexGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfIpexGroup")
wfIpex = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1))
wfIpexDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexDelete.setStatus('mandatory')
wfIpexDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexDisable.setStatus('mandatory')
wfIpexState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexState.setStatus('mandatory')
wfIpexMaxMessageSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 4096)).clone(1600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMaxMessageSize.setStatus('mandatory')
wfIpexInsCalledDte = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexInsCalledDte.setStatus('mandatory')
wfIpexInsCallingDte = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexInsCallingDte.setStatus('mandatory')
wfIpexTcpRequestLimit = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexTcpRequestLimit.setStatus('mandatory')
wfIpexTcpRequestCheck = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexTcpRequestCheck.setStatus('mandatory')
wfIpexSendResetRequestOnTCPUp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 9), Integer32().clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexSendResetRequestOnTCPUp.setStatus('mandatory')
wfIpexTranslateNetworkOutOfOrder = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 10), Integer32().clone(29)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexTranslateNetworkOutOfOrder.setStatus('mandatory')
wfIpexTcpUseIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexTcpUseIpAddress.setStatus('mandatory')
wfIpexBobEnabled = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexBobEnabled.setStatus('mandatory')
wfIpexBobTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000)).clone(15000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexBobTimeout.setStatus('mandatory')
wfIpexMaxAuditIp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 14), Integer32().clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMaxAuditIp.setStatus('mandatory')
wfIpexSessionInstanceIdOffsetForSvc = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexSessionInstanceIdOffsetForSvc.setStatus('mandatory')
wfIpexMappingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2), )
if mibBuilder.loadTexts: wfIpexMappingTable.setStatus('mandatory')
wfIpexMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1), ).setIndexNames((0, "Wellfleet-IPEX-MIB", "wfIpexMappingSrcConnCct"), (0, "Wellfleet-IPEX-MIB", "wfIpexMappingSrcConnType"), (0, "Wellfleet-IPEX-MIB", "wfIpexMappingID1"), (0, "Wellfleet-IPEX-MIB", "wfIpexMappingID2"))
if mibBuilder.loadTexts: wfIpexMappingEntry.setStatus('mandatory')
wfIpexMappingDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingDelete.setStatus('mandatory')
wfIpexMappingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingDisable.setStatus('mandatory')
wfIpexMappingSrcConnCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexMappingSrcConnCct.setStatus('mandatory')
wfIpexMappingSrcConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2), ("dcesvc", 4), ("lapb", 8), ("tcp", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexMappingSrcConnType.setStatus('mandatory')
wfIpexMappingID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexMappingID1.setStatus('mandatory')
wfIpexMappingID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexMappingID2.setStatus('mandatory')
wfIpexMappingDstConnCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingDstConnCct.setStatus('mandatory')
wfIpexMappingDstConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2), ("dcesvc", 4), ("lapb", 8), ("tcp", 16))).clone('pvc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingDstConnType.setStatus('mandatory')
wfIpexMappingLocalDTEAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingLocalDTEAddr.setStatus('mandatory')
wfIpexMappingRemoteDTEAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingRemoteDTEAddr.setStatus('mandatory')
wfIpexMappingPvcLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingPvcLcn.setStatus('mandatory')
wfIpexMappingRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingRemoteIpAddr.setStatus('mandatory')
wfIpexMappingRemoteTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingRemoteTcpPort.setStatus('mandatory')
wfIpexMappingQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 8192)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingQueueSize.setStatus('mandatory')
wfIpexMappingSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingSlotNumber.setStatus('mandatory')
wfIpexMappingCtrlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("end2end", 2), ("gateway", 3))).clone('end2end')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingCtrlMode.setStatus('mandatory')
wfIpexMappingX25CUDF = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingX25CUDF.setStatus('mandatory')
wfIpexMappingIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingIdleTimer.setStatus('mandatory')
wfIpexMappingKeepaliveTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingKeepaliveTimer.setStatus('mandatory')
wfIpexMappingKeepaliveRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingKeepaliveRetries.setStatus('mandatory')
wfIpexMappingTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingTrace.setStatus('mandatory')
wfIpexMappingMsgHdrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("short", 2), ("long", 3), ("full", 4))).clone('full')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingMsgHdrType.setStatus('mandatory')
wfIpexMappingRemoteBackupIp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingRemoteBackupIp.setStatus('mandatory')
wfIpexMappingXlateCallingX121 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingXlateCallingX121.setStatus('mandatory')
wfIpexMappingTcpMaxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingTcpMaxRetry.setStatus('mandatory')
wfIpexMappingCfgLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingCfgLocalIpAddr.setStatus('mandatory')
wfIpexMappingRemoteBackupTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 2, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpexMappingRemoteBackupTcpPort.setStatus('mandatory')
wfIpexSessionTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3), )
if mibBuilder.loadTexts: wfIpexSessionTable.setStatus('mandatory')
wfIpexSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1), ).setIndexNames((0, "Wellfleet-IPEX-MIB", "wfIpexSessionSrcConnCct"), (0, "Wellfleet-IPEX-MIB", "wfIpexSessionIndex"))
if mibBuilder.loadTexts: wfIpexSessionEntry.setStatus('mandatory')
wfIpexSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("x25up", 1), ("tcpup", 2), ("ccestab", 3), ("notconn", 4), ("lapbup", 5))).clone('notconn')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionState.setStatus('mandatory')
wfIpexSessionSrcConnCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionSrcConnCct.setStatus('mandatory')
wfIpexSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionIndex.setStatus('mandatory')
wfIpexSessionSrcConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2), ("dcesvc", 4), ("lapb", 8), ("tcp", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionSrcConnType.setStatus('mandatory')
wfIpexSessionDstConnCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionDstConnCct.setStatus('mandatory')
wfIpexSessionDstConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2), ("dcesvc", 4), ("lapb", 8), ("tcp", 16))).clone('pvc')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionDstConnType.setStatus('mandatory')
wfIpexSessionLocalDTEAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionLocalDTEAddr.setStatus('mandatory')
wfIpexSessionRemoteDTEAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionRemoteDTEAddr.setStatus('mandatory')
wfIpexSessionLCN = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionLCN.setStatus('mandatory')
wfIpexSessionLocalIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionLocalIpAddr.setStatus('mandatory')
wfIpexSessionLocalTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionLocalTcpPort.setStatus('mandatory')
wfIpexSessionRemoteIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionRemoteIpAddr.setStatus('mandatory')
wfIpexSessionRemoteTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionRemoteTcpPort.setStatus('mandatory')
wfIpexSessionQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 15, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpexSessionQueueSize.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-IPEX-MIB", wfIpexDelete=wfIpexDelete, wfIpexMappingDisable=wfIpexMappingDisable, wfIpexMappingDelete=wfIpexMappingDelete, wfIpexTcpRequestLimit=wfIpexTcpRequestLimit, wfIpexSessionLocalDTEAddr=wfIpexSessionLocalDTEAddr, wfIpexMappingRemoteBackupIp=wfIpexMappingRemoteBackupIp, wfIpexSessionInstanceIdOffsetForSvc=wfIpexSessionInstanceIdOffsetForSvc, wfIpexSessionTable=wfIpexSessionTable, wfIpexMappingQueueSize=wfIpexMappingQueueSize, wfIpexSessionState=wfIpexSessionState, wfIpexSessionRemoteDTEAddr=wfIpexSessionRemoteDTEAddr, wfIpexTcpRequestCheck=wfIpexTcpRequestCheck, wfIpexMappingSlotNumber=wfIpexMappingSlotNumber, wfIpexSessionLCN=wfIpexSessionLCN, wfIpexSessionDstConnCct=wfIpexSessionDstConnCct, wfIpex=wfIpex, wfIpexBobEnabled=wfIpexBobEnabled, wfIpexSessionDstConnType=wfIpexSessionDstConnType, wfIpexMaxMessageSize=wfIpexMaxMessageSize, wfIpexMappingRemoteTcpPort=wfIpexMappingRemoteTcpPort, wfIpexMappingID1=wfIpexMappingID1, wfIpexMappingXlateCallingX121=wfIpexMappingXlateCallingX121, wfIpexSessionLocalTcpPort=wfIpexSessionLocalTcpPort, wfIpexTranslateNetworkOutOfOrder=wfIpexTranslateNetworkOutOfOrder, wfIpexMappingX25CUDF=wfIpexMappingX25CUDF, wfIpexSessionSrcConnCct=wfIpexSessionSrcConnCct, wfIpexMappingRemoteDTEAddr=wfIpexMappingRemoteDTEAddr, wfIpexInsCalledDte=wfIpexInsCalledDte, wfIpexMappingSrcConnType=wfIpexMappingSrcConnType, wfIpexMappingMsgHdrType=wfIpexMappingMsgHdrType, wfIpexSessionSrcConnType=wfIpexSessionSrcConnType, wfIpexMappingCfgLocalIpAddr=wfIpexMappingCfgLocalIpAddr, wfIpexMappingSrcConnCct=wfIpexMappingSrcConnCct, wfIpexMappingPvcLcn=wfIpexMappingPvcLcn, wfIpexSessionLocalIpAddr=wfIpexSessionLocalIpAddr, wfIpexMappingEntry=wfIpexMappingEntry, wfIpexTcpUseIpAddress=wfIpexTcpUseIpAddress, wfIpexMappingCtrlMode=wfIpexMappingCtrlMode, wfIpexMaxAuditIp=wfIpexMaxAuditIp, wfIpexMappingLocalDTEAddr=wfIpexMappingLocalDTEAddr, wfIpexMappingTcpMaxRetry=wfIpexMappingTcpMaxRetry, wfIpexState=wfIpexState, wfIpexMappingTrace=wfIpexMappingTrace, wfIpexSendResetRequestOnTCPUp=wfIpexSendResetRequestOnTCPUp, wfIpexSessionEntry=wfIpexSessionEntry, wfIpexSessionQueueSize=wfIpexSessionQueueSize, wfIpexSessionRemoteIpAddr=wfIpexSessionRemoteIpAddr, wfIpexMappingKeepaliveRetries=wfIpexMappingKeepaliveRetries, wfIpexMappingRemoteBackupTcpPort=wfIpexMappingRemoteBackupTcpPort, wfIpexBobTimeout=wfIpexBobTimeout, wfIpexMappingRemoteIpAddr=wfIpexMappingRemoteIpAddr, wfIpexMappingIdleTimer=wfIpexMappingIdleTimer, wfIpexMappingKeepaliveTimer=wfIpexMappingKeepaliveTimer, wfIpexMappingTable=wfIpexMappingTable, wfIpexMappingDstConnType=wfIpexMappingDstConnType, wfIpexSessionIndex=wfIpexSessionIndex, wfIpexMappingDstConnCct=wfIpexMappingDstConnCct, wfIpexSessionRemoteTcpPort=wfIpexSessionRemoteTcpPort, wfIpexDisable=wfIpexDisable, wfIpexInsCallingDte=wfIpexInsCallingDte, wfIpexMappingID2=wfIpexMappingID2)
