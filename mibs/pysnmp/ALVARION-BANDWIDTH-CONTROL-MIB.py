#
# PySNMP MIB module ALVARION-BANDWIDTH-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-BANDWIDTH-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionPriorityQueue, = mibBuilder.importSymbols("ALVARION-TC", "AlvarionPriorityQueue")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, MibIdentifier, Counter32, ModuleIdentity, TimeTicks, Counter64, IpAddress, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "MibIdentifier", "Counter32", "ModuleIdentity", "TimeTicks", "Counter64", "IpAddress", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "ObjectIdentity")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
alvarionBandwidthControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14))
if mibBuilder.loadTexts: alvarionBandwidthControlMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionBandwidthControlMIB.setOrganization('Alvarion Ltd.')
alvarionBandwidthControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1))
coBandwidthControlConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1))
coBandwidthControlEnable = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlEnable.setStatus('current')
coBandwidthControlMaxTransmitRate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlMaxTransmitRate.setStatus('current')
coBandwidthControlMaxReceiveRate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlMaxReceiveRate.setStatus('current')
coBandwidthControlLevelTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4), )
if mibBuilder.loadTexts: coBandwidthControlLevelTable.setStatus('current')
coBandwidthControlLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4, 1), ).setIndexNames((0, "ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlLevelIndex"))
if mibBuilder.loadTexts: coBandwidthControlLevelEntry.setStatus('current')
coBandwidthControlLevelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4, 1, 1), AlvarionPriorityQueue())
if mibBuilder.loadTexts: coBandwidthControlLevelIndex.setStatus('current')
coBandwidthControlLevelMinTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlLevelMinTransmitRate.setStatus('current')
coBandwidthControlLevelMaxTransmitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlLevelMaxTransmitRate.setStatus('current')
coBandwidthControlLevelMinReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlLevelMinReceiveRate.setStatus('current')
coBandwidthControlLevelMaxReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coBandwidthControlLevelMaxReceiveRate.setStatus('current')
alvarionBandwidthControlMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 2))
alvarionBandwidthControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 2, 1))
alvarionBandwidthControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 2, 2))
alvarionBandwidthControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 2, 1, 1)).setObjects(("ALVARION-BANDWIDTH-CONTROL-MIB", "alvarionBandwidthControlMIBGroup"), ("ALVARION-BANDWIDTH-CONTROL-MIB", "alvarionBandwidthControlLevelMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionBandwidthControlMIBCompliance = alvarionBandwidthControlMIBCompliance.setStatus('current')
alvarionBandwidthControlMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 2, 2, 1)).setObjects(("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlEnable"), ("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlMaxTransmitRate"), ("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlMaxReceiveRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionBandwidthControlMIBGroup = alvarionBandwidthControlMIBGroup.setStatus('current')
alvarionBandwidthControlLevelMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 14, 2, 2, 2)).setObjects(("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlLevelMinTransmitRate"), ("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlLevelMaxTransmitRate"), ("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlLevelMinReceiveRate"), ("ALVARION-BANDWIDTH-CONTROL-MIB", "coBandwidthControlLevelMaxReceiveRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionBandwidthControlLevelMIBGroup = alvarionBandwidthControlLevelMIBGroup.setStatus('current')
mibBuilder.exportSymbols("ALVARION-BANDWIDTH-CONTROL-MIB", coBandwidthControlLevelMaxReceiveRate=coBandwidthControlLevelMaxReceiveRate, coBandwidthControlLevelMinTransmitRate=coBandwidthControlLevelMinTransmitRate, coBandwidthControlLevelIndex=coBandwidthControlLevelIndex, alvarionBandwidthControlMIBCompliance=alvarionBandwidthControlMIBCompliance, alvarionBandwidthControlMIBObjects=alvarionBandwidthControlMIBObjects, coBandwidthControlLevelTable=coBandwidthControlLevelTable, alvarionBandwidthControlLevelMIBGroup=alvarionBandwidthControlLevelMIBGroup, alvarionBandwidthControlMIBConformance=alvarionBandwidthControlMIBConformance, alvarionBandwidthControlMIB=alvarionBandwidthControlMIB, coBandwidthControlLevelMinReceiveRate=coBandwidthControlLevelMinReceiveRate, alvarionBandwidthControlMIBCompliances=alvarionBandwidthControlMIBCompliances, coBandwidthControlMaxReceiveRate=coBandwidthControlMaxReceiveRate, PYSNMP_MODULE_ID=alvarionBandwidthControlMIB, coBandwidthControlMaxTransmitRate=coBandwidthControlMaxTransmitRate, alvarionBandwidthControlMIBGroups=alvarionBandwidthControlMIBGroups, coBandwidthControlLevelMaxTransmitRate=coBandwidthControlLevelMaxTransmitRate, coBandwidthControlEnable=coBandwidthControlEnable, coBandwidthControlConfig=coBandwidthControlConfig, coBandwidthControlLevelEntry=coBandwidthControlLevelEntry, alvarionBandwidthControlMIBGroup=alvarionBandwidthControlMIBGroup)
