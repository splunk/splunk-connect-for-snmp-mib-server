#
# PySNMP MIB module HH3C-FC-ZONE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-FC-ZONE-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
Hh3cFcNameId, = mibBuilder.importSymbols("HH3C-FC-TC-MIB", "Hh3cFcNameId")
hh3cVsanIndex, hh3cSan = mibBuilder.importSymbols("HH3C-VSAN-MIB", "hh3cVsanIndex", "hh3cSan")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, Bits, Integer32, TimeTicks, ModuleIdentity, NotificationType, Counter32, Gauge32, MibIdentifier, ObjectIdentity, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "Bits", "Integer32", "TimeTicks", "ModuleIdentity", "NotificationType", "Counter32", "Gauge32", "MibIdentifier", "ObjectIdentity", "Unsigned32", "iso")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
t11ZsActiveZoneMemberIndex, t11ZsActiveZoneIndex = mibBuilder.importSymbols("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberIndex", "t11ZsActiveZoneIndex")
hh3cFcZoneServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9))
hh3cFcZoneServer.setRevisions(('2013-12-25 15:07',))
if mibBuilder.loadTexts: hh3cFcZoneServer.setLastUpdated('201312251507Z')
if mibBuilder.loadTexts: hh3cFcZoneServer.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cFcZsGenName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class Hh3cFcZsGenNameOrZero(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class Hh3cFcZsZoneMemberType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("fcid", 1), ("fwwn", 2), ("pwwn", 3), ("aliasName", 4))

hh3cFcZoneMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1))
hh3cFcZsConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1))
hh3cFcZsServerTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cFcZsServerTable.setStatus('current')
hh3cFcZsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsServerEntry.setStatus('current')
hh3cFcZsZoneModeCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhanced", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsZoneModeCfg.setStatus('current')
hh3cFcZsHardZoneEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsHardZoneEnable.setStatus('current')
hh3cFcZsDistributeRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("activeOnly", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsDistributeRule.setStatus('current')
hh3cFcZsDefaultZoneSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsDefaultZoneSetting.setStatus('current')
hh3cFcZsMergeControlSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("allow", 2), ("restrict", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsMergeControlSetting.setStatus('current')
hh3cFcZsServerLastResult = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("busy", 3), ("noSupportInFabric", 4), ("noSupportInBasic", 5), ("noSupportInEnhanced", 6), ("activeZoneSetTooBig", 7), ("otherFault", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsServerLastResult.setStatus('current')
hh3cFcZsZonesetTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 2), )
if mibBuilder.loadTexts: hh3cFcZsZonesetTable.setStatus('current')
hh3cFcZsZonesetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 2, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZonesetIndex"))
if mibBuilder.loadTexts: hh3cFcZsZonesetEntry.setStatus('current')
hh3cFcZsZonesetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cFcZsZonesetIndex.setStatus('current')
hh3cFcZsZonesetName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 2, 1, 2), Hh3cFcZsGenName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZonesetName.setStatus('current')
hh3cFcZsZonesetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZonesetRowStatus.setStatus('current')
hh3cFcZsZoneTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 3), )
if mibBuilder.loadTexts: hh3cFcZsZoneTable.setStatus('current')
hh3cFcZsZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 3, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneIndex"))
if mibBuilder.loadTexts: hh3cFcZsZoneEntry.setStatus('current')
hh3cFcZsZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cFcZsZoneIndex.setStatus('current')
hh3cFcZsZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 3, 1, 2), Hh3cFcZsGenName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneName.setStatus('current')
hh3cFcZsZonePairwiseEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 3, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZonePairwiseEnable.setStatus('current')
hh3cFcZsZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneRowStatus.setStatus('current')
hh3cFcZsSetZoneTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 4), )
if mibBuilder.loadTexts: hh3cFcZsSetZoneTable.setStatus('current')
hh3cFcZsSetZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 4, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZonesetIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneIndex"))
if mibBuilder.loadTexts: hh3cFcZsSetZoneEntry.setStatus('current')
hh3cFcZsSetZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsSetZoneRowStatus.setStatus('current')
hh3cFcZsZoneAliasTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 5), )
if mibBuilder.loadTexts: hh3cFcZsZoneAliasTable.setStatus('current')
hh3cFcZsZoneAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 5, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneAliasIndex"))
if mibBuilder.loadTexts: hh3cFcZsZoneAliasEntry.setStatus('current')
hh3cFcZsZoneAliasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cFcZsZoneAliasIndex.setStatus('current')
hh3cFcZsZoneAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 5, 1, 2), Hh3cFcZsGenName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneAliasName.setStatus('current')
hh3cFcZsZoneAliasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneAliasRowStatus.setStatus('current')
hh3cFcZsZoneMemberTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6), )
if mibBuilder.loadTexts: hh3cFcZsZoneMemberTable.setStatus('current')
hh3cFcZsZoneMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneMemberParentType"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneMemberParentIndex"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneMemberIndex"))
if mibBuilder.loadTexts: hh3cFcZsZoneMemberEntry.setStatus('current')
hh3cFcZsZoneMemberParentType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zone", 1), ("alias", 2))))
if mibBuilder.loadTexts: hh3cFcZsZoneMemberParentType.setStatus('current')
hh3cFcZsZoneMemberParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cFcZsZoneMemberParentIndex.setStatus('current')
hh3cFcZsZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cFcZsZoneMemberIndex.setStatus('current')
hh3cFcZsZoneMemberFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 4), Hh3cFcZsZoneMemberType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneMemberFormat.setStatus('current')
hh3cFcZsZoneMemberIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneMemberIdentifier.setStatus('current')
hh3cFcZsZoneMemberPairwiseRole = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("both", 2), ("initiator", 3), ("target", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneMemberPairwiseRole.setStatus('current')
hh3cFcZsZoneMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cFcZsZoneMemberRowStatus.setStatus('current')
hh3cFcZsOperation = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2))
hh3cFcZsActivateTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cFcZsActivateTable.setStatus('current')
hh3cFcZsActivateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsActivateEntry.setStatus('current')
hh3cFcZsActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 1, 1, 1), Hh3cFcZsGenNameOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsActivate.setStatus('current')
hh3cFcZsDeactivate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("deactivate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsDeactivate.setStatus('current')
hh3cFcZsActivateResult = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("activateSuccess", 3), ("activateFailure", 4), ("deactivateSuccess", 5), ("deactivateFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsActivateResult.setStatus('current')
hh3cFcZsActivateFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("busy", 2), ("activeZoneSetTooBig", 3), ("noZoneSet", 4), ("noMember", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsActivateFailReason.setStatus('current')
hh3cFcZsDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cFcZsDistributeTable.setStatus('current')
hh3cFcZsDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsDistributeEntry.setStatus('current')
hh3cFcZsDistribute = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("distribute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsDistribute.setStatus('current')
hh3cFcZsDistributeLastResult = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("rejectFailure", 4), ("otherFault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsDistributeLastResult.setStatus('current')
hh3cFcZsDistributeReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsDistributeReasonCode.setStatus('current')
hh3cFcZsDistributeExplainCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsDistributeExplainCode.setStatus('current')
hh3cFcZsClearDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cFcZsClearDatabaseTable.setStatus('current')
hh3cFcZsClearDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsClearDatabaseEntry.setStatus('current')
hh3cFcZsClearDatabase = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("clearDb", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsClearDatabase.setStatus('current')
hh3cFcZsClearPktStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 4), )
if mibBuilder.loadTexts: hh3cFcZsClearPktStatsTable.setStatus('current')
hh3cFcZsClearPktStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 4, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsClearPktStatsEntry.setStatus('current')
hh3cFcZsClearPktStats = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("clearStats", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsClearPktStats.setStatus('current')
hh3cFcZsClearAllPktStats = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("clearStats", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsClearAllPktStats.setStatus('current')
hh3cFcZsInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3))
hh3cFcZsActiveZoneTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cFcZsActiveZoneTable.setStatus('current')
hh3cFcZsActiveZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 1, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"))
if mibBuilder.loadTexts: hh3cFcZsActiveZoneEntry.setStatus('current')
hh3cFcZsActiveZonePairwiseEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsActiveZonePairwiseEnable.setStatus('current')
hh3cFcZsActiveMemberTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 2), )
if mibBuilder.loadTexts: hh3cFcZsActiveMemberTable.setStatus('current')
hh3cFcZsActiveMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 2, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberIndex"))
if mibBuilder.loadTexts: hh3cFcZsActiveMemberEntry.setStatus('current')
hh3cFcZsActiveMemberPairwiseRole = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("initiator", 2), ("target", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsActiveMemberPairwiseRole.setStatus('current')
hh3cFcZsServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3), )
if mibBuilder.loadTexts: hh3cFcZsServerStatusTable.setStatus('current')
hh3cFcZsServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsServerStatusEntry.setStatus('current')
hh3cFcZsServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("free", 1), ("distribute", 2), ("merge", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsServerStatus.setStatus('current')
hh3cFcZsHardZoneStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("adminDisable", 2), ("noResourceDisable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsHardZoneStatus.setStatus('current')
hh3cFcZsAliasCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsAliasCount.setStatus('current')
hh3cFcZsZoneCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsZoneCount.setStatus('current')
hh3cFcZsZonesetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsZonesetCount.setStatus('current')
hh3cFcZsPktStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4), )
if mibBuilder.loadTexts: hh3cFcZsPktStatsTable.setStatus('current')
hh3cFcZsPktStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1), ).setIndexNames((0, "HH3C-VSAN-MIB", "hh3cVsanIndex"))
if mibBuilder.loadTexts: hh3cFcZsPktStatsEntry.setStatus('current')
hh3cFcZsPktInMergeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktInMergeReqCount.setStatus('current')
hh3cFcZsPktOutMergeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktOutMergeReqCount.setStatus('current')
hh3cFcZsPktInMergeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktInMergeAccCount.setStatus('current')
hh3cFcZsPktOutMergeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktOutMergeAccCount.setStatus('current')
hh3cFcZsPktInMergeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktInMergeRjtCount.setStatus('current')
hh3cFcZsPktOutMergeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktOutMergeRjtCount.setStatus('current')
hh3cFcZsPktInChangeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktInChangeReqCount.setStatus('current')
hh3cFcZsPktOutChangeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktOutChangeReqCount.setStatus('current')
hh3cFcZsPktInChangeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktInChangeAccCount.setStatus('current')
hh3cFcZsPktOutChangeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktOutChangeAccCount.setStatus('current')
hh3cFcZsPktInChangeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktInChangeRjtCount.setStatus('current')
hh3cFcZsPktOutChangeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsPktOutChangeRjtCount.setStatus('current')
hh3cFcZsNextFreeIndexInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5))
hh3cFcZsZonesetNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsZonesetNextFreeIndex.setStatus('current')
hh3cFcZsZoneNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsZoneNextFreeIndex.setStatus('current')
hh3cFcZsZoneAliasNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsZoneAliasNextFreeIndex.setStatus('current')
hh3cFcZsZoneMemberNextFreeIndexTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5, 4), )
if mibBuilder.loadTexts: hh3cFcZsZoneMemberNextFreeIndexTable.setStatus('current')
hh3cFcZsZoneMemberNextFreeIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5, 4, 1), ).setIndexNames((0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneMemberParentType"), (0, "HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsZoneMemberParentIndex"))
if mibBuilder.loadTexts: hh3cFcZsZoneMemberNextFreeIndexEntry.setStatus('current')
hh3cFcZsZoneMemberNextFreeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 3, 5, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cFcZsZoneMemberNextFreeIndex.setStatus('current')
hh3cFcZsNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4))
hh3cFcZsNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 0))
hh3cFcZsDefaultZoneChangedNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 0, 1)).setObjects(("HH3C-VSAN-MIB", "hh3cVsanIndex"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsLocalSwitchWWN"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsDefaultZoneSetting"))
if mibBuilder.loadTexts: hh3cFcZsDefaultZoneChangedNotify.setStatus('current')
hh3cFcZsHardZoneChangedNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 0, 2)).setObjects(("HH3C-VSAN-MIB", "hh3cVsanIndex"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsLocalSwitchWWN"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsHardZoneStatus"))
if mibBuilder.loadTexts: hh3cFcZsHardZoneChangedNotify.setStatus('current')
hh3cFcZsMergeFailedNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HH3C-VSAN-MIB", "hh3cVsanIndex"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsLocalSwitchWWN"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsPeerSwitchWWN"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsMergeFailCause"))
if mibBuilder.loadTexts: hh3cFcZsMergeFailedNotify.setStatus('current')
hh3cFcZsMergeSucceededNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HH3C-VSAN-MIB", "hh3cVsanIndex"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsLocalSwitchWWN"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsPeerSwitchWWN"))
if mibBuilder.loadTexts: hh3cFcZsMergeSucceededNotify.setStatus('current')
hh3cFcZsActivationCompletedNotify = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 0, 5)).setObjects(("HH3C-VSAN-MIB", "hh3cVsanIndex"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsLocalSwitchWWN"), ("HH3C-FC-ZONE-SERVER-MIB", "hh3cFcZsActivateResult"))
if mibBuilder.loadTexts: hh3cFcZsActivationCompletedNotify.setStatus('current')
hh3cFcZsNotificationSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 1))
hh3cFcZsDefaultZoneChangedEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsDefaultZoneChangedEnable.setStatus('current')
hh3cFcZsHardZoneChangedEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsHardZoneChangedEnable.setStatus('current')
hh3cFcZsMergeFailedEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsMergeFailedEnable.setStatus('current')
hh3cFcZsMergeSucceededEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsMergeSucceededEnable.setStatus('current')
hh3cFcZsActivationCompletedEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cFcZsActivationCompletedEnable.setStatus('current')
hh3cFcZsObjsForNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 2))
hh3cFcZsLocalSwitchWWN = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 2, 1), Hh3cFcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cFcZsLocalSwitchWWN.setStatus('current')
hh3cFcZsPeerSwitchWWN = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 2, 2), Hh3cFcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cFcZsPeerSwitchWWN.setStatus('current')
hh3cFcZsMergeFailCause = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 9, 1, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("zoneModeInconsistent", 1), ("zonePolicyNotEqual", 2), ("hardZoneInconsistent", 3), ("dataNotEqualInRestrict", 4), ("activeZoneSetMergeFailed", 5), ("zoneMergeDataTooBig", 6), ("zoningObjectNumberTooBig", 7), ("zoneDbMergeFaildInBasic", 8), ("zoneDbMergeFaildInEnhanced", 9), ("other", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cFcZsMergeFailCause.setStatus('current')
mibBuilder.exportSymbols("HH3C-FC-ZONE-SERVER-MIB", hh3cFcZsPktInChangeRjtCount=hh3cFcZsPktInChangeRjtCount, hh3cFcZsPktOutChangeAccCount=hh3cFcZsPktOutChangeAccCount, hh3cFcZsZoneMemberNextFreeIndexTable=hh3cFcZsZoneMemberNextFreeIndexTable, hh3cFcZsZonePairwiseEnable=hh3cFcZsZonePairwiseEnable, hh3cFcZsPktOutMergeReqCount=hh3cFcZsPktOutMergeReqCount, hh3cFcZsDistributeTable=hh3cFcZsDistributeTable, hh3cFcZsZoneTable=hh3cFcZsZoneTable, hh3cFcZsZoneMemberTable=hh3cFcZsZoneMemberTable, hh3cFcZsPktStatsTable=hh3cFcZsPktStatsTable, hh3cFcZsZoneMemberParentType=hh3cFcZsZoneMemberParentType, Hh3cFcZsGenNameOrZero=Hh3cFcZsGenNameOrZero, hh3cFcZsDistributeExplainCode=hh3cFcZsDistributeExplainCode, hh3cFcZsSetZoneEntry=hh3cFcZsSetZoneEntry, hh3cFcZsActiveZoneTable=hh3cFcZsActiveZoneTable, hh3cFcZsConfiguration=hh3cFcZsConfiguration, hh3cFcZsClearPktStatsTable=hh3cFcZsClearPktStatsTable, hh3cFcZsDefaultZoneChangedEnable=hh3cFcZsDefaultZoneChangedEnable, hh3cFcZsZoneAliasEntry=hh3cFcZsZoneAliasEntry, hh3cFcZsServerStatus=hh3cFcZsServerStatus, hh3cFcZsZoneModeCfg=hh3cFcZsZoneModeCfg, hh3cFcZsOperation=hh3cFcZsOperation, hh3cFcZsActivateResult=hh3cFcZsActivateResult, hh3cFcZsHardZoneChangedEnable=hh3cFcZsHardZoneChangedEnable, hh3cFcZsPktOutChangeRjtCount=hh3cFcZsPktOutChangeRjtCount, hh3cFcZsNextFreeIndexInfo=hh3cFcZsNextFreeIndexInfo, hh3cFcZsZonesetIndex=hh3cFcZsZonesetIndex, hh3cFcZsHardZoneChangedNotify=hh3cFcZsHardZoneChangedNotify, hh3cFcZsZonesetRowStatus=hh3cFcZsZonesetRowStatus, hh3cFcZsLocalSwitchWWN=hh3cFcZsLocalSwitchWWN, hh3cFcZsZoneEntry=hh3cFcZsZoneEntry, hh3cFcZsActivationCompletedEnable=hh3cFcZsActivationCompletedEnable, hh3cFcZsClearPktStats=hh3cFcZsClearPktStats, hh3cFcZsDistributeEntry=hh3cFcZsDistributeEntry, hh3cFcZsObjsForNotification=hh3cFcZsObjsForNotification, hh3cFcZsZonesetEntry=hh3cFcZsZonesetEntry, hh3cFcZsZoneIndex=hh3cFcZsZoneIndex, hh3cFcZsZoneAliasIndex=hh3cFcZsZoneAliasIndex, hh3cFcZsHardZoneStatus=hh3cFcZsHardZoneStatus, hh3cFcZsZoneMemberFormat=hh3cFcZsZoneMemberFormat, hh3cFcZsClearDatabaseTable=hh3cFcZsClearDatabaseTable, hh3cFcZsActiveMemberTable=hh3cFcZsActiveMemberTable, hh3cFcZsInformation=hh3cFcZsInformation, PYSNMP_MODULE_ID=hh3cFcZoneServer, hh3cFcZsZoneAliasRowStatus=hh3cFcZsZoneAliasRowStatus, hh3cFcZsNotificationSwitch=hh3cFcZsNotificationSwitch, hh3cFcZsClearPktStatsEntry=hh3cFcZsClearPktStatsEntry, hh3cFcZsZonesetName=hh3cFcZsZonesetName, hh3cFcZsClearAllPktStats=hh3cFcZsClearAllPktStats, hh3cFcZsPktOutChangeReqCount=hh3cFcZsPktOutChangeReqCount, hh3cFcZsDistributeReasonCode=hh3cFcZsDistributeReasonCode, hh3cFcZsActiveMemberPairwiseRole=hh3cFcZsActiveMemberPairwiseRole, hh3cFcZsPeerSwitchWWN=hh3cFcZsPeerSwitchWWN, hh3cFcZsPktInMergeRjtCount=hh3cFcZsPktInMergeRjtCount, hh3cFcZsPktOutMergeAccCount=hh3cFcZsPktOutMergeAccCount, hh3cFcZsMergeSucceededNotify=hh3cFcZsMergeSucceededNotify, hh3cFcZsServerEntry=hh3cFcZsServerEntry, hh3cFcZsMergeFailCause=hh3cFcZsMergeFailCause, hh3cFcZsActiveZoneEntry=hh3cFcZsActiveZoneEntry, hh3cFcZsZonesetCount=hh3cFcZsZonesetCount, hh3cFcZsHardZoneEnable=hh3cFcZsHardZoneEnable, hh3cFcZsZoneName=hh3cFcZsZoneName, hh3cFcZsActivateEntry=hh3cFcZsActivateEntry, hh3cFcZsMergeControlSetting=hh3cFcZsMergeControlSetting, hh3cFcZsZonesetNextFreeIndex=hh3cFcZsZonesetNextFreeIndex, hh3cFcZsPktInChangeAccCount=hh3cFcZsPktInChangeAccCount, hh3cFcZsActivateFailReason=hh3cFcZsActivateFailReason, hh3cFcZsZoneMemberRowStatus=hh3cFcZsZoneMemberRowStatus, hh3cFcZsZoneRowStatus=hh3cFcZsZoneRowStatus, hh3cFcZsServerStatusTable=hh3cFcZsServerStatusTable, hh3cFcZsDefaultZoneSetting=hh3cFcZsDefaultZoneSetting, hh3cFcZsZoneNextFreeIndex=hh3cFcZsZoneNextFreeIndex, hh3cFcZsAliasCount=hh3cFcZsAliasCount, hh3cFcZsZoneMemberEntry=hh3cFcZsZoneMemberEntry, hh3cFcZsDistributeRule=hh3cFcZsDistributeRule, hh3cFcZsZoneMemberIndex=hh3cFcZsZoneMemberIndex, hh3cFcZsZoneMemberPairwiseRole=hh3cFcZsZoneMemberPairwiseRole, hh3cFcZsActivate=hh3cFcZsActivate, hh3cFcZsDefaultZoneChangedNotify=hh3cFcZsDefaultZoneChangedNotify, hh3cFcZsPktInMergeAccCount=hh3cFcZsPktInMergeAccCount, hh3cFcZsZoneMemberNextFreeIndex=hh3cFcZsZoneMemberNextFreeIndex, hh3cFcZsDeactivate=hh3cFcZsDeactivate, hh3cFcZsNotification=hh3cFcZsNotification, Hh3cFcZsZoneMemberType=Hh3cFcZsZoneMemberType, hh3cFcZsDistribute=hh3cFcZsDistribute, hh3cFcZsDistributeLastResult=hh3cFcZsDistributeLastResult, hh3cFcZsSetZoneTable=hh3cFcZsSetZoneTable, hh3cFcZsZoneAliasTable=hh3cFcZsZoneAliasTable, hh3cFcZsZoneMemberParentIndex=hh3cFcZsZoneMemberParentIndex, hh3cFcZsClearDatabase=hh3cFcZsClearDatabase, hh3cFcZsNotificationPrefix=hh3cFcZsNotificationPrefix, hh3cFcZsZoneAliasName=hh3cFcZsZoneAliasName, hh3cFcZsMergeSucceededEnable=hh3cFcZsMergeSucceededEnable, hh3cFcZsPktInChangeReqCount=hh3cFcZsPktInChangeReqCount, hh3cFcZoneMibObjects=hh3cFcZoneMibObjects, hh3cFcZsActivateTable=hh3cFcZsActivateTable, hh3cFcZsZoneAliasNextFreeIndex=hh3cFcZsZoneAliasNextFreeIndex, hh3cFcZsServerStatusEntry=hh3cFcZsServerStatusEntry, hh3cFcZsSetZoneRowStatus=hh3cFcZsSetZoneRowStatus, hh3cFcZsClearDatabaseEntry=hh3cFcZsClearDatabaseEntry, hh3cFcZsServerLastResult=hh3cFcZsServerLastResult, hh3cFcZsPktInMergeReqCount=hh3cFcZsPktInMergeReqCount, hh3cFcZsPktStatsEntry=hh3cFcZsPktStatsEntry, hh3cFcZsMergeFailedEnable=hh3cFcZsMergeFailedEnable, hh3cFcZoneServer=hh3cFcZoneServer, hh3cFcZsActiveMemberEntry=hh3cFcZsActiveMemberEntry, hh3cFcZsZonesetTable=hh3cFcZsZonesetTable, hh3cFcZsPktOutMergeRjtCount=hh3cFcZsPktOutMergeRjtCount, Hh3cFcZsGenName=Hh3cFcZsGenName, hh3cFcZsServerTable=hh3cFcZsServerTable, hh3cFcZsZoneMemberIdentifier=hh3cFcZsZoneMemberIdentifier, hh3cFcZsActiveZonePairwiseEnable=hh3cFcZsActiveZonePairwiseEnable, hh3cFcZsMergeFailedNotify=hh3cFcZsMergeFailedNotify, hh3cFcZsActivationCompletedNotify=hh3cFcZsActivationCompletedNotify, hh3cFcZsZoneMemberNextFreeIndexEntry=hh3cFcZsZoneMemberNextFreeIndexEntry, hh3cFcZsZoneCount=hh3cFcZsZoneCount)
