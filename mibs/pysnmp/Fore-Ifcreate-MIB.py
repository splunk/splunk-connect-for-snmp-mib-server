#
# PySNMP MIB module Fore-Ifcreate-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-Ifcreate-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ifExtensions, = mibBuilder.importSymbols("Fore-Common-MIB", "ifExtensions")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, TimeTicks, Unsigned32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, iso, Integer32, MibIdentifier, NotificationType, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Unsigned32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "iso", "Integer32", "MibIdentifier", "NotificationType", "Gauge32", "Counter64")
RowStatus, TestAndIncr, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TestAndIncr", "TextualConvention", "DisplayString")
foreIfcreateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 1, 17, 5))
if mibBuilder.loadTexts: foreIfcreateMIB.setLastUpdated('9704011044-0400')
if mibBuilder.loadTexts: foreIfcreateMIB.setOrganization('FORE')
ifReserveNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 326, 1, 17, 1), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifReserveNextIndex.setStatus('current')
ifCreateTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 17, 2), )
if mibBuilder.loadTexts: ifCreateTable.setStatus('current')
ifCreateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1), ).setIndexNames((0, "Fore-Ifcreate-MIB", "ifCreateIfIndex"))
if mibBuilder.loadTexts: ifCreateEntry.setStatus('current')
ifCreateIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifCreateIfIndex.setStatus('current')
ifCreateIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107))).clone(namedValues=NamedValues(("otherIfType", 1), ("regular1822", 2), ("hdh1822", 3), ("ddnX25", 4), ("rfc877x25", 5), ("ethernetCsmacd", 6), ("iso88023Csmacd", 7), ("iso88024TokenBus", 8), ("iso88025TokenRing", 9), ("iso88026Man", 10), ("starLan", 11), ("proteon10Mbit", 12), ("proteon80Mbit", 13), ("hyperchannel", 14), ("fddi", 15), ("lapb", 16), ("sdlc", 17), ("ds1e1", 18), ("e1", 19), ("basicISDN", 20), ("primaryISDN", 21), ("propPointToPointSerial", 22), ("ppp", 23), ("softwareLoopback", 24), ("eon", 25), ("ethernet3Mbit", 26), ("nsip", 27), ("slip", 28), ("ultra", 29), ("ds3", 30), ("sip", 31), ("frameRelay", 32), ("rs232", 33), ("para", 34), ("arcnet", 35), ("arcnetPlus", 36), ("atm", 37), ("miox25", 38), ("sonet", 39), ("x25ple", 40), ("iso88022llc", 41), ("localTalk", 42), ("smdsDxi", 43), ("frameRelayService", 44), ("v35", 45), ("hssi", 46), ("hippi", 47), ("modem", 48), ("aal5", 49), ("sonetPath", 50), ("sonetVT", 51), ("smdsIcip", 52), ("propVirtual", 53), ("propMultiplexor", 54), ("ieee80212", 55), ("fibreChannel", 56), ("hippiInterface", 57), ("frameRelayInterconnect", 58), ("aflane8023", 59), ("aflane8025", 60), ("cctEmul", 61), ("fastEther", 62), ("isdn", 63), ("v11", 64), ("v36", 65), ("g703at64k", 66), ("g703at2mb", 67), ("qllc", 68), ("fastEtherFX", 69), ("channel", 70), ("ieee80211", 71), ("ibm370parChan", 72), ("escon", 73), ("dlsw", 74), ("isdns", 75), ("isdnu", 76), ("lapd", 77), ("ipSwitch", 78), ("rsrb", 79), ("atmLogical", 80), ("ds0", 81), ("ds0Bundle", 82), ("bsc", 83), ("async", 84), ("cnr", 85), ("iso88025Dtr", 86), ("eplrs", 87), ("arap", 88), ("propCnls", 89), ("hostPad", 90), ("termPad", 91), ("frameRelayMPI", 92), ("x213", 93), ("adsl", 94), ("radsl", 95), ("sdsl", 96), ("vdsl", 97), ("iso88025CRFPInt", 98), ("myrinet", 99), ("voiceEM", 100), ("voiceFXO", 101), ("voiceFXS", 102), ("voiceEncap", 103), ("voiceOverIp", 104), ("atmDxi", 105), ("atmFuni", 106), ("pppMultilinkBundle", 107)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifCreateIfType.setStatus('current')
ifCreateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifCreateRowStatus.setStatus('current')
ifCreateServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("underConfig", 1), ("active", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifCreateServiceStatus.setStatus('current')
ifCreateName = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifCreateName.setStatus('current')
ifCreateIfTrapSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifCreateIfTrapSupport.setStatus('current')
ifCreateServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 2, 1, 7), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifCreateServiceId.setStatus('current')
ifConvertToIfIndexTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 17, 3), )
if mibBuilder.loadTexts: ifConvertToIfIndexTable.setStatus('current')
ifConvertToIfIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 17, 3, 1), ).setIndexNames((0, "Fore-Ifcreate-MIB", "ifConvertToIfIndexBoardId"), (0, "Fore-Ifcreate-MIB", "ifConvertToIfIndexNetmodId"), (0, "Fore-Ifcreate-MIB", "ifConvertToIfIndexPortId"), (0, "Fore-Ifcreate-MIB", "ifConvertToIfIndexChannelId"))
if mibBuilder.loadTexts: ifConvertToIfIndexEntry.setStatus('current')
ifConvertToIfIndexBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertToIfIndexBoardId.setStatus('current')
ifConvertToIfIndexNetmodId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertToIfIndexNetmodId.setStatus('current')
ifConvertToIfIndexPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertToIfIndexPortId.setStatus('current')
ifConvertToIfIndexChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertToIfIndexChannelId.setStatus('current')
ifConvertToIfIndexIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 3, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertToIfIndexIfIndex.setStatus('current')
ifConvertFmIfIndexTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 17, 4), )
if mibBuilder.loadTexts: ifConvertFmIfIndexTable.setStatus('current')
ifConvertFmIfIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 17, 4, 1), ).setIndexNames((0, "Fore-Ifcreate-MIB", "ifConvertFmIfIndexIfIndex"))
if mibBuilder.loadTexts: ifConvertFmIfIndexEntry.setStatus('current')
ifConvertFmIfIndexIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 4, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertFmIfIndexIfIndex.setStatus('current')
ifConvertFmIfIndexBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertFmIfIndexBoardId.setStatus('current')
ifConvertFmIfIndexNetmodId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertFmIfIndexNetmodId.setStatus('current')
ifConvertFmIfIndexPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertFmIfIndexPortId.setStatus('current')
ifConvertFmIfIndexChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 17, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifConvertFmIfIndexChannelId.setStatus('current')
mibBuilder.exportSymbols("Fore-Ifcreate-MIB", ifCreateServiceId=ifCreateServiceId, ifConvertToIfIndexEntry=ifConvertToIfIndexEntry, ifConvertToIfIndexNetmodId=ifConvertToIfIndexNetmodId, ifCreateIfTrapSupport=ifCreateIfTrapSupport, ifConvertFmIfIndexNetmodId=ifConvertFmIfIndexNetmodId, ifCreateName=ifCreateName, ifCreateIfIndex=ifCreateIfIndex, ifCreateIfType=ifCreateIfType, ifConvertFmIfIndexChannelId=ifConvertFmIfIndexChannelId, ifCreateRowStatus=ifCreateRowStatus, ifCreateTable=ifCreateTable, ifCreateEntry=ifCreateEntry, ifConvertToIfIndexTable=ifConvertToIfIndexTable, ifConvertToIfIndexChannelId=ifConvertToIfIndexChannelId, PYSNMP_MODULE_ID=foreIfcreateMIB, ifConvertFmIfIndexIfIndex=ifConvertFmIfIndexIfIndex, ifCreateServiceStatus=ifCreateServiceStatus, ifConvertFmIfIndexEntry=ifConvertFmIfIndexEntry, foreIfcreateMIB=foreIfcreateMIB, ifReserveNextIndex=ifReserveNextIndex, ifConvertFmIfIndexPortId=ifConvertFmIfIndexPortId, ifConvertFmIfIndexTable=ifConvertFmIfIndexTable, ifConvertToIfIndexPortId=ifConvertToIfIndexPortId, ifConvertToIfIndexBoardId=ifConvertToIfIndexBoardId, ifConvertToIfIndexIfIndex=ifConvertToIfIndexIfIndex, ifConvertFmIfIndexBoardId=ifConvertFmIfIndexBoardId)
