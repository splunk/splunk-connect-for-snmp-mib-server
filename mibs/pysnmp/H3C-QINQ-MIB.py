#
# PySNMP MIB module H3C-QINQ-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-QINQ-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, NotificationType, Integer32, Gauge32, iso, Unsigned32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, ObjectIdentity, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Integer32", "Gauge32", "iso", "Unsigned32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Counter32", "Counter64")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
h3cQINQ = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69))
h3cQINQ.setRevisions(('2006-03-10 00:00',))
if mibBuilder.loadTexts: h3cQINQ.setLastUpdated('200603100000Z')
if mibBuilder.loadTexts: h3cQINQ.setOrganization('Huawei-3Com Technologies Co., Ltd.')
class H3cQinQSwitchState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

h3cQinQMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1))
h3cQinQGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 1))
h3cQinQBpduTunnelSwitch = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 1, 1), H3cQinQSwitchState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cQinQBpduTunnelSwitch.setStatus('current')
h3cQinQEthernetTypeValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cQinQEthernetTypeValue.setStatus('current')
h3cQinQServiceTPIDValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cQinQServiceTPIDValue.setStatus('current')
h3cQinQCustomerTPIDValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cQinQCustomerTPIDValue.setStatus('current')
h3cQinQBpduTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 2), )
if mibBuilder.loadTexts: h3cQinQBpduTunnelTable.setStatus('current')
h3cQinQBpduTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-QINQ-MIB", "h3cQinQProtocolIndex"))
if mibBuilder.loadTexts: h3cQinQBpduTunnelEntry.setStatus('current')
h3cQinQProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bpdu", 1), ("stp", 2), ("gvrp", 3), ("igmp", 4))))
if mibBuilder.loadTexts: h3cQinQProtocolIndex.setStatus('current')
h3cQinQBpduRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQBpduRowStatus.setStatus('current')
h3cQinQPriorityRemarkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 3), )
if mibBuilder.loadTexts: h3cQinQPriorityRemarkTable.setStatus('current')
h3cQinQPriorityRemarkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-QINQ-MIB", "h3cQinQPriorityValue"))
if mibBuilder.loadTexts: h3cQinQPriorityRemarkEntry.setStatus('current')
h3cQinQPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: h3cQinQPriorityValue.setStatus('current')
h3cQinQPriorityRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQPriorityRemarkValue.setStatus('current')
h3cQinQPriorityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQPriorityRowStatus.setStatus('current')
h3cQinQVidTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4), )
if mibBuilder.loadTexts: h3cQinQVidTable.setStatus('current')
h3cQinQVidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-QINQ-MIB", "h3cQinQVlanID"))
if mibBuilder.loadTexts: h3cQinQVidEntry.setStatus('current')
h3cQinQVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: h3cQinQVlanID.setStatus('current')
h3cQinQInboundVidListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQInboundVidListLow.setStatus('current')
h3cQinQInboundVidListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQInboundVidListHigh.setStatus('current')
h3cQinQVidEthernetType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33024)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQVidEthernetType.setStatus('current')
h3cQinQVidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQVidRowStatus.setStatus('current')
h3cQinQVidSwapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 5), )
if mibBuilder.loadTexts: h3cQinQVidSwapTable.setStatus('current')
h3cQinQVidSwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-QINQ-MIB", "h3cQinQVlanID"), (0, "H3C-QINQ-MIB", "h3cQinQVidSwapOld"))
if mibBuilder.loadTexts: h3cQinQVidSwapEntry.setStatus('current')
h3cQinQVidSwapOld = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: h3cQinQVidSwapOld.setStatus('current')
h3cQinQVidSwapNew = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQVidSwapNew.setStatus('current')
h3cQinQVidSwapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQVidSwapRowStatus.setStatus('current')
h3cQinQPrioritySwapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 6), )
if mibBuilder.loadTexts: h3cQinQPrioritySwapTable.setStatus('current')
h3cQinQPrioritySwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-QINQ-MIB", "h3cQinQVlanID"), (0, "H3C-QINQ-MIB", "h3cQinQPrioritySwapOld"))
if mibBuilder.loadTexts: h3cQinQPrioritySwapEntry.setStatus('current')
h3cQinQPrioritySwapOld = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: h3cQinQPrioritySwapOld.setStatus('current')
h3cQinQPrioritySwapNew = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQPrioritySwapNew.setStatus('current')
h3cQinQPrioritySwapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQPrioritySwapRowStatus.setStatus('current')
h3cQinQIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7), )
if mibBuilder.loadTexts: h3cQinQIfConfigTable.setStatus('current')
h3cQinQIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cQinQIfConfigEntry.setStatus('current')
h3cQinQIfEthernetType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33024)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfEthernetType.setStatus('current')
h3cQinQIfSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 2), H3cQinQSwitchState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfSwitch.setStatus('current')
h3cQinQIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfRowStatus.setStatus('current')
h3cQinQIfServiceTPIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfServiceTPIDValue.setStatus('current')
h3cQinQIfCustomerTPIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfCustomerTPIDValue.setStatus('current')
h3cQinQIfUplinkSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 6), H3cQinQSwitchState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfUplinkSwitch.setStatus('current')
h3cQinQIfDownlinkSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 69, 1, 7, 1, 7), H3cQinQSwitchState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQinQIfDownlinkSwitch.setStatus('current')
mibBuilder.exportSymbols("H3C-QINQ-MIB", h3cQinQPrioritySwapTable=h3cQinQPrioritySwapTable, h3cQinQIfEthernetType=h3cQinQIfEthernetType, h3cQinQInboundVidListHigh=h3cQinQInboundVidListHigh, h3cQinQVidSwapOld=h3cQinQVidSwapOld, h3cQinQIfConfigEntry=h3cQinQIfConfigEntry, h3cQinQProtocolIndex=h3cQinQProtocolIndex, h3cQinQVidEntry=h3cQinQVidEntry, h3cQinQVidTable=h3cQinQVidTable, h3cQinQBpduTunnelSwitch=h3cQinQBpduTunnelSwitch, h3cQinQPrioritySwapRowStatus=h3cQinQPrioritySwapRowStatus, h3cQinQPriorityValue=h3cQinQPriorityValue, h3cQinQMibObject=h3cQinQMibObject, h3cQinQServiceTPIDValue=h3cQinQServiceTPIDValue, h3cQinQPriorityRemarkValue=h3cQinQPriorityRemarkValue, h3cQinQIfCustomerTPIDValue=h3cQinQIfCustomerTPIDValue, h3cQinQVidSwapRowStatus=h3cQinQVidSwapRowStatus, h3cQinQBpduRowStatus=h3cQinQBpduRowStatus, h3cQinQVidRowStatus=h3cQinQVidRowStatus, h3cQinQVidSwapEntry=h3cQinQVidSwapEntry, h3cQinQIfSwitch=h3cQinQIfSwitch, h3cQinQIfUplinkSwitch=h3cQinQIfUplinkSwitch, h3cQinQEthernetTypeValue=h3cQinQEthernetTypeValue, h3cQinQVidSwapTable=h3cQinQVidSwapTable, h3cQinQBpduTunnelEntry=h3cQinQBpduTunnelEntry, h3cQinQIfDownlinkSwitch=h3cQinQIfDownlinkSwitch, h3cQinQBpduTunnelTable=h3cQinQBpduTunnelTable, h3cQinQIfRowStatus=h3cQinQIfRowStatus, h3cQINQ=h3cQINQ, h3cQinQIfConfigTable=h3cQinQIfConfigTable, h3cQinQIfServiceTPIDValue=h3cQinQIfServiceTPIDValue, h3cQinQVidSwapNew=h3cQinQVidSwapNew, h3cQinQCustomerTPIDValue=h3cQinQCustomerTPIDValue, PYSNMP_MODULE_ID=h3cQINQ, h3cQinQPriorityRowStatus=h3cQinQPriorityRowStatus, h3cQinQVlanID=h3cQinQVlanID, h3cQinQGlobalConfigGroup=h3cQinQGlobalConfigGroup, h3cQinQInboundVidListLow=h3cQinQInboundVidListLow, h3cQinQPrioritySwapOld=h3cQinQPrioritySwapOld, h3cQinQVidEthernetType=h3cQinQVidEthernetType, h3cQinQPrioritySwapNew=h3cQinQPrioritySwapNew, h3cQinQPriorityRemarkEntry=h3cQinQPriorityRemarkEntry, h3cQinQPrioritySwapEntry=h3cQinQPrioritySwapEntry, H3cQinQSwitchState=H3cQinQSwitchState, h3cQinQPriorityRemarkTable=h3cQinQPriorityRemarkTable)
