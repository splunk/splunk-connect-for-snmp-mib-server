#
# PySNMP MIB module HP-ICF-RIPNG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-RIPNG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, Counter64, iso, NotificationType, Bits, ObjectIdentity, IpAddress, MibIdentifier, TimeTicks, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "iso", "NotificationType", "Bits", "ObjectIdentity", "IpAddress", "MibIdentifier", "TimeTicks", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
hpicfRipng = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113))
hpicfRipng.setRevisions(('2015-05-11 00:00',))
if mibBuilder.loadTexts: hpicfRipng.setLastUpdated('201505110000Z')
if mibBuilder.loadTexts: hpicfRipng.setOrganization('HP Networking')
hpicfRipngNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 0))
hpicfRipngObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1))
hpicfRipngConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2))
hpicfRipngBaseScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1))
hpicfRipngGlobalRouteChanges = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRipngGlobalRouteChanges.setStatus('current')
hpicfRipngGlobalQueries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRipngGlobalQueries.setStatus('current')
hpicfRipngAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngAdminStatus.setStatus('current')
hpicfRipngDefaultMetric = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngDefaultMetric.setStatus('current')
hpicfRipngDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngDistance.setStatus('current')
hpicfRipngUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngUpdateTime.setStatus('current')
hpicfRipngTimeoutTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngTimeoutTime.setStatus('current')
hpicfRipngGarbageCollectTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 65535)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngGarbageCollectTime.setStatus('current')
hpicfRipngNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRipngNotificationEnable.setStatus('current')
hpicfRipngIfConfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2), )
if mibBuilder.loadTexts: hpicfRipngIfConfTable.setStatus('current')
hpicfRipngIfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1), ).setIndexNames((0, "HP-ICF-RIPNG-MIB", "hpicfRipngIfConfIndex"), (0, "HP-ICF-RIPNG-MIB", "hpicfRipngIfConfInstId"))
if mibBuilder.loadTexts: hpicfRipngIfConfEntry.setStatus('current')
hpicfRipngIfConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfRipngIfConfIndex.setStatus('current')
hpicfRipngIfConfInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: hpicfRipngIfConfInstId.setStatus('current')
hpicfRipngIfConfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfRipngIfConfMetric.setStatus('current')
hpicfRipngIfConfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfRipngIfConfStatus.setStatus('current')
hpicfRipngIfConfSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRipngIfConfSrcAddressType.setStatus('current')
hpicfRipngIfConfSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRipngIfConfSrcAddress.setStatus('current')
hpicfRipngIfConfDoPoisonReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 2, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfRipngIfConfDoPoisonReverse.setStatus('current')
hpicfRipngPeerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 3), )
if mibBuilder.loadTexts: hpicfRipngPeerTable.setStatus('current')
hpicfRipngPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 3, 1), ).setIndexNames((0, "HP-ICF-RIPNG-MIB", "hpicfRipngPeerAddressType"), (0, "HP-ICF-RIPNG-MIB", "hpicfRipngPeerAddress"))
if mibBuilder.loadTexts: hpicfRipngPeerEntry.setStatus('current')
hpicfRipngPeerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfRipngPeerAddressType.setStatus('current')
hpicfRipngPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: hpicfRipngPeerAddress.setStatus('current')
hpicfRipngPeerLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRipngPeerLastUpdate.setStatus('current')
hpicfRipngPeerRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRipngPeerRcvBadPackets.setStatus('current')
hpicfRipngNotificationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 4))
hpicfRipngConfigErrorType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("badVersion", 1), ("badIPtype", 2), ("badHop", 3), ("badField", 4), ("ownPkt", 5), ("noError", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRipngConfigErrorType.setStatus('current')
hpicfRipngPacketType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("request", 1), ("response", 2), ("nullPacket", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRipngPacketType.setStatus('current')
hpicfRipngPacketSrcType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 4, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRipngPacketSrcType.setStatus('current')
hpicfRipngPacketSrc = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 4, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRipngPacketSrc.setStatus('current')
hpicfRipngIfState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRipngIfState.setStatus('current')
hpicfRipngIfStateChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 0, 1)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfSrcAddress"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfState"))
if mibBuilder.loadTexts: hpicfRipngIfStateChange.setStatus('current')
hpicfRipngIfConfigError = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 0, 2)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfSrcAddress"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfState"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketSrc"), ("HP-ICF-RIPNG-MIB", "hpicfRipngConfigErrorType"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketType"))
if mibBuilder.loadTexts: hpicfRipngIfConfigError.setStatus('current')
hpicfRipngIfRxBadPacket = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 0, 3)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfSrcAddress"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfState"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketSrc"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketType"))
if mibBuilder.loadTexts: hpicfRipngIfRxBadPacket.setStatus('current')
hpicfRipngCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 1))
hpicfRipngGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 2))
hpicfRipngCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 1, 1)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngBaseScalarsGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPeerGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngBaseScalarsGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPeerGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngNotificationObjectGroup"), ("HP-ICF-RIPNG-MIB", "hpicfRipngNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipngCompliance = hpicfRipngCompliance.setStatus('current')
hpicfRipngBaseScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 2, 1)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngGlobalRouteChanges"), ("HP-ICF-RIPNG-MIB", "hpicfRipngGlobalQueries"), ("HP-ICF-RIPNG-MIB", "hpicfRipngAdminStatus"), ("HP-ICF-RIPNG-MIB", "hpicfRipngDefaultMetric"), ("HP-ICF-RIPNG-MIB", "hpicfRipngDistance"), ("HP-ICF-RIPNG-MIB", "hpicfRipngUpdateTime"), ("HP-ICF-RIPNG-MIB", "hpicfRipngTimeoutTime"), ("HP-ICF-RIPNG-MIB", "hpicfRipngGarbageCollectTime"), ("HP-ICF-RIPNG-MIB", "hpicfRipngNotificationEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipngBaseScalarsGroup = hpicfRipngBaseScalarsGroup.setStatus('current')
hpicfRipngIfConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 2, 2)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfMetric"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfStatus"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfSrcAddressType"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfSrcAddress"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfDoPoisonReverse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipngIfConfGroup = hpicfRipngIfConfGroup.setStatus('current')
hpicfRipngPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 2, 3)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngPeerLastUpdate"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPeerRcvBadPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipngPeerGroup = hpicfRipngPeerGroup.setStatus('current')
hpicfRipngNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 2, 4)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngConfigErrorType"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketType"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketSrcType"), ("HP-ICF-RIPNG-MIB", "hpicfRipngPacketSrc"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipngNotificationObjectGroup = hpicfRipngNotificationObjectGroup.setStatus('current')
hpicfRipngNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113, 2, 2, 5)).setObjects(("HP-ICF-RIPNG-MIB", "hpicfRipngIfStateChange"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfConfigError"), ("HP-ICF-RIPNG-MIB", "hpicfRipngIfRxBadPacket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRipngNotificationGroup = hpicfRipngNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-RIPNG-MIB", hpicfRipngPeerAddressType=hpicfRipngPeerAddressType, hpicfRipngIfConfigError=hpicfRipngIfConfigError, hpicfRipngNotificationGroup=hpicfRipngNotificationGroup, hpicfRipngIfState=hpicfRipngIfState, hpicfRipngUpdateTime=hpicfRipngUpdateTime, hpicfRipngPacketType=hpicfRipngPacketType, hpicfRipngObjects=hpicfRipngObjects, hpicfRipngDefaultMetric=hpicfRipngDefaultMetric, hpicfRipngBaseScalarsGroup=hpicfRipngBaseScalarsGroup, hpicfRipngAdminStatus=hpicfRipngAdminStatus, PYSNMP_MODULE_ID=hpicfRipng, hpicfRipngPeerTable=hpicfRipngPeerTable, hpicfRipngPeerGroup=hpicfRipngPeerGroup, hpicfRipngCompliances=hpicfRipngCompliances, hpicfRipngPeerLastUpdate=hpicfRipngPeerLastUpdate, hpicfRipngNotificationObjectGroup=hpicfRipngNotificationObjectGroup, hpicfRipngBaseScalars=hpicfRipngBaseScalars, hpicfRipngConformance=hpicfRipngConformance, hpicfRipngConfigErrorType=hpicfRipngConfigErrorType, hpicfRipngIfConfMetric=hpicfRipngIfConfMetric, hpicfRipngCompliance=hpicfRipngCompliance, hpicfRipngIfConfInstId=hpicfRipngIfConfInstId, hpicfRipngIfConfIndex=hpicfRipngIfConfIndex, hpicfRipngIfConfStatus=hpicfRipngIfConfStatus, hpicfRipngGlobalRouteChanges=hpicfRipngGlobalRouteChanges, hpicfRipngDistance=hpicfRipngDistance, hpicfRipngNotifications=hpicfRipngNotifications, hpicfRipngIfConfGroup=hpicfRipngIfConfGroup, hpicfRipng=hpicfRipng, hpicfRipngTimeoutTime=hpicfRipngTimeoutTime, hpicfRipngIfConfEntry=hpicfRipngIfConfEntry, hpicfRipngGroups=hpicfRipngGroups, hpicfRipngPeerEntry=hpicfRipngPeerEntry, hpicfRipngPacketSrc=hpicfRipngPacketSrc, hpicfRipngIfConfSrcAddressType=hpicfRipngIfConfSrcAddressType, hpicfRipngPacketSrcType=hpicfRipngPacketSrcType, hpicfRipngIfStateChange=hpicfRipngIfStateChange, hpicfRipngGlobalQueries=hpicfRipngGlobalQueries, hpicfRipngPeerRcvBadPackets=hpicfRipngPeerRcvBadPackets, hpicfRipngGarbageCollectTime=hpicfRipngGarbageCollectTime, hpicfRipngIfConfTable=hpicfRipngIfConfTable, hpicfRipngIfConfSrcAddress=hpicfRipngIfConfSrcAddress, hpicfRipngIfRxBadPacket=hpicfRipngIfRxBadPacket, hpicfRipngIfConfDoPoisonReverse=hpicfRipngIfConfDoPoisonReverse, hpicfRipngNotificationEntry=hpicfRipngNotificationEntry, hpicfRipngPeerAddress=hpicfRipngPeerAddress, hpicfRipngNotificationEnable=hpicfRipngNotificationEnable)
