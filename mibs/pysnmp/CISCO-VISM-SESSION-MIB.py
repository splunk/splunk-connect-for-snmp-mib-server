#
# PySNMP MIB module CISCO-VISM-SESSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VISM-SESSION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
voice, = mibBuilder.importSymbols("BASIS-MIB", "voice")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, Unsigned32, TimeTicks, iso, Gauge32, Bits, ObjectIdentity, Counter32, Integer32, ModuleIdentity, NotificationType, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "TimeTicks", "iso", "Gauge32", "Bits", "ObjectIdentity", "Counter32", "Integer32", "ModuleIdentity", "NotificationType", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
ciscoVismSessionMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 95))
ciscoVismSessionMIB.setRevisions(('2004-02-26 00:00', '2003-07-17 00:00',))
if mibBuilder.loadTexts: ciscoVismSessionMIB.setLastUpdated('200402260000Z')
if mibBuilder.loadTexts: ciscoVismSessionMIB.setOrganization('Cisco Systems, Inc.')
vismSessionGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11))
vismSessionSetTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1), )
if mibBuilder.loadTexts: vismSessionSetTable.setStatus('current')
vismSessionSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1), ).setIndexNames((0, "CISCO-VISM-SESSION-MIB", "vismSessionSetNum"))
if mibBuilder.loadTexts: vismSessionSetEntry.setStatus('current')
vismSessionSetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionSetNum.setStatus('current')
vismSessionSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismSessionSetRowStatus.setStatus('current')
vismSessionSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("oos", 2), ("activeIs", 3), ("standbyIs", 4), ("fullIs", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionSetState.setStatus('current')
vismSessionSetTotalGrps = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionSetTotalGrps.setStatus('current')
vismSessionSetActiveGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionSetActiveGrp.setStatus('current')
vismSessionSetSwitchFails = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionSetSwitchFails.setStatus('current')
vismSessionSetSwitchSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionSetSwitchSuccesses.setStatus('current')
vismSessionSetFaultTolerant = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismSessionSetFaultTolerant.setStatus('current')
vismSessionGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2), )
if mibBuilder.loadTexts: vismSessionGrpTable.setStatus('current')
vismSessionGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1), ).setIndexNames((0, "CISCO-VISM-SESSION-MIB", "vismSessionGrpNum"))
if mibBuilder.loadTexts: vismSessionGrpEntry.setStatus('current')
vismSessionGrpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionGrpNum.setStatus('current')
vismSessionGrpSetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismSessionGrpSetNum.setStatus('current')
vismSessionGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismSessionGrpRowStatus.setStatus('current')
vismSessionGrpState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("oos", 2), ("is", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionGrpState.setStatus('current')
vismSessionGrpCurrSession = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionGrpCurrSession.setStatus('current')
vismSessionGrpTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionGrpTotalSessions.setStatus('current')
vismSessionGrpSwitchFails = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionGrpSwitchFails.setStatus('current')
vismSessionGrpSwitchSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismSessionGrpSwitchSuccesses.setStatus('current')
vismSessionGrpMgcName = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismSessionGrpMgcName.setStatus('current')
vismRudpSessionCnfTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3), )
if mibBuilder.loadTexts: vismRudpSessionCnfTable.setStatus('current')
vismRudpSessionCnfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1), ).setIndexNames((0, "CISCO-VISM-SESSION-MIB", "vismRudpSessionNum"))
if mibBuilder.loadTexts: vismRudpSessionCnfEntry.setStatus('current')
vismRudpSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionNum.setStatus('current')
vismRudpSessionGrpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionGrpNum.setStatus('current')
vismRudpSessionCnfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionCnfRowStatus.setStatus('current')
vismRudpSessionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionPriority.setStatus('current')
vismRudpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("oos", 1), ("is", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionState.setStatus('current')
vismRudpSessionCurrSession = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionCurrSession.setStatus('current')
vismRudpSessionLocalIp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionLocalIp.setStatus('current')
vismRudpSessionLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1124, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionLocalPort.setStatus('current')
vismRudpSessionRmtIp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRmtIp.setStatus('current')
vismRudpSessionRmtPort = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1124, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionRmtPort.setStatus('current')
vismRudpSessionMaxWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionMaxWindow.setStatus('current')
vismRudpSessionSyncAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionSyncAttempts.setStatus('current')
vismRudpSessionMaxSegSize = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 65535)).clone(384)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionMaxSegSize.setStatus('current')
vismRudpSessionMaxAutoReset = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionMaxAutoReset.setStatus('current')
vismRudpSessionRetransTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 65535)).clone(600)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionRetransTmout.setStatus('current')
vismRudpSessionMaxRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionMaxRetrans.setStatus('current')
vismRudpSessionMaxCumAck = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionMaxCumAck.setStatus('current')
vismRudpSessionCumAckTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 65535)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionCumAckTmout.setStatus('current')
vismRudpSessionMaxOutOfSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionMaxOutOfSeq.setStatus('current')
vismRudpSessionNullSegTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionNullSegTmout.setStatus('current')
vismRudpSessionTransStateTmout = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionTransStateTmout.setStatus('current')
vismRudpSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backhaul", 1), ("lapdTrunking", 2))).clone('backhaul')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionType.setStatus('current')
vismRudpSessionRmtGwIp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 3, 1, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRudpSessionRmtGwIp.setStatus('current')
vismRudpSessionStatTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4), )
if mibBuilder.loadTexts: vismRudpSessionStatTable.setStatus('current')
vismRudpSessionStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1), ).setIndexNames((0, "CISCO-VISM-SESSION-MIB", "vismRudpSessionStatNum"))
if mibBuilder.loadTexts: vismRudpSessionStatEntry.setStatus('current')
vismRudpSessionStatNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionStatNum.setStatus('current')
vismRudpSessionAutoResets = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionAutoResets.setStatus('current')
vismRudpSessionRcvdAutoResets = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRcvdAutoResets.setStatus('current')
vismRudpSessionRcvdInSeqs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRcvdInSeqs.setStatus('current')
vismRudpSessionRcvdOutSeqs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRcvdOutSeqs.setStatus('current')
vismRudpSessionSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionSentPackets.setStatus('current')
vismRudpSessionRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRcvdPackets.setStatus('current')
vismRudpSessionSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionSentBytes.setStatus('current')
vismRudpSessionRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRcvdBytes.setStatus('current')
vismRudpSessionDataSentPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionDataSentPkts.setStatus('current')
vismRudpSessionDataRcvdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionDataRcvdPkts.setStatus('current')
vismRudpSessionDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionDiscardPkts.setStatus('current')
vismRudpSessionRetransPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 11, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismRudpSessionRetransPkts.setStatus('current')
ciscoVismSessionMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 95, 2))
ciscoVismSessionMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 1))
ciscoVismSessionMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 2))
ciscoVismSessionCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 2, 1)).setObjects(("CISCO-VISM-SESSION-MIB", "ciscoVismSessionSetGrp"), ("CISCO-VISM-SESSION-MIB", "ciscoVismSessionGrp"), ("CISCO-VISM-SESSION-MIB", "ciscoVismRudpSessionGrp"), ("CISCO-VISM-SESSION-MIB", "ciscoVismRudpSessionStatGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismSessionCompliance = ciscoVismSessionCompliance.setStatus('current')
ciscoVismSessionSetGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 1, 1)).setObjects(("CISCO-VISM-SESSION-MIB", "vismSessionSetNum"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetRowStatus"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetState"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetTotalGrps"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetActiveGrp"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetSwitchFails"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetSwitchSuccesses"), ("CISCO-VISM-SESSION-MIB", "vismSessionSetFaultTolerant"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismSessionSetGrp = ciscoVismSessionSetGrp.setStatus('current')
ciscoVismSessionGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 1, 2)).setObjects(("CISCO-VISM-SESSION-MIB", "vismSessionGrpNum"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpSetNum"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpRowStatus"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpState"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpCurrSession"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpTotalSessions"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpSwitchFails"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpSwitchSuccesses"), ("CISCO-VISM-SESSION-MIB", "vismSessionGrpMgcName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismSessionGrp = ciscoVismSessionGrp.setStatus('current')
ciscoVismRudpSessionGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 1, 3)).setObjects(("CISCO-VISM-SESSION-MIB", "vismRudpSessionNum"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionGrpNum"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionCnfRowStatus"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionPriority"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionState"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionCurrSession"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionLocalIp"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionLocalPort"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRmtIp"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRmtPort"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionMaxWindow"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionSyncAttempts"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionMaxSegSize"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionMaxAutoReset"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRetransTmout"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionMaxRetrans"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionMaxCumAck"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionCumAckTmout"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionMaxOutOfSeq"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionNullSegTmout"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionTransStateTmout"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionType"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRmtGwIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismRudpSessionGrp = ciscoVismRudpSessionGrp.setStatus('current')
ciscoVismRudpSessionStatGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 95, 2, 1, 4)).setObjects(("CISCO-VISM-SESSION-MIB", "vismRudpSessionStatNum"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionAutoResets"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRcvdAutoResets"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRcvdInSeqs"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRcvdOutSeqs"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionSentPackets"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRcvdPackets"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionSentBytes"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRcvdBytes"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionDataSentPkts"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionDataRcvdPkts"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionDiscardPkts"), ("CISCO-VISM-SESSION-MIB", "vismRudpSessionRetransPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismRudpSessionStatGrp = ciscoVismRudpSessionStatGrp.setStatus('current')
mibBuilder.exportSymbols("CISCO-VISM-SESSION-MIB", vismRudpSessionRcvdAutoResets=vismRudpSessionRcvdAutoResets, vismRudpSessionRcvdInSeqs=vismRudpSessionRcvdInSeqs, vismRudpSessionDiscardPkts=vismRudpSessionDiscardPkts, vismSessionGrpSwitchSuccesses=vismSessionGrpSwitchSuccesses, vismSessionGrp=vismSessionGrp, vismRudpSessionMaxAutoReset=vismRudpSessionMaxAutoReset, PYSNMP_MODULE_ID=ciscoVismSessionMIB, vismSessionSetSwitchFails=vismSessionSetSwitchFails, vismSessionGrpSwitchFails=vismSessionGrpSwitchFails, vismRudpSessionNum=vismRudpSessionNum, vismRudpSessionCnfRowStatus=vismRudpSessionCnfRowStatus, vismRudpSessionCumAckTmout=vismRudpSessionCumAckTmout, vismRudpSessionType=vismRudpSessionType, vismRudpSessionState=vismRudpSessionState, vismRudpSessionRmtGwIp=vismRudpSessionRmtGwIp, vismRudpSessionRcvdPackets=vismRudpSessionRcvdPackets, vismRudpSessionTransStateTmout=vismRudpSessionTransStateTmout, vismRudpSessionStatEntry=vismRudpSessionStatEntry, vismRudpSessionRetransPkts=vismRudpSessionRetransPkts, ciscoVismSessionSetGrp=ciscoVismSessionSetGrp, vismSessionSetTotalGrps=vismSessionSetTotalGrps, vismRudpSessionCnfTable=vismRudpSessionCnfTable, vismRudpSessionMaxCumAck=vismRudpSessionMaxCumAck, vismRudpSessionStatNum=vismRudpSessionStatNum, vismRudpSessionRcvdOutSeqs=vismRudpSessionRcvdOutSeqs, vismRudpSessionMaxRetrans=vismRudpSessionMaxRetrans, vismSessionGrpTotalSessions=vismSessionGrpTotalSessions, vismSessionGrpTable=vismSessionGrpTable, ciscoVismSessionMIBConformance=ciscoVismSessionMIBConformance, ciscoVismRudpSessionGrp=ciscoVismRudpSessionGrp, vismSessionSetTable=vismSessionSetTable, vismRudpSessionDataRcvdPkts=vismRudpSessionDataRcvdPkts, vismSessionSetSwitchSuccesses=vismSessionSetSwitchSuccesses, ciscoVismSessionMIBGroups=ciscoVismSessionMIBGroups, vismSessionSetRowStatus=vismSessionSetRowStatus, vismSessionGrpMgcName=vismSessionGrpMgcName, vismRudpSessionRmtIp=vismRudpSessionRmtIp, vismRudpSessionRmtPort=vismRudpSessionRmtPort, vismRudpSessionRcvdBytes=vismRudpSessionRcvdBytes, vismRudpSessionAutoResets=vismRudpSessionAutoResets, vismRudpSessionSentPackets=vismRudpSessionSentPackets, vismRudpSessionLocalPort=vismRudpSessionLocalPort, vismRudpSessionCurrSession=vismRudpSessionCurrSession, ciscoVismSessionCompliance=ciscoVismSessionCompliance, vismSessionSetNum=vismSessionSetNum, ciscoVismSessionMIB=ciscoVismSessionMIB, vismSessionGrpSetNum=vismSessionGrpSetNum, vismSessionGrpRowStatus=vismSessionGrpRowStatus, vismRudpSessionRetransTmout=vismRudpSessionRetransTmout, vismRudpSessionMaxOutOfSeq=vismRudpSessionMaxOutOfSeq, vismRudpSessionPriority=vismRudpSessionPriority, vismSessionGrpNum=vismSessionGrpNum, vismSessionSetState=vismSessionSetState, ciscoVismSessionMIBCompliances=ciscoVismSessionMIBCompliances, vismRudpSessionMaxSegSize=vismRudpSessionMaxSegSize, vismRudpSessionNullSegTmout=vismRudpSessionNullSegTmout, vismSessionGrpState=vismSessionGrpState, vismSessionSetActiveGrp=vismSessionSetActiveGrp, vismRudpSessionMaxWindow=vismRudpSessionMaxWindow, vismRudpSessionSyncAttempts=vismRudpSessionSyncAttempts, vismRudpSessionCnfEntry=vismRudpSessionCnfEntry, vismRudpSessionStatTable=vismRudpSessionStatTable, ciscoVismSessionGrp=ciscoVismSessionGrp, vismSessionSetEntry=vismSessionSetEntry, vismRudpSessionLocalIp=vismRudpSessionLocalIp, vismRudpSessionDataSentPkts=vismRudpSessionDataSentPkts, vismSessionSetFaultTolerant=vismSessionSetFaultTolerant, vismSessionGrpEntry=vismSessionGrpEntry, vismRudpSessionSentBytes=vismRudpSessionSentBytes, ciscoVismRudpSessionStatGrp=ciscoVismRudpSessionStatGrp, vismRudpSessionGrpNum=vismRudpSessionGrpNum, vismSessionGrpCurrSession=vismSessionGrpCurrSession)
