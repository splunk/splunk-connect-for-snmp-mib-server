#
# PySNMP MIB module CISCO-VRF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VRF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:03:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifName, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "InterfaceIndex", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, ModuleIdentity, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, Counter32, Unsigned32, TimeTicks, NotificationType, Bits, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "Counter32", "Unsigned32", "TimeTicks", "NotificationType", "Bits", "IpAddress", "MibIdentifier")
StorageType, DisplayString, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "DisplayString", "TextualConvention", "RowStatus", "TruthValue")
ciscoVrfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 711))
ciscoVrfMIB.setRevisions(('2009-12-10 00:00',))
if mibBuilder.loadTexts: ciscoVrfMIB.setLastUpdated('200912100000Z')
if mibBuilder.loadTexts: ciscoVrfMIB.setOrganization('Cisco Systems, Inc.')
class CvVrfIfType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("vNETTrunkSI", 1), ("vNETEdge", 2), ("vrfEdge", 3))

class CvVnetTagOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4094), )
ciscoVrfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 1))
ciscoVrfMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 0))
ciscoVrfMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 2))
cvVrf = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1))
cvInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2))
cvNotifCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 3))
cvVrfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1), )
if mibBuilder.loadTexts: cvVrfTable.setStatus('current')
cvVrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-VRF-MIB", "cvVrfIndex"))
if mibBuilder.loadTexts: cvVrfEntry.setStatus('current')
cvVrfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cvVrfIndex.setStatus('current')
cvVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfName.setStatus('current')
cvVrfVnetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 3), CvVnetTagOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfVnetTag.setStatus('current')
cvVrfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvVrfOperStatus.setStatus('current')
cvVrfRouteDistProt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("none", 0), ("other", 1), ("ospf", 2), ("rip", 3), ("isis", 4), ("eigrp", 5), ("bgp", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvVrfRouteDistProt.setStatus('current')
cvVrfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 6), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvVrfStorageType.setStatus('current')
cvVrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfRowStatus.setStatus('current')
cvVrfListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2), )
if mibBuilder.loadTexts: cvVrfListTable.setStatus('current')
cvVrfListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-VRF-MIB", "cvVrfListName"), (0, "CISCO-VRF-MIB", "cvVrfListVindex"))
if mibBuilder.loadTexts: cvVrfListEntry.setStatus('current')
cvVrfListName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cvVrfListName.setStatus('current')
cvVrfListVindex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: cvVrfListVindex.setStatus('current')
cvVrfListVrfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfListVrfIndex.setStatus('current')
cvVrfListStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvVrfListStorageType.setStatus('current')
cvVrfListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfListRowStatus.setStatus('current')
cvVrfInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1), )
if mibBuilder.loadTexts: cvVrfInterfaceTable.setStatus('current')
cvVrfInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VRF-MIB", "cvVrfIndex"), (0, "CISCO-VRF-MIB", "cvVrfInterfaceIndex"))
if mibBuilder.loadTexts: cvVrfInterfaceEntry.setStatus('current')
cvVrfInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1, 1, 1), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cvVrfInterfaceIndex.setStatus('current')
cvVrfInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1, 1, 2), CvVrfIfType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvVrfInterfaceType.setStatus('current')
cvVrfInterfaceVnetTagOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1, 1, 3), CvVnetTagOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfInterfaceVnetTagOverride.setStatus('current')
cvVrfInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvVrfInterfaceStorageType.setStatus('current')
cvVrfInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cvVrfInterfaceRowStatus.setStatus('current')
cvInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 2), )
if mibBuilder.loadTexts: cvInterfaceTable.setStatus('current')
cvInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cvInterfaceEntry.setStatus('current')
cvInterfaceVnetTrunkEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvInterfaceVnetTrunkEnabled.setStatus('current')
cvInterfaceVnetVrfList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvInterfaceVnetVrfList.setStatus('current')
cvVrfIfNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvVrfIfNotifEnable.setStatus('current')
cvVnetTrunkNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 711, 1, 3, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvVnetTrunkNotifEnable.setStatus('current')
cvVrfIfUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 711, 0, 1)).setObjects(("IF-MIB", "ifName"), ("CISCO-VRF-MIB", "cvVrfName"), ("CISCO-VRF-MIB", "cvVrfOperStatus"))
if mibBuilder.loadTexts: cvVrfIfUp.setStatus('current')
cvVrfIfDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 711, 0, 2)).setObjects(("IF-MIB", "ifName"), ("CISCO-VRF-MIB", "cvVrfName"), ("CISCO-VRF-MIB", "cvVrfOperStatus"))
if mibBuilder.loadTexts: cvVrfIfDown.setStatus('current')
cvVnetTrunkUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 711, 0, 3)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: cvVnetTrunkUp.setStatus('current')
cvVnetTrunkDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 711, 0, 4)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: cvVnetTrunkDown.setStatus('current')
cvMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 1))
cvMIBVrfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 1, 1)).setObjects(("CISCO-VRF-MIB", "cvVrfOperStatus"), ("CISCO-VRF-MIB", "cvVrfStorageType"), ("CISCO-VRF-MIB", "cvVrfRowStatus"), ("CISCO-VRF-MIB", "cvVrfRouteDistProt"), ("CISCO-VRF-MIB", "cvVrfInterfaceType"), ("CISCO-VRF-MIB", "cvVrfInterfaceStorageType"), ("CISCO-VRF-MIB", "cvVrfInterfaceRowStatus"), ("CISCO-VRF-MIB", "cvVrfIfNotifEnable"), ("CISCO-VRF-MIB", "cvVrfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvMIBVrfGroup = cvMIBVrfGroup.setStatus('current')
cvMIBVrfNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 1, 2)).setObjects(("CISCO-VRF-MIB", "cvVrfIfUp"), ("CISCO-VRF-MIB", "cvVrfIfDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvMIBVrfNotifGroup = cvMIBVrfNotifGroup.setStatus('current')
cvMIBVnetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 1, 3)).setObjects(("CISCO-VRF-MIB", "cvVrfVnetTag"), ("CISCO-VRF-MIB", "cvVrfListVrfIndex"), ("CISCO-VRF-MIB", "cvVrfListStorageType"), ("CISCO-VRF-MIB", "cvVrfListRowStatus"), ("CISCO-VRF-MIB", "cvVrfInterfaceVnetTagOverride"), ("CISCO-VRF-MIB", "cvInterfaceVnetTrunkEnabled"), ("CISCO-VRF-MIB", "cvInterfaceVnetVrfList"), ("CISCO-VRF-MIB", "cvVnetTrunkNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvMIBVnetGroup = cvMIBVnetGroup.setStatus('current')
cvMIBVnetNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 1, 4)).setObjects(("CISCO-VRF-MIB", "cvVnetTrunkUp"), ("CISCO-VRF-MIB", "cvVnetTrunkDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvMIBVnetNotifGroup = cvMIBVnetNotifGroup.setStatus('current')
cvMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 2))
cvMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 711, 2, 2, 1)).setObjects(("CISCO-VRF-MIB", "cvMIBVrfGroup"), ("CISCO-VRF-MIB", "cvMIBVrfNotifGroup"), ("CISCO-VRF-MIB", "cvMIBVnetGroup"), ("CISCO-VRF-MIB", "cvMIBVnetNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvMIBCompliance = cvMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("CISCO-VRF-MIB", cvMIBVnetGroup=cvMIBVnetGroup, cvInterfaceVnetTrunkEnabled=cvInterfaceVnetTrunkEnabled, ciscoVrfMIBObjects=ciscoVrfMIBObjects, CvVnetTagOrZero=CvVnetTagOrZero, cvVrf=cvVrf, cvVrfInterfaceVnetTagOverride=cvVrfInterfaceVnetTagOverride, cvMIBGroups=cvMIBGroups, cvNotifCntl=cvNotifCntl, cvVrfInterfaceTable=cvVrfInterfaceTable, cvVnetTrunkUp=cvVnetTrunkUp, cvVrfTable=cvVrfTable, cvMIBCompliances=cvMIBCompliances, cvVrfEntry=cvVrfEntry, cvVrfRowStatus=cvVrfRowStatus, cvVrfInterfaceIndex=cvVrfInterfaceIndex, cvVnetTrunkDown=cvVnetTrunkDown, cvVrfListStorageType=cvVrfListStorageType, cvVrfRouteDistProt=cvVrfRouteDistProt, cvMIBVnetNotifGroup=cvMIBVnetNotifGroup, cvVrfVnetTag=cvVrfVnetTag, CvVrfIfType=CvVrfIfType, cvInterface=cvInterface, cvVrfOperStatus=cvVrfOperStatus, cvInterfaceEntry=cvInterfaceEntry, cvVrfInterfaceRowStatus=cvVrfInterfaceRowStatus, ciscoVrfMIBNotifs=ciscoVrfMIBNotifs, cvMIBCompliance=cvMIBCompliance, cvVrfName=cvVrfName, cvVrfListVindex=cvVrfListVindex, cvVrfStorageType=cvVrfStorageType, cvMIBVrfGroup=cvMIBVrfGroup, PYSNMP_MODULE_ID=ciscoVrfMIB, cvVrfListVrfIndex=cvVrfListVrfIndex, cvInterfaceTable=cvInterfaceTable, cvMIBVrfNotifGroup=cvMIBVrfNotifGroup, cvVrfInterfaceType=cvVrfInterfaceType, cvVrfInterfaceStorageType=cvVrfInterfaceStorageType, ciscoVrfMIB=ciscoVrfMIB, ciscoVrfMIBConform=ciscoVrfMIBConform, cvVrfIfUp=cvVrfIfUp, cvVrfListRowStatus=cvVrfListRowStatus, cvVrfListName=cvVrfListName, cvVrfIfNotifEnable=cvVrfIfNotifEnable, cvVrfIfDown=cvVrfIfDown, cvVrfIndex=cvVrfIndex, cvVrfListTable=cvVrfListTable, cvInterfaceVnetVrfList=cvInterfaceVnetVrfList, cvVnetTrunkNotifEnable=cvVnetTrunkNotifEnable, cvVrfListEntry=cvVrfListEntry, cvVrfInterfaceEntry=cvVrfInterfaceEntry)
