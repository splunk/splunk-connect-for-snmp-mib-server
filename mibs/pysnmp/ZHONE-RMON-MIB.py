#
# PySNMP MIB module ZHONE-RMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-RMON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, NotificationType, IpAddress, TimeTicks, ModuleIdentity, ObjectIdentity, Counter32, Unsigned32, Counter64, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "IpAddress", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Counter32", "Unsigned32", "Counter64", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ietfDrafts, = mibBuilder.importSymbols("Zhone", "ietfDrafts")
zhoneRmonMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12))
zhoneRmonMibModule.setRevisions(('2010-03-23 13:50', '2010-03-15 15:10', '2010-03-11 14:26', '2010-02-19 12:29',))
if mibBuilder.loadTexts: zhoneRmonMibModule.setLastUpdated('201003230000Z')
if mibBuilder.loadTexts: zhoneRmonMibModule.setOrganization('Zhone Technologies, Inc.')
class OwnerString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

class EntryStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4))

zhoneRmon = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1))
statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1))
zhoneEtherStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1), )
if mibBuilder.loadTexts: zhoneEtherStatsTable.setStatus('current')
zhoneEtherStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneEtherStatsEntry.setStatus('current')
zhoneEtherStatsDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 1), Counter64()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsDropEvents.setStatus('current')
zhoneEtherStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 2), Counter64()).setUnits('Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsDroppedFrames.setStatus('current')
zhoneEtherStatsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsOctets.setStatus('current')
zhoneEtherStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts.setStatus('current')
zhoneEtherStatsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTxPkts.setStatus('current')
zhoneEtherStatsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsRxPkts.setStatus('current')
zhoneEtherStatsMcastTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 7), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsMcastTxBytes.setStatus('current')
zhoneEtherStatsMcastRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 8), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsMcastRxBytes.setStatus('current')
zhoneEtherStatsMcastRxDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 9), Counter64()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsMcastRxDroppedBytes.setStatus('current')
zhoneEtherStatsAverageTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 10), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsAverageTxThroughput.setStatus('current')
zhoneEtherStatsAverageRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 11), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsAverageRxThroughput.setStatus('current')
zhoneEtherStatsTxBandwidthOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 12), Integer32()).setUnits('Percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTxBandwidthOccupancy.setStatus('current')
zhoneEtherStatsRxBandwidthOccupancy = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 13), Integer32()).setUnits('Percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsRxBandwidthOccupancy.setStatus('current')
zhoneEtherStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 14), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsBroadcastPkts.setStatus('current')
zhoneEtherStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 15), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsMulticastPkts.setStatus('current')
zhoneEtherStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 16), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsCRCAlignErrors.setStatus('current')
zhoneEtherStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 17), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsUndersizePkts.setStatus('current')
zhoneEtherStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 18), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsOversizePkts.setStatus('current')
zhoneEtherStatsOversizeTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 19), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsOversizeTxPkts.setStatus('current')
zhoneEtherStatsOversizeRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 20), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsOversizeRxPkts.setStatus('current')
zhoneEtherStatsFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 21), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsFragments.setStatus('current')
zhoneEtherStatsJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 22), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsJabbers.setStatus('current')
zhoneEtherStatsCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 23), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsCollisions.setStatus('current')
zhoneEtherStatsTXNoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 24), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTXNoErrors.setStatus('current')
zhoneEtherStatsRXNoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 25), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsRXNoErrors.setStatus('current')
zhoneEtherStatsIPMCBridgedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsIPMCBridgedPkts.setStatus('current')
zhoneEtherStatsIPMCRoutedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsIPMCRoutedPkts.setStatus('current')
zhoneEtherStatsIPMCTxDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsIPMCTxDroppedPkts.setStatus('current')
zhoneEtherStatsIPMCRxDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsIPMCRxDroppedPkts.setStatus('current')
zhoneEtherStatsPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 30), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts64Octets.setStatus('current')
zhoneEtherStatsPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 31), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts65to127Octets.setStatus('current')
zhoneEtherStatsPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 32), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts128to255Octets.setStatus('current')
zhoneEtherStatsPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 33), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts256to511Octets.setStatus('current')
zhoneEtherStatsPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 34), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts512to1023Octets.setStatus('current')
zhoneEtherStatsPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 35), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts1024to1518Octets.setStatus('current')
zhoneEtherStatsPkts1519to2047Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 36), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts1519to2047Octets.setStatus('current')
zhoneEtherStatsPkts2048to4095Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 37), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts2048to4095Octets.setStatus('current')
zhoneEtherStatsPkts4095to9216Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 38), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsPkts4095to9216Octets.setStatus('current')
zhoneEtherStatsReceivedPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 39), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts64Octets.setStatus('current')
zhoneEtherStatsReceivedPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 40), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts65to127Octets.setStatus('current')
zhoneEtherStatsReceivedPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 41), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts128to255Octets.setStatus('current')
zhoneEtherStatsReceivedPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 42), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts256to511Octets.setStatus('current')
zhoneEtherStatsReceivedPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 43), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts512to1023Octets.setStatus('current')
zhoneEtherStatsReceivedPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 44), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts1024to1518Octets.setStatus('current')
zhoneEtherStatsReceivedPkts1519to2047Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 45), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts1519to2047Octets.setStatus('current')
zhoneEtherStatsReceivedPkts2048to4095Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 46), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts2048to4095Octets.setStatus('current')
zhoneEtherStatsReceivedPkts4095to9216Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 47), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsReceivedPkts4095to9216Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 48), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts64Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 49), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts65to127Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 50), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts128to255Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 51), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts256to511Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 52), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts512to1023Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 53), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts1024to1518Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts1519to2047Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 54), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts1519to2047Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts2048to4095Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 55), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts2048to4095Octets.setStatus('current')
zhoneEtherStatsTransmittedPkts4095to9216Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 1, 1, 1, 56), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneEtherStatsTransmittedPkts4095to9216Octets.setStatus('current')
history = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2))
historyControlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1), )
if mibBuilder.loadTexts: historyControlTable.setStatus('current')
historyControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "historyControlIndex"))
if mibBuilder.loadTexts: historyControlEntry.setStatus('current')
historyControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyControlIndex.setStatus('current')
historyControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: historyControlDataSource.setStatus('current')
historyControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: historyControlBucketsRequested.setStatus('current')
historyControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyControlBucketsGranted.setStatus('current')
historyControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1800)).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: historyControlInterval.setStatus('current')
historyControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 6), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: historyControlOwner.setStatus('current')
historyControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 1, 1, 7), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: historyControlStatus.setStatus('current')
etherHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2), )
if mibBuilder.loadTexts: etherHistoryTable.setStatus('current')
etherHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "etherHistoryIndex"), (0, "ZHONE-RMON-MIB", "etherHistorySampleIndex"))
if mibBuilder.loadTexts: etherHistoryEntry.setStatus('current')
etherHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryIndex.setStatus('current')
etherHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistorySampleIndex.setStatus('current')
etherHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryIntervalStart.setStatus('current')
etherHistoryDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryDropEvents.setStatus('current')
etherHistoryOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryOctets.setStatus('current')
etherHistoryPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryPkts.setStatus('current')
etherHistoryBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryBroadcastPkts.setStatus('current')
etherHistoryMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryMulticastPkts.setStatus('current')
etherHistoryCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryCRCAlignErrors.setStatus('current')
etherHistoryUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 10), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryUndersizePkts.setStatus('current')
etherHistoryOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 11), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryOversizePkts.setStatus('current')
etherHistoryFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 12), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryFragments.setStatus('current')
etherHistoryJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 13), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryJabbers.setStatus('current')
etherHistoryCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 14), Counter32()).setUnits('Collisions').setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryCollisions.setStatus('current')
etherHistoryUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryUtilization.setStatus('current')
alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3))
alarmTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1), )
if mibBuilder.loadTexts: alarmTable.setStatus('current')
alarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "alarmIndex"))
if mibBuilder.loadTexts: alarmEntry.setStatus('current')
alarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmIndex.setStatus('current')
alarmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 2), Integer32()).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmInterval.setStatus('current')
alarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmVariable.setStatus('current')
alarmSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmSampleType.setStatus('current')
alarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmValue.setStatus('current')
alarmStartupAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("risingAlarm", 1), ("fallingAlarm", 2), ("risingOrFallingAlarm", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmStartupAlarm.setStatus('current')
alarmRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmRisingThreshold.setStatus('current')
alarmFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmFallingThreshold.setStatus('current')
alarmRisingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmRisingEventIndex.setStatus('current')
alarmFallingEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmFallingEventIndex.setStatus('current')
alarmOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 11), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmOwner.setStatus('current')
alarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 3, 1, 1, 12), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alarmStatus.setStatus('current')
hosts = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4))
hostControlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1), )
if mibBuilder.loadTexts: hostControlTable.setStatus('current')
hostControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "hostControlIndex"))
if mibBuilder.loadTexts: hostControlEntry.setStatus('current')
hostControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlIndex.setStatus('current')
hostControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostControlDataSource.setStatus('current')
hostControlTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlTableSize.setStatus('current')
hostControlLastDeleteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlLastDeleteTime.setStatus('current')
hostControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1, 5), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostControlOwner.setStatus('current')
hostControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 1, 1, 6), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostControlStatus.setStatus('current')
hostTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2), )
if mibBuilder.loadTexts: hostTable.setStatus('current')
hostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "hostIndex"), (0, "ZHONE-RMON-MIB", "hostAddress"))
if mibBuilder.loadTexts: hostEntry.setStatus('current')
hostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostAddress.setStatus('current')
hostCreationOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostCreationOrder.setStatus('current')
hostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostIndex.setStatus('current')
hostInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInPkts.setStatus('current')
hostOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 5), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutPkts.setStatus('current')
hostInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 6), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInOctets.setStatus('current')
hostOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 7), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutOctets.setStatus('current')
hostOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutErrors.setStatus('current')
hostOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutBroadcastPkts.setStatus('current')
hostOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 2, 1, 10), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOutMulticastPkts.setStatus('current')
hostTimeTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3), )
if mibBuilder.loadTexts: hostTimeTable.setStatus('current')
hostTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "hostTimeIndex"), (0, "ZHONE-RMON-MIB", "hostTimeCreationOrder"))
if mibBuilder.loadTexts: hostTimeEntry.setStatus('current')
hostTimeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeAddress.setStatus('current')
hostTimeCreationOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeCreationOrder.setStatus('current')
hostTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeIndex.setStatus('current')
hostTimeInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeInPkts.setStatus('current')
hostTimeOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 5), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutPkts.setStatus('current')
hostTimeInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 6), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeInOctets.setStatus('current')
hostTimeOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 7), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutOctets.setStatus('current')
hostTimeOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutErrors.setStatus('current')
hostTimeOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutBroadcastPkts.setStatus('current')
hostTimeOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 4, 3, 1, 10), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeOutMulticastPkts.setStatus('current')
hostTopN = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5))
hostTopNControlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1), )
if mibBuilder.loadTexts: hostTopNControlTable.setStatus('current')
hostTopNControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "hostTopNControlIndex"))
if mibBuilder.loadTexts: hostTopNControlEntry.setStatus('current')
hostTopNControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNControlIndex.setStatus('current')
hostTopNHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostTopNHostIndex.setStatus('current')
hostTopNRateBase = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("hostTopNInPkts", 1), ("hostTopNOutPkts", 2), ("hostTopNInOctets", 3), ("hostTopNOutOctets", 4), ("hostTopNOutErrors", 5), ("hostTopNOutBroadcastPkts", 6), ("hostTopNOutMulticastPkts", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostTopNRateBase.setStatus('current')
hostTopNTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 4), Integer32()).setUnits('Seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostTopNTimeRemaining.setStatus('current')
hostTopNDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 5), Integer32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNDuration.setStatus('current')
hostTopNRequestedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 6), Integer32().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostTopNRequestedSize.setStatus('current')
hostTopNGrantedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNGrantedSize.setStatus('current')
hostTopNStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNStartTime.setStatus('current')
hostTopNOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 9), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostTopNOwner.setStatus('current')
hostTopNStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 1, 1, 10), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hostTopNStatus.setStatus('current')
hostTopNTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 2), )
if mibBuilder.loadTexts: hostTopNTable.setStatus('current')
hostTopNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "hostTopNReport"), (0, "ZHONE-RMON-MIB", "hostTopNIndex"))
if mibBuilder.loadTexts: hostTopNEntry.setStatus('current')
hostTopNReport = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNReport.setStatus('current')
hostTopNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNIndex.setStatus('current')
hostTopNAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNAddress.setStatus('current')
hostTopNRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNRate.setStatus('current')
matrix = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6))
matrixControlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1), )
if mibBuilder.loadTexts: matrixControlTable.setStatus('current')
matrixControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "matrixControlIndex"))
if mibBuilder.loadTexts: matrixControlEntry.setStatus('current')
matrixControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlIndex.setStatus('current')
matrixControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: matrixControlDataSource.setStatus('current')
matrixControlTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlTableSize.setStatus('current')
matrixControlLastDeleteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlLastDeleteTime.setStatus('current')
matrixControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1, 5), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: matrixControlOwner.setStatus('current')
matrixControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 1, 1, 6), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: matrixControlStatus.setStatus('current')
matrixSDTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2), )
if mibBuilder.loadTexts: matrixSDTable.setStatus('current')
matrixSDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "matrixSDIndex"), (0, "ZHONE-RMON-MIB", "matrixSDSourceAddress"), (0, "ZHONE-RMON-MIB", "matrixSDDestAddress"))
if mibBuilder.loadTexts: matrixSDEntry.setStatus('current')
matrixSDSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDSourceAddress.setStatus('current')
matrixSDDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDDestAddress.setStatus('current')
matrixSDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDIndex.setStatus('current')
matrixSDPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDPkts.setStatus('current')
matrixSDOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDOctets.setStatus('current')
matrixSDErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 2, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDErrors.setStatus('current')
matrixDSTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3), )
if mibBuilder.loadTexts: matrixDSTable.setStatus('current')
matrixDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "matrixDSIndex"), (0, "ZHONE-RMON-MIB", "matrixDSDestAddress"), (0, "ZHONE-RMON-MIB", "matrixDSSourceAddress"))
if mibBuilder.loadTexts: matrixDSEntry.setStatus('current')
matrixDSSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSSourceAddress.setStatus('current')
matrixDSDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSDestAddress.setStatus('current')
matrixDSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSIndex.setStatus('current')
matrixDSPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSPkts.setStatus('current')
matrixDSOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSOctets.setStatus('current')
matrixDSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 6, 3, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSErrors.setStatus('current')
zhoneRmonFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7))
filterTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1), )
if mibBuilder.loadTexts: filterTable.setStatus('current')
filterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "filterIndex"))
if mibBuilder.loadTexts: filterEntry.setStatus('current')
filterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterIndex.setStatus('current')
filterChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterChannelIndex.setStatus('current')
filterPktDataOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 3), Integer32()).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktDataOffset.setStatus('current')
filterPktData = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktData.setStatus('current')
filterPktDataMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktDataMask.setStatus('current')
filterPktDataNotMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktDataNotMask.setStatus('current')
filterPktStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktStatus.setStatus('current')
filterPktStatusMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktStatusMask.setStatus('current')
filterPktStatusNotMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPktStatusNotMask.setStatus('current')
filterOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 10), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterOwner.setStatus('current')
filterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 1, 1, 11), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterStatus.setStatus('current')
channelTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2), )
if mibBuilder.loadTexts: channelTable.setStatus('current')
channelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "channelIndex"))
if mibBuilder.loadTexts: channelEntry.setStatus('current')
channelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelIndex.setStatus('current')
channelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelIfIndex.setStatus('current')
channelAcceptType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acceptMatched", 1), ("acceptFailed", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelAcceptType.setStatus('current')
channelDataControl = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelDataControl.setStatus('current')
channelTurnOnEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelTurnOnEventIndex.setStatus('current')
channelTurnOffEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelTurnOffEventIndex.setStatus('current')
channelEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelEventIndex.setStatus('current')
channelEventStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("eventReady", 1), ("eventFired", 2), ("eventAlwaysReady", 3))).clone('eventReady')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelEventStatus.setStatus('current')
channelMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: channelMatches.setStatus('current')
channelDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelDescription.setStatus('current')
channelOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 11), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelOwner.setStatus('current')
channelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 7, 2, 1, 12), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelStatus.setStatus('current')
capture = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8))
bufferControlTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1), )
if mibBuilder.loadTexts: bufferControlTable.setStatus('current')
bufferControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "bufferControlIndex"))
if mibBuilder.loadTexts: bufferControlEntry.setStatus('current')
bufferControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlIndex.setStatus('current')
bufferControlChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlChannelIndex.setStatus('current')
bufferControlFullStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("spaceAvailable", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlFullStatus.setStatus('current')
bufferControlFullAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lockWhenFull", 1), ("wrapWhenFull", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlFullAction.setStatus('current')
bufferControlCaptureSliceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 5), Integer32().clone(100)).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlCaptureSliceSize.setStatus('current')
bufferControlDownloadSliceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 6), Integer32().clone(100)).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlDownloadSliceSize.setStatus('current')
bufferControlDownloadOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 7), Integer32()).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlDownloadOffset.setStatus('current')
bufferControlMaxOctetsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 8), Integer32().clone(-1)).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlMaxOctetsRequested.setStatus('current')
bufferControlMaxOctetsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 9), Integer32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlMaxOctetsGranted.setStatus('current')
bufferControlCapturedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 10), Integer32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlCapturedPackets.setStatus('current')
bufferControlTurnOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferControlTurnOnTime.setStatus('current')
bufferControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 12), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlOwner.setStatus('current')
bufferControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 1, 1, 13), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bufferControlStatus.setStatus('current')
captureBufferTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2), )
if mibBuilder.loadTexts: captureBufferTable.setStatus('current')
captureBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "captureBufferControlIndex"), (0, "ZHONE-RMON-MIB", "captureBufferIndex"))
if mibBuilder.loadTexts: captureBufferEntry.setStatus('current')
captureBufferControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferControlIndex.setStatus('current')
captureBufferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferIndex.setStatus('current')
captureBufferPacketID = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketID.setStatus('current')
captureBufferPacketData = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketData.setStatus('current')
captureBufferPacketLength = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 5), Integer32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketLength.setStatus('current')
captureBufferPacketTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 6), Integer32()).setUnits('Milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketTime.setStatus('current')
captureBufferPacketStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 8, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketStatus.setStatus('current')
event = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9))
eventTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1), )
if mibBuilder.loadTexts: eventTable.setStatus('current')
eventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "eventIndex"))
if mibBuilder.loadTexts: eventEntry.setStatus('current')
eventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventIndex.setStatus('current')
eventDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eventDescription.setStatus('current')
eventType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("log", 2), ("snmptrap", 3), ("logandtrap", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eventType.setStatus('current')
eventCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eventCommunity.setStatus('current')
eventLastTimeSent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLastTimeSent.setStatus('current')
eventOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 6), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eventOwner.setStatus('current')
eventStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 1, 1, 7), EntryStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eventStatus.setStatus('current')
logTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 2), )
if mibBuilder.loadTexts: logTable.setStatus('current')
logEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 2, 1), ).setIndexNames((0, "ZHONE-RMON-MIB", "logEventIndex"), (0, "ZHONE-RMON-MIB", "logIndex"))
if mibBuilder.loadTexts: logEntry.setStatus('current')
logEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEventIndex.setStatus('current')
logIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logIndex.setStatus('current')
logTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logTime.setStatus('current')
logDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 9, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logDescription.setStatus('current')
rmonEventsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 10))
rmonEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 10, 0))
if mibBuilder.loadTexts: rmonEvents.setStatus('current')
risingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 10, 0, 1)).setObjects(("ZHONE-RMON-MIB", "alarmIndex"), ("ZHONE-RMON-MIB", "alarmVariable"), ("ZHONE-RMON-MIB", "alarmSampleType"), ("ZHONE-RMON-MIB", "alarmValue"), ("ZHONE-RMON-MIB", "alarmRisingThreshold"))
if mibBuilder.loadTexts: risingAlarm.setStatus('current')
fallingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 10, 0, 2)).setObjects(("ZHONE-RMON-MIB", "alarmIndex"), ("ZHONE-RMON-MIB", "alarmVariable"), ("ZHONE-RMON-MIB", "alarmSampleType"), ("ZHONE-RMON-MIB", "alarmValue"), ("ZHONE-RMON-MIB", "alarmFallingThreshold"))
if mibBuilder.loadTexts: fallingAlarm.setStatus('current')
rmonConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20))
rmonCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 1))
rmonCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 1, 1)).setObjects(("ZHONE-RMON-MIB", "zhoneRmonEtherStatsGroup"), ("ZHONE-RMON-MIB", "rmonHistoryControlGroup"), ("ZHONE-RMON-MIB", "rmonEthernetHistoryGroup"), ("ZHONE-RMON-MIB", "rmonAlarmGroup"), ("ZHONE-RMON-MIB", "rmonHostGroup"), ("ZHONE-RMON-MIB", "rmonHostTopNGroup"), ("ZHONE-RMON-MIB", "rmonMatrixGroup"), ("ZHONE-RMON-MIB", "rmonFilterGroup"), ("ZHONE-RMON-MIB", "rmonPacketCaptureGroup"), ("ZHONE-RMON-MIB", "rmonEventGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonCompliance = rmonCompliance.setStatus('current')
rmonGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2))
zhoneRmonEtherStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 1)).setObjects(("ZHONE-RMON-MIB", "zhoneEtherStatsDropEvents"), ("ZHONE-RMON-MIB", "zhoneEtherStatsOctets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsBroadcastPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsMulticastPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsCRCAlignErrors"), ("ZHONE-RMON-MIB", "zhoneEtherStatsUndersizePkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsOversizePkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsFragments"), ("ZHONE-RMON-MIB", "zhoneEtherStatsJabbers"), ("ZHONE-RMON-MIB", "zhoneEtherStatsCollisions"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts64Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts65to127Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts128to255Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts256to511Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts512to1023Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts64Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts65to127Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts128to255Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts256to511Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts512to1023Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts1024to1518Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts1519to2047Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts2048to4095Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsReceivedPkts4095to9216Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts64Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts65to127Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts128to255Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts256to511Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts512to1023Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts1024to1518Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts1519to2047Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts2048to4095Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTransmittedPkts4095to9216Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsDroppedFrames"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts1024to1518Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTXNoErrors"), ("ZHONE-RMON-MIB", "zhoneEtherStatsRXNoErrors"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts2048to4095Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts4095to9216Octets"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTxPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsRxPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsAverageTxThroughput"), ("ZHONE-RMON-MIB", "zhoneEtherStatsAverageRxThroughput"), ("ZHONE-RMON-MIB", "zhoneEtherStatsTxBandwidthOccupancy"), ("ZHONE-RMON-MIB", "zhoneEtherStatsMcastRxBytes"), ("ZHONE-RMON-MIB", "zhoneEtherStatsMcastTxBytes"), ("ZHONE-RMON-MIB", "zhoneEtherStatsRxBandwidthOccupancy"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsOversizeTxPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsOversizeRxPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsIPMCRoutedPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsIPMCTxDroppedPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsIPMCRxDroppedPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsIPMCBridgedPkts"), ("ZHONE-RMON-MIB", "zhoneEtherStatsMcastRxDroppedBytes"), ("ZHONE-RMON-MIB", "zhoneEtherStatsPkts1519to2047Octets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneRmonEtherStatsGroup = zhoneRmonEtherStatsGroup.setStatus('current')
rmonHistoryControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 2)).setObjects(("ZHONE-RMON-MIB", "historyControlIndex"), ("ZHONE-RMON-MIB", "historyControlDataSource"), ("ZHONE-RMON-MIB", "historyControlBucketsRequested"), ("ZHONE-RMON-MIB", "historyControlBucketsGranted"), ("ZHONE-RMON-MIB", "historyControlInterval"), ("ZHONE-RMON-MIB", "historyControlOwner"), ("ZHONE-RMON-MIB", "historyControlStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonHistoryControlGroup = rmonHistoryControlGroup.setStatus('current')
rmonEthernetHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 3)).setObjects(("ZHONE-RMON-MIB", "etherHistoryIndex"), ("ZHONE-RMON-MIB", "etherHistorySampleIndex"), ("ZHONE-RMON-MIB", "etherHistoryIntervalStart"), ("ZHONE-RMON-MIB", "etherHistoryDropEvents"), ("ZHONE-RMON-MIB", "etherHistoryOctets"), ("ZHONE-RMON-MIB", "etherHistoryPkts"), ("ZHONE-RMON-MIB", "etherHistoryBroadcastPkts"), ("ZHONE-RMON-MIB", "etherHistoryMulticastPkts"), ("ZHONE-RMON-MIB", "etherHistoryCRCAlignErrors"), ("ZHONE-RMON-MIB", "etherHistoryUndersizePkts"), ("ZHONE-RMON-MIB", "etherHistoryOversizePkts"), ("ZHONE-RMON-MIB", "etherHistoryFragments"), ("ZHONE-RMON-MIB", "etherHistoryJabbers"), ("ZHONE-RMON-MIB", "etherHistoryCollisions"), ("ZHONE-RMON-MIB", "etherHistoryUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonEthernetHistoryGroup = rmonEthernetHistoryGroup.setStatus('current')
rmonAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 4)).setObjects(("ZHONE-RMON-MIB", "alarmIndex"), ("ZHONE-RMON-MIB", "alarmInterval"), ("ZHONE-RMON-MIB", "alarmVariable"), ("ZHONE-RMON-MIB", "alarmSampleType"), ("ZHONE-RMON-MIB", "alarmValue"), ("ZHONE-RMON-MIB", "alarmStartupAlarm"), ("ZHONE-RMON-MIB", "alarmRisingThreshold"), ("ZHONE-RMON-MIB", "alarmFallingThreshold"), ("ZHONE-RMON-MIB", "alarmRisingEventIndex"), ("ZHONE-RMON-MIB", "alarmFallingEventIndex"), ("ZHONE-RMON-MIB", "alarmOwner"), ("ZHONE-RMON-MIB", "alarmStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonAlarmGroup = rmonAlarmGroup.setStatus('current')
rmonHostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 5)).setObjects(("ZHONE-RMON-MIB", "hostControlIndex"), ("ZHONE-RMON-MIB", "hostControlDataSource"), ("ZHONE-RMON-MIB", "hostControlTableSize"), ("ZHONE-RMON-MIB", "hostControlLastDeleteTime"), ("ZHONE-RMON-MIB", "hostControlOwner"), ("ZHONE-RMON-MIB", "hostControlStatus"), ("ZHONE-RMON-MIB", "hostAddress"), ("ZHONE-RMON-MIB", "hostCreationOrder"), ("ZHONE-RMON-MIB", "hostIndex"), ("ZHONE-RMON-MIB", "hostInPkts"), ("ZHONE-RMON-MIB", "hostOutPkts"), ("ZHONE-RMON-MIB", "hostInOctets"), ("ZHONE-RMON-MIB", "hostOutOctets"), ("ZHONE-RMON-MIB", "hostOutErrors"), ("ZHONE-RMON-MIB", "hostOutBroadcastPkts"), ("ZHONE-RMON-MIB", "hostOutMulticastPkts"), ("ZHONE-RMON-MIB", "hostTimeAddress"), ("ZHONE-RMON-MIB", "hostTimeCreationOrder"), ("ZHONE-RMON-MIB", "hostTimeIndex"), ("ZHONE-RMON-MIB", "hostTimeInPkts"), ("ZHONE-RMON-MIB", "hostTimeOutPkts"), ("ZHONE-RMON-MIB", "hostTimeInOctets"), ("ZHONE-RMON-MIB", "hostTimeOutOctets"), ("ZHONE-RMON-MIB", "hostTimeOutErrors"), ("ZHONE-RMON-MIB", "hostTimeOutBroadcastPkts"), ("ZHONE-RMON-MIB", "hostTimeOutMulticastPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonHostGroup = rmonHostGroup.setStatus('current')
rmonHostTopNGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 6)).setObjects(("ZHONE-RMON-MIB", "hostTopNControlIndex"), ("ZHONE-RMON-MIB", "hostTopNHostIndex"), ("ZHONE-RMON-MIB", "hostTopNRateBase"), ("ZHONE-RMON-MIB", "hostTopNTimeRemaining"), ("ZHONE-RMON-MIB", "hostTopNDuration"), ("ZHONE-RMON-MIB", "hostTopNRequestedSize"), ("ZHONE-RMON-MIB", "hostTopNGrantedSize"), ("ZHONE-RMON-MIB", "hostTopNStartTime"), ("ZHONE-RMON-MIB", "hostTopNOwner"), ("ZHONE-RMON-MIB", "hostTopNStatus"), ("ZHONE-RMON-MIB", "hostTopNReport"), ("ZHONE-RMON-MIB", "hostTopNIndex"), ("ZHONE-RMON-MIB", "hostTopNAddress"), ("ZHONE-RMON-MIB", "hostTopNRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonHostTopNGroup = rmonHostTopNGroup.setStatus('current')
rmonMatrixGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 7)).setObjects(("ZHONE-RMON-MIB", "matrixControlIndex"), ("ZHONE-RMON-MIB", "matrixControlDataSource"), ("ZHONE-RMON-MIB", "matrixControlTableSize"), ("ZHONE-RMON-MIB", "matrixControlLastDeleteTime"), ("ZHONE-RMON-MIB", "matrixControlOwner"), ("ZHONE-RMON-MIB", "matrixControlStatus"), ("ZHONE-RMON-MIB", "matrixSDSourceAddress"), ("ZHONE-RMON-MIB", "matrixSDDestAddress"), ("ZHONE-RMON-MIB", "matrixSDIndex"), ("ZHONE-RMON-MIB", "matrixSDPkts"), ("ZHONE-RMON-MIB", "matrixSDOctets"), ("ZHONE-RMON-MIB", "matrixSDErrors"), ("ZHONE-RMON-MIB", "matrixDSSourceAddress"), ("ZHONE-RMON-MIB", "matrixDSDestAddress"), ("ZHONE-RMON-MIB", "matrixDSIndex"), ("ZHONE-RMON-MIB", "matrixDSPkts"), ("ZHONE-RMON-MIB", "matrixDSOctets"), ("ZHONE-RMON-MIB", "matrixDSErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonMatrixGroup = rmonMatrixGroup.setStatus('current')
rmonFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 8)).setObjects(("ZHONE-RMON-MIB", "filterIndex"), ("ZHONE-RMON-MIB", "filterChannelIndex"), ("ZHONE-RMON-MIB", "filterPktDataOffset"), ("ZHONE-RMON-MIB", "filterPktData"), ("ZHONE-RMON-MIB", "filterPktDataMask"), ("ZHONE-RMON-MIB", "filterPktDataNotMask"), ("ZHONE-RMON-MIB", "filterPktStatus"), ("ZHONE-RMON-MIB", "filterPktStatusMask"), ("ZHONE-RMON-MIB", "filterPktStatusNotMask"), ("ZHONE-RMON-MIB", "filterOwner"), ("ZHONE-RMON-MIB", "filterStatus"), ("ZHONE-RMON-MIB", "channelIndex"), ("ZHONE-RMON-MIB", "channelIfIndex"), ("ZHONE-RMON-MIB", "channelAcceptType"), ("ZHONE-RMON-MIB", "channelDataControl"), ("ZHONE-RMON-MIB", "channelTurnOnEventIndex"), ("ZHONE-RMON-MIB", "channelTurnOffEventIndex"), ("ZHONE-RMON-MIB", "channelEventIndex"), ("ZHONE-RMON-MIB", "channelEventStatus"), ("ZHONE-RMON-MIB", "channelMatches"), ("ZHONE-RMON-MIB", "channelDescription"), ("ZHONE-RMON-MIB", "channelOwner"), ("ZHONE-RMON-MIB", "channelStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonFilterGroup = rmonFilterGroup.setStatus('current')
rmonPacketCaptureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 9)).setObjects(("ZHONE-RMON-MIB", "bufferControlIndex"), ("ZHONE-RMON-MIB", "bufferControlChannelIndex"), ("ZHONE-RMON-MIB", "bufferControlFullStatus"), ("ZHONE-RMON-MIB", "bufferControlFullAction"), ("ZHONE-RMON-MIB", "bufferControlCaptureSliceSize"), ("ZHONE-RMON-MIB", "bufferControlDownloadSliceSize"), ("ZHONE-RMON-MIB", "bufferControlDownloadOffset"), ("ZHONE-RMON-MIB", "bufferControlMaxOctetsRequested"), ("ZHONE-RMON-MIB", "bufferControlMaxOctetsGranted"), ("ZHONE-RMON-MIB", "bufferControlCapturedPackets"), ("ZHONE-RMON-MIB", "bufferControlTurnOnTime"), ("ZHONE-RMON-MIB", "bufferControlOwner"), ("ZHONE-RMON-MIB", "bufferControlStatus"), ("ZHONE-RMON-MIB", "captureBufferControlIndex"), ("ZHONE-RMON-MIB", "captureBufferIndex"), ("ZHONE-RMON-MIB", "captureBufferPacketID"), ("ZHONE-RMON-MIB", "captureBufferPacketData"), ("ZHONE-RMON-MIB", "captureBufferPacketLength"), ("ZHONE-RMON-MIB", "captureBufferPacketTime"), ("ZHONE-RMON-MIB", "captureBufferPacketStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonPacketCaptureGroup = rmonPacketCaptureGroup.setStatus('current')
rmonEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 10)).setObjects(("ZHONE-RMON-MIB", "eventIndex"), ("ZHONE-RMON-MIB", "eventDescription"), ("ZHONE-RMON-MIB", "eventType"), ("ZHONE-RMON-MIB", "eventCommunity"), ("ZHONE-RMON-MIB", "eventLastTimeSent"), ("ZHONE-RMON-MIB", "eventOwner"), ("ZHONE-RMON-MIB", "eventStatus"), ("ZHONE-RMON-MIB", "logEventIndex"), ("ZHONE-RMON-MIB", "logIndex"), ("ZHONE-RMON-MIB", "logTime"), ("ZHONE-RMON-MIB", "logDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonEventGroup = rmonEventGroup.setStatus('current')
rmonNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 12, 1, 20, 2, 11)).setObjects(("ZHONE-RMON-MIB", "risingAlarm"), ("ZHONE-RMON-MIB", "fallingAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonNotificationGroup = rmonNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ZHONE-RMON-MIB", rmonEventsV2=rmonEventsV2, hostOutMulticastPkts=hostOutMulticastPkts, matrixControlEntry=matrixControlEntry, zhoneEtherStatsPkts256to511Octets=zhoneEtherStatsPkts256to511Octets, matrixDSPkts=matrixDSPkts, zhoneRmonEtherStatsGroup=zhoneRmonEtherStatsGroup, alarmStatus=alarmStatus, zhoneEtherStatsTransmittedPkts2048to4095Octets=zhoneEtherStatsTransmittedPkts2048to4095Octets, channelEventIndex=channelEventIndex, hosts=hosts, eventLastTimeSent=eventLastTimeSent, zhoneEtherStatsTransmittedPkts256to511Octets=zhoneEtherStatsTransmittedPkts256to511Octets, alarmVariable=alarmVariable, filterIndex=filterIndex, hostTimeOutErrors=hostTimeOutErrors, matrixSDErrors=matrixSDErrors, hostOutPkts=hostOutPkts, captureBufferEntry=captureBufferEntry, rmonGroups=rmonGroups, channelIndex=channelIndex, zhoneEtherStatsTxBandwidthOccupancy=zhoneEtherStatsTxBandwidthOccupancy, rmonEvents=rmonEvents, zhoneEtherStatsReceivedPkts512to1023Octets=zhoneEtherStatsReceivedPkts512to1023Octets, filterPktData=filterPktData, captureBufferPacketStatus=captureBufferPacketStatus, hostTopNControlIndex=hostTopNControlIndex, logIndex=logIndex, logTime=logTime, hostControlEntry=hostControlEntry, etherHistoryCRCAlignErrors=etherHistoryCRCAlignErrors, hostTopNRateBase=hostTopNRateBase, rmonAlarmGroup=rmonAlarmGroup, eventOwner=eventOwner, matrixSDOctets=matrixSDOctets, hostTimeAddress=hostTimeAddress, bufferControlDownloadSliceSize=bufferControlDownloadSliceSize, zhoneEtherStatsEntry=zhoneEtherStatsEntry, hostTable=hostTable, zhoneEtherStatsTXNoErrors=zhoneEtherStatsTXNoErrors, captureBufferPacketTime=captureBufferPacketTime, filterPktDataOffset=filterPktDataOffset, zhoneEtherStatsMcastTxBytes=zhoneEtherStatsMcastTxBytes, zhoneEtherStatsTransmittedPkts512to1023Octets=zhoneEtherStatsTransmittedPkts512to1023Octets, etherHistoryPkts=etherHistoryPkts, historyControlStatus=historyControlStatus, alarmEntry=alarmEntry, hostTopNTimeRemaining=hostTopNTimeRemaining, channelMatches=channelMatches, matrixDSSourceAddress=matrixDSSourceAddress, captureBufferPacketLength=captureBufferPacketLength, channelIfIndex=channelIfIndex, zhoneEtherStatsPkts4095to9216Octets=zhoneEtherStatsPkts4095to9216Octets, hostControlOwner=hostControlOwner, filterPktStatus=filterPktStatus, bufferControlChannelIndex=bufferControlChannelIndex, hostEntry=hostEntry, channelTable=channelTable, matrixSDPkts=matrixSDPkts, bufferControlFullStatus=bufferControlFullStatus, matrixDSEntry=matrixDSEntry, alarmRisingEventIndex=alarmRisingEventIndex, historyControlOwner=historyControlOwner, hostTimeOutBroadcastPkts=hostTimeOutBroadcastPkts, bufferControlDownloadOffset=bufferControlDownloadOffset, filterPktDataNotMask=filterPktDataNotMask, hostOutBroadcastPkts=hostOutBroadcastPkts, capture=capture, captureBufferPacketData=captureBufferPacketData, bufferControlStatus=bufferControlStatus, zhoneEtherStatsOctets=zhoneEtherStatsOctets, captureBufferIndex=captureBufferIndex, rmonEventGroup=rmonEventGroup, hostTopNGrantedSize=hostTopNGrantedSize, zhoneEtherStatsTransmittedPkts4095to9216Octets=zhoneEtherStatsTransmittedPkts4095to9216Octets, etherHistoryOversizePkts=etherHistoryOversizePkts, rmonNotificationGroup=rmonNotificationGroup, zhoneEtherStatsReceivedPkts1024to1518Octets=zhoneEtherStatsReceivedPkts1024to1518Octets, zhoneEtherStatsReceivedPkts65to127Octets=zhoneEtherStatsReceivedPkts65to127Octets, hostControlStatus=hostControlStatus, matrixDSDestAddress=matrixDSDestAddress, eventEntry=eventEntry, zhoneEtherStatsTable=zhoneEtherStatsTable, OwnerString=OwnerString, zhoneEtherStatsRxPkts=zhoneEtherStatsRxPkts, zhoneEtherStatsPkts128to255Octets=zhoneEtherStatsPkts128to255Octets, logDescription=logDescription, hostTimeOutOctets=hostTimeOutOctets, rmonCompliance=rmonCompliance, filterChannelIndex=filterChannelIndex, matrixSDSourceAddress=matrixSDSourceAddress, rmonHistoryControlGroup=rmonHistoryControlGroup, zhoneEtherStatsMcastRxDroppedBytes=zhoneEtherStatsMcastRxDroppedBytes, zhoneEtherStatsRXNoErrors=zhoneEtherStatsRXNoErrors, hostInOctets=hostInOctets, eventType=eventType, hostTopNTable=hostTopNTable, history=history, zhoneEtherStatsUndersizePkts=zhoneEtherStatsUndersizePkts, historyControlEntry=historyControlEntry, filterStatus=filterStatus, hostTopNEntry=hostTopNEntry, etherHistoryJabbers=etherHistoryJabbers, zhoneEtherStatsCollisions=zhoneEtherStatsCollisions, alarmTable=alarmTable, etherHistoryIntervalStart=etherHistoryIntervalStart, bufferControlMaxOctetsGranted=bufferControlMaxOctetsGranted, zhoneEtherStatsTransmittedPkts128to255Octets=zhoneEtherStatsTransmittedPkts128to255Octets, etherHistoryMulticastPkts=etherHistoryMulticastPkts, rmonCompliances=rmonCompliances, zhoneEtherStatsReceivedPkts64Octets=zhoneEtherStatsReceivedPkts64Octets, hostControlTableSize=hostControlTableSize, rmonFilterGroup=rmonFilterGroup, hostInPkts=hostInPkts, hostTopNControlTable=hostTopNControlTable, bufferControlMaxOctetsRequested=bufferControlMaxOctetsRequested, rmonHostTopNGroup=rmonHostTopNGroup, rmonHostGroup=rmonHostGroup, eventTable=eventTable, captureBufferControlIndex=captureBufferControlIndex, matrixControlStatus=matrixControlStatus, zhoneEtherStatsPkts65to127Octets=zhoneEtherStatsPkts65to127Octets, alarmFallingThreshold=alarmFallingThreshold, zhoneEtherStatsIPMCTxDroppedPkts=zhoneEtherStatsIPMCTxDroppedPkts, risingAlarm=risingAlarm, zhoneEtherStatsPkts2048to4095Octets=zhoneEtherStatsPkts2048to4095Octets, etherHistoryBroadcastPkts=etherHistoryBroadcastPkts, zhoneEtherStatsBroadcastPkts=zhoneEtherStatsBroadcastPkts, PYSNMP_MODULE_ID=zhoneRmonMibModule, etherHistoryDropEvents=etherHistoryDropEvents, bufferControlCapturedPackets=bufferControlCapturedPackets, hostTimeIndex=hostTimeIndex, historyControlDataSource=historyControlDataSource, hostTopNIndex=hostTopNIndex, zhoneEtherStatsIPMCRoutedPkts=zhoneEtherStatsIPMCRoutedPkts, zhoneEtherStatsRxBandwidthOccupancy=zhoneEtherStatsRxBandwidthOccupancy, alarmValue=alarmValue, hostTimeInPkts=hostTimeInPkts, alarmOwner=alarmOwner, hostIndex=hostIndex, hostControlLastDeleteTime=hostControlLastDeleteTime, zhoneRmonMibModule=zhoneRmonMibModule, zhoneRmon=zhoneRmon, zhoneEtherStatsOversizeRxPkts=zhoneEtherStatsOversizeRxPkts, matrixControlIndex=matrixControlIndex, matrixDSIndex=matrixDSIndex, channelStatus=channelStatus, hostControlDataSource=hostControlDataSource, channelOwner=channelOwner, zhoneEtherStatsPkts1519to2047Octets=zhoneEtherStatsPkts1519to2047Octets, filterPktDataMask=filterPktDataMask, hostControlIndex=hostControlIndex, hostTopNControlEntry=hostTopNControlEntry, hostControlTable=hostControlTable, zhoneEtherStatsJabbers=zhoneEtherStatsJabbers, bufferControlTable=bufferControlTable, alarmIndex=alarmIndex, hostTopNRate=hostTopNRate, hostTimeEntry=hostTimeEntry, zhoneEtherStatsDroppedFrames=zhoneEtherStatsDroppedFrames, zhoneEtherStatsReceivedPkts4095to9216Octets=zhoneEtherStatsReceivedPkts4095to9216Octets, matrixSDIndex=matrixSDIndex, eventDescription=eventDescription, statistics=statistics, zhoneEtherStatsDropEvents=zhoneEtherStatsDropEvents, channelEventStatus=channelEventStatus, alarmFallingEventIndex=alarmFallingEventIndex, hostTopNReport=hostTopNReport, historyControlInterval=historyControlInterval, captureBufferTable=captureBufferTable, historyControlBucketsRequested=historyControlBucketsRequested, zhoneEtherStatsCRCAlignErrors=zhoneEtherStatsCRCAlignErrors, channelTurnOffEventIndex=channelTurnOffEventIndex, rmonPacketCaptureGroup=rmonPacketCaptureGroup, zhoneEtherStatsMulticastPkts=zhoneEtherStatsMulticastPkts, matrixDSErrors=matrixDSErrors, zhoneEtherStatsAverageTxThroughput=zhoneEtherStatsAverageTxThroughput, zhoneEtherStatsTxPkts=zhoneEtherStatsTxPkts, matrixControlDataSource=matrixControlDataSource, hostCreationOrder=hostCreationOrder, etherHistoryEntry=etherHistoryEntry, zhoneEtherStatsReceivedPkts1519to2047Octets=zhoneEtherStatsReceivedPkts1519to2047Octets, zhoneEtherStatsReceivedPkts256to511Octets=zhoneEtherStatsReceivedPkts256to511Octets, etherHistoryOctets=etherHistoryOctets, zhoneEtherStatsReceivedPkts128to255Octets=zhoneEtherStatsReceivedPkts128to255Octets, hostTimeCreationOrder=hostTimeCreationOrder, rmonConformance=rmonConformance, zhoneEtherStatsTransmittedPkts65to127Octets=zhoneEtherStatsTransmittedPkts65to127Octets, hostOutErrors=hostOutErrors, eventStatus=eventStatus, hostTimeTable=hostTimeTable, rmonMatrixGroup=rmonMatrixGroup, hostTopNAddress=hostTopNAddress, hostTopNDuration=hostTopNDuration, channelDescription=channelDescription, zhoneEtherStatsTransmittedPkts64Octets=zhoneEtherStatsTransmittedPkts64Octets, hostTopN=hostTopN, zhoneEtherStatsMcastRxBytes=zhoneEtherStatsMcastRxBytes, etherHistoryFragments=etherHistoryFragments, zhoneRmonFilter=zhoneRmonFilter, zhoneEtherStatsAverageRxThroughput=zhoneEtherStatsAverageRxThroughput, matrix=matrix, filterTable=filterTable, alarmInterval=alarmInterval, alarmSampleType=alarmSampleType, zhoneEtherStatsPkts1024to1518Octets=zhoneEtherStatsPkts1024to1518Octets, fallingAlarm=fallingAlarm, zhoneEtherStatsTransmittedPkts1519to2047Octets=zhoneEtherStatsTransmittedPkts1519to2047Octets, eventCommunity=eventCommunity, etherHistoryIndex=etherHistoryIndex, zhoneEtherStatsReceivedPkts2048to4095Octets=zhoneEtherStatsReceivedPkts2048to4095Octets, matrixControlTable=matrixControlTable, captureBufferPacketID=captureBufferPacketID, hostTimeOutPkts=hostTimeOutPkts, hostTopNStartTime=hostTopNStartTime, etherHistoryCollisions=etherHistoryCollisions, matrixDSOctets=matrixDSOctets, zhoneEtherStatsPkts=zhoneEtherStatsPkts, matrixSDDestAddress=matrixSDDestAddress, etherHistoryUndersizePkts=etherHistoryUndersizePkts, channelTurnOnEventIndex=channelTurnOnEventIndex, rmonEthernetHistoryGroup=rmonEthernetHistoryGroup, hostTimeInOctets=hostTimeInOctets, matrixDSTable=matrixDSTable, bufferControlCaptureSliceSize=bufferControlCaptureSliceSize, zhoneEtherStatsPkts64Octets=zhoneEtherStatsPkts64Octets, matrixControlTableSize=matrixControlTableSize, channelEntry=channelEntry, zhoneEtherStatsTransmittedPkts1024to1518Octets=zhoneEtherStatsTransmittedPkts1024to1518Octets, filterOwner=filterOwner, alarm=alarm, filterPktStatusMask=filterPktStatusMask, zhoneEtherStatsIPMCRxDroppedPkts=zhoneEtherStatsIPMCRxDroppedPkts, hostOutOctets=hostOutOctets, historyControlIndex=historyControlIndex, hostTopNRequestedSize=hostTopNRequestedSize, channelDataControl=channelDataControl, bufferControlTurnOnTime=bufferControlTurnOnTime, logEntry=logEntry, channelAcceptType=channelAcceptType, zhoneEtherStatsOversizeTxPkts=zhoneEtherStatsOversizeTxPkts, matrixControlOwner=matrixControlOwner, matrixSDEntry=matrixSDEntry, zhoneEtherStatsFragments=zhoneEtherStatsFragments, alarmRisingThreshold=alarmRisingThreshold, matrixSDTable=matrixSDTable, hostTopNHostIndex=hostTopNHostIndex, hostTopNOwner=hostTopNOwner, bufferControlIndex=bufferControlIndex, event=event, alarmStartupAlarm=alarmStartupAlarm, hostTimeOutMulticastPkts=hostTimeOutMulticastPkts, zhoneEtherStatsOversizePkts=zhoneEtherStatsOversizePkts, logTable=logTable, matrixControlLastDeleteTime=matrixControlLastDeleteTime)
mibBuilder.exportSymbols("ZHONE-RMON-MIB", bufferControlEntry=bufferControlEntry, hostTopNStatus=hostTopNStatus, EntryStatus=EntryStatus, zhoneEtherStatsPkts512to1023Octets=zhoneEtherStatsPkts512to1023Octets, historyControlBucketsGranted=historyControlBucketsGranted, etherHistoryTable=etherHistoryTable, filterEntry=filterEntry, filterPktStatusNotMask=filterPktStatusNotMask, bufferControlFullAction=bufferControlFullAction, bufferControlOwner=bufferControlOwner, eventIndex=eventIndex, logEventIndex=logEventIndex, etherHistoryUtilization=etherHistoryUtilization, hostAddress=hostAddress, historyControlTable=historyControlTable, etherHistorySampleIndex=etherHistorySampleIndex, zhoneEtherStatsIPMCBridgedPkts=zhoneEtherStatsIPMCBridgedPkts)
