#
# PySNMP MIB module SVCEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SVCEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
svcExt, = mibBuilder.importSymbols("APENT-MIB", "svcExt")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, Counter64, IpAddress, Gauge32, ObjectIdentity, Unsigned32, TimeTicks, NotificationType, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "Counter64", "IpAddress", "Gauge32", "ObjectIdentity", "Unsigned32", "TimeTicks", "NotificationType", "iso", "MibIdentifier")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
apSvcExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 15, 1))
if mibBuilder.loadTexts: apSvcExtMib.setLastUpdated('9710092000Z')
if mibBuilder.loadTexts: apSvcExtMib.setOrganization('ArrowPoint Communications Inc.')
apSvcTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2), )
if mibBuilder.loadTexts: apSvcTable.setStatus('current')
apSvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1), ).setIndexNames((0, "SVCEXT-MIB", "apSvcName"))
if mibBuilder.loadTexts: apSvcEntry.setStatus('current')
apSvcName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcName.setStatus('current')
apSvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcIndex.setStatus('current')
apSvcIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcIPAddress.setStatus('current')
apSvcIPProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 6, 17))).clone(namedValues=NamedValues(("any", 0), ("tcp", 6), ("udp", 17))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcIPProtocol.setStatus('current')
apSvcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcPort.setStatus('current')
apSvcKALType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("icmp", 1), ("http", 2), ("ftp", 3), ("tcp", 4), ("named", 5), ("script", 6))).clone('icmp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALType.setStatus('current')
apSvcKALFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALFrequency.setStatus('current')
apSvcKALMaxFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALMaxFailure.setStatus('current')
apSvcKALRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALRetryPeriod.setStatus('current')
apSvcKALUri = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALUri.setStatus('current')
apSvcKALMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("head", 0), ("get", 1), ("post", 2))).clone('head')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALMethod.setStatus('current')
apSvcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcEnable.setStatus('current')
apSvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("local", 1), ("redirect", 2), ("proxyCache", 4), ("transparentCache", 8), ("automaticRedirect", 16), ("replicationStore", 32), ("replicationCache", 64), ("smashCache", 128), ("redundancyUp", 256), ("nciInfoOnly", 512), ("nciDirectReturn", 1024), ("replicationStoreRedirect", 2048), ("replicationCacheRedirect", 4096))).clone('local')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcType.setStatus('current')
apSvcQOSMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 14), Integer32().clone(14400)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcQOSMinRate.setStatus('current')
apSvcQOSMinBW = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 15), Integer32().clone(100000000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcQOSMinBW.setStatus('current')
apSvcWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcWeight.setStatus('current')
apSvcState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("suspended", 1), ("down", 2), ("alive", 4), ("dying", 5))).clone('suspended')).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcState.setStatus('current')
apSvcShortLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcShortLoad.setStatus('current')
apSvcMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcMaxConnections.setStatus('current')
apSvcConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcConnections.setStatus('current')
apSvcTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcTransitions.setStatus('current')
apSvcMaxContent = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcMaxContent.setStatus('current')
apSvcMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcMaxUsage.setStatus('current')
apSvcMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcMaxAge.setStatus('current')
apSvcAccessRecordName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcAccessRecordName.setStatus('current')
apSvcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcStatus.setStatus('current')
apSvcCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcCookie.setStatus('current')
apSvcKALPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("non-persistent", 0), ("persistent", 1))).clone('persistent')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALPersistence.setStatus('current')
apSvcKALName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALName.setStatus('current')
apSvcLongLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcLongLoad.setStatus('current')
apSvcKALPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALPort.setStatus('current')
apSvcPublishName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcPublishName.setStatus('current')
apSvcPublishState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("publisher", 1), ("subscriber", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcPublishState.setStatus('current')
apSvcPublishInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcPublishInterval.setStatus('current')
apSvcAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ftp-access", 0), ("http-access", 1), ("no-access", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcAccessType.setStatus('current')
apSvcKALHash = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALHash.setStatus('current')
apSvcKALFTPRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALFTPRecord.setStatus('current')
apSvcPublishFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcPublishFile.setStatus('current')
apSvcRedirectDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcRedirectDomain.setStatus('current')
apSvcAvgLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSvcAvgLoad.setStatus('current')
apSvcIPAddressRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcIPAddressRange.setStatus('current')
apSvcPortRange = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcPortRange.setStatus('current')
apSvcKALScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALScriptName.setStatus('current')
apSvcKALScriptArgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALScriptArgs.setStatus('current')
apSvcKALScriptLog = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 45), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcKALScriptLog.setStatus('current')
apSvcCacheByPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 15, 2, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSvcCacheByPass.setStatus('current')
apSvcTransitionTrap = NotificationType((1, 3, 6, 1, 4, 1, 2467, 1, 15) + (0,1)).setObjects(("SVCEXT-MIB", "apSvcName"), ("SVCEXT-MIB", "apSvcState"))
apSvcLoadThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254)).clone(254)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadThreshold.setStatus('current')
apSvcLoadStepSize = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadStepSize.setStatus('current')
apSvcLoadStepStatic = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadStepStatic.setStatus('current')
apSvcLoadDecayInterval = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadDecayInterval.setStatus('current')
apSvcLoadEnable = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadEnable.setStatus('current')
apSvcLoadSvcStatRptTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadSvcStatRptTimeout.setStatus('current')
apSvcLoadInfoTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 15, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSvcLoadInfoTimeout.setStatus('current')
mibBuilder.exportSymbols("SVCEXT-MIB", apSvcPublishFile=apSvcPublishFile, apSvcLoadStepStatic=apSvcLoadStepStatic, PYSNMP_MODULE_ID=apSvcExtMib, apSvcTable=apSvcTable, apSvcLoadDecayInterval=apSvcLoadDecayInterval, apSvcKALType=apSvcKALType, apSvcAccessType=apSvcAccessType, apSvcAvgLoad=apSvcAvgLoad, apSvcKALMethod=apSvcKALMethod, apSvcLoadSvcStatRptTimeout=apSvcLoadSvcStatRptTimeout, apSvcIPAddress=apSvcIPAddress, apSvcCacheByPass=apSvcCacheByPass, apSvcIPProtocol=apSvcIPProtocol, apSvcKALFrequency=apSvcKALFrequency, apSvcEnable=apSvcEnable, apSvcShortLoad=apSvcShortLoad, apSvcStatus=apSvcStatus, apSvcIPAddressRange=apSvcIPAddressRange, apSvcPortRange=apSvcPortRange, apSvcType=apSvcType, apSvcMaxConnections=apSvcMaxConnections, apSvcExtMib=apSvcExtMib, apSvcName=apSvcName, apSvcKALHash=apSvcKALHash, apSvcPublishInterval=apSvcPublishInterval, apSvcPublishState=apSvcPublishState, apSvcKALFTPRecord=apSvcKALFTPRecord, apSvcKALPort=apSvcKALPort, apSvcKALScriptArgs=apSvcKALScriptArgs, apSvcLoadEnable=apSvcLoadEnable, apSvcKALName=apSvcKALName, apSvcMaxContent=apSvcMaxContent, apSvcKALScriptName=apSvcKALScriptName, apSvcLoadInfoTimeout=apSvcLoadInfoTimeout, apSvcKALMaxFailure=apSvcKALMaxFailure, apSvcTransitions=apSvcTransitions, apSvcKALUri=apSvcKALUri, apSvcKALRetryPeriod=apSvcKALRetryPeriod, apSvcMaxAge=apSvcMaxAge, apSvcAccessRecordName=apSvcAccessRecordName, apSvcKALPersistence=apSvcKALPersistence, apSvcPublishName=apSvcPublishName, apSvcLoadThreshold=apSvcLoadThreshold, apSvcEntry=apSvcEntry, apSvcMaxUsage=apSvcMaxUsage, apSvcQOSMinBW=apSvcQOSMinBW, apSvcConnections=apSvcConnections, apSvcRedirectDomain=apSvcRedirectDomain, apSvcTransitionTrap=apSvcTransitionTrap, apSvcState=apSvcState, apSvcLoadStepSize=apSvcLoadStepSize, apSvcLongLoad=apSvcLongLoad, apSvcCookie=apSvcCookie, apSvcKALScriptLog=apSvcKALScriptLog, apSvcWeight=apSvcWeight, apSvcQOSMinRate=apSvcQOSMinRate, apSvcPort=apSvcPort, apSvcIndex=apSvcIndex)
