#
# PySNMP MIB module HPN-ICF-USERLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-USERLOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hpnicfRhw, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfRhw")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Counter32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, ObjectIdentity, Unsigned32, IpAddress, TimeTicks, MibIdentifier, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "ObjectIdentity", "Unsigned32", "IpAddress", "TimeTicks", "MibIdentifier", "Counter64", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfUserLogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18))
if mibBuilder.loadTexts: hpnicfUserLogMIB.setLastUpdated('200304100000Z')
if mibBuilder.loadTexts: hpnicfUserLogMIB.setOrganization('')
hpnicfUserlogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1))
hpnicfUserlogNatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1))
hpnicfUserlogNatVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatVersion.setStatus('current')
hpnicfUserlogNatSyslog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatSyslog.setStatus('current')
hpnicfUserlogNatSourceIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatSourceIP.setStatus('current')
hpnicfUserlogNatFlowBegin = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatFlowBegin.setStatus('current')
hpnicfUserlogNatActiveTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatActiveTime.setStatus('current')
hpnicfUserlogNatSlotCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6), )
if mibBuilder.loadTexts: hpnicfUserlogNatSlotCfgInfoTable.setStatus('current')
hpnicfUserlogNatSlotCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatCfgSlotNumber"))
if mibBuilder.loadTexts: hpnicfUserlogNatSlotCfgInfoEntry.setStatus('current')
hpnicfUserlogNatCfgSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatCfgSlotNumber.setStatus('current')
hpnicfUserlogNatEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatEnable.setStatus('current')
hpnicfUserlogNatAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatAclNumber.setStatus('current')
hpnicfUserlogNatHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatHostAddress.setStatus('current')
hpnicfUserlogNatUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatUdpPort.setStatus('current')
hpnicfUserlogNatSlotRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7), )
if mibBuilder.loadTexts: hpnicfUserlogNatSlotRunInfoTable.setStatus('current')
hpnicfUserlogNatSlotRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1), ).setIndexNames((0, "HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatRunSlotNumber"))
if mibBuilder.loadTexts: hpnicfUserlogNatSlotRunInfoEntry.setStatus('current')
hpnicfUserlogNatRunSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatRunSlotNumber.setStatus('current')
hpnicfUserlogNatTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatTotalEntries.setStatus('current')
hpnicfUserlogNatTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatTotalPackets.setStatus('current')
hpnicfUserlogNatFailedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatFailedEntries.setStatus('current')
hpnicfUserlogNatFailedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogNatFailedPackets.setStatus('current')
hpnicfUserlogNatClearRunStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 1, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogNatClearRunStat.setStatus('current')
hpnicfUserlogFlowObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2))
hpnicfUserlogFlowVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowVersion.setStatus('current')
hpnicfUserlogFlowSyslog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowSyslog.setStatus('current')
hpnicfUserlogFlowSourceIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowSourceIP.setStatus('current')
hpnicfUserlogFlowFlowBegin = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowFlowBegin.setStatus('current')
hpnicfUserlogFlowActiveTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowActiveTime.setStatus('current')
hpnicfUserlogFlowSlotCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6), )
if mibBuilder.loadTexts: hpnicfUserlogFlowSlotCfgInfoTable.setStatus('current')
hpnicfUserlogFlowSlotCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowCfgSlotNumber"))
if mibBuilder.loadTexts: hpnicfUserlogFlowSlotCfgInfoEntry.setStatus('current')
hpnicfUserlogFlowCfgSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowCfgSlotNumber.setStatus('current')
hpnicfUserlogFlowEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowEnable.setStatus('current')
hpnicfUserlogFlowAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowAclNumber.setStatus('current')
hpnicfUserlogFlowHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowHostAddress.setStatus('current')
hpnicfUserlogFlowUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowUdpPort.setStatus('current')
hpnicfUserlogFlowSlotRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7), )
if mibBuilder.loadTexts: hpnicfUserlogFlowSlotRunInfoTable.setStatus('current')
hpnicfUserlogFlowSlotRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1), ).setIndexNames((0, "HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowRunSlotNumber"))
if mibBuilder.loadTexts: hpnicfUserlogFlowSlotRunInfoEntry.setStatus('current')
hpnicfUserlogFlowRunSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowRunSlotNumber.setStatus('current')
hpnicfUserlogFlowTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowTotalEntries.setStatus('current')
hpnicfUserlogFlowTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowTotalPackets.setStatus('current')
hpnicfUserlogFlowFailedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowFailedEntries.setStatus('current')
hpnicfUserlogFlowFailedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogFlowFailedPackets.setStatus('current')
hpnicfUserlogFlowClearRunStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 2, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogFlowClearRunStat.setStatus('current')
hpnicfUserlogAccessObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3))
hpnicfUserlogAccessVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessVersion.setStatus('current')
hpnicfUserlogAccessSyslog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogAccessSyslog.setStatus('current')
hpnicfUserlogAccessSourceIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogAccessSourceIP.setStatus('current')
hpnicfUserlogAccessSlotCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 4), )
if mibBuilder.loadTexts: hpnicfUserlogAccessSlotCfgInfoTable.setStatus('current')
hpnicfUserlogAccessSlotCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 4, 1), ).setIndexNames((0, "HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessCfgSlotNumber"))
if mibBuilder.loadTexts: hpnicfUserlogAccessSlotCfgInfoEntry.setStatus('current')
hpnicfUserlogAccessCfgSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessCfgSlotNumber.setStatus('current')
hpnicfUserlogAccessEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogAccessEnable.setStatus('current')
hpnicfUserlogAccessHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogAccessHostAddress.setStatus('current')
hpnicfUserlogAccessUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogAccessUdpPort.setStatus('current')
hpnicfUserlogAccessSlotRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5), )
if mibBuilder.loadTexts: hpnicfUserlogAccessSlotRunInfoTable.setStatus('current')
hpnicfUserlogAccessSlotRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1), ).setIndexNames((0, "HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessRunSlotNumber"))
if mibBuilder.loadTexts: hpnicfUserlogAccessSlotRunInfoEntry.setStatus('current')
hpnicfUserlogAccessRunSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessRunSlotNumber.setStatus('current')
hpnicfUserlogAccessTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessTotalEntries.setStatus('current')
hpnicfUserlogAccessTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessTotalPackets.setStatus('current')
hpnicfUserlogAccessFailedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessFailedEntries.setStatus('current')
hpnicfUserlogAccessFailedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUserlogAccessFailedPackets.setStatus('current')
hpnicfUserlogAccessClearRunStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 1, 3, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfUserlogAccessClearRunStat.setStatus('current')
hpnicfUserlogNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 2))
hpnicfUserlogConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3))
hpnicfUserlogCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3, 1))
hpnicfUserlogCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3, 1, 1)).setObjects(("HPN-ICF-USERLOG-MIB", "hpnicfUserlogMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfUserlogCompliance = hpnicfUserlogCompliance.setStatus('current')
hpnicfUserlogGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3, 2))
hpnicfUserlogMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3, 2, 1)).setObjects(("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatEnable"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatHostAddress"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatUdpPort"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowEnable"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowHostAddress"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowUdpPort"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessEnable"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessHostAddress"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessUdpPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfUserlogMandatoryGroup = hpnicfUserlogMandatoryGroup.setStatus('current')
hpnicfUserlogConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3, 2, 2)).setObjects(("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatVersion"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatSyslog"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatSourceIP"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatFlowBegin"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatActiveTime"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatCfgSlotNumber"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatEnable"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatAclNumber"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatHostAddress"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatUdpPort"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowVersion"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowSyslog"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowSourceIP"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowFlowBegin"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowActiveTime"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowCfgSlotNumber"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowEnable"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowAclNumber"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowHostAddress"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowUdpPort"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessVersion"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessSyslog"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessSourceIP"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessCfgSlotNumber"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessEnable"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessHostAddress"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessUdpPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfUserlogConfigGroup = hpnicfUserlogConfigGroup.setStatus('current')
hpnicfUserlogInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 18, 3, 2, 3)).setObjects(("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatTotalEntries"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatTotalPackets"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatFailedEntries"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogNatFailedPackets"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowTotalEntries"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowTotalPackets"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowFailedEntries"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogFlowFailedPackets"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessTotalEntries"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessTotalPackets"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessFailedEntries"), ("HPN-ICF-USERLOG-MIB", "hpnicfUserlogAccessFailedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfUserlogInfoGroup = hpnicfUserlogInfoGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-USERLOG-MIB", hpnicfUserlogMandatoryGroup=hpnicfUserlogMandatoryGroup, hpnicfUserlogFlowAclNumber=hpnicfUserlogFlowAclNumber, hpnicfUserlogFlowTotalPackets=hpnicfUserlogFlowTotalPackets, hpnicfUserlogAccessClearRunStat=hpnicfUserlogAccessClearRunStat, hpnicfUserLogMIB=hpnicfUserLogMIB, hpnicfUserlogNatVersion=hpnicfUserlogNatVersion, hpnicfUserlogAccessSlotCfgInfoTable=hpnicfUserlogAccessSlotCfgInfoTable, hpnicfUserlogNatSlotRunInfoEntry=hpnicfUserlogNatSlotRunInfoEntry, hpnicfUserlogAccessCfgSlotNumber=hpnicfUserlogAccessCfgSlotNumber, hpnicfUserlogAccessTotalEntries=hpnicfUserlogAccessTotalEntries, hpnicfUserlogNatTotalPackets=hpnicfUserlogNatTotalPackets, hpnicfUserlogNatFailedEntries=hpnicfUserlogNatFailedEntries, hpnicfUserlogFlowSlotRunInfoTable=hpnicfUserlogFlowSlotRunInfoTable, hpnicfUserlogConfigGroup=hpnicfUserlogConfigGroup, hpnicfUserlogAccessFailedPackets=hpnicfUserlogAccessFailedPackets, hpnicfUserlogFlowFlowBegin=hpnicfUserlogFlowFlowBegin, hpnicfUserlogFlowClearRunStat=hpnicfUserlogFlowClearRunStat, hpnicfUserlogAccessSlotCfgInfoEntry=hpnicfUserlogAccessSlotCfgInfoEntry, hpnicfUserlogAccessSourceIP=hpnicfUserlogAccessSourceIP, hpnicfUserlogAccessUdpPort=hpnicfUserlogAccessUdpPort, hpnicfUserlogGroups=hpnicfUserlogGroups, hpnicfUserlogFlowFailedEntries=hpnicfUserlogFlowFailedEntries, hpnicfUserlogNatSyslog=hpnicfUserlogNatSyslog, hpnicfUserlogAccessVersion=hpnicfUserlogAccessVersion, hpnicfUserlogFlowSourceIP=hpnicfUserlogFlowSourceIP, hpnicfUserlogNatRunSlotNumber=hpnicfUserlogNatRunSlotNumber, hpnicfUserlogNatHostAddress=hpnicfUserlogNatHostAddress, hpnicfUserlogFlowSlotCfgInfoEntry=hpnicfUserlogFlowSlotCfgInfoEntry, hpnicfUserlogFlowTotalEntries=hpnicfUserlogFlowTotalEntries, hpnicfUserlogNatSourceIP=hpnicfUserlogNatSourceIP, hpnicfUserlogFlowHostAddress=hpnicfUserlogFlowHostAddress, hpnicfUserlogNatAclNumber=hpnicfUserlogNatAclNumber, hpnicfUserlogFlowSlotRunInfoEntry=hpnicfUserlogFlowSlotRunInfoEntry, hpnicfUserlogNatSlotCfgInfoTable=hpnicfUserlogNatSlotCfgInfoTable, hpnicfUserlogAccessRunSlotNumber=hpnicfUserlogAccessRunSlotNumber, hpnicfUserlogObjects=hpnicfUserlogObjects, hpnicfUserlogFlowSyslog=hpnicfUserlogFlowSyslog, hpnicfUserlogNatFailedPackets=hpnicfUserlogNatFailedPackets, hpnicfUserlogInfoGroup=hpnicfUserlogInfoGroup, hpnicfUserlogConformance=hpnicfUserlogConformance, hpnicfUserlogNatSlotCfgInfoEntry=hpnicfUserlogNatSlotCfgInfoEntry, hpnicfUserlogCompliance=hpnicfUserlogCompliance, hpnicfUserlogAccessTotalPackets=hpnicfUserlogAccessTotalPackets, hpnicfUserlogNotifications=hpnicfUserlogNotifications, hpnicfUserlogFlowSlotCfgInfoTable=hpnicfUserlogFlowSlotCfgInfoTable, hpnicfUserlogFlowObjects=hpnicfUserlogFlowObjects, hpnicfUserlogAccessSyslog=hpnicfUserlogAccessSyslog, hpnicfUserlogAccessEnable=hpnicfUserlogAccessEnable, hpnicfUserlogFlowFailedPackets=hpnicfUserlogFlowFailedPackets, hpnicfUserlogNatEnable=hpnicfUserlogNatEnable, hpnicfUserlogNatActiveTime=hpnicfUserlogNatActiveTime, hpnicfUserlogFlowVersion=hpnicfUserlogFlowVersion, hpnicfUserlogFlowCfgSlotNumber=hpnicfUserlogFlowCfgSlotNumber, hpnicfUserlogAccessSlotRunInfoTable=hpnicfUserlogAccessSlotRunInfoTable, hpnicfUserlogNatClearRunStat=hpnicfUserlogNatClearRunStat, PYSNMP_MODULE_ID=hpnicfUserLogMIB, hpnicfUserlogNatUdpPort=hpnicfUserlogNatUdpPort, hpnicfUserlogCompliances=hpnicfUserlogCompliances, hpnicfUserlogFlowEnable=hpnicfUserlogFlowEnable, hpnicfUserlogFlowActiveTime=hpnicfUserlogFlowActiveTime, hpnicfUserlogNatTotalEntries=hpnicfUserlogNatTotalEntries, hpnicfUserlogNatCfgSlotNumber=hpnicfUserlogNatCfgSlotNumber, hpnicfUserlogAccessObjects=hpnicfUserlogAccessObjects, hpnicfUserlogAccessHostAddress=hpnicfUserlogAccessHostAddress, hpnicfUserlogNatSlotRunInfoTable=hpnicfUserlogNatSlotRunInfoTable, hpnicfUserlogAccessSlotRunInfoEntry=hpnicfUserlogAccessSlotRunInfoEntry, hpnicfUserlogFlowUdpPort=hpnicfUserlogFlowUdpPort, hpnicfUserlogFlowRunSlotNumber=hpnicfUserlogFlowRunSlotNumber, hpnicfUserlogNatObjects=hpnicfUserlogNatObjects, hpnicfUserlogAccessFailedEntries=hpnicfUserlogAccessFailedEntries, hpnicfUserlogNatFlowBegin=hpnicfUserlogNatFlowBegin)
