#
# PySNMP MIB module HP-ICF-USER-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-USER-PROFILE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
HpicfUsrProfilePortSpeed, = mibBuilder.importSymbols("CONFIG-MIB", "HpicfUsrProfilePortSpeed")
hpicfCommonSecurity, = mibBuilder.importSymbols("HP-ICF-OID", "hpicfCommonSecurity")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter32, MibIdentifier, iso, Bits, ModuleIdentity, Counter64, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "MibIdentifier", "iso", "Bits", "ModuleIdentity", "Counter64", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "NotificationType", "IpAddress")
MacAddress, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
hpicfUsrProfileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1))
hpicfUsrProfileMIB.setRevisions(('2013-06-12 22:48', '2008-03-17 15:39', '2007-07-16 21:10', '2007-06-19 21:40', '2007-03-14 23:35', '2007-02-06 20:28', '2005-10-12 00:00', '2005-10-05 00:00',))
if mibBuilder.loadTexts: hpicfUsrProfileMIB.setLastUpdated('201306121539Z')
if mibBuilder.loadTexts: hpicfUsrProfileMIB.setOrganization('HP Networking')
hpicfUsrProfileCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 0))
hpicfUsrProfileConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1))
hpicfUsrProfileStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2))
hpicfUsrProfileConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3))
hpicfUsrProfileCapabilityByPortMap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 0, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileCapabilityByPortMap.setStatus('current')
hpicfUsrProfileCapabilityByUserMap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 0, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileCapabilityByUserMap.setStatus('current')
hpicfUsrProfileConfigFilterListTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 1), )
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterListTable.setStatus('current')
hpicfUsrProfileConfigFilterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 1, 1), ).setIndexNames((0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileFilterListIndex"))
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterListEntry.setStatus('current')
hpicfUsrProfileFilterListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)))
if mibBuilder.loadTexts: hpicfUsrProfileFilterListIndex.setStatus('current')
hpicfUsrProfileConfigFilterListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterListRowStatus.setStatus('current')
hpicfUsrProfileConfigNasRulesIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigNasRulesIpv6.setStatus('current')
hpicfUsrProfileConfigFilterRuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterRuleTable.setStatus('current')
hpicfUsrProfileConfigFilterRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 2, 1), ).setIndexNames((0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileFilterRuleListIndex"), (0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileFilterRuleIndex"))
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterRuleEntry.setStatus('current')
hpicfUsrProfileFilterRuleListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)))
if mibBuilder.loadTexts: hpicfUsrProfileFilterRuleListIndex.setStatus('current')
hpicfUsrProfileFilterRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)))
if mibBuilder.loadTexts: hpicfUsrProfileFilterRuleIndex.setStatus('current')
hpicfUsrProfileConfigFilterRule = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterRule.setStatus('current')
hpicfUsrProfileConfigFilterRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterRuleRowStatus.setStatus('current')
hpicfUsrProfileConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3), )
if mibBuilder.loadTexts: hpicfUsrProfileConfigTable.setStatus('current')
hpicfUsrProfileConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1), ).setIndexNames((0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigIndex"))
if mibBuilder.loadTexts: hpicfUsrProfileConfigEntry.setStatus('current')
hpicfUsrProfileConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384)))
if mibBuilder.loadTexts: hpicfUsrProfileConfigIndex.setStatus('current')
hpicfUsrProfileConfigPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 2), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigPvid.setStatus('current')
hpicfUsrProfileConfigPvidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigPvidEnable.setStatus('current')
hpicfUsrProfileConfigTaggedEgressVlanMap1k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigTaggedEgressVlanMap1k.setStatus('current')
hpicfUsrProfileConfigTaggedEgressVlanMap2k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigTaggedEgressVlanMap2k.setStatus('current')
hpicfUsrProfileConfigTaggedEgressVlanMap3k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigTaggedEgressVlanMap3k.setStatus('current')
hpicfUsrProfileConfigTaggedEgressVlanMap4k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigTaggedEgressVlanMap4k.setStatus('current')
hpicfUsrProfileConfigTaggedEgressVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigTaggedEgressVlanEnable.setStatus('current')
hpicfUsrProfileConfigIngressVlanFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigIngressVlanFilterEnable.setStatus('current')
hpicfUsrProfileConfigPriorityRegenTable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigPriorityRegenTable.setStatus('current')
hpicfUsrProfileConfigPriorityRegenTableEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigPriorityRegenTableEnable.setStatus('current')
hpicfUsrProfileConfigMaxIngressBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigMaxIngressBandwidth.setStatus('current')
hpicfUsrProfileConfigMaxIngressBandwidthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigMaxIngressBandwidthEnable.setStatus('current')
hpicfUsrProfileConfigMaxEgressBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigMaxEgressBandwidth.setStatus('current')
hpicfUsrProfileConfigMaxEgressBandwidthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 15), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigMaxEgressBandwidthEnable.setStatus('current')
hpicfUsrProfileConfigFilterListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterListIndex.setStatus('current')
hpicfUsrProfileConfigFilterListEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigFilterListEnable.setStatus('current')
hpicfUsrProfileConfigEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 3, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigEntryRowStatus.setStatus('current')
hpicfUsrProfileConfigBindTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 4), )
if mibBuilder.loadTexts: hpicfUsrProfileConfigBindTable.setStatus('current')
hpicfUsrProfileConfigBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 4, 1), ).setIndexNames((0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileUserPortNumber"), (0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileUserMacAddr"))
if mibBuilder.loadTexts: hpicfUsrProfileConfigBindEntry.setStatus('current')
hpicfUsrProfileUserPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfUsrProfileUserPortNumber.setStatus('current')
hpicfUsrProfileUserMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 4, 1, 2), MacAddress())
if mibBuilder.loadTexts: hpicfUsrProfileUserMacAddr.setStatus('current')
hpicfUsrProfileSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16384))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileSelector.setStatus('current')
hpicfUsrProfileConfigBindEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfUsrProfileConfigBindEntryRowStatus.setStatus('current')
hpicfUsrProfileConfigConflictResolveQoS = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("non-strict", 0), ("strict", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUsrProfileConfigConflictResolveQoS.setStatus('current')
hpicfUsrProfileConfigConflictResolveMaxIngressBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("non-strict", 0), ("strict", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUsrProfileConfigConflictResolveMaxIngressBandwidth.setStatus('current')
hpicfUsrProfileConfigConflictResolveMaxEgressBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("non-strict", 0), ("strict", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfUsrProfileConfigConflictResolveMaxEgressBandwidth.setStatus('current')
hpicfUsrProfileLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileLastUpdate.setStatus('current')
hpicfUsrProfileStatsFilterTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 2), )
if mibBuilder.loadTexts: hpicfUsrProfileStatsFilterTable.setStatus('current')
hpicfUsrProfileStatsFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 2, 1), ).setIndexNames((0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileFilterListIndex"), (0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileFilterRuleIndex"))
if mibBuilder.loadTexts: hpicfUsrProfileStatsFilterEntry.setStatus('current')
hpicfUsrProfileStatsFilterRule = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsFilterRule.setStatus('current')
hpicfUsrProfileStatsFilterRuleHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsFilterRuleHitCount.setStatus('current')
hpicfUsrProfileStatsFilterRuleHitCountEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsFilterRuleHitCountEnabled.setStatus('current')
hpicfUsrProfileStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3), )
if mibBuilder.loadTexts: hpicfUsrProfileStatsTable.setStatus('current')
hpicfUsrProfileStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1), ).setIndexNames((0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileUserPortNumber"), (0, "HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileUserMacAddr"))
if mibBuilder.loadTexts: hpicfUsrProfileStatsEntry.setStatus('current')
hpicfUsrProfileStatsPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsPvid.setStatus('current')
hpicfUsrProfileStatsTaggedEgressVlanMap1k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsTaggedEgressVlanMap1k.setStatus('current')
hpicfUsrProfileStatsTaggedEgressVlanMap2k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsTaggedEgressVlanMap2k.setStatus('current')
hpicfUsrProfileStatsTaggedEgressVlanMap3k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsTaggedEgressVlanMap3k.setStatus('current')
hpicfUsrProfileStatsTaggedEgressVlanMap4k = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsTaggedEgressVlanMap4k.setStatus('current')
hpicfUsrProfileStatsIngressVlanFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsIngressVlanFilterEnable.setStatus('current')
hpicfUsrProfileStatsPriorityRegenTable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsPriorityRegenTable.setStatus('current')
hpicfUsrProfileStatsMaxIngressBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsMaxIngressBandwidth.setStatus('current')
hpicfUsrProfileStatsMaxEgressBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsMaxEgressBandwidth.setStatus('current')
hpicfUsrProfileStatsFilterListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsFilterListIndex.setStatus('current')
hpicfUsrProfileStatsAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("snmp", 1), ("dot8021x", 2), ("webauth", 3), ("macauth", 4), ("webmacauth", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsAccessMode.setStatus('current')
hpicfUsrProfilePortSpeedOverRidden = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfilePortSpeedOverRidden.setStatus('current')
hpicfUsrProfileStatsPortSpeedVSA = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 2, 3, 1, 13), HpicfUsrProfilePortSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfUsrProfileStatsPortSpeedVSA.setStatus('current')
hpicfUsrProfileGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 1))
hpicfUsrProfileCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 2))
hpicfUsrProfileCapabilityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 1, 1)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileCapabilityByPortMap"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileCapabilityByUserMap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileCapabilityGroup = hpicfUsrProfileCapabilityGroup.setStatus('current')
hpicfUsrProfileConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 1, 2)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigFilterListRowStatus"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigFilterRule"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigFilterRuleRowStatus"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigPvid"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigPvidEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigTaggedEgressVlanMap1k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigTaggedEgressVlanMap2k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigTaggedEgressVlanMap3k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigTaggedEgressVlanMap4k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigTaggedEgressVlanEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigIngressVlanFilterEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigPriorityRegenTable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigPriorityRegenTableEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigMaxIngressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigMaxIngressBandwidthEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigMaxEgressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigMaxEgressBandwidthEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigFilterListIndex"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigFilterListEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigEntryRowStatus"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigConflictResolveQoS"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigConflictResolveMaxIngressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigConflictResolveMaxEgressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigNasRulesIpv6"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileConfigGroup = hpicfUsrProfileConfigGroup.setStatus('current')
hpicfUsrProfileStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 1, 3)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileLastUpdate"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterRule"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterRuleHitCount"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterRuleHitCountEnabled"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsPvid"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap1k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap2k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap3k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap4k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsIngressVlanFilterEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsPriorityRegenTable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsMaxIngressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsMaxEgressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterListIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileStatsGroup = hpicfUsrProfileStatsGroup.setStatus('deprecated')
hpicfUsrProfileConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 1, 4)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileSelector"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigBindEntryRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileConfigGroup2 = hpicfUsrProfileConfigGroup2.setStatus('current')
hpicfUsrProfileStatsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 1, 5)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileLastUpdate"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterRule"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterRuleHitCount"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterRuleHitCountEnabled"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsPvid"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap1k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap2k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap3k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsTaggedEgressVlanMap4k"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsIngressVlanFilterEnable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsPriorityRegenTable"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsMaxIngressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsMaxEgressBandwidth"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsFilterListIndex"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsAccessMode"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsPortSpeedVSA"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfilePortSpeedOverRidden"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileStatsGroup1 = hpicfUsrProfileStatsGroup1.setStatus('current')
hpicfUsrProfileCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 2, 1)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileCapabilityGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileCompliance = hpicfUsrProfileCompliance.setStatus('deprecated')
hpicfUsrProfileCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 2, 2)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileCapabilityGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileCompliance2 = hpicfUsrProfileCompliance2.setStatus('deprecated')
hpicfUsrProfileCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 2, 3)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileCapabilityGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigGroup"), ("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileStatsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileCompliance3 = hpicfUsrProfileCompliance3.setStatus('current')
hpicfUsrProfileCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12, 1, 3, 2, 4)).setObjects(("HP-ICF-USER-PROFILE-MIB", "hpicfUsrProfileConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfUsrProfileCompliance4 = hpicfUsrProfileCompliance4.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-USER-PROFILE-MIB", hpicfUsrProfileStatsPvid=hpicfUsrProfileStatsPvid, hpicfUsrProfileStatsFilterRule=hpicfUsrProfileStatsFilterRule, hpicfUsrProfileConfig=hpicfUsrProfileConfig, hpicfUsrProfileConfigConflictResolveMaxEgressBandwidth=hpicfUsrProfileConfigConflictResolveMaxEgressBandwidth, hpicfUsrProfileSelector=hpicfUsrProfileSelector, hpicfUsrProfileConfigGroup2=hpicfUsrProfileConfigGroup2, hpicfUsrProfileCapabilityByPortMap=hpicfUsrProfileCapabilityByPortMap, hpicfUsrProfileGroup=hpicfUsrProfileGroup, hpicfUsrProfileConfigFilterRule=hpicfUsrProfileConfigFilterRule, hpicfUsrProfileStatsTaggedEgressVlanMap2k=hpicfUsrProfileStatsTaggedEgressVlanMap2k, hpicfUsrProfileStatsTaggedEgressVlanMap4k=hpicfUsrProfileStatsTaggedEgressVlanMap4k, hpicfUsrProfileConfigFilterRuleEntry=hpicfUsrProfileConfigFilterRuleEntry, hpicfUsrProfileConfigConflictResolveQoS=hpicfUsrProfileConfigConflictResolveQoS, hpicfUsrProfileStats=hpicfUsrProfileStats, hpicfUsrProfileConfigBindTable=hpicfUsrProfileConfigBindTable, hpicfUsrProfileConfigTaggedEgressVlanMap1k=hpicfUsrProfileConfigTaggedEgressVlanMap1k, hpicfUsrProfileFilterRuleListIndex=hpicfUsrProfileFilterRuleListIndex, hpicfUsrProfileConfigPriorityRegenTable=hpicfUsrProfileConfigPriorityRegenTable, hpicfUsrProfileConfigEntry=hpicfUsrProfileConfigEntry, hpicfUsrProfileUserMacAddr=hpicfUsrProfileUserMacAddr, hpicfUsrProfileLastUpdate=hpicfUsrProfileLastUpdate, hpicfUsrProfileConfigFilterListEnable=hpicfUsrProfileConfigFilterListEnable, hpicfUsrProfileCompliance=hpicfUsrProfileCompliance, hpicfUsrProfileStatsFilterListIndex=hpicfUsrProfileStatsFilterListIndex, hpicfUsrProfileConfigMaxIngressBandwidth=hpicfUsrProfileConfigMaxIngressBandwidth, hpicfUsrProfileConfigMaxIngressBandwidthEnable=hpicfUsrProfileConfigMaxIngressBandwidthEnable, hpicfUsrProfileConfigBindEntryRowStatus=hpicfUsrProfileConfigBindEntryRowStatus, hpicfUsrProfileStatsPortSpeedVSA=hpicfUsrProfileStatsPortSpeedVSA, hpicfUsrProfileCapabilityByUserMap=hpicfUsrProfileCapabilityByUserMap, hpicfUsrProfileStatsFilterTable=hpicfUsrProfileStatsFilterTable, hpicfUsrProfileConfigPvidEnable=hpicfUsrProfileConfigPvidEnable, hpicfUsrProfileConfigTaggedEgressVlanEnable=hpicfUsrProfileConfigTaggedEgressVlanEnable, hpicfUsrProfileStatsFilterRuleHitCountEnabled=hpicfUsrProfileStatsFilterRuleHitCountEnabled, hpicfUsrProfileConfigEntryRowStatus=hpicfUsrProfileConfigEntryRowStatus, hpicfUsrProfileCompliance2=hpicfUsrProfileCompliance2, hpicfUsrProfileStatsEntry=hpicfUsrProfileStatsEntry, hpicfUsrProfileConfigBindEntry=hpicfUsrProfileConfigBindEntry, hpicfUsrProfileCompliances=hpicfUsrProfileCompliances, hpicfUsrProfileCapabilityGroup=hpicfUsrProfileCapabilityGroup, hpicfUsrProfileConfigMaxEgressBandwidth=hpicfUsrProfileConfigMaxEgressBandwidth, hpicfUsrProfileConfigGroup=hpicfUsrProfileConfigGroup, hpicfUsrProfileStatsMaxEgressBandwidth=hpicfUsrProfileStatsMaxEgressBandwidth, hpicfUsrProfileConformance=hpicfUsrProfileConformance, PYSNMP_MODULE_ID=hpicfUsrProfileMIB, hpicfUsrProfileMIB=hpicfUsrProfileMIB, hpicfUsrProfileStatsGroup1=hpicfUsrProfileStatsGroup1, hpicfUsrProfileConfigTaggedEgressVlanMap4k=hpicfUsrProfileConfigTaggedEgressVlanMap4k, hpicfUsrProfileStatsTaggedEgressVlanMap1k=hpicfUsrProfileStatsTaggedEgressVlanMap1k, hpicfUsrProfileConfigFilterListIndex=hpicfUsrProfileConfigFilterListIndex, hpicfUsrProfileStatsTable=hpicfUsrProfileStatsTable, hpicfUsrProfileConfigNasRulesIpv6=hpicfUsrProfileConfigNasRulesIpv6, hpicfUsrProfileStatsMaxIngressBandwidth=hpicfUsrProfileStatsMaxIngressBandwidth, hpicfUsrProfilePortSpeedOverRidden=hpicfUsrProfilePortSpeedOverRidden, hpicfUsrProfileConfigTaggedEgressVlanMap3k=hpicfUsrProfileConfigTaggedEgressVlanMap3k, hpicfUsrProfileConfigFilterListEntry=hpicfUsrProfileConfigFilterListEntry, hpicfUsrProfileConfigPvid=hpicfUsrProfileConfigPvid, hpicfUsrProfileStatsGroup=hpicfUsrProfileStatsGroup, hpicfUsrProfileConfigIndex=hpicfUsrProfileConfigIndex, hpicfUsrProfileStatsIngressVlanFilterEnable=hpicfUsrProfileStatsIngressVlanFilterEnable, hpicfUsrProfileUserPortNumber=hpicfUsrProfileUserPortNumber, hpicfUsrProfileConfigFilterListRowStatus=hpicfUsrProfileConfigFilterListRowStatus, hpicfUsrProfileStatsPriorityRegenTable=hpicfUsrProfileStatsPriorityRegenTable, hpicfUsrProfileConfigPriorityRegenTableEnable=hpicfUsrProfileConfigPriorityRegenTableEnable, hpicfUsrProfileStatsFilterEntry=hpicfUsrProfileStatsFilterEntry, hpicfUsrProfileStatsAccessMode=hpicfUsrProfileStatsAccessMode, hpicfUsrProfileStatsFilterRuleHitCount=hpicfUsrProfileStatsFilterRuleHitCount, hpicfUsrProfileFilterListIndex=hpicfUsrProfileFilterListIndex, hpicfUsrProfileConfigMaxEgressBandwidthEnable=hpicfUsrProfileConfigMaxEgressBandwidthEnable, hpicfUsrProfileConfigFilterListTable=hpicfUsrProfileConfigFilterListTable, hpicfUsrProfileConfigConflictResolveMaxIngressBandwidth=hpicfUsrProfileConfigConflictResolveMaxIngressBandwidth, hpicfUsrProfileConfigFilterRuleTable=hpicfUsrProfileConfigFilterRuleTable, hpicfUsrProfileConfigFilterRuleRowStatus=hpicfUsrProfileConfigFilterRuleRowStatus, hpicfUsrProfileCompliance3=hpicfUsrProfileCompliance3, hpicfUsrProfileStatsTaggedEgressVlanMap3k=hpicfUsrProfileStatsTaggedEgressVlanMap3k, hpicfUsrProfileFilterRuleIndex=hpicfUsrProfileFilterRuleIndex, hpicfUsrProfileConfigTaggedEgressVlanMap2k=hpicfUsrProfileConfigTaggedEgressVlanMap2k, hpicfUsrProfileConfigIngressVlanFilterEnable=hpicfUsrProfileConfigIngressVlanFilterEnable, hpicfUsrProfileConfigTable=hpicfUsrProfileConfigTable, hpicfUsrProfileCompliance4=hpicfUsrProfileCompliance4, hpicfUsrProfileCapability=hpicfUsrProfileCapability)
