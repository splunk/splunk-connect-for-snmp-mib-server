#
# PySNMP MIB module CISCO-DHCP-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DHCP-SNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifName, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "InterfaceIndex", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, ModuleIdentity, NotificationType, ObjectIdentity, Bits, IpAddress, Counter32, Unsigned32, Counter64, Gauge32, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Bits", "IpAddress", "Counter32", "Unsigned32", "Counter64", "Gauge32", "Integer32", "MibIdentifier")
TextualConvention, DisplayString, TruthValue, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus", "MacAddress")
ciscoDhcpSnoopingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 380))
ciscoDhcpSnoopingMIB.setRevisions(('2009-08-26 00:00', '2009-08-10 00:00', '2009-04-12 00:00', '2007-11-13 00:00', '2007-07-12 00:00', '2007-05-30 00:00', '2006-03-16 16:00', '2005-10-26 00:00', '2004-03-04 00:00',))
if mibBuilder.loadTexts: ciscoDhcpSnoopingMIB.setLastUpdated('200908260000Z')
if mibBuilder.loadTexts: ciscoDhcpSnoopingMIB.setOrganization('Cisco Systems, Inc.')
ciscoDhcpSnoopingMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 0))
ciscoDhcpSnoopingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1))
ciscoDhcpSnoopingMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 2))
cdsGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1))
cdsVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 2))
cdsInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3))
cdsBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4))
cdsStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 5))
cdsSrcGuard = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6))
cdsFeatureEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsFeatureEnable.setStatus('current')
cdsDatabaseFile = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsDatabaseFile.setStatus('current')
cdsDatabaseUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsDatabaseUpdateInterval.setStatus('current')
cdsRelayAgentInfoOptEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsRelayAgentInfoOptEnable.setStatus('current')
cdsRelayAgentInfoOptRemoteId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsRelayAgentInfoOptRemoteId.setStatus('deprecated')
cdsMatchMacAddressEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsMatchMacAddressEnable.setStatus('current')
cdsGlobalMaxBindingsLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsGlobalMaxBindingsLimit.setStatus('current')
cdsRelayAgentInfoOptRemoteIdSub = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsRelayAgentInfoOptRemoteIdSub.setStatus('current')
cdsBindingsNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsBindingsNotifEnabled.setStatus('current')
cdsVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 2, 1), )
if mibBuilder.loadTexts: cdsVlanConfigTable.setStatus('current')
cdsVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-DHCP-SNOOPING-MIB", "cdsVlanIndex"))
if mibBuilder.loadTexts: cdsVlanConfigEntry.setStatus('current')
cdsVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 2, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cdsVlanIndex.setStatus('current')
cdsVlanDhcpSnoopingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsVlanDhcpSnoopingEnable.setStatus('current')
cdsVlanDhcpSnoopingOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("operational", 1), ("notOperational", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsVlanDhcpSnoopingOperStatus.setStatus('current')
cdsIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 1), )
if mibBuilder.loadTexts: cdsIfConfigTable.setStatus('current')
cdsIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdsIfConfigEntry.setStatus('current')
cdsIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsIfTrustEnable.setStatus('current')
cdsIfRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 2), )
if mibBuilder.loadTexts: cdsIfRateLimitTable.setStatus('current')
cdsIfRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdsIfRateLimitEntry.setStatus('current')
cdsIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 2, 1, 1), Unsigned32()).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsIfRateLimit.setStatus('current')
cdsIfFeatureConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 3), )
if mibBuilder.loadTexts: cdsIfFeatureConfigTable.setStatus('current')
cdsIfFeatureConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdsIfFeatureConfigEntry.setStatus('current')
cdsIfFeatureEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 3, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsIfFeatureEnable.setStatus('current')
cdsIfBindingsLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 4), )
if mibBuilder.loadTexts: cdsIfBindingsLimitTable.setStatus('current')
cdsIfBindingsLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdsIfBindingsLimitEntry.setStatus('current')
cdsIfBindingsLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 4, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsIfBindingsLimit.setStatus('current')
cdsIfVlanRelayInfoOptCircuitIdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 5), )
if mibBuilder.loadTexts: cdsIfVlanRelayInfoOptCircuitIdTable.setStatus('current')
cdsIfVlanRelayInfoOptCircuitIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DHCP-SNOOPING-MIB", "cdsIfVlan"))
if mibBuilder.loadTexts: cdsIfVlanRelayInfoOptCircuitIdEntry.setStatus('current')
cdsIfVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 5, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cdsIfVlan.setStatus('current')
cdsIfVlanRelayInfoOptCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsIfVlanRelayInfoOptCircuitId.setStatus('current')
cdsIfVlanRelayInfoOptCircuitIdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsIfVlanRelayInfoOptCircuitIdStatus.setStatus('current')
cdsIfVlanRelayInfoOptCircuitIdDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 3, 5, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsIfVlanRelayInfoOptCircuitIdDirect.setStatus('current')
cdsBindingsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1), )
if mibBuilder.loadTexts: cdsBindingsTable.setStatus('current')
cdsBindingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-DHCP-SNOOPING-MIB", "cdsBindingsVlan"), (0, "CISCO-DHCP-SNOOPING-MIB", "cdsBindingsMacAddress"))
if mibBuilder.loadTexts: cdsBindingsEntry.setStatus('current')
cdsBindingsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cdsBindingsVlan.setStatus('current')
cdsBindingsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: cdsBindingsMacAddress.setStatus('current')
cdsBindingsAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsBindingsAddrType.setStatus('current')
cdsBindingsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsBindingsIpAddress.setStatus('current')
cdsBindingsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsBindingsInterface.setStatus('current')
cdsBindingsLeasedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsBindingsLeasedTime.setStatus('current')
cdsBindingsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsBindingsStatus.setStatus('current')
cdsBindingsHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsBindingsHostname.setStatus('current')
cdsStaticBindingsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2), )
if mibBuilder.loadTexts: cdsStaticBindingsTable.setStatus('current')
cdsStaticBindingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsVlan"), (0, "CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsMacAddress"))
if mibBuilder.loadTexts: cdsStaticBindingsEntry.setStatus('current')
cdsStaticBindingsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cdsStaticBindingsVlan.setStatus('current')
cdsStaticBindingsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: cdsStaticBindingsMacAddress.setStatus('current')
cdsStaticBindingsAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsStaticBindingsAddrType.setStatus('current')
cdsStaticBindingsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsStaticBindingsIpAddress.setStatus('current')
cdsStaticBindingsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsStaticBindingsInterface.setStatus('current')
cdsStaticBindingsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 4, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsStaticBindingsStatus.setStatus('current')
cdsTotalForwardedPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 5, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsTotalForwardedPkts.setStatus('current')
cdsTotalDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 5, 2), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsTotalDroppedPkts.setStatus('current')
cdsUntrustedPortDroppedPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 5, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsUntrustedPortDroppedPkts.setStatus('current')
cdsForwardedWithoutOption82Pkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 5, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsForwardedWithoutOption82Pkts.setStatus('current')
cdsIfSrcGuardConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 1), )
if mibBuilder.loadTexts: cdsIfSrcGuardConfigTable.setStatus('current')
cdsIfSrcGuardConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cdsIfSrcGuardConfigEntry.setStatus('current')
cdsIfSrcGuardEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsIfSrcGuardEnable.setStatus('deprecated')
cdsIfSrcGuardFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("ip", 2), ("ipMac", 3), ("strictIpMac", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsIfSrcGuardFilterType.setStatus('current')
cdsIfSrcGuardAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2), )
if mibBuilder.loadTexts: cdsIfSrcGuardAddrTable.setStatus('current')
cdsIfSrcGuardAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIndex"))
if mibBuilder.loadTexts: cdsIfSrcGuardAddrEntry.setStatus('current')
cdsIfSrcGuardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cdsIfSrcGuardIndex.setStatus('current')
cdsIfSrcGuardAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardAddrType.setStatus('current')
cdsIfSrcGuardAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardAddress.setStatus('current')
cdsIfSrcGuardIpFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permitIpAddress", 1), ("denyAllIpAddress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardIpFilterAction.setStatus('current')
cdsIfSrcGuardFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactiveTrustPort", 2), ("inactiveNoSnoopingVlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardFilterMode.setStatus('current')
cdsIfSrcGuardMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardMacAddress.setStatus('current')
cdsIfSrcGuardMacFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allowMacAddress", 1), ("denyAllMacAddresses", 2), ("permitAllMacAddresses", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardMacFilterAction.setStatus('current')
cdsIfSrcGuardVlansLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardVlansLow.setStatus('current')
cdsIfSrcGuardVlansHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 380, 1, 6, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsIfSrcGuardVlansHigh.setStatus('current')
cdsBindingsNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 380, 0, 1)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsAddrType"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsIpAddress"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: cdsBindingsNotification.setStatus('current')
cdsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1))
cdsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2))
cdsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 1)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance = cdsMIBCompliance.setStatus('deprecated')
cdsMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 2)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroupRev1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentRemoteIdGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardTrafficFilterGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance2 = cdsMIBCompliance2.setStatus('deprecated')
cdsMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 3)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroupRev1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentRemoteIdGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardTrafficFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsHostnameGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance3 = cdsMIBCompliance3.setStatus('deprecated')
cdsMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 4)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroupRev1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardTrafficFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsHostnameGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptRemoteIdSubGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance4 = cdsMIBCompliance4.setStatus('deprecated')
cdsMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 5)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroupRev1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardTrafficFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsHostnameGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptRemoteIdSubGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsNotifControlGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance5 = cdsMIBCompliance5.setStatus('deprecated')
cdsMIBCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 6)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroupRev1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardTrafficFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsHostnameGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptRemoteIdSubGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsNotifControlGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsNotificationGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance6 = cdsMIBCompliance6.setStatus('deprecated')
cdsMIBCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 1, 7)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalEnableGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardGroupRev1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureConfigGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLimitGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardTrafficFilterGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsHostnameGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptRemoteIdSubGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStatisticsExtGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsNotifControlGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsNotificationGroup"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdGroupSup1"), ("CISCO-DHCP-SNOOPING-MIB", "cdsVlanOperStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMIBCompliance7 = cdsMIBCompliance7.setStatus('current')
cdsGlobalEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 1)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsFeatureEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsGlobalEnableGroup = cdsGlobalEnableGroup.setStatus('current')
cdsDatabaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 2)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseFile"), ("CISCO-DHCP-SNOOPING-MIB", "cdsDatabaseUpdateInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsDatabaseGroup = cdsDatabaseGroup.setStatus('current')
cdsVlanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 3)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsVlanDhcpSnoopingEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsVlanConfigGroup = cdsVlanConfigGroup.setStatus('current')
cdsIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 4)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfTrustEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfConfigGroup = cdsIfConfigGroup.setStatus('current')
cdsIfRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 5)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfRateLimitGroup = cdsIfRateLimitGroup.setStatus('current')
cdsBindingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 6)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsAddrType"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsIpAddress"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsInterface"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsLeasedTime"), ("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsBindingsGroup = cdsBindingsGroup.setStatus('current')
cdsStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 7)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsTotalForwardedPkts"), ("CISCO-DHCP-SNOOPING-MIB", "cdsTotalDroppedPkts"), ("CISCO-DHCP-SNOOPING-MIB", "cdsUntrustedPortDroppedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsStatisticsGroup = cdsStatisticsGroup.setStatus('current')
cdsRelayAgentInfoOptGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 8)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsRelayAgentInfoOptGroup = cdsRelayAgentInfoOptGroup.setStatus('current')
cdsIfSrcGuardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 9)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardEnable"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardAddrType"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfSrcGuardGroup = cdsIfSrcGuardGroup.setStatus('deprecated')
cdsRelayAgentRemoteIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 10)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptRemoteId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsRelayAgentRemoteIdGroup = cdsRelayAgentRemoteIdGroup.setStatus('deprecated')
cdsMatchMacAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 11)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsMatchMacAddressEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsMatchMacAddressGroup = cdsMatchMacAddressGroup.setStatus('current')
cdsIfFeatureConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 12)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfFeatureEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfFeatureConfigGroup = cdsIfFeatureConfigGroup.setStatus('current')
cdsBindingsLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 13)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsGlobalMaxBindingsLimit"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfBindingsLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsBindingsLimitGroup = cdsBindingsLimitGroup.setStatus('current')
cdsStaticBindingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 14)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsAddrType"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsIpAddress"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsInterface"), ("CISCO-DHCP-SNOOPING-MIB", "cdsStaticBindingsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsStaticBindingsGroup = cdsStaticBindingsGroup.setStatus('current')
cdsIfSrcGuardIpFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 15)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardIpFilterAction"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardFilterMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfSrcGuardIpFilterGroup = cdsIfSrcGuardIpFilterGroup.setStatus('current')
cdsIfSrcGuardExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 16)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardMacAddress"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardMacFilterAction"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardVlansLow"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardVlansHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfSrcGuardExtGroup = cdsIfSrcGuardExtGroup.setStatus('current')
cdsIfSrcGuardTrafficFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 17)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardFilterType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfSrcGuardTrafficFilterGroup = cdsIfSrcGuardTrafficFilterGroup.setStatus('current')
cdsIfSrcGuardGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 18)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardAddrType"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfSrcGuardAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfSrcGuardGroupRev1 = cdsIfSrcGuardGroupRev1.setStatus('current')
cdsBindingsHostnameGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 19)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsHostname"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsBindingsHostnameGroup = cdsBindingsHostnameGroup.setStatus('current')
cdsRelayAgentInfoOptRemoteIdSubGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 20)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsRelayAgentInfoOptRemoteIdSub"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsRelayAgentInfoOptRemoteIdSubGroup = cdsRelayAgentInfoOptRemoteIdSubGroup.setStatus('current')
cdsIfVlanRelayInfoOptCircuitIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 21)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitId"), ("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfVlanRelayInfoOptCircuitIdGroup = cdsIfVlanRelayInfoOptCircuitIdGroup.setStatus('current')
cdsStatisticsExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 22)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsForwardedWithoutOption82Pkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsStatisticsExtGroup = cdsStatisticsExtGroup.setStatus('current')
cdsNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 23)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsNotifControlGroup = cdsNotifControlGroup.setStatus('current')
cdsBindingsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 24)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsBindingsNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsBindingsNotificationGroup = cdsBindingsNotificationGroup.setStatus('current')
cdsIfVlanRelayInfoOptCircuitIdGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 25)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsIfVlanRelayInfoOptCircuitIdDirect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsIfVlanRelayInfoOptCircuitIdGroupSup1 = cdsIfVlanRelayInfoOptCircuitIdGroupSup1.setStatus('current')
cdsVlanOperStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 380, 2, 2, 26)).setObjects(("CISCO-DHCP-SNOOPING-MIB", "cdsVlanDhcpSnoopingOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsVlanOperStatusGroup = cdsVlanOperStatusGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-DHCP-SNOOPING-MIB", cdsIfVlanRelayInfoOptCircuitIdEntry=cdsIfVlanRelayInfoOptCircuitIdEntry, cdsIfSrcGuardAddrEntry=cdsIfSrcGuardAddrEntry, cdsIfSrcGuardMacFilterAction=cdsIfSrcGuardMacFilterAction, cdsMatchMacAddressGroup=cdsMatchMacAddressGroup, cdsVlanOperStatusGroup=cdsVlanOperStatusGroup, cdsMatchMacAddressEnable=cdsMatchMacAddressEnable, cdsVlanConfigEntry=cdsVlanConfigEntry, ciscoDhcpSnoopingMIBNotifs=ciscoDhcpSnoopingMIBNotifs, cdsIfConfigTable=cdsIfConfigTable, cdsIfVlan=cdsIfVlan, cdsBindingsEntry=cdsBindingsEntry, cdsIfSrcGuardEnable=cdsIfSrcGuardEnable, cdsIfSrcGuardAddress=cdsIfSrcGuardAddress, cdsVlanDhcpSnoopingOperStatus=cdsVlanDhcpSnoopingOperStatus, cdsIfSrcGuardGroup=cdsIfSrcGuardGroup, cdsBindingsTable=cdsBindingsTable, cdsRelayAgentInfoOptGroup=cdsRelayAgentInfoOptGroup, cdsInterface=cdsInterface, cdsStatistics=cdsStatistics, cdsIfSrcGuardFilterMode=cdsIfSrcGuardFilterMode, cdsIfBindingsLimitTable=cdsIfBindingsLimitTable, cdsStaticBindingsTable=cdsStaticBindingsTable, cdsMIBGroups=cdsMIBGroups, cdsIfSrcGuardIpFilterGroup=cdsIfSrcGuardIpFilterGroup, cdsIfSrcGuardConfigEntry=cdsIfSrcGuardConfigEntry, cdsMIBCompliance2=cdsMIBCompliance2, PYSNMP_MODULE_ID=ciscoDhcpSnoopingMIB, cdsIfVlanRelayInfoOptCircuitIdStatus=cdsIfVlanRelayInfoOptCircuitIdStatus, cdsStaticBindingsGroup=cdsStaticBindingsGroup, cdsStaticBindingsIpAddress=cdsStaticBindingsIpAddress, ciscoDhcpSnoopingMIBConformance=ciscoDhcpSnoopingMIBConformance, cdsUntrustedPortDroppedPkts=cdsUntrustedPortDroppedPkts, cdsBindingsNotificationGroup=cdsBindingsNotificationGroup, cdsIfFeatureEnable=cdsIfFeatureEnable, cdsBindingsNotifEnabled=cdsBindingsNotifEnabled, cdsDatabaseUpdateInterval=cdsDatabaseUpdateInterval, ciscoDhcpSnoopingMIB=ciscoDhcpSnoopingMIB, cdsIfSrcGuardTrafficFilterGroup=cdsIfSrcGuardTrafficFilterGroup, cdsStaticBindingsInterface=cdsStaticBindingsInterface, cdsBindingsHostname=cdsBindingsHostname, cdsIfSrcGuardConfigTable=cdsIfSrcGuardConfigTable, cdsDatabaseFile=cdsDatabaseFile, cdsSrcGuard=cdsSrcGuard, cdsForwardedWithoutOption82Pkts=cdsForwardedWithoutOption82Pkts, cdsIfSrcGuardIpFilterAction=cdsIfSrcGuardIpFilterAction, cdsIfConfigGroup=cdsIfConfigGroup, cdsStatisticsExtGroup=cdsStatisticsExtGroup, cdsIfSrcGuardVlansHigh=cdsIfSrcGuardVlansHigh, cdsIfVlanRelayInfoOptCircuitIdDirect=cdsIfVlanRelayInfoOptCircuitIdDirect, cdsBindingsNotification=cdsBindingsNotification, cdsBindingsIpAddress=cdsBindingsIpAddress, cdsIfSrcGuardIndex=cdsIfSrcGuardIndex, cdsIfFeatureConfigGroup=cdsIfFeatureConfigGroup, cdsIfFeatureConfigEntry=cdsIfFeatureConfigEntry, cdsDatabaseGroup=cdsDatabaseGroup, cdsMIBCompliances=cdsMIBCompliances, cdsIfRateLimitEntry=cdsIfRateLimitEntry, cdsGlobalMaxBindingsLimit=cdsGlobalMaxBindingsLimit, cdsIfTrustEnable=cdsIfTrustEnable, cdsMIBCompliance=cdsMIBCompliance, cdsBindingsAddrType=cdsBindingsAddrType, cdsGlobal=cdsGlobal, cdsVlanDhcpSnoopingEnable=cdsVlanDhcpSnoopingEnable, cdsBindingsLeasedTime=cdsBindingsLeasedTime, cdsIfRateLimit=cdsIfRateLimit, cdsGlobalEnableGroup=cdsGlobalEnableGroup, ciscoDhcpSnoopingMIBObjects=ciscoDhcpSnoopingMIBObjects, cdsMIBCompliance4=cdsMIBCompliance4, cdsIfConfigEntry=cdsIfConfigEntry, cdsIfFeatureConfigTable=cdsIfFeatureConfigTable, cdsIfSrcGuardAddrTable=cdsIfSrcGuardAddrTable, cdsIfSrcGuardVlansLow=cdsIfSrcGuardVlansLow, cdsStaticBindingsStatus=cdsStaticBindingsStatus, cdsVlanIndex=cdsVlanIndex, cdsNotifControlGroup=cdsNotifControlGroup, cdsIfBindingsLimit=cdsIfBindingsLimit, cdsStaticBindingsAddrType=cdsStaticBindingsAddrType, cdsMIBCompliance5=cdsMIBCompliance5, cdsVlan=cdsVlan, cdsFeatureEnable=cdsFeatureEnable, cdsRelayAgentInfoOptRemoteId=cdsRelayAgentInfoOptRemoteId, cdsIfVlanRelayInfoOptCircuitId=cdsIfVlanRelayInfoOptCircuitId, cdsMIBCompliance7=cdsMIBCompliance7, cdsIfVlanRelayInfoOptCircuitIdGroupSup1=cdsIfVlanRelayInfoOptCircuitIdGroupSup1, cdsRelayAgentInfoOptRemoteIdSub=cdsRelayAgentInfoOptRemoteIdSub, cdsIfVlanRelayInfoOptCircuitIdTable=cdsIfVlanRelayInfoOptCircuitIdTable, cdsIfSrcGuardMacAddress=cdsIfSrcGuardMacAddress, cdsRelayAgentInfoOptEnable=cdsRelayAgentInfoOptEnable, cdsIfSrcGuardAddrType=cdsIfSrcGuardAddrType, cdsBindingsStatus=cdsBindingsStatus, cdsBindings=cdsBindings, cdsIfSrcGuardExtGroup=cdsIfSrcGuardExtGroup, cdsBindingsMacAddress=cdsBindingsMacAddress, cdsIfSrcGuardGroupRev1=cdsIfSrcGuardGroupRev1, cdsMIBCompliance3=cdsMIBCompliance3, cdsMIBCompliance6=cdsMIBCompliance6, cdsBindingsGroup=cdsBindingsGroup, cdsVlanConfigTable=cdsVlanConfigTable, cdsBindingsInterface=cdsBindingsInterface, cdsIfRateLimitGroup=cdsIfRateLimitGroup, cdsStatisticsGroup=cdsStatisticsGroup, cdsRelayAgentRemoteIdGroup=cdsRelayAgentRemoteIdGroup, cdsIfVlanRelayInfoOptCircuitIdGroup=cdsIfVlanRelayInfoOptCircuitIdGroup, cdsStaticBindingsEntry=cdsStaticBindingsEntry, cdsTotalDroppedPkts=cdsTotalDroppedPkts, cdsStaticBindingsVlan=cdsStaticBindingsVlan, cdsBindingsVlan=cdsBindingsVlan, cdsRelayAgentInfoOptRemoteIdSubGroup=cdsRelayAgentInfoOptRemoteIdSubGroup, cdsIfSrcGuardFilterType=cdsIfSrcGuardFilterType, cdsIfRateLimitTable=cdsIfRateLimitTable, cdsIfBindingsLimitEntry=cdsIfBindingsLimitEntry, cdsVlanConfigGroup=cdsVlanConfigGroup, cdsBindingsLimitGroup=cdsBindingsLimitGroup, cdsBindingsHostnameGroup=cdsBindingsHostnameGroup, cdsStaticBindingsMacAddress=cdsStaticBindingsMacAddress, cdsTotalForwardedPkts=cdsTotalForwardedPkts)
