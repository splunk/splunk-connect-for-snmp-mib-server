#
# PySNMP MIB module ALVARION-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionPriorityQueue, = mibBuilder.importSymbols("ALVARION-TC", "AlvarionPriorityQueue")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, Integer32, NotificationType, Gauge32, IpAddress, iso, ObjectIdentity, Unsigned32, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "Integer32", "NotificationType", "Gauge32", "IpAddress", "iso", "ObjectIdentity", "Unsigned32", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alvarionQOS = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13))
if mibBuilder.loadTexts: alvarionQOS.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionQOS.setOrganization('Alvarion Ltd.')
alvarionQOSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1))
coQOSStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1))
coQOSCountersTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1), )
if mibBuilder.loadTexts: coQOSCountersTable.setStatus('current')
coQOSCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ALVARION-QOS-MIB", "coQOSQueueId"))
if mibBuilder.loadTexts: coQOSCountersEntry.setStatus('current')
coQOSQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 1), AlvarionPriorityQueue())
if mibBuilder.loadTexts: coQOSQueueId.setStatus('current')
coQOSTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSTransmittedFrameCount.setStatus('current')
coQOSMulticastTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSMulticastTransmittedFrameCount.setStatus('current')
coQOSFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSFailedCount.setStatus('current')
coQOSRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSRetryCount.setStatus('current')
coQOSMultipleRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSMultipleRetryCount.setStatus('current')
coQOSFrameDuplicateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSFrameDuplicateCount.setStatus('current')
coQOSReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSReceivedFrameCount.setStatus('current')
coQOSMulticastReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coQOSMulticastReceivedFrameCount.setStatus('current')
coQOSConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 2))
coQOSGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 2, 1))
coQOSCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 2, 2))
coQOSCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 2, 2, 1)).setObjects(("ALVARION-QOS-MIB", "coQOSCountersGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coQOSCompliance = coQOSCompliance.setStatus('current')
coQOSCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 13, 1, 2, 1, 1)).setObjects(("ALVARION-QOS-MIB", "coQOSTransmittedFrameCount"), ("ALVARION-QOS-MIB", "coQOSMulticastTransmittedFrameCount"), ("ALVARION-QOS-MIB", "coQOSFailedCount"), ("ALVARION-QOS-MIB", "coQOSRetryCount"), ("ALVARION-QOS-MIB", "coQOSMultipleRetryCount"), ("ALVARION-QOS-MIB", "coQOSFrameDuplicateCount"), ("ALVARION-QOS-MIB", "coQOSReceivedFrameCount"), ("ALVARION-QOS-MIB", "coQOSMulticastReceivedFrameCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    coQOSCountersGroup = coQOSCountersGroup.setStatus('current')
mibBuilder.exportSymbols("ALVARION-QOS-MIB", coQOSFrameDuplicateCount=coQOSFrameDuplicateCount, alvarionQOSMIBObjects=alvarionQOSMIBObjects, coQOSMulticastTransmittedFrameCount=coQOSMulticastTransmittedFrameCount, coQOSQueueId=coQOSQueueId, coQOSCountersTable=coQOSCountersTable, coQOSMulticastReceivedFrameCount=coQOSMulticastReceivedFrameCount, coQOSCountersEntry=coQOSCountersEntry, coQOSFailedCount=coQOSFailedCount, coQOSCountersGroup=coQOSCountersGroup, coQOSReceivedFrameCount=coQOSReceivedFrameCount, coQOSGroups=coQOSGroups, coQOSCompliance=coQOSCompliance, coQOSRetryCount=coQOSRetryCount, coQOSStatistics=coQOSStatistics, PYSNMP_MODULE_ID=alvarionQOS, coQOSTransmittedFrameCount=coQOSTransmittedFrameCount, coQOSConformance=coQOSConformance, coQOSCompliances=coQOSCompliances, coQOSMultipleRetryCount=coQOSMultipleRetryCount, alvarionQOS=alvarionQOS)
