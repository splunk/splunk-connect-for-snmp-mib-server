#
# PySNMP MIB module HUAWEI-DHCPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-DHCPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
hwDhcp, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDhcp")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, NotificationType, Integer32, Bits, Unsigned32, TimeTicks, ObjectIdentity, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "NotificationType", "Integer32", "Bits", "Unsigned32", "TimeTicks", "ObjectIdentity", "Counter32", "Gauge32")
TruthValue, RowStatus, MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "MacAddress", "TextualConvention", "DisplayString")
hwDHCPServerMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2))
hwDHCPServerMib.setRevisions(('2015-03-05 00:00', '2014-08-25 00:00', '2014-03-17 00:00', '2013-07-04 00:00', '2013-06-19 00:00', '2013-05-17 00:00', '2003-02-12 00:00',))
if mibBuilder.loadTexts: hwDHCPServerMib.setLastUpdated('201503050000Z')
if mibBuilder.loadTexts: hwDHCPServerMib.setOrganization('Huawei Technologies Co.,Ltd.')
hwDHCPServerMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1))
hwDHCPSGlobalPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 1), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolTable.setStatus('current')
hwDHCPSGlobalPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 1, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolEntry.setStatus('current')
hwDHCPSGlobalPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolName.setStatus('current')
hwDHCPSGlobalPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolRowStatus.setStatus('current')
hwDHCPSGlobalPoolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConfigTable.setStatus('current')
hwDHCPSGlobalPoolConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConfigEntry.setStatus('current')
hwDHCPSGlobalPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("null", 0), ("host", 1), ("network", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolType.setStatus('current')
hwDHCPSGlobalPoolNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolNetwork.setStatus('current')
hwDHCPSGlobalPoolNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolNetworkMask.setStatus('current')
hwDHCPSGlobalPoolHostIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolHostIPAddr.setStatus('current')
hwDHCPSGlobalPoolHostMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolHostMask.setStatus('current')
hwDHCPSGlobalPoolHostHAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolHostHAddr.setStatus('current')
hwDHCPSGlobalPoolConfigUndoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undonetworkip", 1), ("undohostip", 2), ("undohosthaddr", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConfigUndoFlag.setStatus('current')
hwDHCPSGlobalPoolParaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolParaTable.setStatus('current')
hwDHCPSGlobalPoolParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolParaEntry.setStatus('current')
hwDHCPSGlobalPoolLeaseDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseDay.setStatus('current')
hwDHCPSGlobalPoolLeaseHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseHour.setStatus('current')
hwDHCPSGlobalPoolLeaseMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseMinute.setStatus('current')
hwDHCPSGlobalPoolLeaseUnlimited = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("unlimited", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseUnlimited.setStatus('current')
hwDHCPSGlobalPoolDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolDomainName.setStatus('current')
hwDHCPSGlobalPoolClientGatewayIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientGatewayIPString.setStatus('current')
hwDHCPSGlobalPoolClientGatewayIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientGatewayIPUndo.setStatus('current')
hwDHCPSGlobalPoolClientDNSIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientDNSIPString.setStatus('current')
hwDHCPSGlobalPoolClientDNSIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientDNSIPUndo.setStatus('current')
hwDHCPSGlobalPoolClientNetbiosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("null", 0), ("bnode", 1), ("pnode", 2), ("mnode", 4), ("hnode", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientNetbiosType.setStatus('current')
hwDHCPSGlobalPoolClientNbnsIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientNbnsIPString.setStatus('current')
hwDHCPSGlobalPoolClientNbnsIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientNbnsIPUndo.setStatus('current')
hwDHCPSGlobalPoolParaUndoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undoDomain", 1), ("undoLease", 2), ("undoGateway", 3), ("undoDns", 4), ("undoNbns", 5), ("undoNbType", 6), ("invalid", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolParaUndoFlag.setStatus('current')
hwDHCPSGlobalPoolIPInUseReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolIPInUseReset.setStatus('current')
hwDHCPSGlobalPoolLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLogging.setStatus('current')
hwDHCPSGlobalPoolConflictRecycleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1439999))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConflictRecycleTime.setStatus('current')
hwDHCPSGlobalPoolOptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionTable.setStatus('current')
hwDHCPSGlobalPoolOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionCode"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionEntry.setStatus('current')
hwDHCPSGlobalPoolOptionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionCode.setStatus('current')
hwDHCPSGlobalPoolOptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2), ("ip", 3), ("cipher", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionType.setStatus('current')
hwDHCPSGlobalPoolOptionAscii = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionAscii.setStatus('current')
hwDHCPSGlobalPoolOptionHexString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionHexString.setStatus('current')
hwDHCPSGlobalPoolOptionIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionIPString.setStatus('current')
hwDHCPSGlobalPoolOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionRowStatus.setStatus('current')
hwDHCPSGlobalPoolOptionCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 104))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionCipher.setStatus('current')
hwDHCPSGlobalTreeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 5), )
if mibBuilder.loadTexts: hwDHCPSGlobalTreeTable.setStatus('current')
hwDHCPSGlobalTreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 5, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalTreeEntry.setStatus('current')
hwDHCPSGlobalTreeParentNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreeParentNodeName.setStatus('current')
hwDHCPSGlobalTreeChildNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreeChildNodeName.setStatus('current')
hwDHCPSGlobalTreePreSiblingNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreePreSiblingNodeName.setStatus('current')
hwDHCPSGlobalTreeSiblingNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreeSiblingNodeName.setStatus('current')
hwDHCPSInterfacePoolParaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6), )
if mibBuilder.loadTexts: hwDHCPSInterfacePoolParaTable.setStatus('current')
hwDHCPSInterfacePoolParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDHCPSInterfacePoolParaEntry.setStatus('current')
hwDHCPSInterfacePoolLeaseDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseDay.setStatus('current')
hwDHCPSInterfacePoolLeaseHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseHour.setStatus('current')
hwDHCPSInterfacePoolLeaseMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseMinute.setStatus('current')
hwDHCPSInterfacePoolLeaseUnlimited = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("unlimited", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseUnlimited.setStatus('current')
hwDHCPSInterfacePoolDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolDomainName.setStatus('current')
hwDHCPSInterfacePoolClientDNSIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientDNSIPString.setStatus('current')
hwDHCPSInterfacePoolClientDNSIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientDNSIPUndo.setStatus('current')
hwDHCPSInterfacePoolClientNetbiosType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("null", 0), ("bnode", 1), ("pnode", 2), ("mnode", 4), ("hnode", 8))).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientNetbiosType.setStatus('current')
hwDHCPSInterfacePoolClientNbnsIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientNbnsIPString.setStatus('current')
hwDHCPSInterfacePoolClientNbnsIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientNbnsIPUndo.setStatus('current')
hwDHCPSInterfacePoolParaUndoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6, 7))).clone(namedValues=NamedValues(("undoDomain", 1), ("undoLease", 2), ("undoDns", 4), ("undoNbns", 5), ("undoNbType", 6), ("invalid", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolParaUndoFlag.setStatus('current')
hwDHCPSInterfacePoolIPInUseReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolIPInUseReset.setStatus('current')
hwDHCPSInterfacePoolLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLogging.setStatus('current')
hwDHCPSInterfacePoolConflictRecycleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1439999))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolConflictRecycleTime.setStatus('current')
hwDHCPSInterfacePoolOptionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7), )
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionTable.setStatus('current')
hwDHCPSInterfacePoolOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionCode"))
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionEntry.setStatus('current')
hwDHCPSInterfacePoolOptionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionCode.setStatus('current')
hwDHCPSInterfacePoolOptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2), ("ip", 3), ("cipher", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionType.setStatus('current')
hwDHCPSInterfacePoolOptionAscii = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionAscii.setStatus('current')
hwDHCPSInterfacePoolOptionHexString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionHexString.setStatus('current')
hwDHCPSInterfacePoolOptionIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionIPString.setStatus('current')
hwDHCPSInterfacePoolOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionRowStatus.setStatus('current')
hwDHCPSInterfacePoolOptionCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 104))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionCipher.setStatus('current')
hwDHCPSInterfacePoolStaticBindTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 8), )
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindTable.setStatus('current')
hwDHCPSInterfacePoolStaticBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindIP"))
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindEntry.setStatus('current')
hwDHCPSInterfacePoolStaticBindIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindIP.setStatus('current')
hwDHCPSInterfacePoolStaticBindMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 8, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindMac.setStatus('current')
hwDHCPSInterfacePoolStaticBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindRowStatus.setStatus('current')
hwDHCPSIPInUseTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9), )
if mibBuilder.loadTexts: hwDHCPSIPInUseTable.setStatus('current')
hwDHCPSIPInUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseHAddr"))
if mibBuilder.loadTexts: hwDHCPSIPInUseEntry.setStatus('current')
hwDHCPSIPInUseHAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseHAddr.setStatus('current')
hwDHCPSIPInUseIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseIP.setStatus('current')
hwDHCPSIPInUseEndLease = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseEndLease.setStatus('current')
hwDHCPSIPInUseType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("manual", 1), ("auto", 2), ("release", 3), ("offered", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseType.setStatus('current')
hwDHCPSIPInUsePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUsePoolName.setStatus('current')
hwDHCPSIPInUseInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseInterface.setStatus('current')
hwDHCPSIPInUseVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseVlan.setStatus('current')
hwDHCPSIPInUseAtmpvc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseAtmpvc.setStatus('current')
hwDHCPSForbiddenIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 10), )
if mibBuilder.loadTexts: hwDHCPSForbiddenIPTable.setStatus('current')
hwDHCPSForbiddenIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 10, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPStart"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPEnd"))
if mibBuilder.loadTexts: hwDHCPSForbiddenIPEntry.setStatus('current')
hwDHCPSForbiddenIPStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSForbiddenIPStart.setStatus('current')
hwDHCPSForbiddenIPEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSForbiddenIPEnd.setStatus('current')
hwDHCPSForbiddenIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSForbiddenIPRowStatus.setStatus('current')
hwDHCPSConflictIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 11), )
if mibBuilder.loadTexts: hwDHCPSConflictIPTable.setStatus('current')
hwDHCPSConflictIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 11, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSConflictIP"))
if mibBuilder.loadTexts: hwDHCPSConflictIPEntry.setStatus('current')
hwDHCPSConflictIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSConflictIP.setStatus('current')
hwDHCPSConflictIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ping", 1), ("arp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSConflictIPType.setStatus('current')
hwDHCPSConflictIPDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSConflictIPDetectTime.setStatus('current')
hwDHCPSServiceStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 12), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSServiceStatus.setStatus('current')
hwDHCPSDetectingServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 13), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSDetectingServerStatus.setStatus('current')
hwDHCPSPingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSPingNum.setStatus('current')
hwDHCPSPingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSPingTimeout.setStatus('current')
hwDHCPSWriteDataStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 16), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSWriteDataStatus.setStatus('current')
hwDHCPSWriteDataDirection = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSWriteDataDirection.setStatus('current')
hwDHCPSWriteDataDelay = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSWriteDataDelay.setStatus('current')
hwDHCPSWriteDataRecover = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 19), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSWriteDataRecover.setStatus('current')
hwDHCPSIPInUseResetIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSIPInUseResetIP.setStatus('current')
hwDHCPSConflictIPResetIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSConflictIPResetIP.setStatus('current')
hwDHCPSIPResetFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipInUse", 1), ("conflictIp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSIPResetFlag.setStatus('current')
hwDHCPSGlobalPoolNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolNumber.setStatus('current')
hwDHCPSGlobalPoolAutoBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolAutoBindingNum.setStatus('current')
hwDHCPSGlobalPoolManualBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolManualBindingNum.setStatus('current')
hwDHCPSGlobalPoolExpiredBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolExpiredBindingNum.setStatus('current')
hwDHCPSInterfacePoolNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolNumber.setStatus('current')
hwDHCPSInterfacePoolAutoBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolAutoBindingNum.setStatus('current')
hwDHCPSInterfacePoolManualBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolManualBindingNum.setStatus('current')
hwDHCPSInterfacePoolExpiredBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolExpiredBindingNum.setStatus('current')
hwDHCPSBadPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSBadPktNum.setStatus('current')
hwDHCPSBootRequestPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSBootRequestPktNum.setStatus('current')
hwDHCPSDiscoverPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSDiscoverPktNum.setStatus('current')
hwDHCPSRequestPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSRequestPktNum.setStatus('current')
hwDHCPSDeclinePktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSDeclinePktNum.setStatus('current')
hwDHCPSReleasePktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSReleasePktNum.setStatus('current')
hwDHCPSInformPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInformPktNum.setStatus('current')
hwDHCPSBootReplyPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSBootReplyPktNum.setStatus('current')
hwDHCPSOfferPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSOfferPktNum.setStatus('current')
hwDHCPSAckPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSAckPktNum.setStatus('current')
hwDHCPSNakPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSNakPktNum.setStatus('current')
hwDHCPSStatisticsReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSStatisticsReset.setStatus('current')
hwDHCPChastenTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43), )
if mibBuilder.loadTexts: hwDHCPChastenTable.setStatus('current')
hwDHCPChastenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPChastenIndex"))
if mibBuilder.loadTexts: hwDHCPChastenEntry.setStatus('current')
hwDHCPChastenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPChastenIndex.setStatus('current')
hwDHCPChastenPktNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPChastenPktNum.setStatus('current')
hwDHCPChastenAutenPktNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPChastenAutenPktNum.setStatus('current')
hwDHCPChastenCheckPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPChastenCheckPeriod.setStatus('current')
hwDHCPChastenChastenPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPChastenChastenPeriod.setStatus('current')
hwDHCPChastenChastenRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 43, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPChastenChastenRowStatus.setStatus('current')
hwDHCPSIPPOOLForbiddenIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 45), )
if mibBuilder.loadTexts: hwDHCPSIPPOOLForbiddenIPTable.setStatus('current')
hwDHCPSIPPOOLForbiddenIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 45, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPStart"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPEnd"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPVRFName"))
if mibBuilder.loadTexts: hwDHCPSIPPOOLForbiddenIPEntry.setStatus('current')
hwDHCPSIPPOOLForbiddenIPStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 45, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLForbiddenIPStart.setStatus('current')
hwDHCPSIPPOOLForbiddenIPEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 45, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLForbiddenIPEnd.setStatus('current')
hwDHCPSIPPOOLForbiddenIPVRFName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 45, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLForbiddenIPVRFName.setStatus('current')
hwDHCPSIPPOOLForbiddenIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 45, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSIPPOOLForbiddenIPRowStatus.setStatus('current')
hwDHCPSIPPOOLConflictIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 46), )
if mibBuilder.loadTexts: hwDHCPSIPPOOLConflictIPTable.setStatus('current')
hwDHCPSIPPOOLConflictIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 46, 1), ).setIndexNames((0, "HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLConflictIP"), (0, "HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLConflictIPVRFName"))
if mibBuilder.loadTexts: hwDHCPSIPPOOLConflictIPEntry.setStatus('current')
hwDHCPSIPPOOLConflictIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 46, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLConflictIP.setStatus('current')
hwDHCPSIPPOOLConflictIPVRFName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 46, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLConflictIPVRFName.setStatus('current')
hwDHCPSIPPOOLConflictIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 46, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ping", 1), ("arp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLConflictIPType.setStatus('current')
hwDHCPSIPPOOLConflictIPDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 46, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPPOOLConflictIPDetectTime.setStatus('current')
hwDHCPThroughPacket = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 1, 47), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPThroughPacket.setStatus('current')
hwDHCPServerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 2))
hwDHCPServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 2, 1))
hwDHCPServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 2, 1, 1)).setObjects(("HUAWEI-DHCPS-MIB", "hwDHCPServerMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDHCPServerMIBCompliance = hwDHCPServerMIBCompliance.setStatus('current')
hwDHCPServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 2, 2))
hwDHCPServerMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 7, 2, 2, 2, 1)).setObjects(("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolRowStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolNetwork"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolNetworkMask"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolHostIPAddr"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolHostMask"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolHostHAddr"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolConfigUndoFlag"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseDay"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseHour"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseMinute"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseUnlimited"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolDomainName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientGatewayIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientGatewayIPUndo"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientDNSIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientDNSIPUndo"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientNetbiosType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientNbnsIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientNbnsIPUndo"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolParaUndoFlag"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolIPInUseReset"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionCode"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionAscii"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionHexString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionRowStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreeParentNodeName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreeChildNodeName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreePreSiblingNodeName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreeSiblingNodeName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseDay"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseHour"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseMinute"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseUnlimited"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolDomainName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientDNSIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientDNSIPUndo"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientNetbiosType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientNbnsIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientNbnsIPUndo"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolParaUndoFlag"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolIPInUseReset"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionCode"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionAscii"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionHexString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionIPString"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionRowStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindIP"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindMac"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindRowStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseHAddr"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseIP"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseEndLease"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUsePoolName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseInterface"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseVlan"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseAtmpvc"), ("HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPStart"), ("HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPEnd"), ("HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPRowStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSConflictIP"), ("HUAWEI-DHCPS-MIB", "hwDHCPSConflictIPType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSConflictIPDetectTime"), ("HUAWEI-DHCPS-MIB", "hwDHCPSServiceStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSDetectingServerStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSPingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSPingTimeout"), ("HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataDirection"), ("HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataDelay"), ("HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataRecover"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseResetIP"), ("HUAWEI-DHCPS-MIB", "hwDHCPSConflictIPResetIP"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPResetFlag"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolNumber"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolAutoBindingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolManualBindingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolExpiredBindingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolNumber"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolAutoBindingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolManualBindingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolExpiredBindingNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSBadPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSBootRequestPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSDiscoverPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSRequestPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSDeclinePktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSReleasePktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInformPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSBootReplyPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSOfferPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSAckPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSNakPktNum"), ("HUAWEI-DHCPS-MIB", "hwDHCPSStatisticsReset"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPStart"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPEnd"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPVRFName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLForbiddenIPRowStatus"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLConflictIP"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLConflictIPVRFName"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLConflictIPType"), ("HUAWEI-DHCPS-MIB", "hwDHCPSIPPOOLConflictIPDetectTime"), ("HUAWEI-DHCPS-MIB", "hwDHCPThroughPacket"), ("HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolConflictRecycleTime"), ("HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolConflictRecycleTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDHCPServerMIBGroup = hwDHCPServerMIBGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-DHCPS-MIB", hwDHCPSInterfacePoolOptionHexString=hwDHCPSInterfacePoolOptionHexString, hwDHCPSGlobalPoolName=hwDHCPSGlobalPoolName, hwDHCPSGlobalPoolNetworkMask=hwDHCPSGlobalPoolNetworkMask, hwDHCPSInterfacePoolOptionIPString=hwDHCPSInterfacePoolOptionIPString, hwDHCPSGlobalPoolClientDNSIPUndo=hwDHCPSGlobalPoolClientDNSIPUndo, hwDHCPSIPPOOLForbiddenIPEnd=hwDHCPSIPPOOLForbiddenIPEnd, hwDHCPSGlobalPoolClientNbnsIPUndo=hwDHCPSGlobalPoolClientNbnsIPUndo, hwDHCPSInterfacePoolClientDNSIPUndo=hwDHCPSInterfacePoolClientDNSIPUndo, hwDHCPSGlobalPoolLeaseHour=hwDHCPSGlobalPoolLeaseHour, hwDHCPSConflictIPResetIP=hwDHCPSConflictIPResetIP, hwDHCPSGlobalPoolIPInUseReset=hwDHCPSGlobalPoolIPInUseReset, hwDHCPSOfferPktNum=hwDHCPSOfferPktNum, hwDHCPSGlobalPoolConfigUndoFlag=hwDHCPSGlobalPoolConfigUndoFlag, hwDHCPServerMIBGroup=hwDHCPServerMIBGroup, hwDHCPSGlobalPoolConflictRecycleTime=hwDHCPSGlobalPoolConflictRecycleTime, hwDHCPSGlobalPoolOptionRowStatus=hwDHCPSGlobalPoolOptionRowStatus, hwDHCPSIPInUseIP=hwDHCPSIPInUseIP, hwDHCPSInterfacePoolExpiredBindingNum=hwDHCPSInterfacePoolExpiredBindingNum, hwDHCPSGlobalPoolRowStatus=hwDHCPSGlobalPoolRowStatus, hwDHCPSInterfacePoolLeaseHour=hwDHCPSInterfacePoolLeaseHour, hwDHCPSForbiddenIPTable=hwDHCPSForbiddenIPTable, hwDHCPSConflictIPEntry=hwDHCPSConflictIPEntry, hwDHCPSGlobalPoolParaTable=hwDHCPSGlobalPoolParaTable, hwDHCPSForbiddenIPEnd=hwDHCPSForbiddenIPEnd, hwDHCPSInterfacePoolClientNetbiosType=hwDHCPSInterfacePoolClientNetbiosType, hwDHCPSInterfacePoolStaticBindMac=hwDHCPSInterfacePoolStaticBindMac, hwDHCPChastenEntry=hwDHCPChastenEntry, hwDHCPSInterfacePoolParaEntry=hwDHCPSInterfacePoolParaEntry, hwDHCPSGlobalPoolOptionType=hwDHCPSGlobalPoolOptionType, hwDHCPSGlobalPoolLogging=hwDHCPSGlobalPoolLogging, hwDHCPSInterfacePoolClientNbnsIPUndo=hwDHCPSInterfacePoolClientNbnsIPUndo, hwDHCPSDetectingServerStatus=hwDHCPSDetectingServerStatus, hwDHCPSInterfacePoolLeaseUnlimited=hwDHCPSInterfacePoolLeaseUnlimited, hwDHCPSGlobalPoolClientGatewayIPString=hwDHCPSGlobalPoolClientGatewayIPString, hwDHCPSGlobalPoolClientDNSIPString=hwDHCPSGlobalPoolClientDNSIPString, hwDHCPSInterfacePoolOptionRowStatus=hwDHCPSInterfacePoolOptionRowStatus, hwDHCPSInterfacePoolOptionCode=hwDHCPSInterfacePoolOptionCode, hwDHCPSGlobalPoolHostMask=hwDHCPSGlobalPoolHostMask, hwDHCPSRequestPktNum=hwDHCPSRequestPktNum, hwDHCPSIPInUsePoolName=hwDHCPSIPInUsePoolName, hwDHCPSGlobalPoolEntry=hwDHCPSGlobalPoolEntry, hwDHCPSIPPOOLForbiddenIPEntry=hwDHCPSIPPOOLForbiddenIPEntry, hwDHCPServerMIBConformance=hwDHCPServerMIBConformance, hwDHCPServerMIBGroups=hwDHCPServerMIBGroups, hwDHCPSGlobalPoolOptionAscii=hwDHCPSGlobalPoolOptionAscii, hwDHCPSInterfacePoolOptionEntry=hwDHCPSInterfacePoolOptionEntry, hwDHCPThroughPacket=hwDHCPThroughPacket, hwDHCPSGlobalTreeSiblingNodeName=hwDHCPSGlobalTreeSiblingNodeName, hwDHCPSInterfacePoolOptionCipher=hwDHCPSInterfacePoolOptionCipher, hwDHCPSInterfacePoolAutoBindingNum=hwDHCPSInterfacePoolAutoBindingNum, hwDHCPSGlobalPoolParaUndoFlag=hwDHCPSGlobalPoolParaUndoFlag, hwDHCPServerMIBCompliance=hwDHCPServerMIBCompliance, hwDHCPSGlobalPoolHostIPAddr=hwDHCPSGlobalPoolHostIPAddr, hwDHCPChastenIndex=hwDHCPChastenIndex, hwDHCPSIPPOOLForbiddenIPVRFName=hwDHCPSIPPOOLForbiddenIPVRFName, hwDHCPSServiceStatus=hwDHCPSServiceStatus, hwDHCPSGlobalTreeParentNodeName=hwDHCPSGlobalTreeParentNodeName, hwDHCPSNakPktNum=hwDHCPSNakPktNum, hwDHCPSForbiddenIPEntry=hwDHCPSForbiddenIPEntry, hwDHCPSGlobalTreeChildNodeName=hwDHCPSGlobalTreeChildNodeName, hwDHCPSInterfacePoolIPInUseReset=hwDHCPSInterfacePoolIPInUseReset, hwDHCPChastenAutenPktNum=hwDHCPChastenAutenPktNum, hwDHCPSIPPOOLForbiddenIPStart=hwDHCPSIPPOOLForbiddenIPStart, hwDHCPSDeclinePktNum=hwDHCPSDeclinePktNum, hwDHCPSInterfacePoolLeaseDay=hwDHCPSInterfacePoolLeaseDay, hwDHCPSIPInUseEndLease=hwDHCPSIPInUseEndLease, hwDHCPSIPInUseTable=hwDHCPSIPInUseTable, hwDHCPSGlobalPoolLeaseUnlimited=hwDHCPSGlobalPoolLeaseUnlimited, hwDHCPSForbiddenIPStart=hwDHCPSForbiddenIPStart, hwDHCPSGlobalPoolExpiredBindingNum=hwDHCPSGlobalPoolExpiredBindingNum, hwDHCPSPingTimeout=hwDHCPSPingTimeout, hwDHCPSConflictIPDetectTime=hwDHCPSConflictIPDetectTime, hwDHCPSGlobalPoolManualBindingNum=hwDHCPSGlobalPoolManualBindingNum, hwDHCPSIPPOOLConflictIPType=hwDHCPSIPPOOLConflictIPType, PYSNMP_MODULE_ID=hwDHCPServerMib, hwDHCPSInterfacePoolClientDNSIPString=hwDHCPSInterfacePoolClientDNSIPString, hwDHCPSInterfacePoolDomainName=hwDHCPSInterfacePoolDomainName, hwDHCPSGlobalTreeTable=hwDHCPSGlobalTreeTable, hwDHCPSGlobalPoolParaEntry=hwDHCPSGlobalPoolParaEntry, hwDHCPSGlobalPoolOptionCipher=hwDHCPSGlobalPoolOptionCipher, hwDHCPSInterfacePoolConflictRecycleTime=hwDHCPSInterfacePoolConflictRecycleTime, hwDHCPSWriteDataDelay=hwDHCPSWriteDataDelay, hwDHCPSInterfacePoolParaTable=hwDHCPSInterfacePoolParaTable, hwDHCPSIPInUseVlan=hwDHCPSIPInUseVlan, hwDHCPSWriteDataRecover=hwDHCPSWriteDataRecover, hwDHCPSBootRequestPktNum=hwDHCPSBootRequestPktNum, hwDHCPSIPPOOLForbiddenIPTable=hwDHCPSIPPOOLForbiddenIPTable, hwDHCPSGlobalPoolOptionIPString=hwDHCPSGlobalPoolOptionIPString, hwDHCPSGlobalPoolHostHAddr=hwDHCPSGlobalPoolHostHAddr, hwDHCPSInterfacePoolNumber=hwDHCPSInterfacePoolNumber, hwDHCPSInterfacePoolStaticBindRowStatus=hwDHCPSInterfacePoolStaticBindRowStatus, hwDHCPSInterfacePoolOptionTable=hwDHCPSInterfacePoolOptionTable, hwDHCPSGlobalPoolClientNbnsIPString=hwDHCPSGlobalPoolClientNbnsIPString, hwDHCPSIPPOOLConflictIPDetectTime=hwDHCPSIPPOOLConflictIPDetectTime, hwDHCPSGlobalPoolLeaseDay=hwDHCPSGlobalPoolLeaseDay, hwDHCPSGlobalPoolLeaseMinute=hwDHCPSGlobalPoolLeaseMinute, hwDHCPSGlobalPoolOptionHexString=hwDHCPSGlobalPoolOptionHexString, hwDHCPSGlobalPoolOptionCode=hwDHCPSGlobalPoolOptionCode, hwDHCPSIPPOOLForbiddenIPRowStatus=hwDHCPSIPPOOLForbiddenIPRowStatus, hwDHCPSGlobalPoolClientGatewayIPUndo=hwDHCPSGlobalPoolClientGatewayIPUndo, hwDHCPSGlobalTreeEntry=hwDHCPSGlobalTreeEntry, hwDHCPSConflictIPTable=hwDHCPSConflictIPTable, hwDHCPSGlobalPoolDomainName=hwDHCPSGlobalPoolDomainName, hwDHCPSGlobalPoolConfigTable=hwDHCPSGlobalPoolConfigTable, hwDHCPSInterfacePoolStaticBindTable=hwDHCPSInterfacePoolStaticBindTable, hwDHCPSStatisticsReset=hwDHCPSStatisticsReset, hwDHCPSIPPOOLConflictIPVRFName=hwDHCPSIPPOOLConflictIPVRFName, hwDHCPSGlobalPoolNetwork=hwDHCPSGlobalPoolNetwork, hwDHCPSGlobalPoolClientNetbiosType=hwDHCPSGlobalPoolClientNetbiosType, hwDHCPSIPInUseEntry=hwDHCPSIPInUseEntry, hwDHCPSGlobalPoolAutoBindingNum=hwDHCPSGlobalPoolAutoBindingNum, hwDHCPServerMib=hwDHCPServerMib, hwDHCPSConflictIP=hwDHCPSConflictIP, hwDHCPChastenTable=hwDHCPChastenTable, hwDHCPChastenChastenPeriod=hwDHCPChastenChastenPeriod, hwDHCPSIPInUseHAddr=hwDHCPSIPInUseHAddr, hwDHCPSInterfacePoolOptionType=hwDHCPSInterfacePoolOptionType, hwDHCPSGlobalPoolOptionTable=hwDHCPSGlobalPoolOptionTable, hwDHCPSIPInUseResetIP=hwDHCPSIPInUseResetIP, hwDHCPSForbiddenIPRowStatus=hwDHCPSForbiddenIPRowStatus, hwDHCPSPingNum=hwDHCPSPingNum, hwDHCPSIPPOOLConflictIPTable=hwDHCPSIPPOOLConflictIPTable, hwDHCPSInterfacePoolParaUndoFlag=hwDHCPSInterfacePoolParaUndoFlag, hwDHCPSBootReplyPktNum=hwDHCPSBootReplyPktNum, hwDHCPSInformPktNum=hwDHCPSInformPktNum, hwDHCPChastenPktNum=hwDHCPChastenPktNum, hwDHCPSGlobalTreePreSiblingNodeName=hwDHCPSGlobalTreePreSiblingNodeName, hwDHCPSDiscoverPktNum=hwDHCPSDiscoverPktNum, hwDHCPSAckPktNum=hwDHCPSAckPktNum, hwDHCPSIPPOOLConflictIP=hwDHCPSIPPOOLConflictIP, hwDHCPSWriteDataStatus=hwDHCPSWriteDataStatus, hwDHCPSWriteDataDirection=hwDHCPSWriteDataDirection, hwDHCPSGlobalPoolTable=hwDHCPSGlobalPoolTable, hwDHCPSIPInUseAtmpvc=hwDHCPSIPInUseAtmpvc, hwDHCPSInterfacePoolStaticBindIP=hwDHCPSInterfacePoolStaticBindIP, hwDHCPSConflictIPType=hwDHCPSConflictIPType, hwDHCPSBadPktNum=hwDHCPSBadPktNum, hwDHCPSInterfacePoolLeaseMinute=hwDHCPSInterfacePoolLeaseMinute, hwDHCPSInterfacePoolManualBindingNum=hwDHCPSInterfacePoolManualBindingNum, hwDHCPServerMibObject=hwDHCPServerMibObject, hwDHCPSGlobalPoolConfigEntry=hwDHCPSGlobalPoolConfigEntry, hwDHCPSIPInUseType=hwDHCPSIPInUseType, hwDHCPSInterfacePoolLogging=hwDHCPSInterfacePoolLogging, hwDHCPSIPInUseInterface=hwDHCPSIPInUseInterface, hwDHCPServerMIBCompliances=hwDHCPServerMIBCompliances, hwDHCPSGlobalPoolNumber=hwDHCPSGlobalPoolNumber, hwDHCPSGlobalPoolType=hwDHCPSGlobalPoolType, hwDHCPSIPPOOLConflictIPEntry=hwDHCPSIPPOOLConflictIPEntry, hwDHCPSInterfacePoolStaticBindEntry=hwDHCPSInterfacePoolStaticBindEntry, hwDHCPSGlobalPoolOptionEntry=hwDHCPSGlobalPoolOptionEntry, hwDHCPSInterfacePoolClientNbnsIPString=hwDHCPSInterfacePoolClientNbnsIPString, hwDHCPSIPResetFlag=hwDHCPSIPResetFlag, hwDHCPSInterfacePoolOptionAscii=hwDHCPSInterfacePoolOptionAscii, hwDHCPChastenChastenRowStatus=hwDHCPChastenChastenRowStatus, hwDHCPSReleasePktNum=hwDHCPSReleasePktNum, hwDHCPChastenCheckPeriod=hwDHCPChastenCheckPeriod)
