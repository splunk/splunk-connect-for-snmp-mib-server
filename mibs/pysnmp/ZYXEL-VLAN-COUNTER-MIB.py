#
# PySNMP MIB module ZYXEL-VLAN-COUNTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-VLAN-COUNTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Counter64, ObjectIdentity, TimeTicks, NotificationType, Gauge32, Unsigned32, ModuleIdentity, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "ObjectIdentity", "TimeTicks", "NotificationType", "Gauge32", "Unsigned32", "ModuleIdentity", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "Bits")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelVlanCounter = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87))
if mibBuilder.loadTexts: zyxelVlanCounter.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelVlanCounter.setOrganization('Enterprise Solution ZyXEL')
zyxelVlanCounterSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1))
zyxelVlanCounterStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2))
zyxelVlanCounterTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1, 1), )
if mibBuilder.loadTexts: zyxelVlanCounterTable.setStatus('current')
zyxelVlanCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1, 1, 1), ).setIndexNames((0, "ZYXEL-VLAN-COUNTER-MIB", "zyVlanCounterVid"))
if mibBuilder.loadTexts: zyxelVlanCounterEntry.setStatus('current')
zyVlanCounterVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: zyVlanCounterVid.setStatus('current')
zyVlanCounterTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanCounterTimeout.setStatus('current')
zyVlanCounterPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanCounterPorts.setStatus('current')
zyVlanCounterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyVlanCounterRowStatus.setStatus('current')
zyxelVlanCounterInfoTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1), )
if mibBuilder.loadTexts: zyxelVlanCounterInfoTable.setStatus('current')
zyxelVlanCounterInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1), ).setIndexNames((0, "ZYXEL-VLAN-COUNTER-MIB", "zyVlanCounterInfoVid"))
if mibBuilder.loadTexts: zyxelVlanCounterInfoEntry.setStatus('current')
zyVlanCounterInfoVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: zyVlanCounterInfoVid.setStatus('current')
zyVlanCounterInfoHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCOctets.setStatus('current')
zyVlanCounterInfoHCPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets.setStatus('current')
zyVlanCounterInfoHCMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCMulticastPackets.setStatus('current')
zyVlanCounterInfoHCBroadcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCBroadcastPackets.setStatus('current')
zyVlanCounterInfoHCTaggedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCTaggedPackets.setStatus('current')
zyVlanCounterInfoHCPackets64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets64Octets.setStatus('current')
zyVlanCounterInfoHCPackets65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets65to127Octets.setStatus('current')
zyVlanCounterInfoHCPackets128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets128to255Octets.setStatus('current')
zyVlanCounterInfoHCPackets256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets256to511Octets.setStatus('current')
zyVlanCounterInfoHCPackets512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets512to1023Octets.setStatus('current')
zyVlanCounterInfoHCPackets1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCPackets1024to1518Octets.setStatus('current')
zyVlanCounterInfoHCOversizePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 87, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyVlanCounterInfoHCOversizePackets.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-VLAN-COUNTER-MIB", zyVlanCounterInfoHCPackets256to511Octets=zyVlanCounterInfoHCPackets256to511Octets, zyxelVlanCounter=zyxelVlanCounter, zyxelVlanCounterSetup=zyxelVlanCounterSetup, zyVlanCounterInfoHCBroadcastPackets=zyVlanCounterInfoHCBroadcastPackets, zyVlanCounterInfoHCOversizePackets=zyVlanCounterInfoHCOversizePackets, zyVlanCounterInfoHCPackets128to255Octets=zyVlanCounterInfoHCPackets128to255Octets, zyxelVlanCounterInfoEntry=zyxelVlanCounterInfoEntry, zyVlanCounterInfoHCTaggedPackets=zyVlanCounterInfoHCTaggedPackets, zyVlanCounterInfoHCPackets512to1023Octets=zyVlanCounterInfoHCPackets512to1023Octets, zyVlanCounterInfoHCPackets64Octets=zyVlanCounterInfoHCPackets64Octets, zyVlanCounterVid=zyVlanCounterVid, zyVlanCounterRowStatus=zyVlanCounterRowStatus, zyVlanCounterTimeout=zyVlanCounterTimeout, zyVlanCounterPorts=zyVlanCounterPorts, zyxelVlanCounterStatus=zyxelVlanCounterStatus, zyxelVlanCounterTable=zyxelVlanCounterTable, PYSNMP_MODULE_ID=zyxelVlanCounter, zyVlanCounterInfoHCPackets65to127Octets=zyVlanCounterInfoHCPackets65to127Octets, zyVlanCounterInfoHCPackets1024to1518Octets=zyVlanCounterInfoHCPackets1024to1518Octets, zyVlanCounterInfoHCOctets=zyVlanCounterInfoHCOctets, zyVlanCounterInfoHCPackets=zyVlanCounterInfoHCPackets, zyVlanCounterInfoHCMulticastPackets=zyVlanCounterInfoHCMulticastPackets, zyxelVlanCounterEntry=zyxelVlanCounterEntry, zyVlanCounterInfoVid=zyVlanCounterInfoVid, zyxelVlanCounterInfoTable=zyxelVlanCounterInfoTable)
