#
# PySNMP MIB module ZhoneAPON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZhoneAPON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifHCInMulticastPkts, ifHCOutOctets, ifAlias, ifVHCPacketGroup, ifPromiscuousMode, ifRcvAddressStatus, ifHCOutMulticastPkts, ifName, ifOutMulticastPkts, ifCompliance2, ifOutBroadcastPkts, ifTestOwner, ifStackLowerLayer, ifFixedLengthGroup, ifTestStatus, ifCompliance, ifHCInOctets, ifTestId, ifStackGroup, ifHCInBroadcastPkts, ifNumber, ifStackStatus, ifTestGroup, ifConnectorPresent, ifStackLastChange, ifStackGroup2, ifRcvAddressGroup, ifLinkUpDownTrapEnable, ifTableLastChange, ifPacketGroup, ifOldObjectsGroup, ifRcvAddressType, ifInMulticastPkts, ifStackHigherLayer, ifGeneralGroup, ifHCFixedLengthGroup, ifIndex, ifHighSpeed, ifRcvAddressAddress, ifGeneralInformationGroup, ifHCOutBroadcastPkts, ifHCInUcastPkts, ifInBroadcastPkts, ifHCPacketGroup, ifCounterDiscontinuityTime, ifTestCode, ifCounterDiscontinuityGroup, ifHCOutUcastPkts, ifTestResult, ifTestType = mibBuilder.importSymbols("IF-MIB", "ifHCInMulticastPkts", "ifHCOutOctets", "ifAlias", "ifVHCPacketGroup", "ifPromiscuousMode", "ifRcvAddressStatus", "ifHCOutMulticastPkts", "ifName", "ifOutMulticastPkts", "ifCompliance2", "ifOutBroadcastPkts", "ifTestOwner", "ifStackLowerLayer", "ifFixedLengthGroup", "ifTestStatus", "ifCompliance", "ifHCInOctets", "ifTestId", "ifStackGroup", "ifHCInBroadcastPkts", "ifNumber", "ifStackStatus", "ifTestGroup", "ifConnectorPresent", "ifStackLastChange", "ifStackGroup2", "ifRcvAddressGroup", "ifLinkUpDownTrapEnable", "ifTableLastChange", "ifPacketGroup", "ifOldObjectsGroup", "ifRcvAddressType", "ifInMulticastPkts", "ifStackHigherLayer", "ifGeneralGroup", "ifHCFixedLengthGroup", "ifIndex", "ifHighSpeed", "ifRcvAddressAddress", "ifGeneralInformationGroup", "ifHCOutBroadcastPkts", "ifHCInUcastPkts", "ifInBroadcastPkts", "ifHCPacketGroup", "ifCounterDiscontinuityTime", "ifTestCode", "ifCounterDiscontinuityGroup", "ifHCOutUcastPkts", "ifTestResult", "ifTestType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, iso, Counter32, ModuleIdentity, Bits, NotificationType, ObjectIdentity, Gauge32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "iso", "Counter32", "ModuleIdentity", "Bits", "NotificationType", "ObjectIdentity", "Gauge32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32")
TextualConvention, DisplayString, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "TimeStamp")
zhoneShelfSlotCompliance, zhoneWtn, zhoneInterfaceGroup, zhoneEnet, zhonePls, zhoneDrafts, sechtor300, zhoneVoip, zhoneDsx, zhoneRegWtn, zhoneRegSechtor, zhoneZmsProduct, zhoneShelf, zhoneSubscriber, zhoneSystem, zhoneInterfaceTranslation, zhoneDsl, sipTC, zhoneRadio, zhoneSlotIndex, zhoneVoiceStats, zhoneRegMalc, zhoneZplex, zhoneSonet, zhonePhysical, zhoneTrapModules, zhoneShelfSlotGroup, zhoneModules, zhoneOcx, zhoneVoice, zhoneLineTypes, zhoneDs3Ext, zhoneCard, zhoneAtm, sipCommonMIB, sipUAMIB, zhoneRegPls, zhoneZedge, zhoneGenWtn, zhonePpp, zhoneRegMux, sechtor100, zhoneMalc, zhoneIma, zhoneIp, zhoneGroups, apsMIB, zhoneRegCpe, zhoneConsole, zhoneZAP, zhoneShelfIndex, zhoneBridge, zhoneMasterAgent = mibBuilder.importSymbols("Zhone", "zhoneShelfSlotCompliance", "zhoneWtn", "zhoneInterfaceGroup", "zhoneEnet", "zhonePls", "zhoneDrafts", "sechtor300", "zhoneVoip", "zhoneDsx", "zhoneRegWtn", "zhoneRegSechtor", "zhoneZmsProduct", "zhoneShelf", "zhoneSubscriber", "zhoneSystem", "zhoneInterfaceTranslation", "zhoneDsl", "sipTC", "zhoneRadio", "zhoneSlotIndex", "zhoneVoiceStats", "zhoneRegMalc", "zhoneZplex", "zhoneSonet", "zhonePhysical", "zhoneTrapModules", "zhoneShelfSlotGroup", "zhoneModules", "zhoneOcx", "zhoneVoice", "zhoneLineTypes", "zhoneDs3Ext", "zhoneCard", "zhoneAtm", "sipCommonMIB", "sipUAMIB", "zhoneRegPls", "zhoneZedge", "zhoneGenWtn", "zhonePpp", "zhoneRegMux", "sechtor100", "zhoneMalc", "zhoneIma", "zhoneIp", "zhoneGroups", "apsMIB", "zhoneRegCpe", "zhoneConsole", "zhoneZAP", "zhoneShelfIndex", "zhoneBridge", "zhoneMasterAgent")
ZhoneAdminString, ZhoneRowStatus = mibBuilder.importSymbols("Zhone-TC", "ZhoneAdminString", "ZhoneRowStatus")
zhoneAponMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1))
zhoneAponMIB.setRevisions(('2006-04-25 11:03', '2005-04-18 14:42', '2004-06-09 11:56', '2004-03-25 16:27', '2003-12-08 15:29', '2003-11-19 12:49', '2003-08-18 15:59', '2003-08-12 11:25', '2003-08-05 10:12',))
if mibBuilder.loadTexts: zhoneAponMIB.setLastUpdated('200604251445Z')
if mibBuilder.loadTexts: zhoneAponMIB.setOrganization('Zhone Terchnologies, Inc.')
zhoneApon = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 5, 12))
if mibBuilder.loadTexts: zhoneApon.setStatus('current')
zhoneOltConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2), )
if mibBuilder.loadTexts: zhoneOltConfigTable.setStatus('current')
zhoneOltConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneOltConfigEntry.setStatus('current')
zhoneOltConfigAutoLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oltAutolearnEnable", 1), ("oltAutolearnDisable", 2))).clone('oltAutolearnDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigAutoLearn.setStatus('current')
zhoneOltConfigCellScrambling = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("oltCellScramblingOff", 1), ("oltCellScramblingRxOnly", 2), ("oltCellScramblingTxOnly", 3), ("oltCellScramblingRxAndTx", 4))).clone('oltCellScramblingRxAndTx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigCellScrambling.setStatus('current')
zhoneOltConfigBip8 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("oltBip8Off", 1), ("oltBip8RxCorrectionOnly", 2), ("oltBip8TxGenerationOnly", 3), ("oltBip8RxAndTx", 4))).clone('oltBip8TxGenerationOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigBip8.setStatus('current')
zhoneOltConfigHec = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("oltHecOff", 1), ("oltHecRxCorrectionOnly", 2), ("oltHecTxGenerationOnly", 3), ("oltHecRxAndTx", 4))).clone('oltHecRxCorrectionOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigHec.setStatus('current')
zhoneOltConfigHecRxBypass = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigHecRxBypass.setStatus('current')
zhoneOltConfigCrcRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigCrcRx.setStatus('current')
zhoneOltConfigOverheadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("oltPonOverhead3Bytes", 1), ("oltPonOverhead6Bytes", 2), ("oltPonOverhead12Bytes", 3))).clone('oltPonOverhead3Bytes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigOverheadSize.setStatus('current')
zhoneOltConfigDelimiterPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigDelimiterPattern.setStatus('current')
zhoneOltConfigDelimiterSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 16)).clone(8)).setUnits('Number of bits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigDelimiterSize.setStatus('current')
zhoneOltConfigCdrPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigCdrPattern.setStatus('current')
zhoneOltConfigCdrLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigCdrLocation.setStatus('current')
zhoneOltConfigCdrActiveHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigCdrActiveHigh.setStatus('current')
zhoneOltConfigCpeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigCpeLimit.setStatus('current')
zhoneOltConfigLcdLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigLcdLimit.setStatus('current')
zhoneOltConfigLcdAlpha = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigLcdAlpha.setStatus('current')
zhoneOltConfigLcdDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigLcdDelta.setStatus('current')
zhoneOltConfigTxDiscardNonMatchingVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigTxDiscardNonMatchingVpi.setStatus('current')
zhoneOltConfigUtopiaDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigUtopiaDiscard.setStatus('current')
zhoneOltConfigSyncBytesClkDivisor = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigSyncBytesClkDivisor.setStatus('current')
zhoneOltConfigTxSyncBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("txSyncBytesEnable", 1), ("txSyncBytesDisable", 2))).clone('txSyncBytesDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigTxSyncBytes.setStatus('current')
zhoneOltConfigLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("loopbackNone", 1), ("loopbackInward", 2), ("loopbackLine", 3))).clone('loopbackNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigLoopback.setStatus('current')
zhoneOltConfigMaxPonDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(200)).setUnits('Distance in microseconds, used in the ranging process.').setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigMaxPonDistance.setStatus('current')
zhoneOltConfigLineStatusChangeTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltConfigLineStatusChangeTrapEnable.setStatus('current')
zhoneOltStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3), )
if mibBuilder.loadTexts: zhoneOltStatusTable.setStatus('current')
zhoneOltStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneOltStatusEntry.setStatus('current')
zhoneOltStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oltStateDown", 1), ("oltStateUp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusState.setStatus('current')
zhoneOltStatusLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("oltLoopbackNone", 1), ("oltLoopbackInward", 2), ("oltLoopbackLine", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusLoopback.setStatus('current')
zhoneOltStatusPonAlarmLPHY = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmLPHY.setStatus('current')
zhoneOltStatusPonAlarmTF = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmTF.setStatus('current')
zhoneOltStatusPonAlarmSUF = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmSUF.setStatus('current')
zhoneOltStatusPonAlarmPEE = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmPEE.setStatus('current')
zhoneOltStatusPonAlarmLCD = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmLCD.setStatus('current')
zhoneOltStatusPonAlarmLOS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmLOS.setStatus('current')
zhoneOltStatusPonAlarmOAML = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmOAML.setStatus('current')
zhoneOltStatusPonAlarmCPE = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusPonAlarmCPE.setStatus('current')
zhoneOltStatusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 3, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltStatusLastChange.setStatus('current')
zhoneOltOnuConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 4), )
if mibBuilder.loadTexts: zhoneOltOnuConfigTable.setStatus('current')
zhoneOltOnuConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneOltOnuConfigEntry.setStatus('current')
zhoneOltOnuConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 4, 1, 1), ZhoneAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltOnuConfigPassword.setStatus('current')
zhoneOltOnuConfigSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltOnuConfigSerialNum.setStatus('current')
zhoneOltOnuConfigChurnkey = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onuChurnkeyEnable", 1), ("onuChurnkeyDisable", 2))).clone('onuChurnkeyDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltOnuConfigChurnkey.setStatus('current')
zhoneOltOnuConfigLineStatusChangeTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOltOnuConfigLineStatusChangeTrapEnable.setStatus('current')
zhoneOltOnuStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5), )
if mibBuilder.loadTexts: zhoneOltOnuStatusTable.setStatus('current')
zhoneOltOnuStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneOltOnuStatusEntry.setStatus('current')
zhoneOltOnuStatusPonAlarmLOA = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmLOA.setStatus('current')
zhoneOltOnuStatusPonAlarmERR = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmERR.setStatus('current')
zhoneOltOnuStatusPonAlarmSD = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmSD.setStatus('current')
zhoneOltOnuStatusPonAlarmREI = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmREI.setStatus('current')
zhoneOltOnuStatusPonAlarmMEM = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmMEM.setStatus('current')
zhoneOltOnuStatusPonAlarmRXINH = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmRXINH.setStatus('current')
zhoneOltOnuStatusPonAlarmLOS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmLOS.setStatus('current')
zhoneOltOnuStatusPonAlarmPEE = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmPEE.setStatus('current')
zhoneOltOnuStatusPonAlarmSUF = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmSUF.setStatus('current')
zhoneOltOnuStatusPonAlarmOAML = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmOAML.setStatus('current')
zhoneOltOnuStatusPonAlarmLCD = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 5, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltOnuStatusPonAlarmLCD.setStatus('current')
zhoneOnuConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6), )
if mibBuilder.loadTexts: zhoneOnuConfigTable.setStatus('current')
zhoneOnuConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneOnuConfigEntry.setStatus('current')
zhoneOnuConfigSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuConfigSerialNumber.setStatus('current')
zhoneOnuConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 2), ZhoneAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOnuConfigPassword.setStatus('current')
zhoneOnuConfigNetworkRefClk = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOnuConfigNetworkRefClk.setStatus('current')
zhoneOnuConfigHEC = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("onuOff", 1), ("onuRxCorrectionOnly", 2), ("onuTxGenerationOnly", 3), ("onuRxAndTx", 4))).clone('onuRxAndTx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOnuConfigHEC.setStatus('current')
zhoneOnuConfigLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onuNone", 1), ("onuInward", 2), ("onuLine", 3))).clone('onuLine')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOnuConfigLoopback.setStatus('current')
zhoneOnuConfigOverheadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onuOverheadSize3Bytes", 1), ("onuOverheadSize6Bytes", 2), ("onuOverheadSize12Bytes", 3))).clone('onuOverheadSize3Bytes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOnuConfigOverheadSize.setStatus('current')
zhoneOnuConfigRfVideo = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhoneOnuConfigRfVideo.setStatus('current')
zhoneOnuStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7), )
if mibBuilder.loadTexts: zhoneOnuStatusTable.setStatus('current')
zhoneOnuStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zhoneOnuStatusEntry.setStatus('current')
zhoneOnuStatusOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onuStateDown", 1), ("onuStateUp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusOperStatus.setStatus('current')
zhoneOnuStatusLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onuNone", 1), ("onuInward", 2), ("onuLine", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusLoopback.setStatus('current')
zhoneOnuStatusAlarmTF = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmTF.setStatus('current')
zhoneOnuStatusAlarmLOS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmLOS.setStatus('current')
zhoneOnuStatusAlarmPEE = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmPEE.setStatus('current')
zhoneOnuStatusAlarmSUF = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmSUF.setStatus('current')
zhoneOnuStatusAlarmOAML = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmOAML.setStatus('current')
zhoneOnuStatusAlarmLCD = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmLCD.setStatus('current')
zhoneOnuStatusAlarmFRML = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmFRML.setStatus('current')
zhoneOnuStatusAlarmERR = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmERR.setStatus('current')
zhoneOnuStatusAlarmSD = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmSD.setStatus('current')
zhoneOnuStatusAlarmMEM = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmMEM.setStatus('current')
zhoneOnuStatusAlarmDACT = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmDACT.setStatus('current')
zhoneOnuStatusAlarmDIS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmDIS.setStatus('current')
zhoneOnuStatusAlarmMIS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusAlarmMIS.setStatus('current')
zhoneOnuStatusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 7, 1, 16), TimeStamp().clone(0)).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOnuStatusLastChange.setStatus('current')
zhoneOltTrafficContainerIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneOltTrafficContainerIndexNext.setStatus('current')
zhoneOltTrafficContainerTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9), )
if mibBuilder.loadTexts: zhoneOltTrafficContainerTable.setStatus('current')
zhoneOltTrafficContainerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1), ).setIndexNames((0, "ZhoneAPON-MIB", "zhoneOltTrafficContainerIndex"))
if mibBuilder.loadTexts: zhoneOltTrafficContainerEntry.setStatus('current')
zhoneOltTrafficContainerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: zhoneOltTrafficContainerIndex.setStatus('current')
zhoneOltTrafficContainerGuaranteedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Megabits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneOltTrafficContainerGuaranteedBW.setStatus('current')
zhoneOltTrafficContainerMaximumBW = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneOltTrafficContainerMaximumBW.setStatus('current')
zhoneOltTrafficContainerCBR = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneOltTrafficContainerCBR.setStatus('current')
zhoneOltTrafficContainerCbrCompensate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneOltTrafficContainerCbrCompensate.setStatus('current')
zhoneOltTrafficContainerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 5, 12, 1, 9, 1, 6), ZhoneRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneOltTrafficContainerRowStatus.setStatus('current')
zhoneAponTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 5, 12, 3))
if mibBuilder.loadTexts: zhoneAponTraps.setStatus('current')
zhoneAPONV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 5, 12, 3, 0))
if mibBuilder.loadTexts: zhoneAPONV2Traps.setStatus('current')
zhoneOltLineStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 12, 3, 0, 1)).setObjects(("ZhoneAPON-MIB", "zhoneOltStatusLastChange"), ("IF-MIB", "ifAlias"))
if mibBuilder.loadTexts: zhoneOltLineStatusChangeTrap.setStatus('current')
zhoneOnuLineStatusChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 5504, 5, 12, 3, 0, 2)).setObjects(("ZhoneAPON-MIB", "zhoneOnuStatusLastChange"), ("IF-MIB", "ifAlias"))
if mibBuilder.loadTexts: zhoneOnuLineStatusChangeTrap.setStatus('current')
zhoneAponOltConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 2)).setObjects(("ZhoneAPON-MIB", "zhoneOltConfigCellScrambling"), ("ZhoneAPON-MIB", "zhoneOltConfigBip8"), ("ZhoneAPON-MIB", "zhoneOltConfigHec"), ("ZhoneAPON-MIB", "zhoneOltConfigHecRxBypass"), ("ZhoneAPON-MIB", "zhoneOltConfigCrcRx"), ("ZhoneAPON-MIB", "zhoneOltConfigOverheadSize"), ("ZhoneAPON-MIB", "zhoneOltConfigDelimiterPattern"), ("ZhoneAPON-MIB", "zhoneOltConfigDelimiterSize"), ("ZhoneAPON-MIB", "zhoneOltConfigCdrPattern"), ("ZhoneAPON-MIB", "zhoneOltConfigCdrLocation"), ("ZhoneAPON-MIB", "zhoneOltConfigCdrActiveHigh"), ("ZhoneAPON-MIB", "zhoneOltConfigCpeLimit"), ("ZhoneAPON-MIB", "zhoneOltConfigLcdLimit"), ("ZhoneAPON-MIB", "zhoneOltConfigLcdAlpha"), ("ZhoneAPON-MIB", "zhoneOltConfigLcdDelta"), ("ZhoneAPON-MIB", "zhoneOltConfigTxDiscardNonMatchingVpi"), ("ZhoneAPON-MIB", "zhoneOltConfigUtopiaDiscard"), ("ZhoneAPON-MIB", "zhoneOltConfigLineStatusChangeTrapEnable"), ("ZhoneAPON-MIB", "zhoneOltConfigLoopback"), ("ZhoneAPON-MIB", "zhoneOltConfigAutoLearn"), ("ZhoneAPON-MIB", "zhoneOltConfigSyncBytesClkDivisor"), ("ZhoneAPON-MIB", "zhoneOltConfigTxSyncBytes"), ("ZhoneAPON-MIB", "zhoneOltConfigMaxPonDistance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOltConfigGroup = zhoneAponOltConfigGroup.setStatus('current')
zhoneAponOltStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 3)).setObjects(("ZhoneAPON-MIB", "zhoneOltStatusState"), ("ZhoneAPON-MIB", "zhoneOltStatusLoopback"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmLPHY"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmTF"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmSUF"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmPEE"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmLCD"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmLOS"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmOAML"), ("ZhoneAPON-MIB", "zhoneOltStatusPonAlarmCPE"), ("ZhoneAPON-MIB", "zhoneOltStatusLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOltStatusGroup = zhoneAponOltStatusGroup.setStatus('current')
zhoneAponOltOnuConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 4)).setObjects(("ZhoneAPON-MIB", "zhoneOltOnuConfigPassword"), ("ZhoneAPON-MIB", "zhoneOltOnuConfigSerialNum"), ("ZhoneAPON-MIB", "zhoneOltOnuConfigChurnkey"), ("ZhoneAPON-MIB", "zhoneOltOnuConfigLineStatusChangeTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOltOnuConfigGroup = zhoneAponOltOnuConfigGroup.setStatus('current')
zhoneAponOltOnuStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 5)).setObjects(("ZhoneAPON-MIB", "zhoneOltOnuStatusPonAlarmLOA"), ("ZhoneAPON-MIB", "zhoneOltOnuStatusPonAlarmERR"), ("ZhoneAPON-MIB", "zhoneOltOnuStatusPonAlarmSD"), ("ZhoneAPON-MIB", "zhoneOltOnuStatusPonAlarmREI"), ("ZhoneAPON-MIB", "zhoneOltOnuStatusPonAlarmMEM"), ("ZhoneAPON-MIB", "zhoneOltOnuStatusPonAlarmRXINH"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOltOnuStatusGroup = zhoneAponOltOnuStatusGroup.setStatus('current')
zhoneAponOnuConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 6)).setObjects(("ZhoneAPON-MIB", "zhoneOnuConfigSerialNumber"), ("ZhoneAPON-MIB", "zhoneOnuConfigPassword"), ("ZhoneAPON-MIB", "zhoneOnuConfigNetworkRefClk"), ("ZhoneAPON-MIB", "zhoneOnuConfigHEC"), ("ZhoneAPON-MIB", "zhoneOnuConfigLoopback"), ("ZhoneAPON-MIB", "zhoneOnuConfigOverheadSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOnuConfigGroup = zhoneAponOnuConfigGroup.setStatus('current')
zhoneAponOnuStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 7)).setObjects(("ZhoneAPON-MIB", "zhoneOnuStatusLoopback"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmTF"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmLOS"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmPEE"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmSUF"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmOAML"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmLCD"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmFRML"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmERR"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmSD"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmMEM"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmDACT"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmDIS"), ("ZhoneAPON-MIB", "zhoneOnuStatusAlarmMIS"), ("ZhoneAPON-MIB", "zhoneOnuStatusOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOnuStatusGroup = zhoneAponOnuStatusGroup.setStatus('current')
zhoneAponOltTrafficContainerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 8)).setObjects(("ZhoneAPON-MIB", "zhoneOltTrafficContainerMaximumBW"), ("ZhoneAPON-MIB", "zhoneOltTrafficContainerCBR"), ("ZhoneAPON-MIB", "zhoneOltTrafficContainerIndexNext"), ("ZhoneAPON-MIB", "zhoneOltTrafficContainerCbrCompensate"), ("ZhoneAPON-MIB", "zhoneOltTrafficContainerRowStatus"), ("ZhoneAPON-MIB", "zhoneOltTrafficContainerGuaranteedBW"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponOltTrafficContainerGroup = zhoneAponOltTrafficContainerGroup.setStatus('current')
zhoneAponTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 9, 1, 9)).setObjects(("ZhoneAPON-MIB", "zhoneOltLineStatusChangeTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAponTrapsGroup = zhoneAponTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("ZhoneAPON-MIB", zhoneOnuStatusAlarmTF=zhoneOnuStatusAlarmTF, zhoneOltStatusPonAlarmLCD=zhoneOltStatusPonAlarmLCD, zhoneOltOnuConfigChurnkey=zhoneOltOnuConfigChurnkey, zhoneOltStatusTable=zhoneOltStatusTable, zhoneOltConfigSyncBytesClkDivisor=zhoneOltConfigSyncBytesClkDivisor, zhoneOltStatusPonAlarmOAML=zhoneOltStatusPonAlarmOAML, zhoneOltConfigCrcRx=zhoneOltConfigCrcRx, zhoneOltStatusEntry=zhoneOltStatusEntry, zhoneOltOnuStatusTable=zhoneOltOnuStatusTable, zhoneAponTrapsGroup=zhoneAponTrapsGroup, zhoneOnuConfigOverheadSize=zhoneOnuConfigOverheadSize, zhoneOltConfigCellScrambling=zhoneOltConfigCellScrambling, zhoneAponOltOnuStatusGroup=zhoneAponOltOnuStatusGroup, zhoneOltConfigLcdLimit=zhoneOltConfigLcdLimit, zhoneOltConfigAutoLearn=zhoneOltConfigAutoLearn, zhoneOltStatusPonAlarmLPHY=zhoneOltStatusPonAlarmLPHY, zhoneOltConfigMaxPonDistance=zhoneOltConfigMaxPonDistance, zhoneOnuConfigLoopback=zhoneOnuConfigLoopback, zhoneOltOnuConfigLineStatusChangeTrapEnable=zhoneOltOnuConfigLineStatusChangeTrapEnable, zhoneOltConfigUtopiaDiscard=zhoneOltConfigUtopiaDiscard, zhoneOltOnuStatusPonAlarmMEM=zhoneOltOnuStatusPonAlarmMEM, zhoneOltOnuStatusPonAlarmREI=zhoneOltOnuStatusPonAlarmREI, zhoneOnuStatusAlarmOAML=zhoneOnuStatusAlarmOAML, zhoneOnuStatusTable=zhoneOnuStatusTable, zhoneOltOnuConfigSerialNum=zhoneOltOnuConfigSerialNum, zhoneAponMIB=zhoneAponMIB, zhoneOltOnuStatusPonAlarmLCD=zhoneOltOnuStatusPonAlarmLCD, zhoneOnuLineStatusChangeTrap=zhoneOnuLineStatusChangeTrap, zhoneOltConfigCdrPattern=zhoneOltConfigCdrPattern, zhoneOltConfigCdrLocation=zhoneOltConfigCdrLocation, zhoneOltConfigLcdDelta=zhoneOltConfigLcdDelta, zhoneApon=zhoneApon, zhoneOltOnuStatusPonAlarmRXINH=zhoneOltOnuStatusPonAlarmRXINH, zhoneOnuStatusAlarmDACT=zhoneOnuStatusAlarmDACT, zhoneOnuConfigEntry=zhoneOnuConfigEntry, zhoneOltConfigHec=zhoneOltConfigHec, zhoneOnuStatusAlarmSUF=zhoneOnuStatusAlarmSUF, zhoneOnuStatusAlarmFRML=zhoneOnuStatusAlarmFRML, zhoneAponOltOnuConfigGroup=zhoneAponOltOnuConfigGroup, zhoneOltOnuStatusPonAlarmSUF=zhoneOltOnuStatusPonAlarmSUF, zhoneOnuStatusEntry=zhoneOnuStatusEntry, zhoneOnuStatusAlarmLCD=zhoneOnuStatusAlarmLCD, zhoneOltStatusPonAlarmLOS=zhoneOltStatusPonAlarmLOS, zhoneAponTraps=zhoneAponTraps, zhoneOltOnuConfigEntry=zhoneOltOnuConfigEntry, zhoneOltOnuStatusEntry=zhoneOltOnuStatusEntry, zhoneOltConfigLineStatusChangeTrapEnable=zhoneOltConfigLineStatusChangeTrapEnable, zhoneOnuConfigTable=zhoneOnuConfigTable, zhoneOltStatusPonAlarmSUF=zhoneOltStatusPonAlarmSUF, zhoneOltTrafficContainerCBR=zhoneOltTrafficContainerCBR, zhoneOltTrafficContainerMaximumBW=zhoneOltTrafficContainerMaximumBW, zhoneOltLineStatusChangeTrap=zhoneOltLineStatusChangeTrap, zhoneOltConfigTable=zhoneOltConfigTable, zhoneOltTrafficContainerEntry=zhoneOltTrafficContainerEntry, zhoneAponOltTrafficContainerGroup=zhoneAponOltTrafficContainerGroup, zhoneOltTrafficContainerCbrCompensate=zhoneOltTrafficContainerCbrCompensate, zhoneOltOnuStatusPonAlarmERR=zhoneOltOnuStatusPonAlarmERR, zhoneOnuStatusAlarmDIS=zhoneOnuStatusAlarmDIS, zhoneOltStatusState=zhoneOltStatusState, zhoneAponOltStatusGroup=zhoneAponOltStatusGroup, zhoneOltStatusLoopback=zhoneOltStatusLoopback, zhoneOltConfigLcdAlpha=zhoneOltConfigLcdAlpha, zhoneOltStatusPonAlarmCPE=zhoneOltStatusPonAlarmCPE, zhoneOltTrafficContainerRowStatus=zhoneOltTrafficContainerRowStatus, zhoneOltOnuStatusPonAlarmLOA=zhoneOltOnuStatusPonAlarmLOA, zhoneOnuConfigRfVideo=zhoneOnuConfigRfVideo, zhoneAponOltConfigGroup=zhoneAponOltConfigGroup, zhoneOltConfigLoopback=zhoneOltConfigLoopback, zhoneOltStatusPonAlarmPEE=zhoneOltStatusPonAlarmPEE, zhoneOltStatusPonAlarmTF=zhoneOltStatusPonAlarmTF, zhoneOltConfigCpeLimit=zhoneOltConfigCpeLimit, PYSNMP_MODULE_ID=zhoneAponMIB, zhoneOltOnuStatusPonAlarmLOS=zhoneOltOnuStatusPonAlarmLOS, zhoneAponOnuStatusGroup=zhoneAponOnuStatusGroup, zhoneOltOnuConfigPassword=zhoneOltOnuConfigPassword, zhoneOltOnuConfigTable=zhoneOltOnuConfigTable, zhoneOltStatusLastChange=zhoneOltStatusLastChange, zhoneOnuStatusAlarmERR=zhoneOnuStatusAlarmERR, zhoneOltConfigDelimiterSize=zhoneOltConfigDelimiterSize, zhoneOltConfigBip8=zhoneOltConfigBip8, zhoneOnuConfigPassword=zhoneOnuConfigPassword, zhoneOnuStatusAlarmMEM=zhoneOnuStatusAlarmMEM, zhoneAPONV2Traps=zhoneAPONV2Traps, zhoneOltTrafficContainerIndex=zhoneOltTrafficContainerIndex, zhoneOltConfigTxDiscardNonMatchingVpi=zhoneOltConfigTxDiscardNonMatchingVpi, zhoneOltOnuStatusPonAlarmSD=zhoneOltOnuStatusPonAlarmSD, zhoneOltTrafficContainerTable=zhoneOltTrafficContainerTable, zhoneOnuStatusLastChange=zhoneOnuStatusLastChange, zhoneOltOnuStatusPonAlarmPEE=zhoneOltOnuStatusPonAlarmPEE, zhoneOnuConfigHEC=zhoneOnuConfigHEC, zhoneAponOnuConfigGroup=zhoneAponOnuConfigGroup, zhoneOltConfigCdrActiveHigh=zhoneOltConfigCdrActiveHigh, zhoneOnuStatusLoopback=zhoneOnuStatusLoopback, zhoneOltTrafficContainerIndexNext=zhoneOltTrafficContainerIndexNext, zhoneOnuStatusAlarmSD=zhoneOnuStatusAlarmSD, zhoneOltTrafficContainerGuaranteedBW=zhoneOltTrafficContainerGuaranteedBW, zhoneOnuStatusOperStatus=zhoneOnuStatusOperStatus, zhoneOltConfigDelimiterPattern=zhoneOltConfigDelimiterPattern, zhoneOnuConfigSerialNumber=zhoneOnuConfigSerialNumber, zhoneOnuStatusAlarmMIS=zhoneOnuStatusAlarmMIS, zhoneOltOnuStatusPonAlarmOAML=zhoneOltOnuStatusPonAlarmOAML, zhoneOltConfigEntry=zhoneOltConfigEntry, zhoneOnuConfigNetworkRefClk=zhoneOnuConfigNetworkRefClk, zhoneOnuStatusAlarmLOS=zhoneOnuStatusAlarmLOS, zhoneOltConfigHecRxBypass=zhoneOltConfigHecRxBypass, zhoneOltConfigTxSyncBytes=zhoneOltConfigTxSyncBytes, zhoneOltConfigOverheadSize=zhoneOltConfigOverheadSize, zhoneOnuStatusAlarmPEE=zhoneOnuStatusAlarmPEE)
