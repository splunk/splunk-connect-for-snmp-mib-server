#
# PySNMP MIB module CISCO-LICENSE-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LICENSE-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:47:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, PhysicalIndexOrZero = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "PhysicalIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, TimeTicks, MibIdentifier, Unsigned32, Counter64, IpAddress, iso, ModuleIdentity, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "TimeTicks", "MibIdentifier", "Unsigned32", "Counter64", "IpAddress", "iso", "ModuleIdentity", "Gauge32", "NotificationType")
TextualConvention, StorageType, DateAndTime, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "DateAndTime", "DisplayString", "RowStatus", "TruthValue")
ciscoLicenseMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 543))
ciscoLicenseMgmtMIB.setRevisions(('2012-04-19 00:00', '2011-04-19 00:00', '2008-11-21 00:00', '2006-10-03 00:00',))
if mibBuilder.loadTexts: ciscoLicenseMgmtMIB.setLastUpdated('201204190000Z')
if mibBuilder.loadTexts: ciscoLicenseMgmtMIB.setOrganization('Cisco Systems Inc.')
ciscoLicenseMgmtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 0))
ciscoLicenseMgmtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 1))
ciscoLicenseMgmtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 2))
clmgmtLicenseConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1))
clmgmtLicenseInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2))
clmgmtLicenseDeviceInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3))
clmgmtLicenseNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 4))
class ClmgmtLicenseIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class ClmgmtLicenseIndexOrZero(TextualConvention, Unsigned32):
    status = 'current'

class ClmgmtLicenseTransferProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("none", 1), ("local", 2), ("tftp", 3), ("ftp", 4), ("rcp", 5), ("http", 6), ("scp", 7), ("sftp", 8))

class ClmgmtLicenseActionState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("pending", 2), ("inProgress", 3), ("successful", 4), ("partiallySuccessful", 5), ("failed", 6))

class ClmgmtLicenseActionFailCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))
    namedValues = NamedValues(("none", 1), ("generalFailure", 2), ("transferProtocolNotSupported", 3), ("fileServerNotReachable", 4), ("unrecognizedEntPhysicalIndex", 5), ("invalidLicenseFilePath", 6), ("invalidLicenseFile", 7), ("invalidLicenseLine", 8), ("licenseAlreadyExists", 9), ("licenseNotValidForDevice", 10), ("invalidLicenseCount", 11), ("invalidLicensePeriod", 12), ("licenseInUse", 13), ("invalidLicenseStore", 14), ("licenseStorageFull", 15), ("invalidPermissionTicketFile", 16), ("invalidPermissionTicket", 17), ("invalidRehostTicketFile", 18), ("invalidRehostTicket", 19), ("invalidLicenseBackupFile", 20), ("licenseClearInProgress", 21), ("invalidLicenseEULAFile", 22))

clmgmtNextFreeLicenseActionIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtNextFreeLicenseActionIndex.setStatus('current')
clmgmtLicenseActionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2), )
if mibBuilder.loadTexts: clmgmtLicenseActionTable.setStatus('current')
clmgmtLicenseActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionIndex"))
if mibBuilder.loadTexts: clmgmtLicenseActionEntry.setStatus('current')
clmgmtLicenseActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: clmgmtLicenseActionIndex.setStatus('current')
clmgmtLicenseActionEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 2), PhysicalIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseActionEntPhysicalIndex.setStatus('current')
clmgmtLicenseActionTransferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 3), ClmgmtLicenseTransferProtocol().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseActionTransferProtocol.setStatus('current')
clmgmtLicenseServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseServerAddressType.setStatus('current')
clmgmtLicenseServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseServerAddress.setStatus('current')
clmgmtLicenseServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseServerUsername.setStatus('current')
clmgmtLicenseServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseServerPassword.setStatus('current')
clmgmtLicenseFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseFile.setStatus('current')
clmgmtLicenseStore = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseStore.setStatus('current')
clmgmtLicenseActionLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 10), ClmgmtLicenseIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseActionLicenseIndex.setStatus('current')
clmgmtLicensePermissionTicketFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicensePermissionTicketFile.setStatus('current')
clmgmtLicenseRehostTicketFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseRehostTicketFile.setStatus('current')
clmgmtLicenseBackupFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseBackupFile.setStatus('current')
clmgmtLicenseStopOnFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseStopOnFailure.setStatus('current')
clmgmtLicenseAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noOp", 1), ("install", 2), ("clear", 3), ("processPermissionTicket", 4), ("regenerateLastRehostTicket", 5), ("backup", 6), ("generateEULA", 7))).clone('noOp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseAction.setStatus('current')
clmgmtLicenseActionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 16), ClmgmtLicenseActionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseActionState.setStatus('current')
clmgmtLicenseJobQPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseJobQPosition.setStatus('current')
clmgmtLicenseActionFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 18), ClmgmtLicenseActionFailCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseActionFailCause.setStatus('current')
clmgmtLicenseActionStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 19), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseActionStorageType.setStatus('current')
clmgmtLicenseActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseActionRowStatus.setStatus('current')
clmgmtLicenseAcceptEULA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseAcceptEULA.setStatus('current')
clmgmtLicenseEULAFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 2, 1, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtLicenseEULAFile.setStatus('current')
clmgmtLicenseActionResultTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 3), )
if mibBuilder.loadTexts: clmgmtLicenseActionResultTable.setStatus('current')
clmgmtLicenseActionResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionIndex"), (0, "CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseNumber"))
if mibBuilder.loadTexts: clmgmtLicenseActionResultEntry.setStatus('current')
clmgmtLicenseNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: clmgmtLicenseNumber.setStatus('current')
clmgmtLicenseIndivActionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 3, 1, 2), ClmgmtLicenseActionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseIndivActionState.setStatus('current')
clmgmtLicenseIndivActionFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 1, 3, 1, 3), ClmgmtLicenseActionFailCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseIndivActionFailCause.setStatus('current')
clmgmtLicenseStoreInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 1), )
if mibBuilder.loadTexts: clmgmtLicenseStoreInfoTable.setStatus('current')
clmgmtLicenseStoreInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreIndex"))
if mibBuilder.loadTexts: clmgmtLicenseStoreInfoEntry.setStatus('current')
clmgmtLicenseStoreIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: clmgmtLicenseStoreIndex.setStatus('current')
clmgmtLicenseStoreName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseStoreName.setStatus('current')
clmgmtLicenseStoreTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 1, 1, 3), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseStoreTotalSize.setStatus('current')
clmgmtLicenseStoreSizeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 1, 1, 4), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseStoreSizeRemaining.setStatus('current')
clmgmtLicenseDeviceInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 2), )
if mibBuilder.loadTexts: clmgmtLicenseDeviceInfoTable.setStatus('current')
clmgmtLicenseDeviceInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: clmgmtLicenseDeviceInfoEntry.setStatus('current')
clmgmtDefaultLicenseStore = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtDefaultLicenseStore.setStatus('current')
clmgmtLicenseInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3), )
if mibBuilder.loadTexts: clmgmtLicenseInfoTable.setStatus('current')
clmgmtLicenseInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreUsed"), (0, "CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseIndex"))
if mibBuilder.loadTexts: clmgmtLicenseInfoEntry.setStatus('current')
clmgmtLicenseStoreUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: clmgmtLicenseStoreUsed.setStatus('current')
clmgmtLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 2), ClmgmtLicenseIndex())
if mibBuilder.loadTexts: clmgmtLicenseIndex.setStatus('current')
clmgmtLicenseFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseFeatureName.setStatus('current')
clmgmtLicenseFeatureVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseFeatureVersion.setStatus('current')
clmgmtLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("demo", 1), ("extension", 2), ("gracePeriod", 3), ("permanent", 4), ("paidSubscription", 5), ("evaluationSubscription", 6), ("extensionSubscription", 7), ("evalRightToUse", 8), ("rightToUse", 9), ("permanentRightToUse", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseType.setStatus('current')
clmgmtLicenseCounted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseCounted.setStatus('current')
clmgmtLicenseValidityPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseValidityPeriod.setStatus('current')
clmgmtLicenseValidityPeriodRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseValidityPeriodRemaining.setStatus('current')
clmgmtLicenseExpiredPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseExpiredPeriod.setStatus('current')
clmgmtLicenseMaxUsageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseMaxUsageCount.setStatus('current')
clmgmtLicenseUsageCountRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseUsageCountRemaining.setStatus('current')
clmgmtLicenseEULAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseEULAStatus.setStatus('current')
clmgmtLicenseComments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clmgmtLicenseComments.setStatus('current')
clmgmtLicenseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("inactive", 1), ("notInUse", 2), ("inUse", 3), ("expiredInUse", 4), ("expiredNotInUse", 5), ("usageCountConsumed", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseStatus.setStatus('current')
clmgmtLicenseStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseStartDate.setStatus('current')
clmgmtLicenseEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicenseEndDate.setStatus('current')
clmgmtLicensePeriodUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 3, 1, 17), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtLicensePeriodUsed.setStatus('current')
clmgmtLicensableFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4), )
if mibBuilder.loadTexts: clmgmtLicensableFeatureTable.setStatus('current')
clmgmtLicensableFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureIndex"))
if mibBuilder.loadTexts: clmgmtLicensableFeatureEntry.setStatus('current')
clmgmtFeatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: clmgmtFeatureIndex.setStatus('current')
clmgmtFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeatureName.setStatus('current')
clmgmtFeatureVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeatureVersion.setStatus('current')
clmgmtFeatureValidityPeriodRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeatureValidityPeriodRemaining.setStatus('current')
clmgmtFeatureWhatIsCounted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeatureWhatIsCounted.setStatus('current')
clmgmtFeatureStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeatureStartDate.setStatus('current')
clmgmtFeatureEndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeatureEndDate.setStatus('current')
clmgmtFeaturePeriodUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 2, 4, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtFeaturePeriodUsed.setStatus('current')
clmgmtNextFreeDevCredExportActionIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtNextFreeDevCredExportActionIndex.setStatus('current')
clmgmtDevCredExportActionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2), )
if mibBuilder.loadTexts: clmgmtDevCredExportActionTable.setStatus('current')
clmgmtDevCredExportActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredExportActionIndex"))
if mibBuilder.loadTexts: clmgmtDevCredExportActionEntry.setStatus('current')
clmgmtDevCredExportActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: clmgmtDevCredExportActionIndex.setStatus('current')
clmgmtDevCredEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 2), PhysicalIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredEntPhysicalIndex.setStatus('current')
clmgmtDevCredTransferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 3), ClmgmtLicenseTransferProtocol().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredTransferProtocol.setStatus('current')
clmgmtDevCredServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredServerAddressType.setStatus('current')
clmgmtDevCredServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredServerAddress.setStatus('current')
clmgmtDevCredServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredServerUsername.setStatus('current')
clmgmtDevCredServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredServerPassword.setStatus('current')
clmgmtDevCredExportFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredExportFile.setStatus('current')
clmgmtDevCredCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOp", 1), ("getDeviceCredentials", 2))).clone('noOp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredCommand.setStatus('current')
clmgmtDevCredCommandState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 10), ClmgmtLicenseActionState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtDevCredCommandState.setStatus('current')
clmgmtDevCredCommandFailCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("unknownError", 2), ("transferProtocolNotSupported", 3), ("fileServerNotReachable", 4), ("unrecognizedEntPhysicalIndex", 5), ("invalidFile", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clmgmtDevCredCommandFailCause.setStatus('current')
clmgmtDevCredStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 12), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredStorageType.setStatus('current')
clmgmtDevCredRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 3, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clmgmtDevCredRowStatus.setStatus('current')
clmgmtLicenseUsageNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 4, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clmgmtLicenseUsageNotifEnable.setStatus('current')
clmgmtLicenseDeploymentNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 4, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clmgmtLicenseDeploymentNotifEnable.setStatus('current')
clmgmtLicenseErrorNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 543, 1, 4, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clmgmtLicenseErrorNotifEnable.setStatus('current')
clmgmtLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 1)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"))
if mibBuilder.loadTexts: clmgmtLicenseExpired.setStatus('current')
clmgmtLicenseExpiryWarning = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 2)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureValidityPeriodRemaining"))
if mibBuilder.loadTexts: clmgmtLicenseExpiryWarning.setStatus('current')
clmgmtLicenseUsageCountExceeded = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 3)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseMaxUsageCount"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureWhatIsCounted"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseComments"))
if mibBuilder.loadTexts: clmgmtLicenseUsageCountExceeded.setStatus('current')
clmgmtLicenseUsageCountAboutToExceed = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 4)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseMaxUsageCount"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageCountRemaining"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureWhatIsCounted"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseComments"))
if mibBuilder.loadTexts: clmgmtLicenseUsageCountAboutToExceed.setStatus('current')
clmgmtLicenseInstalled = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 5)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseComments"))
if mibBuilder.loadTexts: clmgmtLicenseInstalled.setStatus('current')
clmgmtLicenseCleared = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 6)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseComments"))
if mibBuilder.loadTexts: clmgmtLicenseCleared.setStatus('current')
clmgmtLicenseRevoked = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 7)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseComments"))
if mibBuilder.loadTexts: clmgmtLicenseRevoked.setStatus('current')
clmgmtLicenseEULAAccepted = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 8)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"))
if mibBuilder.loadTexts: clmgmtLicenseEULAAccepted.setStatus('current')
clmgmtLicenseNotEnforced = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 9)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"))
if mibBuilder.loadTexts: clmgmtLicenseNotEnforced.setStatus('current')
clmgmtLicenseSubscriptionExpiryWarning = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 10)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureEndDate"))
if mibBuilder.loadTexts: clmgmtLicenseSubscriptionExpiryWarning.setStatus('current')
clmgmtLicenseSubscriptionExtExpiryWarning = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 11)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureEndDate"))
if mibBuilder.loadTexts: clmgmtLicenseSubscriptionExtExpiryWarning.setStatus('current')
clmgmtLicenseSubscriptionExpired = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 12)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureEndDate"))
if mibBuilder.loadTexts: clmgmtLicenseSubscriptionExpired.setStatus('current')
clmgmtLicenseEvalRTUTransitionWarning = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 13)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureValidityPeriodRemaining"))
if mibBuilder.loadTexts: clmgmtLicenseEvalRTUTransitionWarning.setStatus('current')
clmgmtLicenseEvalRTUTransition = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 543, 0, 14)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"))
if mibBuilder.loadTexts: clmgmtLicenseEvalRTUTransition.setStatus('current')
ciscoLicenseMgmtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 1))
ciscoLicenseMgmtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2))
ciscoLicenseMgmtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 1, 1)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeploymentGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeviceInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicensableFeatureInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDevCredGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseNotificationEnableGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeploymentNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseErrorNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLicenseMgmtCompliance = ciscoLicenseMgmtCompliance.setStatus('deprecated')
ciscoLicenseMgmtComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 1, 2)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeploymentGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeviceInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicensableFeatureInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDevCredGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseNotificationEnableGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeploymentNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseErrorNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreInformationGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseSubscriptionGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseSubscriptionUsageNotifGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseRTUGroup"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseRTUUsageNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLicenseMgmtComplianceRev1 = ciscoLicenseMgmtComplianceRev1.setStatus('current')
clmgmtLicenseDeploymentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 1)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtNextFreeLicenseActionIndex"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionEntPhysicalIndex"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionTransferProtocol"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseServerAddressType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseServerAddress"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseServerUsername"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseServerPassword"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFile"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStore"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionLicenseIndex"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicensePermissionTicketFile"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseRehostTicketFile"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseBackupFile"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStopOnFailure"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseAction"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionState"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseJobQPosition"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionFailCause"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionStorageType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseActionRowStatus"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseIndivActionState"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseIndivActionFailCause"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseAcceptEULA"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseEULAFile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseDeploymentGroup = clmgmtLicenseDeploymentGroup.setStatus('current')
clmgmtLicenseStoreInformationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 2)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreTotalSize"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStoreSizeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseStoreInformationGroup = clmgmtLicenseStoreInformationGroup.setStatus('current')
clmgmtLicenseDeviceInformationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 3)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtDefaultLicenseStore"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseDeviceInformationGroup = clmgmtLicenseDeviceInformationGroup.setStatus('current')
clmgmtLicenseInformationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 4)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseCounted"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseValidityPeriod"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseValidityPeriodRemaining"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseExpiredPeriod"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseMaxUsageCount"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageCountRemaining"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseEULAStatus"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseComments"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseInformationGroup = clmgmtLicenseInformationGroup.setStatus('current')
clmgmtLicensableFeatureInformationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 5)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureName"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureVersion"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureValidityPeriodRemaining"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureWhatIsCounted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicensableFeatureInformationGroup = clmgmtLicensableFeatureInformationGroup.setStatus('current')
clmgmtLicenseDevCredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 6)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtNextFreeDevCredExportActionIndex"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredEntPhysicalIndex"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredTransferProtocol"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredServerAddressType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredServerAddress"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredServerUsername"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredServerPassword"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredExportFile"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredCommand"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredCommandState"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredCommandFailCause"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredStorageType"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtDevCredRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseDevCredGroup = clmgmtLicenseDevCredGroup.setStatus('current')
clmgmtLicenseNotificationEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 7)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageNotifEnable"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseDeploymentNotifEnable"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseErrorNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseNotificationEnableGroup = clmgmtLicenseNotificationEnableGroup.setStatus('current')
clmgmtLicenseUsageNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 8)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseExpired"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseExpiryWarning"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageCountExceeded"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseUsageCountAboutToExceed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseUsageNotifGroup = clmgmtLicenseUsageNotifGroup.setStatus('current')
clmgmtLicenseDeploymentNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 9)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseInstalled"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseCleared"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseRevoked"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseEULAAccepted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseDeploymentNotifGroup = clmgmtLicenseDeploymentNotifGroup.setStatus('current')
clmgmtLicenseErrorNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 10)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseNotEnforced"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseErrorNotifGroup = clmgmtLicenseErrorNotifGroup.setStatus('current')
clmgmtLicenseSubscriptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 11)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseStartDate"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseEndDate"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureStartDate"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeatureEndDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseSubscriptionGroup = clmgmtLicenseSubscriptionGroup.setStatus('current')
clmgmtLicenseSubscriptionUsageNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 12)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseSubscriptionExpiryWarning"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseSubscriptionExtExpiryWarning"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseSubscriptionExpired"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseSubscriptionUsageNotifGroup = clmgmtLicenseSubscriptionUsageNotifGroup.setStatus('current')
clmgmtLicenseRTUGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 13)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicensePeriodUsed"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtFeaturePeriodUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseRTUGroup = clmgmtLicenseRTUGroup.setStatus('current')
clmgmtLicenseRTUUsageNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 543, 2, 2, 14)).setObjects(("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseEvalRTUTransitionWarning"), ("CISCO-LICENSE-MGMT-MIB", "clmgmtLicenseEvalRTUTransition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clmgmtLicenseRTUUsageNotifGroup = clmgmtLicenseRTUUsageNotifGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LICENSE-MGMT-MIB", clmgmtLicenseFeatureName=clmgmtLicenseFeatureName, clmgmtLicenseUsageCountExceeded=clmgmtLicenseUsageCountExceeded, clmgmtDefaultLicenseStore=clmgmtDefaultLicenseStore, clmgmtLicenseEULAAccepted=clmgmtLicenseEULAAccepted, clmgmtLicenseExpired=clmgmtLicenseExpired, clmgmtLicenseUsageNotifEnable=clmgmtLicenseUsageNotifEnable, clmgmtLicenseFeatureVersion=clmgmtLicenseFeatureVersion, clmgmtLicenseStoreInfoEntry=clmgmtLicenseStoreInfoEntry, clmgmtLicenseRehostTicketFile=clmgmtLicenseRehostTicketFile, clmgmtLicenseStoreInfoTable=clmgmtLicenseStoreInfoTable, ciscoLicenseMgmtComplianceRev1=ciscoLicenseMgmtComplianceRev1, clmgmtLicenseEndDate=clmgmtLicenseEndDate, clmgmtLicenseStoreName=clmgmtLicenseStoreName, clmgmtDevCredServerAddressType=clmgmtDevCredServerAddressType, clmgmtLicenseComments=clmgmtLicenseComments, ciscoLicenseMgmtCompliance=ciscoLicenseMgmtCompliance, clmgmtLicenseInformation=clmgmtLicenseInformation, clmgmtLicenseCounted=clmgmtLicenseCounted, clmgmtLicenseEULAFile=clmgmtLicenseEULAFile, clmgmtLicenseActionState=clmgmtLicenseActionState, clmgmtLicenseStoreTotalSize=clmgmtLicenseStoreTotalSize, clmgmtLicenseValidityPeriodRemaining=clmgmtLicenseValidityPeriodRemaining, clmgmtDevCredServerUsername=clmgmtDevCredServerUsername, clmgmtLicenseMaxUsageCount=clmgmtLicenseMaxUsageCount, clmgmtLicenseIndivActionState=clmgmtLicenseIndivActionState, clmgmtLicenseSubscriptionExpiryWarning=clmgmtLicenseSubscriptionExpiryWarning, clmgmtNextFreeLicenseActionIndex=clmgmtNextFreeLicenseActionIndex, clmgmtLicenseNotifObjects=clmgmtLicenseNotifObjects, clmgmtLicenseStore=clmgmtLicenseStore, clmgmtDevCredTransferProtocol=clmgmtDevCredTransferProtocol, clmgmtLicenseCleared=clmgmtLicenseCleared, clmgmtLicenseIndivActionFailCause=clmgmtLicenseIndivActionFailCause, clmgmtLicensableFeatureInformationGroup=clmgmtLicensableFeatureInformationGroup, clmgmtLicenseErrorNotifEnable=clmgmtLicenseErrorNotifEnable, clmgmtLicenseServerAddress=clmgmtLicenseServerAddress, clmgmtLicenseExpiredPeriod=clmgmtLicenseExpiredPeriod, clmgmtLicenseNotificationEnableGroup=clmgmtLicenseNotificationEnableGroup, clmgmtLicenseStoreIndex=clmgmtLicenseStoreIndex, clmgmtLicensePermissionTicketFile=clmgmtLicensePermissionTicketFile, clmgmtLicenseStartDate=clmgmtLicenseStartDate, clmgmtLicenseIndex=clmgmtLicenseIndex, clmgmtLicenseServerUsername=clmgmtLicenseServerUsername, clmgmtLicenseInfoEntry=clmgmtLicenseInfoEntry, ciscoLicenseMgmtMIBNotifs=ciscoLicenseMgmtMIBNotifs, clmgmtLicenseDevCredGroup=clmgmtLicenseDevCredGroup, clmgmtDevCredServerPassword=clmgmtDevCredServerPassword, clmgmtFeatureName=clmgmtFeatureName, ciscoLicenseMgmtMIBConform=ciscoLicenseMgmtMIBConform, clmgmtLicenseInfoTable=clmgmtLicenseInfoTable, clmgmtLicensableFeatureEntry=clmgmtLicensableFeatureEntry, clmgmtLicenseDeviceInfoTable=clmgmtLicenseDeviceInfoTable, clmgmtFeatureWhatIsCounted=clmgmtFeatureWhatIsCounted, clmgmtLicenseStopOnFailure=clmgmtLicenseStopOnFailure, clmgmtFeatureEndDate=clmgmtFeatureEndDate, clmgmtDevCredEntPhysicalIndex=clmgmtDevCredEntPhysicalIndex, clmgmtLicenseSubscriptionUsageNotifGroup=clmgmtLicenseSubscriptionUsageNotifGroup, clmgmtLicenseDeploymentNotifGroup=clmgmtLicenseDeploymentNotifGroup, clmgmtDevCredExportActionEntry=clmgmtDevCredExportActionEntry, clmgmtLicenseExpiryWarning=clmgmtLicenseExpiryWarning, clmgmtLicenseRTUGroup=clmgmtLicenseRTUGroup, clmgmtLicenseDeviceInformationGroup=clmgmtLicenseDeviceInformationGroup, clmgmtLicenseActionResultEntry=clmgmtLicenseActionResultEntry, clmgmtLicenseSubscriptionGroup=clmgmtLicenseSubscriptionGroup, clmgmtLicenseStoreUsed=clmgmtLicenseStoreUsed, clmgmtLicenseEvalRTUTransitionWarning=clmgmtLicenseEvalRTUTransitionWarning, clmgmtDevCredCommand=clmgmtDevCredCommand, clmgmtDevCredCommandFailCause=clmgmtDevCredCommandFailCause, clmgmtLicenseSubscriptionExpired=clmgmtLicenseSubscriptionExpired, ciscoLicenseMgmtCompliances=ciscoLicenseMgmtCompliances, clmgmtFeatureValidityPeriodRemaining=clmgmtFeatureValidityPeriodRemaining, clmgmtLicenseActionTable=clmgmtLicenseActionTable, ClmgmtLicenseTransferProtocol=ClmgmtLicenseTransferProtocol, clmgmtLicenseActionTransferProtocol=clmgmtLicenseActionTransferProtocol, ciscoLicenseMgmtGroups=ciscoLicenseMgmtGroups, clmgmtDevCredExportFile=clmgmtDevCredExportFile, clmgmtLicenseActionEntPhysicalIndex=clmgmtLicenseActionEntPhysicalIndex, PYSNMP_MODULE_ID=ciscoLicenseMgmtMIB, clmgmtLicenseUsageCountRemaining=clmgmtLicenseUsageCountRemaining, clmgmtLicensePeriodUsed=clmgmtLicensePeriodUsed, clmgmtLicenseActionLicenseIndex=clmgmtLicenseActionLicenseIndex, clmgmtLicenseConfiguration=clmgmtLicenseConfiguration, clmgmtLicenseRTUUsageNotifGroup=clmgmtLicenseRTUUsageNotifGroup, clmgmtFeaturePeriodUsed=clmgmtFeaturePeriodUsed, clmgmtLicenseEvalRTUTransition=clmgmtLicenseEvalRTUTransition, clmgmtLicenseNumber=clmgmtLicenseNumber, clmgmtLicenseStoreSizeRemaining=clmgmtLicenseStoreSizeRemaining, clmgmtLicenseActionIndex=clmgmtLicenseActionIndex, clmgmtDevCredServerAddress=clmgmtDevCredServerAddress, clmgmtLicenseDeviceInformation=clmgmtLicenseDeviceInformation, clmgmtLicenseActionEntry=clmgmtLicenseActionEntry, clmgmtLicenseInformationGroup=clmgmtLicenseInformationGroup, clmgmtDevCredCommandState=clmgmtDevCredCommandState, ClmgmtLicenseIndex=ClmgmtLicenseIndex, clmgmtLicenseBackupFile=clmgmtLicenseBackupFile, clmgmtLicenseStatus=clmgmtLicenseStatus, ClmgmtLicenseIndexOrZero=ClmgmtLicenseIndexOrZero, clmgmtFeatureStartDate=clmgmtFeatureStartDate, clmgmtLicenseRevoked=clmgmtLicenseRevoked, clmgmtLicenseNotEnforced=clmgmtLicenseNotEnforced, clmgmtLicenseStoreInformationGroup=clmgmtLicenseStoreInformationGroup, clmgmtLicenseActionFailCause=clmgmtLicenseActionFailCause, clmgmtLicenseValidityPeriod=clmgmtLicenseValidityPeriod, clmgmtLicenseType=clmgmtLicenseType, clmgmtLicenseUsageNotifGroup=clmgmtLicenseUsageNotifGroup, clmgmtLicenseAcceptEULA=clmgmtLicenseAcceptEULA, ClmgmtLicenseActionFailCause=ClmgmtLicenseActionFailCause, clmgmtLicenseInstalled=clmgmtLicenseInstalled, clmgmtLicenseUsageCountAboutToExceed=clmgmtLicenseUsageCountAboutToExceed, clmgmtLicenseFile=clmgmtLicenseFile, clmgmtLicenseActionRowStatus=clmgmtLicenseActionRowStatus, clmgmtLicenseActionResultTable=clmgmtLicenseActionResultTable, ClmgmtLicenseActionState=ClmgmtLicenseActionState, clmgmtLicenseActionStorageType=clmgmtLicenseActionStorageType, clmgmtLicenseJobQPosition=clmgmtLicenseJobQPosition, clmgmtFeatureVersion=clmgmtFeatureVersion, clmgmtFeatureIndex=clmgmtFeatureIndex, ciscoLicenseMgmtMIB=ciscoLicenseMgmtMIB, clmgmtDevCredRowStatus=clmgmtDevCredRowStatus, ciscoLicenseMgmtMIBObjects=ciscoLicenseMgmtMIBObjects, clmgmtLicenseServerPassword=clmgmtLicenseServerPassword, clmgmtLicensableFeatureTable=clmgmtLicensableFeatureTable, clmgmtLicenseErrorNotifGroup=clmgmtLicenseErrorNotifGroup, clmgmtLicenseDeploymentNotifEnable=clmgmtLicenseDeploymentNotifEnable, clmgmtLicenseSubscriptionExtExpiryWarning=clmgmtLicenseSubscriptionExtExpiryWarning, clmgmtNextFreeDevCredExportActionIndex=clmgmtNextFreeDevCredExportActionIndex, clmgmtLicenseAction=clmgmtLicenseAction, clmgmtDevCredExportActionTable=clmgmtDevCredExportActionTable, clmgmtDevCredExportActionIndex=clmgmtDevCredExportActionIndex, clmgmtDevCredStorageType=clmgmtDevCredStorageType, clmgmtLicenseDeploymentGroup=clmgmtLicenseDeploymentGroup, clmgmtLicenseEULAStatus=clmgmtLicenseEULAStatus, clmgmtLicenseServerAddressType=clmgmtLicenseServerAddressType, clmgmtLicenseDeviceInfoEntry=clmgmtLicenseDeviceInfoEntry)
