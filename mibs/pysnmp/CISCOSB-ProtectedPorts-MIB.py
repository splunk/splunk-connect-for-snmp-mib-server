#
# PySNMP MIB module CISCOSB-ProtectedPorts-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-ProtectedPorts-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:07:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibIdentifier, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Counter64, NotificationType, ObjectIdentity, TimeTicks, Counter32, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Counter64", "NotificationType", "ObjectIdentity", "TimeTicks", "Counter32", "IpAddress", "Gauge32")
DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
rlProtectedPorts = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132))
rlProtectedPorts.setRevisions(('2008-05-03 12:34',))
if mibBuilder.loadTexts: rlProtectedPorts.setLastUpdated('200805031234Z')
if mibBuilder.loadTexts: rlProtectedPorts.setOrganization('Cisco Small Business')
rlProtectedPortsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 1), )
if mibBuilder.loadTexts: rlProtectedPortsTable.setStatus('current')
rlProtectedPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlProtectedPortsEntry.setStatus('current')
rlProtectedPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-protected", 1), ("protected", 2))).clone('not-protected')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlProtectedPortType.setStatus('current')
rlProtectedPortCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlProtectedPortCommunity.setStatus('current')
rlProtectedPortsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 2), )
if mibBuilder.loadTexts: rlProtectedPortsStatusTable.setStatus('current')
rlProtectedPortsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlProtectedPortsStatusEntry.setStatus('current')
rlProtectedPortEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 2, 1, 1), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlProtectedPortEgressPorts.setStatus('current')
rlProtectedPortsGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 132, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlProtectedPortsGlobalEnable.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-ProtectedPorts-MIB", rlProtectedPortsStatusTable=rlProtectedPortsStatusTable, rlProtectedPortsEntry=rlProtectedPortsEntry, rlProtectedPorts=rlProtectedPorts, rlProtectedPortCommunity=rlProtectedPortCommunity, rlProtectedPortsGlobalEnable=rlProtectedPortsGlobalEnable, rlProtectedPortsStatusEntry=rlProtectedPortsStatusEntry, rlProtectedPortEgressPorts=rlProtectedPortEgressPorts, rlProtectedPortType=rlProtectedPortType, PYSNMP_MODULE_ID=rlProtectedPorts, rlProtectedPortsTable=rlProtectedPortsTable)
