#
# PySNMP MIB module Nortel-Magellan-Passport-FrameRelayMuxMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrameRelayMuxMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
DisplayString, RowPointer, Integer32, PassportCounter64, Unsigned32, InterfaceIndex, StorageType, RowStatus, Gauge32, Counter32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "RowPointer", "Integer32", "PassportCounter64", "Unsigned32", "InterfaceIndex", "StorageType", "RowStatus", "Gauge32", "Counter32")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "NonReplicated")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, NotificationType, TimeTicks, Integer32, Unsigned32, IpAddress, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "NotificationType", "TimeTicks", "Integer32", "Unsigned32", "IpAddress", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "Bits", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayMuxMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38))
frMux = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112))
frMuxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 1), )
if mibBuilder.loadTexts: frMuxRowStatusTable.setStatus('mandatory')
frMuxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"))
if mibBuilder.loadTexts: frMuxRowStatusEntry.setStatus('mandatory')
frMuxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxRowStatus.setStatus('mandatory')
frMuxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxComponentName.setStatus('mandatory')
frMuxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxStorageType.setStatus('mandatory')
frMuxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: frMuxIndex.setStatus('mandatory')
frMuxOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 8), )
if mibBuilder.loadTexts: frMuxOperStatusTable.setStatus('mandatory')
frMuxOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 8, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"))
if mibBuilder.loadTexts: frMuxOperStatusEntry.setStatus('mandatory')
frMuxSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxSnmpOperStatus.setStatus('mandatory')
frMuxIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 9), )
if mibBuilder.loadTexts: frMuxIfEntryTable.setStatus('mandatory')
frMuxIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 9, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"))
if mibBuilder.loadTexts: frMuxIfEntryEntry.setStatus('mandatory')
frMuxIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxIfAdminStatus.setStatus('mandatory')
frMuxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 9, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxIfIndex.setStatus('mandatory')
frMuxCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 10), )
if mibBuilder.loadTexts: frMuxCidDataTable.setStatus('mandatory')
frMuxCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"))
if mibBuilder.loadTexts: frMuxCidDataEntry.setStatus('mandatory')
frMuxCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxCustomerIdentifier.setStatus('mandatory')
frMuxStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11), )
if mibBuilder.loadTexts: frMuxStateTable.setStatus('mandatory')
frMuxStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"))
if mibBuilder.loadTexts: frMuxStateEntry.setStatus('mandatory')
frMuxAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxAdminState.setStatus('mandatory')
frMuxOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxOperationalState.setStatus('mandatory')
frMuxUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxUsageState.setStatus('mandatory')
frMuxAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxAvailabilityStatus.setStatus('mandatory')
frMuxProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxProceduralStatus.setStatus('mandatory')
frMuxControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxControlStatus.setStatus('mandatory')
frMuxAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxAlarmStatus.setStatus('mandatory')
frMuxStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxStandbyStatus.setStatus('mandatory')
frMuxUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxUnknownStatus.setStatus('mandatory')
frMuxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 12), )
if mibBuilder.loadTexts: frMuxStatsTable.setStatus('mandatory')
frMuxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"))
if mibBuilder.loadTexts: frMuxStatsEntry.setStatus('mandatory')
frMuxLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLastUnknownDlci.setStatus('mandatory')
frMuxUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxUnknownDlciFramesFromIf.setStatus('mandatory')
frMuxInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxInvalidHeaderFramesFromIf.setStatus('mandatory')
frMuxTimeFramerCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxTimeFramerCongested.setStatus('mandatory')
frMuxFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2))
frMuxFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 1), )
if mibBuilder.loadTexts: frMuxFramerRowStatusTable.setStatus('mandatory')
frMuxFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxFramerIndex"))
if mibBuilder.loadTexts: frMuxFramerRowStatusEntry.setStatus('mandatory')
frMuxFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerRowStatus.setStatus('mandatory')
frMuxFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerComponentName.setStatus('mandatory')
frMuxFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerStorageType.setStatus('mandatory')
frMuxFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frMuxFramerIndex.setStatus('mandatory')
frMuxFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 10), )
if mibBuilder.loadTexts: frMuxFramerProvTable.setStatus('mandatory')
frMuxFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxFramerIndex"))
if mibBuilder.loadTexts: frMuxFramerProvEntry.setStatus('mandatory')
frMuxFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxFramerInterfaceName.setStatus('mandatory')
frMuxFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 11), )
if mibBuilder.loadTexts: frMuxFramerLinkTable.setStatus('mandatory')
frMuxFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxFramerIndex"))
if mibBuilder.loadTexts: frMuxFramerLinkEntry.setStatus('mandatory')
frMuxFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxFramerFlagsBetweenFrames.setStatus('mandatory')
frMuxFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 12), )
if mibBuilder.loadTexts: frMuxFramerStateTable.setStatus('mandatory')
frMuxFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxFramerIndex"))
if mibBuilder.loadTexts: frMuxFramerStateEntry.setStatus('mandatory')
frMuxFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerAdminState.setStatus('mandatory')
frMuxFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerOperationalState.setStatus('mandatory')
frMuxFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerUsageState.setStatus('mandatory')
frMuxFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13), )
if mibBuilder.loadTexts: frMuxFramerStatsTable.setStatus('mandatory')
frMuxFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxFramerIndex"))
if mibBuilder.loadTexts: frMuxFramerStatsEntry.setStatus('mandatory')
frMuxFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerFrmToIf.setStatus('mandatory')
frMuxFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerFrmFromIf.setStatus('mandatory')
frMuxFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerOctetFromIf.setStatus('mandatory')
frMuxFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerAborts.setStatus('mandatory')
frMuxFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerCrcErrors.setStatus('mandatory')
frMuxFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerLrcErrors.setStatus('mandatory')
frMuxFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerNonOctetErrors.setStatus('mandatory')
frMuxFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerOverruns.setStatus('mandatory')
frMuxFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerUnderruns.setStatus('mandatory')
frMuxFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerLargeFrmErrors.setStatus('mandatory')
frMuxFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerFrmModeErrors.setStatus('mandatory')
frMuxFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 14), )
if mibBuilder.loadTexts: frMuxFramerUtilTable.setStatus('mandatory')
frMuxFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxFramerIndex"))
if mibBuilder.loadTexts: frMuxFramerUtilEntry.setStatus('mandatory')
frMuxFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerNormPrioLinkUtilToIf.setStatus('mandatory')
frMuxFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
frMuxLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3))
frMuxLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 1), )
if mibBuilder.loadTexts: frMuxLmiRowStatusTable.setStatus('mandatory')
frMuxLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxLmiIndex"))
if mibBuilder.loadTexts: frMuxLmiRowStatusEntry.setStatus('mandatory')
frMuxLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiRowStatus.setStatus('mandatory')
frMuxLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiComponentName.setStatus('mandatory')
frMuxLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiStorageType.setStatus('mandatory')
frMuxLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frMuxLmiIndex.setStatus('mandatory')
frMuxLmiProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10), )
if mibBuilder.loadTexts: frMuxLmiProvTable.setStatus('mandatory')
frMuxLmiProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxLmiIndex"))
if mibBuilder.loadTexts: frMuxLmiProvEntry.setStatus('mandatory')
frMuxLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("ccitt", 3))).clone('ccitt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxLmiProcedures.setStatus('mandatory')
frMuxLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxLmiLinkVerificationTimer.setStatus('mandatory')
frMuxLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxLmiFullStatusPollingCycles.setStatus('mandatory')
frMuxLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxLmiErrorEventThreshold.setStatus('mandatory')
frMuxLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxLmiEventCount.setStatus('mandatory')
frMuxLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 11), )
if mibBuilder.loadTexts: frMuxLmiStateTable.setStatus('mandatory')
frMuxLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxLmiIndex"))
if mibBuilder.loadTexts: frMuxLmiStateEntry.setStatus('mandatory')
frMuxLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiAdminState.setStatus('mandatory')
frMuxLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiOperationalState.setStatus('mandatory')
frMuxLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiUsageState.setStatus('mandatory')
frMuxLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 12), )
if mibBuilder.loadTexts: frMuxLmiPsiTable.setStatus('mandatory')
frMuxLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxLmiIndex"))
if mibBuilder.loadTexts: frMuxLmiPsiEntry.setStatus('mandatory')
frMuxLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1))).clone('normalCondition')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiProtocolStatus.setStatus('mandatory')
frMuxLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13), )
if mibBuilder.loadTexts: frMuxLmiStatsTable.setStatus('mandatory')
frMuxLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxLmiIndex"))
if mibBuilder.loadTexts: frMuxLmiStatsEntry.setStatus('mandatory')
frMuxLmiKeepAliveStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiKeepAliveStatusEnqToIf.setStatus('mandatory')
frMuxLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiFullStatusEnqToIf.setStatus('mandatory')
frMuxLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiProtocolErrors.setStatus('mandatory')
frMuxLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiUnexpectedIes.setStatus('mandatory')
frMuxLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiSequenceErrors.setStatus('mandatory')
frMuxLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiUnexpectedReports.setStatus('mandatory')
frMuxLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxLmiNoStatusReportCount.setStatus('mandatory')
frMuxDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4))
frMuxDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 1), )
if mibBuilder.loadTexts: frMuxDlciRowStatusTable.setStatus('mandatory')
frMuxDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"))
if mibBuilder.loadTexts: frMuxDlciRowStatusEntry.setStatus('mandatory')
frMuxDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxDlciRowStatus.setStatus('mandatory')
frMuxDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciComponentName.setStatus('mandatory')
frMuxDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciStorageType.setStatus('mandatory')
frMuxDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: frMuxDlciIndex.setStatus('mandatory')
frMuxDlciOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 10), )
if mibBuilder.loadTexts: frMuxDlciOperTable.setStatus('mandatory')
frMuxDlciOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"))
if mibBuilder.loadTexts: frMuxDlciOperEntry.setStatus('mandatory')
frMuxDlciApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciApplicationName.setStatus('mandatory')
frMuxDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 11), )
if mibBuilder.loadTexts: frMuxDlciStateTable.setStatus('mandatory')
frMuxDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"))
if mibBuilder.loadTexts: frMuxDlciStateEntry.setStatus('mandatory')
frMuxDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciAdminState.setStatus('mandatory')
frMuxDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciOperationalState.setStatus('mandatory')
frMuxDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciUsageState.setStatus('mandatory')
frMuxDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 12), )
if mibBuilder.loadTexts: frMuxDlciAbitTable.setStatus('mandatory')
frMuxDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"))
if mibBuilder.loadTexts: frMuxDlciAbitEntry.setStatus('mandatory')
frMuxDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciABitStatusFromIf.setStatus('mandatory')
frMuxDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13), )
if mibBuilder.loadTexts: frMuxDlciStatsTable.setStatus('mandatory')
frMuxDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"))
if mibBuilder.loadTexts: frMuxDlciStatsEntry.setStatus('mandatory')
frMuxDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciFrmToIf.setStatus('mandatory')
frMuxDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciBytesToIf.setStatus('mandatory')
frMuxDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciFrmFromIf.setStatus('mandatory')
frMuxDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciDeFrmFromIf.setStatus('mandatory')
frMuxDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciBytesFromIf.setStatus('mandatory')
frMuxDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciDeBytesFromIf.setStatus('mandatory')
frMuxDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciFecnFrmToIf.setStatus('mandatory')
frMuxDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciFecnFrmFromIf.setStatus('mandatory')
frMuxDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciBecnFrmToIf.setStatus('mandatory')
frMuxDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciBecnFrmFromIf.setStatus('mandatory')
frMuxDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciDiscCongestedFromIf.setStatus('mandatory')
frMuxDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciDiscCongestedFromIfBytes.setStatus('mandatory')
frMuxDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciDiscDeCongestedFromIf.setStatus('mandatory')
frMuxDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
frMuxDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciErrorShortFrmFromIf.setStatus('mandatory')
frMuxDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 13, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciErrorLongFrmFromIf.setStatus('mandatory')
frMuxDlciApplInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2))
frMuxDlciApplInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 1), )
if mibBuilder.loadTexts: frMuxDlciApplInfoRowStatusTable.setStatus('mandatory')
frMuxDlciApplInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciApplInfoIndex"))
if mibBuilder.loadTexts: frMuxDlciApplInfoRowStatusEntry.setStatus('mandatory')
frMuxDlciApplInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciApplInfoRowStatus.setStatus('mandatory')
frMuxDlciApplInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciApplInfoComponentName.setStatus('mandatory')
frMuxDlciApplInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frMuxDlciApplInfoStorageType.setStatus('mandatory')
frMuxDlciApplInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frMuxDlciApplInfoIndex.setStatus('mandatory')
frMuxDlciApplInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 11), )
if mibBuilder.loadTexts: frMuxDlciApplInfoProvTable.setStatus('mandatory')
frMuxDlciApplInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayMuxMIB", "frMuxDlciApplInfoIndex"))
if mibBuilder.loadTexts: frMuxDlciApplInfoProvEntry.setStatus('mandatory')
frMuxDlciApplInfoApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 112, 4, 2, 11, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frMuxDlciApplInfoApplicationName.setStatus('mandatory')
frameRelayMuxGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 1))
frameRelayMuxGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 1, 5))
frameRelayMuxGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 1, 5, 1))
frameRelayMuxGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 1, 5, 1, 2))
frameRelayMuxCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 3))
frameRelayMuxCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 3, 5))
frameRelayMuxCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 3, 5, 1))
frameRelayMuxCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 38, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayMuxMIB", frMuxLmiProcedures=frMuxLmiProcedures, frMuxFramerNormPrioLinkUtilFromIf=frMuxFramerNormPrioLinkUtilFromIf, frMuxIfEntryTable=frMuxIfEntryTable, frMuxLmiStorageType=frMuxLmiStorageType, frMuxFramerStatsEntry=frMuxFramerStatsEntry, frMuxDlciDiscCongestedFromIfBytes=frMuxDlciDiscCongestedFromIfBytes, frMuxAlarmStatus=frMuxAlarmStatus, frMuxFramerFrmModeErrors=frMuxFramerFrmModeErrors, frMuxRowStatusEntry=frMuxRowStatusEntry, frMuxStatsTable=frMuxStatsTable, frameRelayMuxCapabilitiesBE=frameRelayMuxCapabilitiesBE, frMuxDlciBecnFrmFromIf=frMuxDlciBecnFrmFromIf, frMuxLmiRowStatus=frMuxLmiRowStatus, frMuxStandbyStatus=frMuxStandbyStatus, frMuxAdminState=frMuxAdminState, frMuxDlciRowStatusTable=frMuxDlciRowStatusTable, frMuxUnknownDlciFramesFromIf=frMuxUnknownDlciFramesFromIf, frMuxStateTable=frMuxStateTable, frMuxDlciApplInfoApplicationName=frMuxDlciApplInfoApplicationName, frMuxLmiAdminState=frMuxLmiAdminState, frMuxDlciBecnFrmToIf=frMuxDlciBecnFrmToIf, frMuxIfAdminStatus=frMuxIfAdminStatus, frMuxFramerLargeFrmErrors=frMuxFramerLargeFrmErrors, frMuxDlciStateTable=frMuxDlciStateTable, frMuxSnmpOperStatus=frMuxSnmpOperStatus, frMuxDlciStorageType=frMuxDlciStorageType, frMuxLastUnknownDlci=frMuxLastUnknownDlci, frMuxDlciDeFrmFromIf=frMuxDlciDeFrmFromIf, frMuxRowStatus=frMuxRowStatus, frMuxFramerProvEntry=frMuxFramerProvEntry, frMuxDlciFrmFromIf=frMuxDlciFrmFromIf, frameRelayMuxGroup=frameRelayMuxGroup, frMuxStatsEntry=frMuxStatsEntry, frMuxFramerLinkTable=frMuxFramerLinkTable, frMuxIfEntryEntry=frMuxIfEntryEntry, frMuxIfIndex=frMuxIfIndex, frMuxDlciApplInfoRowStatusEntry=frMuxDlciApplInfoRowStatusEntry, frMuxDlciApplInfoComponentName=frMuxDlciApplInfoComponentName, frMuxFramerProvTable=frMuxFramerProvTable, frMuxDlciStatsTable=frMuxDlciStatsTable, frMuxFramerFrmFromIf=frMuxFramerFrmFromIf, frMuxDlciIndex=frMuxDlciIndex, frMuxFramerComponentName=frMuxFramerComponentName, frMuxLmiIndex=frMuxLmiIndex, frMuxDlciComponentName=frMuxDlciComponentName, frMuxDlciABitStatusFromIf=frMuxDlciABitStatusFromIf, frMuxControlStatus=frMuxControlStatus, frMuxAvailabilityStatus=frMuxAvailabilityStatus, frameRelayMuxGroupBE=frameRelayMuxGroupBE, frMuxCustomerIdentifier=frMuxCustomerIdentifier, frMuxFramerCrcErrors=frMuxFramerCrcErrors, frMuxFramerUsageState=frMuxFramerUsageState, frMuxLmiNoStatusReportCount=frMuxLmiNoStatusReportCount, frMuxDlciApplInfo=frMuxDlciApplInfo, frMuxFramerRowStatusEntry=frMuxFramerRowStatusEntry, frMuxFramerLrcErrors=frMuxFramerLrcErrors, frMuxDlciBytesFromIf=frMuxDlciBytesFromIf, frMuxLmiStateTable=frMuxLmiStateTable, frMuxDlciRowStatusEntry=frMuxDlciRowStatusEntry, frMuxFramerUtilTable=frMuxFramerUtilTable, frMuxUnknownStatus=frMuxUnknownStatus, frMuxDlciOperTable=frMuxDlciOperTable, frMuxFramerNonOctetErrors=frMuxFramerNonOctetErrors, frMuxLmiSequenceErrors=frMuxLmiSequenceErrors, frameRelayMuxCapabilitiesBE00A=frameRelayMuxCapabilitiesBE00A, frMuxLmiUsageState=frMuxLmiUsageState, frMuxCidDataEntry=frMuxCidDataEntry, frMuxDlciAdminState=frMuxDlciAdminState, frMuxLmiKeepAliveStatusEnqToIf=frMuxLmiKeepAliveStatusEnqToIf, frMuxDlciApplInfoProvEntry=frMuxDlciApplInfoProvEntry, frMuxLmiPsiEntry=frMuxLmiPsiEntry, frMuxIndex=frMuxIndex, frMuxLmiRowStatusTable=frMuxLmiRowStatusTable, frMuxFramerRowStatusTable=frMuxFramerRowStatusTable, frMuxCidDataTable=frMuxCidDataTable, frMuxLmiComponentName=frMuxLmiComponentName, frMuxLmiEventCount=frMuxLmiEventCount, frMuxComponentName=frMuxComponentName, frMuxFramerOverruns=frMuxFramerOverruns, frMuxLmiLinkVerificationTimer=frMuxLmiLinkVerificationTimer, frMuxFramerOperationalState=frMuxFramerOperationalState, frMuxFramerUtilEntry=frMuxFramerUtilEntry, frMuxProceduralStatus=frMuxProceduralStatus, frMuxFramerLinkEntry=frMuxFramerLinkEntry, frMuxDlciFecnFrmFromIf=frMuxDlciFecnFrmFromIf, frMuxDlciUsageState=frMuxDlciUsageState, frMuxDlciDeBytesFromIf=frMuxDlciDeBytesFromIf, frMuxLmiProtocolStatus=frMuxLmiProtocolStatus, frMuxFramerRowStatus=frMuxFramerRowStatus, frMuxRowStatusTable=frMuxRowStatusTable, frMuxDlciErrorShortFrmFromIf=frMuxDlciErrorShortFrmFromIf, frMuxDlciApplInfoProvTable=frMuxDlciApplInfoProvTable, frMuxStorageType=frMuxStorageType, frMuxLmiStatsTable=frMuxLmiStatsTable, frMux=frMux, frMuxOperStatusEntry=frMuxOperStatusEntry, frMuxLmiProvEntry=frMuxLmiProvEntry, frameRelayMuxMIB=frameRelayMuxMIB, frMuxDlciOperationalState=frMuxDlciOperationalState, frMuxDlciAbitEntry=frMuxDlciAbitEntry, frMuxFramer=frMuxFramer, frMuxOperationalState=frMuxOperationalState, frMuxLmiUnexpectedIes=frMuxLmiUnexpectedIes, frMuxDlciRowStatus=frMuxDlciRowStatus, frMuxLmiPsiTable=frMuxLmiPsiTable, frMuxTimeFramerCongested=frMuxTimeFramerCongested, frMuxDlciApplicationName=frMuxDlciApplicationName, frMuxOperStatusTable=frMuxOperStatusTable, frameRelayMuxCapabilities=frameRelayMuxCapabilities, frMuxFramerFlagsBetweenFrames=frMuxFramerFlagsBetweenFrames, frMuxDlciApplInfoIndex=frMuxDlciApplInfoIndex, frMuxLmiUnexpectedReports=frMuxLmiUnexpectedReports, frameRelayMuxCapabilitiesBE00=frameRelayMuxCapabilitiesBE00, frMuxFramerStateEntry=frMuxFramerStateEntry, frMuxDlciFecnFrmToIf=frMuxDlciFecnFrmToIf, frMuxFramerIndex=frMuxFramerIndex, frMuxFramerUnderruns=frMuxFramerUnderruns, frMuxFramerFrmToIf=frMuxFramerFrmToIf, frMuxDlciAbitTable=frMuxDlciAbitTable, frMuxLmiFullStatusPollingCycles=frMuxLmiFullStatusPollingCycles, frameRelayMuxGroupBE00=frameRelayMuxGroupBE00, frMuxDlciDiscDeCongestedFromIfBytes=frMuxDlciDiscDeCongestedFromIfBytes, frMuxFramerAborts=frMuxFramerAborts, frMuxDlciStateEntry=frMuxDlciStateEntry, frMuxDlciOperEntry=frMuxDlciOperEntry, frMuxDlciStatsEntry=frMuxDlciStatsEntry, frMuxDlciErrorLongFrmFromIf=frMuxDlciErrorLongFrmFromIf, frMuxStateEntry=frMuxStateEntry, frMuxFramerAdminState=frMuxFramerAdminState, frMuxDlciFrmToIf=frMuxDlciFrmToIf, frMuxFramerStateTable=frMuxFramerStateTable, frMuxLmiProvTable=frMuxLmiProvTable, frMuxLmiErrorEventThreshold=frMuxLmiErrorEventThreshold, frMuxLmiStateEntry=frMuxLmiStateEntry, frMuxDlciApplInfoRowStatus=frMuxDlciApplInfoRowStatus, frMuxLmiProtocolErrors=frMuxLmiProtocolErrors, frMuxLmi=frMuxLmi, frMuxDlciBytesToIf=frMuxDlciBytesToIf, frMuxLmiRowStatusEntry=frMuxLmiRowStatusEntry, frameRelayMuxGroupBE00A=frameRelayMuxGroupBE00A, frMuxUsageState=frMuxUsageState, frMuxLmiFullStatusEnqToIf=frMuxLmiFullStatusEnqToIf, frMuxFramerStatsTable=frMuxFramerStatsTable, frMuxDlciApplInfoStorageType=frMuxDlciApplInfoStorageType, frMuxFramerNormPrioLinkUtilToIf=frMuxFramerNormPrioLinkUtilToIf, frMuxDlciApplInfoRowStatusTable=frMuxDlciApplInfoRowStatusTable, frMuxDlciDiscDeCongestedFromIf=frMuxDlciDiscDeCongestedFromIf, frMuxDlci=frMuxDlci, frMuxInvalidHeaderFramesFromIf=frMuxInvalidHeaderFramesFromIf, frMuxLmiStatsEntry=frMuxLmiStatsEntry, frMuxFramerInterfaceName=frMuxFramerInterfaceName, frMuxDlciDiscCongestedFromIf=frMuxDlciDiscCongestedFromIf, frMuxFramerOctetFromIf=frMuxFramerOctetFromIf, frMuxLmiOperationalState=frMuxLmiOperationalState, frMuxFramerStorageType=frMuxFramerStorageType)
