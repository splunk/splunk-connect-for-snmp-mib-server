#
# PySNMP MIB module HH3C-IF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-IF-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter32, Counter64, IpAddress, ModuleIdentity, Gauge32, NotificationType, TimeTicks, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "Counter64", "IpAddress", "ModuleIdentity", "Gauge32", "NotificationType", "TimeTicks", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "Bits")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
hh3cIfExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 40))
hh3cIfExt.setRevisions(('2009-05-06 19:36', '2004-11-13 19:36',))
if mibBuilder.loadTexts: hh3cIfExt.setLastUpdated('200905061936Z')
if mibBuilder.loadTexts: hh3cIfExt.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cIfExtScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 1))
hh3cIfStatGlobalFlowInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 40, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfStatGlobalFlowInterval.setStatus('current')
hh3cIfExtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2))
hh3cIfStat = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1))
hh3cIfStatScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 1))
hh3cIfStatTable = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2))
hh3cIfFlowStatTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cIfFlowStatTable.setStatus('current')
hh3cIfFlowStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIfFlowStatEntry.setStatus('current')
hh3cIfStatFlowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfStatFlowInterval.setStatus('current')
hh3cIfStatFlowInBits = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatFlowInBits.setStatus('current')
hh3cIfStatFlowOutBits = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatFlowOutBits.setStatus('current')
hh3cIfStatFlowInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatFlowInPkts.setStatus('current')
hh3cIfStatFlowOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatFlowOutPkts.setStatus('current')
hh3cIfStatFlowInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatFlowInBytes.setStatus('current')
hh3cIfStatFlowOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatFlowOutBytes.setStatus('current')
hh3cIfSpeedStatTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cIfSpeedStatTable.setStatus('current')
hh3cIfSpeedStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIfSpeedStatEntry.setStatus('current')
hh3cIfSpeedStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfSpeedStatInterval.setStatus('current')
hh3cIfSpeedStatInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfSpeedStatInPkts.setStatus('current')
hh3cIfSpeedStatOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfSpeedStatOutPkts.setStatus('current')
hh3cIfSpeedStatInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfSpeedStatInBytes.setStatus('current')
hh3cIfSpeedStatOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfSpeedStatOutBytes.setStatus('current')
hh3cIfControl = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2))
hh3cRTParentIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 1), )
if mibBuilder.loadTexts: hh3cRTParentIfTable.setStatus('current')
hh3cRTParentIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 1, 1), ).setIndexNames((0, "HH3C-IF-EXT-MIB", "hh3cRTParentIfIndex"))
if mibBuilder.loadTexts: hh3cRTParentIfEntry.setStatus('current')
hh3cRTParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cRTParentIfIndex.setStatus('current')
hh3cRTMinSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTMinSubIfOrdinal.setStatus('current')
hh3cRTMaxSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTMaxSubIfOrdinal.setStatus('current')
hh3cRTSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2), )
if mibBuilder.loadTexts: hh3cRTSubIfTable.setStatus('current')
hh3cRTSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2, 1), ).setIndexNames((0, "HH3C-IF-EXT-MIB", "hh3cRTSubIfParentIfIndex"), (0, "HH3C-IF-EXT-MIB", "hh3cRTSubIfOrdinal"))
if mibBuilder.loadTexts: hh3cRTSubIfEntry.setStatus('current')
hh3cRTSubIfParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cRTSubIfParentIfIndex.setStatus('current')
hh3cRTSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hh3cRTSubIfOrdinal.setStatus('current')
hh3cRTSubIfSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTSubIfSubIfIndex.setStatus('current')
hh3cRTSubIfSubIfDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRTSubIfSubIfDesc.setStatus('current')
hh3cRTSubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRTSubIfRowStatus.setStatus('current')
hh3cIfLinkModeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 3), )
if mibBuilder.loadTexts: hh3cIfLinkModeTable.setStatus('current')
hh3cIfLinkModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 3, 1), ).setIndexNames((0, "HH3C-IF-EXT-MIB", "hh3cIfLinkModeIndex"))
if mibBuilder.loadTexts: hh3cIfLinkModeEntry.setStatus('current')
hh3cIfLinkModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cIfLinkModeIndex.setStatus('current')
hh3cIfLinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridgeMode", 1), ("routeMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfLinkMode.setStatus('current')
hh3cIfLinkModeSwitchSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 2, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfLinkModeSwitchSupport.setStatus('current')
hh3cIfInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3))
hh3cIfPhysicalNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfPhysicalNumber.setStatus('current')
hh3cIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2), )
if mibBuilder.loadTexts: hh3cIfTable.setStatus('current')
hh3cIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIfEntry.setStatus('current')
hh3cIfUpDownTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfUpDownTimes.setStatus('current')
hh3cIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfMtu.setStatus('current')
hh3cIfBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfBandwidthRate.setStatus('current')
hh3cIfDiscardPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfDiscardPktRate.setStatus('current')
hh3cIfStatusKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfStatusKeepTime.setStatus('current')
hh3cIfInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfInNUcastPkts.setStatus('current')
hh3cIfOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 2, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIfOutNUcastPkts.setStatus('current')
hh3cIfExtTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3))
hh3cIfExtTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 0))
hh3cIfBandwidthUsageHigh = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 0, 1)).setObjects(("IF-MIB", "ifDescr"), ("HH3C-IF-EXT-MIB", "hh3cIfBandwidthRate"), ("HH3C-IF-EXT-MIB", "hh3cIfBandwidthUpperLimit"))
if mibBuilder.loadTexts: hh3cIfBandwidthUsageHigh.setStatus('current')
hh3cIfDiscardPktRateHigh = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 0, 2)).setObjects(("IF-MIB", "ifDescr"), ("HH3C-IF-EXT-MIB", "hh3cIfDiscardPktRate"), ("HH3C-IF-EXT-MIB", "hh3cIfDiscardPktRateUpperLimit"))
if mibBuilder.loadTexts: hh3cIfDiscardPktRateHigh.setStatus('current')
hh3cIfExtTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 1))
hh3cIfExtTrapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 1, 1), )
if mibBuilder.loadTexts: hh3cIfExtTrapCfgTable.setStatus('current')
hh3cIfExtTrapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIfExtTrapCfgEntry.setStatus('current')
hh3cIfBandwidthUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfBandwidthUpperLimit.setStatus('current')
hh3cIfDiscardPktRateUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 40, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIfDiscardPktRateUpperLimit.setStatus('current')
mibBuilder.exportSymbols("HH3C-IF-EXT-MIB", hh3cIfStatFlowInBits=hh3cIfStatFlowInBits, hh3cIfBandwidthUpperLimit=hh3cIfBandwidthUpperLimit, hh3cIfStatTable=hh3cIfStatTable, hh3cIfSpeedStatOutBytes=hh3cIfSpeedStatOutBytes, hh3cRTSubIfSubIfDesc=hh3cRTSubIfSubIfDesc, hh3cIfTable=hh3cIfTable, hh3cIfEntry=hh3cIfEntry, hh3cIfExt=hh3cIfExt, hh3cRTMinSubIfOrdinal=hh3cRTMinSubIfOrdinal, hh3cIfStat=hh3cIfStat, hh3cIfStatFlowInBytes=hh3cIfStatFlowInBytes, hh3cIfControl=hh3cIfControl, hh3cRTSubIfRowStatus=hh3cRTSubIfRowStatus, hh3cRTSubIfOrdinal=hh3cRTSubIfOrdinal, hh3cIfSpeedStatInPkts=hh3cIfSpeedStatInPkts, hh3cIfLinkModeTable=hh3cIfLinkModeTable, hh3cIfDiscardPktRateHigh=hh3cIfDiscardPktRateHigh, hh3cIfDiscardPktRateUpperLimit=hh3cIfDiscardPktRateUpperLimit, hh3cIfExtGroup=hh3cIfExtGroup, hh3cIfExtTrapCfgEntry=hh3cIfExtTrapCfgEntry, hh3cIfStatFlowInterval=hh3cIfStatFlowInterval, hh3cIfStatFlowInPkts=hh3cIfStatFlowInPkts, hh3cIfSpeedStatOutPkts=hh3cIfSpeedStatOutPkts, hh3cRTMaxSubIfOrdinal=hh3cRTMaxSubIfOrdinal, hh3cIfLinkModeIndex=hh3cIfLinkModeIndex, hh3cIfSpeedStatEntry=hh3cIfSpeedStatEntry, hh3cIfStatScalarGroup=hh3cIfStatScalarGroup, hh3cIfExtScalarGroup=hh3cIfExtScalarGroup, hh3cRTSubIfParentIfIndex=hh3cRTSubIfParentIfIndex, hh3cIfStatFlowOutBits=hh3cIfStatFlowOutBits, hh3cRTSubIfSubIfIndex=hh3cRTSubIfSubIfIndex, hh3cIfLinkModeEntry=hh3cIfLinkModeEntry, hh3cIfUpDownTimes=hh3cIfUpDownTimes, hh3cIfInNUcastPkts=hh3cIfInNUcastPkts, hh3cIfOutNUcastPkts=hh3cIfOutNUcastPkts, hh3cRTSubIfTable=hh3cRTSubIfTable, hh3cRTSubIfEntry=hh3cRTSubIfEntry, hh3cRTParentIfEntry=hh3cRTParentIfEntry, hh3cIfSpeedStatInBytes=hh3cIfSpeedStatInBytes, hh3cIfLinkModeSwitchSupport=hh3cIfLinkModeSwitchSupport, hh3cIfExtTrapObject=hh3cIfExtTrapObject, hh3cIfFlowStatTable=hh3cIfFlowStatTable, hh3cIfStatusKeepTime=hh3cIfStatusKeepTime, hh3cIfInterfaces=hh3cIfInterfaces, hh3cIfStatFlowOutPkts=hh3cIfStatFlowOutPkts, hh3cIfLinkMode=hh3cIfLinkMode, hh3cIfSpeedStatTable=hh3cIfSpeedStatTable, hh3cIfMtu=hh3cIfMtu, hh3cIfExtTrapCfgTable=hh3cIfExtTrapCfgTable, hh3cRTParentIfIndex=hh3cRTParentIfIndex, hh3cRTParentIfTable=hh3cRTParentIfTable, hh3cIfExtTrap=hh3cIfExtTrap, hh3cIfBandwidthUsageHigh=hh3cIfBandwidthUsageHigh, hh3cIfSpeedStatInterval=hh3cIfSpeedStatInterval, hh3cIfPhysicalNumber=hh3cIfPhysicalNumber, hh3cIfStatGlobalFlowInterval=hh3cIfStatGlobalFlowInterval, hh3cIfBandwidthRate=hh3cIfBandwidthRate, hh3cIfDiscardPktRate=hh3cIfDiscardPktRate, hh3cIfStatFlowOutBytes=hh3cIfStatFlowOutBytes, PYSNMP_MODULE_ID=hh3cIfExt, hh3cIfExtTrapPrex=hh3cIfExtTrapPrex, hh3cIfFlowStatEntry=hh3cIfFlowStatEntry)
