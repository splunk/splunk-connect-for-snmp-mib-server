#
# PySNMP MIB module HPN-ICF-EVI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-EVI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
IsisSystemID, = mibBuilder.importSymbols("ISIS-MIB", "IsisSystemID")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, TimeTicks, Unsigned32, ObjectIdentity, Gauge32, Integer32, IpAddress, iso, Counter64, MibIdentifier, ModuleIdentity, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Unsigned32", "ObjectIdentity", "Gauge32", "Integer32", "IpAddress", "iso", "Counter64", "MibIdentifier", "ModuleIdentity", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TruthValue, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus", "MacAddress")
hpnicfEvi = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132))
hpnicfEvi.setRevisions(('2013-04-28 00:00',))
if mibBuilder.loadTexts: hpnicfEvi.setLastUpdated('201304280000Z')
if mibBuilder.loadTexts: hpnicfEvi.setOrganization('')
hpnicfEviNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 0))
hpnicfEviObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1))
hpnicfEviBase = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 1))
hpnicfEviIf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2))
hpnicfEviMac = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3))
hpnicfEviProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4))
hpnicfEviISIS = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5))
hpnicfEviEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 6))
hpnicfEviNbr = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7))
class HpnicfEviMacType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("dynamic", 2), ("static", 3), ("flood", 4))

class HpnicfEviNeighborStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

hpnicfEviDesignatedVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 1, 1), VlanId().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviDesignatedVlan.setStatus('current')
hpnicfEviSiteID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviSiteID.setStatus('current')
hpnicfEviIfExtendVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfEviIfExtendVlanTable.setStatus('current')
hpnicfEviIfExtendVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviIfExtendVlanIndex"))
if mibBuilder.loadTexts: hpnicfEviIfExtendVlanEntry.setStatus('current')
hpnicfEviIfExtendVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 1, 1, 1), VlanId())
if mibBuilder.loadTexts: hpnicfEviIfExtendVlanIndex.setStatus('current')
hpnicfEviIfExtendVlanLAV = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviIfExtendVlanLAV.setStatus('current')
hpnicfEviIfExtendVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEviIfExtendVlanRowStatus.setStatus('current')
hpnicfEviIfVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfEviIfVlanMappingTable.setStatus('current')
hpnicfEviIfVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviIfVlanMappingSiteId"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviIfVlanMappingSrc"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviIfVlanMappingDst"))
if mibBuilder.loadTexts: hpnicfEviIfVlanMappingEntry.setStatus('current')
hpnicfEviIfVlanMappingSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfEviIfVlanMappingSiteId.setStatus('current')
hpnicfEviIfVlanMappingSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 2, 1, 2), VlanId())
if mibBuilder.loadTexts: hpnicfEviIfVlanMappingSrc.setStatus('current')
hpnicfEviIfVlanMappingDst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 2, 1, 3), VlanId())
if mibBuilder.loadTexts: hpnicfEviIfVlanMappingDst.setStatus('current')
hpnicfEviIfVlanMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEviIfVlanMappingRowStatus.setStatus('current')
hpnicfEviIfAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 3), )
if mibBuilder.loadTexts: hpnicfEviIfAttributeTable.setStatus('current')
hpnicfEviIfAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEviIfAttributeEntry.setStatus('current')
hpnicfEviIfFloodingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviIfFloodingMode.setStatus('current')
hpnicfEviIfARPSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviIfARPSuppression.setStatus('current')
hpnicfEviIfFloodingMacTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 4), )
if mibBuilder.loadTexts: hpnicfEviIfFloodingMacTable.setStatus('current')
hpnicfEviIfFloodingMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviIfFloodingMacAddress"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviIfFloodMacVlanIndex"))
if mibBuilder.loadTexts: hpnicfEviIfFloodingMacEntry.setStatus('current')
hpnicfEviIfFloodingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfEviIfFloodingMacAddress.setStatus('current')
hpnicfEviIfFloodMacVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 4, 1, 2), VlanId())
if mibBuilder.loadTexts: hpnicfEviIfFloodMacVlanIndex.setStatus('current')
hpnicfEviIfFloodingMacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEviIfFloodingMacRowStatus.setStatus('current')
hpnicfEviMacCountTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfEviMacCountTable.setStatus('current')
hpnicfEviMacCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEviMacCountEntry.setStatus('current')
hpnicfEviMacLocalMacs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacLocalMacs.setStatus('current')
hpnicfEviMacLocalConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacLocalConflicts.setStatus('current')
hpnicfEviMacRemoteMacs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacRemoteMacs.setStatus('current')
hpnicfEviMacRemoteConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacRemoteConflicts.setStatus('current')
hpnicfEviMacLocalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2), )
if mibBuilder.loadTexts: hpnicfEviMacLocalTable.setStatus('current')
hpnicfEviMacLocalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviMacLocalVlan"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviMacLocalMacAddr"))
if mibBuilder.loadTexts: hpnicfEviMacLocalEntry.setStatus('current')
hpnicfEviMacLocalVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: hpnicfEviMacLocalVlan.setStatus('current')
hpnicfEviMacLocalMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: hpnicfEviMacLocalMacAddr.setStatus('current')
hpnicfEviMacLocalMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2, 1, 3), HpnicfEviMacType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacLocalMacType.setStatus('current')
hpnicfEviMacLocalConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacLocalConflict.setStatus('current')
hpnicfEviMacLocalFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacLocalFiltered.setStatus('current')
hpnicfEviMacRemoteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 3), )
if mibBuilder.loadTexts: hpnicfEviMacRemoteTable.setStatus('current')
hpnicfEviMacRemoteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviMacRemoteVlan"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviMacRemoteMacAddr"))
if mibBuilder.loadTexts: hpnicfEviMacRemoteEntry.setStatus('current')
hpnicfEviMacRemoteVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: hpnicfEviMacRemoteVlan.setStatus('current')
hpnicfEviMacRemoteMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: hpnicfEviMacRemoteMacAddr.setStatus('current')
hpnicfEviMacRemoteMacEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacRemoteMacEffect.setStatus('current')
hpnicfEviMacRemoteConflict = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 3, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviMacRemoteConflict.setStatus('current')
hpnicfEviProcessPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 1), )
if mibBuilder.loadTexts: hpnicfEviProcessPolicyTable.setStatus('current')
hpnicfEviProcessPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-EVI-MIB", "hpnicfEviProcessId"))
if mibBuilder.loadTexts: hpnicfEviProcessPolicyEntry.setStatus('current')
hpnicfEviProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEviProcessId.setStatus('current')
hpnicfEviProcessPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviProcessPolicy.setStatus('current')
hpnicfEviProcessGrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 2), )
if mibBuilder.loadTexts: hpnicfEviProcessGrTable.setStatus('current')
hpnicfEviProcessGrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 2, 1), ).setIndexNames((0, "HPN-ICF-EVI-MIB", "hpnicfEviProcessId"))
if mibBuilder.loadTexts: hpnicfEviProcessGrEntry.setStatus('current')
hpnicfEviProcessGrEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviProcessGrEnable.setStatus('current')
hpnicfEviProcessGrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 1800)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviProcessGrInterval.setStatus('current')
hpnicfEviProcessVSysTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 3), )
if mibBuilder.loadTexts: hpnicfEviProcessVSysTable.setStatus('current')
hpnicfEviProcessVSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 3, 1), ).setIndexNames((0, "HPN-ICF-EVI-MIB", "hpnicfEviProcessId"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviVirtualSysId"))
if mibBuilder.loadTexts: hpnicfEviProcessVSysEntry.setStatus('current')
hpnicfEviVirtualSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 3, 1, 1), IsisSystemID())
if mibBuilder.loadTexts: hpnicfEviVirtualSysId.setStatus('current')
hpnicfEviVirtualSysRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEviVirtualSysRowStatus.setStatus('current')
hpnicfEviISISNbrSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 1), )
if mibBuilder.loadTexts: hpnicfEviISISNbrSummaryTable.setStatus('current')
hpnicfEviISISNbrSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 1, 1), ).setIndexNames((0, "HPN-ICF-EVI-MIB", "hpnicfEviProcessId"))
if mibBuilder.loadTexts: hpnicfEviISISNbrSummaryEntry.setStatus('current')
hpnicfEviISISNbrMaxMultiHomes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviISISNbrMaxMultiHomes.setStatus('current')
hpnicfEviISISNbrSiteNbrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviISISNbrSiteNbrs.setStatus('current')
hpnicfEviISISNbrLinkNbrs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviISISNbrLinkNbrs.setStatus('current')
hpnicfEviISISNbrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 2), )
if mibBuilder.loadTexts: hpnicfEviISISNbrTable.setStatus('current')
hpnicfEviISISNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 2, 1), ).setIndexNames((0, "HPN-ICF-EVI-MIB", "hpnicfEviProcessId"), (0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviISISNbrSysId"))
if mibBuilder.loadTexts: hpnicfEviISISNbrEntry.setStatus('current')
hpnicfEviISISNbrSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 2, 1, 1), IsisSystemID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEviISISNbrSysId.setStatus('current')
hpnicfEviISISNbrMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviISISNbrMacAddr.setStatus('current')
hpnicfEviISISNbrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviISISNbrSiteId.setStatus('current')
hpnicfEviISISNbrTransStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 5, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviISISNbrTransStatus.setStatus('current')
hpnicfEviEnableTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 6, 1), )
if mibBuilder.loadTexts: hpnicfEviEnableTable.setStatus('current')
hpnicfEviEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEviEnableEntry.setStatus('current')
hpnicfEviEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 6, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviEnableStatus.setStatus('current')
hpnicfEviNbrBaseTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 1), )
if mibBuilder.loadTexts: hpnicfEviNbrBaseTable.setStatus('current')
hpnicfEviNbrBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEviNbrBaseEntry.setStatus('current')
hpnicfEviNbrSelfServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviNbrSelfServerStatus.setStatus('current')
hpnicfEviNbrAuthPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviNbrAuthPassword.setStatus('current')
hpnicfEviNbrClientRegisterInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEviNbrClientRegisterInterval.setStatus('current')
hpnicfEviNbrRemoteServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 2), )
if mibBuilder.loadTexts: hpnicfEviNbrRemoteServerTable.setStatus('current')
hpnicfEviNbrRemoteServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviNbrRemoteServerType"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviNbrRemoteServer"))
if mibBuilder.loadTexts: hpnicfEviNbrRemoteServerEntry.setStatus('current')
hpnicfEviNbrRemoteServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfEviNbrRemoteServerType.setStatus('current')
hpnicfEviNbrRemoteServer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpnicfEviNbrRemoteServer.setStatus('current')
hpnicfEviNbrRemoteServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEviNbrRemoteServerRowStatus.setStatus('current')
hpnicfEviNbrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3), )
if mibBuilder.loadTexts: hpnicfEviNbrTable.setStatus('current')
hpnicfEviNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviNbrAddressType"), (0, "HPN-ICF-EVI-MIB", "hpnicfEviNbrAddress"))
if mibBuilder.loadTexts: hpnicfEviNbrEntry.setStatus('current')
hpnicfEviNbrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfEviNbrAddressType.setStatus('current')
hpnicfEviNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: hpnicfEviNbrAddress.setStatus('current')
hpnicfEviNbrSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviNbrSystemID.setStatus('current')
hpnicfEviNbrExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviNbrExpireTime.setStatus('current')
hpnicfEviNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 1, 7, 3, 1, 5), HpnicfEviNeighborStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEviNbrStatus.setStatus('current')
hpnicfEviNewDed = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("HPN-ICF-EVI-MIB", "hpnicfEviProcessId"), ("HPN-ICF-EVI-MIB", "hpnicfEviISISNbrSysId"))
if mibBuilder.loadTexts: hpnicfEviNewDed.setStatus('current')
hpnicfEviSiteEDTopoChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 0, 2)).setObjects(("HPN-ICF-EVI-MIB", "hpnicfEviProcessId"), ("HPN-ICF-EVI-MIB", "hpnicfEviISISNbrSiteNbrs"))
if mibBuilder.loadTexts: hpnicfEviSiteEDTopoChange.setStatus('current')
hpnicfEviEDLinkDisconnect = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 132, 0, 3)).setObjects(("HPN-ICF-EVI-MIB", "hpnicfEviProcessId"))
if mibBuilder.loadTexts: hpnicfEviEDLinkDisconnect.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-EVI-MIB", hpnicfEviISISNbrSummaryTable=hpnicfEviISISNbrSummaryTable, hpnicfEviNbrRemoteServerRowStatus=hpnicfEviNbrRemoteServerRowStatus, hpnicfEviEnable=hpnicfEviEnable, hpnicfEviIfExtendVlanTable=hpnicfEviIfExtendVlanTable, hpnicfEviProcessPolicyTable=hpnicfEviProcessPolicyTable, hpnicfEviNbrRemoteServerType=hpnicfEviNbrRemoteServerType, hpnicfEviIfFloodingMacTable=hpnicfEviIfFloodingMacTable, hpnicfEvi=hpnicfEvi, hpnicfEviIfVlanMappingSrc=hpnicfEviIfVlanMappingSrc, hpnicfEviIfExtendVlanIndex=hpnicfEviIfExtendVlanIndex, hpnicfEviProcessId=hpnicfEviProcessId, hpnicfEviObjects=hpnicfEviObjects, hpnicfEviMacRemoteConflict=hpnicfEviMacRemoteConflict, hpnicfEviProcessGrEnable=hpnicfEviProcessGrEnable, hpnicfEviNewDed=hpnicfEviNewDed, hpnicfEviMacLocalVlan=hpnicfEviMacLocalVlan, hpnicfEviISISNbrMacAddr=hpnicfEviISISNbrMacAddr, hpnicfEviIfVlanMappingSiteId=hpnicfEviIfVlanMappingSiteId, hpnicfEviNbrBaseTable=hpnicfEviNbrBaseTable, hpnicfEviProcessVSysEntry=hpnicfEviProcessVSysEntry, hpnicfEviIfVlanMappingDst=hpnicfEviIfVlanMappingDst, hpnicfEviNbrEntry=hpnicfEviNbrEntry, hpnicfEviIfAttributeEntry=hpnicfEviIfAttributeEntry, hpnicfEviProcessGrEntry=hpnicfEviProcessGrEntry, hpnicfEviMacLocalEntry=hpnicfEviMacLocalEntry, hpnicfEviNbrSystemID=hpnicfEviNbrSystemID, hpnicfEviIf=hpnicfEviIf, hpnicfEviIfExtendVlanLAV=hpnicfEviIfExtendVlanLAV, hpnicfEviSiteEDTopoChange=hpnicfEviSiteEDTopoChange, hpnicfEviNbrRemoteServer=hpnicfEviNbrRemoteServer, hpnicfEviBase=hpnicfEviBase, PYSNMP_MODULE_ID=hpnicfEvi, hpnicfEviEnableEntry=hpnicfEviEnableEntry, hpnicfEviISISNbrSummaryEntry=hpnicfEviISISNbrSummaryEntry, hpnicfEviNbrAddress=hpnicfEviNbrAddress, hpnicfEviIfFloodMacVlanIndex=hpnicfEviIfFloodMacVlanIndex, hpnicfEviISISNbrTransStatus=hpnicfEviISISNbrTransStatus, hpnicfEviNbrExpireTime=hpnicfEviNbrExpireTime, hpnicfEviMacCountTable=hpnicfEviMacCountTable, hpnicfEviMacLocalMacType=hpnicfEviMacLocalMacType, hpnicfEviMacRemoteMacs=hpnicfEviMacRemoteMacs, hpnicfEviIfExtendVlanEntry=hpnicfEviIfExtendVlanEntry, hpnicfEviMacRemoteVlan=hpnicfEviMacRemoteVlan, hpnicfEviISIS=hpnicfEviISIS, hpnicfEviVirtualSysId=hpnicfEviVirtualSysId, hpnicfEviEDLinkDisconnect=hpnicfEviEDLinkDisconnect, hpnicfEviNotifications=hpnicfEviNotifications, hpnicfEviIfAttributeTable=hpnicfEviIfAttributeTable, hpnicfEviMacLocalMacs=hpnicfEviMacLocalMacs, hpnicfEviMacLocalConflict=hpnicfEviMacLocalConflict, hpnicfEviNbrClientRegisterInterval=hpnicfEviNbrClientRegisterInterval, hpnicfEviISISNbrSysId=hpnicfEviISISNbrSysId, hpnicfEviMacLocalFiltered=hpnicfEviMacLocalFiltered, hpnicfEviSiteID=hpnicfEviSiteID, hpnicfEviIfExtendVlanRowStatus=hpnicfEviIfExtendVlanRowStatus, hpnicfEviProcess=hpnicfEviProcess, hpnicfEviDesignatedVlan=hpnicfEviDesignatedVlan, hpnicfEviMacRemoteMacAddr=hpnicfEviMacRemoteMacAddr, hpnicfEviProcessGrTable=hpnicfEviProcessGrTable, hpnicfEviMacRemoteTable=hpnicfEviMacRemoteTable, hpnicfEviMacLocalConflicts=hpnicfEviMacLocalConflicts, hpnicfEviIfFloodingMacAddress=hpnicfEviIfFloodingMacAddress, hpnicfEviNbrRemoteServerTable=hpnicfEviNbrRemoteServerTable, hpnicfEviISISNbrMaxMultiHomes=hpnicfEviISISNbrMaxMultiHomes, hpnicfEviNbr=hpnicfEviNbr, hpnicfEviNbrAuthPassword=hpnicfEviNbrAuthPassword, hpnicfEviISISNbrSiteId=hpnicfEviISISNbrSiteId, hpnicfEviMacLocalMacAddr=hpnicfEviMacLocalMacAddr, HpnicfEviNeighborStatus=HpnicfEviNeighborStatus, hpnicfEviNbrRemoteServerEntry=hpnicfEviNbrRemoteServerEntry, hpnicfEviISISNbrEntry=hpnicfEviISISNbrEntry, hpnicfEviMacCountEntry=hpnicfEviMacCountEntry, hpnicfEviProcessVSysTable=hpnicfEviProcessVSysTable, hpnicfEviProcessPolicyEntry=hpnicfEviProcessPolicyEntry, HpnicfEviMacType=HpnicfEviMacType, hpnicfEviEnableTable=hpnicfEviEnableTable, hpnicfEviNbrStatus=hpnicfEviNbrStatus, hpnicfEviISISNbrTable=hpnicfEviISISNbrTable, hpnicfEviMacLocalTable=hpnicfEviMacLocalTable, hpnicfEviProcessPolicy=hpnicfEviProcessPolicy, hpnicfEviISISNbrLinkNbrs=hpnicfEviISISNbrLinkNbrs, hpnicfEviProcessGrInterval=hpnicfEviProcessGrInterval, hpnicfEviIfFloodingMacRowStatus=hpnicfEviIfFloodingMacRowStatus, hpnicfEviISISNbrSiteNbrs=hpnicfEviISISNbrSiteNbrs, hpnicfEviNbrSelfServerStatus=hpnicfEviNbrSelfServerStatus, hpnicfEviIfFloodingMode=hpnicfEviIfFloodingMode, hpnicfEviIfARPSuppression=hpnicfEviIfARPSuppression, hpnicfEviVirtualSysRowStatus=hpnicfEviVirtualSysRowStatus, hpnicfEviIfVlanMappingEntry=hpnicfEviIfVlanMappingEntry, hpnicfEviNbrTable=hpnicfEviNbrTable, hpnicfEviMacRemoteEntry=hpnicfEviMacRemoteEntry, hpnicfEviNbrAddressType=hpnicfEviNbrAddressType, hpnicfEviMac=hpnicfEviMac, hpnicfEviNbrBaseEntry=hpnicfEviNbrBaseEntry, hpnicfEviIfFloodingMacEntry=hpnicfEviIfFloodingMacEntry, hpnicfEviIfVlanMappingRowStatus=hpnicfEviIfVlanMappingRowStatus, hpnicfEviMacRemoteMacEffect=hpnicfEviMacRemoteMacEffect, hpnicfEviMacRemoteConflicts=hpnicfEviMacRemoteConflicts, hpnicfEviIfVlanMappingTable=hpnicfEviIfVlanMappingTable, hpnicfEviEnableStatus=hpnicfEviEnableStatus)
