#
# PySNMP MIB module IBM-BCM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM-BCM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:39:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
busConfIndex, busConfEntry = mibBuilder.importSymbols("LAN-EMULATION-BUS-MIB", "busConfIndex", "busConfEntry")
AtmLaneAddress, = mibBuilder.importSymbols("LAN-EMULATION-CLIENT-MIB", "AtmLaneAddress")
mssServerLanE, = mibBuilder.importSymbols("NWAYSMSS-MIB", "mssServerLanE")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, ModuleIdentity, ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, Unsigned32, IpAddress, MibIdentifier, Gauge32, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "Unsigned32", "IpAddress", "MibIdentifier", "Gauge32", "NotificationType", "TimeTicks", "iso")
MacAddress, DisplayString, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TruthValue", "RowStatus", "TextualConvention")
ibmBcmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3))
bcmConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1))
bcmStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2))
bcmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3))
bcmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1))
bcmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 2))
class BcmCacheAge(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

bcmConfTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 1), )
if mibBuilder.loadTexts: bcmConfTable.setStatus('mandatory')
bcmConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 1, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmConfEntry.setStatus('mandatory')
bcmRouteCacheEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmRouteCacheEnabled.setStatus('mandatory')
bcmStaticTargetsNextId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmStaticTargetsNextId.setStatus('mandatory')
bcmStaticTargetsTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3), )
if mibBuilder.loadTexts: bcmStaticTargetsTable.setStatus('mandatory')
bcmStaticTargetsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3, 1), ).setIndexNames((0, "IBM-BCM-MIB", "bcmStaticTargetsIndex"), (0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmStaticTargetsEntry.setStatus('mandatory')
bcmStaticTargetsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmStaticTargetsIndex.setStatus('mandatory')
bcmStaticTargetsAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3, 1, 2), AtmLaneAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmStaticTargetsAtmAddress.setStatus('mandatory')
bcmStaticTargetsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmStaticTargetsMacAddress.setStatus('mandatory')
bcmStaticTargetsProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4))).clone(namedValues=NamedValues(("noStaticProtocolDefined", 0), ("ipx", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmStaticTargetsProtocol.setStatus('mandatory')
bcmStaticTargetsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 3, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmStaticTargetsRowStatus.setStatus('mandatory')
bcmIpConfTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 4), )
if mibBuilder.loadTexts: bcmIpConfTable.setStatus('mandatory')
bcmIpConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 4, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmIpConfEntry.setStatus('mandatory')
bcmIpConfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpConfOperStatus.setStatus('mandatory')
bcmIpConfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmIpConfAdminStatus.setStatus('mandatory')
bcmIpConfCacheAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 4, 1, 3), BcmCacheAge()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmIpConfCacheAge.setStatus('mandatory')
bcmIpxConfTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 5), )
if mibBuilder.loadTexts: bcmIpxConfTable.setStatus('mandatory')
bcmIpxConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 5, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmIpxConfEntry.setStatus('mandatory')
bcmIpxConfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxConfOperStatus.setStatus('mandatory')
bcmIpxConfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmIpxConfAdminStatus.setStatus('mandatory')
bcmIpxConfCacheAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 5, 1, 3), BcmCacheAge()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmIpxConfCacheAge.setStatus('mandatory')
bcmNbConfTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 6), )
if mibBuilder.loadTexts: bcmNbConfTable.setStatus('mandatory')
bcmNbConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 6, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmNbConfEntry.setStatus('mandatory')
bcmNbConfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbConfOperStatus.setStatus('mandatory')
bcmNbConfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmNbConfAdminStatus.setStatus('mandatory')
bcmNbConfCacheAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 1, 6, 1, 3), BcmCacheAge()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcmNbConfCacheAge.setStatus('mandatory')
bcmStatTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1), )
if mibBuilder.loadTexts: bcmStatTable.setStatus('mandatory')
bcmStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmStatEntry.setStatus('mandatory')
bcmFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmFramesReceived.setStatus('mandatory')
bcmOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmOctetsReceived.setStatus('mandatory')
bcmFramesReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmFramesReturned.setStatus('mandatory')
bcmOctetsReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmOctetsReturned.setStatus('mandatory')
bcmFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmFramesDiscarded.setStatus('mandatory')
bcmOctetsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmOctetsDiscarded.setStatus('mandatory')
bcmFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmFramesTransmitted.setStatus('mandatory')
bcmOctetsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmOctetsTransmitted.setStatus('mandatory')
bcmTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmTransmitErrorFrames.setStatus('mandatory')
bcmTransmitErrorOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmTransmitErrorOctets.setStatus('mandatory')
bcmBroadcastFramesDirectedNoRif = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmBroadcastFramesDirectedNoRif.setStatus('mandatory')
bcmBroadcastFramesDirectedAre = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmBroadcastFramesDirectedAre.setStatus('mandatory')
bcmBroadcastFramesDirectedSte = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmBroadcastFramesDirectedSte.setStatus('mandatory')
bcmBroadcastFramesDirectedSrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmBroadcastFramesDirectedSrf.setStatus('mandatory')
bcmIpStatTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2), )
if mibBuilder.loadTexts: bcmIpStatTable.setStatus('mandatory')
bcmIpStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmIpStatEntry.setStatus('mandatory')
bcmIpFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpFramesReceived.setStatus('mandatory')
bcmIpOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpOctetsReceived.setStatus('mandatory')
bcmIpFramesReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpFramesReturned.setStatus('mandatory')
bcmIpOctetsReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpOctetsReturned.setStatus('mandatory')
bcmIpFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpFramesDiscarded.setStatus('mandatory')
bcmIpOctetsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpOctetsDiscarded.setStatus('mandatory')
bcmIpFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpFramesTransmitted.setStatus('mandatory')
bcmIpOctetsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpOctetsTransmitted.setStatus('mandatory')
bcmIpTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpTransmitErrorFrames.setStatus('mandatory')
bcmIpTransmitErrorOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpTransmitErrorOctets.setStatus('mandatory')
bcmIpBroadcastFramesDirectedNoRif = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpBroadcastFramesDirectedNoRif.setStatus('mandatory')
bcmIpBroadcastFramesDirectedAre = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpBroadcastFramesDirectedAre.setStatus('mandatory')
bcmIpBroadcastFramesDirectedSte = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpBroadcastFramesDirectedSte.setStatus('mandatory')
bcmIpBroadcastFramesDirectedSrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpBroadcastFramesDirectedSrf.setStatus('mandatory')
bcmIpxStatTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3), )
if mibBuilder.loadTexts: bcmIpxStatTable.setStatus('mandatory')
bcmIpxStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmIpxStatEntry.setStatus('mandatory')
bcmIpxFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxFramesReceived.setStatus('mandatory')
bcmIpxOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxOctetsReceived.setStatus('mandatory')
bcmIpxFramesReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxFramesReturned.setStatus('mandatory')
bcmIpxOctetsReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxOctetsReturned.setStatus('mandatory')
bcmIpxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxFramesDiscarded.setStatus('mandatory')
bcmIpxOctetsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxOctetsDiscarded.setStatus('mandatory')
bcmIpxFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxFramesTransmitted.setStatus('mandatory')
bcmIpxOctetsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxOctetsTransmitted.setStatus('mandatory')
bcmIpxTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxTransmitErrorFrames.setStatus('mandatory')
bcmIpxTransmitErrorOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxTransmitErrorOctets.setStatus('mandatory')
bcmIpxBroadcastFramesDirectedNoRif = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxBroadcastFramesDirectedNoRif.setStatus('mandatory')
bcmIpxBroadcastFramesDirectedAre = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxBroadcastFramesDirectedAre.setStatus('mandatory')
bcmIpxBroadcastFramesDirectedSte = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxBroadcastFramesDirectedSte.setStatus('mandatory')
bcmIpxBroadcastFramesDirectedSrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmIpxBroadcastFramesDirectedSrf.setStatus('mandatory')
bcmNbStatTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4), )
if mibBuilder.loadTexts: bcmNbStatTable.setStatus('mandatory')
bcmNbStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1), ).setIndexNames((0, "LAN-EMULATION-BUS-MIB", "busConfIndex"))
if mibBuilder.loadTexts: bcmNbStatEntry.setStatus('mandatory')
bcmNbFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbFramesReceived.setStatus('mandatory')
bcmNbOctetsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbOctetsReceived.setStatus('mandatory')
bcmNbFramesReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbFramesReturned.setStatus('mandatory')
bcmNbOctetsReturned = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbOctetsReturned.setStatus('mandatory')
bcmNbFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbFramesDiscarded.setStatus('mandatory')
bcmNbOctetsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbOctetsDiscarded.setStatus('mandatory')
bcmNbFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbFramesTransmitted.setStatus('mandatory')
bcmNbOctetsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbOctetsTransmitted.setStatus('mandatory')
bcmNbTransmitErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbTransmitErrorFrames.setStatus('mandatory')
bcmNbTransmitErrorOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbTransmitErrorOctets.setStatus('mandatory')
bcmNbBroadcastFramesDirectedNoRif = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbBroadcastFramesDirectedNoRif.setStatus('mandatory')
bcmNbBroadcastFramesDirectedAre = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbBroadcastFramesDirectedAre.setStatus('mandatory')
bcmNbBroadcastFramesDirectedSte = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbBroadcastFramesDirectedSte.setStatus('mandatory')
bcmNbBroadcastFramesDirectedSrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcmNbBroadcastFramesDirectedSrf.setStatus('mandatory')
bcmCConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 1))
bcmCStaticTargetsConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 2))
bcmCIpConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 3))
bcmCIpxConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 4))
bcmCNbConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 5))
bcmCStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 6))
bcmCIpStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 7))
bcmCIpxStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 8))
bcmCNbStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 1, 9))
bcmMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 118, 1, 2, 1, 3, 3, 2, 1))
mibBuilder.exportSymbols("IBM-BCM-MIB", bcmStaticTargetsMacAddress=bcmStaticTargetsMacAddress, bcmIpxOctetsReturned=bcmIpxOctetsReturned, bcmNbOctetsReturned=bcmNbOctetsReturned, bcmIpxFramesDiscarded=bcmIpxFramesDiscarded, bcmNbConfTable=bcmNbConfTable, bcmNbBroadcastFramesDirectedSrf=bcmNbBroadcastFramesDirectedSrf, bcmConfEntry=bcmConfEntry, bcmIpxConfTable=bcmIpxConfTable, bcmIpxFramesReturned=bcmIpxFramesReturned, bcmRouteCacheEnabled=bcmRouteCacheEnabled, bcmCIpxConfigGroup=bcmCIpxConfigGroup, bcmStaticTargetsEntry=bcmStaticTargetsEntry, bcmIpBroadcastFramesDirectedAre=bcmIpBroadcastFramesDirectedAre, bcmIpOctetsTransmitted=bcmIpOctetsTransmitted, bcmIpOctetsReturned=bcmIpOctetsReturned, bcmConfTable=bcmConfTable, bcmConfGroup=bcmConfGroup, bcmTransmitErrorFrames=bcmTransmitErrorFrames, bcmCIpStatGroup=bcmCIpStatGroup, bcmNbBroadcastFramesDirectedSte=bcmNbBroadcastFramesDirectedSte, bcmMIBConformance=bcmMIBConformance, bcmMIBCompliance=bcmMIBCompliance, bcmIpConfOperStatus=bcmIpConfOperStatus, bcmCIpConfigGroup=bcmCIpConfigGroup, bcmTransmitErrorOctets=bcmTransmitErrorOctets, bcmCIpxStatGroup=bcmCIpxStatGroup, bcmIpxStatTable=bcmIpxStatTable, bcmIpxConfEntry=bcmIpxConfEntry, bcmIpxFramesReceived=bcmIpxFramesReceived, bcmStaticTargetsProtocol=bcmStaticTargetsProtocol, bcmBroadcastFramesDirectedNoRif=bcmBroadcastFramesDirectedNoRif, bcmCStaticTargetsConfigGroup=bcmCStaticTargetsConfigGroup, bcmNbTransmitErrorOctets=bcmNbTransmitErrorOctets, bcmIpConfAdminStatus=bcmIpConfAdminStatus, bcmFramesTransmitted=bcmFramesTransmitted, bcmIpFramesDiscarded=bcmIpFramesDiscarded, bcmIpxTransmitErrorFrames=bcmIpxTransmitErrorFrames, bcmIpBroadcastFramesDirectedSte=bcmIpBroadcastFramesDirectedSte, bcmIpStatTable=bcmIpStatTable, bcmStaticTargetsTable=bcmStaticTargetsTable, bcmNbOctetsDiscarded=bcmNbOctetsDiscarded, bcmIpBroadcastFramesDirectedNoRif=bcmIpBroadcastFramesDirectedNoRif, bcmNbConfOperStatus=bcmNbConfOperStatus, ibmBcmMIB=ibmBcmMIB, bcmBroadcastFramesDirectedAre=bcmBroadcastFramesDirectedAre, bcmIpStatEntry=bcmIpStatEntry, bcmIpOctetsDiscarded=bcmIpOctetsDiscarded, bcmNbConfEntry=bcmNbConfEntry, bcmStatGroup=bcmStatGroup, bcmFramesReturned=bcmFramesReturned, bcmIpTransmitErrorOctets=bcmIpTransmitErrorOctets, bcmNbOctetsTransmitted=bcmNbOctetsTransmitted, bcmIpxBroadcastFramesDirectedSrf=bcmIpxBroadcastFramesDirectedSrf, bcmIpxStatEntry=bcmIpxStatEntry, bcmIpConfEntry=bcmIpConfEntry, bcmIpConfCacheAge=bcmIpConfCacheAge, bcmIpxFramesTransmitted=bcmIpxFramesTransmitted, bcmNbBroadcastFramesDirectedNoRif=bcmNbBroadcastFramesDirectedNoRif, bcmStaticTargetsAtmAddress=bcmStaticTargetsAtmAddress, bcmStatTable=bcmStatTable, bcmIpxBroadcastFramesDirectedAre=bcmIpxBroadcastFramesDirectedAre, bcmCNbStatGroup=bcmCNbStatGroup, bcmMIBCompliances=bcmMIBCompliances, bcmStaticTargetsIndex=bcmStaticTargetsIndex, bcmIpOctetsReceived=bcmIpOctetsReceived, bcmIpTransmitErrorFrames=bcmIpTransmitErrorFrames, bcmIpBroadcastFramesDirectedSrf=bcmIpBroadcastFramesDirectedSrf, bcmIpxConfAdminStatus=bcmIpxConfAdminStatus, bcmFramesReceived=bcmFramesReceived, bcmOctetsDiscarded=bcmOctetsDiscarded, bcmStatEntry=bcmStatEntry, bcmIpFramesReceived=bcmIpFramesReceived, bcmNbOctetsReceived=bcmNbOctetsReceived, bcmNbFramesDiscarded=bcmNbFramesDiscarded, bcmNbBroadcastFramesDirectedAre=bcmNbBroadcastFramesDirectedAre, bcmStaticTargetsNextId=bcmStaticTargetsNextId, BcmCacheAge=BcmCacheAge, bcmIpxOctetsDiscarded=bcmIpxOctetsDiscarded, bcmCNbConfigGroup=bcmCNbConfigGroup, bcmBroadcastFramesDirectedSte=bcmBroadcastFramesDirectedSte, bcmIpxBroadcastFramesDirectedNoRif=bcmIpxBroadcastFramesDirectedNoRif, bcmIpxBroadcastFramesDirectedSte=bcmIpxBroadcastFramesDirectedSte, bcmCConfGroup=bcmCConfGroup, bcmNbConfAdminStatus=bcmNbConfAdminStatus, bcmIpxConfOperStatus=bcmIpxConfOperStatus, bcmOctetsReturned=bcmOctetsReturned, bcmIpxConfCacheAge=bcmIpxConfCacheAge, bcmNbFramesReceived=bcmNbFramesReceived, bcmIpFramesTransmitted=bcmIpFramesTransmitted, bcmCStatGroup=bcmCStatGroup, bcmStaticTargetsRowStatus=bcmStaticTargetsRowStatus, bcmNbConfCacheAge=bcmNbConfCacheAge, bcmIpFramesReturned=bcmIpFramesReturned, bcmNbTransmitErrorFrames=bcmNbTransmitErrorFrames, bcmNbFramesReturned=bcmNbFramesReturned, bcmIpxOctetsTransmitted=bcmIpxOctetsTransmitted, bcmFramesDiscarded=bcmFramesDiscarded, bcmBroadcastFramesDirectedSrf=bcmBroadcastFramesDirectedSrf, bcmNbStatTable=bcmNbStatTable, bcmNbFramesTransmitted=bcmNbFramesTransmitted, bcmOctetsReceived=bcmOctetsReceived, bcmIpxOctetsReceived=bcmIpxOctetsReceived, bcmIpxTransmitErrorOctets=bcmIpxTransmitErrorOctets, bcmNbStatEntry=bcmNbStatEntry, bcmIpConfTable=bcmIpConfTable, bcmOctetsTransmitted=bcmOctetsTransmitted, bcmMIBGroups=bcmMIBGroups)
