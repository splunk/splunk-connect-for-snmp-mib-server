#
# PySNMP MIB module HH3C-IPSEC-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-IPSEC-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, NotificationType, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, Integer32, Gauge32, ObjectIdentity, Counter32, iso, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "Integer32", "Gauge32", "ObjectIdentity", "Counter32", "iso", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hh3cIPSecMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 7))
if mibBuilder.loadTexts: hh3cIPSecMonitor.setLastUpdated('200410260000Z')
if mibBuilder.loadTexts: hh3cIPSecMonitor.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cDiffHellmanGrp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 5, 14, 2147483647))
    namedValues = NamedValues(("none", 0), ("modp768", 1), ("modp1024", 2), ("modp1536", 5), ("modp2048", 14), ("invalidGroup", 2147483647))

class Hh3cEncapMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))
    namedValues = NamedValues(("tunnel", 1), ("transport", 2), ("invalidMode", 2147483647))

class Hh3cEncryptAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2147483647))
    namedValues = NamedValues(("none", 0), ("desCbc", 1), ("ideaCbc", 2), ("blowfishCbc", 3), ("rc5R16B64Cbc", 4), ("tripledesCbc", 5), ("castCbc", 6), ("aesCbc", 7), ("nsaCbc", 8), ("aesCbc128", 9), ("aesCbc192", 10), ("aesCbc256", 11), ("invalidAlg", 2147483647))

class Hh3cAuthAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 2147483647))
    namedValues = NamedValues(("none", 0), ("md5", 1), ("sha", 2), ("invalidAlg", 2147483647))

class Hh3cSaProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("reserved", 0), ("isakmp", 1), ("ah", 2), ("esp", 3), ("ipcomp", 4))

class Hh3cTrapStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class Hh3cIPSecIDType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("reserved", 0), ("ipv4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8), ("derAsn1Dn", 9), ("derAsn1Gn", 10), ("keyId", 11))

class Hh3cTrafficType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("ipv4Addr", 1), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8))

class Hh3cIPSecNegoType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))
    namedValues = NamedValues(("ike", 1), ("manual", 2), ("invalidType", 2147483647))

class Hh3cIPSecTunnelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("timeout", 2))

hh3cIPSecObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1))
hh3cIPSecTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1), )
if mibBuilder.loadTexts: hh3cIPSecTunnelTable.setStatus('current')
hh3cIPSecTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1), ).setIndexNames((0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIfIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunEntryIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIndex"))
if mibBuilder.loadTexts: hh3cIPSecTunnelEntry.setStatus('current')
hh3cIPSecTunIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cIPSecTunIfIndex.setStatus('current')
hh3cIPSecTunEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cIPSecTunEntryIndex.setStatus('current')
hh3cIPSecTunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cIPSecTunIndex.setStatus('current')
hh3cIPSecTunIKETunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunIKETunnelIndex.setStatus('current')
hh3cIPSecTunLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunLocalAddr.setStatus('current')
hh3cIPSecTunRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunRemoteAddr.setStatus('current')
hh3cIPSecTunKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 7), Hh3cIPSecNegoType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunKeyType.setStatus('current')
hh3cIPSecTunEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 8), Hh3cEncapMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunEncapMode.setStatus('current')
hh3cIPSecTunInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("none", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInitiator.setStatus('current')
hh3cIPSecTunLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunLifeSize.setStatus('current')
hh3cIPSecTunLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunLifeTime.setStatus('current')
hh3cIPSecTunRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunRemainTime.setStatus('current')
hh3cIPSecTunActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunActiveTime.setStatus('current')
hh3cIPSecTunRemainSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunRemainSize.setStatus('current')
hh3cIPSecTunTotalRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunTotalRefreshes.setStatus('current')
hh3cIPSecTunCurrentSaInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunCurrentSaInstances.setStatus('current')
hh3cIPSecTunInSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 17), Hh3cEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInSaEncryptAlgo.setStatus('current')
hh3cIPSecTunInSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 18), Hh3cAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInSaAhAuthAlgo.setStatus('current')
hh3cIPSecTunInSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 19), Hh3cAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInSaEspAuthAlgo.setStatus('current')
hh3cIPSecTunDiffHellmanGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 20), Hh3cDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunDiffHellmanGrp.setStatus('current')
hh3cIPSecTunOutSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 21), Hh3cEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutSaEncryptAlgo.setStatus('current')
hh3cIPSecTunOutSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 22), Hh3cAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutSaAhAuthAlgo.setStatus('current')
hh3cIPSecTunOutSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 23), Hh3cAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutSaEspAuthAlgo.setStatus('current')
hh3cIPSecTunPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunPolicyName.setStatus('current')
hh3cIPSecTunPolicyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunPolicyNum.setStatus('current')
hh3cIPSecTunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initial", 1), ("ready", 2), ("rekeyed", 3), ("closed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunStatus.setStatus('current')
hh3cIPSecTunnelStatTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2), )
if mibBuilder.loadTexts: hh3cIPSecTunnelStatTable.setStatus('current')
hh3cIPSecTunnelStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1), ).setIndexNames((0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIfIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunEntryIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIndex"))
if mibBuilder.loadTexts: hh3cIPSecTunnelStatEntry.setStatus('current')
hh3cIPSecTunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInOctets.setStatus('current')
hh3cIPSecTunInDecompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInDecompOctets.setStatus('current')
hh3cIPSecTunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInPkts.setStatus('current')
hh3cIPSecTunInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInDropPkts.setStatus('current')
hh3cIPSecTunInReplayDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInReplayDropPkts.setStatus('current')
hh3cIPSecTunInAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInAuthFails.setStatus('current')
hh3cIPSecTunInDecryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInDecryptFails.setStatus('current')
hh3cIPSecTunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutOctets.setStatus('current')
hh3cIPSecTunOutUncompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutUncompOctets.setStatus('current')
hh3cIPSecTunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutPkts.setStatus('current')
hh3cIPSecTunOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutDropPkts.setStatus('current')
hh3cIPSecTunOutEncryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunOutEncryptFails.setStatus('current')
hh3cIPSecTunNoMemoryDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunNoMemoryDropPkts.setStatus('current')
hh3cIPSecTunQueueFullDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunQueueFullDropPkts.setStatus('current')
hh3cIPSecTunInvalidLenDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInvalidLenDropPkts.setStatus('current')
hh3cIPSecTunTooLongDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunTooLongDropPkts.setStatus('current')
hh3cIPSecTunInvalidSaDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTunInvalidSaDropPkts.setStatus('current')
hh3cIPSecSaTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3), )
if mibBuilder.loadTexts: hh3cIPSecSaTable.setStatus('current')
hh3cIPSecSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1), ).setIndexNames((0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIfIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunEntryIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaIndex"))
if mibBuilder.loadTexts: hh3cIPSecSaEntry.setStatus('current')
hh3cIPSecSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cIPSecSaIndex.setStatus('current')
hh3cIPSecSaDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecSaDirection.setStatus('current')
hh3cIPSecSaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecSaValue.setStatus('current')
hh3cIPSecSaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 4), Hh3cSaProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecSaProtocol.setStatus('current')
hh3cIPSecSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 5), Hh3cEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecSaEncryptAlgo.setStatus('current')
hh3cIPSecSaAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 6), Hh3cAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecSaAuthAlgo.setStatus('current')
hh3cIPSecSaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("expiring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecSaStatus.setStatus('current')
hh3cIPSecTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4), )
if mibBuilder.loadTexts: hh3cIPSecTrafficTable.setStatus('current')
hh3cIPSecTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1), ).setIndexNames((0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIfIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunEntryIndex"), (0, "HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIndex"))
if mibBuilder.loadTexts: hh3cIPSecTrafficEntry.setStatus('current')
hh3cIPSecTrafficLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 1), Hh3cTrafficType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficLocalType.setStatus('current')
hh3cIPSecTrafficLocalAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficLocalAddr1.setStatus('current')
hh3cIPSecTrafficLocalAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficLocalAddr2.setStatus('current')
hh3cIPSecTrafficLocalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficLocalProtocol.setStatus('current')
hh3cIPSecTrafficLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficLocalPort.setStatus('current')
hh3cIPSecTrafficRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 6), Hh3cTrafficType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficRemoteType.setStatus('current')
hh3cIPSecTrafficRemoteAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficRemoteAddr1.setStatus('current')
hh3cIPSecTrafficRemoteAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficRemoteAddr2.setStatus('current')
hh3cIPSecTrafficRemoteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficRemoteProtocol.setStatus('current')
hh3cIPSecTrafficRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecTrafficRemotePort.setStatus('current')
hh3cIPSecGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5))
hh3cIPSecGlobalActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalActiveTunnels.setStatus('current')
hh3cIPSecGlobalActiveSas = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalActiveSas.setStatus('current')
hh3cIPSecGlobalInOctets = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInOctets.setStatus('current')
hh3cIPSecGlobalInDecompOctets = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInDecompOctets.setStatus('current')
hh3cIPSecGlobalInPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInPkts.setStatus('current')
hh3cIPSecGlobalInDrops = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInDrops.setStatus('current')
hh3cIPSecGlobalInReplayDrops = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInReplayDrops.setStatus('current')
hh3cIPSecGlobalInAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInAuthFails.setStatus('current')
hh3cIPSecGlobalInDecryptFails = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInDecryptFails.setStatus('current')
hh3cIPSecGlobalOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalOutOctets.setStatus('current')
hh3cIPSecGlobalOutUncompOctets = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalOutUncompOctets.setStatus('current')
hh3cIPSecGlobalOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalOutPkts.setStatus('current')
hh3cIPSecGlobalOutDrops = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalOutDrops.setStatus('current')
hh3cIPSecGlobalOutEncryptFails = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalOutEncryptFails.setStatus('current')
hh3cIPSecGlobalNoMemoryDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalNoMemoryDropPkts.setStatus('current')
hh3cIPSecGlobalNoFindSaDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalNoFindSaDropPkts.setStatus('current')
hh3cIPSecGlobalQueueFullDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalQueueFullDropPkts.setStatus('current')
hh3cIPSecGlobalInvalidLenDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInvalidLenDropPkts.setStatus('current')
hh3cIPSecGlobalTooLongDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalTooLongDropPkts.setStatus('current')
hh3cIPSecGlobalInvalidSaDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 5, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cIPSecGlobalInvalidSaDropPkts.setStatus('current')
hh3cIPSecTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 6))
hh3cIPSecPolicyName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 6, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIPSecPolicyName.setStatus('current')
hh3cIPSecPolicySeqNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 6, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIPSecPolicySeqNum.setStatus('current')
hh3cIPSecPolicySize = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 6, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIPSecPolicySize.setStatus('current')
hh3cIPSecSpiValue = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 6, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cIPSecSpiValue.setStatus('current')
hh3cIPSecTrapCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7))
hh3cIPSecTrapGlobalCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 1), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecTrapGlobalCntl.setStatus('current')
hh3cIPSecTunnelStartTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 2), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecTunnelStartTrapCntl.setStatus('current')
hh3cIPSecTunnelStopTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 3), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecTunnelStopTrapCntl.setStatus('current')
hh3cIPSecNoSaTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 4), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecNoSaTrapCntl.setStatus('current')
hh3cIPSecAuthFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 5), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecAuthFailureTrapCntl.setStatus('current')
hh3cIPSecEncryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 6), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecEncryFailureTrapCntl.setStatus('current')
hh3cIPSecDecryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 7), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecDecryFailureTrapCntl.setStatus('current')
hh3cIPSecInvalidSaTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 8), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecInvalidSaTrapCntl.setStatus('current')
hh3cIPSecPolicyAddTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 9), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecPolicyAddTrapCntl.setStatus('current')
hh3cIPSecPolicyDelTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 10), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecPolicyDelTrapCntl.setStatus('current')
hh3cIPSecPolicyAttachTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 11), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecPolicyAttachTrapCntl.setStatus('current')
hh3cIPSecPolicyDetachTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 7, 12), Hh3cTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIPSecPolicyDetachTrapCntl.setStatus('current')
hh3cIPSecTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8))
hh3cIPSecNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1))
hh3cIPSecTunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 1)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLifeTime"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLifeSize"))
if mibBuilder.loadTexts: hh3cIPSecTunnelStart.setStatus('current')
hh3cIPSecTunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 2)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunActiveTime"))
if mibBuilder.loadTexts: hh3cIPSecTunnelStop.setStatus('current')
hh3cIPSecNoSaFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 3)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hh3cIPSecNoSaFailure.setStatus('current')
hh3cIPSecAuthFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 4)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hh3cIPSecAuthFailFailure.setStatus('current')
hh3cIPSecEncryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 5)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hh3cIPSecEncryFailFailure.setStatus('current')
hh3cIPSecDecryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 6)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hh3cIPSecDecryFailFailure.setStatus('current')
hh3cIPSecInvalidSaFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 7)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSpiValue"))
if mibBuilder.loadTexts: hh3cIPSecInvalidSaFailure.setStatus('current')
hh3cIPSecPolicyAdd = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 8)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyName"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySeqNum"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySize"))
if mibBuilder.loadTexts: hh3cIPSecPolicyAdd.setStatus('current')
hh3cIPSecPolicyDel = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 9)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyName"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySeqNum"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySize"))
if mibBuilder.loadTexts: hh3cIPSecPolicyDel.setStatus('current')
hh3cIPSecPolicyAttach = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 10)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyName"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySize"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIPSecPolicyAttach.setStatus('current')
hh3cIPSecPolicyDetach = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 7, 1, 8, 1, 11)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyName"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySize"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cIPSecPolicyDetach.setStatus('current')
hh3cIPSecConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2))
hh3cIPSecCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 1))
hh3cIPSecGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2))
hh3cIPSecCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 1, 1)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunnelTableGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunnelStatGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficTableGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalStatsGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrapObjectGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrapCntlGroup"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecCompliance = hh3cIPSecCompliance.setStatus('current')
hh3cIPSecTunnelTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 1)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunIKETunnelIndex"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLocalAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemoteAddr"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunKeyType"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunEncapMode"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInitiator"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLifeSize"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunLifeTime"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemainTime"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunActiveTime"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunRemainSize"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunTotalRefreshes"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunCurrentSaInstances"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInSaEncryptAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInSaAhAuthAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInSaEspAuthAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunDiffHellmanGrp"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutSaEncryptAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutSaAhAuthAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutSaEspAuthAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunPolicyName"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunPolicyNum"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecTunnelTableGroup = hh3cIPSecTunnelTableGroup.setStatus('current')
hh3cIPSecTunnelStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 2)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInDecompOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInReplayDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInAuthFails"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInDecryptFails"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutUncompOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunOutEncryptFails"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunNoMemoryDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunQueueFullDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInvalidLenDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunTooLongDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunInvalidSaDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecTunnelStatGroup = hh3cIPSecTunnelStatGroup.setStatus('current')
hh3cIPSecSaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 3)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaDirection"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaValue"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaProtocol"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaEncryptAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaAuthAlgo"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSaStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecSaGroup = hh3cIPSecSaGroup.setStatus('current')
hh3cIPSecTrafficTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 4)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficLocalType"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficLocalAddr1"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficLocalAddr2"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficLocalProtocol"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficLocalPort"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficRemoteType"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficRemoteAddr1"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficRemoteAddr2"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficRemoteProtocol"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrafficRemotePort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecTrafficTableGroup = hh3cIPSecTrafficTableGroup.setStatus('current')
hh3cIPSecGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 5)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalActiveTunnels"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalActiveSas"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInDecompOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInDrops"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInReplayDrops"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInAuthFails"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInDecryptFails"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalOutOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalOutUncompOctets"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalOutPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalOutDrops"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalOutEncryptFails"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalNoMemoryDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalNoFindSaDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalQueueFullDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInvalidLenDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalTooLongDropPkts"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecGlobalInvalidSaDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecGlobalStatsGroup = hh3cIPSecGlobalStatsGroup.setStatus('current')
hh3cIPSecTrapObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 6)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyName"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySeqNum"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicySize"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecSpiValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecTrapObjectGroup = hh3cIPSecTrapObjectGroup.setStatus('current')
hh3cIPSecTrapCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 7)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTrapGlobalCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunnelStartTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunnelStopTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecNoSaTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecAuthFailureTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecEncryFailureTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecDecryFailureTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecInvalidSaTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyAddTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyDelTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyAttachTrapCntl"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyDetachTrapCntl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecTrapCntlGroup = hh3cIPSecTrapCntlGroup.setStatus('current')
hh3cIPSecTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 25506, 2, 7, 2, 2, 8)).setObjects(("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunnelStart"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecTunnelStop"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecNoSaFailure"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecAuthFailFailure"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecEncryFailFailure"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecDecryFailFailure"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecInvalidSaFailure"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyAdd"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyDel"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyAttach"), ("HH3C-IPSEC-MONITOR-MIB", "hh3cIPSecPolicyDetach"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cIPSecTrapGroup = hh3cIPSecTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HH3C-IPSEC-MONITOR-MIB", hh3cIPSecTrapGlobalCntl=hh3cIPSecTrapGlobalCntl, hh3cIPSecTunOutSaEspAuthAlgo=hh3cIPSecTunOutSaEspAuthAlgo, hh3cIPSecTunInDecompOctets=hh3cIPSecTunInDecompOctets, Hh3cIPSecIDType=Hh3cIPSecIDType, hh3cIPSecInvalidSaTrapCntl=hh3cIPSecInvalidSaTrapCntl, hh3cIPSecTunInDecryptFails=hh3cIPSecTunInDecryptFails, hh3cIPSecGlobalInDecryptFails=hh3cIPSecGlobalInDecryptFails, hh3cIPSecTunnelStatGroup=hh3cIPSecTunnelStatGroup, hh3cIPSecSaAuthAlgo=hh3cIPSecSaAuthAlgo, hh3cIPSecPolicyName=hh3cIPSecPolicyName, hh3cIPSecTunInPkts=hh3cIPSecTunInPkts, hh3cIPSecSaTable=hh3cIPSecSaTable, hh3cIPSecPolicyDel=hh3cIPSecPolicyDel, hh3cIPSecTrafficRemotePort=hh3cIPSecTrafficRemotePort, hh3cIPSecGlobalActiveSas=hh3cIPSecGlobalActiveSas, hh3cIPSecTrap=hh3cIPSecTrap, hh3cIPSecTunDiffHellmanGrp=hh3cIPSecTunDiffHellmanGrp, hh3cIPSecTunOutDropPkts=hh3cIPSecTunOutDropPkts, hh3cIPSecTrafficRemoteAddr1=hh3cIPSecTrafficRemoteAddr1, hh3cIPSecNotifications=hh3cIPSecNotifications, Hh3cEncryptAlgo=Hh3cEncryptAlgo, Hh3cEncapMode=Hh3cEncapMode, hh3cIPSecGlobalOutPkts=hh3cIPSecGlobalOutPkts, hh3cIPSecTunnelStatTable=hh3cIPSecTunnelStatTable, hh3cIPSecTunOutOctets=hh3cIPSecTunOutOctets, hh3cIPSecSaProtocol=hh3cIPSecSaProtocol, hh3cIPSecTunOutUncompOctets=hh3cIPSecTunOutUncompOctets, hh3cIPSecConformance=hh3cIPSecConformance, hh3cIPSecTunKeyType=hh3cIPSecTunKeyType, hh3cIPSecPolicyAdd=hh3cIPSecPolicyAdd, hh3cIPSecTunQueueFullDropPkts=hh3cIPSecTunQueueFullDropPkts, hh3cIPSecTrapObjectGroup=hh3cIPSecTrapObjectGroup, hh3cIPSecTrapObject=hh3cIPSecTrapObject, PYSNMP_MODULE_ID=hh3cIPSecMonitor, hh3cIPSecTrafficRemoteProtocol=hh3cIPSecTrafficRemoteProtocol, hh3cIPSecTunPolicyNum=hh3cIPSecTunPolicyNum, hh3cIPSecSaDirection=hh3cIPSecSaDirection, hh3cIPSecTrafficLocalAddr1=hh3cIPSecTrafficLocalAddr1, Hh3cSaProtocol=Hh3cSaProtocol, hh3cIPSecObjects=hh3cIPSecObjects, hh3cIPSecGlobalInDecompOctets=hh3cIPSecGlobalInDecompOctets, hh3cIPSecTunInitiator=hh3cIPSecTunInitiator, hh3cIPSecTunInvalidLenDropPkts=hh3cIPSecTunInvalidLenDropPkts, hh3cIPSecTrafficLocalType=hh3cIPSecTrafficLocalType, hh3cIPSecCompliances=hh3cIPSecCompliances, hh3cIPSecTunOutSaEncryptAlgo=hh3cIPSecTunOutSaEncryptAlgo, hh3cIPSecGlobalNoMemoryDropPkts=hh3cIPSecGlobalNoMemoryDropPkts, hh3cIPSecTunOutSaAhAuthAlgo=hh3cIPSecTunOutSaAhAuthAlgo, hh3cIPSecDecryFailureTrapCntl=hh3cIPSecDecryFailureTrapCntl, hh3cIPSecGlobalInvalidLenDropPkts=hh3cIPSecGlobalInvalidLenDropPkts, hh3cIPSecGlobalOutUncompOctets=hh3cIPSecGlobalOutUncompOctets, hh3cIPSecTrapCntl=hh3cIPSecTrapCntl, hh3cIPSecSaStatus=hh3cIPSecSaStatus, hh3cIPSecTrafficEntry=hh3cIPSecTrafficEntry, hh3cIPSecPolicyDelTrapCntl=hh3cIPSecPolicyDelTrapCntl, hh3cIPSecTunnelEntry=hh3cIPSecTunnelEntry, hh3cIPSecGlobalInOctets=hh3cIPSecGlobalInOctets, hh3cIPSecDecryFailFailure=hh3cIPSecDecryFailFailure, hh3cIPSecPolicySeqNum=hh3cIPSecPolicySeqNum, hh3cIPSecMonitor=hh3cIPSecMonitor, hh3cIPSecTunnelStop=hh3cIPSecTunnelStop, hh3cIPSecTunLifeSize=hh3cIPSecTunLifeSize, hh3cIPSecTunActiveTime=hh3cIPSecTunActiveTime, hh3cIPSecTunnelStartTrapCntl=hh3cIPSecTunnelStartTrapCntl, hh3cIPSecPolicySize=hh3cIPSecPolicySize, hh3cIPSecGlobalInPkts=hh3cIPSecGlobalInPkts, hh3cIPSecNoSaFailure=hh3cIPSecNoSaFailure, hh3cIPSecTunRemoteAddr=hh3cIPSecTunRemoteAddr, hh3cIPSecTunCurrentSaInstances=hh3cIPSecTunCurrentSaInstances, hh3cIPSecGlobalInvalidSaDropPkts=hh3cIPSecGlobalInvalidSaDropPkts, Hh3cIPSecTunnelState=Hh3cIPSecTunnelState, hh3cIPSecGlobalTooLongDropPkts=hh3cIPSecGlobalTooLongDropPkts, hh3cIPSecTunEncapMode=hh3cIPSecTunEncapMode, hh3cIPSecCompliance=hh3cIPSecCompliance, hh3cIPSecTunInDropPkts=hh3cIPSecTunInDropPkts, hh3cIPSecTunInSaAhAuthAlgo=hh3cIPSecTunInSaAhAuthAlgo, hh3cIPSecTrafficTable=hh3cIPSecTrafficTable, hh3cIPSecTunLocalAddr=hh3cIPSecTunLocalAddr, hh3cIPSecTunnelStart=hh3cIPSecTunnelStart, hh3cIPSecSaValue=hh3cIPSecSaValue, hh3cIPSecAuthFailureTrapCntl=hh3cIPSecAuthFailureTrapCntl, hh3cIPSecTunIfIndex=hh3cIPSecTunIfIndex, hh3cIPSecTrapCntlGroup=hh3cIPSecTrapCntlGroup, hh3cIPSecPolicyDetach=hh3cIPSecPolicyDetach, hh3cIPSecPolicyDetachTrapCntl=hh3cIPSecPolicyDetachTrapCntl, hh3cIPSecTunnelTable=hh3cIPSecTunnelTable, hh3cIPSecTunRemainTime=hh3cIPSecTunRemainTime, hh3cIPSecTrapGroup=hh3cIPSecTrapGroup, hh3cIPSecTunRemainSize=hh3cIPSecTunRemainSize, hh3cIPSecTunIKETunnelIndex=hh3cIPSecTunIKETunnelIndex, Hh3cTrapStatus=Hh3cTrapStatus, hh3cIPSecTunInOctets=hh3cIPSecTunInOctets, hh3cIPSecTunInSaEspAuthAlgo=hh3cIPSecTunInSaEspAuthAlgo, hh3cIPSecSaEncryptAlgo=hh3cIPSecSaEncryptAlgo, hh3cIPSecTunInAuthFails=hh3cIPSecTunInAuthFails, Hh3cDiffHellmanGrp=Hh3cDiffHellmanGrp, hh3cIPSecTrafficLocalAddr2=hh3cIPSecTrafficLocalAddr2, hh3cIPSecTrafficLocalProtocol=hh3cIPSecTrafficLocalProtocol, hh3cIPSecSaEntry=hh3cIPSecSaEntry, hh3cIPSecGlobalInAuthFails=hh3cIPSecGlobalInAuthFails, hh3cIPSecGlobalInReplayDrops=hh3cIPSecGlobalInReplayDrops, hh3cIPSecSpiValue=hh3cIPSecSpiValue, hh3cIPSecPolicyAttachTrapCntl=hh3cIPSecPolicyAttachTrapCntl, hh3cIPSecGlobalOutEncryptFails=hh3cIPSecGlobalOutEncryptFails, hh3cIPSecTunnelStatEntry=hh3cIPSecTunnelStatEntry, hh3cIPSecTunInReplayDropPkts=hh3cIPSecTunInReplayDropPkts, hh3cIPSecTunnelStopTrapCntl=hh3cIPSecTunnelStopTrapCntl, Hh3cTrafficType=Hh3cTrafficType, hh3cIPSecTrafficLocalPort=hh3cIPSecTrafficLocalPort, hh3cIPSecEncryFailFailure=hh3cIPSecEncryFailFailure, hh3cIPSecGlobalActiveTunnels=hh3cIPSecGlobalActiveTunnels, hh3cIPSecPolicyAttach=hh3cIPSecPolicyAttach, Hh3cIPSecNegoType=Hh3cIPSecNegoType, hh3cIPSecSaGroup=hh3cIPSecSaGroup, hh3cIPSecGlobalInDrops=hh3cIPSecGlobalInDrops, hh3cIPSecGlobalStats=hh3cIPSecGlobalStats, hh3cIPSecTunEntryIndex=hh3cIPSecTunEntryIndex, hh3cIPSecTunPolicyName=hh3cIPSecTunPolicyName, hh3cIPSecTunLifeTime=hh3cIPSecTunLifeTime, hh3cIPSecGlobalStatsGroup=hh3cIPSecGlobalStatsGroup, hh3cIPSecTunTooLongDropPkts=hh3cIPSecTunTooLongDropPkts, hh3cIPSecSaIndex=hh3cIPSecSaIndex, hh3cIPSecTunnelTableGroup=hh3cIPSecTunnelTableGroup, hh3cIPSecTunStatus=hh3cIPSecTunStatus, hh3cIPSecGlobalOutDrops=hh3cIPSecGlobalOutDrops, hh3cIPSecTunOutPkts=hh3cIPSecTunOutPkts, Hh3cAuthAlgo=Hh3cAuthAlgo, hh3cIPSecNoSaTrapCntl=hh3cIPSecNoSaTrapCntl, hh3cIPSecGlobalQueueFullDropPkts=hh3cIPSecGlobalQueueFullDropPkts, hh3cIPSecTunInSaEncryptAlgo=hh3cIPSecTunInSaEncryptAlgo, hh3cIPSecGroups=hh3cIPSecGroups, hh3cIPSecTunTotalRefreshes=hh3cIPSecTunTotalRefreshes, hh3cIPSecTunOutEncryptFails=hh3cIPSecTunOutEncryptFails, hh3cIPSecTunIndex=hh3cIPSecTunIndex, hh3cIPSecEncryFailureTrapCntl=hh3cIPSecEncryFailureTrapCntl, hh3cIPSecTunNoMemoryDropPkts=hh3cIPSecTunNoMemoryDropPkts, hh3cIPSecInvalidSaFailure=hh3cIPSecInvalidSaFailure, hh3cIPSecGlobalOutOctets=hh3cIPSecGlobalOutOctets, hh3cIPSecAuthFailFailure=hh3cIPSecAuthFailFailure, hh3cIPSecPolicyAddTrapCntl=hh3cIPSecPolicyAddTrapCntl, hh3cIPSecGlobalNoFindSaDropPkts=hh3cIPSecGlobalNoFindSaDropPkts, hh3cIPSecTunInvalidSaDropPkts=hh3cIPSecTunInvalidSaDropPkts, hh3cIPSecTrafficRemoteType=hh3cIPSecTrafficRemoteType, hh3cIPSecTrafficRemoteAddr2=hh3cIPSecTrafficRemoteAddr2, hh3cIPSecTrafficTableGroup=hh3cIPSecTrafficTableGroup)
