#
# PySNMP MIB module INTELCORPORATIONICMBGENERICCHASSIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTELCORPORATIONICMBGENERICCHASSIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Unsigned32, IpAddress, iso, enterprises, TimeTicks, NotificationType, Gauge32, MibIdentifier, Integer32, ObjectIdentity, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Unsigned32", "IpAddress", "iso", "enterprises", "TimeTicks", "NotificationType", "Gauge32", "MibIdentifier", "Integer32", "ObjectIdentity", "Counter32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DmiCounter(Counter32):
    pass

class DmiInteger(Integer32):
    pass

class DmiOctetstring(OctetString):
    pass

class DmiDisplaystring(DisplayString):
    pass

class DmiDateX(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(28, 28)
    fixedLength = 28

class DmiComponentIndex(Integer32):
    pass

intel = MibIdentifier((1, 3, 6, 1, 4, 1, 343))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2))
server_products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 6)).setLabel("server-products")
platforms = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 6, 2))
icmbChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5))
dmtfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1))
tComponentid = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1), )
if mibBuilder.loadTexts: tComponentid.setStatus('mandatory')
eComponentid = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eComponentid.setStatus('mandatory')
a1Manufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Manufacturer.setStatus('mandatory')
a1Product = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Product.setStatus('mandatory')
a1Version = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Version.setStatus('mandatory')
a1SerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1SerialNumber.setStatus('mandatory')
a1Installation = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1, 5), DmiDateX()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Installation.setStatus('mandatory')
a1Verify = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("vAnErrorOccurredCheckStatusCode", 0), ("vThisComponentDoesNotExist", 1), ("vVerificationIsNotSupported", 2), ("vReserved", 3), ("vThisComponentExistsButTheFunctionalityI", 4), ("vThisComponentExistsButTheFunctionality1", 5), ("vThisComponentExistsAndIsNotFunctioningC", 6), ("vThisComponentExistsAndIsFunctioningCorr", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Verify.setStatus('mandatory')
tIcmbState = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12), )
if mibBuilder.loadTexts: tIcmbState.setStatus('mandatory')
eIcmbState = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eIcmbState.setStatus('mandatory')
a12ChassisAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vAvailable", 0), ("vShuttingDown", 1), ("vUnavailable", 2), ("vInitializing", 3), ("vUnknown", 4), ("vNonaccessible", 5), ("vGoingNonaccessible", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12ChassisAvailable.setStatus('mandatory')
a12IcmbId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 2), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12IcmbId.setStatus('mandatory')
a12SdrDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a12SdrDeviceId.setStatus('mandatory')
a12SelDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a12SelDeviceId.setStatus('mandatory')
a12SmDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a12SmDeviceId.setStatus('mandatory')
a12SdrReadState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12SdrReadState.setStatus('mandatory')
a12EventPollingPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 7), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12EventPollingPeriod.setStatus('mandatory')
a12EventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 8), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a12EventCount.setStatus('mandatory')
a12ManageChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12ManageChassis.setStatus('mandatory')
a12SetAvailablityState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 10), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12SetAvailablityState.setStatus('mandatory')
a12UniqueId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 11), DmiOctetstring()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12UniqueId.setStatus('mandatory')
a12PreviousAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 12, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("vAvailable", 0), ("vShuttingDown", 1), ("vUnavailable", 2), ("vInitializing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a12PreviousAvailabilityStatus.setStatus('mandatory')
tOperationalState = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31), )
if mibBuilder.loadTexts: tOperationalState.setStatus('mandatory')
eOperationalState = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a31OperationalStateInstanceIndex"))
if mibBuilder.loadTexts: eOperationalState.setStatus('mandatory')
a31OperationalStateInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31OperationalStateInstanceIndex.setStatus('mandatory')
a31DeviceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31DeviceGroupIndex.setStatus('mandatory')
a31OperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vEnabled", 3), ("vDisabled", 4), ("vNotApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31OperationalStatus.setStatus('mandatory')
a31UsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vIdle", 3), ("vActive", 4), ("vBusy", 5), ("vNotApplicable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31UsageState.setStatus('mandatory')
a31AvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vRunning", 3), ("vWarning", 4), ("vInTest", 5), ("vNotApplicable", 6), ("vPowerOff", 7), ("vOffLine", 8), ("vOffDuty", 9), ("vDegraded", 10), ("vNotInstalled", 11), ("vInstallError", 12), ("vPowerSave", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31AvailabilityStatus.setStatus('mandatory')
a31AdministrativeState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vLocked", 3), ("vUnlocked", 4), ("vNotApplicable", 5), ("vShuttingDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31AdministrativeState.setStatus('mandatory')
a31FatalErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 7), DmiCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31FatalErrorCount.setStatus('mandatory')
a31MajorErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 8), DmiCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31MajorErrorCount.setStatus('mandatory')
a31WarningErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 9), DmiCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31WarningErrorCount.setStatus('mandatory')
a31CurrentErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 31, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vOk", 3), ("vNon-critical", 4), ("vCritical", 5), ("vNon-recoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a31CurrentErrorStatus.setStatus('mandatory')
tFieldReplaceableUnit = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93), )
if mibBuilder.loadTexts: tFieldReplaceableUnit.setStatus('mandatory')
eFieldReplaceableUnit = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a93FruIndex"))
if mibBuilder.loadTexts: eFieldReplaceableUnit.setStatus('mandatory')
a93FruIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93FruIndex.setStatus('mandatory')
a93DeviceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93DeviceGroupIndex.setStatus('mandatory')
a93Description = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93Description.setStatus('mandatory')
a93Manufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93Manufacturer.setStatus('mandatory')
a93Model = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93Model.setStatus('mandatory')
a93PartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 6), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93PartNumber.setStatus('mandatory')
a93FruSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 7), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93FruSerialNumber.setStatus('mandatory')
a93RevisionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 8), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93RevisionLevel.setStatus('mandatory')
a93WarrantyStartDate = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 9), DmiDateX()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93WarrantyStartDate.setStatus('mandatory')
a93WarrantyDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 10), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93WarrantyDuration.setStatus('mandatory')
a93SupportPhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 11), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93SupportPhoneNumber.setStatus('mandatory')
a93FruInternetUniformResourceLocator = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 93, 1, 12), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a93FruInternetUniformResourceLocator.setStatus('mandatory')
tEventGenerationForPhysicalContainer = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116), )
if mibBuilder.loadTexts: tEventGenerationForPhysicalContainer.setStatus('mandatory')
eEventGenerationForPhysicalContainer = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116AssociatedGroup"))
if mibBuilder.loadTexts: eEventGenerationForPhysicalContainer.setStatus('mandatory')
a116EventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 256))).clone(namedValues=NamedValues(("vSecuritySettingsChange", 1), ("vPowerSupplyStatusChange", 2), ("vCoolingDeviceStatusChange", 3), ("vPhysicalDeviceStatusChange", 4), ("vLogicalDeviceStatusChange", 5), ("vContainerSecurityBreach", 6), ("vConfigurationError", 7), ("vContainerSecurityStatusOk", 256)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a116EventType.setStatus('mandatory')
a116EventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("vMonitor", 1), ("vInformation", 2), ("vOk", 4), ("vNon-critical1", 8), ("vCritical", 16), ("vNon-recoverable1", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a116EventSeverity.setStatus('mandatory')
a116IsEventState_based = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setLabel("a116IsEventState-based").setMaxAccess("readonly")
if mibBuilder.loadTexts: a116IsEventState_based.setStatus('mandatory')
a116EventStateKey = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a116EventStateKey.setStatus('mandatory')
a116AssociatedGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a116AssociatedGroup.setStatus('mandatory')
a116EventSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a116EventSystem.setStatus('mandatory')
a116EventSubsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a116EventSubsystem.setStatus('mandatory')
tPhysicalContainerGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127), )
if mibBuilder.loadTexts: tPhysicalContainerGlobalTable.setStatus('mandatory')
ePhysicalContainerGlobalTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a127ContainerIndex"))
if mibBuilder.loadTexts: ePhysicalContainerGlobalTable.setStatus('mandatory')
a127ContainerOrChassisType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vDesktop", 3), ("vLowProfileDesktop", 4), ("vPizzaBox", 5), ("vMiniTower", 6), ("vTower", 7), ("vPortable", 8), ("vLaptop", 9), ("vNotebook", 10), ("vHandHeld", 11), ("vDockingStation", 12), ("vAllInOne", 13), ("vSubNotebook", 14), ("vSpace-saving", 15), ("vLunchBox", 16), ("vMainSystemChassis", 17), ("vExpansionChassis", 18), ("vSubchassis", 19), ("vBusExpansionChassis", 20), ("vPeripheralChassis", 21), ("vRaidChassis", 22), ("vRackMountChassis", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127ContainerOrChassisType.setStatus('mandatory')
a127AssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 2), DmiDisplaystring()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a127AssetTag.setStatus('mandatory')
a127ChassisLockPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127ChassisLockPresent.setStatus('mandatory')
a127BootupState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vOk", 3), ("vWarning", 4), ("vCritical", 5), ("vNon-recoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127BootupState.setStatus('mandatory')
a127PowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vOk", 3), ("vWarning", 4), ("vCritical", 5), ("vNon-recoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127PowerState.setStatus('mandatory')
a127ThermalState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vOk", 3), ("vWarning", 4), ("vCritical", 5), ("vNon-recoverable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127ThermalState.setStatus('mandatory')
a127FruGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 7), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127FruGroupIndex.setStatus('mandatory')
a127OperationalGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 8), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127OperationalGroupIndex.setStatus('mandatory')
a127ContainerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 9), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127ContainerIndex.setStatus('mandatory')
a127ContainerName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 10), DmiDisplaystring()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a127ContainerName.setStatus('mandatory')
a127ContainerLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 11), DmiDisplaystring()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a127ContainerLocation.setStatus('mandatory')
a127ContainerSecurityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 127, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vNoSecurityBreachDetected", 3), ("vContainerSecurityBreachAttempted", 4), ("vContainerSecurityBreached", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a127ContainerSecurityStatus.setStatus('mandatory')
tMiftomib = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1001), )
if mibBuilder.loadTexts: tMiftomib.setStatus('mandatory')
eMiftomib = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1001, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eMiftomib.setStatus('mandatory')
a1001MibName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1001, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1001MibName.setStatus('mandatory')
a1001MibOid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1001, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1001MibOid.setStatus('mandatory')
a1001DisableTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1001, 1, 3), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1001DisableTrap.setStatus('mandatory')
tSystemControl = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004), )
if mibBuilder.loadTexts: tSystemControl.setStatus('mandatory')
eSystemControl = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1004Selfid"))
if mibBuilder.loadTexts: eSystemControl.setStatus('mandatory')
a1004Selfid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004Selfid.setStatus('mandatory')
a1004ResetSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vDoNotReset", 0), ("vInitiateReset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004ResetSystem.setStatus('mandatory')
a1004TimedResetIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004TimedResetIncrement.setStatus('mandatory')
a1004TimedResetResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004TimedResetResolution.setStatus('mandatory')
a1004TimeUntilSystemReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 5), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004TimeUntilSystemReset.setStatus('mandatory')
a1004SystemPowerCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("vUnknown", 0), ("vUnsupported", 1), ("vOnAndOff", 2), ("vOffOnly", 3), ("vOnOnly", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004SystemPowerCapabilities.setStatus('mandatory')
a1004SystemPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOff", 0), ("vOn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004SystemPowerStatus.setStatus('mandatory')
a1004EventLoggingCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("vUnknown", 0), ("vUnsupported", 1), ("vActive", 2), ("vInactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004EventLoggingCapability.setStatus('mandatory')
a1004WatchdogTimerIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 9), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004WatchdogTimerIncrement.setStatus('mandatory')
a1004WatchdogTimerResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 10), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1004WatchdogTimerResolution.setStatus('mandatory')
a1004WatchdogUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 11), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004WatchdogUpdateInterval.setStatus('mandatory')
a1004UseSystemWatchdogFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOff", 0), ("vOn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004UseSystemWatchdogFeature.setStatus('mandatory')
a1004ResetSystemAfterDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOff", 0), ("vOn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004ResetSystemAfterDelay.setStatus('mandatory')
a1004SavePersistentData = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOff", 0), ("vOn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004SavePersistentData.setStatus('mandatory')
a1004RestoreFactoryDefaults = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOff", 0), ("vOn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004RestoreFactoryDefaults.setStatus('mandatory')
a1004ShutdownOs = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vDoNotShutdown", 0), ("vShutdownOs", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004ShutdownOs.setStatus('mandatory')
a1004ShutdownOsAndPowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vDoNotShutdownAndPowerOff", 0), ("vShutdownAndPowerOff", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004ShutdownOsAndPowerOff.setStatus('mandatory')
a1004ShutdownOsAndHardwareReset = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vDoNotShutdownAndHardwareReset", 0), ("vShutdownAndHardwareReset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004ShutdownOsAndHardwareReset.setStatus('mandatory')
a1004IssueAHardwareNmi = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1004, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vDoNotIssueAnNmi", 0), ("vIssueAnNmi", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a1004IssueAHardwareNmi.setStatus('mandatory')
tSystemEventLog = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006), )
if mibBuilder.loadTexts: tSystemEventLog.setStatus('mandatory')
eSystemEventLog = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1006Selfid"))
if mibBuilder.loadTexts: eSystemEventLog.setStatus('mandatory')
a1006Selfid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1006Selfid.setStatus('mandatory')
a1006Timestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006, 1, 2), DmiDateX()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1006Timestamp.setStatus('mandatory')
a1006RecordType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1006RecordType.setStatus('mandatory')
a1006RecordLength = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1006RecordLength.setStatus('mandatory')
a1006RecordData = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1006, 1, 5), DmiOctetstring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1006RecordData.setStatus('mandatory')
tEventGenerationForIcmbState = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007), )
if mibBuilder.loadTexts: tEventGenerationForIcmbState.setStatus('mandatory')
eEventGenerationForIcmbState = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007AssociatedGroup"))
if mibBuilder.loadTexts: eEventGenerationForIcmbState.setStatus('mandatory')
a1007EventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("vChassisAvailabilityChange", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007EventType.setStatus('mandatory')
a1007EventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("vMonitor", 1), ("vInformation", 2), ("vOk", 4), ("vNon-critical", 8), ("vCritical", 16), ("vNon-recoverable", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007EventSeverity.setStatus('mandatory')
a1007IsEventState_based = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setLabel("a1007IsEventState-based").setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007IsEventState_based.setStatus('mandatory')
a1007EventStateKey = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007EventStateKey.setStatus('mandatory')
a1007AssociatedGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007AssociatedGroup.setStatus('mandatory')
a1007EventSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007EventSystem.setStatus('mandatory')
a1007EventSubsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1007EventSubsystem.setStatus('mandatory')
tEifControl = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2000), )
if mibBuilder.loadTexts: tEifControl.setStatus('mandatory')
eEifControl = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2000, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eEifControl.setStatus('mandatory')
a2000Status = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2000, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("vOther1", 1), ("vUnknown1", 2), ("vCreatedOnly", 3), ("vConstructedOnly", 4), ("vFullyOperational", 5), ("vIdle1", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a2000Status.setStatus('mandatory')
a2000DimContext = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2000, 1, 2), DmiOctetstring()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a2000DimContext.setStatus('mandatory')
a2000PersistentDataWriteDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2000, 1, 3), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a2000PersistentDataWriteDelay.setStatus('mandatory')
a2000EifInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2000, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2000EifInterfaceName.setStatus('mandatory')
tEifExtensionList = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2001), )
if mibBuilder.loadTexts: tEifExtensionList.setStatus('mandatory')
eEifExtensionList = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2001, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2001Index"))
if mibBuilder.loadTexts: eEifExtensionList.setStatus('mandatory')
a2001Index = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2001, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2001Index.setStatus('mandatory')
a2001Filename = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2001, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2001Filename.setStatus('mandatory')
tEventGenerationForEifControl = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002), )
if mibBuilder.loadTexts: tEventGenerationForEifControl.setStatus('mandatory')
eEventGenerationForEifControl = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1), ).setIndexNames((0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002AssociatedGroup"))
if mibBuilder.loadTexts: eEventGenerationForEifControl.setStatus('mandatory')
a2002EventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("vNoDimContextsCreated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002EventType.setStatus('mandatory')
a2002EventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("vMonitor", 1), ("vInformation", 2), ("vOk", 4), ("vNon-critical", 8), ("vCritical", 16), ("vNon-recoverable", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002EventSeverity.setStatus('mandatory')
a2002IsEventState_based = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setLabel("a2002IsEventState-based").setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002IsEventState_based.setStatus('mandatory')
a2002EventStateKey = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002EventStateKey.setStatus('mandatory')
a2002AssociatedGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002AssociatedGroup.setStatus('mandatory')
a2002EventSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002EventSystem.setStatus('mandatory')
a2002EventSubsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2002EventSubsystem.setStatus('mandatory')
trap1ForPhysicalContainer = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1) + (0,6)).setObjects(("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventType"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventSeverity"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116IsEventState_based"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventStateKey"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116AssociatedGroup"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventSystem"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventSubsystem"))
trap2ForPhysicalContainer = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 116, 1) + (0,256)).setObjects(("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventType"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventSeverity"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116IsEventState_based"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventStateKey"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116AssociatedGroup"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventSystem"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a116EventSubsystem"))
trap1ForIcmbState = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 1007, 1) + (0,1)).setObjects(("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007EventType"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007EventSeverity"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007IsEventState_based"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007EventStateKey"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007AssociatedGroup"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007EventSystem"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a1007EventSubsystem"))
trap1ForEifControl = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 6, 2, 5, 1, 2002, 1) + (0,1)).setObjects(("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002EventType"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002EventSeverity"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002IsEventState_based"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002EventStateKey"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002AssociatedGroup"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002EventSystem"), ("INTELCORPORATIONICMBGENERICCHASSIS-MIB", "a2002EventSubsystem"))
mibBuilder.exportSymbols("INTELCORPORATIONICMBGENERICCHASSIS-MIB", a127ChassisLockPresent=a127ChassisLockPresent, eFieldReplaceableUnit=eFieldReplaceableUnit, a2001Index=a2001Index, tEventGenerationForEifControl=tEventGenerationForEifControl, a2002EventType=a2002EventType, a127BootupState=a127BootupState, a31WarningErrorCount=a31WarningErrorCount, a1007EventSystem=a1007EventSystem, tFieldReplaceableUnit=tFieldReplaceableUnit, eSystemControl=eSystemControl, a1004RestoreFactoryDefaults=a1004RestoreFactoryDefaults, a116EventSubsystem=a116EventSubsystem, eMiftomib=eMiftomib, a12SdrReadState=a12SdrReadState, a1004SystemPowerStatus=a1004SystemPowerStatus, a1004EventLoggingCapability=a1004EventLoggingCapability, a1004WatchdogUpdateInterval=a1004WatchdogUpdateInterval, a2000PersistentDataWriteDelay=a2000PersistentDataWriteDelay, a1007IsEventState_based=a1007IsEventState_based, tSystemControl=tSystemControl, eComponentid=eComponentid, a93FruIndex=a93FruIndex, a1Installation=a1Installation, a127ContainerSecurityStatus=a127ContainerSecurityStatus, a1004ResetSystem=a1004ResetSystem, trap1ForEifControl=trap1ForEifControl, a31AvailabilityStatus=a31AvailabilityStatus, a1007EventSeverity=a1007EventSeverity, a127PowerState=a127PowerState, a116EventSystem=a116EventSystem, a127ContainerIndex=a127ContainerIndex, a1004TimedResetResolution=a1004TimedResetResolution, eSystemEventLog=eSystemEventLog, trap1ForIcmbState=trap1ForIcmbState, a93Manufacturer=a93Manufacturer, a1006Selfid=a1006Selfid, a1004TimeUntilSystemReset=a1004TimeUntilSystemReset, a1004WatchdogTimerIncrement=a1004WatchdogTimerIncrement, a1007EventSubsystem=a1007EventSubsystem, tPhysicalContainerGlobalTable=tPhysicalContainerGlobalTable, trap2ForPhysicalContainer=trap2ForPhysicalContainer, a1004ShutdownOs=a1004ShutdownOs, a93Model=a93Model, ePhysicalContainerGlobalTable=ePhysicalContainerGlobalTable, a2002IsEventState_based=a2002IsEventState_based, a116EventStateKey=a116EventStateKey, a2000EifInterfaceName=a2000EifInterfaceName, a12SmDeviceId=a12SmDeviceId, a1007EventType=a1007EventType, eEifControl=eEifControl, a12UniqueId=a12UniqueId, a1Version=a1Version, a93PartNumber=a93PartNumber, a12SdrDeviceId=a12SdrDeviceId, a12EventPollingPeriod=a12EventPollingPeriod, intel=intel, a1001MibName=a1001MibName, a127AssetTag=a127AssetTag, eEventGenerationForEifControl=eEventGenerationForEifControl, icmbChassis=icmbChassis, DmiOctetstring=DmiOctetstring, a31UsageState=a31UsageState, a31OperationalStateInstanceIndex=a31OperationalStateInstanceIndex, a31CurrentErrorStatus=a31CurrentErrorStatus, a12ManageChassis=a12ManageChassis, eEifExtensionList=eEifExtensionList, a1Verify=a1Verify, trap1ForPhysicalContainer=trap1ForPhysicalContainer, a1004SystemPowerCapabilities=a1004SystemPowerCapabilities, a1006RecordData=a1006RecordData, a31DeviceGroupIndex=a31DeviceGroupIndex, a93DeviceGroupIndex=a93DeviceGroupIndex, a31AdministrativeState=a31AdministrativeState, a116EventType=a116EventType, a93FruInternetUniformResourceLocator=a93FruInternetUniformResourceLocator, a1004TimedResetIncrement=a1004TimedResetIncrement, a93WarrantyStartDate=a93WarrantyStartDate, a93SupportPhoneNumber=a93SupportPhoneNumber, a12PreviousAvailabilityStatus=a12PreviousAvailabilityStatus, a127ContainerOrChassisType=a127ContainerOrChassisType, tOperationalState=tOperationalState, a1004UseSystemWatchdogFeature=a1004UseSystemWatchdogFeature, a127OperationalGroupIndex=a127OperationalGroupIndex, a116IsEventState_based=a116IsEventState_based, a93WarrantyDuration=a93WarrantyDuration, a31FatalErrorCount=a31FatalErrorCount, a127ContainerLocation=a127ContainerLocation, DmiDisplaystring=DmiDisplaystring, a12EventCount=a12EventCount, server_products=server_products, DmiInteger=DmiInteger, a2000DimContext=a2000DimContext, a127ContainerName=a127ContainerName, a1SerialNumber=a1SerialNumber, a127ThermalState=a127ThermalState, a93Description=a93Description, a2002EventSubsystem=a2002EventSubsystem, tSystemEventLog=tSystemEventLog, tEifExtensionList=tEifExtensionList, a1001MibOid=a1001MibOid, a1007AssociatedGroup=a1007AssociatedGroup, tEventGenerationForIcmbState=tEventGenerationForIcmbState, a1004IssueAHardwareNmi=a1004IssueAHardwareNmi, a1006RecordType=a1006RecordType, a2002EventSeverity=a2002EventSeverity, a31OperationalStatus=a31OperationalStatus, a127FruGroupIndex=a127FruGroupIndex, a12SelDeviceId=a12SelDeviceId, eEventGenerationForPhysicalContainer=eEventGenerationForPhysicalContainer, a1Product=a1Product, a1004ShutdownOsAndPowerOff=a1004ShutdownOsAndPowerOff, a12IcmbId=a12IcmbId, a1007EventStateKey=a1007EventStateKey, a1004Selfid=a1004Selfid, a1006RecordLength=a1006RecordLength, a93FruSerialNumber=a93FruSerialNumber, tEventGenerationForPhysicalContainer=tEventGenerationForPhysicalContainer, a2002EventStateKey=a2002EventStateKey, eOperationalState=eOperationalState, a1006Timestamp=a1006Timestamp, a93RevisionLevel=a93RevisionLevel, a1001DisableTrap=a1001DisableTrap, tMiftomib=tMiftomib, tComponentid=tComponentid, a2001Filename=a2001Filename, a1Manufacturer=a1Manufacturer, DmiDateX=DmiDateX, a2000Status=a2000Status, DmiCounter=DmiCounter, a2002EventSystem=a2002EventSystem, a12ChassisAvailable=a12ChassisAvailable, a1004ResetSystemAfterDelay=a1004ResetSystemAfterDelay, dmtfGroups=dmtfGroups, a12SetAvailablityState=a12SetAvailablityState, tIcmbState=tIcmbState, a2002AssociatedGroup=a2002AssociatedGroup, platforms=platforms, a116AssociatedGroup=a116AssociatedGroup, DmiComponentIndex=DmiComponentIndex, eIcmbState=eIcmbState, a1004ShutdownOsAndHardwareReset=a1004ShutdownOsAndHardwareReset, a1004SavePersistentData=a1004SavePersistentData, a116EventSeverity=a116EventSeverity, tEifControl=tEifControl, a1004WatchdogTimerResolution=a1004WatchdogTimerResolution, eEventGenerationForIcmbState=eEventGenerationForIcmbState, a31MajorErrorCount=a31MajorErrorCount, products=products)
