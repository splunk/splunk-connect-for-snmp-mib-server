#
# PySNMP MIB module ASCEND-MIBBGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBBGP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:10:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibIdentifier, iso, Unsigned32, IpAddress, Integer32, ObjectIdentity, Bits, ModuleIdentity, TimeTicks, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "iso", "Unsigned32", "IpAddress", "Integer32", "ObjectIdentity", "Bits", "ModuleIdentity", "TimeTicks", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibmibProfBgpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 57))
mibmibProfBgpPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 60))
mibmibProfBgpSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 59))
mibmibProfBgpPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 58))
mibmibProfBgpGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 57, 1), )
if mibBuilder.loadTexts: mibmibProfBgpGlobalTable.setStatus('mandatory')
mibmibProfBgpGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1), ).setIndexNames((0, "ASCEND-MIBBGP-MIB", "mibProfBgpGlobal-Index-o"))
if mibBuilder.loadTexts: mibmibProfBgpGlobalEntry.setStatus('mandatory')
mibProfBgpGlobal_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 1), Integer32()).setLabel("mibProfBgpGlobal-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpGlobal_Index_o.setStatus('mandatory')
mibProfBgpGlobal_Enable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpGlobal-Enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_Enable.setStatus('mandatory')
mibProfBgpGlobal_AutonomousSystem = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 3), Integer32()).setLabel("mibProfBgpGlobal-AutonomousSystem").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_AutonomousSystem.setStatus('mandatory')
mibProfBgpGlobal_Id = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 4), IpAddress()).setLabel("mibProfBgpGlobal-Id").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_Id.setStatus('mandatory')
mibProfBgpGlobal_ConnectRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 5), Integer32()).setLabel("mibProfBgpGlobal-ConnectRetryInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_ConnectRetryInterval.setStatus('mandatory')
mibProfBgpGlobal_KeepaliveTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 6), Integer32()).setLabel("mibProfBgpGlobal-KeepaliveTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_KeepaliveTime.setStatus('mandatory')
mibProfBgpGlobal_HoldTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 7), Integer32()).setLabel("mibProfBgpGlobal-HoldTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_HoldTime.setStatus('mandatory')
mibProfBgpGlobal_SubAs = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 16), Integer32()).setLabel("mibProfBgpGlobal-SubAs").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_SubAs.setStatus('mandatory')
mibProfBgpGlobal_ClusterId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 9), IpAddress()).setLabel("mibProfBgpGlobal-ClusterId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_ClusterId.setStatus('mandatory')
mibProfBgpGlobal_IgpLockstep = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpGlobal-IgpLockstep").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_IgpLockstep.setStatus('mandatory')
mibProfBgpGlobal_MaxMultiPaths = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 13), Integer32()).setLabel("mibProfBgpGlobal-MaxMultiPaths").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_MaxMultiPaths.setStatus('mandatory')
mibProfBgpGlobal_StaticRouteRedistPolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 14), DisplayString()).setLabel("mibProfBgpGlobal-StaticRouteRedistPolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_StaticRouteRedistPolicy.setStatus('mandatory')
mibProfBgpGlobal_ConnRouteRedistPolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 15), DisplayString()).setLabel("mibProfBgpGlobal-ConnRouteRedistPolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_ConnRouteRedistPolicy.setStatus('mandatory')
mibProfBgpGlobal_LocalPrefDefault = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 17), Integer32()).setLabel("mibProfBgpGlobal-LocalPrefDefault").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_LocalPrefDefault.setStatus('mandatory')
mibProfBgpGlobal_AlwaysCompareMed = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpGlobal-AlwaysCompareMed").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_AlwaysCompareMed.setStatus('mandatory')
mibProfBgpGlobal_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 57, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("mibProfBgpGlobal-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpGlobal_Action_o.setStatus('mandatory')
mibmibProfBgpPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 60, 1), )
if mibBuilder.loadTexts: mibmibProfBgpPolicyTable.setStatus('mandatory')
mibmibProfBgpPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 60, 1, 1), ).setIndexNames((0, "ASCEND-MIBBGP-MIB", "mibProfBgpPolicy-Name"))
if mibBuilder.loadTexts: mibmibProfBgpPolicyEntry.setStatus('mandatory')
mibProfBgpPolicy_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 60, 1, 1, 1), DisplayString()).setLabel("mibProfBgpPolicy-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpPolicy_Name.setStatus('mandatory')
mibProfBgpPolicy_NextPolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 60, 1, 1, 3), DisplayString()).setLabel("mibProfBgpPolicy-NextPolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPolicy_NextPolicy.setStatus('mandatory')
mibProfBgpPolicy_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 60, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("mibProfBgpPolicy-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPolicy_Action_o.setStatus('mandatory')
mibmibProfBgpPolicy_RuleTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 60, 2), ).setLabel("mibmibProfBgpPolicy-RuleTable")
if mibBuilder.loadTexts: mibmibProfBgpPolicy_RuleTable.setStatus('mandatory')
mibmibProfBgpPolicy_RuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 60, 2, 1), ).setLabel("mibmibProfBgpPolicy-RuleEntry").setIndexNames((0, "ASCEND-MIBBGP-MIB", "mibProfBgpPolicy-Rule-Name"), (0, "ASCEND-MIBBGP-MIB", "mibProfBgpPolicy-Rule-Index-o"))
if mibBuilder.loadTexts: mibmibProfBgpPolicy_RuleEntry.setStatus('mandatory')
mibProfBgpPolicy_Rule_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 60, 2, 1, 1), DisplayString()).setLabel("mibProfBgpPolicy-Rule-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpPolicy_Rule_Name.setStatus('mandatory')
mibProfBgpPolicy_Rule_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 60, 2, 1, 2), Integer32()).setLabel("mibProfBgpPolicy-Rule-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpPolicy_Rule_Index_o.setStatus('mandatory')
mibProfBgpPolicy_Rule = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 60, 2, 1, 3), DisplayString()).setLabel("mibProfBgpPolicy-Rule").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPolicy_Rule.setStatus('mandatory')
mibmibProfBgpSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 59, 1), )
if mibBuilder.loadTexts: mibmibProfBgpSummaryTable.setStatus('mandatory')
mibmibProfBgpSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 59, 1, 1), ).setIndexNames((0, "ASCEND-MIBBGP-MIB", "mibProfBgpSummary-Prefix-IpAddress"), (0, "ASCEND-MIBBGP-MIB", "mibProfBgpSummary-Prefix-Netmask"))
if mibBuilder.loadTexts: mibmibProfBgpSummaryEntry.setStatus('mandatory')
mibProfBgpSummary_Prefix_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 59, 1, 1, 8), IpAddress()).setLabel("mibProfBgpSummary-Prefix-IpAddress").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpSummary_Prefix_IpAddress.setStatus('mandatory')
mibProfBgpSummary_Prefix_Netmask = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 59, 1, 1, 11), IpAddress()).setLabel("mibProfBgpSummary-Prefix-Netmask").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpSummary_Prefix_Netmask.setStatus('mandatory')
mibProfBgpSummary_Enable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 59, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpSummary-Enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpSummary_Enable.setStatus('mandatory')
mibProfBgpSummary_SummarizationPolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 59, 1, 1, 12), DisplayString()).setLabel("mibProfBgpSummary-SummarizationPolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpSummary_SummarizationPolicy.setStatus('mandatory')
mibProfBgpSummary_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 59, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("mibProfBgpSummary-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpSummary_Action_o.setStatus('mandatory')
mibmibProfBgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 58, 1), )
if mibBuilder.loadTexts: mibmibProfBgpPeerTable.setStatus('mandatory')
mibmibProfBgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1), ).setIndexNames((0, "ASCEND-MIBBGP-MIB", "mibProfBgpPeer-PeerName"))
if mibBuilder.loadTexts: mibmibProfBgpPeerEntry.setStatus('mandatory')
mibProfBgpPeer_PeerName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 14), DisplayString()).setLabel("mibProfBgpPeer-PeerName").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfBgpPeer_PeerName.setStatus('mandatory')
mibProfBgpPeer_Enable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpPeer-Enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_Enable.setStatus('mandatory')
mibProfBgpPeer_PeerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 15), IpAddress()).setLabel("mibProfBgpPeer-PeerIpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_PeerIpAddress.setStatus('mandatory')
mibProfBgpPeer_MyIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 16), IpAddress()).setLabel("mibProfBgpPeer-MyIpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_MyIpAddress.setStatus('mandatory')
mibProfBgpPeer_AutonomousSystem = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 3), Integer32()).setLabel("mibProfBgpPeer-AutonomousSystem").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_AutonomousSystem.setStatus('mandatory')
mibProfBgpPeer_AlwaysNextHop = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpPeer-AlwaysNextHop").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_AlwaysNextHop.setStatus('mandatory')
mibProfBgpPeer_RouteReflectorClient = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpPeer-RouteReflectorClient").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_RouteReflectorClient.setStatus('mandatory')
mibProfBgpPeer_ConfederationMember = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mibProfBgpPeer-ConfederationMember").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_ConfederationMember.setStatus('mandatory')
mibProfBgpPeer_DefaultGatewayMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 17), Integer32()).setLabel("mibProfBgpPeer-DefaultGatewayMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_DefaultGatewayMetric.setStatus('mandatory')
mibProfBgpPeer_AcceptPolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 10), DisplayString()).setLabel("mibProfBgpPeer-AcceptPolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_AcceptPolicy.setStatus('mandatory')
mibProfBgpPeer_InjectPolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 11), DisplayString()).setLabel("mibProfBgpPeer-InjectPolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_InjectPolicy.setStatus('mandatory')
mibProfBgpPeer_AdvertisePolicy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 12), DisplayString()).setLabel("mibProfBgpPeer-AdvertisePolicy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_AdvertisePolicy.setStatus('mandatory')
mibProfBgpPeer_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 58, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("mibProfBgpPeer-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfBgpPeer_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBBGP-MIB", mibProfBgpGlobal_KeepaliveTime=mibProfBgpGlobal_KeepaliveTime, mibProfBgpGlobal_ClusterId=mibProfBgpGlobal_ClusterId, mibProfBgpGlobal_AlwaysCompareMed=mibProfBgpGlobal_AlwaysCompareMed, mibmibProfBgpSummaryEntry=mibmibProfBgpSummaryEntry, mibProfBgpPeer_MyIpAddress=mibProfBgpPeer_MyIpAddress, mibProfBgpGlobal_ConnectRetryInterval=mibProfBgpGlobal_ConnectRetryInterval, mibProfBgpPolicy_Rule=mibProfBgpPolicy_Rule, mibProfBgpPeer_AlwaysNextHop=mibProfBgpPeer_AlwaysNextHop, mibProfBgpGlobal_ConnRouteRedistPolicy=mibProfBgpGlobal_ConnRouteRedistPolicy, mibmibProfBgpPolicy_RuleEntry=mibmibProfBgpPolicy_RuleEntry, mibProfBgpSummary_Action_o=mibProfBgpSummary_Action_o, mibProfBgpPeer_Action_o=mibProfBgpPeer_Action_o, mibProfBgpGlobal_Index_o=mibProfBgpGlobal_Index_o, DisplayString=DisplayString, mibmibProfBgpPolicyEntry=mibmibProfBgpPolicyEntry, mibProfBgpSummary_Enable=mibProfBgpSummary_Enable, mibProfBgpPeer_AutonomousSystem=mibProfBgpPeer_AutonomousSystem, mibProfBgpPolicy_Rule_Index_o=mibProfBgpPolicy_Rule_Index_o, mibProfBgpPeer_DefaultGatewayMetric=mibProfBgpPeer_DefaultGatewayMetric, mibmibProfBgpGlobalTable=mibmibProfBgpGlobalTable, mibProfBgpGlobal_StaticRouteRedistPolicy=mibProfBgpGlobal_StaticRouteRedistPolicy, mibProfBgpGlobal_HoldTime=mibProfBgpGlobal_HoldTime, mibmibProfBgpGlobalEntry=mibmibProfBgpGlobalEntry, mibProfBgpGlobal_Action_o=mibProfBgpGlobal_Action_o, mibProfBgpSummary_Prefix_Netmask=mibProfBgpSummary_Prefix_Netmask, mibProfBgpGlobal_MaxMultiPaths=mibProfBgpGlobal_MaxMultiPaths, mibmibProfBgpPeerTable=mibmibProfBgpPeerTable, mibProfBgpGlobal_AutonomousSystem=mibProfBgpGlobal_AutonomousSystem, mibProfBgpPeer_AcceptPolicy=mibProfBgpPeer_AcceptPolicy, mibmibProfBgpPolicyTable=mibmibProfBgpPolicyTable, mibmibProfBgpPolicy=mibmibProfBgpPolicy, mibProfBgpGlobal_SubAs=mibProfBgpGlobal_SubAs, mibmibProfBgpPeerEntry=mibmibProfBgpPeerEntry, mibProfBgpPolicy_Action_o=mibProfBgpPolicy_Action_o, mibProfBgpGlobal_LocalPrefDefault=mibProfBgpGlobal_LocalPrefDefault, mibmibProfBgpSummary=mibmibProfBgpSummary, mibProfBgpPolicy_Name=mibProfBgpPolicy_Name, mibProfBgpSummary_SummarizationPolicy=mibProfBgpSummary_SummarizationPolicy, mibProfBgpPolicy_Rule_Name=mibProfBgpPolicy_Rule_Name, mibmibProfBgpSummaryTable=mibmibProfBgpSummaryTable, mibProfBgpPeer_AdvertisePolicy=mibProfBgpPeer_AdvertisePolicy, mibmibProfBgpPeer=mibmibProfBgpPeer, mibmibProfBgpGlobal=mibmibProfBgpGlobal, mibProfBgpPeer_RouteReflectorClient=mibProfBgpPeer_RouteReflectorClient, mibProfBgpSummary_Prefix_IpAddress=mibProfBgpSummary_Prefix_IpAddress, mibmibProfBgpPolicy_RuleTable=mibmibProfBgpPolicy_RuleTable, mibProfBgpPeer_PeerName=mibProfBgpPeer_PeerName, mibProfBgpGlobal_Id=mibProfBgpGlobal_Id, mibProfBgpPolicy_NextPolicy=mibProfBgpPolicy_NextPolicy, mibProfBgpGlobal_Enable=mibProfBgpGlobal_Enable, mibProfBgpPeer_Enable=mibProfBgpPeer_Enable, mibProfBgpGlobal_IgpLockstep=mibProfBgpGlobal_IgpLockstep, mibProfBgpPeer_PeerIpAddress=mibProfBgpPeer_PeerIpAddress, mibProfBgpPeer_InjectPolicy=mibProfBgpPeer_InjectPolicy, mibProfBgpPeer_ConfederationMember=mibProfBgpPeer_ConfederationMember)
