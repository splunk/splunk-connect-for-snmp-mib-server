#
# PySNMP MIB module Nortel-Magellan-Passport-IpVrrpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-IpVrrpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
vrIp, vrPpIpPort, vrIpIndex, vrPpIpPortIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-IpMIB", "vrIp", "vrPpIpPort", "vrIpIndex", "vrPpIpPortIndex")
RowStatus, Integer32, DisplayString, MacAddress, Unsigned32, StorageType = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowStatus", "Integer32", "DisplayString", "MacAddress", "Unsigned32", "StorageType")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
vrPpIndex, vrIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex", "vrIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, MibIdentifier, Integer32, NotificationType, Bits, Counter32, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, ModuleIdentity, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Integer32", "NotificationType", "Bits", "Counter32", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "ModuleIdentity", "iso", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ipVrrpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161))
vrPpIpPortVrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17))
vrPpIpPortVrrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 1), )
if mibBuilder.loadTexts: vrPpIpPortVrrpRowStatusTable.setStatus('mandatory')
vrPpIpPortVrrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"))
if mibBuilder.loadTexts: vrPpIpPortVrrpRowStatusEntry.setStatus('mandatory')
vrPpIpPortVrrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortVrrpRowStatus.setStatus('mandatory')
vrPpIpPortVrrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpComponentName.setStatus('mandatory')
vrPpIpPortVrrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpStorageType.setStatus('mandatory')
vrPpIpPortVrrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: vrPpIpPortVrrpIndex.setStatus('mandatory')
vrPpIpPortVrrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 2), )
if mibBuilder.loadTexts: vrPpIpPortVrrpProvTable.setStatus('mandatory')
vrPpIpPortVrrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 2, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"))
if mibBuilder.loadTexts: vrPpIpPortVrrpProvEntry.setStatus('mandatory')
vrPpIpPortVrrpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortVrrpPriority.setStatus('mandatory')
vrPpIpPortVrrpAdvertInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortVrrpAdvertInterval.setStatus('mandatory')
vrPpIpPortVrrpLinkToCriticalIp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 2, 1, 5), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortVrrpLinkToCriticalIp.setStatus('mandatory')
vrPpIpPortVrrpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 13), )
if mibBuilder.loadTexts: vrPpIpPortVrrpOperTable.setStatus('mandatory')
vrPpIpPortVrrpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"))
if mibBuilder.loadTexts: vrPpIpPortVrrpOperEntry.setStatus('mandatory')
vrPpIpPortVrrpVirtualRouterState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("initialize", 0), ("backup", 1), ("master", 2))).clone('initialize')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpVirtualRouterState.setStatus('mandatory')
vrPpIpPortVrrpVirtualRouterPhysicalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 13, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpVirtualRouterPhysicalAddress.setStatus('mandatory')
vrPpIpPortVrrpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 30), )
if mibBuilder.loadTexts: vrPpIpPortVrrpAdminControlTable.setStatus('mandatory')
vrPpIpPortVrrpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 30, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"))
if mibBuilder.loadTexts: vrPpIpPortVrrpAdminControlEntry.setStatus('mandatory')
vrPpIpPortVrrpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortVrrpSnmpAdminStatus.setStatus('mandatory')
vrPpIpPortVrrpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 31), )
if mibBuilder.loadTexts: vrPpIpPortVrrpOperStatusTable.setStatus('mandatory')
vrPpIpPortVrrpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 31, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"))
if mibBuilder.loadTexts: vrPpIpPortVrrpOperStatusEntry.setStatus('mandatory')
vrPpIpPortVrrpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 31, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpSnmpOperStatus.setStatus('mandatory')
vrPpIpPortVrrpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 32), )
if mibBuilder.loadTexts: vrPpIpPortVrrpStateTable.setStatus('mandatory')
vrPpIpPortVrrpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 32, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"))
if mibBuilder.loadTexts: vrPpIpPortVrrpStateEntry.setStatus('mandatory')
vrPpIpPortVrrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpAdminState.setStatus('mandatory')
vrPpIpPortVrrpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpOperationalState.setStatus('mandatory')
vrPpIpPortVrrpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpUsageState.setStatus('mandatory')
vrPpIpPortVrrpIpAddressesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 700), )
if mibBuilder.loadTexts: vrPpIpPortVrrpIpAddressesTable.setStatus('mandatory')
vrPpIpPortVrrpIpAddressesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 700, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortVrrpIpAddressesValue"))
if mibBuilder.loadTexts: vrPpIpPortVrrpIpAddressesEntry.setStatus('mandatory')
vrPpIpPortVrrpIpAddressesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 700, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortVrrpIpAddressesValue.setStatus('mandatory')
vrPpIpPortVrrpIpAddressesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 17, 700, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vrPpIpPortVrrpIpAddressesRowStatus.setStatus('mandatory')
vrPpIpPortCriticalIp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18))
vrPpIpPortCriticalIpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 1), )
if mibBuilder.loadTexts: vrPpIpPortCriticalIpRowStatusTable.setStatus('mandatory')
vrPpIpPortCriticalIpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortCriticalIpIndex"))
if mibBuilder.loadTexts: vrPpIpPortCriticalIpRowStatusEntry.setStatus('mandatory')
vrPpIpPortCriticalIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortCriticalIpRowStatus.setStatus('mandatory')
vrPpIpPortCriticalIpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortCriticalIpComponentName.setStatus('mandatory')
vrPpIpPortCriticalIpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrPpIpPortCriticalIpStorageType.setStatus('mandatory')
vrPpIpPortCriticalIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: vrPpIpPortCriticalIpIndex.setStatus('mandatory')
vrPpIpPortCriticalIpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 24), )
if mibBuilder.loadTexts: vrPpIpPortCriticalIpProvTable.setStatus('mandatory')
vrPpIpPortCriticalIpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 24, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrPpIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrPpIpPortIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrPpIpPortCriticalIpIndex"))
if mibBuilder.loadTexts: vrPpIpPortCriticalIpProvEntry.setStatus('mandatory')
vrPpIpPortCriticalIpLinkToVrrp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 3, 5, 18, 24, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrPpIpPortCriticalIpLinkToVrrp.setStatus('mandatory')
vrIpIpVrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25))
vrIpIpVrrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 1), )
if mibBuilder.loadTexts: vrIpIpVrrpRowStatusTable.setStatus('mandatory')
vrIpIpVrrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrIpIpVrrpIndex"))
if mibBuilder.loadTexts: vrIpIpVrrpRowStatusEntry.setStatus('mandatory')
vrIpIpVrrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpIpVrrpRowStatus.setStatus('mandatory')
vrIpIpVrrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpIpVrrpComponentName.setStatus('mandatory')
vrIpIpVrrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpIpVrrpStorageType.setStatus('mandatory')
vrIpIpVrrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrIpIpVrrpIndex.setStatus('mandatory')
vrIpIpVrrpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 30), )
if mibBuilder.loadTexts: vrIpIpVrrpAdminControlTable.setStatus('mandatory')
vrIpIpVrrpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 30, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrIpIpVrrpIndex"))
if mibBuilder.loadTexts: vrIpIpVrrpAdminControlEntry.setStatus('mandatory')
vrIpIpVrrpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpIpVrrpSnmpAdminStatus.setStatus('mandatory')
vrIpIpVrrpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 31), )
if mibBuilder.loadTexts: vrIpIpVrrpOperStatusTable.setStatus('mandatory')
vrIpIpVrrpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 31, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrIpIpVrrpIndex"))
if mibBuilder.loadTexts: vrIpIpVrrpOperStatusEntry.setStatus('mandatory')
vrIpIpVrrpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 31, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpIpVrrpSnmpOperStatus.setStatus('mandatory')
vrIpIpVrrpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 32), )
if mibBuilder.loadTexts: vrIpIpVrrpStateTable.setStatus('mandatory')
vrIpIpVrrpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 32, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-IpVrrpMIB", "vrIpIpVrrpIndex"))
if mibBuilder.loadTexts: vrIpIpVrrpStateEntry.setStatus('mandatory')
vrIpIpVrrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpIpVrrpAdminState.setStatus('mandatory')
vrIpIpVrrpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpIpVrrpOperationalState.setStatus('mandatory')
vrIpIpVrrpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 25, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpIpVrrpUsageState.setStatus('mandatory')
ipVrrpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 1))
ipVrrpGroupBG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 1, 7))
ipVrrpGroupBG00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 1, 7, 1))
ipVrrpGroupBG00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 1, 7, 1, 2))
ipVrrpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 3))
ipVrrpCapabilitiesBG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 3, 7))
ipVrrpCapabilitiesBG00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 3, 7, 1))
ipVrrpCapabilitiesBG00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 161, 3, 7, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-IpVrrpMIB", vrIpIpVrrpAdminState=vrIpIpVrrpAdminState, vrPpIpPortVrrpOperationalState=vrPpIpPortVrrpOperationalState, vrPpIpPortVrrpAdminControlTable=vrPpIpPortVrrpAdminControlTable, ipVrrpCapabilitiesBG=ipVrrpCapabilitiesBG, vrPpIpPortVrrpOperStatusEntry=vrPpIpPortVrrpOperStatusEntry, vrIpIpVrrp=vrIpIpVrrp, vrPpIpPortVrrpProvTable=vrPpIpPortVrrpProvTable, vrPpIpPortCriticalIpRowStatus=vrPpIpPortCriticalIpRowStatus, vrPpIpPortVrrpOperStatusTable=vrPpIpPortVrrpOperStatusTable, vrPpIpPortVrrpSnmpAdminStatus=vrPpIpPortVrrpSnmpAdminStatus, vrIpIpVrrpRowStatusEntry=vrIpIpVrrpRowStatusEntry, vrIpIpVrrpIndex=vrIpIpVrrpIndex, vrIpIpVrrpOperStatusEntry=vrIpIpVrrpOperStatusEntry, vrIpIpVrrpAdminControlEntry=vrIpIpVrrpAdminControlEntry, ipVrrpMIB=ipVrrpMIB, vrPpIpPortVrrp=vrPpIpPortVrrp, vrPpIpPortVrrpAdminState=vrPpIpPortVrrpAdminState, vrPpIpPortVrrpComponentName=vrPpIpPortVrrpComponentName, vrPpIpPortVrrpIpAddressesValue=vrPpIpPortVrrpIpAddressesValue, vrIpIpVrrpRowStatusTable=vrIpIpVrrpRowStatusTable, vrPpIpPortVrrpOperEntry=vrPpIpPortVrrpOperEntry, vrIpIpVrrpStorageType=vrIpIpVrrpStorageType, ipVrrpGroupBG00A=ipVrrpGroupBG00A, vrPpIpPortVrrpStorageType=vrPpIpPortVrrpStorageType, vrIpIpVrrpRowStatus=vrIpIpVrrpRowStatus, vrPpIpPortCriticalIpComponentName=vrPpIpPortCriticalIpComponentName, vrIpIpVrrpOperStatusTable=vrIpIpVrrpOperStatusTable, vrIpIpVrrpStateEntry=vrIpIpVrrpStateEntry, vrPpIpPortVrrpUsageState=vrPpIpPortVrrpUsageState, ipVrrpGroupBG00=ipVrrpGroupBG00, vrPpIpPortCriticalIpRowStatusTable=vrPpIpPortCriticalIpRowStatusTable, vrPpIpPortCriticalIpRowStatusEntry=vrPpIpPortCriticalIpRowStatusEntry, vrPpIpPortVrrpVirtualRouterPhysicalAddress=vrPpIpPortVrrpVirtualRouterPhysicalAddress, vrPpIpPortVrrpAdminControlEntry=vrPpIpPortVrrpAdminControlEntry, vrPpIpPortCriticalIp=vrPpIpPortCriticalIp, vrIpIpVrrpSnmpOperStatus=vrIpIpVrrpSnmpOperStatus, vrPpIpPortVrrpVirtualRouterState=vrPpIpPortVrrpVirtualRouterState, vrPpIpPortCriticalIpProvTable=vrPpIpPortCriticalIpProvTable, vrIpIpVrrpUsageState=vrIpIpVrrpUsageState, vrPpIpPortVrrpRowStatusTable=vrPpIpPortVrrpRowStatusTable, vrPpIpPortVrrpLinkToCriticalIp=vrPpIpPortVrrpLinkToCriticalIp, ipVrrpCapabilitiesBG00A=ipVrrpCapabilitiesBG00A, vrPpIpPortVrrpStateTable=vrPpIpPortVrrpStateTable, ipVrrpCapabilitiesBG00=ipVrrpCapabilitiesBG00, vrPpIpPortVrrpIndex=vrPpIpPortVrrpIndex, vrPpIpPortVrrpAdvertInterval=vrPpIpPortVrrpAdvertInterval, vrPpIpPortVrrpIpAddressesRowStatus=vrPpIpPortVrrpIpAddressesRowStatus, vrPpIpPortVrrpIpAddressesTable=vrPpIpPortVrrpIpAddressesTable, vrPpIpPortVrrpStateEntry=vrPpIpPortVrrpStateEntry, vrPpIpPortVrrpOperTable=vrPpIpPortVrrpOperTable, vrIpIpVrrpComponentName=vrIpIpVrrpComponentName, vrPpIpPortCriticalIpStorageType=vrPpIpPortCriticalIpStorageType, vrPpIpPortVrrpIpAddressesEntry=vrPpIpPortVrrpIpAddressesEntry, ipVrrpGroup=ipVrrpGroup, vrPpIpPortVrrpProvEntry=vrPpIpPortVrrpProvEntry, ipVrrpGroupBG=ipVrrpGroupBG, vrIpIpVrrpAdminControlTable=vrIpIpVrrpAdminControlTable, vrIpIpVrrpStateTable=vrIpIpVrrpStateTable, vrPpIpPortCriticalIpProvEntry=vrPpIpPortCriticalIpProvEntry, vrIpIpVrrpOperationalState=vrIpIpVrrpOperationalState, vrPpIpPortCriticalIpIndex=vrPpIpPortCriticalIpIndex, vrPpIpPortVrrpPriority=vrPpIpPortVrrpPriority, vrPpIpPortVrrpSnmpOperStatus=vrPpIpPortVrrpSnmpOperStatus, vrIpIpVrrpSnmpAdminStatus=vrIpIpVrrpSnmpAdminStatus, vrPpIpPortCriticalIpLinkToVrrp=vrPpIpPortCriticalIpLinkToVrrp, vrPpIpPortVrrpRowStatus=vrPpIpPortVrrpRowStatus, ipVrrpCapabilities=ipVrrpCapabilities, vrPpIpPortVrrpRowStatusEntry=vrPpIpPortVrrpRowStatusEntry)
