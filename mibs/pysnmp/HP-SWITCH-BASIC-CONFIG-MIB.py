#
# PySNMP MIB module HP-SWITCH-BASIC-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SWITCH-BASIC-CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:24:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
hpSwitchConfig, hpSwitchFilterConfig, hpSwitchIgmpConfig = mibBuilder.importSymbols("CONFIG-MIB", "hpSwitchConfig", "hpSwitchFilterConfig", "hpSwitchIgmpConfig")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
portCopyEntry, = mibBuilder.importSymbols("SMON-MIB", "portCopyEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, Unsigned32, Counter32, IpAddress, ObjectIdentity, Counter64, Bits, Integer32, NotificationType, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "Counter32", "IpAddress", "ObjectIdentity", "Counter64", "Bits", "Integer32", "NotificationType", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks")
DateAndTime, RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
hpSwitchBasicConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29))
hpSwitchBasicConfigMIB.setRevisions(('2015-10-11 00:00', '2015-04-20 00:00', '2014-12-11 00:00', '2014-03-25 00:00', '2013-07-22 00:00', '2013-05-22 00:00', '2013-02-16 00:00', '2012-02-03 00:00', '2011-09-08 00:00', '2011-06-15 21:07', '2010-08-05 00:00', '2010-06-28 00:00', '2010-04-14 00:00', '2010-02-17 00:00', '2009-09-10 00:00', '2009-08-18 00:00', '2009-07-30 00:00',))
if mibBuilder.loadTexts: hpSwitchBasicConfigMIB.setLastUpdated('201510110000Z')
if mibBuilder.loadTexts: hpSwitchBasicConfigMIB.setOrganization('HP Networking')
hpSwitchBasicConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1))
hpSwitchBasicConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2))
hpSwitchACLConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 3))
hpSwitchModules = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7))
hpSwitchRunningCfgChgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12))
hpSwitchCdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 15))
hpSwitchFPModules = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 19))
hpSwitchSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noConfigSave", 1), ("saveConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchSaveConfig.setStatus('current')
hpSwitchAliasTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 2), )
if mibBuilder.loadTexts: hpSwitchAliasTable.setStatus('current')
hpSwitchAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 2, 1), ).setIndexNames((0, "HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAliasName"))
if mibBuilder.loadTexts: hpSwitchAliasEntry.setStatus('current')
hpSwitchAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100)))
if mibBuilder.loadTexts: hpSwitchAliasName.setStatus('current')
hpSwitchAliasCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchAliasCommand.setStatus('current')
hpSwitchAliasConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchAliasConfigRowStatus.setStatus('current')
hpicfBridgeFilterConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 2), )
if mibBuilder.loadTexts: hpicfBridgeFilterConfigTable.setStatus('current')
hpicfBridgeFilterConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 2, 1), ).setIndexNames((0, "HP-SWITCH-BASIC-CONFIG-MIB", "hpicfBridgeFilterName"))
if mibBuilder.loadTexts: hpicfBridgeFilterConfigEntry.setStatus('current')
hpicfBridgeFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100)))
if mibBuilder.loadTexts: hpicfBridgeFilterName.setStatus('current')
hpicfBridgeFilterDropPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 2, 1, 2), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBridgeFilterDropPortMask.setStatus('current')
hpicfBridgeFilterEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 8, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfBridgeFilterEntryStatus.setStatus('current')
hpSwitchAclLogtimeoutConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAclLogtimeoutConfig.setStatus('current')
hpSwitchAclIpv4DenyFragmentedTcpHeader = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAclIpv4DenyFragmentedTcpHeader.setStatus('current')
hpSwitchAclIpv6DenyNonClassifiableL4Header = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAclIpv6DenyNonClassifiableL4Header.setStatus('current')
hpSwitchAclGroupingEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 3, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchAclGroupingEnable.setStatus('current')
hpSwitchIgmpProxyDomainConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5), )
if mibBuilder.loadTexts: hpSwitchIgmpProxyDomainConfigTable.setStatus('current')
hpSwitchIgmpProxyDomainConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1), ).setIndexNames((0, "HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyDomainId"))
if mibBuilder.loadTexts: hpSwitchIgmpProxyDomainConfigEntry.setStatus('current')
hpSwitchIgmpProxyDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpSwitchIgmpProxyDomainId.setStatus('current')
hpSwitchIgmpProxyDomainStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchIgmpProxyDomainStatus.setStatus('current')
hpSwitchIgmpProxyDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchIgmpProxyDomainName.setStatus('current')
hpSwitchIgmpProxyDomainIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchIgmpProxyDomainIp.setStatus('current')
hpSwitchIgmpProxyMcastLowerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchIgmpProxyMcastLowerIp.setStatus('current')
hpSwitchIgmpProxyMcastUpperIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 15, 5, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpSwitchIgmpProxyMcastUpperIp.setStatus('current')
hpicfPortCopyNameTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 4), )
if mibBuilder.loadTexts: hpicfPortCopyNameTable.setStatus('current')
hpicfPortCopyNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 4, 1), )
portCopyEntry.registerAugmentions(("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfPortCopyNameEntry"))
hpicfPortCopyNameEntry.setIndexNames(*portCopyEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPortCopyNameEntry.setStatus('current')
hpicfPortCopyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 4, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPortCopyName.setStatus('current')
hpSwitchDefaultLogon = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cli", 0), ("menu", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchDefaultLogon.setStatus('current')
hpSwitchChassisLocateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 6), )
if mibBuilder.loadTexts: hpSwitchChassisLocateTable.setStatus('current')
hpSwitchChassisLocateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 6, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpSwitchChassisLocateEntry.setStatus('current')
hpSwitchChassisLocateState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("blink", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchChassisLocateState.setStatus('current')
hpSwitchChassisLocateDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 6, 1, 2), Integer32().clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchChassisLocateDuration.setStatus('current')
hpSwitchChassisLocateWhen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("now", 1), ("startup", 2))).clone('now')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchChassisLocateWhen.setStatus('current')
hpSwitchModuleInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 1), )
if mibBuilder.loadTexts: hpSwitchModuleInfoTable.setStatus('current')
hpSwitchModuleInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 1, 1), ).setIndexNames((0, "HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleInfoModId"))
if mibBuilder.loadTexts: hpSwitchModuleInfoEntry.setStatus('current')
hpSwitchModuleInfoModId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpSwitchModuleInfoModId.setStatus('current')
hpSwitchModuleInfoModType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchModuleInfoModType.setStatus('current')
hpSwitchModuleConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 2), )
if mibBuilder.loadTexts: hpSwitchModuleConfigTable.setStatus('current')
hpSwitchModuleConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpSwitchModuleConfigEntry.setStatus('current')
hpSwitchModuleConfigModType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchModuleConfigModType.setStatus('current')
hpSwitchModuleConfigModName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchModuleConfigModName.setStatus('current')
hpSwitchModuleConfigModRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 7, 2, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchModuleConfigModRemove.setStatus('current')
hpSwitchWebSupportUrl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchWebSupportUrl.setStatus('current')
hpSwitchStartupConfigSeqNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStartupConfigSeqNum.setStatus('current')
hpSwitchStartupConfigNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchStartupConfigNotifyEnable.setStatus('current')
hpSwitchImplicitConfigSave = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchImplicitConfigSave.setStatus('current')
hpSwitchSecureModeLevel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 16))).clone(namedValues=NamedValues(("error", 0), ("standard", 1), ("enhanced", 16))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchSecureModeLevel.setStatus('current')
hpSwitchNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0))
hpSwitchStartupConfigSource = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("viaCli", 1), ("viaSnmp", 2), ("viaWebUI", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpSwitchStartupConfigSource.setStatus('current')
hpSwitchStartupConfigSourceIPAddrType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpSwitchStartupConfigSourceIPAddrType.setStatus('current')
hpSwitchStartupConfigSourceIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpSwitchStartupConfigSourceIPAddr.setStatus('current')
hpSwitchStartupConfigSourceUsername = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpSwitchStartupConfigSourceUsername.setStatus('current')
hpSwitchStartupConfigThrottled = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 5), TruthValue().clone('false')).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpSwitchStartupConfigThrottled.setStatus('current')
hpSwitchStartupConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 6)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSeqNum"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSource"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSourceIPAddrType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSourceIPAddr"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSourceUsername"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigThrottled"))
if mibBuilder.loadTexts: hpSwitchStartupConfigChange.setStatus('current')
hpSwitchRunningCfgChgNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgNotifyEnable.setStatus('current')
hpSwitchRunningCfgChgTransmitInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgTransmitInterval.setStatus('current')
hpSwitchRunningCfgChgLatestDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgLatestDateAndTime.setStatus('current')
hpSwitchRunningCfgChgCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgCount.setStatus('current')
hpSwitchRunningCfgChgEntriesBumped = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEntriesBumped.setStatus('current')
hpSwitchRunningCfgChgEventTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6), )
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventTable.setStatus('current')
hpSwitchRunningCfgChgEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1), ).setIndexNames((0, "HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventTableIndex"))
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventEntry.setStatus('current')
hpSwitchRunningCfgChgEventTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventTableIndex.setStatus('current')
hpSwitchRunningCfgChgEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventId.setStatus('current')
hpSwitchRunningCfgChgEventMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("cli", 1), ("menu", 2), ("snmp", 3), ("webUI", 4), ("internalEvent", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventMethod.setStatus('current')
hpSwitchRunningCfgChgEventSourceIPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventSourceIPAddrType.setStatus('current')
hpSwitchRunningCfgChgEventSourceIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventSourceIPAddr.setStatus('current')
hpSwitchRunningCfgChgEventUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventUsername.setStatus('current')
hpSwitchRunningCfgChgEventDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 12, 6, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchRunningCfgChgEventDateAndTime.setStatus('current')
hpSwitchRunningConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 0, 7)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventId"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventMethod"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventSourceIPAddrType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventSourceIPAddr"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventUsername"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventDateAndTime"))
if mibBuilder.loadTexts: hpSwitchRunningConfigChange.setStatus('current')
hpSwitchCdpRunMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rxonly", 1), ("passthru", 2), ("preStdVoice", 3))).clone('rxonly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchCdpRunMode.setStatus('current')
hpSwitchIgnoreUntagMacPortList = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 16), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchIgnoreUntagMacPortList.setStatus('current')
hpSwitchControlPlaneProtectionAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchControlPlaneProtectionAdminStatus.setStatus('current')
hpSwitchRESTInterfaceStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRESTInterfaceStatus.setStatus('current')
hpSwitchRESTSessionIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchRESTSessionIdleTimeout.setStatus('current')
hpSwitchCdpPreStdVoiceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 15, 1), )
if mibBuilder.loadTexts: hpSwitchCdpPreStdVoiceTable.setStatus('current')
hpSwitchCdpPreStdVoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 15, 1, 1), ).setIndexNames((0, "HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchCdpPreStdVoiceIfIndex"))
if mibBuilder.loadTexts: hpSwitchCdpPreStdVoiceEntry.setStatus('current')
hpSwitchCdpPreStdVoiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 15, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpSwitchCdpPreStdVoiceIfIndex.setStatus('current')
hpSwitchCdpPreStdVoiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("txAndRx", 1), ("rxOnly", 2))).clone('txAndRx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchCdpPreStdVoiceStatus.setStatus('current')
hpSwitchFPModuleConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 19, 1), )
if mibBuilder.loadTexts: hpSwitchFPModuleConfigTable.setStatus('current')
hpSwitchFPModuleConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 19, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpSwitchFPModuleConfigEntry.setStatus('current')
hpSwitchFPModuleConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("jl078a", 1), ("jl079a", 2), ("jl081a", 3), ("jl083a", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFPModuleConfigType.setStatus('current')
hpSwitchFPModuleConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 1, 19, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpSwitchFPModuleConfigName.setStatus('current')
hpSwitchBasicConfigCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1))
hpSwitchBasicConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2))
hpSwitchBasicNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 3))
hpSwitchBasicConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 1)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicConfigGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAliasGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfBridgeFilterConfigGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfPortCopyNameGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclLogtimeoutGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyDomainConfigGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchChassisLocateGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicNotificationGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigChangeGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance = hpSwitchBasicConfigCompliance.setStatus('current')
hpSwitchBasicConfigCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 2)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance2 = hpSwitchBasicConfigCompliance2.setStatus('current')
hpSwitchBasicConfigCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 3)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicConfigGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance3 = hpSwitchBasicConfigCompliance3.setStatus('current')
hpSwitchBasicConfigCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 4)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchCdpConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance4 = hpSwitchBasicConfigCompliance4.setStatus('current')
hpSwitchBasicConfigCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 5)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchCdpPreStdVoiceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance5 = hpSwitchBasicConfigCompliance5.setStatus('current')
hpSwitchBasicConfigCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 6)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgnoreUntagMacConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance6 = hpSwitchBasicConfigCompliance6.setStatus('current')
hpSwitchBasicConfigCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 7)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance7 = hpSwitchBasicConfigCompliance7.setStatus('current')
hpSwitchBasicConfigCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 8)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicConfigGroup4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance8 = hpSwitchBasicConfigCompliance8.setStatus('current')
hpSwitchBasicConfigCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 10)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchFPModuleGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance10 = hpSwitchBasicConfigCompliance10.setStatus('current')
hpSwitchBasicConfigCompliance11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 11)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRESTInterfaceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance11 = hpSwitchBasicConfigCompliance11.setStatus('current')
hpSwitchBasicConfigCompliance12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 1, 12)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicConfigGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAliasGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfBridgeFilterConfigGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfPortCopyNameGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclLogtimeoutGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyDomainConfigGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchChassisLocateGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchBasicNotificationGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigChangeGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclGroup"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclGroupingEnableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigCompliance12 = hpSwitchBasicConfigCompliance12.setStatus('current')
hpSwitchBasicConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 1)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchSaveConfig"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchDefaultLogon"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchWebSupportUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigGroup = hpSwitchBasicConfigGroup.setStatus('current')
hpSwitchAliasGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 2)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAliasCommand"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAliasConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAliasGroup = hpSwitchAliasGroup.setStatus('current')
hpicfBridgeFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 3)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfBridgeFilterDropPortMask"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfBridgeFilterEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfBridgeFilterConfigGroup = hpicfBridgeFilterConfigGroup.setStatus('current')
hpicfPortCopyNameGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 4)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpicfPortCopyName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPortCopyNameGroup = hpicfPortCopyNameGroup.setStatus('current')
hpSwitchAclLogtimeoutGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 5)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclLogtimeoutConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAclLogtimeoutGroup = hpSwitchAclLogtimeoutGroup.setStatus('current')
hpSwitchIgmpProxyDomainConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 6)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyDomainName"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyDomainStatus"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyDomainIp"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyMcastLowerIp"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgmpProxyMcastUpperIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchIgmpProxyDomainConfigGroup = hpSwitchIgmpProxyDomainConfigGroup.setStatus('current')
hpSwitchChassisLocateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 7)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchChassisLocateState"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchChassisLocateDuration"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchChassisLocateWhen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchChassisLocateGroup = hpSwitchChassisLocateGroup.setStatus('current')
hpSwitchModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 8)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleInfoModType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleConfigModType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleConfigModName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchModuleGroup = hpSwitchModuleGroup.setStatus('current')
hpSwitchStartupConfigChangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 9)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSeqNum"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigNotifyEnable"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSource"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSourceIPAddrType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSourceIPAddr"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigSourceUsername"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigThrottled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchStartupConfigChangeGroup = hpSwitchStartupConfigChangeGroup.setStatus('current')
hpSwitchBasicConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 10)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchImplicitConfigSave"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigGroup2 = hpSwitchBasicConfigGroup2.setStatus('current')
hpSwitchRunningCfgChgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 11)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgNotifyEnable"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgTransmitInterval"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgLatestDateAndTime"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgCount"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEntriesBumped"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventId"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventMethod"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventSourceIPAddrType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventSourceIPAddr"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventUsername"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningCfgChgEventDateAndTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRunningCfgChgGroup = hpSwitchRunningCfgChgGroup.setStatus('current')
hpSwitchBasicConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 12)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchSecureModeLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigGroup3 = hpSwitchBasicConfigGroup3.setStatus('current')
hpSwitchBasicNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 3, 1)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRunningConfigChange"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchStartupConfigChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicNotificationGroup = hpSwitchBasicNotificationGroup.setStatus('current')
hpSwitchCdpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 13)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchCdpRunMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchCdpConfigGroup = hpSwitchCdpConfigGroup.setStatus('current')
hpSwitchCdpPreStdVoiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 14)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchCdpPreStdVoiceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchCdpPreStdVoiceGroup = hpSwitchCdpPreStdVoiceGroup.setStatus('current')
hpSwitchIgnoreUntagMacConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 15)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchIgnoreUntagMacPortList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchIgnoreUntagMacConfigGroup = hpSwitchIgnoreUntagMacConfigGroup.setStatus('current')
hpSwitchModuleConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 16)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchModuleConfigModRemove"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchModuleConfigGroup = hpSwitchModuleConfigGroup.setStatus('current')
hpSwitchBasicConfigGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 17)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchControlPlaneProtectionAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBasicConfigGroup4 = hpSwitchBasicConfigGroup4.setStatus('current')
hpSwitchAclGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 20)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclIpv4DenyFragmentedTcpHeader"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclIpv6DenyNonClassifiableL4Header"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAclGroup = hpSwitchAclGroup.setStatus('current')
hpSwitchFPModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 21)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchFPModuleConfigType"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchFPModuleConfigName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchFPModuleGroup = hpSwitchFPModuleGroup.setStatus('current')
hpSwitchRESTInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 22)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRESTInterfaceStatus"), ("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchRESTSessionIdleTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchRESTInterfaceGroup = hpSwitchRESTInterfaceGroup.setStatus('current')
hpSwitchAclGroupingEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7, 1, 29, 2, 2, 23)).setObjects(("HP-SWITCH-BASIC-CONFIG-MIB", "hpSwitchAclGroupingEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchAclGroupingEnableGroup = hpSwitchAclGroupingEnableGroup.setStatus('current')
mibBuilder.exportSymbols("HP-SWITCH-BASIC-CONFIG-MIB", hpicfBridgeFilterName=hpicfBridgeFilterName, hpSwitchChassisLocateTable=hpSwitchChassisLocateTable, hpSwitchRunningCfgChgObjects=hpSwitchRunningCfgChgObjects, hpSwitchAliasCommand=hpSwitchAliasCommand, hpSwitchRunningCfgChgEventMethod=hpSwitchRunningCfgChgEventMethod, hpSwitchBasicConfigCompliances=hpSwitchBasicConfigCompliances, hpSwitchBasicConfigGroup2=hpSwitchBasicConfigGroup2, hpSwitchRunningCfgChgEventTableIndex=hpSwitchRunningCfgChgEventTableIndex, hpSwitchModuleInfoModId=hpSwitchModuleInfoModId, hpSwitchFPModules=hpSwitchFPModules, hpSwitchCdpPreStdVoiceEntry=hpSwitchCdpPreStdVoiceEntry, hpSwitchFPModuleGroup=hpSwitchFPModuleGroup, hpSwitchBasicConfigGroup3=hpSwitchBasicConfigGroup3, hpicfBridgeFilterConfigEntry=hpicfBridgeFilterConfigEntry, hpSwitchChassisLocateWhen=hpSwitchChassisLocateWhen, hpSwitchBasicConfigObjects=hpSwitchBasicConfigObjects, hpSwitchBasicConfigGroup4=hpSwitchBasicConfigGroup4, hpSwitchRunningCfgChgEventSourceIPAddr=hpSwitchRunningCfgChgEventSourceIPAddr, hpicfPortCopyName=hpicfPortCopyName, hpSwitchBasicConfigCompliance4=hpSwitchBasicConfigCompliance4, hpSwitchRunningCfgChgEventDateAndTime=hpSwitchRunningCfgChgEventDateAndTime, hpicfPortCopyNameEntry=hpicfPortCopyNameEntry, hpSwitchAclGroup=hpSwitchAclGroup, hpSwitchWebSupportUrl=hpSwitchWebSupportUrl, hpSwitchCdpPreStdVoiceStatus=hpSwitchCdpPreStdVoiceStatus, hpSwitchIgnoreUntagMacConfigGroup=hpSwitchIgnoreUntagMacConfigGroup, hpSwitchBasicNotificationGroup=hpSwitchBasicNotificationGroup, hpSwitchRunningConfigChange=hpSwitchRunningConfigChange, hpSwitchBasicConfigCompliance7=hpSwitchBasicConfigCompliance7, hpSwitchModuleConfigModType=hpSwitchModuleConfigModType, hpSwitchNotificationObjects=hpSwitchNotificationObjects, hpSwitchModuleInfoEntry=hpSwitchModuleInfoEntry, hpSwitchModuleConfigModRemove=hpSwitchModuleConfigModRemove, hpSwitchBasicConfigCompliance10=hpSwitchBasicConfigCompliance10, hpSwitchStartupConfigThrottled=hpSwitchStartupConfigThrottled, hpSwitchIgmpProxyDomainConfigTable=hpSwitchIgmpProxyDomainConfigTable, hpSwitchIgmpProxyMcastUpperIp=hpSwitchIgmpProxyMcastUpperIp, hpSwitchFPModuleConfigEntry=hpSwitchFPModuleConfigEntry, hpSwitchBasicConfigCompliance6=hpSwitchBasicConfigCompliance6, hpSwitchBasicConfigCompliance11=hpSwitchBasicConfigCompliance11, hpSwitchChassisLocateGroup=hpSwitchChassisLocateGroup, hpSwitchSecureModeLevel=hpSwitchSecureModeLevel, hpSwitchCdpPreStdVoiceIfIndex=hpSwitchCdpPreStdVoiceIfIndex, hpSwitchACLConfig=hpSwitchACLConfig, hpSwitchStartupConfigSourceIPAddrType=hpSwitchStartupConfigSourceIPAddrType, hpSwitchAclLogtimeoutGroup=hpSwitchAclLogtimeoutGroup, hpicfBridgeFilterConfigGroup=hpicfBridgeFilterConfigGroup, hpSwitchChassisLocateDuration=hpSwitchChassisLocateDuration, hpSwitchRunningCfgChgEventUsername=hpSwitchRunningCfgChgEventUsername, hpSwitchBasicConfigCompliance5=hpSwitchBasicConfigCompliance5, hpSwitchRunningCfgChgEntriesBumped=hpSwitchRunningCfgChgEntriesBumped, hpSwitchAclLogtimeoutConfig=hpSwitchAclLogtimeoutConfig, PYSNMP_MODULE_ID=hpSwitchBasicConfigMIB, hpSwitchCdpRunMode=hpSwitchCdpRunMode, hpSwitchBasicConfigCompliance2=hpSwitchBasicConfigCompliance2, hpSwitchCdpPreStdVoiceGroup=hpSwitchCdpPreStdVoiceGroup, hpSwitchIgmpProxyDomainConfigGroup=hpSwitchIgmpProxyDomainConfigGroup, hpSwitchIgmpProxyDomainIp=hpSwitchIgmpProxyDomainIp, hpSwitchStartupConfigSeqNum=hpSwitchStartupConfigSeqNum, hpSwitchAclGroupingEnableGroup=hpSwitchAclGroupingEnableGroup, hpSwitchModuleConfigModName=hpSwitchModuleConfigModName, hpSwitchModules=hpSwitchModules, hpSwitchBasicConfigCompliance=hpSwitchBasicConfigCompliance, hpSwitchIgmpProxyMcastLowerIp=hpSwitchIgmpProxyMcastLowerIp, hpSwitchRESTInterfaceStatus=hpSwitchRESTInterfaceStatus, hpSwitchBasicConfigMIB=hpSwitchBasicConfigMIB, hpSwitchStartupConfigChangeGroup=hpSwitchStartupConfigChangeGroup, hpSwitchRunningCfgChgGroup=hpSwitchRunningCfgChgGroup, hpSwitchModuleConfigTable=hpSwitchModuleConfigTable, hpSwitchAclIpv6DenyNonClassifiableL4Header=hpSwitchAclIpv6DenyNonClassifiableL4Header, hpSwitchStartupConfigSourceIPAddr=hpSwitchStartupConfigSourceIPAddr, hpSwitchControlPlaneProtectionAdminStatus=hpSwitchControlPlaneProtectionAdminStatus, hpSwitchChassisLocateState=hpSwitchChassisLocateState, hpSwitchRunningCfgChgNotifyEnable=hpSwitchRunningCfgChgNotifyEnable, hpSwitchCdpObjects=hpSwitchCdpObjects, hpSwitchAliasEntry=hpSwitchAliasEntry, hpSwitchCdpConfigGroup=hpSwitchCdpConfigGroup, hpSwitchRunningCfgChgEventEntry=hpSwitchRunningCfgChgEventEntry, hpSwitchRunningCfgChgEventSourceIPAddrType=hpSwitchRunningCfgChgEventSourceIPAddrType, hpSwitchRunningCfgChgTransmitInterval=hpSwitchRunningCfgChgTransmitInterval, hpSwitchSaveConfig=hpSwitchSaveConfig, hpSwitchStartupConfigSourceUsername=hpSwitchStartupConfigSourceUsername, hpSwitchDefaultLogon=hpSwitchDefaultLogon, hpSwitchIgmpProxyDomainId=hpSwitchIgmpProxyDomainId, hpSwitchBasicConfigGroups=hpSwitchBasicConfigGroups, hpSwitchRunningCfgChgEventId=hpSwitchRunningCfgChgEventId, hpSwitchAclIpv4DenyFragmentedTcpHeader=hpSwitchAclIpv4DenyFragmentedTcpHeader, hpicfBridgeFilterEntryStatus=hpicfBridgeFilterEntryStatus, hpicfBridgeFilterDropPortMask=hpicfBridgeFilterDropPortMask, hpSwitchIgmpProxyDomainStatus=hpSwitchIgmpProxyDomainStatus, hpSwitchRESTInterfaceGroup=hpSwitchRESTInterfaceGroup, hpSwitchFPModuleConfigType=hpSwitchFPModuleConfigType, hpSwitchStartupConfigChange=hpSwitchStartupConfigChange, hpSwitchBasicNotificationGroups=hpSwitchBasicNotificationGroups, hpSwitchCdpPreStdVoiceTable=hpSwitchCdpPreStdVoiceTable, hpSwitchRunningCfgChgLatestDateAndTime=hpSwitchRunningCfgChgLatestDateAndTime, hpSwitchAclGroupingEnable=hpSwitchAclGroupingEnable, hpSwitchBasicConfigCompliance3=hpSwitchBasicConfigCompliance3, hpSwitchImplicitConfigSave=hpSwitchImplicitConfigSave, hpSwitchModuleGroup=hpSwitchModuleGroup, hpSwitchBasicConfigConformance=hpSwitchBasicConfigConformance, hpSwitchRESTSessionIdleTimeout=hpSwitchRESTSessionIdleTimeout, hpSwitchChassisLocateEntry=hpSwitchChassisLocateEntry, hpSwitchModuleInfoTable=hpSwitchModuleInfoTable, hpSwitchStartupConfigNotifyEnable=hpSwitchStartupConfigNotifyEnable, hpSwitchBasicConfigCompliance8=hpSwitchBasicConfigCompliance8, hpSwitchIgmpProxyDomainName=hpSwitchIgmpProxyDomainName, hpicfPortCopyNameTable=hpicfPortCopyNameTable, hpSwitchModuleConfigEntry=hpSwitchModuleConfigEntry, hpSwitchAliasName=hpSwitchAliasName, hpSwitchAliasTable=hpSwitchAliasTable, hpSwitchIgmpProxyDomainConfigEntry=hpSwitchIgmpProxyDomainConfigEntry, hpSwitchModuleInfoModType=hpSwitchModuleInfoModType, hpSwitchAliasGroup=hpSwitchAliasGroup, hpSwitchFPModuleConfigName=hpSwitchFPModuleConfigName, hpSwitchAliasConfigRowStatus=hpSwitchAliasConfigRowStatus, hpSwitchBasicConfigCompliance12=hpSwitchBasicConfigCompliance12, hpSwitchFPModuleConfigTable=hpSwitchFPModuleConfigTable, hpicfBridgeFilterConfigTable=hpicfBridgeFilterConfigTable, hpicfPortCopyNameGroup=hpicfPortCopyNameGroup, hpSwitchIgnoreUntagMacPortList=hpSwitchIgnoreUntagMacPortList, hpSwitchRunningCfgChgCount=hpSwitchRunningCfgChgCount, hpSwitchRunningCfgChgEventTable=hpSwitchRunningCfgChgEventTable, hpSwitchModuleConfigGroup=hpSwitchModuleConfigGroup, hpSwitchBasicConfigGroup=hpSwitchBasicConfigGroup, hpSwitchStartupConfigSource=hpSwitchStartupConfigSource)
