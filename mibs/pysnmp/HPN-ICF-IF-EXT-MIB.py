#
# PySNMP MIB module HPN-ICF-IF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-IF-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32, Bits, IpAddress, Gauge32, ModuleIdentity, ObjectIdentity, TimeTicks, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32", "Bits", "IpAddress", "Gauge32", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Integer32")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
hpnicfIfExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40))
hpnicfIfExt.setRevisions(('2009-05-06 19:36', '2004-11-13 19:36',))
if mibBuilder.loadTexts: hpnicfIfExt.setLastUpdated('200905061936Z')
if mibBuilder.loadTexts: hpnicfIfExt.setOrganization('')
hpnicfIfExtScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 1))
hpnicfIfStatGlobalFlowInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfStatGlobalFlowInterval.setStatus('current')
hpnicfIfExtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2))
hpnicfIfStat = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1))
hpnicfIfStatScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 1))
hpnicfIfStatTable = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2))
hpnicfIfFlowStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfIfFlowStatTable.setStatus('current')
hpnicfIfFlowStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIfFlowStatEntry.setStatus('current')
hpnicfIfStatFlowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfStatFlowInterval.setStatus('current')
hpnicfIfStatFlowInBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowInBits.setStatus('current')
hpnicfIfStatFlowOutBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowOutBits.setStatus('current')
hpnicfIfStatFlowInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowInPkts.setStatus('current')
hpnicfIfStatFlowOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowOutPkts.setStatus('current')
hpnicfIfStatFlowInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowInBytes.setStatus('current')
hpnicfIfStatFlowOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowOutBytes.setStatus('current')
hpnicfIfSpeedStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfIfSpeedStatTable.setStatus('current')
hpnicfIfSpeedStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIfSpeedStatEntry.setStatus('current')
hpnicfIfSpeedStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2, 1, 1), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfSpeedStatInterval.setStatus('current')
hpnicfIfSpeedStatInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfSpeedStatInPkts.setStatus('current')
hpnicfIfSpeedStatOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfSpeedStatOutPkts.setStatus('current')
hpnicfIfSpeedStatInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfSpeedStatInBytes.setStatus('current')
hpnicfIfSpeedStatOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfSpeedStatOutBytes.setStatus('current')
hpnicfIfHCFlowStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3), )
if mibBuilder.loadTexts: hpnicfIfHCFlowStatTable.setStatus('current')
hpnicfIfHCFlowStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIfHCFlowStatEntry.setStatus('current')
hpnicfIfStatFlowHCInBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowHCInBits.setStatus('current')
hpnicfIfStatFlowHCOutBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowHCOutBits.setStatus('current')
hpnicfIfStatFlowHCInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowHCInPkts.setStatus('current')
hpnicfIfStatFlowHCOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowHCOutPkts.setStatus('current')
hpnicfIfStatFlowHCInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowHCInBytes.setStatus('current')
hpnicfIfStatFlowHCOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 1, 2, 3, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatFlowHCOutBytes.setStatus('current')
hpnicfIfControl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2))
hpnicfRTParentIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 1), )
if mibBuilder.loadTexts: hpnicfRTParentIfTable.setStatus('current')
hpnicfRTParentIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-IF-EXT-MIB", "hpnicfRTParentIfIndex"))
if mibBuilder.loadTexts: hpnicfRTParentIfEntry.setStatus('current')
hpnicfRTParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfRTParentIfIndex.setStatus('current')
hpnicfRTMinSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTMinSubIfOrdinal.setStatus('current')
hpnicfRTMaxSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTMaxSubIfOrdinal.setStatus('current')
hpnicfRTSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2), )
if mibBuilder.loadTexts: hpnicfRTSubIfTable.setStatus('current')
hpnicfRTSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-IF-EXT-MIB", "hpnicfRTSubIfParentIfIndex"), (0, "HPN-ICF-IF-EXT-MIB", "hpnicfRTSubIfOrdinal"))
if mibBuilder.loadTexts: hpnicfRTSubIfEntry.setStatus('current')
hpnicfRTSubIfParentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfRTSubIfParentIfIndex.setStatus('current')
hpnicfRTSubIfOrdinal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hpnicfRTSubIfOrdinal.setStatus('current')
hpnicfRTSubIfSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTSubIfSubIfIndex.setStatus('current')
hpnicfRTSubIfSubIfDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfRTSubIfSubIfDesc.setStatus('current')
hpnicfRTSubIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfRTSubIfRowStatus.setStatus('current')
hpnicfIfLinkModeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 3), )
if mibBuilder.loadTexts: hpnicfIfLinkModeTable.setStatus('current')
hpnicfIfLinkModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-IF-EXT-MIB", "hpnicfIfLinkModeIndex"))
if mibBuilder.loadTexts: hpnicfIfLinkModeEntry.setStatus('current')
hpnicfIfLinkModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfIfLinkModeIndex.setStatus('current')
hpnicfIfLinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridgeMode", 1), ("routeMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfLinkMode.setStatus('current')
hpnicfIfLinkModeSwitchSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 2, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfLinkModeSwitchSupport.setStatus('current')
hpnicfIfInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3))
hpnicfIfPhysicalNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfPhysicalNumber.setStatus('current')
hpnicfIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2), )
if mibBuilder.loadTexts: hpnicfIfTable.setStatus('current')
hpnicfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIfEntry.setStatus('current')
hpnicfIfUpDownTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfUpDownTimes.setStatus('current')
hpnicfIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfMtu.setStatus('current')
hpnicfIfBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfBandwidthRate.setStatus('current')
hpnicfIfDiscardPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfDiscardPktRate.setStatus('current')
hpnicfIfStatusKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfStatusKeepTime.setStatus('current')
hpnicfIfInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfInNUcastPkts.setStatus('current')
hpnicfIfOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfOutNUcastPkts.setStatus('current')
hpnicfIfIsPoe = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfIsPoe.setStatus('current')
hpnicfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("admindown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfOperStatus.setStatus('current')
hpnicfIfDownTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 2, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIfDownTimes.setStatus('current')
hpnicfIfExtTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3))
hpnicfIfExtTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 0))
hpnicfIfBandwidthUsageHigh = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 0, 1)).setObjects(("IF-MIB", "ifDescr"), ("HPN-ICF-IF-EXT-MIB", "hpnicfIfBandwidthRate"), ("HPN-ICF-IF-EXT-MIB", "hpnicfIfBandwidthUpperLimit"))
if mibBuilder.loadTexts: hpnicfIfBandwidthUsageHigh.setStatus('current')
hpnicfIfDiscardPktRateHigh = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 0, 2)).setObjects(("IF-MIB", "ifDescr"), ("HPN-ICF-IF-EXT-MIB", "hpnicfIfDiscardPktRate"), ("HPN-ICF-IF-EXT-MIB", "hpnicfIfDiscardPktRateUpperLimit"))
if mibBuilder.loadTexts: hpnicfIfDiscardPktRateHigh.setStatus('current')
hpnicfIfExtTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 1))
hpnicfIfExtTrapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 1, 1), )
if mibBuilder.loadTexts: hpnicfIfExtTrapCfgTable.setStatus('current')
hpnicfIfExtTrapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIfExtTrapCfgEntry.setStatus('current')
hpnicfIfBandwidthUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfBandwidthUpperLimit.setStatus('current')
hpnicfIfDiscardPktRateUpperLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 40, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIfDiscardPktRateUpperLimit.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-IF-EXT-MIB", hpnicfIfUpDownTimes=hpnicfIfUpDownTimes, hpnicfIfInNUcastPkts=hpnicfIfInNUcastPkts, hpnicfRTSubIfSubIfDesc=hpnicfRTSubIfSubIfDesc, hpnicfIfExt=hpnicfIfExt, hpnicfIfSpeedStatOutBytes=hpnicfIfSpeedStatOutBytes, hpnicfIfDiscardPktRate=hpnicfIfDiscardPktRate, hpnicfIfSpeedStatTable=hpnicfIfSpeedStatTable, hpnicfRTParentIfTable=hpnicfRTParentIfTable, PYSNMP_MODULE_ID=hpnicfIfExt, hpnicfIfInterfaces=hpnicfIfInterfaces, hpnicfIfDiscardPktRateHigh=hpnicfIfDiscardPktRateHigh, hpnicfIfEntry=hpnicfIfEntry, hpnicfIfStatGlobalFlowInterval=hpnicfIfStatGlobalFlowInterval, hpnicfIfExtGroup=hpnicfIfExtGroup, hpnicfIfSpeedStatInterval=hpnicfIfSpeedStatInterval, hpnicfIfStatScalarGroup=hpnicfIfStatScalarGroup, hpnicfIfExtTrapCfgTable=hpnicfIfExtTrapCfgTable, hpnicfIfStatFlowOutBytes=hpnicfIfStatFlowOutBytes, hpnicfIfExtTrapPrex=hpnicfIfExtTrapPrex, hpnicfIfStatFlowHCOutBits=hpnicfIfStatFlowHCOutBits, hpnicfIfControl=hpnicfIfControl, hpnicfIfExtScalarGroup=hpnicfIfExtScalarGroup, hpnicfIfLinkModeIndex=hpnicfIfLinkModeIndex, hpnicfRTSubIfSubIfIndex=hpnicfRTSubIfSubIfIndex, hpnicfIfStatFlowInBytes=hpnicfIfStatFlowInBytes, hpnicfIfDownTimes=hpnicfIfDownTimes, hpnicfIfSpeedStatEntry=hpnicfIfSpeedStatEntry, hpnicfIfFlowStatTable=hpnicfIfFlowStatTable, hpnicfIfIsPoe=hpnicfIfIsPoe, hpnicfIfLinkModeEntry=hpnicfIfLinkModeEntry, hpnicfIfStatFlowInPkts=hpnicfIfStatFlowInPkts, hpnicfIfExtTrap=hpnicfIfExtTrap, hpnicfIfStatusKeepTime=hpnicfIfStatusKeepTime, hpnicfIfLinkMode=hpnicfIfLinkMode, hpnicfIfExtTrapCfgEntry=hpnicfIfExtTrapCfgEntry, hpnicfIfStatFlowHCInBytes=hpnicfIfStatFlowHCInBytes, hpnicfIfSpeedStatInPkts=hpnicfIfSpeedStatInPkts, hpnicfIfSpeedStatOutPkts=hpnicfIfSpeedStatOutPkts, hpnicfRTParentIfIndex=hpnicfRTParentIfIndex, hpnicfIfOutNUcastPkts=hpnicfIfOutNUcastPkts, hpnicfIfStat=hpnicfIfStat, hpnicfIfStatTable=hpnicfIfStatTable, hpnicfRTMaxSubIfOrdinal=hpnicfRTMaxSubIfOrdinal, hpnicfIfStatFlowHCOutBytes=hpnicfIfStatFlowHCOutBytes, hpnicfIfExtTrapObject=hpnicfIfExtTrapObject, hpnicfIfLinkModeSwitchSupport=hpnicfIfLinkModeSwitchSupport, hpnicfIfStatFlowHCOutPkts=hpnicfIfStatFlowHCOutPkts, hpnicfIfTable=hpnicfIfTable, hpnicfRTSubIfEntry=hpnicfRTSubIfEntry, hpnicfIfStatFlowInBits=hpnicfIfStatFlowInBits, hpnicfIfHCFlowStatTable=hpnicfIfHCFlowStatTable, hpnicfRTMinSubIfOrdinal=hpnicfRTMinSubIfOrdinal, hpnicfIfSpeedStatInBytes=hpnicfIfSpeedStatInBytes, hpnicfIfStatFlowHCInBits=hpnicfIfStatFlowHCInBits, hpnicfRTSubIfParentIfIndex=hpnicfRTSubIfParentIfIndex, hpnicfRTSubIfRowStatus=hpnicfRTSubIfRowStatus, hpnicfIfStatFlowOutBits=hpnicfIfStatFlowOutBits, hpnicfIfMtu=hpnicfIfMtu, hpnicfIfBandwidthRate=hpnicfIfBandwidthRate, hpnicfIfPhysicalNumber=hpnicfIfPhysicalNumber, hpnicfRTParentIfEntry=hpnicfRTParentIfEntry, hpnicfIfStatFlowOutPkts=hpnicfIfStatFlowOutPkts, hpnicfIfStatFlowHCInPkts=hpnicfIfStatFlowHCInPkts, hpnicfIfStatFlowInterval=hpnicfIfStatFlowInterval, hpnicfIfHCFlowStatEntry=hpnicfIfHCFlowStatEntry, hpnicfRTSubIfOrdinal=hpnicfRTSubIfOrdinal, hpnicfIfLinkModeTable=hpnicfIfLinkModeTable, hpnicfIfFlowStatEntry=hpnicfIfFlowStatEntry, hpnicfIfBandwidthUsageHigh=hpnicfIfBandwidthUsageHigh, hpnicfIfOperStatus=hpnicfIfOperStatus, hpnicfRTSubIfTable=hpnicfRTSubIfTable, hpnicfIfBandwidthUpperLimit=hpnicfIfBandwidthUpperLimit, hpnicfIfDiscardPktRateUpperLimit=hpnicfIfDiscardPktRateUpperLimit)
