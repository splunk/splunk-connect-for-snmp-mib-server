#
# PySNMP MIB module MADGE-ABC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MADGE-ABC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:59:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, IpAddress, enterprises, Gauge32, Counter32, Bits, iso, Unsigned32, ObjectIdentity, NotificationType, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "IpAddress", "enterprises", "Gauge32", "Counter32", "Bits", "iso", "Unsigned32", "ObjectIdentity", "NotificationType", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class AbcState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("disable", 1), ("enable", 2), ("monitor", 3))

class AbcFlush(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("flush", 1))

madge = MibIdentifier((1, 3, 6, 1, 4, 1, 494))
madgeAbc = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15))
madgeAbcVersion = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcVersion.setStatus('mandatory')
madgeAbcTokenRing = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 2))
madgeAbcNetbios = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 3))
madgeAbcIp = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 4))
madgeAbcIpx = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 5))
madgeAbcTokenRingAreFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 2, 1))
madgeAbcTokenRingAreConversion = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 2, 2))
madgeAbcNetbiosName = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 3, 1))
madgeAbcNetbiosAddName = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 3, 2))
madgeAbcIpArp = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 4, 1))
madgeAbcIpxRipSapSuppress = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 5, 1))
madgeAbcIpxType20Filter = MibIdentifier((1, 3, 6, 1, 4, 1, 494, 15, 5, 2))
madgeAbcTokenRingAreFilterState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 1, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcTokenRingAreFilterState.setStatus('mandatory')
madgeAbcTokenRingAreFilterFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 1, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcTokenRingAreFilterFlushCache.setStatus('mandatory')
madgeAbcTokenRingAreFilterCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcTokenRingAreFilterCount.setStatus('mandatory')
madgeAbcTokenRingAreFilterFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcTokenRingAreFilterFiltered.setStatus('mandatory')
madgeAbcTokenRingAreFilterTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 1, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcTokenRingAreFilterTimeout.setStatus('mandatory')
madgeAbcTokenRingAreConversionState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 2, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcTokenRingAreConversionState.setStatus('mandatory')
madgeAbcTokenRingAreConversionFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 2, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcTokenRingAreConversionFlushCache.setStatus('mandatory')
madgeAbcTokenRingAreConversionCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcTokenRingAreConversionCount.setStatus('mandatory')
madgeAbcTokenRingAreConversionFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcTokenRingAreConversionFiltered.setStatus('mandatory')
madgeAbcTokenRingAreConversionMode = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("first", 1), ("all", 2), ("bcast-first", 3), ("bcast-all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcTokenRingAreConversionMode.setStatus('mandatory')
madgeAbcNetbiosNameState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 1, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosNameState.setStatus('mandatory')
madgeAbcNetbiosNameFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 1, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosNameFlushCache.setStatus('mandatory')
madgeAbcNetbiosNameCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcNetbiosNameCount.setStatus('mandatory')
madgeAbcNetbiosNameFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcNetbiosNameFiltered.setStatus('mandatory')
madgeAbcNetbiosNameTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 1, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosNameTimeout.setStatus('mandatory')
madgeAbcNetbiosNameForwardTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 1, 6), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosNameForwardTimeout.setStatus('mandatory')
madgeAbcNetbiosAddNameState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 2, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosAddNameState.setStatus('mandatory')
madgeAbcNetbiosAddNameFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 2, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosAddNameFlushCache.setStatus('mandatory')
madgeAbcNetbiosAddNameCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcNetbiosAddNameCount.setStatus('mandatory')
madgeAbcNetbiosAddNameFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcNetbiosAddNameFiltered.setStatus('mandatory')
madgeAbcNetbiosAddNameRetryPeriod = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 2, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosAddNameRetryPeriod.setStatus('mandatory')
madgeAbcNetbiosAddNameRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 3, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcNetbiosAddNameRetryCount.setStatus('mandatory')
madgeAbcIpArpState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 4, 1, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpArpState.setStatus('mandatory')
madgeAbcIpArpFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 4, 1, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpArpFlushCache.setStatus('mandatory')
madgeAbcIpArpCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcIpArpCount.setStatus('mandatory')
madgeAbcIpArpFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcIpArpFiltered.setStatus('mandatory')
madgeAbcIpArpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 4, 1, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpArpTimeout.setStatus('mandatory')
madgeAbcIpxRipSapSuppressState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 1, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpxRipSapSuppressState.setStatus('mandatory')
madgeAbcIpxRipSapSuppressFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 1, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpxRipSapSuppressFlushCache.setStatus('mandatory')
madgeAbcIpxRipSapSuppressCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcIpxRipSapSuppressCount.setStatus('mandatory')
madgeAbcIpxRipSapSuppressFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcIpxRipSapSuppressFiltered.setStatus('mandatory')
madgeAbcIpxRipSapSuppressTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 1, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpxRipSapSuppressTimeout.setStatus('mandatory')
madgeAbcIpxType20FilterState = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 2, 1), AbcState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpxType20FilterState.setStatus('mandatory')
madgeAbcIpxType20FilterFlushCache = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 2, 2), AbcFlush()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpxType20FilterFlushCache.setStatus('mandatory')
madgeAbcIpxType20FilterCount = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcIpxType20FilterCount.setStatus('mandatory')
madgeAbcIpxType20FilterFiltered = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: madgeAbcIpxType20FilterFiltered.setStatus('mandatory')
madgeAbcIpxType20FilterTimeout = MibScalar((1, 3, 6, 1, 4, 1, 494, 15, 5, 2, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: madgeAbcIpxType20FilterTimeout.setStatus('mandatory')
mibBuilder.exportSymbols("MADGE-ABC-MIB", madgeAbcNetbiosAddNameState=madgeAbcNetbiosAddNameState, madgeAbcIpArpTimeout=madgeAbcIpArpTimeout, madgeAbcIpArpFlushCache=madgeAbcIpArpFlushCache, madgeAbcNetbiosNameCount=madgeAbcNetbiosNameCount, madgeAbcTokenRingAreConversion=madgeAbcTokenRingAreConversion, madgeAbcIpxRipSapSuppressFiltered=madgeAbcIpxRipSapSuppressFiltered, madgeAbcIpxRipSapSuppressState=madgeAbcIpxRipSapSuppressState, madgeAbcIpxType20Filter=madgeAbcIpxType20Filter, madgeAbcIp=madgeAbcIp, madgeAbcIpxRipSapSuppressTimeout=madgeAbcIpxRipSapSuppressTimeout, madgeAbcIpxType20FilterTimeout=madgeAbcIpxType20FilterTimeout, madgeAbcNetbiosAddName=madgeAbcNetbiosAddName, madgeAbcIpxType20FilterFiltered=madgeAbcIpxType20FilterFiltered, madgeAbcNetbiosName=madgeAbcNetbiosName, madgeAbcTokenRingAreConversionState=madgeAbcTokenRingAreConversionState, madgeAbcTokenRingAreFilterState=madgeAbcTokenRingAreFilterState, AbcState=AbcState, madgeAbcIpxRipSapSuppress=madgeAbcIpxRipSapSuppress, madgeAbcNetbiosNameForwardTimeout=madgeAbcNetbiosNameForwardTimeout, madgeAbcNetbiosAddNameCount=madgeAbcNetbiosAddNameCount, madgeAbcTokenRingAreFilter=madgeAbcTokenRingAreFilter, madgeAbcNetbiosNameFlushCache=madgeAbcNetbiosNameFlushCache, madgeAbcTokenRingAreFilterFiltered=madgeAbcTokenRingAreFilterFiltered, madgeAbcTokenRingAreConversionFlushCache=madgeAbcTokenRingAreConversionFlushCache, madgeAbcNetbiosAddNameRetryCount=madgeAbcNetbiosAddNameRetryCount, madgeAbcIpxType20FilterCount=madgeAbcIpxType20FilterCount, madgeAbcIpxType20FilterState=madgeAbcIpxType20FilterState, madgeAbcIpx=madgeAbcIpx, madgeAbcTokenRingAreConversionMode=madgeAbcTokenRingAreConversionMode, madgeAbcIpArpCount=madgeAbcIpArpCount, madgeAbcVersion=madgeAbcVersion, AbcFlush=AbcFlush, madgeAbcIpArpFiltered=madgeAbcIpArpFiltered, madge=madge, madgeAbcTokenRingAreConversionFiltered=madgeAbcTokenRingAreConversionFiltered, madgeAbcIpArpState=madgeAbcIpArpState, madgeAbcTokenRingAreFilterTimeout=madgeAbcTokenRingAreFilterTimeout, madgeAbcNetbiosAddNameFlushCache=madgeAbcNetbiosAddNameFlushCache, madgeAbcTokenRingAreFilterFlushCache=madgeAbcTokenRingAreFilterFlushCache, madgeAbc=madgeAbc, madgeAbcTokenRing=madgeAbcTokenRing, madgeAbcIpxRipSapSuppressCount=madgeAbcIpxRipSapSuppressCount, madgeAbcNetbiosNameTimeout=madgeAbcNetbiosNameTimeout, madgeAbcNetbiosAddNameFiltered=madgeAbcNetbiosAddNameFiltered, madgeAbcNetbiosAddNameRetryPeriod=madgeAbcNetbiosAddNameRetryPeriod, madgeAbcNetbiosNameFiltered=madgeAbcNetbiosNameFiltered, madgeAbcIpxRipSapSuppressFlushCache=madgeAbcIpxRipSapSuppressFlushCache, madgeAbcNetbiosNameState=madgeAbcNetbiosNameState, madgeAbcTokenRingAreConversionCount=madgeAbcTokenRingAreConversionCount, madgeAbcNetbios=madgeAbcNetbios, madgeAbcTokenRingAreFilterCount=madgeAbcTokenRingAreFilterCount, madgeAbcIpxType20FilterFlushCache=madgeAbcIpxType20FilterFlushCache, madgeAbcIpArp=madgeAbcIpArp)
