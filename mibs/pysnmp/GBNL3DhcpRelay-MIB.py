#
# PySNMP MIB module GBNL3DhcpRelay-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GBNL3DhcpRelay-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
gbnL3, = mibBuilder.importSymbols("GREENTECH-MASTER-MIB", "gbnL3")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, IpAddress, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Bits, iso, ModuleIdentity, Counter32, Integer32, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Bits", "iso", "ModuleIdentity", "Counter32", "Integer32", "Gauge32", "Counter64")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
gbnL3DhcpRelay = ModuleIdentity((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5))
gbnL3DhcpRelay.setRevisions(('1901-05-03 00:00',))
if mibBuilder.loadTexts: gbnL3DhcpRelay.setLastUpdated('0105030000Z')
if mibBuilder.loadTexts: gbnL3DhcpRelay.setOrganization('Greentech')
dhcpRelayEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayEnableStatus.setStatus('current')
dhcpRelayDebugStatus = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayDebugStatus.setStatus('obsolete')
dhcpRelayGroupTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3), )
if mibBuilder.loadTexts: dhcpRelayGroupTable.setStatus('current')
dhcpRelayGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3, 1), ).setIndexNames((0, "GBNL3DhcpRelay-MIB", "dhcpRelaySvrGroupNo"))
if mibBuilder.loadTexts: dhcpRelayGroupEntry.setStatus('current')
dhcpRelaySvrGroupNo = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelaySvrGroupNo.setStatus('current')
dhcpRelayServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayServerIp.setStatus('current')
dhcpRelayIfaceTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4), )
if mibBuilder.loadTexts: dhcpRelayIfaceTable.setStatus('current')
dhcpRelayIfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4, 1), ).setIndexNames((0, "GBNL3DhcpRelay-MIB", "dhcpRelaySvrVlanIfaceNo"))
if mibBuilder.loadTexts: dhcpRelayIfaceEntry.setStatus('current')
dhcpRelaySvrVlanIfaceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelaySvrVlanIfaceNo.setStatus('current')
dhcpRelayVlanIfaceGroupNo = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayVlanIfaceGroupNo.setStatus('current')
dhcpRelayHideServerIp = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 5, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayHideServerIp.setStatus('current')
mibBuilder.exportSymbols("GBNL3DhcpRelay-MIB", dhcpRelayEnableStatus=dhcpRelayEnableStatus, dhcpRelayGroupTable=dhcpRelayGroupTable, dhcpRelayIfaceEntry=dhcpRelayIfaceEntry, gbnL3DhcpRelay=gbnL3DhcpRelay, dhcpRelaySvrVlanIfaceNo=dhcpRelaySvrVlanIfaceNo, dhcpRelayHideServerIp=dhcpRelayHideServerIp, dhcpRelayGroupEntry=dhcpRelayGroupEntry, dhcpRelayServerIp=dhcpRelayServerIp, dhcpRelayIfaceTable=dhcpRelayIfaceTable, dhcpRelayVlanIfaceGroupNo=dhcpRelayVlanIfaceGroupNo, dhcpRelaySvrGroupNo=dhcpRelaySvrGroupNo, PYSNMP_MODULE_ID=gbnL3DhcpRelay, dhcpRelayDebugStatus=dhcpRelayDebugStatus)
