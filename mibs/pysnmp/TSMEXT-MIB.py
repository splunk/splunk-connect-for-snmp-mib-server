#
# PySNMP MIB module TSMEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TSMEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:20:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, ModuleIdentity, Counter32, TimeTicks, iso, NotificationType, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "Counter32", "TimeTicks", "iso", "NotificationType", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "Bits", "Unsigned32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylanTsmArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanTsmArch")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

tsmExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 19, 1))
tsmAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1))
tsmOper = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2))
tsmAdminPortTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1), )
if mibBuilder.loadTexts: tsmAdminPortTable.setStatus('mandatory')
tsmAdminPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1), ).setIndexNames((0, "TSMEXT-MIB", "tsmAdminPortSlotNumber"), (0, "TSMEXT-MIB", "tsmAdminPortNumber"))
if mibBuilder.loadTexts: tsmAdminPortEntry.setStatus('mandatory')
tsmAdminPortSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmAdminPortSlotNumber.setStatus('mandatory')
tsmAdminPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmAdminPortNumber.setStatus('mandatory')
tsmAdminPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortState.setStatus('mandatory')
tsmAdminPortActiveMon = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortActiveMon.setStatus('mandatory')
tsmAdminPortAcBitSet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nonLocal", 1), ("repeat", 2), ("always", 3), ("never", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortAcBitSet.setStatus('mandatory')
tsmAdminPortConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("fixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortConfigType.setStatus('mandatory')
tsmAdminPortRingSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("fourMegabit", 2), ("sixteenMegabit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortRingSpeed.setStatus('mandatory')
tsmAdminPortPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("portMode", 2), ("adapterMode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortPortMode.setStatus('mandatory')
tsmAdminPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("halfDuplex", 2), ("fullDuplex", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortDuplex.setStatus('mandatory')
tsmAdminPortSwMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cutThrough", 1), ("storeAndForward", 2), ("adaptive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortSwMode.setStatus('mandatory')
tsmAdminPortReset = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminPortReset.setStatus('mandatory')
tsmAdminSwModeTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2), )
if mibBuilder.loadTexts: tsmAdminSwModeTable.setStatus('mandatory')
tsmAdminSwModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1), ).setIndexNames((0, "TSMEXT-MIB", "tsmAdminSwModeSlotNumber"))
if mibBuilder.loadTexts: tsmAdminSwModeEntry.setStatus('mandatory')
tsmAdminSwModeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmAdminSwModeSlotNumber.setStatus('mandatory')
tsmAdminSwModeHiErrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminSwModeHiErrThresh.setStatus('mandatory')
tsmAdminSwModeLoErrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminSwModeLoErrThresh.setStatus('mandatory')
tsmAdminSwModeTrendThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminSwModeTrendThresh.setStatus('mandatory')
tsmAdminSwModeSamplePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminSwModeSamplePeriod.setStatus('mandatory')
tsmAdminSwModeReset = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsmAdminSwModeReset.setStatus('mandatory')
tsmOperPortTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1), )
if mibBuilder.loadTexts: tsmOperPortTable.setStatus('mandatory')
tsmOperPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1), ).setIndexNames((0, "TSMEXT-MIB", "tsmOperPortSlotNumber"), (0, "TSMEXT-MIB", "tsmOperPortNumber"))
if mibBuilder.loadTexts: tsmOperPortEntry.setStatus('mandatory')
tsmOperPortSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortSlotNumber.setStatus('mandatory')
tsmOperPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortNumber.setStatus('mandatory')
tsmOperPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortState.setStatus('mandatory')
tsmOperPortActiveMon = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortActiveMon.setStatus('mandatory')
tsmOperPortAcBitSet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nonLocal", 1), ("repeat", 2), ("always", 3), ("never", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortAcBitSet.setStatus('mandatory')
tsmOperPortConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("fixed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortConfigType.setStatus('mandatory')
tsmOperPortRingSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("fourMegabit", 2), ("sixteenMegabit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortRingSpeed.setStatus('mandatory')
tsmOperPortPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("portMode", 2), ("adapterMode", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortPortMode.setStatus('mandatory')
tsmOperPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("halfDuplex", 2), ("fullDuplex", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortDuplex.setStatus('mandatory')
tsmOperPortSwMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cutThrough", 1), ("storeAndForward", 2), ("adaptive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortSwMode.setStatus('mandatory')
tsmOperPortAdaptSwMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cutThrough", 1), ("storeAndForward", 2), ("notAdaptive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortAdaptSwMode.setStatus('mandatory')
tsmOperPortAdaptErrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortAdaptErrRate.setStatus('mandatory')
tsmOperPortAdaptTrend = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortAdaptTrend.setStatus('mandatory')
tsmOperPortOpenState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("closed", 2), ("opening", 3), ("closing", 4), ("openFailure", 5), ("ringFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortOpenState.setStatus('mandatory')
tsmOperPortUpStream = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 1, 1, 15), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperPortUpStream.setStatus('mandatory')
tsmOperSwModeTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2), )
if mibBuilder.loadTexts: tsmOperSwModeTable.setStatus('mandatory')
tsmOperSwModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2, 1), ).setIndexNames((0, "TSMEXT-MIB", "tsmOperSwModeSlotNumber"))
if mibBuilder.loadTexts: tsmOperSwModeEntry.setStatus('mandatory')
tsmOperSwModeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperSwModeSlotNumber.setStatus('mandatory')
tsmOperSwModeHiErrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperSwModeHiErrThresh.setStatus('mandatory')
tsmOperSwModeLoErrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperSwModeLoErrThresh.setStatus('mandatory')
tsmOperSwModeTrendThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperSwModeTrendThresh.setStatus('mandatory')
tsmOperSwModeSamplePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 19, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsmOperSwModeSamplePeriod.setStatus('mandatory')
mibBuilder.exportSymbols("TSMEXT-MIB", MacAddress=MacAddress, tsmOperPortAcBitSet=tsmOperPortAcBitSet, tsmAdminPortAcBitSet=tsmAdminPortAcBitSet, tsmAdminPortConfigType=tsmAdminPortConfigType, tsmOper=tsmOper, tsmOperPortActiveMon=tsmOperPortActiveMon, tsmOperPortAdaptErrRate=tsmOperPortAdaptErrRate, tsmAdminSwModeSlotNumber=tsmAdminSwModeSlotNumber, tsmOperSwModeSlotNumber=tsmOperSwModeSlotNumber, tsmOperSwModeHiErrThresh=tsmOperSwModeHiErrThresh, tsmOperSwModeLoErrThresh=tsmOperSwModeLoErrThresh, tsmAdmin=tsmAdmin, tsmAdminPortTable=tsmAdminPortTable, tsmExtensions=tsmExtensions, tsmOperPortEntry=tsmOperPortEntry, tsmOperPortState=tsmOperPortState, tsmAdminPortState=tsmAdminPortState, tsmOperPortTable=tsmOperPortTable, tsmOperPortPortMode=tsmOperPortPortMode, tsmAdminPortDuplex=tsmAdminPortDuplex, tsmOperSwModeSamplePeriod=tsmOperSwModeSamplePeriod, tsmAdminSwModeHiErrThresh=tsmAdminSwModeHiErrThresh, tsmAdminPortNumber=tsmAdminPortNumber, tsmAdminSwModeReset=tsmAdminSwModeReset, tsmOperSwModeEntry=tsmOperSwModeEntry, tsmOperPortSlotNumber=tsmOperPortSlotNumber, tsmAdminPortActiveMon=tsmAdminPortActiveMon, tsmAdminSwModeTable=tsmAdminSwModeTable, tsmAdminPortRingSpeed=tsmAdminPortRingSpeed, tsmAdminSwModeLoErrThresh=tsmAdminSwModeLoErrThresh, tsmOperPortUpStream=tsmOperPortUpStream, tsmOperPortOpenState=tsmOperPortOpenState, tsmOperPortAdaptTrend=tsmOperPortAdaptTrend, tsmAdminPortReset=tsmAdminPortReset, tsmOperSwModeTrendThresh=tsmOperSwModeTrendThresh, tsmAdminPortSwMode=tsmAdminPortSwMode, tsmAdminSwModeTrendThresh=tsmAdminSwModeTrendThresh, tsmOperSwModeTable=tsmOperSwModeTable, tsmOperPortSwMode=tsmOperPortSwMode, tsmOperPortDuplex=tsmOperPortDuplex, tsmOperPortNumber=tsmOperPortNumber, tsmAdminSwModeEntry=tsmAdminSwModeEntry, tsmOperPortAdaptSwMode=tsmOperPortAdaptSwMode, tsmAdminPortPortMode=tsmAdminPortPortMode, tsmOperPortRingSpeed=tsmOperPortRingSpeed, tsmAdminPortSlotNumber=tsmAdminPortSlotNumber, tsmAdminPortEntry=tsmAdminPortEntry, tsmAdminSwModeSamplePeriod=tsmAdminSwModeSamplePeriod, tsmOperPortConfigType=tsmOperPortConfigType)
