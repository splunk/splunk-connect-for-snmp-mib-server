#
# PySNMP MIB module CISCO-LWAPP-IDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-IDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, ObjectIdentity, iso, Counter64, Bits, Gauge32, Counter32, TimeTicks, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "ObjectIdentity", "iso", "Counter64", "Bits", "Gauge32", "Counter32", "TimeTicks", "MibIdentifier", "ModuleIdentity")
TimeInterval, TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
ciscoLwappIdsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 519))
ciscoLwappIdsMIB.setRevisions(('2006-04-10 00:00',))
if mibBuilder.loadTexts: ciscoLwappIdsMIB.setLastUpdated('200604100000Z')
if mibBuilder.loadTexts: ciscoLwappIdsMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappIdsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 0))
ciscoLwappIdsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 1))
ciscoLwappIdsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 2))
ciscoLwappIdsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1))
ciscoLwappIdsStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 2))
cLIdsIpsSensorConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1), )
if mibBuilder.loadTexts: cLIdsIpsSensorConfigTable.setStatus('current')
cLIdsIpsSensorConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorAddressType"), (0, "CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorAddress"))
if mibBuilder.loadTexts: cLIdsIpsSensorConfigEntry.setStatus('current')
cLIdsIpsSensorAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLIdsIpsSensorAddressType.setStatus('current')
cLIdsIpsSensorAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLIdsIpsSensorAddress.setStatus('current')
cLIdsIpsSensorUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorUserName.setStatus('current')
cLIdsIpsSensorPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorPassword.setStatus('current')
cLIdsIpsSensorQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 5), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(1000, 360000)).clone(3000)).setUnits('Hundredths-seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorQueryInterval.setStatus('current')
cLIdsIpsSensorEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorEnabled.setStatus('current')
cLIdsIpsSensorFingerPrintHex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorFingerPrintHex.setStatus('current')
cLIdsIpsSensorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorPort.setStatus('current')
cLIdsIpsSensorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLIdsIpsSensorRowStatus.setStatus('current')
cLIdsClientExclTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 2, 1), )
if mibBuilder.loadTexts: cLIdsClientExclTable.setStatus('current')
cLIdsClientExclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorAddressType"), (0, "CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorAddress"), (0, "CISCO-LWAPP-IDS-MIB", "cLIdsClientAddressType"), (0, "CISCO-LWAPP-IDS-MIB", "cLIdsClientAddress"))
if mibBuilder.loadTexts: cLIdsClientExclEntry.setStatus('current')
cLIdsClientAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cLIdsClientAddressType.setStatus('current')
cLIdsClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 2, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: cLIdsClientAddress.setStatus('current')
cLIdsClientTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 519, 1, 2, 1, 1, 3), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLIdsClientTimeRemaining.setStatus('current')
ciscoLwappIdsShunClientUpdate = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 519, 0, 1)).setObjects(("CISCO-LWAPP-IDS-MIB", "cLIdsClientTimeRemaining"))
if mibBuilder.loadTexts: ciscoLwappIdsShunClientUpdate.setStatus('current')
ciscoLwappIdsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 2, 1))
ciscoLwappIdsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 519, 2, 2))
ciscoLwappIdsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 519, 2, 1, 1)).setObjects(("CISCO-LWAPP-IDS-MIB", "ciscoLwappIdsConfigGroup"), ("CISCO-LWAPP-IDS-MIB", "ciscoLwappIdsStatusGroup"), ("CISCO-LWAPP-IDS-MIB", "ciscoLwappIdsNotifsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappIdsMIBCompliance = ciscoLwappIdsMIBCompliance.setStatus('current')
ciscoLwappIdsConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 519, 2, 2, 1)).setObjects(("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorUserName"), ("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorPassword"), ("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorQueryInterval"), ("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorEnabled"), ("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorFingerPrintHex"), ("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorPort"), ("CISCO-LWAPP-IDS-MIB", "cLIdsIpsSensorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappIdsConfigGroup = ciscoLwappIdsConfigGroup.setStatus('current')
ciscoLwappIdsStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 519, 2, 2, 2)).setObjects(("CISCO-LWAPP-IDS-MIB", "cLIdsClientTimeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappIdsStatusGroup = ciscoLwappIdsStatusGroup.setStatus('current')
ciscoLwappIdsNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 519, 2, 2, 3)).setObjects(("CISCO-LWAPP-IDS-MIB", "ciscoLwappIdsShunClientUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappIdsNotifsGroup = ciscoLwappIdsNotifsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-IDS-MIB", cLIdsIpsSensorRowStatus=cLIdsIpsSensorRowStatus, cLIdsIpsSensorAddressType=cLIdsIpsSensorAddressType, cLIdsIpsSensorConfigTable=cLIdsIpsSensorConfigTable, cLIdsClientAddressType=cLIdsClientAddressType, ciscoLwappIdsMIBNotifs=ciscoLwappIdsMIBNotifs, ciscoLwappIdsStatus=ciscoLwappIdsStatus, cLIdsIpsSensorAddress=cLIdsIpsSensorAddress, cLIdsIpsSensorFingerPrintHex=cLIdsIpsSensorFingerPrintHex, ciscoLwappIdsMIBObjects=ciscoLwappIdsMIBObjects, cLIdsIpsSensorPort=cLIdsIpsSensorPort, cLIdsIpsSensorEnabled=cLIdsIpsSensorEnabled, ciscoLwappIdsMIBCompliances=ciscoLwappIdsMIBCompliances, PYSNMP_MODULE_ID=ciscoLwappIdsMIB, cLIdsIpsSensorConfigEntry=cLIdsIpsSensorConfigEntry, ciscoLwappIdsStatusGroup=ciscoLwappIdsStatusGroup, cLIdsClientExclEntry=cLIdsClientExclEntry, ciscoLwappIdsMIBConform=ciscoLwappIdsMIBConform, cLIdsClientTimeRemaining=cLIdsClientTimeRemaining, cLIdsIpsSensorPassword=cLIdsIpsSensorPassword, ciscoLwappIdsMIBGroups=ciscoLwappIdsMIBGroups, cLIdsIpsSensorUserName=cLIdsIpsSensorUserName, cLIdsIpsSensorQueryInterval=cLIdsIpsSensorQueryInterval, ciscoLwappIdsNotifsGroup=ciscoLwappIdsNotifsGroup, ciscoLwappIdsMIB=ciscoLwappIdsMIB, ciscoLwappIdsConfig=ciscoLwappIdsConfig, cLIdsClientExclTable=cLIdsClientExclTable, ciscoLwappIdsConfigGroup=ciscoLwappIdsConfigGroup, ciscoLwappIdsShunClientUpdate=ciscoLwappIdsShunClientUpdate, cLIdsClientAddress=cLIdsClientAddress, ciscoLwappIdsMIBCompliance=ciscoLwappIdsMIBCompliance)
