#
# PySNMP MIB module ZXR10-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-POE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:42:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, Integer32, NotificationType, Unsigned32, ModuleIdentity, Bits, Counter64, enterprises, Counter32, IpAddress, ObjectIdentity, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "Integer32", "NotificationType", "Unsigned32", "ModuleIdentity", "Bits", "Counter64", "enterprises", "Counter32", "IpAddress", "ObjectIdentity", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
zxr10POE = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 319))
class DisplayString(OctetString):
    pass

pseTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1), )
if mibBuilder.loadTexts: pseTable.setStatus('current')
pseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1), ).setIndexNames((0, "ZXR10-POE-MIB", "pseGroupIndex"))
if mibBuilder.loadTexts: pseEntry.setStatus('current')
pseGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pseGroupIndex.setStatus('current')
overTemperatureAutoRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: overTemperatureAutoRecovery.setStatus('current')
psePeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 3), DisplayString()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: psePeakPower.setStatus('current')
psePeakPowerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psePeakPowerTime.setStatus('current')
pseCurrentTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pseCurrentTemperature.setStatus('current')
pseFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pseFirmwareVersion.setStatus('current')
pseCriticalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 1, 1, 7), DisplayString()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: pseCriticalPower.setStatus('current')
portTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2), )
if mibBuilder.loadTexts: portTable.setStatus('current')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1), ).setIndexNames((0, "ZXR10-POE-MIB", "portEntryGroupIndex"), (0, "ZXR10-POE-MIB", "portEntryPortIndex"))
if mibBuilder.loadTexts: portEntry.setStatus('current')
portEntryGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: portEntryGroupIndex.setStatus('current')
portEntryPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: portEntryPortIndex.setStatus('current')
interfaceCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 3), DisplayString()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceCurrentPower.setStatus('current')
interfaceAvgPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 4), DisplayString()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceAvgPower.setStatus('current')
interfacePeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 5), DisplayString()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: interfacePeakPower.setStatus('current')
interfacepeakPowerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfacepeakPowerTime.setStatus('current')
enhancedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enhancedMode.setStatus('current')
pdMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 319, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("fifteen-point-four", 0), ("four", 1), ("seven", 2), ("eighteen", 3), ("twenty-seven", 4), ("thirty", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdMaxPower.setStatus('current')
mibBuilder.exportSymbols("ZXR10-POE-MIB", overTemperatureAutoRecovery=overTemperatureAutoRecovery, interfaceCurrentPower=interfaceCurrentPower, portEntryPortIndex=portEntryPortIndex, pseCriticalPower=pseCriticalPower, pseCurrentTemperature=pseCurrentTemperature, DisplayString=DisplayString, enhancedMode=enhancedMode, psePeakPowerTime=psePeakPowerTime, interfaceAvgPower=interfaceAvgPower, interfacepeakPowerTime=interfacepeakPowerTime, interfacePeakPower=interfacePeakPower, pseGroupIndex=pseGroupIndex, portTable=portTable, zte=zte, zxr10POE=zxr10POE, psePeakPower=psePeakPower, portEntry=portEntry, pseFirmwareVersion=pseFirmwareVersion, pdMaxPower=pdMaxPower, zxr10=zxr10, pseEntry=pseEntry, pseTable=pseTable, portEntryGroupIndex=portEntryGroupIndex)
