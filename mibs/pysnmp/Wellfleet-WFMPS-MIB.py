#
# PySNMP MIB module Wellfleet-WFMPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-WFMPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Counter32, MibIdentifier, Bits, Integer32, ModuleIdentity, ObjectIdentity, TimeTicks, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Counter32", "MibIdentifier", "Bits", "Integer32", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfmpsObjects, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfmpsObjects")
wfmpsEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1), )
if mibBuilder.loadTexts: wfmpsEntryTable.setStatus('mandatory')
wfmpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsSlot"))
if mibBuilder.loadTexts: wfmpsEntry.setStatus('mandatory')
wfmpsDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDelete.setStatus('mandatory')
wfmpsDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDisable.setStatus('mandatory')
wfmpsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsSlot.setStatus('mandatory')
wfmpsCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsCct.setStatus('mandatory')
wfmpsCacheIpOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsCacheIpOverRide.setStatus('mandatory')
wfmpsCacheReverifyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 120, 180, 240, 300, 600, 900, 1200))).clone(namedValues=NamedValues(("timeroff", 1), ("timer120", 120), ("timer180", 180), ("timer240", 240), ("timer300", 300), ("timer600", 600), ("timer900", 900), ("timer1200", 1200))).clone('timer120')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsCacheReverifyTimer.setStatus('mandatory')
wfmpsAddrGenerateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsAddrGenerateMode.setStatus('mandatory')
wfmpsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2), )
if mibBuilder.loadTexts: wfmpsConfigTable.setStatus('mandatory')
wfmpsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsCnfSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsCnfIndex"))
if mibBuilder.loadTexts: wfmpsConfigEntry.setStatus('mandatory')
wfmpsCnfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsCnfDelete.setStatus('mandatory')
wfmpsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsRowStatus.setStatus('mandatory')
wfmpsCnfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsCnfIndex.setStatus('mandatory')
wfmpsConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsConfigMode.setStatus('mandatory')
wfmpsCtrlAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsCtrlAtmAddr.setStatus('mandatory')
wfmpsKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsKeepAliveTime.setStatus('mandatory')
wfmpsKeepAliveLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000)).clone(35)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsKeepAliveLifeTime.setStatus('mandatory')
wfmpsInitialRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsInitialRetryTime.setStatus('mandatory')
wfmpsRetryTimeMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsRetryTimeMaximum.setStatus('mandatory')
wfmpsGiveupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsGiveupTime.setStatus('mandatory')
wfmpsDefaultHoldingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDefaultHoldingTime.setStatus('mandatory')
wfmpsCnfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsCnfSlot.setStatus('mandatory')
wfmpsInitialCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsInitialCacheSize.setStatus('mandatory')
wfmpsMaxCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMaxCacheSize.setStatus('mandatory')
wfmpsLECSAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsLECSAddress.setStatus('mandatory')
wfmpsDebugMsgLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugMsgLevel.setStatus('mandatory')
wfmpsConfigMpsName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 2, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsConfigMpsName.setStatus('mandatory')
wfmpsActualTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3), )
if mibBuilder.loadTexts: wfmpsActualTable.setStatus('mandatory')
wfmpsActualEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsActSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsActIndex"))
if mibBuilder.loadTexts: wfmpsActualEntry.setStatus('mandatory')
wfmpsActIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActIndex.setStatus('mandatory')
wfmpsActualState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("initialState", 2), ("unknown", 3), ("down", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualState.setStatus('mandatory')
wfmpsDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsDiscontinuityTime.setStatus('mandatory')
wfmpsActualConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("automatic", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualConfigMode.setStatus('mandatory')
wfmpsActualKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualKeepAlive.setStatus('mandatory')
wfmpsActualKeepAliveLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualKeepAliveLifeTime.setStatus('mandatory')
wfmpsActualInitialRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualInitialRetryTime.setStatus('mandatory')
wfmpsActualRetryTimeMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 300)).clone(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualRetryTimeMaximum.setStatus('mandatory')
wfmpsActualGiveupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualGiveupTime.setStatus('mandatory')
wfmpsActualDefaultHoldingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualDefaultHoldingTime.setStatus('mandatory')
wfmpsActSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActSlot.setStatus('mandatory')
wfmpsActualCtrlAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 3, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsActualCtrlAtmAddr.setStatus('mandatory')
wfmpsStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4), )
if mibBuilder.loadTexts: wfmpsStatisticsTable.setStatus('mandatory')
wfmpsStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsStatSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsStatIndex"))
if mibBuilder.loadTexts: wfmpsStatisticsEntry.setStatus('mandatory')
wfmpsStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatIndex.setStatus('mandatory')
wfmpsStatRxMpoaResolveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaResolveRequests.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyAcks.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyInsufECResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyInsufECResources.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyInsufSCResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyInsufSCResources.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyInsufEitherResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyInsufEitherResources.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyUnsupportedInetProt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyUnsupportedInetProt.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyUnsupportedMacEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyUnsupportedMacEncaps.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyUnspecifiedOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyUnspecifiedOther.setStatus('mandatory')
wfmpsStatTxMpoaResolveReplyOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaResolveReplyOther.setStatus('mandatory')
wfmpsStatGiveupTimeExpireds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatGiveupTimeExpireds.setStatus('mandatory')
wfmpsStatTxMpoaImpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaImpRequests.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyAcks.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyInsufECResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyInsufECResources.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyInsufSCResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyInsufSCResources.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyInsufEitherResources = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyInsufEitherResources.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyUnsupportedInetProt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyUnsupportedInetProt.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyUnsupportedMacEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyUnsupportedMacEncaps.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyUnspecifiedOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyUnspecifiedOther.setStatus('mandatory')
wfmpsStatRxMpoaImpReplyOther = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaImpReplyOther.setStatus('mandatory')
wfmpsStatRxMpoaEgressCachePurgeRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxMpoaEgressCachePurgeRequests.setStatus('mandatory')
wfmpsStatTxMpoaEgressCachePurgeReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaEgressCachePurgeReplies.setStatus('mandatory')
wfmpsStatTxMpoaTriggers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxMpoaTriggers.setStatus('mandatory')
wfmpsStatTxNhrpResolveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxNhrpResolveRequests.setStatus('mandatory')
wfmpsStatRxNhrpResolveReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxNhrpResolveReplies.setStatus('mandatory')
wfmpsStatRxNhrpResolveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatRxNhrpResolveRequests.setStatus('mandatory')
wfmpsStatTxNhrpResolveReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatTxNhrpResolveReplies.setStatus('mandatory')
wfmpsStatSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsStatSlot.setStatus('mandatory')
wfmpsProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5), )
if mibBuilder.loadTexts: wfmpsProtocolTable.setStatus('mandatory')
wfmpsProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsProtSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsProtIndex"), (0, "Wellfleet-WFMPS-MIB", "wfmpsInternetworkLayerProtocol"))
if mibBuilder.loadTexts: wfmpsProtocolEntry.setStatus('mandatory')
wfmpsProtocolDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsProtocolDelete.setStatus('mandatory')
wfmpsProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsProtocolRowStatus.setStatus('mandatory')
wfmpsProtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsProtIndex.setStatus('mandatory')
wfmpsInternetworkLayerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsInternetworkLayerProtocol.setStatus('mandatory')
wfmpsLECSValue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsLECSValue.setStatus('mandatory')
wfmpsProtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsProtSlot.setStatus('mandatory')
wfmpsMappingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6), )
if mibBuilder.loadTexts: wfmpsMappingTable.setStatus('mandatory')
wfmpsMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpslecIndex"))
if mibBuilder.loadTexts: wfmpsMappingEntry.setStatus('mandatory')
wfmpsMappingDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMappingDelete.setStatus('mandatory')
wfmpsMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMappingRowStatus.setStatus('mandatory')
wfmpslecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpslecIndex.setStatus('mandatory')
wfmpsMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMapIndex.setStatus('mandatory')
wfmpsMapSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 6, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMapSlot.setStatus('mandatory')
wfmpsIngressCacheTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7), )
if mibBuilder.loadTexts: wfmpsIngressCacheTable.setStatus('mandatory')
wfmpsIngressCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsIngressSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsIngressIndex"), (0, "Wellfleet-WFMPS-MIB", "wfmpsIngressMpcIndex"), (0, "Wellfleet-WFMPS-MIB", "wfmpsIngressCacheDestInternetworkAddrType"), (0, "Wellfleet-WFMPS-MIB", "wfmpsIngressCacheDestAddr"))
if mibBuilder.loadTexts: wfmpsIngressCacheEntry.setStatus('mandatory')
wfmpsIngressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressIndex.setStatus('mandatory')
wfmpsIngressMpcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressMpcIndex.setStatus('mandatory')
wfmpsIngressCacheDestInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheDestInternetworkAddrType.setStatus('mandatory')
wfmpsIngressCacheDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheDestAddr.setStatus('mandatory')
wfmpsIngressCachePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCachePrefixLen.setStatus('mandatory')
wfmpsIngressCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheState.setStatus('mandatory')
wfmpsIngressCacheSrcInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheSrcInternetworkAddrType.setStatus('mandatory')
wfmpsIngressCacheSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheSrcAddr.setStatus('mandatory')
wfmpsIngressCacheSourceMpcAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheSourceMpcAtmAddr.setStatus('mandatory')
wfmpsIngressCacheResolvedAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheResolvedAtmAddr.setStatus('mandatory')
wfmpsIngressCacheHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheHoldTime.setStatus('mandatory')
wfmpsIngressCacheMpoaRequestId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheMpoaRequestId.setStatus('mandatory')
wfmpsIngressCacheNhrpRequestId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheNhrpRequestId.setStatus('mandatory')
wfmpsIngressCacheServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressCacheServiceCategory.setStatus('mandatory')
wfmpsIngressSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 7, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsIngressSlot.setStatus('mandatory')
wfmpsEgressCacheTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8), )
if mibBuilder.loadTexts: wfmpsEgressCacheTable.setStatus('mandatory')
wfmpsEgressCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsEgressSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsEgressIndex"), (0, "Wellfleet-WFMPS-MIB", "wfmpsEgressMpcIndex"), (0, "Wellfleet-WFMPS-MIB", "wfmpsEgressCacheId"))
if mibBuilder.loadTexts: wfmpsEgressCacheEntry.setStatus('mandatory')
wfmpsEgressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressIndex.setStatus('mandatory')
wfmpsEgressMpcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressMpcIndex.setStatus('mandatory')
wfmpsEgressCacheId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheId.setStatus('mandatory')
wfmpsEgressCacheHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheHoldTime.setStatus('mandatory')
wfmpsEgressCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheState.setStatus('mandatory')
wfmpsEgressCacheDataLinkHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheDataLinkHeader.setStatus('mandatory')
wfmpsEgressCacheElanId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheElanId.setStatus('mandatory')
wfmpsEgressCacheSourceClientAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheSourceClientAtmAddr.setStatus('mandatory')
wfmpsEgressCacheNhrpRequestId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheNhrpRequestId.setStatus('mandatory')
wfmpsEgressCacheMpoaRequestId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheMpoaRequestId.setStatus('mandatory')
wfmpsEgressCacheServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheServiceCategory.setStatus('mandatory')
wfmpsEgressCacheNextHopInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheNextHopInternetworkAddrType.setStatus('mandatory')
wfmpsEgressCacheNextHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressCacheNextHopAddr.setStatus('mandatory')
wfmpsEgressSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 8, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsEgressSlot.setStatus('mandatory')
wfmpsMpcTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 9), )
if mibBuilder.loadTexts: wfmpsMpcTable.setStatus('mandatory')
wfmpsMpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 9, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsMpcSlot"), (0, "Wellfleet-WFMPS-MIB", "wfmpsMpsIndex"), (0, "Wellfleet-WFMPS-MIB", "wfmpsMpcIndex"))
if mibBuilder.loadTexts: wfmpsMpcEntry.setStatus('mandatory')
wfmpsMpsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsMpsIndex.setStatus('mandatory')
wfmpsMpcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 9, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMpcIndex.setStatus('mandatory')
wfmpsMpcCtrlAtmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 9, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMpcCtrlAtmAddr.setStatus('mandatory')
wfmpsMpcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsMpcSlot.setStatus('mandatory')
wfmpsDebugTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10), )
if mibBuilder.loadTexts: wfmpsDebugTable.setStatus('mandatory')
wfmpsDebugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1), ).setIndexNames((0, "Wellfleet-WFMPS-MIB", "wfmpsDebugSlot"))
if mibBuilder.loadTexts: wfmpsDebugEntry.setStatus('mandatory')
wfmpsDebugSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfmpsDebugSlot.setStatus('mandatory')
wfmpsDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugIndex.setStatus('mandatory')
wfmpsDebugDestGid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mpsProc", 1), ("mpsCtrl", 2), ("mpsVCC", 3), ("mpsMstr", 4))).clone('mpsProc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugDestGid.setStatus('mandatory')
wfmpsDebugMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugMsg.setStatus('mandatory')
wfmpsDebugSendEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugSendEnable.setStatus('mandatory')
wfmpsDebugSignalNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugSignalNum.setStatus('mandatory')
wfmpsDebugSignalSendEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 10, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfmpsDebugSignalSendEnable.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-WFMPS-MIB", wfmpsDebugTable=wfmpsDebugTable, wfmpsCct=wfmpsCct, wfmpsCacheReverifyTimer=wfmpsCacheReverifyTimer, wfmpsStatRxMpoaImpReplyInsufSCResources=wfmpsStatRxMpoaImpReplyInsufSCResources, wfmpsProtocolRowStatus=wfmpsProtocolRowStatus, wfmpsKeepAliveLifeTime=wfmpsKeepAliveLifeTime, wfmpsProtocolEntry=wfmpsProtocolEntry, wfmpsDebugSignalNum=wfmpsDebugSignalNum, wfmpsMappingTable=wfmpsMappingTable, wfmpsKeepAliveTime=wfmpsKeepAliveTime, wfmpsConfigMpsName=wfmpsConfigMpsName, wfmpsCnfIndex=wfmpsCnfIndex, wfmpsStatTxNhrpResolveReplies=wfmpsStatTxNhrpResolveReplies, wfmpsEgressMpcIndex=wfmpsEgressMpcIndex, wfmpsEgressCacheHoldTime=wfmpsEgressCacheHoldTime, wfmpsIngressCacheState=wfmpsIngressCacheState, wfmpsDefaultHoldingTime=wfmpsDefaultHoldingTime, wfmpsStatRxMpoaImpReplyAcks=wfmpsStatRxMpoaImpReplyAcks, wfmpsStatIndex=wfmpsStatIndex, wfmpsEgressCacheTable=wfmpsEgressCacheTable, wfmpsStatTxMpoaTriggers=wfmpsStatTxMpoaTriggers, wfmpsEgressCacheState=wfmpsEgressCacheState, wfmpsCnfDelete=wfmpsCnfDelete, wfmpsDebugSendEnable=wfmpsDebugSendEnable, wfmpsConfigMode=wfmpsConfigMode, wfmpsActualDefaultHoldingTime=wfmpsActualDefaultHoldingTime, wfmpsEgressCacheNextHopAddr=wfmpsEgressCacheNextHopAddr, wfmpsDelete=wfmpsDelete, wfmpsDebugDestGid=wfmpsDebugDestGid, wfmpsStatTxMpoaResolveReplyUnsupportedMacEncaps=wfmpsStatTxMpoaResolveReplyUnsupportedMacEncaps, wfmpsActualInitialRetryTime=wfmpsActualInitialRetryTime, wfmpsEgressIndex=wfmpsEgressIndex, wfmpsDebugSignalSendEnable=wfmpsDebugSignalSendEnable, wfmpsMapSlot=wfmpsMapSlot, wfmpsStatTxMpoaImpRequests=wfmpsStatTxMpoaImpRequests, wfmpsStatTxMpoaResolveReplyAcks=wfmpsStatTxMpoaResolveReplyAcks, wfmpsConfigTable=wfmpsConfigTable, wfmpsActualKeepAlive=wfmpsActualKeepAlive, wfmpsStatRxNhrpResolveReplies=wfmpsStatRxNhrpResolveReplies, wfmpsStatSlot=wfmpsStatSlot, wfmpsLECSAddress=wfmpsLECSAddress, wfmpsGiveupTime=wfmpsGiveupTime, wfmpsActualTable=wfmpsActualTable, wfmpsDebugSlot=wfmpsDebugSlot, wfmpsStatTxMpoaResolveReplyInsufECResources=wfmpsStatTxMpoaResolveReplyInsufECResources, wfmpsIngressSlot=wfmpsIngressSlot, wfmpsStatTxMpoaResolveReplyUnspecifiedOther=wfmpsStatTxMpoaResolveReplyUnspecifiedOther, wfmpsMappingRowStatus=wfmpsMappingRowStatus, wfmpsProtocolDelete=wfmpsProtocolDelete, wfmpsMpcIndex=wfmpsMpcIndex, wfmpsMpcCtrlAtmAddr=wfmpsMpcCtrlAtmAddr, wfmpsDebugEntry=wfmpsDebugEntry, wfmpsMappingEntry=wfmpsMappingEntry, wfmpsDebugMsg=wfmpsDebugMsg, wfmpsActualConfigMode=wfmpsActualConfigMode, wfmpsInternetworkLayerProtocol=wfmpsInternetworkLayerProtocol, wfmpsActSlot=wfmpsActSlot, wfmpsIngressCacheMpoaRequestId=wfmpsIngressCacheMpoaRequestId, wfmpsEgressCacheSourceClientAtmAddr=wfmpsEgressCacheSourceClientAtmAddr, wfmpsStatTxMpoaResolveReplyOther=wfmpsStatTxMpoaResolveReplyOther, wfmpsIngressCacheNhrpRequestId=wfmpsIngressCacheNhrpRequestId, wfmpsStatTxNhrpResolveRequests=wfmpsStatTxNhrpResolveRequests, wfmpsRowStatus=wfmpsRowStatus, wfmpsStatGiveupTimeExpireds=wfmpsStatGiveupTimeExpireds, wfmpsEgressCacheNhrpRequestId=wfmpsEgressCacheNhrpRequestId, wfmpsStatRxMpoaEgressCachePurgeRequests=wfmpsStatRxMpoaEgressCachePurgeRequests, wfmpsMapIndex=wfmpsMapIndex, wfmpsStatTxMpoaResolveReplyInsufSCResources=wfmpsStatTxMpoaResolveReplyInsufSCResources, wfmpsStatRxMpoaImpReplyUnspecifiedOther=wfmpsStatRxMpoaImpReplyUnspecifiedOther, wfmpsStatRxNhrpResolveRequests=wfmpsStatRxNhrpResolveRequests, wfmpslecIndex=wfmpslecIndex, wfmpsIngressIndex=wfmpsIngressIndex, wfmpsInitialCacheSize=wfmpsInitialCacheSize, wfmpsEgressCacheEntry=wfmpsEgressCacheEntry, wfmpsCtrlAtmAddr=wfmpsCtrlAtmAddr, wfmpsMpcEntry=wfmpsMpcEntry, wfmpsStatTxMpoaResolveReplyInsufEitherResources=wfmpsStatTxMpoaResolveReplyInsufEitherResources, wfmpsEntryTable=wfmpsEntryTable, wfmpsStatTxMpoaResolveReplyUnsupportedInetProt=wfmpsStatTxMpoaResolveReplyUnsupportedInetProt, wfmpsStatRxMpoaImpReplyInsufEitherResources=wfmpsStatRxMpoaImpReplyInsufEitherResources, wfmpsIngressCacheHoldTime=wfmpsIngressCacheHoldTime, wfmpsStatTxMpoaEgressCachePurgeReplies=wfmpsStatTxMpoaEgressCachePurgeReplies, wfmpsDebugMsgLevel=wfmpsDebugMsgLevel, wfmpsStatRxMpoaImpReplyInsufECResources=wfmpsStatRxMpoaImpReplyInsufECResources, wfmpsIngressCacheServiceCategory=wfmpsIngressCacheServiceCategory, wfmpsDebugIndex=wfmpsDebugIndex, wfmpsIngressCacheResolvedAtmAddr=wfmpsIngressCacheResolvedAtmAddr, wfmpsActualEntry=wfmpsActualEntry, wfmpsAddrGenerateMode=wfmpsAddrGenerateMode, wfmpsMpcTable=wfmpsMpcTable, wfmpsIngressCacheSourceMpcAtmAddr=wfmpsIngressCacheSourceMpcAtmAddr, wfmpsIngressMpcIndex=wfmpsIngressMpcIndex, wfmpsActualRetryTimeMaximum=wfmpsActualRetryTimeMaximum, wfmpsEgressSlot=wfmpsEgressSlot, wfmpsMappingDelete=wfmpsMappingDelete, wfmpsEgressCacheNextHopInternetworkAddrType=wfmpsEgressCacheNextHopInternetworkAddrType, wfmpsActualGiveupTime=wfmpsActualGiveupTime, wfmpsEgressCacheId=wfmpsEgressCacheId, wfmpsActualState=wfmpsActualState, wfmpsStatRxMpoaResolveRequests=wfmpsStatRxMpoaResolveRequests, wfmpsStatRxMpoaImpReplyOther=wfmpsStatRxMpoaImpReplyOther, wfmpsProtIndex=wfmpsProtIndex, wfmpsConfigEntry=wfmpsConfigEntry, wfmpsStatisticsEntry=wfmpsStatisticsEntry, wfmpsActualKeepAliveLifeTime=wfmpsActualKeepAliveLifeTime, wfmpsEgressCacheServiceCategory=wfmpsEgressCacheServiceCategory, wfmpsMpcSlot=wfmpsMpcSlot, wfmpsStatisticsTable=wfmpsStatisticsTable, wfmpsCacheIpOverRide=wfmpsCacheIpOverRide, wfmpsProtSlot=wfmpsProtSlot, wfmpsEntry=wfmpsEntry, wfmpsEgressCacheElanId=wfmpsEgressCacheElanId, wfmpsDisable=wfmpsDisable, wfmpsMaxCacheSize=wfmpsMaxCacheSize, wfmpsIngressCachePrefixLen=wfmpsIngressCachePrefixLen, wfmpsLECSValue=wfmpsLECSValue, wfmpsDiscontinuityTime=wfmpsDiscontinuityTime, wfmpsIngressCacheDestAddr=wfmpsIngressCacheDestAddr, wfmpsActIndex=wfmpsActIndex, wfmpsIngressCacheTable=wfmpsIngressCacheTable, wfmpsIngressCacheSrcInternetworkAddrType=wfmpsIngressCacheSrcInternetworkAddrType, wfmpsRetryTimeMaximum=wfmpsRetryTimeMaximum, wfmpsProtocolTable=wfmpsProtocolTable, wfmpsStatRxMpoaImpReplyUnsupportedInetProt=wfmpsStatRxMpoaImpReplyUnsupportedInetProt, wfmpsEgressCacheMpoaRequestId=wfmpsEgressCacheMpoaRequestId, wfmpsMpsIndex=wfmpsMpsIndex, wfmpsIngressCacheSrcAddr=wfmpsIngressCacheSrcAddr, wfmpsCnfSlot=wfmpsCnfSlot, wfmpsSlot=wfmpsSlot, wfmpsIngressCacheEntry=wfmpsIngressCacheEntry, wfmpsInitialRetryTime=wfmpsInitialRetryTime, wfmpsEgressCacheDataLinkHeader=wfmpsEgressCacheDataLinkHeader, wfmpsActualCtrlAtmAddr=wfmpsActualCtrlAtmAddr, wfmpsIngressCacheDestInternetworkAddrType=wfmpsIngressCacheDestInternetworkAddrType, wfmpsStatRxMpoaImpReplyUnsupportedMacEncaps=wfmpsStatRxMpoaImpReplyUnsupportedMacEncaps)
