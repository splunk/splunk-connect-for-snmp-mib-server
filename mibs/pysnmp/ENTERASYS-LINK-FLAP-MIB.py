#
# PySNMP MIB module ENTERASYS-LINK-FLAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-LINK-FLAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:49:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
ifName, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, ModuleIdentity, Gauge32, Counter32, Counter64, IpAddress, NotificationType, MibIdentifier, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "ModuleIdentity", "Gauge32", "Counter32", "Counter64", "IpAddress", "NotificationType", "MibIdentifier", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
etsysLinkFlapMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52))
etsysLinkFlapMIB.setRevisions(('2009-10-16 12:53', '2004-08-20 14:47',))
if mibBuilder.loadTexts: etsysLinkFlapMIB.setLastUpdated('200910161253Z')
if mibBuilder.loadTexts: etsysLinkFlapMIB.setOrganization('Enterasys Networks, Inc')
class LinkFlapIntfAction(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("disableInterface", 0), ("generateSyslogEntry", 1), ("generateNotification", 2))

etsysLinkFlapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1))
etsysLinkFlapSystemBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 1))
etsysLinkFlapInterfaceBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2))
etsysLinkFlapNotificationBranch = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 0))
etsysLinkFlapSystemState = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapSystemState.setStatus('current')
etsysLinkFlapSystemSupportedActions = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 1, 2), LinkFlapIntfAction().clone(namedValues=NamedValues(("disableInterface", 0), ("generateSyslogEntry", 1), ("generateNotification", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLinkFlapSystemSupportedActions.setStatus('current')
etsysLinkFlapSystemLinkFlapMaximum = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLinkFlapSystemLinkFlapMaximum.setStatus('current')
etsysLinkFlapInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1), )
if mibBuilder.loadTexts: etsysLinkFlapInterfaceTable.setStatus('current')
etsysLinkFlapInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysLinkFlapInterfaceEntry.setStatus('current')
etsysLinkFlapIntfEnabledStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfEnabledStatus.setStatus('current')
etsysLinkFlapIntfAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 2), LinkFlapIntfAction().clone(namedValues=NamedValues(("generateSyslogEntry", 1), ("generateNotification", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfAction.setStatus('current')
etsysLinkFlapIntfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("operational", 1), ("disabled", 2))).clone('operational')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfOperStatus.setStatus('current')
etsysLinkFlapIntfClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfClearStats.setStatus('current')
etsysLinkFlapIntfCountThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 5), Unsigned32().clone(5)).setUnits('link state transitions').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfCountThreshold.setStatus('current')
etsysLinkFlapIntfTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), )).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfTimeInterval.setStatus('current')
etsysLinkFlapIntfDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), )).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysLinkFlapIntfDownTime.setStatus('current')
etsysLinkFlapIntfLinkdownCountCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 8), Gauge32()).setUnits('link state transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLinkFlapIntfLinkdownCountCurrent.setStatus('current')
etsysLinkFlapIntfLinkdownCountTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 9), Gauge32()).setUnits('link state transitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLinkFlapIntfLinkdownCountTotal.setStatus('current')
etsysLinkFlapIntfCurrentElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 10), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLinkFlapIntfCurrentElapsed.setStatus('current')
etsysLinkFlapIntfLinkFlapViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 2, 1, 1, 11), Gauge32()).setUnits('violations').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysLinkFlapIntfLinkFlapViolations.setStatus('current')
etsysLinkFlapViolation = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 1, 0, 1)).setObjects(("IF-MIB", "ifName"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfOperStatus"))
if mibBuilder.loadTexts: etsysLinkFlapViolation.setStatus('current')
etsysLinkFlapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2))
etsysLinkFlapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2, 1))
etsysLinkFlapCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2, 2))
etsysLinkFlapSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2, 1, 1)).setObjects(("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapSystemState"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapSystemSupportedActions"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapSystemLinkFlapMaximum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLinkFlapSystemGroup = etsysLinkFlapSystemGroup.setStatus('current')
etsysLinkFlapInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2, 1, 2)).setObjects(("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfEnabledStatus"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfAction"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfOperStatus"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfClearStats"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfCountThreshold"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfTimeInterval"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfDownTime"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfLinkdownCountCurrent"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfLinkdownCountTotal"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfCurrentElapsed"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapIntfLinkFlapViolations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLinkFlapInterfaceGroup = etsysLinkFlapInterfaceGroup.setStatus('current')
etsysLinkFlapNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2, 1, 3)).setObjects(("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapViolation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLinkFlapNotificationGroup = etsysLinkFlapNotificationGroup.setStatus('current')
etsysLinkFlapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 52, 2, 2, 1)).setObjects(("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapSystemGroup"), ("ENTERASYS-LINK-FLAP-MIB", "etsysLinkFlapInterfaceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysLinkFlapCompliance = etsysLinkFlapCompliance.setStatus('current')
mibBuilder.exportSymbols("ENTERASYS-LINK-FLAP-MIB", etsysLinkFlapInterfaceGroup=etsysLinkFlapInterfaceGroup, etsysLinkFlapMIB=etsysLinkFlapMIB, etsysLinkFlapInterfaceTable=etsysLinkFlapInterfaceTable, etsysLinkFlapIntfOperStatus=etsysLinkFlapIntfOperStatus, etsysLinkFlapIntfLinkdownCountCurrent=etsysLinkFlapIntfLinkdownCountCurrent, etsysLinkFlapInterfaceEntry=etsysLinkFlapInterfaceEntry, etsysLinkFlapIntfAction=etsysLinkFlapIntfAction, etsysLinkFlapConformance=etsysLinkFlapConformance, etsysLinkFlapIntfClearStats=etsysLinkFlapIntfClearStats, etsysLinkFlapCompliance=etsysLinkFlapCompliance, etsysLinkFlapIntfCountThreshold=etsysLinkFlapIntfCountThreshold, etsysLinkFlapIntfLinkFlapViolations=etsysLinkFlapIntfLinkFlapViolations, etsysLinkFlapNotificationBranch=etsysLinkFlapNotificationBranch, etsysLinkFlapViolation=etsysLinkFlapViolation, etsysLinkFlapNotificationGroup=etsysLinkFlapNotificationGroup, etsysLinkFlapGroups=etsysLinkFlapGroups, LinkFlapIntfAction=LinkFlapIntfAction, etsysLinkFlapCompliances=etsysLinkFlapCompliances, etsysLinkFlapSystemState=etsysLinkFlapSystemState, PYSNMP_MODULE_ID=etsysLinkFlapMIB, etsysLinkFlapIntfEnabledStatus=etsysLinkFlapIntfEnabledStatus, etsysLinkFlapSystemGroup=etsysLinkFlapSystemGroup, etsysLinkFlapSystemSupportedActions=etsysLinkFlapSystemSupportedActions, etsysLinkFlapIntfDownTime=etsysLinkFlapIntfDownTime, etsysLinkFlapIntfCurrentElapsed=etsysLinkFlapIntfCurrentElapsed, etsysLinkFlapSystemLinkFlapMaximum=etsysLinkFlapSystemLinkFlapMaximum, etsysLinkFlapInterfaceBranch=etsysLinkFlapInterfaceBranch, etsysLinkFlapSystemBranch=etsysLinkFlapSystemBranch, etsysLinkFlapIntfLinkdownCountTotal=etsysLinkFlapIntfLinkdownCountTotal, etsysLinkFlapIntfTimeInterval=etsysLinkFlapIntfTimeInterval, etsysLinkFlapObjects=etsysLinkFlapObjects)
