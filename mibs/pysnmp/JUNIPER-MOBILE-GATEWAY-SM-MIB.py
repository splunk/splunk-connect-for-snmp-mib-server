#
# PySNMP MIB module JUNIPER-MOBILE-GATEWAY-SM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MOBILE-GATEWAY-SM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
jnxMobileGatewayPgwGgsn, = mibBuilder.importSymbols("JUNIPER-MBG-SMI", "jnxMobileGatewayPgwGgsn")
EnabledStatus, = mibBuilder.importSymbols("JUNIPER-MIMSTP-MIB", "EnabledStatus")
jnxMbgGwName, jnxMbgGwIndex = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName", "jnxMbgGwIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, IpAddress, Integer32, ModuleIdentity, NotificationType, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, Unsigned32, ObjectIdentity, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "Integer32", "ModuleIdentity", "NotificationType", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Counter64", "Counter32")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
jnxMbgPgwSubscriberManagerMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1))
jnxMbgPgwSubscriberManagerMib.setRevisions(('2011-01-12 12:00', '2011-02-28 12:00', '2011-02-28 12:00', '2012-03-19 12:00', '2012-03-22 12:00', '2012-10-12 12:00',))
if mibBuilder.loadTexts: jnxMbgPgwSubscriberManagerMib.setLastUpdated('201102281200Z')
if mibBuilder.loadTexts: jnxMbgPgwSubscriberManagerMib.setOrganization('Juniper Networks, Inc.')
jnxMbgPgwSMNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0))
jnxMbgPgwSMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1))
jnxMbgPgwAPNStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1), )
if mibBuilder.loadTexts: jnxMbgPgwAPNStatsTable.setStatus('deprecated')
jnxMbgPgwAPNStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNName"))
if mibBuilder.loadTexts: jnxMbgPgwAPNStatsTableEntry.setStatus('deprecated')
jnxMbgPgwAPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxMbgPgwAPNName.setStatus('deprecated')
jnxMbgPgwSessnEstAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnEstAttempts.setStatus('deprecated')
jnxMbgPgwSuccSessnsEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccSessnsEst.setStatus('deprecated')
jnxMbgPgwSessnFailedServcUnaval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedServcUnaval.setStatus('deprecated')
jnxMbgPgwSessnFailedSysFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedSysFailure.setStatus('deprecated')
jnxMbgPgwSessnFailedNoResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedNoResource.setStatus('deprecated')
jnxMbgPgwSessnFailedNoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedNoAddr.setStatus('deprecated')
jnxMbgPgwSessnFailedServcDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedServcDenied.setStatus('deprecated')
jnxMbgPgwSessnFailedAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedAuthFailed.setStatus('deprecated')
jnxMbgPgwSessnFailedAccessDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnFailedAccessDenied.setStatus('deprecated')
jnxMbgPgwPeerInitSessnDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwPeerInitSessnDeact.setStatus('deprecated')
jnxMbgPgwSuccPeerInitSessnDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccPeerInitSessnDeact.setStatus('deprecated')
jnxMbgPgwGWInitSessnDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGWInitSessnDeact.setStatus('deprecated')
jnxMbgPgwSuccGWInitSessnDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccGWInitSessnDeact.setStatus('deprecated')
jnxMbgPgwSMOperStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4), )
if mibBuilder.loadTexts: jnxMbgPgwSMOperStatsTable.setStatus('current')
jnxMbgPgwSMOperStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgPgwSMOperStatsEntry.setStatus('current')
jnxMbgPgwSessnEstAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessnEstAttmpts.setStatus('current')
jnxMbgPgwSuccSessnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccSessnEst.setStatus('current')
jnxMbgPgwPeerInitDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwPeerInitDeactv.setStatus('current')
jnxMbgPgwPeerInitSuccDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwPeerInitSuccDeactv.setStatus('current')
jnxMbgPgwGwInitDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGwInitDeactv.setStatus('current')
jnxMbgPgwGwInitSuccDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGwInitSuccDeactv.setStatus('current')
jnxMbgPgwGtpStatsGnS5S8InpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGnS5S8InpPkt.setStatus('current')
jnxMbgPgwGtpStatsGnS5S8InpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGnS5S8InpByt.setStatus('current')
jnxMbgPgwGtpStatsGnS5S8OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGnS5S8OutPkt.setStatus('current')
jnxMbgPgwGtpStatsGnS5S8OutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGnS5S8OutByt.setStatus('current')
jnxMbgPgwGtpStatsGiInpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGiInpPkt.setStatus('current')
jnxMbgPgwGtpStatsGiInpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGiInpByt.setStatus('current')
jnxMbgPgwGtpStatsGiOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGiOutPkt.setStatus('current')
jnxMbgPgwGtpStatsGiOutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGiOutByt.setStatus('current')
jnxMbgPgwGtpStatsS58DscrdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsS58DscrdPkts.setStatus('current')
jnxMbgPgwGtpStatsGiDiscrdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpStatsGiDiscrdPkts.setStatus('current')
jnxMbgPgwSrcAddrViolationPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSrcAddrViolationPkts.setStatus('current')
jnxMbgPgwSrcAddrViolationByts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSrcAddrViolationByts.setStatus('current')
jnxMbgPgwPktsRcvdNonExstTeids = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwPktsRcvdNonExstTeids.setStatus('current')
jnxMbgPgwGtpErrLenPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGtpErrLenPkts.setStatus('current')
jnxMbgPgwNonExstUeAddrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwNonExstUeAddrPkts.setStatus('current')
jnxMbgPgwSessEstDynPolAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSessEstDynPolAttempt.setStatus('current')
jnxMbgPgwSuccSessEstDynPol = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccSessEstDynPol.setStatus('current')
jnxMbgPgwDedBrActAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwDedBrActAttempt.setStatus('deprecated')
jnxMbgPgwSuccDedBrAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccDedBrAct.setStatus('deprecated')
jnxMbgPgwMsInitDedBrDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwMsInitDedBrDeact.setStatus('current')
jnxMbgPgwGwInitDedBrDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGwInitDedBrDeact.setStatus('current')
jnxMbgPgwPcrfInitDedBrDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwPcrfInitDedBrDeact.setStatus('current')
jnxMbgPgwMsInitModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwMsInitModAttempt.setStatus('current')
jnxMbgPgwSuccMsInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccMsInitMod.setStatus('current')
jnxMbgPgwGwInitModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGwInitModAttempt.setStatus('current')
jnxMbgPgwSuccGwInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccGwInitMod.setStatus('current')
jnxMbgPgwMsInitDedBrActAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwMsInitDedBrActAttempt.setStatus('current')
jnxMbgPgwSuccMsInitDedBrAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccMsInitDedBrAct.setStatus('current')
jnxMbgPgwNwInitDedBrActAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwNwInitDedBrActAttempt.setStatus('current')
jnxMbgPgwSuccNwInitDedBrAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccNwInitDedBrAct.setStatus('current')
jnxMbgPgwMsInitDedBrModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwMsInitDedBrModAttempt.setStatus('current')
jnxMbgPgwSuccMsInitDedBrMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccMsInitDedBrMod.setStatus('current')
jnxMbgPgwNwInitDedBrModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwNwInitDedBrModAttempt.setStatus('current')
jnxMbgPgwSuccNwInitDedBrMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuccNwInitDedBrMod.setStatus('current')
jnxMbgPgwInterRatHoAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwInterRatHoAttempt.setStatus('current')
jnxMbgPgwInterRatHoSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwInterRatHoSucc.setStatus('current')
jnxMbgPgwIntraRatHoAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwIntraRatHoAttempt.setStatus('current')
jnxMbgPgwIntraRatHoSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwIntraRatHoSucc.setStatus('current')
jnxMbgPgwCdrsAllocd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCdrsAllocd.setStatus('current')
jnxMbgPgwPartialCdrsAllocd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwPartialCdrsAllocd.setStatus('current')
jnxMbgPgwCdrsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCdrsClosed.setStatus('current')
jnxMbgPgwCdrCntainrsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCdrCntainrsClosed.setStatus('current')
jnxMbgPgwGySessEstAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGySessEstAttempt.setStatus('current')
jnxMbgPgwGySuccSessEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGySuccSessEst.setStatus('current')
jnxMbgPgwGyReauthAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGyReauthAttempt.setStatus('current')
jnxMbgPgwGySuccReauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGySuccReauth.setStatus('current')
jnxMbgPgwGyAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGyAuthTimeout.setStatus('current')
jnxMbgPgwGyMsInitSessDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGyMsInitSessDeact.setStatus('current')
jnxMbgPgwGyOcsInitSessDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGyOcsInitSessDeact.setStatus('current')
jnxMbgPgwGyGwInitSessDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGyGwInitSessDeact.setStatus('current')
jnxMbgPgwGxMsInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxMsInitMod.setStatus('current')
jnxMbgPgwGxSuccMsInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxSuccMsInitMod.setStatus('current')
jnxMbgPgwGxPcrfInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxPcrfInitMod.setStatus('current')
jnxMbgPgwGxSuccPcrfInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxSuccPcrfInitMod.setStatus('current')
jnxMbgPgwGxMsInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxMsInitSessTerm.setStatus('current')
jnxMbgPgwGxPcrfInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxPcrfInitSessTerm.setStatus('current')
jnxMbgPgwGxGwInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 4, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwGxGwInitSessTerm.setStatus('current')
jnxMbgPgwApnSMStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6), )
if mibBuilder.loadTexts: jnxMbgPgwApnSMStatsTable.setStatus('current')
jnxMbgPgwApnSMStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwApnName"))
if mibBuilder.loadTexts: jnxMbgPgwApnSMStatsEntry.setStatus('current')
jnxMbgPgwApnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxMbgPgwApnName.setStatus('current')
jnxMbgPgwApnSessnEstAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnEstAttmpts.setStatus('current')
jnxMbgPgwApnSuccSessnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccSessnEst.setStatus('current')
jnxMbgPgwApnPeerInitDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPeerInitDeactv.setStatus('current')
jnxMbgPgwApnPeerInitSuccDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPeerInitSuccDeactv.setStatus('current')
jnxMbgPgwApnGwInitDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGwInitDeactv.setStatus('current')
jnxMbgPgwApnGwInitSuccDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGwInitSuccDeactv.setStatus('current')
jnxMbgPgwApnGtpStatsGnS5S8InpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGnS5S8InpPkt.setStatus('current')
jnxMbgPgwApnGtpStatsGnS5S8InpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGnS5S8InpByt.setStatus('current')
jnxMbgPgwApnGtpStatsGnS5S8OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGnS5S8OutPkt.setStatus('current')
jnxMbgPgwApnGtpStatsGnS5S8OutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGnS5S8OutByt.setStatus('current')
jnxMbgPgwApnGtpStatsGiInpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGiInpPkt.setStatus('current')
jnxMbgPgwApnGtpStatsGiInpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGiInpByt.setStatus('current')
jnxMbgPgwApnGtpStatsGiOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGiOutPkt.setStatus('current')
jnxMbgPgwApnGtpStatsGiOutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGiOutByt.setStatus('current')
jnxMbgPgwApnSessnFailSrvcUnaval = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailSrvcUnaval.setStatus('current')
jnxMbgPgwApnSessnFailSysFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailSysFailure.setStatus('current')
jnxMbgPgwApnSessnFailNoResource = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailNoResource.setStatus('current')
jnxMbgPgwApnSessnFailNoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailNoAddr.setStatus('current')
jnxMbgPgwApnSessnFailSrvcDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailSrvcDenied.setStatus('current')
jnxMbgPgwApnSessnFailAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailAuthFailed.setStatus('current')
jnxMbgPgwApnSessnFailAccsDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailAccsDenied.setStatus('current')
jnxMbgPgwApnMSInitModAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMSInitModAttmpts.setStatus('current')
jnxMbgPgwApnSuccMSInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccMSInitMod.setStatus('current')
jnxMbgPgwApnPgwGgsnInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPgwGgsnInitMod.setStatus('current')
jnxMbgPgwApnSuccPgwGgsnInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccPgwGgsnInitMod.setStatus('current')
jnxMbgPgwApnUsrAuthAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnUsrAuthAttmpts.setStatus('current')
jnxMbgPgwApnSuccUsrAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccUsrAuth.setStatus('current')
jnxMbgPgwApnFailUsrAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnFailUsrAuth.setStatus('current')
jnxMbgPgwApnDynIPAllocAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnDynIPAllocAttmpts.setStatus('current')
jnxMbgPgwApnSuccDynIPAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccDynIPAlloc.setStatus('current')
jnxMbgPgwApnCdrsAllocd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCdrsAllocd.setStatus('current')
jnxMbgPgwApnPartialCdrsAllocd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPartialCdrsAllocd.setStatus('current')
jnxMbgPgwApnCdrsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCdrsClosed.setStatus('current')
jnxMbgPgwApnCdrCntainrsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCdrCntainrsClosed.setStatus('current')
jnxMbgPgwApnPktsViolMIFAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPktsViolMIFAcl.setStatus('current')
jnxMbgPgwApnReDrctMblToMblPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnReDrctMblToMblPkts.setStatus('current')
jnxMbgPgwApnReDrctMblToMblByts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnReDrctMblToMblByts.setStatus('current')
jnxMbgPgwApnIpv6RsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnIpv6RsRcvd.setStatus('current')
jnxMbgPgwApnIpv6RaTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnIpv6RaTxd.setStatus('current')
jnxMbgPgwApnIpv6NsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnIpv6NsRcvd.setStatus('current')
jnxMbgPgwApnIpv6NaTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnIpv6NaTxd.setStatus('current')
jnxMbgPgwApnSessnFailOther = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailOther.setStatus('current')
jnxMbgPgwApnGtpStatsS58DscrdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsS58DscrdPkts.setStatus('current')
jnxMbgPgwApnGtpStatsGiDiscrdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGtpStatsGiDiscrdPkts.setStatus('current')
jnxMbgPgwApnSessEstDynPolAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessEstDynPolAttempt.setStatus('current')
jnxMbgPgwApnSuccSessEstDynPol = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccSessEstDynPol.setStatus('current')
jnxMbgPgwApnSessEstStaPolAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessEstStaPolAttempt.setStatus('deprecated')
jnxMbgPgwApnSuccSessEstStaPol = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccSessEstStaPol.setStatus('deprecated')
jnxMbgPgwApnMsInitAmbrModReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitAmbrModReq.setStatus('deprecated')
jnxMbgPgwApnMsInitAmbrModSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitAmbrModSucc.setStatus('deprecated')
jnxMbgPgwApnMsInitQoSModReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitQoSModReq.setStatus('deprecated')
jnxMbgPgwApnMsInitQoSModSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitQoSModSucc.setStatus('deprecated')
jnxMbgPgwApnPcrfInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPcrfInitSessTerm.setStatus('deprecated')
jnxMbgPgwApnGwInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGwInitSessTerm.setStatus('deprecated')
jnxMbgPgwApnMsInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitSessTerm.setStatus('deprecated')
jnxMbgPgwApnMsInitSessModTrgr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitSessModTrgr.setStatus('deprecated')
jnxMbgPgwApnMsInitSessModSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitSessModSucc.setStatus('deprecated')
jnxMbgPgwApnPcrfInitSessModTrgr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPcrfInitSessModTrgr.setStatus('deprecated')
jnxMbgPgwApnPcrfInitSessModSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPcrfInitSessModSucc.setStatus('deprecated')
jnxMbgPgwApnSessModTrgrQoSChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrQoSChg.setStatus('current')
jnxMbgPgwApnSessModTrgrRatChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrRatChg.setStatus('current')
jnxMbgPgwApnSessModTrgrSgsnChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrSgsnChg.setStatus('current')
jnxMbgPgwApnSessModTrgrSgwChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrSgwChg.setStatus('current')
jnxMbgPgwApnSessModTrgrPlmnChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrPlmnChg.setStatus('current')
jnxMbgPgwApnSessModTrgrRaiChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrRaiChg.setStatus('current')
jnxMbgPgwApnSessModTrgrUliChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrUliChg.setStatus('current')
jnxMbgPgwApnSessModTrgrIPCanChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrIPCanChg.setStatus('current')
jnxMbgPgwApnMsInitSessModTftChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsInitSessModTftChg.setStatus('current')
jnxMbgPgwApnNwInitSessModTftChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNwInitSessModTftChg.setStatus('current')
jnxMbgPgwApnSessModTrgrBrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrBrLoss.setStatus('current')
jnxMbgPgwApnSessModTrgrBrRecvry = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrBrRecvry.setStatus('current')
jnxMbgPgwApnSessModTrgrRsrAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrRsrAlloc.setStatus('current')
jnxMbgPgwApnSessModTrgrRevldTO = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrRevldTO.setStatus('current')
jnxMbgPgwApnSessModQoSExceedAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModQoSExceedAuth.setStatus('current')
jnxMbgPgwApnSessModTodProc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTodProc.setStatus('current')
jnxMbgPgwApnSessModTrgrChgSubsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTrgrChgSubsc.setStatus('current')
jnxMbgPgwApnSessModAmbrChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModAmbrChg.setStatus('current')
jnxMbgPgwApnSessModEcgiChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModEcgiChg.setStatus('current')
jnxMbgPgwApnSessModTaiChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModTaiChg.setStatus('current')
jnxMbgPgwApnSessModMsTimezoneChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModMsTimezoneChg.setStatus('current')
jnxMbgPgwApnSessModDefQosChg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessModDefQosChg.setStatus('current')
jnxMbgPgwApnMsDedBrActAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsDedBrActAttempt.setStatus('current')
jnxMbgPgwApnMsDedBrActSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsDedBrActSucc.setStatus('current')
jnxMbgPgwApnNwDedBrActAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNwDedBrActAttempt.setStatus('current')
jnxMbgPgwApnNwDedBrActSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNwDedBrActSucc.setStatus('current')
jnxMbgPgwApnMsDedBrModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsDedBrModAttempt.setStatus('current')
jnxMbgPgwApnMsDedBrModSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsDedBrModSucc.setStatus('current')
jnxMbgPgwApnNwDedBrModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNwDedBrModAttempt.setStatus('current')
jnxMbgPgwApnNwDedBrModSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNwDedBrModSucc.setStatus('current')
jnxMbgPgwApnMsDedBrDeactAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnMsDedBrDeactAttempt.setStatus('current')
jnxMbgPgwApnNwDedBrDeactAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNwDedBrDeactAttempt.setStatus('current')
jnxMbgPgwApnGwDedBrDeactAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGwDedBrDeactAttempt.setStatus('current')
jnxMbgPgwApnGbrDedBrCrtFailCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGbrDedBrCrtFailCAC.setStatus('current')
jnxMbgPgwApnNGbrDedBrCrtFailCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnNGbrDedBrCrtFailCAC.setStatus('current')
jnxMbgPgwApnSessTermUnreachPcrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessTermUnreachPcrf.setStatus('current')
jnxMbgPgwApnSessTermPcrfRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessTermPcrfRestart.setStatus('current')
jnxMbgPgwApnGxCcrISent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrISent.setStatus('deprecated')
jnxMbgPgwApnGxCcaIRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcaIRcvd.setStatus('deprecated')
jnxMbgPgwApnGxCcrUSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrUSent.setStatus('deprecated')
jnxMbgPgwApnGxCcaURcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcaURcvd.setStatus('deprecated')
jnxMbgPgwApnGxCcrTSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrTSent.setStatus('deprecated')
jnxMbgPgwApnGxCcaTRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcaTRcvd.setStatus('deprecated')
jnxMbgPgwApnGxRarRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxRarRcvd.setStatus('deprecated')
jnxMbgPgwApnGxRaaSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxRaaSent.setStatus('deprecated')
jnxMbgPgwApnGxRaaSentRsrFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxRaaSentRsrFail.setStatus('deprecated')
jnxMbgPgwApnGxCcrRejTransntFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrRejTransntFail.setStatus('deprecated')
jnxMbgPgwApnGxCcrRejInitlParErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrRejInitlParErr.setStatus('deprecated')
jnxMbgPgwApnGxCcrRejPermFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrRejPermFail.setStatus('deprecated')
jnxMbgPgwApnGxCcrRejUknCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrRejUknCode.setStatus('deprecated')
jnxMbgPgwApnGxCcrRejUknSess = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxCcrRejUknSess.setStatus('deprecated')
jnxMbgPgwApnPccActiveDynRules = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 112), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccActiveDynRules.setStatus('current')
jnxMbgPgwApnPccDynRuleDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccDynRuleDeact.setStatus('current')
jnxMbgPgwApnPccRuleStaticAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 114), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccRuleStaticAct.setStatus('current')
jnxMbgPgwApnPccRuleStaticDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 115), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccRuleStaticDeact.setStatus('current')
jnxMbgPgwApnPccRuleDynMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccRuleDynMod.setStatus('current')
jnxMbgPgwApnPccRuleValidnFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 117), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccRuleValidnFail.setStatus('current')
jnxMbgPgwApnPccRuleEnforceFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 118), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccRuleEnforceFail.setStatus('deprecated')
jnxMbgPgwApnPccActFailNoRsr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccActFailNoRsr.setStatus('current')
jnxMbgPgwApnPccRuleUpdProcFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnPccRuleUpdProcFail.setStatus('current')
jnxMbgPgwApnInterRatHoAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 121), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnInterRatHoAttempt.setStatus('current')
jnxMbgPgwApnInterRatHoSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 122), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnInterRatHoSucc.setStatus('current')
jnxMbgPgwApnIntraRatHoAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 123), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnIntraRatHoAttempt.setStatus('current')
jnxMbgPgwApnIntraRatHoSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 124), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnIntraRatHoSucc.setStatus('current')
jnxMbgPgwApnOnlineAuthAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnOnlineAuthAttempt.setStatus('deprecated')
jnxMbgPgwApnOnlineAuthSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 126), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnOnlineAuthSucc.setStatus('deprecated')
jnxMbgPgwApnOnlineAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 127), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnOnlineAuthTimeout.setStatus('deprecated')
jnxMbgPgwApnOnlineQuotaThdUpdReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 128), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnOnlineQuotaThdUpdReq.setStatus('deprecated')
jnxMbgPgwApnGyCcrISent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 129), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrISent.setStatus('deprecated')
jnxMbgPgwApnGyCcaISucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcaISucc.setStatus('deprecated')
jnxMbgPgwApnGyCcrIFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 131), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrIFail.setStatus('deprecated')
jnxMbgPgwApnGyCcrUSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrUSent.setStatus('deprecated')
jnxMbgPgwApnGyCcaUSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 133), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcaUSucc.setStatus('deprecated')
jnxMbgPgwApnGyCcrUFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 134), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrUFail.setStatus('deprecated')
jnxMbgPgwApnGyCcrTSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 135), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrTSent.setStatus('deprecated')
jnxMbgPgwApnGyCcaTSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcaTSucc.setStatus('deprecated')
jnxMbgPgwApnGyCcrTFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 137), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrTFail.setStatus('deprecated')
jnxMbgPgwApnGyRarRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 138), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyRarRcvd.setStatus('deprecated')
jnxMbgPgwApnGyRaaSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 139), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyRaaSent.setStatus('deprecated')
jnxMbgPgwApnGyRaaFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 140), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyRaaFail.setStatus('deprecated')
jnxMbgPgwApnGyAbortSessReqRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 141), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyAbortSessReqRcvd.setStatus('deprecated')
jnxMbgPgwApnGyAbortSessAnsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 142), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyAbortSessAnsSent.setStatus('deprecated')
jnxMbgPgwApnGyCcrRejTransntFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 143), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrRejTransntFail.setStatus('deprecated')
jnxMbgPgwApnGyCcrRejInitlParErr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 144), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrRejInitlParErr.setStatus('deprecated')
jnxMbgPgwApnGyCcrRejPermFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 145), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrRejPermFail.setStatus('deprecated')
jnxMbgPgwApnGyCcrRejUknCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 146), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrRejUknCode.setStatus('deprecated')
jnxMbgPgwApnGyCcrRejUknSess = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 147), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyCcrRejUknSess.setStatus('deprecated')
jnxMbgPgwApnGwAttemptedRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 148), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGwAttemptedRedirect.setStatus('current')
jnxMbgPgwApnSuccGwRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 149), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccGwRedirect.setStatus('current')
jnxMbgPgwApnSuccApnRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSuccApnRedirect.setStatus('current')
jnxMbgPgwApnSessnFailCtxNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 151), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnSessnFailCtxNotFound.setStatus('current')
jnxMbgPgwApnGxMsInitModAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 152), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxMsInitModAttempt.setStatus('current')
jnxMbgPgwApnGxSuccMsInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 153), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxSuccMsInitMod.setStatus('current')
jnxMbgPgwApnGxPcrfInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 154), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxPcrfInitMod.setStatus('current')
jnxMbgPgwApnGxSuccPcrfInitMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 155), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxSuccPcrfInitMod.setStatus('current')
jnxMbgPgwApnGxMsInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 156), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxMsInitSessTerm.setStatus('current')
jnxMbgPgwApnGxPcrfInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 157), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxPcrfInitSessTerm.setStatus('current')
jnxMbgPgwApnGxGwInitSessTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 158), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGxGwInitSessTerm.setStatus('current')
jnxMbgPgwApnGySessEstAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 159), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGySessEstAttempt.setStatus('current')
jnxMbgPgwApnGySuccSessEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 160), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGySuccSessEst.setStatus('current')
jnxMbgPgwApnGyReauthAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 161), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyReauthAttempt.setStatus('current')
jnxMbgPgwApnGySuccReauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 162), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGySuccReauth.setStatus('current')
jnxMbgPgwApnGyAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 163), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyAuthTimeout.setStatus('current')
jnxMbgPgwApnGyMsInitSessDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 164), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyMsInitSessDeact.setStatus('current')
jnxMbgPgwApnGyOcsInitSessDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 165), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyOcsInitSessDeact.setStatus('current')
jnxMbgPgwApnGyGwInitSessDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 6, 1, 166), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnGyGwInitSessDeact.setStatus('current')
jnxMbgPgwSMStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5), )
if mibBuilder.loadTexts: jnxMbgPgwSMStatusTable.setStatus('current')
jnxMbgPgwSMStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgPgwSMStatusEntry.setStatus('current')
jnxMbgPgwActvSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvSubscribers.setStatus('current')
jnxMbgPgwActvSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvSessions.setStatus('current')
jnxMbgPgwActvBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvBearers.setStatus('current')
jnxMbgPgwIdleSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwIdleSubscribers.setStatus('deprecated')
jnxMbgPgwIdleSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwIdleSessions.setStatus('deprecated')
jnxMbgPgwIdleBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwIdleBearers.setStatus('deprecated')
jnxMbgPgwSuspSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 7), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuspSubscribers.setStatus('deprecated')
jnxMbgPgwSuspSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuspSessions.setStatus('deprecated')
jnxMbgPgwSuspBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 9), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSuspBearers.setStatus('deprecated')
jnxMbgPgwCPUUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCPUUtil.setStatus('current')
jnxMbgPgwMemoryUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwMemoryUtil.setStatus('current')
jnxMbgPgwActvPrepaidBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvPrepaidBearers.setStatus('current')
jnxMbgPgwActvPostpaidBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 13), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvPostpaidBearers.setStatus('current')
jnxMbgPgwActvGbrBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvGbrBearers.setStatus('current')
jnxMbgPgwActvNonGbrBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 5, 1, 15), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActvNonGbrBearers.setStatus('current')
jnxMbgPgwApnSMClRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10), )
if mibBuilder.loadTexts: jnxMbgPgwApnSMClRateStatsTable.setStatus('current')
jnxMbgPgwApnSMClRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwApnCRName"))
if mibBuilder.loadTexts: jnxMbgPgwApnSMClRateStatsEntry.setStatus('current')
jnxMbgPgwApnCRName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 1), DisplayString())
if mibBuilder.loadTexts: jnxMbgPgwApnCRName.setStatus('current')
jnxMbgPgwApnCRIntervalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCRIntervalMin.setStatus('current')
jnxMbgPgwApnCRPrepaidBrAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCRPrepaidBrAct.setStatus('current')
jnxMbgPgwApnCRPrepaidBrDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCRPrepaidBrDeact.setStatus('current')
jnxMbgPgwApnCRPostpaidBrAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCRPostpaidBrAct.setStatus('current')
jnxMbgPgwApnCRPostpaidBrDeact = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCRPostpaidBrDeact.setStatus('current')
jnxMbgPgwApnCROnlineAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCROnlineAuthTimeout.setStatus('current')
jnxMbgPgwApnCRQuotaThdUpdReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCRQuotaThdUpdReq.setStatus('current')
jnxMbgPgwApnCROnlineRarRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCROnlineRarRcvd.setStatus('current')
jnxMbgPgwApnCROnlineRarSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnCROnlineRarSucc.setStatus('current')
jnxMbgPgwSMClRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8), )
if mibBuilder.loadTexts: jnxMbgPgwSMClRateStatsTable.setStatus('current')
jnxMbgPgwSMClRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgPgwSMClRateStatsEntry.setStatus('current')
jnxMbgPgwClRateIntervalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateIntervalMin.setStatus('current')
jnxMbgPgwClRateSuccSessnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateSuccSessnEst.setStatus('current')
jnxMbgPgwClRateSuccSessnDel = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateSuccSessnDel.setStatus('current')
jnxMbgPgwClRateStatsGnInpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateStatsGnInpPkt.setStatus('current')
jnxMbgPgwClRateStatsGnInpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateStatsGnInpByt.setStatus('current')
jnxMbgPgwClRateStatsGnOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateStatsGnOutPkt.setStatus('current')
jnxMbgPgwClRateStatsGnOutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwClRateStatsGnOutByt.setStatus('current')
jnxMbgPgwSMSpicStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9), )
if mibBuilder.loadTexts: jnxMbgPgwSMSpicStatusTable.setStatus('current')
jnxMbgPgwSMSpicStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgGwFpc"), (0, "JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgGwPic"))
if mibBuilder.loadTexts: jnxMbgPgwSMSpicStatusEntry.setStatus('current')
jnxMbgGwFpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxMbgGwFpc.setStatus('current')
jnxMbgGwPic = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: jnxMbgGwPic.setStatus('current')
jnxMbgPgwSpicStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicStatusName.setStatus('current')
jnxMbgPgwSpicStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("invalid", 0), ("standalone", 1), ("active", 2), ("backup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicStatusState.setStatus('current')
jnxMbgPgwSpicStatusType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sessionPic", 1), ("servicePic", 2), ("pfe", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicStatusType.setStatus('current')
jnxMbgPgwSpicActvSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvSubscribers.setStatus('current')
jnxMbgPgwSpicActvSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 7), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvSessions.setStatus('current')
jnxMbgPgwSpicActvBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvBearers.setStatus('current')
jnxMbgPgwSpicCPUUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicCPUUtil.setStatus('current')
jnxMbgPgwSpicMemoryUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicMemoryUtil.setStatus('current')
jnxMbgPgwSpicActvPrepaidBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 11), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvPrepaidBearers.setStatus('current')
jnxMbgPgwSpicActvPostpaidBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 12), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvPostpaidBearers.setStatus('current')
jnxMbgPgwSpicActvGbrBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 13), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvGbrBearers.setStatus('current')
jnxMbgPgwSpicActvNonGbrBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 9, 1, 14), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwSpicActvNonGbrBearers.setStatus('current')
jnxMbgPgwApnSMStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7), )
if mibBuilder.loadTexts: jnxMbgPgwApnSMStatusTable.setStatus('current')
jnxMbgPgwApnSMStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwApnName"))
if mibBuilder.loadTexts: jnxMbgPgwApnSMStatusEntry.setStatus('current')
jnxMbgPgwApnActvSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvSubscribers.setStatus('current')
jnxMbgPgwApnActvSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvSessions.setStatus('current')
jnxMbgPgwApnActvBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvBearers.setStatus('current')
jnxMbgPgwApnActvPrepaidBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvPrepaidBearers.setStatus('current')
jnxMbgPgwApnActvPostpaidBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvPostpaidBearers.setStatus('current')
jnxMbgPgwApnActvGbrBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvGbrBearers.setStatus('current')
jnxMbgPgwApnActvNonGbrBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 7, 1, 7), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwApnActvNonGbrBearers.setStatus('current')
jnxMbgPgwStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 2))
jnxMbgPgwActiveSubscribers = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActiveSubscribers.setStatus('deprecated')
jnxMbgPgwActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActiveSessions.setStatus('deprecated')
jnxMbgPgwActiveBearers = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwActiveBearers.setStatus('deprecated')
jnxMbgPgwCPUUtilization = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwCPUUtilization.setStatus('deprecated')
jnxMbgPgwMemoryUtilization = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgPgwMemoryUtilization.setStatus('deprecated')
jnxMbgPgwSMNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3))
jnxMbgPgwGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwGatewayName.setStatus('current')
jnxMbgPgwQosAPNName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwQosAPNName.setStatus('current')
jnxMbgPgwQosThreshold1Status = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 3), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwQosThreshold1Status.setStatus('current')
jnxMbgPgwQosThreshold2Status = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 4), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwQosThreshold2Status.setStatus('current')
jnxMbgPgwSMGTPEventType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMGTPEventType.setStatus('current')
jnxMbgPgwSMGTPEventCause = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 6), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMGTPEventCause.setStatus('current')
jnxMbgPgwSMAlarmThrshld = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMAlarmThrshld.setStatus('current')
jnxMbgPgwSMAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 8), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMAlarmState.setStatus('current')
jnxMbgPgwSMSPICName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMSPICName.setStatus('current')
jnxMbgPgwSMTCName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMTCName.setStatus('current')
jnxMbgPgwSMQCIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 11), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMQCIName.setStatus('current')
jnxMbgPgwSMSessionEstFailReason = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 12), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMSessionEstFailReason.setStatus('current')
jnxMbgPgwMMGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 13), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwMMGatewayName.setStatus('current')
jnxMbgPgwPrevGatewayMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 14), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwPrevGatewayMMState.setStatus('current')
jnxMbgPgwNewGatewayMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 15), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwNewGatewayMMState.setStatus('current')
jnxMbgPgwAPNMMGatewayName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 16), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwAPNMMGatewayName.setStatus('current')
jnxMbgPgwAPNMMAPNName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 17), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwAPNMMAPNName.setStatus('current')
jnxMbgPgwPrevAPNMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 18), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwPrevAPNMMState.setStatus('current')
jnxMbgPgwNewAPNMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 19), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwNewAPNMMState.setStatus('current')
jnxMbgPgwTrapGwIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 20), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwTrapGwIndex.setStatus('current')
jnxMbgPgwTrapGwName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 21), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwTrapGwName.setStatus('current')
jnxMbgPgwSpicName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 22), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSpicName.setStatus('current')
jnxMbgPgwSMInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 1, 3, 23), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPgwSMInterfaceName.setStatus('current')
jnxMbgPgwQosBearersThresStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 1)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold1Status"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold2Status"))
if mibBuilder.loadTexts: jnxMbgPgwQosBearersThresStatus.setStatus('deprecated')
jnxMbgPgwQosCPUThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 2)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold1Status"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold2Status"))
if mibBuilder.loadTexts: jnxMbgPgwQosCPUThresholdStatus.setStatus('deprecated')
jnxMbgPgwQosMemThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 3)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold1Status"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold2Status"))
if mibBuilder.loadTexts: jnxMbgPgwQosMemThresholdStatus.setStatus('deprecated')
jnxMbgPgwAPNQosBearersThreStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 4)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosAPNName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold1Status"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwQosThreshold2Status"))
if mibBuilder.loadTexts: jnxMbgPgwAPNQosBearersThreStatus.setStatus('deprecated')
jnxMbgPgwSMGtpEventNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 5)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMGTPEventType"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMGTPEventCause"))
if mibBuilder.loadTexts: jnxMbgPgwSMGtpEventNotif.setStatus('deprecated')
jnxMbgPgwSMSubscribersThresGblNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 6)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"))
if mibBuilder.loadTexts: jnxMbgPgwSMSubscribersThresGblNotif.setStatus('deprecated')
jnxMbgPgwSMSubscribersThresPerSPNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 7)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMSPICName"))
if mibBuilder.loadTexts: jnxMbgPgwSMSubscribersThresPerSPNotif.setStatus('deprecated')
jnxMbgPgwSMSessionEstFailThresPerSPNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 8)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMSessionEstFailReason"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMSPICName"))
if mibBuilder.loadTexts: jnxMbgPgwSMSessionEstFailThresPerSPNotif.setStatus('deprecated')
jnxMbgPgwSMSessionEstFailThresPerTCNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 9)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMSessionEstFailReason"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMTCName"))
if mibBuilder.loadTexts: jnxMbgPgwSMSessionEstFailThresPerTCNotif.setStatus('deprecated')
jnxMbgPgwSMSessionEstFailThresPerQCINotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 10)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMSessionEstFailReason"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMQCIName"))
if mibBuilder.loadTexts: jnxMbgPgwSMSessionEstFailThresPerQCINotif.setStatus('deprecated')
jnxMbgPgwSMBearersThresGblNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 11)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"))
if mibBuilder.loadTexts: jnxMbgPgwSMBearersThresGblNotif.setStatus('deprecated')
jnxMbgPgwSMBearersThresPerSPNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 12)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmThrshld"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMAlarmState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMSPICName"))
if mibBuilder.loadTexts: jnxMbgPgwSMBearersThresPerSPNotif.setStatus('deprecated')
jnxMbgPgwGatewayMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 13)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwMMGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwPrevGatewayMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwNewGatewayMMState"))
if mibBuilder.loadTexts: jnxMbgPgwGatewayMMStateChange.setStatus('current')
jnxMbgPgwAPNMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 14)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNMMGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNMMAPNName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwPrevAPNMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwNewAPNMMState"))
if mibBuilder.loadTexts: jnxMbgPgwAPNMMStateChange.setStatus('current')
jnxMbgPgwQosBrThreshStatusHi = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 15)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosBrThreshStatusHi.setStatus('current')
jnxMbgPgwQosBrThreshStatusLow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 16)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosBrThreshStatusLow.setStatus('current')
jnxMbgPgwQosBrThreshStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 17)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosBrThreshStatusClear.setStatus('current')
jnxMbgPgwQosCPUThreshStatusHi = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 18)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosCPUThreshStatusHi.setStatus('current')
jnxMbgPgwQosCPUThreshStatusLow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 19)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosCPUThreshStatusLow.setStatus('current')
jnxMbgPgwQosCPUThreshStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 20)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosCPUThreshStatusClear.setStatus('current')
jnxMbgPgwQosMemThreshStatusHi = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 21)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosMemThreshStatusHi.setStatus('current')
jnxMbgPgwQosMemThreshStatusLow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 22)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosMemThreshStatusLow.setStatus('current')
jnxMbgPgwQosMemThreshStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 23)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgPgwQosMemThreshStatusClear.setStatus('current')
jnxMbgPgwSMGtpEvntNotif = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 24)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMGTPEventType"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMGTPEventCause"))
if mibBuilder.loadTexts: jnxMbgPgwSMGtpEvntNotif.setStatus('current')
jnxMbgPgwPFEMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 25)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNMMGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwPrevAPNMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwNewAPNMMState"))
if mibBuilder.loadTexts: jnxMbgPgwPFEMMStateChange.setStatus('current')
jnxMbgPgwMSMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 26)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNMMGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwPrevAPNMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwNewAPNMMState"))
if mibBuilder.loadTexts: jnxMbgPgwMSMMStateChange.setStatus('current')
jnxMbgPgwAPFEMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 27)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNMMGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwPrevAPNMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwNewAPNMMState"))
if mibBuilder.loadTexts: jnxMbgPgwAPFEMMStateChange.setStatus('current')
jnxMbgPgwAMSMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 1, 1, 0, 28)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwAPNMMGatewayName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwPrevAPNMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-MIB", "jnxMbgPgwNewAPNMMState"))
if mibBuilder.loadTexts: jnxMbgPgwAMSMMStateChange.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SM-MIB", jnxMbgPgwPeerInitSessnDeact=jnxMbgPgwPeerInitSessnDeact, jnxMbgPgwApnNwDedBrDeactAttempt=jnxMbgPgwApnNwDedBrDeactAttempt, jnxMbgPgwApnGxSuccMsInitMod=jnxMbgPgwApnGxSuccMsInitMod, jnxMbgPgwApnGyCcrUFail=jnxMbgPgwApnGyCcrUFail, jnxMbgPgwApnReDrctMblToMblPkts=jnxMbgPgwApnReDrctMblToMblPkts, jnxMbgPgwSMBearersThresPerSPNotif=jnxMbgPgwSMBearersThresPerSPNotif, jnxMbgGwPic=jnxMbgGwPic, jnxMbgPgwSMQCIName=jnxMbgPgwSMQCIName, jnxMbgPgwApnCRPostpaidBrAct=jnxMbgPgwApnCRPostpaidBrAct, jnxMbgPgwSpicActvPrepaidBearers=jnxMbgPgwSpicActvPrepaidBearers, jnxMbgPgwActvSessions=jnxMbgPgwActvSessions, jnxMbgPgwSuccGwInitMod=jnxMbgPgwSuccGwInitMod, jnxMbgPgwApnActvBearers=jnxMbgPgwApnActvBearers, jnxMbgPgwSuccMsInitDedBrAct=jnxMbgPgwSuccMsInitDedBrAct, jnxMbgPgwApnMsInitSessTerm=jnxMbgPgwApnMsInitSessTerm, jnxMbgPgwApnSMStatsEntry=jnxMbgPgwApnSMStatsEntry, jnxMbgPgwApnNwInitSessModTftChg=jnxMbgPgwApnNwInitSessModTftChg, jnxMbgPgwSpicMemoryUtil=jnxMbgPgwSpicMemoryUtil, jnxMbgPgwApnSessModTrgrBrRecvry=jnxMbgPgwApnSessModTrgrBrRecvry, jnxMbgPgwPrevAPNMMState=jnxMbgPgwPrevAPNMMState, jnxMbgPgwApnSuccSessEstDynPol=jnxMbgPgwApnSuccSessEstDynPol, jnxMbgPgwApnGyCcaUSucc=jnxMbgPgwApnGyCcaUSucc, jnxMbgPgwApnGwDedBrDeactAttempt=jnxMbgPgwApnGwDedBrDeactAttempt, jnxMbgPgwActiveSessions=jnxMbgPgwActiveSessions, jnxMbgPgwApnPccRuleDynMod=jnxMbgPgwApnPccRuleDynMod, jnxMbgPgwApnGyCcrTFail=jnxMbgPgwApnGyCcrTFail, jnxMbgPgwApnGyOcsInitSessDeact=jnxMbgPgwApnGyOcsInitSessDeact, jnxMbgPgwSrcAddrViolationByts=jnxMbgPgwSrcAddrViolationByts, jnxMbgPgwSpicStatusState=jnxMbgPgwSpicStatusState, jnxMbgPgwApnSessnEstAttmpts=jnxMbgPgwApnSessnEstAttmpts, jnxMbgPgwApnGxPcrfInitSessTerm=jnxMbgPgwApnGxPcrfInitSessTerm, jnxMbgPgwApnGtpStatsGnS5S8InpPkt=jnxMbgPgwApnGtpStatsGnS5S8InpPkt, jnxMbgPgwGtpStatsGnS5S8InpByt=jnxMbgPgwGtpStatsGnS5S8InpByt, jnxMbgPgwApnSessnFailNoResource=jnxMbgPgwApnSessnFailNoResource, jnxMbgPgwApnGySuccSessEst=jnxMbgPgwApnGySuccSessEst, jnxMbgPgwApnSessModTrgrIPCanChg=jnxMbgPgwApnSessModTrgrIPCanChg, jnxMbgPgwSessnFailedAuthFailed=jnxMbgPgwSessnFailedAuthFailed, jnxMbgPgwGwInitDeactv=jnxMbgPgwGwInitDeactv, jnxMbgPgwGyGwInitSessDeact=jnxMbgPgwGyGwInitSessDeact, jnxMbgPgwApnGyAbortSessReqRcvd=jnxMbgPgwApnGyAbortSessReqRcvd, jnxMbgPgwApnSessnFailAuthFailed=jnxMbgPgwApnSessnFailAuthFailed, jnxMbgPgwSMSessionEstFailThresPerTCNotif=jnxMbgPgwSMSessionEstFailThresPerTCNotif, jnxMbgPgwSMOperStatsTable=jnxMbgPgwSMOperStatsTable, jnxMbgPgwApnActvNonGbrBearers=jnxMbgPgwApnActvNonGbrBearers, jnxMbgPgwApnPcrfInitSessModTrgr=jnxMbgPgwApnPcrfInitSessModTrgr, jnxMbgPgwApnMsInitSessModSucc=jnxMbgPgwApnMsInitSessModSucc, jnxMbgPgwSessnEstAttmpts=jnxMbgPgwSessnEstAttmpts, jnxMbgPgwSMNotificationVars=jnxMbgPgwSMNotificationVars, jnxMbgPgwApnPccRuleUpdProcFail=jnxMbgPgwApnPccRuleUpdProcFail, jnxMbgPgwQosCPUThreshStatusHi=jnxMbgPgwQosCPUThreshStatusHi, jnxMbgPgwActiveBearers=jnxMbgPgwActiveBearers, jnxMbgPgwApnPktsViolMIFAcl=jnxMbgPgwApnPktsViolMIFAcl, jnxMbgPgwApnSessEstDynPolAttempt=jnxMbgPgwApnSessEstDynPolAttempt, jnxMbgPgwQosBrThreshStatusLow=jnxMbgPgwQosBrThreshStatusLow, jnxMbgPgwSpicActvBearers=jnxMbgPgwSpicActvBearers, jnxMbgPgwSessnFailedServcUnaval=jnxMbgPgwSessnFailedServcUnaval, jnxMbgPgwSMBearersThresGblNotif=jnxMbgPgwSMBearersThresGblNotif, jnxMbgPgwApnDynIPAllocAttmpts=jnxMbgPgwApnDynIPAllocAttmpts, jnxMbgPgwApnSessEstStaPolAttempt=jnxMbgPgwApnSessEstStaPolAttempt, jnxMbgPgwApnGyGwInitSessDeact=jnxMbgPgwApnGyGwInitSessDeact, jnxMbgPgwAPNMMAPNName=jnxMbgPgwAPNMMAPNName, jnxMbgPgwGySuccSessEst=jnxMbgPgwGySuccSessEst, jnxMbgPgwSMSpicStatusEntry=jnxMbgPgwSMSpicStatusEntry, jnxMbgPgwQosMemThresholdStatus=jnxMbgPgwQosMemThresholdStatus, jnxMbgPgwApnActvSubscribers=jnxMbgPgwApnActvSubscribers, jnxMbgPgwGatewayName=jnxMbgPgwGatewayName, jnxMbgPgwApnPeerInitSuccDeactv=jnxMbgPgwApnPeerInitSuccDeactv, jnxMbgPgwApnSessnFailAccsDenied=jnxMbgPgwApnSessnFailAccsDenied, jnxMbgPgwApnSessnFailCtxNotFound=jnxMbgPgwApnSessnFailCtxNotFound, jnxMbgPgwApnCdrCntainrsClosed=jnxMbgPgwApnCdrCntainrsClosed, jnxMbgPgwNonExstUeAddrPkts=jnxMbgPgwNonExstUeAddrPkts, jnxMbgPgwPartialCdrsAllocd=jnxMbgPgwPartialCdrsAllocd, jnxMbgPgwApnGtpStatsGiInpPkt=jnxMbgPgwApnGtpStatsGiInpPkt, jnxMbgPgwApnSessModTrgrQoSChg=jnxMbgPgwApnSessModTrgrQoSChg, jnxMbgPgwApnSuccDynIPAlloc=jnxMbgPgwApnSuccDynIPAlloc, jnxMbgPgwPrevGatewayMMState=jnxMbgPgwPrevGatewayMMState, PYSNMP_MODULE_ID=jnxMbgPgwSubscriberManagerMib, jnxMbgPgwApnSessTermPcrfRestart=jnxMbgPgwApnSessTermPcrfRestart, jnxMbgPgwApnSuccMSInitMod=jnxMbgPgwApnSuccMSInitMod, jnxMbgPgwClRateStatsGnOutPkt=jnxMbgPgwClRateStatsGnOutPkt, jnxMbgPgwSuccPeerInitSessnDeact=jnxMbgPgwSuccPeerInitSessnDeact, jnxMbgPgwApnSessModTrgrChgSubsc=jnxMbgPgwApnSessModTrgrChgSubsc, jnxMbgPgwApnGxMsInitModAttempt=jnxMbgPgwApnGxMsInitModAttempt, jnxMbgPgwApnSuccSessEstStaPol=jnxMbgPgwApnSuccSessEstStaPol, jnxMbgPgwApnSessModTrgrRaiChg=jnxMbgPgwApnSessModTrgrRaiChg, jnxMbgPgwApnGxCcrRejPermFail=jnxMbgPgwApnGxCcrRejPermFail, jnxMbgPgwApnPgwGgsnInitMod=jnxMbgPgwApnPgwGgsnInitMod, jnxMbgPgwApnCRPrepaidBrDeact=jnxMbgPgwApnCRPrepaidBrDeact, jnxMbgPgwApnGxRaaSentRsrFail=jnxMbgPgwApnGxRaaSentRsrFail, jnxMbgPgwCPUUtilization=jnxMbgPgwCPUUtilization, jnxMbgPgwApnOnlineAuthSucc=jnxMbgPgwApnOnlineAuthSucc, jnxMbgPgwSMSubscribersThresPerSPNotif=jnxMbgPgwSMSubscribersThresPerSPNotif, jnxMbgPgwQosBearersThresStatus=jnxMbgPgwQosBearersThresStatus, jnxMbgPgwApnGyCcrRejUknSess=jnxMbgPgwApnGyCcrRejUknSess, jnxMbgPgwSessnEstAttempts=jnxMbgPgwSessnEstAttempts, jnxMbgPgwApnIntraRatHoSucc=jnxMbgPgwApnIntraRatHoSucc, jnxMbgPgwMSMMStateChange=jnxMbgPgwMSMMStateChange, jnxMbgPgwApnGyCcrRejTransntFail=jnxMbgPgwApnGyCcrRejTransntFail, jnxMbgPgwApnGxGwInitSessTerm=jnxMbgPgwApnGxGwInitSessTerm, jnxMbgPgwApnMsInitAmbrModSucc=jnxMbgPgwApnMsInitAmbrModSucc, jnxMbgPgwNewAPNMMState=jnxMbgPgwNewAPNMMState, jnxMbgPgwApnFailUsrAuth=jnxMbgPgwApnFailUsrAuth, jnxMbgPgwAPNMMStateChange=jnxMbgPgwAPNMMStateChange, jnxMbgPgwApnGwInitDeactv=jnxMbgPgwApnGwInitDeactv, jnxMbgPgwApnGtpStatsGiOutPkt=jnxMbgPgwApnGtpStatsGiOutPkt, jnxMbgPgwSMSpicStatusTable=jnxMbgPgwSMSpicStatusTable, jnxMbgPgwApnActvPostpaidBearers=jnxMbgPgwApnActvPostpaidBearers, jnxMbgPgwMsInitDedBrActAttempt=jnxMbgPgwMsInitDedBrActAttempt, jnxMbgPgwInterRatHoAttempt=jnxMbgPgwInterRatHoAttempt, jnxMbgPgwApnGyCcrISent=jnxMbgPgwApnGyCcrISent, jnxMbgPgwApnSessTermUnreachPcrf=jnxMbgPgwApnSessTermUnreachPcrf, jnxMbgPgwSuccSessnEst=jnxMbgPgwSuccSessnEst, jnxMbgPgwGySessEstAttempt=jnxMbgPgwGySessEstAttempt, jnxMbgPgwPFEMMStateChange=jnxMbgPgwPFEMMStateChange, jnxMbgPgwApnGxCcaURcvd=jnxMbgPgwApnGxCcaURcvd, jnxMbgPgwApnNwDedBrActSucc=jnxMbgPgwApnNwDedBrActSucc, jnxMbgPgwApnSessModTrgrRevldTO=jnxMbgPgwApnSessModTrgrRevldTO, jnxMbgPgwApnSessModTrgrPlmnChg=jnxMbgPgwApnSessModTrgrPlmnChg, jnxMbgPgwApnSessModTrgrBrLoss=jnxMbgPgwApnSessModTrgrBrLoss, jnxMbgPgwQosBrThreshStatusClear=jnxMbgPgwQosBrThreshStatusClear, jnxMbgPgwSMInterfaceName=jnxMbgPgwSMInterfaceName, jnxMbgPgwApnPccActFailNoRsr=jnxMbgPgwApnPccActFailNoRsr, jnxMbgPgwApnCdrsClosed=jnxMbgPgwApnCdrsClosed, jnxMbgPgwSpicStatusType=jnxMbgPgwSpicStatusType, jnxMbgPgwApnSessModTaiChg=jnxMbgPgwApnSessModTaiChg, jnxMbgPgwApnPccRuleStaticAct=jnxMbgPgwApnPccRuleStaticAct, jnxMbgPgwApnCdrsAllocd=jnxMbgPgwApnCdrsAllocd, jnxMbgPgwApnMsDedBrDeactAttempt=jnxMbgPgwApnMsDedBrDeactAttempt, jnxMbgPgwSuspBearers=jnxMbgPgwSuspBearers, jnxMbgPgwApnGxCcrTSent=jnxMbgPgwApnGxCcrTSent, jnxMbgPgwAMSMMStateChange=jnxMbgPgwAMSMMStateChange, jnxMbgPgwSessnFailedServcDenied=jnxMbgPgwSessnFailedServcDenied, jnxMbgPgwApnSessnFailSrvcDenied=jnxMbgPgwApnSessnFailSrvcDenied, jnxMbgPgwApnActvGbrBearers=jnxMbgPgwApnActvGbrBearers, jnxMbgPgwApnMsInitQoSModSucc=jnxMbgPgwApnMsInitQoSModSucc, jnxMbgPgwQosMemThreshStatusLow=jnxMbgPgwQosMemThreshStatusLow, jnxMbgPgwGwInitSuccDeactv=jnxMbgPgwGwInitSuccDeactv, jnxMbgPgwApnGyCcrRejUknCode=jnxMbgPgwApnGyCcrRejUknCode, jnxMbgPgwApnMsDedBrModAttempt=jnxMbgPgwApnMsDedBrModAttempt, jnxMbgPgwPktsRcvdNonExstTeids=jnxMbgPgwPktsRcvdNonExstTeids, jnxMbgPgwApnGwInitSessTerm=jnxMbgPgwApnGwInitSessTerm, jnxMbgPgwApnSessModEcgiChg=jnxMbgPgwApnSessModEcgiChg, jnxMbgPgwSMGTPEventCause=jnxMbgPgwSMGTPEventCause, jnxMbgPgwMemoryUtil=jnxMbgPgwMemoryUtil, jnxMbgPgwApnCRPostpaidBrDeact=jnxMbgPgwApnCRPostpaidBrDeact, jnxMbgPgwSuspSubscribers=jnxMbgPgwSuspSubscribers, jnxMbgPgwClRateStatsGnInpPkt=jnxMbgPgwClRateStatsGnInpPkt, jnxMbgPgwDedBrActAttempt=jnxMbgPgwDedBrActAttempt, jnxMbgPgwApnGyRarRcvd=jnxMbgPgwApnGyRarRcvd, jnxMbgPgwApnSessModTodProc=jnxMbgPgwApnSessModTodProc, jnxMbgPgwSMClRateStatsEntry=jnxMbgPgwSMClRateStatsEntry, jnxMbgPgwNwInitDedBrModAttempt=jnxMbgPgwNwInitDedBrModAttempt, jnxMbgPgwApnGxCcaTRcvd=jnxMbgPgwApnGxCcaTRcvd, jnxMbgPgwApnGxCcrRejInitlParErr=jnxMbgPgwApnGxCcrRejInitlParErr, jnxMbgPgwApnGyCcrRejPermFail=jnxMbgPgwApnGyCcrRejPermFail, jnxMbgPgwApnCRIntervalMin=jnxMbgPgwApnCRIntervalMin, jnxMbgPgwGyMsInitSessDeact=jnxMbgPgwGyMsInitSessDeact, jnxMbgPgwSMGtpEventNotif=jnxMbgPgwSMGtpEventNotif, jnxMbgPgwNewGatewayMMState=jnxMbgPgwNewGatewayMMState, jnxMbgPgwQosAPNName=jnxMbgPgwQosAPNName, jnxMbgPgwSMGTPEventType=jnxMbgPgwSMGTPEventType, jnxMbgPgwActvNonGbrBearers=jnxMbgPgwActvNonGbrBearers, jnxMbgPgwApnSessModQoSExceedAuth=jnxMbgPgwApnSessModQoSExceedAuth, jnxMbgPgwActvBearers=jnxMbgPgwActvBearers, jnxMbgPgwTrapGwName=jnxMbgPgwTrapGwName, jnxMbgPgwGwInitModAttempt=jnxMbgPgwGwInitModAttempt, jnxMbgPgwApnSMStatusTable=jnxMbgPgwApnSMStatusTable, jnxMbgPgwApnGyCcaISucc=jnxMbgPgwApnGyCcaISucc, jnxMbgPgwSpicActvPostpaidBearers=jnxMbgPgwSpicActvPostpaidBearers, jnxMbgPgwSMOperStatsEntry=jnxMbgPgwSMOperStatsEntry, jnxMbgPgwSuccNwInitDedBrMod=jnxMbgPgwSuccNwInitDedBrMod, jnxMbgPgwClRateStatsGnOutByt=jnxMbgPgwClRateStatsGnOutByt, jnxMbgPgwPeerInitDeactv=jnxMbgPgwPeerInitDeactv, jnxMbgPgwGtpStatsGiInpByt=jnxMbgPgwGtpStatsGiInpByt, jnxMbgPgwActvGbrBearers=jnxMbgPgwActvGbrBearers, jnxMbgPgwApnGxPcrfInitMod=jnxMbgPgwApnGxPcrfInitMod, jnxMbgPgwApnCROnlineRarRcvd=jnxMbgPgwApnCROnlineRarRcvd, jnxMbgPgwApnGtpStatsGiDiscrdPkts=jnxMbgPgwApnGtpStatsGiDiscrdPkts, jnxMbgPgwSessnFailedNoResource=jnxMbgPgwSessnFailedNoResource, jnxMbgPgwApnSessModTrgrSgwChg=jnxMbgPgwApnSessModTrgrSgwChg, jnxMbgPgwQosMemThreshStatusHi=jnxMbgPgwQosMemThreshStatusHi, jnxMbgPgwSMTCName=jnxMbgPgwSMTCName, jnxMbgPgwSMSPICName=jnxMbgPgwSMSPICName, jnxMbgPgwActvPrepaidBearers=jnxMbgPgwActvPrepaidBearers, jnxMbgPgwGtpStatsGiOutPkt=jnxMbgPgwGtpStatsGiOutPkt, jnxMbgPgwApnSessModMsTimezoneChg=jnxMbgPgwApnSessModMsTimezoneChg, jnxMbgPgwApnOnlineAuthAttempt=jnxMbgPgwApnOnlineAuthAttempt, jnxMbgPgwGxGwInitSessTerm=jnxMbgPgwGxGwInitSessTerm, jnxMbgPgwGyAuthTimeout=jnxMbgPgwGyAuthTimeout, jnxMbgPgwCPUUtil=jnxMbgPgwCPUUtil, jnxMbgPgwApnGyCcrIFail=jnxMbgPgwApnGyCcrIFail, jnxMbgPgwSuccMsInitMod=jnxMbgPgwSuccMsInitMod, jnxMbgPgwGatewayMMStateChange=jnxMbgPgwGatewayMMStateChange, jnxMbgPgwClRateSuccSessnEst=jnxMbgPgwClRateSuccSessnEst, jnxMbgPgwSMStatusEntry=jnxMbgPgwSMStatusEntry, jnxMbgPgwApnActvPrepaidBearers=jnxMbgPgwApnActvPrepaidBearers, jnxMbgPgwApnSMStatusEntry=jnxMbgPgwApnSMStatusEntry, jnxMbgPgwApnSuccUsrAuth=jnxMbgPgwApnSuccUsrAuth, jnxMbgPgwApnMsInitSessModTrgr=jnxMbgPgwApnMsInitSessModTrgr, jnxMbgGwFpc=jnxMbgGwFpc, jnxMbgPgwApnPeerInitDeactv=jnxMbgPgwApnPeerInitDeactv, jnxMbgPgwGxPcrfInitSessTerm=jnxMbgPgwGxPcrfInitSessTerm, jnxMbgPgwActvSubscribers=jnxMbgPgwActvSubscribers, jnxMbgPgwApnCROnlineAuthTimeout=jnxMbgPgwApnCROnlineAuthTimeout, jnxMbgPgwTrapGwIndex=jnxMbgPgwTrapGwIndex, jnxMbgPgwApnCRQuotaThdUpdReq=jnxMbgPgwApnCRQuotaThdUpdReq, jnxMbgPgwSMObjects=jnxMbgPgwSMObjects, jnxMbgPgwApnSuccSessnEst=jnxMbgPgwApnSuccSessnEst, jnxMbgPgwApnGyRaaFail=jnxMbgPgwApnGyRaaFail, jnxMbgPgwSuccDedBrAct=jnxMbgPgwSuccDedBrAct, jnxMbgPgwApnNwDedBrModSucc=jnxMbgPgwApnNwDedBrModSucc, jnxMbgPgwSpicActvGbrBearers=jnxMbgPgwSpicActvGbrBearers, jnxMbgPgwSpicActvSubscribers=jnxMbgPgwSpicActvSubscribers, jnxMbgPgwSuccSessnsEst=jnxMbgPgwSuccSessnsEst, jnxMbgPgwApnSMClRateStatsTable=jnxMbgPgwApnSMClRateStatsTable, jnxMbgPgwGyOcsInitSessDeact=jnxMbgPgwGyOcsInitSessDeact, jnxMbgPgwSMAlarmState=jnxMbgPgwSMAlarmState, jnxMbgPgwGtpStatsGnS5S8OutPkt=jnxMbgPgwGtpStatsGnS5S8OutPkt, jnxMbgPgwAPNMMGatewayName=jnxMbgPgwAPNMMGatewayName, jnxMbgPgwApnMsDedBrActAttempt=jnxMbgPgwApnMsDedBrActAttempt, jnxMbgPgwGtpStatsGiInpPkt=jnxMbgPgwGtpStatsGiInpPkt, jnxMbgPgwQosBrThreshStatusHi=jnxMbgPgwQosBrThreshStatusHi, jnxMbgPgwApnMSInitModAttmpts=jnxMbgPgwApnMSInitModAttmpts, jnxMbgPgwApnPcrfInitSessTerm=jnxMbgPgwApnPcrfInitSessTerm, jnxMbgPgwInterRatHoSucc=jnxMbgPgwInterRatHoSucc, jnxMbgPgwApnSMStatsTable=jnxMbgPgwApnSMStatsTable, jnxMbgPgwApnGxCcrUSent=jnxMbgPgwApnGxCcrUSent, jnxMbgPgwQosThreshold2Status=jnxMbgPgwQosThreshold2Status, jnxMbgPgwApnIpv6NaTxd=jnxMbgPgwApnIpv6NaTxd, jnxMbgPgwApnMsInitSessModTftChg=jnxMbgPgwApnMsInitSessModTftChg, jnxMbgPgwSMAlarmThrshld=jnxMbgPgwSMAlarmThrshld, jnxMbgPgwApnNGbrDedBrCrtFailCAC=jnxMbgPgwApnNGbrDedBrCrtFailCAC, jnxMbgPgwApnSessModTrgrRsrAlloc=jnxMbgPgwApnSessModTrgrRsrAlloc, jnxMbgPgwApnGxMsInitSessTerm=jnxMbgPgwApnGxMsInitSessTerm, jnxMbgPgwApnUsrAuthAttmpts=jnxMbgPgwApnUsrAuthAttmpts, jnxMbgPgwApnGyCcrUSent=jnxMbgPgwApnGyCcrUSent, jnxMbgPgwSpicName=jnxMbgPgwSpicName, jnxMbgPgwGtpStatsGnS5S8OutByt=jnxMbgPgwGtpStatsGnS5S8OutByt, jnxMbgPgwApnPccRuleEnforceFail=jnxMbgPgwApnPccRuleEnforceFail, jnxMbgPgwApnSessnFailSysFailure=jnxMbgPgwApnSessnFailSysFailure, jnxMbgPgwSpicActvNonGbrBearers=jnxMbgPgwSpicActvNonGbrBearers, jnxMbgPgwApnGxCcrRejUknSess=jnxMbgPgwApnGxCcrRejUknSess, jnxMbgPgwApnGxRarRcvd=jnxMbgPgwApnGxRarRcvd, jnxMbgPgwStatus=jnxMbgPgwStatus, jnxMbgPgwApnIpv6RaTxd=jnxMbgPgwApnIpv6RaTxd, jnxMbgPgwApnSuccPgwGgsnInitMod=jnxMbgPgwApnSuccPgwGgsnInitMod, jnxMbgPgwApnGtpStatsGnS5S8InpByt=jnxMbgPgwApnGtpStatsGnS5S8InpByt, jnxMbgPgwSMStatusTable=jnxMbgPgwSMStatusTable, jnxMbgPgwApnGyMsInitSessDeact=jnxMbgPgwApnGyMsInitSessDeact, jnxMbgPgwGxPcrfInitMod=jnxMbgPgwGxPcrfInitMod, jnxMbgPgwCdrsAllocd=jnxMbgPgwCdrsAllocd, jnxMbgPgwGySuccReauth=jnxMbgPgwGySuccReauth, jnxMbgPgwSMNotifications=jnxMbgPgwSMNotifications, jnxMbgPgwIdleBearers=jnxMbgPgwIdleBearers)
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SM-MIB", jnxMbgPgwSessnFailedNoAddr=jnxMbgPgwSessnFailedNoAddr, jnxMbgPgwApnGtpStatsGiInpByt=jnxMbgPgwApnGtpStatsGiInpByt, jnxMbgPgwApnOnlineAuthTimeout=jnxMbgPgwApnOnlineAuthTimeout, jnxMbgPgwGtpErrLenPkts=jnxMbgPgwGtpErrLenPkts, jnxMbgPgwSMSubscribersThresGblNotif=jnxMbgPgwSMSubscribersThresGblNotif, jnxMbgPgwApnInterRatHoAttempt=jnxMbgPgwApnInterRatHoAttempt, jnxMbgPgwPeerInitSuccDeactv=jnxMbgPgwPeerInitSuccDeactv, jnxMbgPgwSessEstDynPolAttempt=jnxMbgPgwSessEstDynPolAttempt, jnxMbgPgwAPFEMMStateChange=jnxMbgPgwAPFEMMStateChange, jnxMbgPgwApnMsInitAmbrModReq=jnxMbgPgwApnMsInitAmbrModReq, jnxMbgPgwAPNName=jnxMbgPgwAPNName, jnxMbgPgwApnNwDedBrModAttempt=jnxMbgPgwApnNwDedBrModAttempt, jnxMbgPgwApnGxRaaSent=jnxMbgPgwApnGxRaaSent, jnxMbgPgwApnSessModTrgrUliChg=jnxMbgPgwApnSessModTrgrUliChg, jnxMbgPgwApnActvSessions=jnxMbgPgwApnActvSessions, jnxMbgPgwSuccSessEstDynPol=jnxMbgPgwSuccSessEstDynPol, jnxMbgPgwApnReDrctMblToMblByts=jnxMbgPgwApnReDrctMblToMblByts, jnxMbgPgwApnSessModTrgrSgsnChg=jnxMbgPgwApnSessModTrgrSgsnChg, jnxMbgPgwApnPccDynRuleDeact=jnxMbgPgwApnPccDynRuleDeact, jnxMbgPgwSessnFailedAccessDenied=jnxMbgPgwSessnFailedAccessDenied, jnxMbgPgwApnGtpStatsGnS5S8OutPkt=jnxMbgPgwApnGtpStatsGnS5S8OutPkt, jnxMbgPgwSMSessionEstFailThresPerQCINotif=jnxMbgPgwSMSessionEstFailThresPerQCINotif, jnxMbgPgwMsInitDedBrModAttempt=jnxMbgPgwMsInitDedBrModAttempt, jnxMbgPgwAPNStatsTableEntry=jnxMbgPgwAPNStatsTableEntry, jnxMbgPgwApnSuccGwRedirect=jnxMbgPgwApnSuccGwRedirect, jnxMbgPgwApnSessnFailOther=jnxMbgPgwApnSessnFailOther, jnxMbgPgwCdrCntainrsClosed=jnxMbgPgwCdrCntainrsClosed, jnxMbgPgwApnGwAttemptedRedirect=jnxMbgPgwApnGwAttemptedRedirect, jnxMbgPgwApnSessModAmbrChg=jnxMbgPgwApnSessModAmbrChg, jnxMbgPgwMemoryUtilization=jnxMbgPgwMemoryUtilization, jnxMbgPgwSpicActvSessions=jnxMbgPgwSpicActvSessions, jnxMbgPgwApnGyAuthTimeout=jnxMbgPgwApnGyAuthTimeout, jnxMbgPgwMsInitModAttempt=jnxMbgPgwMsInitModAttempt, jnxMbgPgwGtpStatsGiOutByt=jnxMbgPgwGtpStatsGiOutByt, jnxMbgPgwGxSuccPcrfInitMod=jnxMbgPgwGxSuccPcrfInitMod, jnxMbgPgwApnIpv6NsRcvd=jnxMbgPgwApnIpv6NsRcvd, jnxMbgPgwApnPccRuleValidnFail=jnxMbgPgwApnPccRuleValidnFail, jnxMbgPgwNwInitDedBrActAttempt=jnxMbgPgwNwInitDedBrActAttempt, jnxMbgPgwSuspSessions=jnxMbgPgwSuspSessions, jnxMbgPgwActvPostpaidBearers=jnxMbgPgwActvPostpaidBearers, jnxMbgPgwApnGyCcaTSucc=jnxMbgPgwApnGyCcaTSucc, jnxMbgPgwApnGxCcrISent=jnxMbgPgwApnGxCcrISent, jnxMbgPgwApnInterRatHoSucc=jnxMbgPgwApnInterRatHoSucc, jnxMbgPgwClRateSuccSessnDel=jnxMbgPgwClRateSuccSessnDel, jnxMbgPgwGyReauthAttempt=jnxMbgPgwGyReauthAttempt, jnxMbgPgwSuccNwInitDedBrAct=jnxMbgPgwSuccNwInitDedBrAct, jnxMbgPgwApnCRName=jnxMbgPgwApnCRName, jnxMbgPgwPcrfInitDedBrDeact=jnxMbgPgwPcrfInitDedBrDeact, jnxMbgPgwApnPartialCdrsAllocd=jnxMbgPgwApnPartialCdrsAllocd, jnxMbgPgwApnGbrDedBrCrtFailCAC=jnxMbgPgwApnGbrDedBrCrtFailCAC, jnxMbgPgwApnGyCcrTSent=jnxMbgPgwApnGyCcrTSent, jnxMbgPgwApnGySessEstAttempt=jnxMbgPgwApnGySessEstAttempt, jnxMbgPgwApnName=jnxMbgPgwApnName, jnxMbgPgwIntraRatHoAttempt=jnxMbgPgwIntraRatHoAttempt, jnxMbgPgwQosCPUThresholdStatus=jnxMbgPgwQosCPUThresholdStatus, jnxMbgPgwApnMsDedBrModSucc=jnxMbgPgwApnMsDedBrModSucc, jnxMbgPgwApnGtpStatsGnS5S8OutByt=jnxMbgPgwApnGtpStatsGnS5S8OutByt, jnxMbgPgwApnMsInitQoSModReq=jnxMbgPgwApnMsInitQoSModReq, jnxMbgPgwApnGxCcrRejTransntFail=jnxMbgPgwApnGxCcrRejTransntFail, jnxMbgPgwApnSessnFailSrvcUnaval=jnxMbgPgwApnSessnFailSrvcUnaval, jnxMbgPgwApnGxCcaIRcvd=jnxMbgPgwApnGxCcaIRcvd, jnxMbgPgwGtpStatsGnS5S8InpPkt=jnxMbgPgwGtpStatsGnS5S8InpPkt, jnxMbgPgwApnSMClRateStatsEntry=jnxMbgPgwApnSMClRateStatsEntry, jnxMbgPgwSessnFailedSysFailure=jnxMbgPgwSessnFailedSysFailure, jnxMbgPgwApnGtpStatsGiOutByt=jnxMbgPgwApnGtpStatsGiOutByt, jnxMbgPgwSpicCPUUtil=jnxMbgPgwSpicCPUUtil, jnxMbgPgwApnGwInitSuccDeactv=jnxMbgPgwApnGwInitSuccDeactv, jnxMbgPgwSuccMsInitDedBrMod=jnxMbgPgwSuccMsInitDedBrMod, jnxMbgPgwApnGtpStatsS58DscrdPkts=jnxMbgPgwApnGtpStatsS58DscrdPkts, jnxMbgPgwClRateStatsGnInpByt=jnxMbgPgwClRateStatsGnInpByt, jnxMbgPgwQosCPUThreshStatusClear=jnxMbgPgwQosCPUThreshStatusClear, jnxMbgPgwApnSessModDefQosChg=jnxMbgPgwApnSessModDefQosChg, jnxMbgPgwApnPcrfInitSessModSucc=jnxMbgPgwApnPcrfInitSessModSucc, jnxMbgPgwActiveSubscribers=jnxMbgPgwActiveSubscribers, jnxMbgPgwQosMemThreshStatusClear=jnxMbgPgwQosMemThreshStatusClear, jnxMbgPgwGxSuccMsInitMod=jnxMbgPgwGxSuccMsInitMod, jnxMbgPgwApnGyReauthAttempt=jnxMbgPgwApnGyReauthAttempt, jnxMbgPgwApnGyAbortSessAnsSent=jnxMbgPgwApnGyAbortSessAnsSent, jnxMbgPgwApnIpv6RsRcvd=jnxMbgPgwApnIpv6RsRcvd, jnxMbgPgwApnPccRuleStaticDeact=jnxMbgPgwApnPccRuleStaticDeact, jnxMbgPgwApnGxSuccPcrfInitMod=jnxMbgPgwApnGxSuccPcrfInitMod, jnxMbgPgwGxMsInitMod=jnxMbgPgwGxMsInitMod, jnxMbgPgwGtpStatsGiDiscrdPkts=jnxMbgPgwGtpStatsGiDiscrdPkts, jnxMbgPgwAPNQosBearersThreStatus=jnxMbgPgwAPNQosBearersThreStatus, jnxMbgPgwApnPccActiveDynRules=jnxMbgPgwApnPccActiveDynRules, jnxMbgPgwSubscriberManagerMib=jnxMbgPgwSubscriberManagerMib, jnxMbgPgwApnSuccApnRedirect=jnxMbgPgwApnSuccApnRedirect, jnxMbgPgwSrcAddrViolationPkts=jnxMbgPgwSrcAddrViolationPkts, jnxMbgPgwSMSessionEstFailThresPerSPNotif=jnxMbgPgwSMSessionEstFailThresPerSPNotif, jnxMbgPgwApnSessnFailNoAddr=jnxMbgPgwApnSessnFailNoAddr, jnxMbgPgwApnGySuccReauth=jnxMbgPgwApnGySuccReauth, jnxMbgPgwMMGatewayName=jnxMbgPgwMMGatewayName, jnxMbgPgwSuccGWInitSessnDeact=jnxMbgPgwSuccGWInitSessnDeact, jnxMbgPgwAPNStatsTable=jnxMbgPgwAPNStatsTable, jnxMbgPgwApnGyCcrRejInitlParErr=jnxMbgPgwApnGyCcrRejInitlParErr, jnxMbgPgwSMClRateStatsTable=jnxMbgPgwSMClRateStatsTable, jnxMbgPgwQosCPUThreshStatusLow=jnxMbgPgwQosCPUThreshStatusLow, jnxMbgPgwApnSessModTrgrRatChg=jnxMbgPgwApnSessModTrgrRatChg, jnxMbgPgwApnCROnlineRarSucc=jnxMbgPgwApnCROnlineRarSucc, jnxMbgPgwApnCRPrepaidBrAct=jnxMbgPgwApnCRPrepaidBrAct, jnxMbgPgwQosThreshold1Status=jnxMbgPgwQosThreshold1Status, jnxMbgPgwSMGtpEvntNotif=jnxMbgPgwSMGtpEvntNotif, jnxMbgPgwMsInitDedBrDeact=jnxMbgPgwMsInitDedBrDeact, jnxMbgPgwGxMsInitSessTerm=jnxMbgPgwGxMsInitSessTerm, jnxMbgPgwGwInitDedBrDeact=jnxMbgPgwGwInitDedBrDeact, jnxMbgPgwApnGyRaaSent=jnxMbgPgwApnGyRaaSent, jnxMbgPgwApnIntraRatHoAttempt=jnxMbgPgwApnIntraRatHoAttempt, jnxMbgPgwSpicStatusName=jnxMbgPgwSpicStatusName, jnxMbgPgwIdleSessions=jnxMbgPgwIdleSessions, jnxMbgPgwApnOnlineQuotaThdUpdReq=jnxMbgPgwApnOnlineQuotaThdUpdReq, jnxMbgPgwGtpStatsS58DscrdPkts=jnxMbgPgwGtpStatsS58DscrdPkts, jnxMbgPgwApnGxCcrRejUknCode=jnxMbgPgwApnGxCcrRejUknCode, jnxMbgPgwCdrsClosed=jnxMbgPgwCdrsClosed, jnxMbgPgwGWInitSessnDeact=jnxMbgPgwGWInitSessnDeact, jnxMbgPgwIdleSubscribers=jnxMbgPgwIdleSubscribers, jnxMbgPgwApnNwDedBrActAttempt=jnxMbgPgwApnNwDedBrActAttempt, jnxMbgPgwSMSessionEstFailReason=jnxMbgPgwSMSessionEstFailReason, jnxMbgPgwIntraRatHoSucc=jnxMbgPgwIntraRatHoSucc, jnxMbgPgwApnMsDedBrActSucc=jnxMbgPgwApnMsDedBrActSucc, jnxMbgPgwClRateIntervalMin=jnxMbgPgwClRateIntervalMin)
