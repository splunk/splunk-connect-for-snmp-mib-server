#
# PySNMP MIB module PDN-CP-IWF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-CP-IWF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
pdnCpIwf, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdnCpIwf")
SwitchState, = mibBuilder.importSymbols("PDN-TC", "SwitchState")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, ModuleIdentity, TimeTicks, Counter32, IpAddress, iso, Integer32, NotificationType, Bits, Counter64, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "ModuleIdentity", "TimeTicks", "Counter32", "IpAddress", "iso", "Integer32", "NotificationType", "Bits", "Counter64", "MibIdentifier", "Unsigned32")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
pdnCpIwfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1))
pdnCpIwfMIB.setRevisions(('2004-12-02 17:00', '2004-10-07 11:00', '2004-08-30 11:00', '2004-07-15 00:00', '2004-03-22 00:00',))
if mibBuilder.loadTexts: pdnCpIwfMIB.setLastUpdated('200412021700Z')
if mibBuilder.loadTexts: pdnCpIwfMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
pdnCpIwfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 0))
pdnCpIwfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1))
pdnCpIwfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2))
pdnCpIwfConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1))
pdnCpIwfTestObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2))
pdnCpIwfStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3))
class CpIwfRegion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("usa", 1), ("canada", 2))

class GatewayProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("lescas", 1), ("voiceband", 2), ("mgcp", 3), ("sip", 4))

class HookState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("onhook", 1), ("offhook", 2), ("ringground", 3))

class PotsSignaling(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("loopstart", 1), ("groundstart", 2))

class ControlProtocol(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("cas", 0), ("eoc", 1), ("ccselcp", 2))

class VoiceEncoding(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("g711", 0), ("g726", 1), ("g729", 2))

class PdnPotsTestTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noTest", 1), ("loopback", 2), ("ringsignal", 3))

pdnCpIwfTotalNumber = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfTotalNumber.setStatus('current')
pdnCpIwfIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfIndexNext.setStatus('current')
pdnCpIwfRegion = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 3), CpIwfRegion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnCpIwfRegion.setStatus('current')
pdnCpIwfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4), )
if mibBuilder.loadTexts: pdnCpIwfTable.setStatus('current')
pdnCpIwfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1), ).setIndexNames((0, "PDN-CP-IWF-MIB", "pdnCpIwfIndex"))
if mibBuilder.loadTexts: pdnCpIwfEntry.setStatus('current')
pdnCpIwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pdnCpIwfIndex.setStatus('current')
pdnCpIwfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfIfIndex.setStatus('current')
pdnCpIwfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnCpIwfRowStatus.setStatus('current')
pdnCpIwfNumPotsAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfNumPotsAssigned.setStatus('current')
pdnCpIwfGatewayProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 5), GatewayProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pdnCpIwfGatewayProtocol.setStatus('current')
pdnCpIwfAtmBLESCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 6), ControlProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAtmBLESCapability.setStatus('current')
pdnCpIwfSscsPredefinedProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnCpIwfSscsPredefinedProfile.setStatus('current')
pdnCpIwfJitterBufferLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120))).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnCpIwfJitterBufferLength.setStatus('current')
pdnCpIwfMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 5), )
if mibBuilder.loadTexts: pdnCpIwfMappingTable.setStatus('current')
pdnCpIwfMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnCpIwfMappingEntry.setStatus('current')
pdnCpIwfMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfMappingIndex.setStatus('current')
pdnPotsPortTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6), )
if mibBuilder.loadTexts: pdnPotsPortTable.setStatus('current')
pdnPotsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1), ).setIndexNames((0, "PDN-CP-IWF-MIB", "pdnPotsPortIfIndex"))
if mibBuilder.loadTexts: pdnPotsPortEntry.setStatus('current')
pdnPotsPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: pdnPotsPortIfIndex.setStatus('current')
pdnPotsPortCpIwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortCpIwfIndex.setStatus('current')
pdnPotsPortHookStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 3), HookState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortHookStatus.setStatus('current')
pdnPotsPortSignalingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 4), PotsSignaling()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortSignalingMethod.setStatus('current')
pdnPotsPortTxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-24, 23))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortTxGain.setStatus('current')
pdnPotsPortRxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-24, 23))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortRxGain.setStatus('current')
pdnPotsPortCustInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortCustInfo.setStatus('current')
pdnPotsPortG729VoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 8), SwitchState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortG729VoiceCodec.setStatus('current')
pdnPotsPortPreferedVoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 9), VoiceEncoding()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortPreferedVoiceCodec.setStatus('current')
pdnPotsPortPreferredPacketPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortPreferredPacketPeriod.setStatus('current')
pdnPotsPortSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 11), SwitchState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortSilenceSuppression.setStatus('current')
pdnPotsPortActualVoiceCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 12), VoiceEncoding()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortActualVoiceCodec.setStatus('current')
pdnPotsPortCallElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortCallElapsedTime.setStatus('current')
pdnPotsPortModemDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortModemDetected.setStatus('current')
pdnPotsPortEchoCanceller = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortEchoCanceller.setStatus('current')
pdnPotsPortLocalEndName = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsPortLocalEndName.setStatus('current')
pdnPotsPortActiveSoftswitch = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 1, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortActiveSoftswitch.setStatus('current')
pdnCpIwfAal2StatsTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1), )
if mibBuilder.loadTexts: pdnCpIwfAal2StatsTable.setStatus('current')
pdnCpIwfAal2StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnCpIwfAal2StatsEntry.setStatus('current')
pdnCpIwfAal2CpsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsRxPkts.setStatus('current')
pdnCpIwfAal2CpsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsTxPkts.setStatus('current')
pdnCpIwfAal2CpsParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsParityErrors.setStatus('current')
pdnCpIwfAal2CpsSeqNumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsSeqNumErrors.setStatus('current')
pdnCpIwfAal2CpsOsfMismatchErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfMismatchErrors.setStatus('current')
pdnCpIwfAal2CpsOsfErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOsfErrors.setStatus('current')
pdnCpIwfAal2CpsHecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecErrors.setStatus('current')
pdnCpIwfAal2CpsOversizeSduErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsOversizeSduErrors.setStatus('current')
pdnCpIwfAal2CpsReassemblyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsReassemblyErrors.setStatus('current')
pdnCpIwfAal2CpsHecOverlapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsHecOverlapErrors.setStatus('current')
pdnCpIwfAal2CpsUuiErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsUuiErrors.setStatus('current')
pdnCpIwfAal2CpsCidErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnCpIwfAal2CpsCidErrors.setStatus('current')
pdnPotsPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2), )
if mibBuilder.loadTexts: pdnPotsPortStatsTable.setStatus('current')
pdnPotsPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnPotsPortStatsEntry.setStatus('current')
pdnPotsPortTotalCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortTotalCalls.setStatus('current')
pdnPotsPortTotalCallsFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortTotalCallsFailure.setStatus('current')
pdnPotsPortTotalCallsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortTotalCallsDropped.setStatus('current')
pdnPotsPortInCallsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsReceived.setStatus('current')
pdnPotsPortInCallsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsAnswered.setStatus('current')
pdnPotsPortInCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsConnected.setStatus('current')
pdnPotsPortInCallsFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortInCallsFailure.setStatus('current')
pdnPotsPortOutCallsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsAttempted.setStatus('current')
pdnPotsPortOutCallsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsAnswered.setStatus('current')
pdnPotsPortOutCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsConnected.setStatus('current')
pdnPotsPortOutCallsFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortOutCallsFailure.setStatus('current')
pdnPotsPortPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortPacketsSent.setStatus('current')
pdnPotsPortPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortPacketsReceived.setStatus('current')
pdnPotsPortPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortPacketsLost.setStatus('current')
pdnPotsPortBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortBytesSent.setStatus('current')
pdnPotsPortBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsPortBytesReceived.setStatus('current')
pdnPotsTestTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1), )
if mibBuilder.loadTexts: pdnPotsTestTable.setStatus('current')
pdnPotsTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnPotsTestEntry.setStatus('current')
pdnPotsTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1, 1), PdnPotsTestTypes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsTestType.setStatus('current')
pdnPotsTestCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noOp", 1), ("start", 2), ("stop", 3), ("keepAlive", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnPotsTestCmd.setStatus('current')
pdnPotsTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnPotsTestStatus.setStatus('current')
pdnCpIwfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1))
pdnCpIwfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2))
pdnCpIwfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1, 1)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfGeneralConfigGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortConfigGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2StatsGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfMIBCompliance = pdnCpIwfMIBCompliance.setStatus('deprecated')
pdnCpIwfMIBComplianceV2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1, 2)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfGeneralConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfIADConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2StatsGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortStatsGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortTestGroupV2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfMIBComplianceV2 = pdnCpIwfMIBComplianceV2.setStatus('deprecated')
pdnCpIwfMIBComplianceV3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 1, 3)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfGeneralConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfIADConfigGroupV3"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2StatsGroup"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortStatsGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortConfigGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortTestGroupV2"), ("PDN-CP-IWF-MIB", "pdnCpIwfPotsPortPacketStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfMIBComplianceV3 = pdnCpIwfMIBComplianceV3.setStatus('current')
pdnCpIwfGeneralConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 1)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfTotalNumber"), ("PDN-CP-IWF-MIB", "pdnCpIwfIndexNext"), ("PDN-CP-IWF-MIB", "pdnCpIwfRegion"), ("PDN-CP-IWF-MIB", "pdnCpIwfIfIndex"), ("PDN-CP-IWF-MIB", "pdnCpIwfRowStatus"), ("PDN-CP-IWF-MIB", "pdnCpIwfNumPotsAssigned"), ("PDN-CP-IWF-MIB", "pdnCpIwfGatewayProtocol"), ("PDN-CP-IWF-MIB", "pdnCpIwfAtmBLESCapability"), ("PDN-CP-IWF-MIB", "pdnCpIwfSscsPredefinedProfile"), ("PDN-CP-IWF-MIB", "pdnCpIwfMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfGeneralConfigGroup = pdnCpIwfGeneralConfigGroup.setStatus('deprecated')
pdnCpIwfPotsPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 2)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortCpIwfIndex"), ("PDN-CP-IWF-MIB", "pdnPotsPortHookStatus"), ("PDN-CP-IWF-MIB", "pdnPotsPortSignalingMethod"), ("PDN-CP-IWF-MIB", "pdnPotsPortTxGain"), ("PDN-CP-IWF-MIB", "pdnPotsPortRxGain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortConfigGroup = pdnCpIwfPotsPortConfigGroup.setStatus('deprecated')
pdnCpIwfAal2StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 3)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsRxPkts"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsTxPkts"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsParityErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsSeqNumErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsOsfMismatchErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsOsfErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsHecErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsOversizeSduErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsReassemblyErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsHecOverlapErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsUuiErrors"), ("PDN-CP-IWF-MIB", "pdnCpIwfAal2CpsCidErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfAal2StatsGroup = pdnCpIwfAal2StatsGroup.setStatus('current')
pdnCpIwfPotsPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 4)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortTotalCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortStatsGroup = pdnCpIwfPotsPortStatsGroup.setStatus('deprecated')
pdnCpIwfGeneralConfigGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 5)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfTotalNumber"), ("PDN-CP-IWF-MIB", "pdnCpIwfIndexNext"), ("PDN-CP-IWF-MIB", "pdnCpIwfRegion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfGeneralConfigGroupV2 = pdnCpIwfGeneralConfigGroupV2.setStatus('current')
pdnCpIwfIADConfigGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 6)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfIfIndex"), ("PDN-CP-IWF-MIB", "pdnCpIwfRowStatus"), ("PDN-CP-IWF-MIB", "pdnCpIwfNumPotsAssigned"), ("PDN-CP-IWF-MIB", "pdnCpIwfGatewayProtocol"), ("PDN-CP-IWF-MIB", "pdnCpIwfAtmBLESCapability"), ("PDN-CP-IWF-MIB", "pdnCpIwfSscsPredefinedProfile"), ("PDN-CP-IWF-MIB", "pdnCpIwfMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfIADConfigGroupV2 = pdnCpIwfIADConfigGroupV2.setStatus('current')
pdnCpIwfPotsPortStatsGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 7)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortTotalCalls"), ("PDN-CP-IWF-MIB", "pdnPotsPortTotalCallsFailure"), ("PDN-CP-IWF-MIB", "pdnPotsPortTotalCallsDropped"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsReceived"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsAnswered"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsConnected"), ("PDN-CP-IWF-MIB", "pdnPotsPortInCallsFailure"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsAttempted"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsAnswered"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsConnected"), ("PDN-CP-IWF-MIB", "pdnPotsPortOutCallsFailure"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsReceived"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsLost"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortStatsGroupV2 = pdnCpIwfPotsPortStatsGroupV2.setStatus('current')
pdnCpIwfPotsPortConfigGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 8)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortCpIwfIndex"), ("PDN-CP-IWF-MIB", "pdnPotsPortHookStatus"), ("PDN-CP-IWF-MIB", "pdnPotsPortSignalingMethod"), ("PDN-CP-IWF-MIB", "pdnPotsPortTxGain"), ("PDN-CP-IWF-MIB", "pdnPotsPortRxGain"), ("PDN-CP-IWF-MIB", "pdnPotsPortCustInfo"), ("PDN-CP-IWF-MIB", "pdnPotsPortG729VoiceCodec"), ("PDN-CP-IWF-MIB", "pdnPotsPortPreferedVoiceCodec"), ("PDN-CP-IWF-MIB", "pdnPotsPortPreferredPacketPeriod"), ("PDN-CP-IWF-MIB", "pdnPotsPortSilenceSuppression"), ("PDN-CP-IWF-MIB", "pdnPotsPortActualVoiceCodec"), ("PDN-CP-IWF-MIB", "pdnPotsPortCallElapsedTime"), ("PDN-CP-IWF-MIB", "pdnPotsPortModemDetected"), ("PDN-CP-IWF-MIB", "pdnPotsPortEchoCanceller"), ("PDN-CP-IWF-MIB", "pdnPotsPortLocalEndName"), ("PDN-CP-IWF-MIB", "pdnPotsPortActiveSoftswitch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortConfigGroupV2 = pdnCpIwfPotsPortConfigGroupV2.setStatus('current')
pdnCpIwfPotsPortTestGroupV2 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 9)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsTestType"), ("PDN-CP-IWF-MIB", "pdnPotsTestCmd"), ("PDN-CP-IWF-MIB", "pdnPotsTestStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortTestGroupV2 = pdnCpIwfPotsPortTestGroupV2.setStatus('current')
pdnCpIwfIADConfigGroupV3 = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 10)).setObjects(("PDN-CP-IWF-MIB", "pdnCpIwfIfIndex"), ("PDN-CP-IWF-MIB", "pdnCpIwfRowStatus"), ("PDN-CP-IWF-MIB", "pdnCpIwfNumPotsAssigned"), ("PDN-CP-IWF-MIB", "pdnCpIwfGatewayProtocol"), ("PDN-CP-IWF-MIB", "pdnCpIwfAtmBLESCapability"), ("PDN-CP-IWF-MIB", "pdnCpIwfSscsPredefinedProfile"), ("PDN-CP-IWF-MIB", "pdnCpIwfJitterBufferLength"), ("PDN-CP-IWF-MIB", "pdnCpIwfMappingIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfIADConfigGroupV3 = pdnCpIwfIADConfigGroupV3.setStatus('current')
pdnCpIwfPotsPortPacketStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 50, 1, 2, 2, 11)).setObjects(("PDN-CP-IWF-MIB", "pdnPotsPortPacketsSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsReceived"), ("PDN-CP-IWF-MIB", "pdnPotsPortPacketsLost"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesSent"), ("PDN-CP-IWF-MIB", "pdnPotsPortBytesReceived"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnCpIwfPotsPortPacketStatsGroup = pdnCpIwfPotsPortPacketStatsGroup.setStatus('current')
mibBuilder.exportSymbols("PDN-CP-IWF-MIB", CpIwfRegion=CpIwfRegion, pdnCpIwfIndex=pdnCpIwfIndex, pdnPotsPortStatsTable=pdnPotsPortStatsTable, pdnCpIwfNumPotsAssigned=pdnCpIwfNumPotsAssigned, pdnPotsPortInCallsConnected=pdnPotsPortInCallsConnected, pdnCpIwfMIBGroups=pdnCpIwfMIBGroups, GatewayProtocol=GatewayProtocol, pdnPotsTestEntry=pdnPotsTestEntry, pdnCpIwfTable=pdnCpIwfTable, pdnCpIwfNotifications=pdnCpIwfNotifications, pdnCpIwfAal2StatsTable=pdnCpIwfAal2StatsTable, pdnPotsPortSignalingMethod=pdnPotsPortSignalingMethod, pdnCpIwfAal2CpsUuiErrors=pdnCpIwfAal2CpsUuiErrors, pdnCpIwfJitterBufferLength=pdnCpIwfJitterBufferLength, PYSNMP_MODULE_ID=pdnCpIwfMIB, pdnCpIwfPotsPortConfigGroupV2=pdnCpIwfPotsPortConfigGroupV2, pdnPotsPortOutCallsFailure=pdnPotsPortOutCallsFailure, pdnPotsPortEntry=pdnPotsPortEntry, pdnCpIwfMIBCompliances=pdnCpIwfMIBCompliances, pdnCpIwfAtmBLESCapability=pdnCpIwfAtmBLESCapability, pdnPotsPortPreferedVoiceCodec=pdnPotsPortPreferedVoiceCodec, pdnPotsPortInCallsFailure=pdnPotsPortInCallsFailure, pdnPotsPortLocalEndName=pdnPotsPortLocalEndName, pdnCpIwfMIBComplianceV3=pdnCpIwfMIBComplianceV3, pdnCpIwfStatsObjects=pdnCpIwfStatsObjects, pdnPotsPortTxGain=pdnPotsPortTxGain, pdnPotsPortBytesSent=pdnPotsPortBytesSent, ControlProtocol=ControlProtocol, pdnPotsPortOutCallsAttempted=pdnPotsPortOutCallsAttempted, pdnPotsPortTotalCalls=pdnPotsPortTotalCalls, pdnPotsPortOutCallsConnected=pdnPotsPortOutCallsConnected, pdnCpIwfPotsPortStatsGroupV2=pdnCpIwfPotsPortStatsGroupV2, pdnCpIwfRowStatus=pdnCpIwfRowStatus, pdnPotsPortTable=pdnPotsPortTable, HookState=HookState, pdnPotsPortBytesReceived=pdnPotsPortBytesReceived, pdnCpIwfTestObjects=pdnCpIwfTestObjects, pdnPotsTestType=pdnPotsTestType, pdnPotsPortStatsEntry=pdnPotsPortStatsEntry, pdnPotsPortTotalCallsFailure=pdnPotsPortTotalCallsFailure, pdnPotsPortModemDetected=pdnPotsPortModemDetected, pdnCpIwfMappingEntry=pdnCpIwfMappingEntry, pdnCpIwfRegion=pdnCpIwfRegion, pdnPotsPortEchoCanceller=pdnPotsPortEchoCanceller, pdnCpIwfGeneralConfigGroup=pdnCpIwfGeneralConfigGroup, pdnCpIwfPotsPortStatsGroup=pdnCpIwfPotsPortStatsGroup, pdnCpIwfAal2CpsOsfErrors=pdnCpIwfAal2CpsOsfErrors, pdnCpIwfAal2CpsParityErrors=pdnCpIwfAal2CpsParityErrors, pdnCpIwfMIB=pdnCpIwfMIB, pdnCpIwfIADConfigGroupV2=pdnCpIwfIADConfigGroupV2, pdnPotsPortActualVoiceCodec=pdnPotsPortActualVoiceCodec, pdnPotsPortOutCallsAnswered=pdnPotsPortOutCallsAnswered, pdnCpIwfAal2CpsOversizeSduErrors=pdnCpIwfAal2CpsOversizeSduErrors, pdnCpIwfAal2CpsReassemblyErrors=pdnCpIwfAal2CpsReassemblyErrors, pdnCpIwfTotalNumber=pdnCpIwfTotalNumber, pdnPotsPortActiveSoftswitch=pdnPotsPortActiveSoftswitch, pdnPotsPortPacketsLost=pdnPotsPortPacketsLost, pdnCpIwfPotsPortTestGroupV2=pdnCpIwfPotsPortTestGroupV2, pdnPotsPortSilenceSuppression=pdnPotsPortSilenceSuppression, pdnCpIwfMappingIndex=pdnCpIwfMappingIndex, pdnCpIwfAal2CpsHecOverlapErrors=pdnCpIwfAal2CpsHecOverlapErrors, pdnCpIwfSscsPredefinedProfile=pdnCpIwfSscsPredefinedProfile, pdnPotsPortPreferredPacketPeriod=pdnPotsPortPreferredPacketPeriod, pdnCpIwfPotsPortPacketStatsGroup=pdnCpIwfPotsPortPacketStatsGroup, pdnPotsPortIfIndex=pdnPotsPortIfIndex, pdnPotsPortTotalCallsDropped=pdnPotsPortTotalCallsDropped, pdnCpIwfMappingTable=pdnCpIwfMappingTable, pdnCpIwfConfigObjects=pdnCpIwfConfigObjects, pdnCpIwfGeneralConfigGroupV2=pdnCpIwfGeneralConfigGroupV2, PdnPotsTestTypes=PdnPotsTestTypes, pdnCpIwfEntry=pdnCpIwfEntry, pdnCpIwfAal2CpsSeqNumErrors=pdnCpIwfAal2CpsSeqNumErrors, pdnPotsPortCustInfo=pdnPotsPortCustInfo, pdnPotsTestTable=pdnPotsTestTable, pdnCpIwfGatewayProtocol=pdnCpIwfGatewayProtocol, pdnCpIwfAal2CpsHecErrors=pdnCpIwfAal2CpsHecErrors, PotsSignaling=PotsSignaling, pdnCpIwfAal2CpsOsfMismatchErrors=pdnCpIwfAal2CpsOsfMismatchErrors, pdnPotsPortInCallsReceived=pdnPotsPortInCallsReceived, pdnPotsPortHookStatus=pdnPotsPortHookStatus, pdnCpIwfMIBComplianceV2=pdnCpIwfMIBComplianceV2, pdnCpIwfIndexNext=pdnCpIwfIndexNext, pdnCpIwfAal2StatsGroup=pdnCpIwfAal2StatsGroup, pdnCpIwfAal2CpsTxPkts=pdnCpIwfAal2CpsTxPkts, pdnPotsTestStatus=pdnPotsTestStatus, pdnCpIwfMIBCompliance=pdnCpIwfMIBCompliance, pdnPotsPortPacketsReceived=pdnPotsPortPacketsReceived, pdnCpIwfIfIndex=pdnCpIwfIfIndex, pdnPotsPortCallElapsedTime=pdnPotsPortCallElapsedTime, pdnCpIwfPotsPortConfigGroup=pdnCpIwfPotsPortConfigGroup, pdnCpIwfMIBConformance=pdnCpIwfMIBConformance, VoiceEncoding=VoiceEncoding, pdnPotsPortPacketsSent=pdnPotsPortPacketsSent, pdnCpIwfAal2StatsEntry=pdnCpIwfAal2StatsEntry, pdnPotsPortG729VoiceCodec=pdnPotsPortG729VoiceCodec, pdnCpIwfMIBObjects=pdnCpIwfMIBObjects, pdnPotsPortInCallsAnswered=pdnPotsPortInCallsAnswered, pdnPotsTestCmd=pdnPotsTestCmd, pdnCpIwfAal2CpsRxPkts=pdnCpIwfAal2CpsRxPkts, pdnCpIwfAal2CpsCidErrors=pdnCpIwfAal2CpsCidErrors, pdnPotsPortRxGain=pdnPotsPortRxGain, pdnCpIwfIADConfigGroupV3=pdnCpIwfIADConfigGroupV3, pdnPotsPortCpIwfIndex=pdnPotsPortCpIwfIndex)
