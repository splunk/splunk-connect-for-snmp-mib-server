#
# PySNMP MIB module ATT-CNM-ENHANCED-FRAME-RELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATT-CNM-ENHANCED-FRAME-RELAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:15:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Unsigned32, iso, Gauge32, MibIdentifier, enterprises, IpAddress, NotificationType, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Unsigned32", "iso", "Gauge32", "MibIdentifier", "enterprises", "IpAddress", "NotificationType", "ModuleIdentity", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
att_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 74)).setLabel("att-2")
att_products = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1)).setLabel("att-products")
att_mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2)).setLabel("att-mgmt")
att_cnmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1, 9)).setLabel("att-cnmAgent")
att_cnm = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15)).setLabel("att-cnm")
att_cnm_efr = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15, 8)).setLabel("att-cnm-efr")
attCNMefrConfigTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1), )
if mibBuilder.loadTexts: attCNMefrConfigTable.setStatus('mandatory')
attCNMefrConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1), ).setIndexNames((0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrConfigIndex"))
if mibBuilder.loadTexts: attCNMefrConfigEntry.setStatus('mandatory')
attCNMefrConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrConfigIndex.setStatus('mandatory')
attCNMefrMgmtType = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto-set", 1), ("lmi", 2), ("ansi", 3), ("ccitt", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMgmtType.setStatus('mandatory')
attCNMefrPollDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("receive", 1), ("send", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPollDirection.setStatus('mandatory')
attCNMefrFullStatusPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrFullStatusPoll.setStatus('mandatory')
attCNMefrErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrErrorThreshold.setStatus('mandatory')
attCNMefrMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMonitoredEvents.setStatus('mandatory')
attCNMefrIntegrityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrIntegrityTimer.setStatus('mandatory')
attCNMefrPollVerifyTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPollVerifyTimer.setStatus('mandatory')
attCNMefrLMIFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lmiFlowControlOn", 1), ("lmiFlowControlOff", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrLMIFlowControl.setStatus('mandatory')
attCNMefrSupportedPVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrSupportedPVCs.setStatus('mandatory')
attCNMefrMeasMaxIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMeasMaxIntervals.setStatus('mandatory')
attCNMefrMeasIntervalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMeasIntervalLen.setStatus('mandatory')
attCNMefrMeasTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2), )
if mibBuilder.loadTexts: attCNMefrMeasTable.setStatus('mandatory')
attCNMefrMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1), ).setIndexNames((0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrMeasIndex"), (0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrMeasInterval"))
if mibBuilder.loadTexts: attCNMefrMeasEntry.setStatus('mandatory')
attCNMefrMeasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMeasIndex.setStatus('mandatory')
attCNMefrMeasInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMeasInterval.setStatus('mandatory')
attCNMefrMeasTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMeasTimeStamp.setStatus('mandatory')
attCNMefrMeasLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMeasLocalTime.setStatus('mandatory')
attCNMefrReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrReceivedOctets.setStatus('mandatory')
attCNMefrSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrSentOctets.setStatus('mandatory')
attCNMefrReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrReceivedFrames.setStatus('mandatory')
attCNMefrSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrSentFrames.setStatus('mandatory')
attCNMefrBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrBadFrames.setStatus('mandatory')
attCNMefrReceiverOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrReceiverOverruns.setStatus('mandatory')
attCNMefrIngressUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrIngressUtil.setStatus('mandatory')
attCNMefrEgressUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrEgressUtil.setStatus('mandatory')
attCNMefrPVCConfigTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3), )
if mibBuilder.loadTexts: attCNMefrPVCConfigTable.setStatus('mandatory')
attCNMefrPVCConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1), ).setIndexNames((0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCConfigIfIndex"), (0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCConfigIndex"))
if mibBuilder.loadTexts: attCNMefrPVCConfigEntry.setStatus('mandatory')
attCNMefrPVCConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCConfigIfIndex.setStatus('mandatory')
attCNMefrPVCConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCConfigIndex.setStatus('mandatory')
attCNMefrPVCServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCServiceType.setStatus('mandatory')
attCNMefrLocalCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrLocalCIR.setStatus('mandatory')
attCNMefrLocalCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrLocalCommittedBurst.setStatus('mandatory')
attCNMefrLocalExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrLocalExcessBurst.setStatus('mandatory')
attCNMefrRemoteCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrRemoteCIR.setStatus('mandatory')
attCNMefrRemoteCommittedBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrRemoteCommittedBurst.setStatus('mandatory')
attCNMefrRemoteExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrRemoteExcessBurst.setStatus('mandatory')
attCNMefrMulticastGroup1 = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMulticastGroup1.setStatus('mandatory')
attCNMefrMulticastGroup2 = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMulticastGroup2.setStatus('mandatory')
attCNMefrMulticastGroup3 = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMulticastGroup3.setStatus('mandatory')
attCNMefrMulticastGroup4 = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrMulticastGroup4.setStatus('mandatory')
attCNMefrPVCMeasMaxIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasMaxIntervals.setStatus('mandatory')
attCNMefrPVCMeasIntervalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasIntervalLen.setStatus('mandatory')
attCNMefrPVCMeasTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4), )
if mibBuilder.loadTexts: attCNMefrPVCMeasTable.setStatus('mandatory')
attCNMefrPVCMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1), ).setIndexNames((0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCMeasIfIndex"), (0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCMeasIndex"), (0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCMeasInterval"))
if mibBuilder.loadTexts: attCNMefrPVCMeasEntry.setStatus('mandatory')
attCNMefrPVCMeasIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasIfIndex.setStatus('mandatory')
attCNMefrPVCMeasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasIndex.setStatus('mandatory')
attCNMefrPVCMeasInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasInterval.setStatus('mandatory')
attCNMefrPVCMeasTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasTimeStamp.setStatus('mandatory')
attCNMefrPVCMeasLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCMeasLocalTime.setStatus('mandatory')
attCNMefrPVCReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCReceivedFrames.setStatus('mandatory')
attCNMefrPVCSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCSentFrames.setStatus('mandatory')
attCNMefrDiscardEligibilityFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrDiscardEligibilityFrames.setStatus('mandatory')
attCNMefrBurstSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrBurstSizeExceeded.setStatus('mandatory')
attCNMefrCongestionAtIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrCongestionAtIngress.setStatus('mandatory')
attCNMefrCongestionAtEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrCongestionAtEgress.setStatus('mandatory')
attCNMefrPVCStatusTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 5), )
if mibBuilder.loadTexts: attCNMefrPVCStatusTable.setStatus('mandatory')
attCNMefrPVCStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 5, 1), ).setIndexNames((0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCStatusIfIndex"), (0, "ATT-CNM-ENHANCED-FRAME-RELAY-MIB", "attCNMefrPVCStatusIndex"))
if mibBuilder.loadTexts: attCNMefrPVCStatusEntry.setStatus('mandatory')
attCNMefrPVCStatusIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCStatusIfIndex.setStatus('mandatory')
attCNMefrPVCStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCStatusIndex.setStatus('mandatory')
attCNMefrPVCAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCAdminStatus.setStatus('mandatory')
attCNMefrPVCOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMefrPVCOperStatus.setStatus('mandatory')
mibBuilder.exportSymbols("ATT-CNM-ENHANCED-FRAME-RELAY-MIB", attCNMefrSupportedPVCs=attCNMefrSupportedPVCs, attCNMefrMeasEntry=attCNMefrMeasEntry, attCNMefrPVCReceivedFrames=attCNMefrPVCReceivedFrames, attCNMefrPollVerifyTimer=attCNMefrPollVerifyTimer, attCNMefrPVCConfigEntry=attCNMefrPVCConfigEntry, attCNMefrPVCMeasIndex=attCNMefrPVCMeasIndex, attCNMefrMeasInterval=attCNMefrMeasInterval, attCNMefrPVCMeasTimeStamp=attCNMefrPVCMeasTimeStamp, attCNMefrReceivedOctets=attCNMefrReceivedOctets, attCNMefrBurstSizeExceeded=attCNMefrBurstSizeExceeded, att_cnmAgent=att_cnmAgent, attCNMefrConfigEntry=attCNMefrConfigEntry, attCNMefrPVCOperStatus=attCNMefrPVCOperStatus, attCNMefrPollDirection=attCNMefrPollDirection, attCNMefrMeasMaxIntervals=attCNMefrMeasMaxIntervals, attCNMefrPVCConfigIndex=attCNMefrPVCConfigIndex, attCNMefrPVCStatusEntry=attCNMefrPVCStatusEntry, attCNMefrEgressUtil=attCNMefrEgressUtil, attCNMefrLocalCIR=attCNMefrLocalCIR, att_mgmt=att_mgmt, attCNMefrPVCStatusTable=attCNMefrPVCStatusTable, att_cnm_efr=att_cnm_efr, attCNMefrIngressUtil=attCNMefrIngressUtil, attCNMefrErrorThreshold=attCNMefrErrorThreshold, attCNMefrFullStatusPoll=attCNMefrFullStatusPoll, attCNMefrPVCMeasIfIndex=attCNMefrPVCMeasIfIndex, attCNMefrMeasTimeStamp=attCNMefrMeasTimeStamp, attCNMefrMulticastGroup1=attCNMefrMulticastGroup1, attCNMefrMgmtType=attCNMefrMgmtType, att_2=att_2, attCNMefrLMIFlowControl=attCNMefrLMIFlowControl, attCNMefrPVCConfigTable=attCNMefrPVCConfigTable, attCNMefrPVCMeasIntervalLen=attCNMefrPVCMeasIntervalLen, attCNMefrSentFrames=attCNMefrSentFrames, attCNMefrBadFrames=attCNMefrBadFrames, attCNMefrCongestionAtEgress=attCNMefrCongestionAtEgress, attCNMefrIntegrityTimer=attCNMefrIntegrityTimer, attCNMefrConfigIndex=attCNMefrConfigIndex, att_cnm=att_cnm, attCNMefrPVCMeasMaxIntervals=attCNMefrPVCMeasMaxIntervals, att_products=att_products, attCNMefrLocalExcessBurst=attCNMefrLocalExcessBurst, attCNMefrPVCServiceType=attCNMefrPVCServiceType, attCNMefrPVCMeasEntry=attCNMefrPVCMeasEntry, attCNMefrPVCStatusIndex=attCNMefrPVCStatusIndex, attCNMefrPVCAdminStatus=attCNMefrPVCAdminStatus, attCNMefrMeasIntervalLen=attCNMefrMeasIntervalLen, attCNMefrRemoteCIR=attCNMefrRemoteCIR, attCNMefrRemoteExcessBurst=attCNMefrRemoteExcessBurst, attCNMefrSentOctets=attCNMefrSentOctets, attCNMefrPVCConfigIfIndex=attCNMefrPVCConfigIfIndex, attCNMefrMulticastGroup2=attCNMefrMulticastGroup2, attCNMefrPVCStatusIfIndex=attCNMefrPVCStatusIfIndex, attCNMefrMulticastGroup4=attCNMefrMulticastGroup4, attCNMefrConfigTable=attCNMefrConfigTable, attCNMefrMonitoredEvents=attCNMefrMonitoredEvents, attCNMefrMeasLocalTime=attCNMefrMeasLocalTime, attCNMefrMeasIndex=attCNMefrMeasIndex, attCNMefrReceivedFrames=attCNMefrReceivedFrames, attCNMefrRemoteCommittedBurst=attCNMefrRemoteCommittedBurst, attCNMefrReceiverOverruns=attCNMefrReceiverOverruns, attCNMefrPVCMeasTable=attCNMefrPVCMeasTable, attCNMefrPVCMeasLocalTime=attCNMefrPVCMeasLocalTime, attCNMefrPVCSentFrames=attCNMefrPVCSentFrames, attCNMefrMeasTable=attCNMefrMeasTable, attCNMefrCongestionAtIngress=attCNMefrCongestionAtIngress, attCNMefrDiscardEligibilityFrames=attCNMefrDiscardEligibilityFrames, attCNMefrMulticastGroup3=attCNMefrMulticastGroup3, attCNMefrPVCMeasInterval=attCNMefrPVCMeasInterval, attCNMefrLocalCommittedBurst=attCNMefrLocalCommittedBurst)
