#
# PySNMP MIB module HP-ICF-PIM6 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-PIM6
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
IANAipRouteProtocol, IANAipMRouteProtocol = mibBuilder.importSymbols("IANA-RTPROTO-MIB", "IANAipRouteProtocol", "IANAipMRouteProtocol")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
pimRPSetComponent, = mibBuilder.importSymbols("PIM-MIB", "pimRPSetComponent")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter32, Counter64, iso, ObjectIdentity, Gauge32, Bits, NotificationType, MibIdentifier, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter32", "Counter64", "iso", "ObjectIdentity", "Gauge32", "Bits", "NotificationType", "MibIdentifier", "Integer32", "ModuleIdentity")
DisplayString, RowStatus, TruthValue, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TimeStamp", "TextualConvention")
hpicfPim6MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122))
hpicfPim6MIB.setRevisions(('2017-10-10 00:00', '2017-07-03 00:00', '2012-04-12 00:00',))
if mibBuilder.loadTexts: hpicfPim6MIB.setLastUpdated('201710100000Z')
if mibBuilder.loadTexts: hpicfPim6MIB.setOrganization('HP Networking')
hpicfPim6Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1))
hpicfPim6Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 0))
hpicfPim6 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1))
hpicfPim6Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2))
hpicfPim6Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1))
hpicfPim6Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2))
hpicfPim6AdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6AdminStatus.setStatus('current')
hpicfPim6StateRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6StateRefreshInterval.setStatus('current')
hpicfPim6TrapControl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 3), Bits().clone(namedValues=NamedValues(("neighborLoss", 0), ("hardMrtFull", 1), ("softMrtFull", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6TrapControl.setStatus('current')
hpicfPim6IfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4), )
if mibBuilder.loadTexts: hpicfPim6IfTable.setStatus('current')
hpicfPim6IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1), ).setIndexNames((0, "HP-ICF-PIM6", "hpicfPim6IfIndex"))
if mibBuilder.loadTexts: hpicfPim6IfEntry.setStatus('current')
hpicfPim6IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfPim6IfIndex.setStatus('current')
hpicfPim6IfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfAddressType.setStatus('current')
hpicfPim6IfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfAddress.setStatus('current')
hpicfPim6IfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dense", 1), ("sparse", 2))).clone('dense')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfMode.setStatus('current')
hpicfPim6IfTrigHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfTrigHelloInterval.setStatus('current')
hpicfPim6IfHelloHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(105)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfHelloHoldtime.setStatus('current')
hpicfPim6IfLanPruneDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfLanPruneDelay.setStatus('current')
hpicfPim6IfPropagationDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(250, 2000)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfPropagationDelay.setStatus('current')
hpicfPim6IfOverrideInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 6000)).clone(2500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfOverrideInterval.setStatus('current')
hpicfPim6IfGenerationID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfGenerationID.setStatus('current')
hpicfPim6IfJoinPruneHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(210)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfJoinPruneHoldtime.setStatus('current')
hpicfPim6IfGraftRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfGraftRetryInterval.setStatus('current')
hpicfPim6IfMaxGraftRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfMaxGraftRetries.setStatus('current')
hpicfPim6IfSRTTLThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 14), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfSRTTLThreshold.setStatus('current')
hpicfPim6IfLanDelayEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfLanDelayEnabled.setStatus('current')
hpicfPim6IfSRCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfSRCapable.setStatus('current')
hpicfPim6IfNBRTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 8000)).clone(180)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfNBRTimeout.setStatus('current')
hpicfPim6IfNBRCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfNBRCount.setStatus('current')
hpicfPim6IfNegotiatedPropagationDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfNegotiatedPropagationDelay.setStatus('current')
hpicfPim6IfNegotiatedOverrideInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfNegotiatedOverrideInterval.setStatus('current')
hpicfPim6IfAssertHoldInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfAssertHoldInterval.setStatus('current')
hpicfPim6IfNumRoutersNotUsingLanDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfNumRoutersNotUsingLanDelay.setStatus('current')
hpicfPim6IfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfHelloInterval.setStatus('current')
hpicfPim6IfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 24), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfStatus.setStatus('current')
hpicfPim6IfDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 25), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfDRPriority.setStatus('current')
hpicfPim6IfDRType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 26), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6IfDRType.setStatus('current')
hpicfPim6IfDR = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 4, 1, 27), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IfDR.setStatus('current')
hpicfPim6RemoveConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6RemoveConfig.setStatus('current')
hpicfPim6NumStaticRpfEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NumStaticRpfEntries.setStatus('current')
hpicfPim6Version = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6Version.setStatus('current')
hpicfPim6StarGEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6StarGEntries.setStatus('current')
hpicfPim6SGEntries = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6SGEntries.setStatus('current')
hpicfPim6TotalNeighborCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6TotalNeighborCount.setStatus('current')
hpicfPim6JoinPruneInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 11), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6JoinPruneInterval.setStatus('current')
hpicfPim6StaticRPSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12), )
if mibBuilder.loadTexts: hpicfPim6StaticRPSetTable.setStatus('current')
hpicfPim6StaticRPSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1), ).setIndexNames((0, "PIM-MIB", "pimRPSetComponent"), (0, "HP-ICF-PIM6", "hpicfPim6StaticRPSetGrpAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6StaticRPSetGroupAddress"), (0, "HP-ICF-PIM6", "hpicfPim6StaticRPSetGrpMskType"), (0, "HP-ICF-PIM6", "hpicfPim6StaticRPSetGroupMask"), (0, "HP-ICF-PIM6", "hpicfPim6StaticRPSetAddressType"), (0, "HP-ICF-PIM6", "hpicfPim6StaticRPSetAddress"))
if mibBuilder.loadTexts: hpicfPim6StaticRPSetEntry.setStatus('current')
hpicfPim6StaticRPSetGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6StaticRPSetGrpAddrType.setStatus('current')
hpicfPim6StaticRPSetGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6StaticRPSetGroupAddress.setStatus('current')
hpicfPim6StaticRPSetGrpMskType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 3), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6StaticRPSetGrpMskType.setStatus('current')
hpicfPim6StaticRPSetGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6StaticRPSetGroupMask.setStatus('current')
hpicfPim6StaticRPSetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 5), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6StaticRPSetAddressType.setStatus('current')
hpicfPim6StaticRPSetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6StaticRPSetAddress.setStatus('current')
hpicfPim6StaticRPSetOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6StaticRPSetOverride.setStatus('current')
hpicfPim6StaticRPSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 12, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6StaticRPSetRowStatus.setStatus('current')
hpicfPim6CandidateRPTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13), )
if mibBuilder.loadTexts: hpicfPim6CandidateRPTable.setStatus('current')
hpicfPim6CandidateRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1), ).setIndexNames((0, "HP-ICF-PIM6", "hpicfPim6CandidateRPGrpAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6CandidateRPGroupAddress"), (0, "HP-ICF-PIM6", "hpicfPim6CandidateRPGrpMskType"), (0, "HP-ICF-PIM6", "hpicfPim6CandidateRPGroupMask"))
if mibBuilder.loadTexts: hpicfPim6CandidateRPEntry.setStatus('current')
hpicfPim6CandidateRPGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6CandidateRPGrpAddrType.setStatus('current')
hpicfPim6CandidateRPGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6CandidateRPGroupAddress.setStatus('current')
hpicfPim6CandidateRPGrpMskType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 3), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6CandidateRPGrpMskType.setStatus('current')
hpicfPim6CandidateRPGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6CandidateRPGroupMask.setStatus('current')
hpicfPim6CandidateRPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6CandidateRPAddressType.setStatus('current')
hpicfPim6CandidateRPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6CandidateRPAddress.setStatus('current')
hpicfPim6CandidateRPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 13, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6CandidateRPRowStatus.setStatus('current')
hpicfPim6ComponentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14), )
if mibBuilder.loadTexts: hpicfPim6ComponentTable.setStatus('current')
hpicfPim6ComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1), ).setIndexNames((0, "HP-ICF-PIM6", "hpicfPim6ComponentIndex"))
if mibBuilder.loadTexts: hpicfPim6ComponentEntry.setStatus('current')
hpicfPim6ComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hpicfPim6ComponentIndex.setStatus('current')
hpicfPim6ComponentBSRAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRAddrType.setStatus('current')
hpicfPim6ComponentBSRAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRAddress.setStatus('current')
hpicfPim6ComponentBSRExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRExpiryTime.setStatus('current')
hpicfPim6ComponentCRPHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCRPHoldTime.setStatus('current')
hpicfPim6ComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentStatus.setStatus('current')
hpicfPim6ComponentCBSRAdmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCBSRAdmStatus.setStatus('current')
hpicfPim6ComponentCBSRAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 8), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCBSRAddrType.setStatus('current')
hpicfPim6ComponentCBSRAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 9), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCBSRAddress.setStatus('current')
hpicfPim6ComponentCBSRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCBSRPriority.setStatus('current')
hpicfPim6ComponentCBSRHashMskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(126)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCBSRHashMskLen.setStatus('current')
hpicfPim6ComponentCBSRMsgInt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCBSRMsgInt.setStatus('current')
hpicfPim6ComponentCRPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(192)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfPim6ComponentCRPPriority.setStatus('current')
hpicfPim6ComponentCRPAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentCRPAdvInterval.setStatus('current')
hpicfPim6ComponentBSRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRPriority.setStatus('current')
hpicfPim6ComponentBSRHashMskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRHashMskLen.setStatus('current')
hpicfPim6ComponentBSRUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRUpTime.setStatus('current')
hpicfPim6ComponentBSRNextMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentBSRNextMessage.setStatus('current')
hpicfPim6ComponentCRPAdvTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 14, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6ComponentCRPAdvTimer.setStatus('current')
hpicfPim6SPTThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 15), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6SPTThreshold.setStatus('current')
hpicfPim6NeighborTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16), )
if mibBuilder.loadTexts: hpicfPim6NeighborTable.setStatus('current')
hpicfPim6NeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1), ).setIndexNames((0, "HP-ICF-PIM6", "hpicfPim6NeighborIfIndex"), (0, "HP-ICF-PIM6", "hpicfPim6NeighborAddressType"), (0, "HP-ICF-PIM6", "hpicfPim6NeighborAddress"))
if mibBuilder.loadTexts: hpicfPim6NeighborEntry.setStatus('current')
hpicfPim6NeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hpicfPim6NeighborIfIndex.setStatus('current')
hpicfPim6NeighborAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6NeighborAddressType.setStatus('current')
hpicfPim6NeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6NeighborAddress.setStatus('current')
hpicfPim6NeighborGenIDPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborGenIDPresent.setStatus('current')
hpicfPim6NeighborGenIDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborGenIDValue.setStatus('current')
hpicfPim6NeighborUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborUpTime.setStatus('current')
hpicfPim6NeighborExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborExpiryTime.setStatus('current')
hpicfPim6NeighborDRPrioPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborDRPrioPresent.setStatus('current')
hpicfPim6NeighborDRPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborDRPriority.setStatus('current')
hpicfPim6NeighborLanPruneDlyPres = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 16, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6NeighborLanPruneDlyPres.setStatus('current')
hpicfPim6RPSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17), )
if mibBuilder.loadTexts: hpicfPim6RPSetTable.setStatus('current')
hpicfPim6RPSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1), ).setIndexNames((0, "PIM-MIB", "pimRPSetComponent"), (0, "HP-ICF-PIM6", "hpicfPim6RPSetGroupAddressType"), (0, "HP-ICF-PIM6", "hpicfPim6RPSetGroupAddress"), (0, "HP-ICF-PIM6", "hpicfPim6RPSetGroupMaskType"), (0, "HP-ICF-PIM6", "hpicfPim6RPSetGroupMask"), (0, "HP-ICF-PIM6", "hpicfPim6RPSetAddressType"), (0, "HP-ICF-PIM6", "hpicfPim6RPSetAddress"))
if mibBuilder.loadTexts: hpicfPim6RPSetEntry.setStatus('current')
hpicfPim6RPSetGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6RPSetGroupAddressType.setStatus('current')
hpicfPim6RPSetGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6RPSetGroupAddress.setStatus('current')
hpicfPim6RPSetGroupMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 3), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6RPSetGroupMaskType.setStatus('current')
hpicfPim6RPSetGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6RPSetGroupMask.setStatus('current')
hpicfPim6RPSetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 5), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6RPSetAddressType.setStatus('current')
hpicfPim6RPSetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6RPSetAddress.setStatus('current')
hpicfPim6RPSetHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6RPSetHoldTime.setStatus('current')
hpicfPim6RPSetExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 17, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6RPSetExpiryTime.setStatus('current')
hpicfPim6IpMcastEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPim6IpMcastEnabled.setStatus('current')
hpicfPim6IpMcastRouteEntryCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMcastRouteEntryCount.setStatus('current')
hpicfPim6IpMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20), )
if mibBuilder.loadTexts: hpicfPim6IpMRouteTable.setStatus('current')
hpicfPim6IpMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1), ).setIndexNames((0, "HP-ICF-PIM6", "hpicfPim6IpMRouteGrpAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteGroup"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteGrpPrefixLen"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteSrcAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteSource"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteSrcPrefixLen"))
if mibBuilder.loadTexts: hpicfPim6IpMRouteEntry.setStatus('current')
hpicfPim6IpMRouteGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6IpMRouteGrpAddrType.setStatus('current')
hpicfPim6IpMRouteGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6IpMRouteGroup.setStatus('current')
hpicfPim6IpMRouteGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: hpicfPim6IpMRouteGrpPrefixLen.setStatus('current')
hpicfPim6IpMRouteSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 4), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6IpMRouteSrcAddrType.setStatus('current')
hpicfPim6IpMRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6IpMRouteSource.setStatus('current')
hpicfPim6IpMRouteSrcPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 6), InetAddressPrefixLength())
if mibBuilder.loadTexts: hpicfPim6IpMRouteSrcPrefixLen.setStatus('current')
hpicfPim6IpMRouteUpstrNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteUpstrNbrType.setStatus('current')
hpicfPim6IpMRouteUpstrNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteUpstrNbr.setStatus('current')
hpicfPim6IpMRouteInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteInIfIndex.setStatus('current')
hpicfPim6IpMRouteTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteTimeStamp.setStatus('current')
hpicfPim6IpMRouteExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteExpiryTime.setStatus('current')
hpicfPim6IpMRouteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 12), IANAipMRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteProtocol.setStatus('current')
hpicfPim6IpMRouteRtProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 13), IANAipRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteRtProtocol.setStatus('current')
hpicfPim6IpMRouteRtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteRtAddrType.setStatus('current')
hpicfPim6IpMRouteRtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteRtAddress.setStatus('current')
hpicfPim6IpMRouteRtPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 16), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteRtPrefixLen.setStatus('current')
hpicfPim6IpMRouteRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteRtType.setStatus('current')
hpicfPim6IpMRouteOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteOctets.setStatus('current')
hpicfPim6IpMRoutePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRoutePkts.setStatus('current')
hpicfPim6IpMRouteTtlDropOct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteTtlDropOct.setStatus('current')
hpicfPim6IpMRouteTtlDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteTtlDropPkts.setStatus('current')
hpicfPim6IpMRouteDiffInIfOct = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteDiffInIfOct.setStatus('current')
hpicfPim6IpMRouteDiffInIfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteDiffInIfPkts.setStatus('current')
hpicfPim6IpMRouteBps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 20, 1, 24), Counter64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteBps.setStatus('current')
hpicfPim6IpMRouteNHopTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21), )
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopTable.setStatus('current')
hpicfPim6IpMRouteNHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1), ).setIndexNames((0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopGrpAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopGroup"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopGrpPLen"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopSrcAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopSource"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopSrcPLen"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopIfIndex"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopAddrType"), (0, "HP-ICF-PIM6", "hpicfPim6IpMRouteNHopAddress"))
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopEntry.setStatus('current')
hpicfPim6IpMRouteNHopGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopGrpAddrType.setStatus('current')
hpicfPim6IpMRouteNHopGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopGroup.setStatus('current')
hpicfPim6IpMRouteNHopGrpPLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopGrpPLen.setStatus('current')
hpicfPim6IpMRouteNHopSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 4), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopSrcAddrType.setStatus('current')
hpicfPim6IpMRouteNHopSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopSource.setStatus('current')
hpicfPim6IpMRouteNHopSrcPLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 6), InetAddressPrefixLength())
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopSrcPLen.setStatus('current')
hpicfPim6IpMRouteNHopIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 7), InterfaceIndex())
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopIfIndex.setStatus('current')
hpicfPim6IpMRouteNHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 8), InetAddressType())
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopAddrType.setStatus('current')
hpicfPim6IpMRouteNHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopAddress.setStatus('current')
hpicfPim6IpMRouteNHopState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pruned", 1), ("forwarding", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopState.setStatus('current')
hpicfPim6IpMRouteNHopTStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopTStamp.setStatus('current')
hpicfPim6IpMRouteNHopExpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopExpTime.setStatus('current')
hpicfPim6IpMRouteNHopClsMHops = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopClsMHops.setStatus('current')
hpicfPim6IpMRouteNHopProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 14), IANAipMRouteProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopProtocol.setStatus('current')
hpicfPim6IpMRouteNHopOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopOctets.setStatus('current')
hpicfPim6IpMRouteNHopPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 1, 21, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPim6IpMRouteNHopPkts.setStatus('current')
hpicfPim6NeighborLoss = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 0, 1))
if mibBuilder.loadTexts: hpicfPim6NeighborLoss.setStatus('current')
hpicfPim6HardMRTFull = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 0, 2))
if mibBuilder.loadTexts: hpicfPim6HardMRTFull.setStatus('current')
hpicfPim6SoftMRTFull = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 1, 0, 3))
if mibBuilder.loadTexts: hpicfPim6SoftMRTFull.setStatus('current')
hpicfPim6DenseMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 1)).setObjects(("HP-ICF-PIM6", "hpicfPim6BaseGroup"), ("HP-ICF-PIM6", "hpicfPim6DenseIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6DenseMIBCompliance = hpicfPim6DenseMIBCompliance.setStatus('deprecated')
hpicfPim6UcastRoutingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 2)).setObjects(("HP-ICF-PIM6", "hpicfPim6StaticRpfExtensionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6UcastRoutingCompliance = hpicfPim6UcastRoutingCompliance.setStatus('current')
hpicfPim6GlobalCountersCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 3)).setObjects(("HP-ICF-PIM6", "hpicfPim6GlobalCounterGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6GlobalCountersCompliance = hpicfPim6GlobalCountersCompliance.setStatus('current')
hpicfPim6InterfaceInfoCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 4)).setObjects(("HP-ICF-PIM6", "hpicfPim6InterfaceExtensionsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6InterfaceInfoCompliance = hpicfPim6InterfaceInfoCompliance.setStatus('current')
hpicfPim6NotificationCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 5)).setObjects(("HP-ICF-PIM6", "hpicfPim6NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6NotificationCompliance = hpicfPim6NotificationCompliance.setStatus('current')
hpicfPim6SparseModeMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 6)).setObjects(("HP-ICF-PIM6", "hpicfPim6CommonGroup"), ("HP-ICF-PIM6", "hpicfPim6StaticRPSetGroup"), ("HP-ICF-PIM6", "hpicfPim6SparseIfGroup"), ("HP-ICF-PIM6", "hpicfPim6CandidateRPGroup"), ("HP-ICF-PIM6", "hpicfPim6ComponentGroup"), ("HP-ICF-PIM6", "hpicfPim6NeighborGroup"), ("HP-ICF-PIM6", "hpicfPim6RPSetGroup"), ("HP-ICF-PIM6", "hpicfPim6MRouteGroup"), ("HP-ICF-PIM6", "hpicfPim6MRouteNHopGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6SparseModeMIBCompliance = hpicfPim6SparseModeMIBCompliance.setStatus('current')
hpicfPim6DenseModeMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 2, 7)).setObjects(("HP-ICF-PIM6", "hpicfPim6CommonGroup"), ("HP-ICF-PIM6", "hpicfPim6DenseIfGroup"), ("HP-ICF-PIM6", "hpicfPim6MRouteGroup"), ("HP-ICF-PIM6", "hpicfPim6MRouteNHopGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6DenseModeMIBCompliance = hpicfPim6DenseModeMIBCompliance.setStatus('current')
hpicfPim6BaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 1)).setObjects(("HP-ICF-PIM6", "hpicfPim6AdminStatus"), ("HP-ICF-PIM6", "hpicfPim6StateRefreshInterval"), ("HP-ICF-PIM6", "hpicfPim6TrapControl"), ("HP-ICF-PIM6", "hpicfPim6JoinPruneInterval"), ("HP-ICF-PIM6", "hpicfPim6RemoveConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6BaseGroup = hpicfPim6BaseGroup.setStatus('deprecated')
hpicfPim6DenseIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 2)).setObjects(("HP-ICF-PIM6", "hpicfPim6IfAddressType"), ("HP-ICF-PIM6", "hpicfPim6IfAddress"), ("HP-ICF-PIM6", "hpicfPim6IfMode"), ("HP-ICF-PIM6", "hpicfPim6IfStatus"), ("HP-ICF-PIM6", "hpicfPim6IfTrigHelloInterval"), ("HP-ICF-PIM6", "hpicfPim6IfHelloInterval"), ("HP-ICF-PIM6", "hpicfPim6IfHelloHoldtime"), ("HP-ICF-PIM6", "hpicfPim6IfLanPruneDelay"), ("HP-ICF-PIM6", "hpicfPim6IfPropagationDelay"), ("HP-ICF-PIM6", "hpicfPim6IfOverrideInterval"), ("HP-ICF-PIM6", "hpicfPim6IfGenerationID"), ("HP-ICF-PIM6", "hpicfPim6IfJoinPruneHoldtime"), ("HP-ICF-PIM6", "hpicfPim6IfGraftRetryInterval"), ("HP-ICF-PIM6", "hpicfPim6IfMaxGraftRetries"), ("HP-ICF-PIM6", "hpicfPim6IfSRTTLThreshold"), ("HP-ICF-PIM6", "hpicfPim6IfLanDelayEnabled"), ("HP-ICF-PIM6", "hpicfPim6IfSRCapable"), ("HP-ICF-PIM6", "hpicfPim6IfNBRTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6DenseIfGroup = hpicfPim6DenseIfGroup.setStatus('current')
hpicfPim6InterfaceExtensionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 3)).setObjects(("HP-ICF-PIM6", "hpicfPim6Version"), ("HP-ICF-PIM6", "hpicfPim6IfNBRCount"), ("HP-ICF-PIM6", "hpicfPim6IfNegotiatedPropagationDelay"), ("HP-ICF-PIM6", "hpicfPim6IfNegotiatedOverrideInterval"), ("HP-ICF-PIM6", "hpicfPim6IfAssertHoldInterval"), ("HP-ICF-PIM6", "hpicfPim6IfNumRoutersNotUsingLanDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6InterfaceExtensionsGroup = hpicfPim6InterfaceExtensionsGroup.setStatus('current')
hpicfPim6StaticRpfExtensionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 4)).setObjects(("HP-ICF-PIM6", "hpicfPim6NumStaticRpfEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6StaticRpfExtensionsGroup = hpicfPim6StaticRpfExtensionsGroup.setStatus('current')
hpicfPim6GlobalCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 5)).setObjects(("HP-ICF-PIM6", "hpicfPim6StarGEntries"), ("HP-ICF-PIM6", "hpicfPim6SGEntries"), ("HP-ICF-PIM6", "hpicfPim6TotalNeighborCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6GlobalCounterGroup = hpicfPim6GlobalCounterGroup.setStatus('current')
hpicfPim6NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 6)).setObjects(("HP-ICF-PIM6", "hpicfPim6NeighborLoss"), ("HP-ICF-PIM6", "hpicfPim6HardMRTFull"), ("HP-ICF-PIM6", "hpicfPim6SoftMRTFull"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6NotificationGroup = hpicfPim6NotificationGroup.setStatus('current')
hpicfPim6StaticRPSetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 7)).setObjects(("HP-ICF-PIM6", "hpicfPim6StaticRPSetOverride"), ("HP-ICF-PIM6", "hpicfPim6StaticRPSetRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6StaticRPSetGroup = hpicfPim6StaticRPSetGroup.setStatus('current')
hpicfPim6CandidateRPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 8)).setObjects(("HP-ICF-PIM6", "hpicfPim6CandidateRPAddressType"), ("HP-ICF-PIM6", "hpicfPim6CandidateRPAddress"), ("HP-ICF-PIM6", "hpicfPim6CandidateRPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6CandidateRPGroup = hpicfPim6CandidateRPGroup.setStatus('current')
hpicfPim6ComponentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 9)).setObjects(("HP-ICF-PIM6", "hpicfPim6ComponentBSRAddrType"), ("HP-ICF-PIM6", "hpicfPim6ComponentBSRAddress"), ("HP-ICF-PIM6", "hpicfPim6ComponentBSRExpiryTime"), ("HP-ICF-PIM6", "hpicfPim6ComponentCRPHoldTime"), ("HP-ICF-PIM6", "hpicfPim6ComponentStatus"), ("HP-ICF-PIM6", "hpicfPim6ComponentCBSRAdmStatus"), ("HP-ICF-PIM6", "hpicfPim6ComponentCBSRAddrType"), ("HP-ICF-PIM6", "hpicfPim6ComponentCBSRAddress"), ("HP-ICF-PIM6", "hpicfPim6ComponentCBSRPriority"), ("HP-ICF-PIM6", "hpicfPim6ComponentCBSRHashMskLen"), ("HP-ICF-PIM6", "hpicfPim6ComponentCBSRMsgInt"), ("HP-ICF-PIM6", "hpicfPim6ComponentCRPPriority"), ("HP-ICF-PIM6", "hpicfPim6ComponentCRPAdvInterval"), ("HP-ICF-PIM6", "hpicfPim6ComponentBSRPriority"), ("HP-ICF-PIM6", "hpicfPim6ComponentBSRHashMskLen"), ("HP-ICF-PIM6", "hpicfPim6ComponentBSRUpTime"), ("HP-ICF-PIM6", "hpicfPim6ComponentBSRNextMessage"), ("HP-ICF-PIM6", "hpicfPim6ComponentCRPAdvTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6ComponentGroup = hpicfPim6ComponentGroup.setStatus('current')
hpicfPim6CommonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 10)).setObjects(("HP-ICF-PIM6", "hpicfPim6AdminStatus"), ("HP-ICF-PIM6", "hpicfPim6StateRefreshInterval"), ("HP-ICF-PIM6", "hpicfPim6TrapControl"), ("HP-ICF-PIM6", "hpicfPim6JoinPruneInterval"), ("HP-ICF-PIM6", "hpicfPim6RemoveConfig"), ("HP-ICF-PIM6", "hpicfPim6SPTThreshold"), ("HP-ICF-PIM6", "hpicfPim6IpMcastEnabled"), ("HP-ICF-PIM6", "hpicfPim6IpMcastRouteEntryCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6CommonGroup = hpicfPim6CommonGroup.setStatus('current')
hpicfPim6SparseIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 11)).setObjects(("HP-ICF-PIM6", "hpicfPim6IfAddressType"), ("HP-ICF-PIM6", "hpicfPim6IfAddress"), ("HP-ICF-PIM6", "hpicfPim6IfTrigHelloInterval"), ("HP-ICF-PIM6", "hpicfPim6IfHelloHoldtime"), ("HP-ICF-PIM6", "hpicfPim6IfLanPruneDelay"), ("HP-ICF-PIM6", "hpicfPim6IfPropagationDelay"), ("HP-ICF-PIM6", "hpicfPim6IfOverrideInterval"), ("HP-ICF-PIM6", "hpicfPim6IfGenerationID"), ("HP-ICF-PIM6", "hpicfPim6IfJoinPruneHoldtime"), ("HP-ICF-PIM6", "hpicfPim6IfLanDelayEnabled"), ("HP-ICF-PIM6", "hpicfPim6IfDRPriority"), ("HP-ICF-PIM6", "hpicfPim6IfNBRTimeout"), ("HP-ICF-PIM6", "hpicfPim6IfDRType"), ("HP-ICF-PIM6", "hpicfPim6IfDR"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6SparseIfGroup = hpicfPim6SparseIfGroup.setStatus('current')
hpicfPim6NeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 12)).setObjects(("HP-ICF-PIM6", "hpicfPim6NeighborGenIDPresent"), ("HP-ICF-PIM6", "hpicfPim6NeighborGenIDValue"), ("HP-ICF-PIM6", "hpicfPim6NeighborUpTime"), ("HP-ICF-PIM6", "hpicfPim6NeighborExpiryTime"), ("HP-ICF-PIM6", "hpicfPim6NeighborDRPrioPresent"), ("HP-ICF-PIM6", "hpicfPim6NeighborDRPriority"), ("HP-ICF-PIM6", "hpicfPim6NeighborLanPruneDlyPres"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6NeighborGroup = hpicfPim6NeighborGroup.setStatus('current')
hpicfPim6RPSetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 13)).setObjects(("HP-ICF-PIM6", "hpicfPim6RPSetHoldTime"), ("HP-ICF-PIM6", "hpicfPim6RPSetExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6RPSetGroup = hpicfPim6RPSetGroup.setStatus('current')
hpicfPim6MRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 14)).setObjects(("HP-ICF-PIM6", "hpicfPim6IpMRouteUpstrNbrType"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteUpstrNbr"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteInIfIndex"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteTimeStamp"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteExpiryTime"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteProtocol"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteRtProtocol"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteRtAddrType"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteRtAddress"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteRtPrefixLen"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteRtType"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteOctets"), ("HP-ICF-PIM6", "hpicfPim6IpMRoutePkts"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteTtlDropOct"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteTtlDropPkts"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteDiffInIfOct"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteDiffInIfPkts"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteBps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6MRouteGroup = hpicfPim6MRouteGroup.setStatus('current')
hpicfPim6MRouteNHopGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122, 2, 1, 15)).setObjects(("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopState"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopTStamp"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopExpTime"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopClsMHops"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopProtocol"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopOctets"), ("HP-ICF-PIM6", "hpicfPim6IpMRouteNHopPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPim6MRouteNHopGroup = hpicfPim6MRouteNHopGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-PIM6", hpicfPim6BaseGroup=hpicfPim6BaseGroup, hpicfPim6ComponentIndex=hpicfPim6ComponentIndex, hpicfPim6IpMRouteNHopEntry=hpicfPim6IpMRouteNHopEntry, hpicfPim6Conformance=hpicfPim6Conformance, hpicfPim6ComponentBSRUpTime=hpicfPim6ComponentBSRUpTime, hpicfPim6CandidateRPGrpAddrType=hpicfPim6CandidateRPGrpAddrType, hpicfPim6NeighborAddressType=hpicfPim6NeighborAddressType, hpicfPim6TotalNeighborCount=hpicfPim6TotalNeighborCount, hpicfPim6IfNegotiatedPropagationDelay=hpicfPim6IfNegotiatedPropagationDelay, hpicfPim6NeighborEntry=hpicfPim6NeighborEntry, hpicfPim6IfLanDelayEnabled=hpicfPim6IfLanDelayEnabled, hpicfPim6ComponentStatus=hpicfPim6ComponentStatus, hpicfPim6ComponentBSRAddrType=hpicfPim6ComponentBSRAddrType, hpicfPim6NeighborUpTime=hpicfPim6NeighborUpTime, hpicfPim6MRouteNHopGroup=hpicfPim6MRouteNHopGroup, hpicfPim6IfDR=hpicfPim6IfDR, hpicfPim6NeighborLoss=hpicfPim6NeighborLoss, hpicfPim6RPSetGroupAddress=hpicfPim6RPSetGroupAddress, hpicfPim6RPSetAddressType=hpicfPim6RPSetAddressType, hpicfPim6SPTThreshold=hpicfPim6SPTThreshold, hpicfPim6CandidateRPGroup=hpicfPim6CandidateRPGroup, hpicfPim6InterfaceInfoCompliance=hpicfPim6InterfaceInfoCompliance, hpicfPim6StateRefreshInterval=hpicfPim6StateRefreshInterval, hpicfPim6SparseIfGroup=hpicfPim6SparseIfGroup, hpicfPim6IpMRouteBps=hpicfPim6IpMRouteBps, hpicfPim6AdminStatus=hpicfPim6AdminStatus, hpicfPim6ComponentCBSRPriority=hpicfPim6ComponentCBSRPriority, hpicfPim6IpMRouteExpiryTime=hpicfPim6IpMRouteExpiryTime, hpicfPim6Traps=hpicfPim6Traps, hpicfPim6DenseModeMIBCompliance=hpicfPim6DenseModeMIBCompliance, hpicfPim6CandidateRPTable=hpicfPim6CandidateRPTable, hpicfPim6IpMRouteTtlDropOct=hpicfPim6IpMRouteTtlDropOct, hpicfPim6ComponentBSRExpiryTime=hpicfPim6ComponentBSRExpiryTime, hpicfPim6IpMRouteNHopGrpPLen=hpicfPim6IpMRouteNHopGrpPLen, hpicfPim6RPSetGroupMaskType=hpicfPim6RPSetGroupMaskType, hpicfPim6ComponentCRPAdvInterval=hpicfPim6ComponentCRPAdvInterval, hpicfPim6NeighborIfIndex=hpicfPim6NeighborIfIndex, hpicfPim6ComponentTable=hpicfPim6ComponentTable, hpicfPim6CandidateRPGroupMask=hpicfPim6CandidateRPGroupMask, hpicfPim6IpMRouteNHopOctets=hpicfPim6IpMRouteNHopOctets, hpicfPim6IpMRouteUpstrNbrType=hpicfPim6IpMRouteUpstrNbrType, hpicfPim6IpMRouteDiffInIfPkts=hpicfPim6IpMRouteDiffInIfPkts, hpicfPim6ComponentBSRNextMessage=hpicfPim6ComponentBSRNextMessage, hpicfPim6IfGraftRetryInterval=hpicfPim6IfGraftRetryInterval, hpicfPim6CandidateRPEntry=hpicfPim6CandidateRPEntry, hpicfPim6IpMRouteNHopGroup=hpicfPim6IpMRouteNHopGroup, hpicfPim6SparseModeMIBCompliance=hpicfPim6SparseModeMIBCompliance, hpicfPim6IfLanPruneDelay=hpicfPim6IfLanPruneDelay, hpicfPim6StarGEntries=hpicfPim6StarGEntries, hpicfPim6StaticRPSetAddress=hpicfPim6StaticRPSetAddress, hpicfPim6IfHelloHoldtime=hpicfPim6IfHelloHoldtime, hpicfPim6IpMRouteProtocol=hpicfPim6IpMRouteProtocol, hpicfPim6IfDRType=hpicfPim6IfDRType, hpicfPim6IpMRouteInIfIndex=hpicfPim6IpMRouteInIfIndex, hpicfPim6CandidateRPGroupAddress=hpicfPim6CandidateRPGroupAddress, hpicfPim6IfEntry=hpicfPim6IfEntry, hpicfPim6RPSetHoldTime=hpicfPim6RPSetHoldTime, hpicfPim6IfTrigHelloInterval=hpicfPim6IfTrigHelloInterval, hpicfPim6Groups=hpicfPim6Groups, hpicfPim6IpMRouteGrpAddrType=hpicfPim6IpMRouteGrpAddrType, hpicfPim6CandidateRPGrpMskType=hpicfPim6CandidateRPGrpMskType, hpicfPim6IpMRouteDiffInIfOct=hpicfPim6IpMRouteDiffInIfOct, hpicfPim6IpMRouteSrcAddrType=hpicfPim6IpMRouteSrcAddrType, hpicfPim6IpMRouteNHopClsMHops=hpicfPim6IpMRouteNHopClsMHops, hpicfPim6IfNumRoutersNotUsingLanDelay=hpicfPim6IfNumRoutersNotUsingLanDelay, hpicfPim6IpMRouteNHopState=hpicfPim6IpMRouteNHopState, hpicfPim6IfTable=hpicfPim6IfTable, hpicfPim6StaticRPSetAddressType=hpicfPim6StaticRPSetAddressType, hpicfPim6IpMRouteRtPrefixLen=hpicfPim6IpMRouteRtPrefixLen, hpicfPim6HardMRTFull=hpicfPim6HardMRTFull, hpicfPim6IpMRouteRtAddress=hpicfPim6IpMRouteRtAddress, hpicfPim6ComponentGroup=hpicfPim6ComponentGroup, hpicfPim6StaticRPSetGroupAddress=hpicfPim6StaticRPSetGroupAddress, hpicfPim6RPSetTable=hpicfPim6RPSetTable, hpicfPim6IfAddressType=hpicfPim6IfAddressType, hpicfPim6StaticRPSetRowStatus=hpicfPim6StaticRPSetRowStatus, hpicfPim6IpMRouteNHopAddress=hpicfPim6IpMRouteNHopAddress, hpicfPim6NotificationGroup=hpicfPim6NotificationGroup, hpicfPim6MRouteGroup=hpicfPim6MRouteGroup, hpicfPim6=hpicfPim6, hpicfPim6StaticRPSetEntry=hpicfPim6StaticRPSetEntry, hpicfPim6IpMcastEnabled=hpicfPim6IpMcastEnabled, hpicfPim6NotificationCompliance=hpicfPim6NotificationCompliance, hpicfPim6CandidateRPAddress=hpicfPim6CandidateRPAddress, hpicfPim6IfAssertHoldInterval=hpicfPim6IfAssertHoldInterval, hpicfPim6InterfaceExtensionsGroup=hpicfPim6InterfaceExtensionsGroup, hpicfPim6RemoveConfig=hpicfPim6RemoveConfig, hpicfPim6JoinPruneInterval=hpicfPim6JoinPruneInterval, hpicfPim6NeighborDRPrioPresent=hpicfPim6NeighborDRPrioPresent, hpicfPim6StaticRPSetGrpAddrType=hpicfPim6StaticRPSetGrpAddrType, hpicfPim6IfStatus=hpicfPim6IfStatus, hpicfPim6IfNBRCount=hpicfPim6IfNBRCount, hpicfPim6ComponentCBSRHashMskLen=hpicfPim6ComponentCBSRHashMskLen, hpicfPim6IpMRouteTimeStamp=hpicfPim6IpMRouteTimeStamp, hpicfPim6RPSetGroupAddressType=hpicfPim6RPSetGroupAddressType, hpicfPim6ComponentEntry=hpicfPim6ComponentEntry, hpicfPim6RPSetExpiryTime=hpicfPim6RPSetExpiryTime, hpicfPim6IpMRouteTtlDropPkts=hpicfPim6IpMRouteTtlDropPkts, hpicfPim6SGEntries=hpicfPim6SGEntries, hpicfPim6IpMRouteNHopSource=hpicfPim6IpMRouteNHopSource, hpicfPim6NeighborAddress=hpicfPim6NeighborAddress, hpicfPim6IpMRouteNHopAddrType=hpicfPim6IpMRouteNHopAddrType, hpicfPim6IfSRTTLThreshold=hpicfPim6IfSRTTLThreshold, hpicfPim6StaticRPSetOverride=hpicfPim6StaticRPSetOverride, hpicfPim6IfSRCapable=hpicfPim6IfSRCapable, hpicfPim6ComponentBSRHashMskLen=hpicfPim6ComponentBSRHashMskLen, hpicfPim6IfPropagationDelay=hpicfPim6IfPropagationDelay, hpicfPim6IpMRouteTable=hpicfPim6IpMRouteTable, hpicfPim6IfDRPriority=hpicfPim6IfDRPriority, hpicfPim6IfOverrideInterval=hpicfPim6IfOverrideInterval, hpicfPim6MIB=hpicfPim6MIB, hpicfPim6IpMRouteNHopTStamp=hpicfPim6IpMRouteNHopTStamp, PYSNMP_MODULE_ID=hpicfPim6MIB, hpicfPim6IpMRouteRtProtocol=hpicfPim6IpMRouteRtProtocol, hpicfPim6StaticRPSetGrpMskType=hpicfPim6StaticRPSetGrpMskType, hpicfPim6ComponentBSRAddress=hpicfPim6ComponentBSRAddress, hpicfPim6IfIndex=hpicfPim6IfIndex, hpicfPim6IpMRouteNHopExpTime=hpicfPim6IpMRouteNHopExpTime, hpicfPim6DenseIfGroup=hpicfPim6DenseIfGroup, hpicfPim6StaticRpfExtensionsGroup=hpicfPim6StaticRpfExtensionsGroup, hpicfPim6IpMRouteNHopSrcAddrType=hpicfPim6IpMRouteNHopSrcAddrType, hpicfPim6IpMRouteSrcPrefixLen=hpicfPim6IpMRouteSrcPrefixLen, hpicfPim6IfGenerationID=hpicfPim6IfGenerationID, hpicfPim6Compliances=hpicfPim6Compliances, hpicfPim6IfHelloInterval=hpicfPim6IfHelloInterval, hpicfPim6IpMcastRouteEntryCount=hpicfPim6IpMcastRouteEntryCount, hpicfPim6StaticRPSetGroupMask=hpicfPim6StaticRPSetGroupMask, hpicfPim6IfJoinPruneHoldtime=hpicfPim6IfJoinPruneHoldtime, hpicfPim6ComponentCBSRMsgInt=hpicfPim6ComponentCBSRMsgInt, hpicfPim6RPSetGroup=hpicfPim6RPSetGroup, hpicfPim6IpMRouteNHopPkts=hpicfPim6IpMRouteNHopPkts, hpicfPim6IfNegotiatedOverrideInterval=hpicfPim6IfNegotiatedOverrideInterval, hpicfPim6GlobalCounterGroup=hpicfPim6GlobalCounterGroup, hpicfPim6NeighborDRPriority=hpicfPim6NeighborDRPriority, hpicfPim6TrapControl=hpicfPim6TrapControl, hpicfPim6RPSetGroupMask=hpicfPim6RPSetGroupMask, hpicfPim6IpMRouteRtAddrType=hpicfPim6IpMRouteRtAddrType, hpicfPim6IpMRouteOctets=hpicfPim6IpMRouteOctets, hpicfPim6CandidateRPAddressType=hpicfPim6CandidateRPAddressType, hpicfPim6NeighborExpiryTime=hpicfPim6NeighborExpiryTime, hpicfPim6NeighborGroup=hpicfPim6NeighborGroup, hpicfPim6ComponentCBSRAdmStatus=hpicfPim6ComponentCBSRAdmStatus, hpicfPim6ComponentCBSRAddrType=hpicfPim6ComponentCBSRAddrType, hpicfPim6DenseMIBCompliance=hpicfPim6DenseMIBCompliance, hpicfPim6StaticRPSetTable=hpicfPim6StaticRPSetTable, hpicfPim6NeighborGenIDPresent=hpicfPim6NeighborGenIDPresent, hpicfPim6IfNBRTimeout=hpicfPim6IfNBRTimeout, hpicfPim6SoftMRTFull=hpicfPim6SoftMRTFull, hpicfPim6CommonGroup=hpicfPim6CommonGroup, hpicfPim6IpMRoutePkts=hpicfPim6IpMRoutePkts, hpicfPim6IpMRouteNHopTable=hpicfPim6IpMRouteNHopTable, hpicfPim6NeighborTable=hpicfPim6NeighborTable, hpicfPim6RPSetAddress=hpicfPim6RPSetAddress, hpicfPim6IpMRouteGrpPrefixLen=hpicfPim6IpMRouteGrpPrefixLen, hpicfPim6ComponentCRPAdvTimer=hpicfPim6ComponentCRPAdvTimer, hpicfPim6NumStaticRpfEntries=hpicfPim6NumStaticRpfEntries, hpicfPim6IpMRouteSource=hpicfPim6IpMRouteSource, hpicfPim6IfMaxGraftRetries=hpicfPim6IfMaxGraftRetries, hpicfPim6IpMRouteNHopIfIndex=hpicfPim6IpMRouteNHopIfIndex, hpicfPim6IpMRouteUpstrNbr=hpicfPim6IpMRouteUpstrNbr, hpicfPim6UcastRoutingCompliance=hpicfPim6UcastRoutingCompliance, hpicfPim6IfMode=hpicfPim6IfMode, hpicfPim6ComponentCRPPriority=hpicfPim6ComponentCRPPriority, hpicfPim6IfAddress=hpicfPim6IfAddress, hpicfPim6IpMRouteNHopSrcPLen=hpicfPim6IpMRouteNHopSrcPLen, hpicfPim6IpMRouteEntry=hpicfPim6IpMRouteEntry, hpicfPim6IpMRouteNHopProtocol=hpicfPim6IpMRouteNHopProtocol, hpicfPim6Objects=hpicfPim6Objects, hpicfPim6Version=hpicfPim6Version, hpicfPim6IpMRouteRtType=hpicfPim6IpMRouteRtType, hpicfPim6IpMRouteGroup=hpicfPim6IpMRouteGroup, hpicfPim6StaticRPSetGroup=hpicfPim6StaticRPSetGroup, hpicfPim6NeighborGenIDValue=hpicfPim6NeighborGenIDValue, hpicfPim6GlobalCountersCompliance=hpicfPim6GlobalCountersCompliance, hpicfPim6ComponentCBSRAddress=hpicfPim6ComponentCBSRAddress, hpicfPim6ComponentBSRPriority=hpicfPim6ComponentBSRPriority, hpicfPim6NeighborLanPruneDlyPres=hpicfPim6NeighborLanPruneDlyPres, hpicfPim6ComponentCRPHoldTime=hpicfPim6ComponentCRPHoldTime, hpicfPim6IpMRouteNHopGrpAddrType=hpicfPim6IpMRouteNHopGrpAddrType, hpicfPim6CandidateRPRowStatus=hpicfPim6CandidateRPRowStatus, hpicfPim6RPSetEntry=hpicfPim6RPSetEntry)
