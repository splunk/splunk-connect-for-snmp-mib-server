#
# PySNMP MIB module H225-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H225-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:07:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
MmGlobalIdentifier, MmH225Crv, mmH323Root, MmCallType, MmH323EndpointType, MmAliasTag, MmAliasAddress, MmTAddressTag = mibBuilder.importSymbols("MULTI-MEDIA-MIB-TC", "MmGlobalIdentifier", "MmH225Crv", "mmH323Root", "MmCallType", "MmH323EndpointType", "MmAliasTag", "MmAliasAddress", "MmTAddressTag")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, iso, Integer32, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, ObjectIdentity, IpAddress, NotificationType, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "iso", "Integer32", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "ObjectIdentity", "IpAddress", "NotificationType", "Unsigned32", "Counter64")
DateAndTime, TAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TAddress", "DisplayString", "TextualConvention")
h225CallSignaling = ModuleIdentity((0, 0, 8, 341, 1, 1, 1))
h225CallSignaling.setRevisions(('1998-12-14 12:00',))
if mibBuilder.loadTexts: h225CallSignaling.setLastUpdated('9812221200Z')
if mibBuilder.loadTexts: h225CallSignaling.setOrganization(' ITU-T SG 16 ')
callSignalConfig = MibIdentifier((0, 0, 8, 341, 1, 1, 1, 1))
callSignalStats = MibIdentifier((0, 0, 8, 341, 1, 1, 1, 2))
connections = MibIdentifier((0, 0, 8, 341, 1, 1, 1, 3))
callSignalEvents = MibIdentifier((0, 0, 8, 341, 1, 1, 1, 4, 0))
callSignalingMIBConformance = MibIdentifier((0, 0, 8, 341, 1, 1, 1, 5))
callSignalConfigTable = MibTable((0, 0, 8, 341, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: callSignalConfigTable.setStatus('current')
callSignalConfigEntry = MibTableRow((0, 0, 8, 341, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: callSignalConfigEntry.setStatus('current')
callSignalConfigMaxConnections = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalConfigMaxConnections.setStatus('current')
callSignalConfigAvailableConnections = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalConfigAvailableConnections.setStatus('current')
callSignalConfigT303 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callSignalConfigT303.setStatus('current')
callSignalConfigT301 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callSignalConfigT301.setStatus('current')
callSignalConfigEnableNotifications = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: callSignalConfigEnableNotifications.setStatus('current')
callSignalStatsTable = MibTable((0, 0, 8, 341, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: callSignalStatsTable.setStatus('current')
callSignalStatsEntry = MibTableRow((0, 0, 8, 341, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: callSignalStatsEntry.setStatus('current')
callSignalStatsCallConnectionsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsCallConnectionsIn.setStatus('current')
callSignalStatsCallConnectionsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsCallConnectionsOut.setStatus('current')
callSignalStatsAlertingMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsAlertingMsgsIn.setStatus('current')
callSignalStatsAlertingMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsAlertingMsgsOut.setStatus('current')
callSignalStatsCallProceedingsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsCallProceedingsIn.setStatus('current')
callSignalStatsCallProceedingsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsCallProceedingsOut.setStatus('current')
callSignalStatsSetupMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsSetupMsgsIn.setStatus('current')
callSignalStatsSetupMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsSetupMsgsOut.setStatus('current')
callSignalStatsSetupAckMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsSetupAckMsgsIn.setStatus('current')
callSignalStatsSetupAckMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsSetupAckMsgsOut.setStatus('current')
callSignalStatsProgressMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsProgressMsgsIn.setStatus('current')
callSignalStatsProgressMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsProgressMsgsOut.setStatus('current')
callSignalStatsReleaseCompleteMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsReleaseCompleteMsgsIn.setStatus('current')
callSignalStatsReleaseCompleteMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsReleaseCompleteMsgsOut.setStatus('current')
callSignalStatsStatusMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsStatusMsgsIn.setStatus('current')
callSignalStatsStatusMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsStatusMsgsOut.setStatus('current')
callSignalStatsStatusInquiryMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsStatusInquiryMsgsIn.setStatus('current')
callSignalStatsStatusInquiryMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsStatusInquiryMsgsOut.setStatus('current')
callSignalStatsFacilityMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsFacilityMsgsIn.setStatus('current')
callSignalStatsFacilityMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsFacilityMsgsOut.setStatus('current')
callSignalStatsInfoMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsInfoMsgsIn.setStatus('current')
callSignalStatsInfoMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsInfoMsgsOut.setStatus('current')
callSignalStatsNotifyMsgsIn = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsNotifyMsgsIn.setStatus('current')
callSignalStatsNotifyMsgsOut = MibScalar((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsNotifyMsgsOut.setStatus('current')
callSignalStatsAverageCallDuration = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 2, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callSignalStatsAverageCallDuration.setStatus('current')
connectionsActiveConnections = MibScalar((0, 0, 8, 341, 1, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsActiveConnections.setStatus('current')
connectionsTable = MibTable((0, 0, 8, 341, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: connectionsTable.setStatus('current')
connectionsTableEntry = MibTableRow((0, 0, 8, 341, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H225-MIB", "connectionsSrcTransporTAddressTag"), (0, "H225-MIB", "connectionsSrcTransporTAddress"), (0, "H225-MIB", "connectionsCallIdentifier"))
if mibBuilder.loadTexts: connectionsTableEntry.setStatus('current')
connectionsSrcTransporTAddressTag = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 1), MmTAddressTag())
if mibBuilder.loadTexts: connectionsSrcTransporTAddressTag.setStatus('current')
connectionsSrcTransporTAddress = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 2), TAddress())
if mibBuilder.loadTexts: connectionsSrcTransporTAddress.setStatus('current')
connectionsCallIdentifier = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 3), MmGlobalIdentifier())
if mibBuilder.loadTexts: connectionsCallIdentifier.setStatus('current')
connectionsRole = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("caller", 1), ("callee", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsRole.setStatus('current')
connectionsState = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("callInitiated", 1), ("callDelivered", 2), ("callPresent", 3), ("callReceived", 4), ("connectRequest", 5), ("callProceeding", 6), ("active", 7), ("disconnectRequest", 8), ("disconnectIndication", 9), ("releaseRequest", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsState.setStatus('current')
connectionsDestTransporTAddressTag = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 6), MmTAddressTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestTransporTAddressTag.setStatus('current')
connectionsDestTransporTAddress = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 7), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestTransporTAddress.setStatus('current')
connectionsDestAliasTag = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 8), MmAliasTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestAliasTag.setStatus('current')
connectionsDestAlias = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 9), MmAliasAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestAlias.setStatus('current')
connectionsSrcH245SigTransporTAddressTag = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 10), MmTAddressTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsSrcH245SigTransporTAddressTag.setStatus('current')
connectionsSrcH245SigTransporTAddress = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 11), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsSrcH245SigTransporTAddress.setStatus('current')
connectionsDestH245SigTransporTAddressTag = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 12), MmTAddressTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestH245SigTransporTAddressTag.setStatus('current')
connectionsDestH245SigTransporTAddress = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 13), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestH245SigTransporTAddress.setStatus('current')
connectionsConfId = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 14), MmGlobalIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsConfId.setStatus('current')
connectionsCalledPartyNumber = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsCalledPartyNumber.setStatus('current')
connectionsDestXtraCallingNumber1 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestXtraCallingNumber1.setStatus('current')
connectionsDestXtraCallingNumber2 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestXtraCallingNumber2.setStatus('current')
connectionsDestXtraCallingNumber3 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestXtraCallingNumber3.setStatus('current')
connectionsDestXtraCallingNumber4 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestXtraCallingNumber4.setStatus('current')
connectionsDestXtraCallingNumber5 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsDestXtraCallingNumber5.setStatus('current')
connectionsFastCall = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsFastCall.setStatus('current')
connectionsSecurity = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsSecurity.setStatus('current')
connectionsH245Tunneling = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSupported", 1), ("available", 2), ("active", 3), ("closing", 4), ("closed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsH245Tunneling.setStatus('current')
connectionsCanOverlapSend = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsCanOverlapSend.setStatus('current')
connectionsCRV = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 25), MmH225Crv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsCRV.setStatus('current')
connectionsCallType = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 26), MmCallType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsCallType.setStatus('current')
connectionsRemoteExtensionAddress = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsRemoteExtensionAddress.setStatus('current')
connectionsExtraCRV1 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 28), MmH225Crv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsExtraCRV1.setStatus('current')
connectionsExtraCRV2 = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 29), MmH225Crv()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsExtraCRV2.setStatus('current')
connectionsConnectionStartTime = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 30), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsConnectionStartTime.setStatus('current')
connectionsEndpointType = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 31), MmH323EndpointType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsEndpointType.setStatus('current')
connectionsReleaseCompleteReason = MibTableColumn((0, 0, 8, 341, 1, 1, 1, 3, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(34, 47, 3, 16, 88, 111, 38, 42, 28, 41, 17, 31))).clone(namedValues=NamedValues(("noBandwidth", 34), ("gatekeeperResourcesUnavailable", 47), ("unreachableDestination", 3), ("destinationReject", 16), ("invalidRevision", 88), ("noPermission", 111), ("unreachableGatekeeper", 38), ("gatewayResources", 42), ("badFormaTAddress", 28), ("adaptiveBusy", 41), ("inConference", 17), ("undefined", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionsReleaseCompleteReason.setStatus('current')
callReleaseComplete = NotificationType((0, 0, 8, 341, 1, 1, 1, 4, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("H225-MIB", "connectionsReleaseCompleteReason"))
if mibBuilder.loadTexts: callReleaseComplete.setStatus('current')
callSignalingMIBGroups = MibIdentifier((0, 0, 8, 341, 1, 1, 1, 5, 1))
callSignalConfigGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 1, 5, 1, 1)).setObjects(("H225-MIB", "callSignalConfigMaxConnections"), ("H225-MIB", "callSignalConfigAvailableConnections"), ("H225-MIB", "callSignalConfigT303"), ("H225-MIB", "callSignalConfigT301"), ("H225-MIB", "callSignalConfigEnableNotifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    callSignalConfigGroup = callSignalConfigGroup.setStatus('current')
callSignalStatsGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 1, 5, 1, 2)).setObjects(("H225-MIB", "callSignalStatsCallConnectionsIn"), ("H225-MIB", "callSignalStatsCallConnectionsOut"), ("H225-MIB", "callSignalStatsAlertingMsgsIn"), ("H225-MIB", "callSignalStatsAlertingMsgsOut"), ("H225-MIB", "callSignalStatsCallProceedingsIn"), ("H225-MIB", "callSignalStatsCallProceedingsOut"), ("H225-MIB", "callSignalStatsSetupMsgsIn"), ("H225-MIB", "callSignalStatsSetupMsgsOut"), ("H225-MIB", "callSignalStatsSetupAckMsgsIn"), ("H225-MIB", "callSignalStatsSetupAckMsgsOut"), ("H225-MIB", "callSignalStatsProgressMsgsIn"), ("H225-MIB", "callSignalStatsProgressMsgsOut"), ("H225-MIB", "callSignalStatsReleaseCompleteMsgsIn"), ("H225-MIB", "callSignalStatsReleaseCompleteMsgsOut"), ("H225-MIB", "callSignalStatsStatusMsgsIn"), ("H225-MIB", "callSignalStatsStatusMsgsOut"), ("H225-MIB", "callSignalStatsStatusInquiryMsgsIn"), ("H225-MIB", "callSignalStatsStatusInquiryMsgsOut"), ("H225-MIB", "callSignalStatsFacilityMsgsIn"), ("H225-MIB", "callSignalStatsFacilityMsgsOut"), ("H225-MIB", "callSignalStatsInfoMsgsIn"), ("H225-MIB", "callSignalStatsInfoMsgsOut"), ("H225-MIB", "callSignalStatsNotifyMsgsIn"), ("H225-MIB", "callSignalStatsNotifyMsgsOut"), ("H225-MIB", "callSignalStatsAverageCallDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    callSignalStatsGroup = callSignalStatsGroup.setStatus('current')
connectionsGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 1, 5, 1, 3)).setObjects(("H225-MIB", "connectionsActiveConnections"), ("H225-MIB", "connectionsRole"), ("H225-MIB", "connectionsState"), ("H225-MIB", "connectionsDestTransporTAddressTag"), ("H225-MIB", "connectionsDestTransporTAddress"), ("H225-MIB", "connectionsDestAliasTag"), ("H225-MIB", "connectionsDestAlias"), ("H225-MIB", "connectionsSrcH245SigTransporTAddressTag"), ("H225-MIB", "connectionsSrcH245SigTransporTAddress"), ("H225-MIB", "connectionsDestH245SigTransporTAddressTag"), ("H225-MIB", "connectionsDestH245SigTransporTAddress"), ("H225-MIB", "connectionsConfId"), ("H225-MIB", "connectionsCalledPartyNumber"), ("H225-MIB", "connectionsDestXtraCallingNumber1"), ("H225-MIB", "connectionsDestXtraCallingNumber2"), ("H225-MIB", "connectionsDestXtraCallingNumber3"), ("H225-MIB", "connectionsDestXtraCallingNumber4"), ("H225-MIB", "connectionsDestXtraCallingNumber5"), ("H225-MIB", "connectionsFastCall"), ("H225-MIB", "connectionsSecurity"), ("H225-MIB", "connectionsH245Tunneling"), ("H225-MIB", "connectionsCanOverlapSend"), ("H225-MIB", "connectionsCRV"), ("H225-MIB", "connectionsCallType"), ("H225-MIB", "connectionsRemoteExtensionAddress"), ("H225-MIB", "connectionsExtraCRV1"), ("H225-MIB", "connectionsExtraCRV2"), ("H225-MIB", "connectionsConnectionStartTime"), ("H225-MIB", "connectionsReleaseCompleteReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    connectionsGroup = connectionsGroup.setStatus('current')
callSignalEventsGroup = ObjectGroup((0, 0, 8, 341, 1, 1, 1, 5, 1, 4)).setObjects(("H225-MIB", "connectionsReleaseCompleteReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    callSignalEventsGroup = callSignalEventsGroup.setStatus('current')
callSignalingMIBCompliance = ModuleCompliance((0, 0, 8, 341, 1, 1, 1, 5, 2)).setObjects(("H225-MIB", "callSignalConfigGroup"), ("H225-MIB", "callSignalStatsGroup"), ("H225-MIB", "connectionsGroup"), ("H225-MIB", "callSignalEventsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    callSignalingMIBCompliance = callSignalingMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("H225-MIB", connectionsCanOverlapSend=connectionsCanOverlapSend, callSignalStatsStatusInquiryMsgsIn=callSignalStatsStatusInquiryMsgsIn, callSignalStatsSetupAckMsgsOut=callSignalStatsSetupAckMsgsOut, callSignalConfigEnableNotifications=callSignalConfigEnableNotifications, connections=connections, callSignalStatsEntry=callSignalStatsEntry, callSignalStatsNotifyMsgsIn=callSignalStatsNotifyMsgsIn, connectionsEndpointType=connectionsEndpointType, callSignalStatsStatusMsgsIn=callSignalStatsStatusMsgsIn, connectionsFastCall=connectionsFastCall, connectionsConnectionStartTime=connectionsConnectionStartTime, connectionsDestXtraCallingNumber4=connectionsDestXtraCallingNumber4, connectionsSrcH245SigTransporTAddressTag=connectionsSrcH245SigTransporTAddressTag, connectionsExtraCRV2=connectionsExtraCRV2, callSignalEvents=callSignalEvents, connectionsReleaseCompleteReason=connectionsReleaseCompleteReason, callSignalStatsInfoMsgsIn=callSignalStatsInfoMsgsIn, callSignalStatsAverageCallDuration=callSignalStatsAverageCallDuration, PYSNMP_MODULE_ID=h225CallSignaling, connectionsExtraCRV1=connectionsExtraCRV1, callSignalStatsNotifyMsgsOut=callSignalStatsNotifyMsgsOut, callSignalConfigTable=callSignalConfigTable, callSignalStatsCallConnectionsOut=callSignalStatsCallConnectionsOut, callSignalStatsInfoMsgsOut=callSignalStatsInfoMsgsOut, callSignalConfigEntry=callSignalConfigEntry, connectionsCallIdentifier=connectionsCallIdentifier, connectionsDestAlias=connectionsDestAlias, connectionsConfId=connectionsConfId, callSignalConfigGroup=callSignalConfigGroup, connectionsState=connectionsState, connectionsDestTransporTAddressTag=connectionsDestTransporTAddressTag, connectionsSecurity=connectionsSecurity, callSignalStatsAlertingMsgsIn=callSignalStatsAlertingMsgsIn, callSignalingMIBConformance=callSignalingMIBConformance, connectionsTable=connectionsTable, callSignalStats=callSignalStats, callSignalStatsFacilityMsgsIn=callSignalStatsFacilityMsgsIn, callSignalEventsGroup=callSignalEventsGroup, callSignalStatsProgressMsgsOut=callSignalStatsProgressMsgsOut, callSignalStatsProgressMsgsIn=callSignalStatsProgressMsgsIn, connectionsDestXtraCallingNumber1=connectionsDestXtraCallingNumber1, callSignalStatsCallConnectionsIn=callSignalStatsCallConnectionsIn, h225CallSignaling=h225CallSignaling, callSignalStatsReleaseCompleteMsgsOut=callSignalStatsReleaseCompleteMsgsOut, callSignalStatsReleaseCompleteMsgsIn=callSignalStatsReleaseCompleteMsgsIn, callSignalConfigMaxConnections=callSignalConfigMaxConnections, callSignalStatsCallProceedingsIn=callSignalStatsCallProceedingsIn, callReleaseComplete=callReleaseComplete, callSignalingMIBGroups=callSignalingMIBGroups, callSignalConfigT303=callSignalConfigT303, callSignalStatsSetupMsgsIn=callSignalStatsSetupMsgsIn, callSignalStatsFacilityMsgsOut=callSignalStatsFacilityMsgsOut, connectionsTableEntry=connectionsTableEntry, connectionsSrcH245SigTransporTAddress=connectionsSrcH245SigTransporTAddress, connectionsDestXtraCallingNumber2=connectionsDestXtraCallingNumber2, connectionsGroup=connectionsGroup, callSignalStatsGroup=callSignalStatsGroup, callSignalStatsCallProceedingsOut=callSignalStatsCallProceedingsOut, callSignalingMIBCompliance=callSignalingMIBCompliance, callSignalStatsTable=callSignalStatsTable, connectionsSrcTransporTAddress=connectionsSrcTransporTAddress, connectionsDestXtraCallingNumber5=connectionsDestXtraCallingNumber5, callSignalStatsSetupAckMsgsIn=callSignalStatsSetupAckMsgsIn, callSignalStatsSetupMsgsOut=callSignalStatsSetupMsgsOut, connectionsDestH245SigTransporTAddress=connectionsDestH245SigTransporTAddress, connectionsDestAliasTag=connectionsDestAliasTag, callSignalStatsStatusMsgsOut=callSignalStatsStatusMsgsOut, callSignalConfigT301=callSignalConfigT301, connectionsRole=connectionsRole, connectionsCalledPartyNumber=connectionsCalledPartyNumber, connectionsSrcTransporTAddressTag=connectionsSrcTransporTAddressTag, connectionsCallType=connectionsCallType, connectionsCRV=connectionsCRV, connectionsDestXtraCallingNumber3=connectionsDestXtraCallingNumber3, connectionsDestH245SigTransporTAddressTag=connectionsDestH245SigTransporTAddressTag, connectionsRemoteExtensionAddress=connectionsRemoteExtensionAddress, callSignalStatsStatusInquiryMsgsOut=callSignalStatsStatusInquiryMsgsOut, connectionsActiveConnections=connectionsActiveConnections, callSignalConfig=callSignalConfig, callSignalConfigAvailableConnections=callSignalConfigAvailableConnections, connectionsDestTransporTAddress=connectionsDestTransporTAddress, callSignalStatsAlertingMsgsOut=callSignalStatsAlertingMsgsOut, connectionsH245Tunneling=connectionsH245Tunneling)
