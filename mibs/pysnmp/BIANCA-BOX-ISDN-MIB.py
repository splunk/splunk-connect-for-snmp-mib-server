#
# PySNMP MIB module BIANCA-BOX-ISDN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BOX-ISDN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:20:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Counter32, ModuleIdentity, ObjectIdentity, Counter64, MibIdentifier, IpAddress, Gauge32, Bits, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Counter32", "ModuleIdentity", "ObjectIdentity", "Counter64", "MibIdentifier", "IpAddress", "Gauge32", "Bits", "TimeTicks", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
isdn = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 2))
class Date(Integer32):
    pass

class HexValue(Integer32):
    pass

isdnIfTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 1), )
if mibBuilder.loadTexts: isdnIfTable.setStatus('mandatory')
isdnIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnIfIndex"))
if mibBuilder.loadTexts: isdnIfEntry.setStatus('mandatory')
isdnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfIndex.setStatus('mandatory')
isdnIfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfDescription.setStatus('mandatory')
isdnIfLayer1State = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("f1", 1), ("f2", 2), ("f3", 3), ("f4", 4), ("f5", 5), ("f6", 6), ("f7", 7), ("f8", 8), ("g1", 9), ("g2", 10), ("g3", 11), ("g4", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfLayer1State.setStatus('mandatory')
isdnIfBchannelControl = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uncontrolled", 1), ("controlled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfBchannelControl.setStatus('mandatory')
isdnIfActivationRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nooperation", 1), ("activate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnIfActivationRequest.setStatus('mandatory')
isdnIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("te", 1), ("nt", 2), ("pabx-terminal", 3), ("pabx-trunk", 4), ("pabx-tie", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnIfMode.setStatus('mandatory')
isdnIfTimerT3 = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnIfTimerT3.setStatus('mandatory')
isdnIfUsePowerDetector = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("dontuse", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnIfUsePowerDetector.setStatus('mandatory')
isdnIfNumberOfChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfNumberOfChannels.setStatus('mandatory')
isdnIfTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfTimeouts.setStatus('mandatory')
isdnIfActivates = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfActivates.setStatus('mandatory')
isdnIfDeactivates = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfDeactivates.setStatus('mandatory')
isdnIfAutoconfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("running", 2), ("done", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnIfAutoconfigState.setStatus('mandatory')
isdnIfAutoconfig = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnIfAutoconfig.setStatus('mandatory')
isdnChTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 2), )
if mibBuilder.loadTexts: isdnChTable.setStatus('mandatory')
isdnChEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnChIsdnIfIndex"), (0, "BIANCA-BOX-ISDN-MIB", "isdnChNumber"))
if mibBuilder.loadTexts: isdnChEntry.setStatus('mandatory')
isdnChIsdnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChIsdnIfIndex.setStatus('mandatory')
isdnChNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChNumber.setStatus('mandatory')
isdnChState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-connected", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChState.setStatus('mandatory')
isdnChType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7))).clone(namedValues=NamedValues(("dialup", 1), ("leased-dte", 2), ("leased-dce", 3), ("loopback", 6), ("not-available", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnChType.setStatus('mandatory')
isdnChBundle = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnChBundle.setStatus('mandatory')
isdnChThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChThroughput.setStatus('mandatory')
isdnChReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChReceivedPackets.setStatus('mandatory')
isdnChReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChReceivedOctets.setStatus('mandatory')
isdnChReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChReceivedErrors.setStatus('mandatory')
isdnChTransmitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChTransmitPackets.setStatus('mandatory')
isdnChTransmitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChTransmitOctets.setStatus('mandatory')
isdnChTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnChTransmitErrors.setStatus('mandatory')
isdnStkTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 3), )
if mibBuilder.loadTexts: isdnStkTable.setStatus('mandatory')
isdnStkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnStkNumber"))
if mibBuilder.loadTexts: isdnStkEntry.setStatus('mandatory')
isdnStkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkNumber.setStatus('mandatory')
isdnStkIsdnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkIsdnIfIndex.setStatus('mandatory')
isdnStkProtocolProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("delete", 1), ("permanent", 2), ("d1tr6", 3), ("dss1", 4), ("ni1", 5), ("not-used", 6), ("ess5", 7), ("dms100", 8), ("ins64", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkProtocolProfile.setStatus('mandatory')
isdnStkConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("point-to-multipoint", 1), ("point-to-point", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkConfiguration.setStatus('mandatory')
isdnStkSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkSPID.setStatus('mandatory')
isdnStkTeiProc = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("fixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkTeiProc.setStatus('mandatory')
isdnStkTeiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkTeiValue.setStatus('mandatory')
isdnStkClearAllCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no-operation", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkClearAllCalls.setStatus('mandatory')
isdnStkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loaded", 1), ("not-loaded", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnStkStatus.setStatus('mandatory')
isdnStkLayer2State = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tei-unassigned", 1), ("tei-assigned", 2), ("aw-est", 3), ("established", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnStkLayer2State.setStatus('mandatory')
isdnStkBchannels = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkBchannels.setStatus('mandatory')
isdnStkDialOutPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 3, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnStkDialOutPrefix.setStatus('mandatory')
isdnCallTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 4), )
if mibBuilder.loadTexts: isdnCallTable.setStatus('mandatory')
isdnCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnCallStkNumber"), (0, "BIANCA-BOX-ISDN-MIB", "isdnCallType"), (0, "BIANCA-BOX-ISDN-MIB", "isdnCallReference"))
if mibBuilder.loadTexts: isdnCallEntry.setStatus('mandatory')
isdnCallStkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallStkNumber.setStatus('mandatory')
isdnCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallType.setStatus('mandatory')
isdnCallReference = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallReference.setStatus('mandatory')
isdnCallAge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallAge.setStatus('mandatory')
isdnCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 16, 18, 26))).clone(namedValues=NamedValues(("null", 1), ("c-initiated", 2), ("ovl-send", 3), ("oc-procd", 4), ("c-deliverd", 5), ("c-present", 7), ("c-recvd", 8), ("ic-procd", 10), ("active", 11), ("discon-req", 12), ("discon-ind", 13), ("suspd-req", 16), ("resum-req", 18), ("ovl-recv", 26)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCallState.setStatus('mandatory')
isdnCallIsdnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallIsdnIfIndex.setStatus('mandatory')
isdnCallChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallChannel.setStatus('mandatory')
isdnCallDspItem = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58))).clone(namedValues=NamedValues(("ppp", 1), ("login", 2), ("undefined", 10), ("ppp-64k", 11), ("ppp-56k", 12), ("ppp-modem", 13), ("ppp-dovb", 14), ("ppp-v110-1200", 15), ("ppp-v110-2400", 16), ("ppp-v110-4800", 17), ("ppp-v110-9600", 18), ("ppp-v110-14400", 19), ("ppp-v110-19200", 20), ("ppp-v110-38400", 21), ("ppp-x75", 22), ("extern", 24), ("pots", 25), ("ppp-modem-profile-1", 26), ("ppp-modem-profile-2", 27), ("ppp-modem-profile-3", 28), ("ppp-modem-profile-4", 29), ("ppp-modem-profile-5", 30), ("ppp-modem-profile-6", 31), ("ppp-modem-profile-7", 32), ("ppp-modem-profile-8", 33), ("eaz0", 48), ("eaz1", 49), ("eaz2", 50), ("eaz3", 51), ("eaz4", 52), ("eaz5", 53), ("eaz6", 54), ("eaz7", 55), ("eaz8", 56), ("eaz9", 57), ("x25-pad", 58)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallDspItem.setStatus('mandatory')
isdnCallRemoteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallRemoteNumber.setStatus('mandatory')
isdnCallRemoteSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallRemoteSubaddress.setStatus('mandatory')
isdnCallLocalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallLocalNumber.setStatus('mandatory')
isdnCallLocalSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallLocalSubaddress.setStatus('mandatory')
isdnCallServiceIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16))).clone(namedValues=NamedValues(("telephony", 1), ("ab-services", 2), ("x21-services", 3), ("fax-group4", 4), ("btx", 5), ("data-transfer", 7), ("x25-services", 8), ("facsimile64", 9), ("mixed-mode", 10), ("telecontrol", 13), ("graphics-phone", 14), ("teletex", 15), ("video-phone", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallServiceIndicator.setStatus('mandatory')
isdnCallAddInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallAddInfo.setStatus('mandatory')
isdnCallBC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallBC.setStatus('mandatory')
isdnCallLLC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallLLC.setStatus('mandatory')
isdnCallHLC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHLC.setStatus('mandatory')
isdnCallCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallCharge.setStatus('mandatory')
isdnCallReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallReceivedPackets.setStatus('mandatory')
isdnCallReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallReceivedOctets.setStatus('mandatory')
isdnCallReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallReceivedErrors.setStatus('mandatory')
isdnCallTransmitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallTransmitPackets.setStatus('mandatory')
isdnCallTransmitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallTransmitOctets.setStatus('mandatory')
isdnCallTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallTransmitErrors.setStatus('mandatory')
isdnCallChargeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallChargeInfo.setStatus('mandatory')
isdnCallScreening = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("user", 1), ("user-verified", 2), ("user-failed", 3), ("network", 4), ("undefined", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallScreening.setStatus('mandatory')
isdnCallInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 4, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallInfo.setStatus('mandatory')
isdnDispatchTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 5), )
if mibBuilder.loadTexts: isdnDispatchTable.setStatus('mandatory')
isdnDispatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnDspStkNumber"), (0, "BIANCA-BOX-ISDN-MIB", "isdnDspItem"))
if mibBuilder.loadTexts: isdnDispatchEntry.setStatus('mandatory')
isdnDspStkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspStkNumber.setStatus('mandatory')
isdnDspItem = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59))).clone(namedValues=NamedValues(("ppp", 1), ("login", 2), ("delete", 10), ("ppp-64k", 11), ("ppp-56k", 12), ("ppp-modem", 13), ("ppp-dovb", 14), ("ppp-v110-1200", 15), ("ppp-v110-2400", 16), ("ppp-v110-4800", 17), ("ppp-v110-9600", 18), ("ppp-v110-14400", 19), ("ppp-v110-19200", 20), ("ppp-v110-38400", 21), ("ppp-x75", 22), ("extern", 24), ("pots", 25), ("ppp-modem-profile-1", 26), ("ppp-modem-profile-2", 27), ("ppp-modem-profile-3", 28), ("ppp-modem-profile-4", 29), ("ppp-modem-profile-5", 30), ("ppp-modem-profile-6", 31), ("ppp-modem-profile-7", 32), ("ppp-modem-profile-8", 33), ("eaz0", 48), ("eaz1", 49), ("eaz2", 50), ("eaz3", 51), ("eaz4", 52), ("eaz5", 53), ("eaz6", 54), ("eaz7", 55), ("eaz8", 56), ("eaz9", 57), ("x25-pad", 58), ("capi2", 59)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspItem.setStatus('mandatory')
isdnDspLocalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspLocalNumber.setStatus('mandatory')
isdnDspLocalSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspLocalSubaddress.setStatus('mandatory')
isdnDspBearer = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("any", 1), ("data", 2), ("voice", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspBearer.setStatus('mandatory')
isdnDspSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspSlot.setStatus('mandatory')
isdnDspUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspUnit.setStatus('mandatory')
isdnDspDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspDirection.setStatus('mandatory')
isdnDspMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("right-to-left", 1), ("left-to-right", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspMode.setStatus('mandatory')
isdnDspUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnDspUserName.setStatus('mandatory')
isdnDChanX31Table = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 6), )
if mibBuilder.loadTexts: isdnDChanX31Table.setStatus('mandatory')
isdnDChanX31Entry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 6, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnX31IsdnIfIndex"))
if mibBuilder.loadTexts: isdnDChanX31Entry.setStatus('mandatory')
isdnX31IsdnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 6, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnX31IsdnIfIndex.setStatus('mandatory')
isdnX31TeiProc = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("fixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnX31TeiProc.setStatus('mandatory')
isdnX31TeiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnX31TeiValue.setStatus('mandatory')
isdnX31AssignedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("packet-switch", 1), ("capi-default", 2), ("capi", 3), ("delete", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnX31AssignedTo.setStatus('mandatory')
isdnAccountingTemplate = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnAccountingTemplate.setStatus('mandatory')
isdnCallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 8), )
if mibBuilder.loadTexts: isdnCallHistoryTable.setStatus('mandatory')
isdnCallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnCallHistoryStkNumber"), (0, "BIANCA-BOX-ISDN-MIB", "isdnCallHistoryType"))
if mibBuilder.loadTexts: isdnCallHistoryEntry.setStatus('mandatory')
isdnCallHistoryStkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryStkNumber.setStatus('mandatory')
isdnCallHistoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryType.setStatus('mandatory')
isdnCallHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 3), Date()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryTime.setStatus('mandatory')
isdnCallHistoryDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryDuration.setStatus('mandatory')
isdnCallHistoryIsdnIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryIsdnIfIndex.setStatus('mandatory')
isdnCallHistoryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryChannel.setStatus('mandatory')
isdnCallHistoryDspItem = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58))).clone(namedValues=NamedValues(("ppp", 1), ("login", 2), ("undefined", 10), ("ppp-64k", 11), ("ppp-56k", 12), ("ppp-modem", 13), ("ppp-dovb", 14), ("ppp-v110-1200", 15), ("ppp-v110-2400", 16), ("ppp-v110-4800", 17), ("ppp-v110-9600", 18), ("ppp-v110-14400", 19), ("ppp-v110-19200", 20), ("ppp-v110-38400", 21), ("ppp-x75", 22), ("extern", 24), ("pots", 25), ("ppp-modem-profile-1", 26), ("ppp-modem-profile-2", 27), ("ppp-modem-profile-3", 28), ("ppp-modem-profile-4", 29), ("ppp-modem-profile-5", 30), ("ppp-modem-profile-6", 31), ("ppp-modem-profile-7", 32), ("ppp-modem-profile-8", 33), ("eaz0", 48), ("eaz1", 49), ("eaz2", 50), ("eaz3", 51), ("eaz4", 52), ("eaz5", 53), ("eaz6", 54), ("eaz7", 55), ("eaz8", 56), ("eaz9", 57), ("x25-pad", 58)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryDspItem.setStatus('mandatory')
isdnCallHistoryRemoteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryRemoteNumber.setStatus('mandatory')
isdnCallHistoryRemoteSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryRemoteSubaddress.setStatus('mandatory')
isdnCallHistoryLocalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryLocalNumber.setStatus('mandatory')
isdnCallHistoryLocalSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryLocalSubaddress.setStatus('mandatory')
isdnCallHistoryServiceIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16))).clone(namedValues=NamedValues(("telephony", 1), ("ab-services", 2), ("x21-services", 3), ("fax-group4", 4), ("btx", 5), ("data-transfer", 7), ("x25-services", 8), ("facsimile64", 9), ("mixed-mode", 10), ("telecontrol", 13), ("graphics-phone", 14), ("teletex", 15), ("video-phone", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryServiceIndicator.setStatus('mandatory')
isdnCallHistoryAddInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryAddInfo.setStatus('mandatory')
isdnCallHistoryBC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryBC.setStatus('mandatory')
isdnCallHistoryLLC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryLLC.setStatus('mandatory')
isdnCallHistoryHLC = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryHLC.setStatus('mandatory')
isdnCallHistoryCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryCharge.setStatus('mandatory')
isdnCallHistoryDSS1Cause = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 18), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryDSS1Cause.setStatus('mandatory')
isdnCallHistory1TR6Cause = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 19), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistory1TR6Cause.setStatus('mandatory')
isdnCallHistoryLocalCause = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknownprim", 1), ("outstate", 2), ("iemissing", 3), ("ienotallowed", 4), ("look", 5), ("nolink", 6), ("nocallref", 7), ("nomem", 8), ("notready", 9), ("busy", 10), ("chanbusy", 11), ("l3timer", 12), ("l3restart", 13), ("l3error", 14), ("l1error", 15), ("nocontrl", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryLocalCause.setStatus('mandatory')
isdnCallHistoryChargeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryChargeInfo.setStatus('mandatory')
isdnCallHistoryScreening = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("user", 1), ("user-verified", 2), ("user-failed", 3), ("network", 4), ("undefined", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryScreening.setStatus('mandatory')
isdnCallHistoryInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryInfo.setStatus('mandatory')
isdnCallHistoryReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryReceivedPackets.setStatus('mandatory')
isdnCallHistoryReceivedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryReceivedOctets.setStatus('mandatory')
isdnCallHistoryReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryReceivedErrors.setStatus('mandatory')
isdnCallHistoryTransmitPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryTransmitPackets.setStatus('mandatory')
isdnCallHistoryTransmitOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryTransmitOctets.setStatus('mandatory')
isdnCallHistoryTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 8, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCallHistoryTransmitErrors.setStatus('mandatory')
isdnLoginOnPPPDispatch = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("disallow", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnLoginOnPPPDispatch.setStatus('mandatory')
isdnHistoryMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnHistoryMaxEntries.setStatus('mandatory')
isdnloginAllowTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 11), )
if mibBuilder.loadTexts: isdnloginAllowTable.setStatus('mandatory')
isdnloginAllowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 11, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnloginAllowStkNumber"))
if mibBuilder.loadTexts: isdnloginAllowEntry.setStatus('mandatory')
isdnloginAllowStkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnloginAllowStkNumber.setStatus('mandatory')
isdnloginAllowRemoteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 11, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnloginAllowRemoteNumber.setStatus('mandatory')
isdnloginAllowRemoteSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 11, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnloginAllowRemoteSubaddress.setStatus('mandatory')
isdnloginAllowScreening = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("user", 1), ("user-verified", 2), ("user-failed", 3), ("network", 4), ("dont-care", 5), ("delete", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnloginAllowScreening.setStatus('mandatory')
isdnCreditsTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 2, 12), )
if mibBuilder.loadTexts: isdnCreditsTable.setStatus('mandatory')
isdnCreditsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1), ).setIndexNames((0, "BIANCA-BOX-ISDN-MIB", "isdnCreditsSubsysNumber"))
if mibBuilder.loadTexts: isdnCreditsEntry.setStatus('mandatory')
isdnCreditsSubsysNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ppp", 1), ("capi", 2), ("isdnlogin", 3), ("pots", 4), ("doorintercom", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsSubsysNumber.setStatus('mandatory')
isdnCreditsSurveillance = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsSurveillance.setStatus('mandatory')
isdnCreditsMeasuretime = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMeasuretime.setStatus('mandatory')
isdnCreditsMaxInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxInCon.setStatus('mandatory')
isdnCreditsMaxOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxOutCon.setStatus('mandatory')
isdnCreditsMaxCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxCharge.setStatus('mandatory')
isdnCreditsMaxInDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxInDuration.setStatus('mandatory')
isdnCreditsMaxOutDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxOutDuration.setStatus('mandatory')
isdnCreditsTimeleft = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsTimeleft.setStatus('mandatory')
isdnCreditsCurrentInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsCurrentInCon.setStatus('mandatory')
isdnCreditsCurrentOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsCurrentOutCon.setStatus('mandatory')
isdnCreditsTotalInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsTotalInCon.setStatus('mandatory')
isdnCreditsTotalOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsTotalOutCon.setStatus('mandatory')
isdnCreditsTotalMaxCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsTotalMaxCon.setStatus('mandatory')
isdnCreditsTotalCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsTotalCharge.setStatus('mandatory')
isdnCreditsTotalInDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsTotalInDuration.setStatus('mandatory')
isdnCreditsTotalOutDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnCreditsTotalOutDuration.setStatus('mandatory')
isdnCreditsMaxCurrentInCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxCurrentInCon.setStatus('mandatory')
isdnCreditsMaxCurrentOutCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxCurrentOutCon.setStatus('mandatory')
isdnCreditsMaxCurrentCon = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 12, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isdnCreditsMaxCurrentCon.setStatus('mandatory')
isdnIfSlips = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isdnIfSlips.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BOX-ISDN-MIB", isdnCallTable=isdnCallTable, isdnHistoryMaxEntries=isdnHistoryMaxEntries, isdnStkDialOutPrefix=isdnStkDialOutPrefix, isdnChReceivedOctets=isdnChReceivedOctets, isdnCallHistoryRemoteSubaddress=isdnCallHistoryRemoteSubaddress, isdnCreditsTotalOutCon=isdnCreditsTotalOutCon, isdnIfDeactivates=isdnIfDeactivates, isdnDChanX31Table=isdnDChanX31Table, private=private, isdnCallTransmitOctets=isdnCallTransmitOctets, isdnDspLocalSubaddress=isdnDspLocalSubaddress, isdnCallType=isdnCallType, isdnStkTeiValue=isdnStkTeiValue, isdnCallHistoryType=isdnCallHistoryType, enterprises=enterprises, isdnStkStatus=isdnStkStatus, isdnCreditsTimeleft=isdnCreditsTimeleft, isdnCreditsMaxCurrentInCon=isdnCreditsMaxCurrentInCon, isdnDspStkNumber=isdnDspStkNumber, isdnCallReference=isdnCallReference, isdnCallReceivedPackets=isdnCallReceivedPackets, isdnDispatchTable=isdnDispatchTable, isdnChBundle=isdnChBundle, isdnDspItem=isdnDspItem, isdnCallChargeInfo=isdnCallChargeInfo, isdnCallHistoryIsdnIfIndex=isdnCallHistoryIsdnIfIndex, isdnCallHistoryLocalCause=isdnCallHistoryLocalCause, isdnCreditsTotalOutDuration=isdnCreditsTotalOutDuration, isdnIfSlips=isdnIfSlips, isdnIfEntry=isdnIfEntry, isdnIfTable=isdnIfTable, isdnStkNumber=isdnStkNumber, isdnChTable=isdnChTable, isdnloginAllowScreening=isdnloginAllowScreening, isdnCallBC=isdnCallBC, isdnCreditsMaxOutCon=isdnCreditsMaxOutCon, isdnStkProtocolProfile=isdnStkProtocolProfile, isdnCallEntry=isdnCallEntry, isdnDChanX31Entry=isdnDChanX31Entry, isdnCreditsMaxOutDuration=isdnCreditsMaxOutDuration, isdnCallHistoryHLC=isdnCallHistoryHLC, isdnCreditsSurveillance=isdnCreditsSurveillance, isdnCallHistoryReceivedErrors=isdnCallHistoryReceivedErrors, isdnX31AssignedTo=isdnX31AssignedTo, isdnCreditsMaxInDuration=isdnCreditsMaxInDuration, bibo=bibo, isdnStkEntry=isdnStkEntry, HexValue=HexValue, isdnIfNumberOfChannels=isdnIfNumberOfChannels, isdnCreditsEntry=isdnCreditsEntry, isdnloginAllowEntry=isdnloginAllowEntry, isdnCallDspItem=isdnCallDspItem, isdnCallAge=isdnCallAge, isdnChThroughput=isdnChThroughput, isdnCallHistoryTransmitPackets=isdnCallHistoryTransmitPackets, isdnCallHistoryTime=isdnCallHistoryTime, isdnChReceivedPackets=isdnChReceivedPackets, isdnIfBchannelControl=isdnIfBchannelControl, isdnCallHistoryChargeInfo=isdnCallHistoryChargeInfo, isdnIfAutoconfigState=isdnIfAutoconfigState, isdnCallIsdnIfIndex=isdnCallIsdnIfIndex, isdnCallHistoryDSS1Cause=isdnCallHistoryDSS1Cause, isdnIfDescription=isdnIfDescription, isdnChTransmitOctets=isdnChTransmitOctets, bintec=bintec, isdnStkTable=isdnStkTable, Date=Date, isdnCallReceivedErrors=isdnCallReceivedErrors, isdnCallStkNumber=isdnCallStkNumber, isdnStkLayer2State=isdnStkLayer2State, isdnCallHistoryTable=isdnCallHistoryTable, isdnChTransmitErrors=isdnChTransmitErrors, isdnCallHistoryReceivedOctets=isdnCallHistoryReceivedOctets, isdnCallCharge=isdnCallCharge, isdnCreditsMaxInCon=isdnCreditsMaxInCon, isdnloginAllowTable=isdnloginAllowTable, isdnLoginOnPPPDispatch=isdnLoginOnPPPDispatch, isdnCallHistoryStkNumber=isdnCallHistoryStkNumber, isdnStkIsdnIfIndex=isdnStkIsdnIfIndex, isdnloginAllowRemoteSubaddress=isdnloginAllowRemoteSubaddress, isdnChIsdnIfIndex=isdnChIsdnIfIndex, isdnChType=isdnChType, isdnCreditsTable=isdnCreditsTable, isdnCallTransmitPackets=isdnCallTransmitPackets, isdnIfTimerT3=isdnIfTimerT3, isdnIfActivates=isdnIfActivates, isdnAccountingTemplate=isdnAccountingTemplate, isdnIfUsePowerDetector=isdnIfUsePowerDetector, isdnCallHistoryTransmitOctets=isdnCallHistoryTransmitOctets, isdnCallHLC=isdnCallHLC, isdnCallHistoryReceivedPackets=isdnCallHistoryReceivedPackets, isdnCallHistoryDspItem=isdnCallHistoryDspItem, isdnDspUnit=isdnDspUnit, isdnChReceivedErrors=isdnChReceivedErrors, isdnCallHistoryTransmitErrors=isdnCallHistoryTransmitErrors, isdnCreditsMaxCurrentOutCon=isdnCreditsMaxCurrentOutCon, isdnCallRemoteNumber=isdnCallRemoteNumber, isdnDispatchEntry=isdnDispatchEntry, isdnDspDirection=isdnDspDirection, isdnDspLocalNumber=isdnDspLocalNumber, isdnCallLocalSubaddress=isdnCallLocalSubaddress, isdnIfActivationRequest=isdnIfActivationRequest, isdnCallState=isdnCallState, isdnCallHistoryServiceIndicator=isdnCallHistoryServiceIndicator, isdnCreditsTotalCharge=isdnCreditsTotalCharge, isdnCreditsSubsysNumber=isdnCreditsSubsysNumber, isdn=isdn, dod=dod, isdnCallChannel=isdnCallChannel, isdnIfMode=isdnIfMode, isdnCallScreening=isdnCallScreening, isdnCallHistoryRemoteNumber=isdnCallHistoryRemoteNumber, isdnCreditsMaxCurrentCon=isdnCreditsMaxCurrentCon, isdnChNumber=isdnChNumber, isdnloginAllowRemoteNumber=isdnloginAllowRemoteNumber, isdnCallRemoteSubaddress=isdnCallRemoteSubaddress, isdnCallHistoryInfo=isdnCallHistoryInfo, isdnChState=isdnChState, isdnCallInfo=isdnCallInfo, isdnCallHistoryLLC=isdnCallHistoryLLC, isdnCreditsMeasuretime=isdnCreditsMeasuretime, isdnCreditsCurrentInCon=isdnCreditsCurrentInCon, isdnCallTransmitErrors=isdnCallTransmitErrors, isdnStkClearAllCalls=isdnStkClearAllCalls, isdnCallHistoryLocalSubaddress=isdnCallHistoryLocalSubaddress, isdnStkSPID=isdnStkSPID, isdnCallAddInfo=isdnCallAddInfo, isdnCallHistory1TR6Cause=isdnCallHistory1TR6Cause, isdnCreditsCurrentOutCon=isdnCreditsCurrentOutCon, isdnIfAutoconfig=isdnIfAutoconfig, isdnDspSlot=isdnDspSlot, isdnCallServiceIndicator=isdnCallServiceIndicator, isdnCallLLC=isdnCallLLC, internet=internet, isdnStkTeiProc=isdnStkTeiProc, isdnDspUserName=isdnDspUserName, org=org, isdnCallHistoryDuration=isdnCallHistoryDuration, isdnStkBchannels=isdnStkBchannels, isdnCreditsTotalMaxCon=isdnCreditsTotalMaxCon, isdnIfTimeouts=isdnIfTimeouts, isdnStkConfiguration=isdnStkConfiguration, isdnCallHistoryEntry=isdnCallHistoryEntry, isdnCallHistoryLocalNumber=isdnCallHistoryLocalNumber, isdnCallLocalNumber=isdnCallLocalNumber, isdnCreditsTotalInCon=isdnCreditsTotalInCon, isdnCreditsMaxCharge=isdnCreditsMaxCharge, isdnX31TeiProc=isdnX31TeiProc, isdnCreditsTotalInDuration=isdnCreditsTotalInDuration, isdnCallHistoryAddInfo=isdnCallHistoryAddInfo, isdnX31TeiValue=isdnX31TeiValue, isdnIfIndex=isdnIfIndex, isdnChEntry=isdnChEntry, isdnCallHistoryBC=isdnCallHistoryBC, isdnDspMode=isdnDspMode, isdnCallHistoryCharge=isdnCallHistoryCharge, isdnX31IsdnIfIndex=isdnX31IsdnIfIndex, isdnCallHistoryScreening=isdnCallHistoryScreening, isdnChTransmitPackets=isdnChTransmitPackets, isdnloginAllowStkNumber=isdnloginAllowStkNumber, isdnDspBearer=isdnDspBearer, isdnIfLayer1State=isdnIfLayer1State, isdnCallHistoryChannel=isdnCallHistoryChannel, isdnCallReceivedOctets=isdnCallReceivedOctets)
