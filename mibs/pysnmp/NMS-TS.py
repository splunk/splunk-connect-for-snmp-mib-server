#
# PySNMP MIB module NMS-TS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-TS
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
nmslocal, = mibBuilder.importSymbols("NMS-SMI", "nmslocal")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, MibIdentifier, Unsigned32, Bits, Gauge32, Counter32, ModuleIdentity, ObjectIdentity, NotificationType, TimeTicks, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "MibIdentifier", "Unsigned32", "Bits", "Gauge32", "Counter32", "ModuleIdentity", "ObjectIdentity", "NotificationType", "TimeTicks", "IpAddress", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nmslts = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9))
nmstsLines = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLines.setStatus('mandatory')
nmsltsLineTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2), )
if mibBuilder.loadTexts: nmsltsLineTable.setStatus('mandatory')
nmsltsLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1), ).setIndexNames((0, "NMS-TS", "tsLineNumber"))
if mibBuilder.loadTexts: nmsltsLineEntry.setStatus('mandatory')
nmstsLineActive = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineActive.setStatus('mandatory')
nmstsLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("console", 2), ("terminal", 3), ("line-printer", 4), ("virtual-terminal", 5), ("auxiliary", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineType.setStatus('mandatory')
nmstsLineAutobaud = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineAutobaud.setStatus('mandatory')
nmstsLineSpeedin = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineSpeedin.setStatus('mandatory')
nmstsLineSpeedout = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineSpeedout.setStatus('mandatory')
nmstsLineFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("software-input", 3), ("software-output", 4), ("software-both", 5), ("hardware-input", 6), ("hardware-output", 7), ("hardware-both", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineFlow.setStatus('mandatory')
nmstsLineModem = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("call-in", 3), ("call-out", 4), ("cts-required", 5), ("ri-is-cd", 6), ("inout", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineModem.setStatus('mandatory')
nmstsLineLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineLoc.setStatus('mandatory')
nmstsLineTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineTerm.setStatus('mandatory')
nmstsLineScrlen = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineScrlen.setStatus('mandatory')
nmstsLineScrwid = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineScrwid.setStatus('mandatory')
nmstsLineEsc = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineEsc.setStatus('mandatory')
nmstsLineTmo = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineTmo.setStatus('mandatory')
nmstsLineSestmo = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineSestmo.setStatus('mandatory')
nmstsLineRotary = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineRotary.setStatus('mandatory')
nmstsLineUses = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineUses.setStatus('mandatory')
nmstsLineNses = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineNses.setStatus('mandatory')
nmstsLineUser = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineUser.setStatus('mandatory')
nmstsLineNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineNoise.setStatus('mandatory')
nmstsLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineNumber.setStatus('mandatory')
nmstsLineTimeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstsLineTimeActive.setStatus('mandatory')
nmsltsLineSessionTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3), )
if mibBuilder.loadTexts: nmsltsLineSessionTable.setStatus('mandatory')
nmsltsLineSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1), ).setIndexNames((0, "NMS-TS", "nmstslineSesLine"), (0, "NMS-TS", "nmstslineSesSession"))
if mibBuilder.loadTexts: nmsltsLineSessionEntry.setStatus('mandatory')
nmstslineSesType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("pad", 2), ("stream", 3), ("rlogin", 4), ("telnet", 5), ("tcp", 6), ("lat", 7), ("mop", 8), ("slip", 9), ("xremote", 10), ("rshell", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesType.setStatus('mandatory')
nmstslineSesDir = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("incoming", 2), ("outgoing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesDir.setStatus('mandatory')
nmstslineSesAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesAddr.setStatus('mandatory')
nmstslineSesName = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesName.setStatus('mandatory')
nmstslineSesCur = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesCur.setStatus('mandatory')
nmstslineSesIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesIdle.setStatus('mandatory')
nmstslineSesLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesLine.setStatus('mandatory')
nmstslineSesSession = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmstslineSesSession.setStatus('mandatory')
nmstsMsgTtyLine = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsMsgTtyLine.setStatus('mandatory')
nmstsMsgIntervaltim = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsMsgIntervaltim.setStatus('mandatory')
nmstsMsgDuration = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsMsgDuration.setStatus('mandatory')
nmstsMsgText = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsMsgText.setStatus('mandatory')
nmstsMsgTmpBanner = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("additive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsMsgTmpBanner.setStatus('mandatory')
nmstsMsgSend = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nothing", 1), ("reload", 2), ("messagedone", 3), ("abort", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsMsgSend.setStatus('mandatory')
nmstsClrTtyLine = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 9, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmstsClrTtyLine.setStatus('mandatory')
mibBuilder.exportSymbols("NMS-TS", nmstslineSesType=nmstslineSesType, nmstsMsgTmpBanner=nmstsMsgTmpBanner, nmstslineSesName=nmstslineSesName, nmstsMsgIntervaltim=nmstsMsgIntervaltim, nmstslineSesDir=nmstslineSesDir, nmstsLineScrwid=nmstsLineScrwid, nmstsLineNses=nmstsLineNses, nmstsLineScrlen=nmstsLineScrlen, nmstsLineSpeedin=nmstsLineSpeedin, nmstslineSesAddr=nmstslineSesAddr, nmstsLineActive=nmstsLineActive, nmstsLineTimeActive=nmstsLineTimeActive, nmstslineSesCur=nmstslineSesCur, nmstsMsgSend=nmstsMsgSend, nmslts=nmslts, nmstslineSesSession=nmstslineSesSession, nmstsLines=nmstsLines, nmstsMsgText=nmstsMsgText, nmstsLineSestmo=nmstsLineSestmo, nmstsLineNumber=nmstsLineNumber, nmstsLineRotary=nmstsLineRotary, nmstsLineAutobaud=nmstsLineAutobaud, nmstsLineNoise=nmstsLineNoise, nmstsMsgDuration=nmstsMsgDuration, nmsltsLineSessionTable=nmsltsLineSessionTable, nmstslineSesLine=nmstslineSesLine, nmstsClrTtyLine=nmstsClrTtyLine, nmstsLineEsc=nmstsLineEsc, nmsltsLineTable=nmsltsLineTable, nmsltsLineSessionEntry=nmsltsLineSessionEntry, nmstsMsgTtyLine=nmstsMsgTtyLine, nmstsLineTmo=nmstsLineTmo, nmsltsLineEntry=nmsltsLineEntry, nmstsLineSpeedout=nmstsLineSpeedout, nmstsLineTerm=nmstsLineTerm, nmstsLineModem=nmstsLineModem, nmstsLineFlow=nmstsLineFlow, nmstslineSesIdle=nmstslineSesIdle, nmstsLineType=nmstsLineType, nmstsLineLoc=nmstsLineLoc, nmstsLineUses=nmstsLineUses, nmstsLineUser=nmstsLineUser)
