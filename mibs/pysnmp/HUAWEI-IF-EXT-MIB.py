#
# PySNMP MIB module HUAWEI-IF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-IF-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
AtmVpIdentifier, AtmVcIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier", "AtmVcIdentifier")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifOperStatus, ifAdminStatus, ifIndex, InterfaceIndexOrZero, ifName, ifDescr, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifOperStatus", "ifAdminStatus", "ifIndex", "InterfaceIndexOrZero", "ifName", "ifDescr", "InterfaceIndex")
ipAdEntNetMask, = mibBuilder.importSymbols("IP-MIB", "ipAdEntNetMask")
PortList, VlanIdOrNone = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanIdOrNone")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
Counter64, iso, NotificationType, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Counter32, ModuleIdentity, Gauge32, ObjectIdentity, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "NotificationType", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Counter32", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibIdentifier", "IpAddress")
TextualConvention, TruthValue, RowStatus, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString", "PhysAddress")
hwIFExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41))
if mibBuilder.loadTexts: hwIFExtMib.setLastUpdated('200610312230Z')
if mibBuilder.loadTexts: hwIFExtMib.setOrganization('Huawei Technologies co.,Ltd.')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class SnmpPasswdString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '16a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

class HWDirectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class HwIpAddressType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("primary", 1), ("sub", 2))

hwIFExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1))
hwIFExtBase = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1))
hwIFExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1), )
if mibBuilder.loadTexts: hwIFExtTable.setStatus('current')
hwIFExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIFExtIndex"))
if mibBuilder.loadTexts: hwIFExtEntry.setStatus('current')
hwIFExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIFExtIndex.setStatus('current')
hwIFExtLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("layer2", 1), ("layer3", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtLayer.setStatus('current')
hwIFExtFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ethernetII", 1), ("ethernetSnap", 2), ("ethernet8022", 3), ("ethernet8023", 4), ("other", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIFExtFrameType.setStatus('current')
hwIFExtFlowStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtFlowStatInterval.setStatus('current')
hwIFExtFlushReceiveEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 5), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtFlushReceiveEnable.setStatus('current')
hwIFExtFlushVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 6), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtFlushVlanId.setStatus('current')
hwIFExtFlushPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 7), SnmpPasswdString().clone(hexValue="00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtFlushPasswd.setStatus('current')
hwIFExtFlowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flowUp", 1), ("flowDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIFExtFlowStatus.setStatus('current')
hwIFExtMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtMtu.setStatus('current')
hwIFExtMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 10), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtMacAddr.setStatus('current')
hwIFExtBlockPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtBlockPriority.setStatus('current')
hwIFExtMacShift = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("macShift", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFExtMacShift.setStatus('current')
hwIFExtSuppressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unsuppress", 0), ("suppress", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIFExtSuppressStatus.setStatus('current')
hwIFExtPhyStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIFExtPhyStatus.setStatus('current')
hwIFExtMemberOf = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIFExtMemberOf.setStatus('current')
hwLinkModeChangeAutoCreateIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 4), )
if mibBuilder.loadTexts: hwLinkModeChangeAutoCreateIfTable.setStatus('current')
hwLinkModeChangeAutoCreateIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 4, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwAutoIfIndex"))
if mibBuilder.loadTexts: hwLinkModeChangeAutoCreateIfEntry.setStatus('current')
hwAutoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAutoIfIndex.setStatus('current')
hwNewIfTimeslot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 4, 1, 2), Bits().clone(namedValues=NamedValues(("timeslot0", 0), ("timeslot1", 1), ("timeslot2", 2), ("timeslot3", 3), ("timeslot4", 4), ("timeslot5", 5), ("timeslot6", 6), ("timeslot7", 7), ("timeslot8", 8), ("timeslot9", 9), ("timeslot10", 10), ("timeslot11", 11), ("timeslot12", 12), ("timeslot13", 13), ("timeslot14", 14), ("timeslot15", 15), ("timeslot16", 16), ("timeslot17", 17), ("timeslot18", 18), ("timeslot19", 19), ("timeslot20", 20), ("timeslot21", 21), ("timeslot22", 22), ("timeslot23", 23), ("timeslot24", 24), ("timeslot25", 25), ("timeslot26", 26), ("timeslot27", 27), ("timeslot28", 28), ("timeslot29", 29), ("timeslot30", 30), ("timeslot31", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNewIfTimeslot.setStatus('current')
hwIFExtPhyNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIFExtPhyNumber.setStatus('current')
hwInterfaceIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2))
hwIfIpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1), )
if mibBuilder.loadTexts: hwIfIpTable.setStatus('current')
hwIfIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIpAdEntAddr"))
if mibBuilder.loadTexts: hwIfIpEntry.setStatus('current')
hwIpAdEntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpAdEntAddr.setStatus('current')
hwIpAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpAdEntIfIndex.setStatus('current')
hwIpAdEntNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpAdEntNetMask.setStatus('current')
hwIpAdEntBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpAdEntBcastAddr.setStatus('current')
hwIpAdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIpAdEntReasmMaxSize.setStatus('current')
hwIpAdEntAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 6), HwIpAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpAdEntAddressType.setStatus('current')
hwIfIpMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("assignedIp", 1), ("dhcpIp", 2), ("bootpIp", 3), ("other", 4), ("linklayer", 5), ("random", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfIpMethod.setStatus('current')
hwIpAdEntAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIpAdEntAddrStatus.setStatus('current')
hwIfIpUnnumberedTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2), )
if mibBuilder.loadTexts: hwIfIpUnnumberedTable.setStatus('current')
hwIfIpUnnumberedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwUnnumberedIfIndex"))
if mibBuilder.loadTexts: hwIfIpUnnumberedEntry.setStatus('current')
hwUnnumberedIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwUnnumberedIfIndex.setStatus('current')
hwLendIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2, 1, 11), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLendIfIndex.setStatus('current')
hwLendIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLendIpAddr.setStatus('current')
hwLendIpAddrNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLendIpAddrNetMask.setStatus('current')
hwUnnumberedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 2, 2, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwUnnumberedRowStatus.setStatus('current')
hwTrunkAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3))
hwTrunkIfMax = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkIfMax.setStatus('current')
hwTrunkNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkNextIndex.setStatus('current')
hwTrunkIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3), )
if mibBuilder.loadTexts: hwTrunkIfTable.setStatus('current')
hwTrunkIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwTrunkIndex"))
if mibBuilder.loadTexts: hwTrunkIfEntry.setStatus('current')
hwTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hwTrunkIndex.setStatus('current')
hwTrunkIfID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfID.setStatus('current')
hwTrunkIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethTrunk", 1), ("ipTrunk", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfType.setStatus('current')
hwTrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkIfIndex.setStatus('current')
hwTrunkIfModel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, -1))).clone(namedValues=NamedValues(("packetAll", 1), ("sourceDesMac", 2), ("packetUdp", 3), ("packetTcp", 4), ("sourceDesIp", 5), ("sourceMacIpv6", 6), ("sourceIpIpv6", 7), ("sourceIp", 8), ("desIp", 9), ("sourceMac", 10), ("desMac", 11), ("sourcePort", 12), ("desPort", 13), ("sourceDesPort", 14), ("fwdType", 15), ("qos", 16), ("labelNum", 17), ("label", 18), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfModel.setStatus('current')
hwTrunkIfBandWidthAffectLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfBandWidthAffectLinkNum.setStatus('current')
hwTrunkIfMinLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfMinLinkNum.setStatus('current')
hwTrunkIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfRowStatus.setStatus('current')
hwTrunkIfWorkingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, -1))).clone(namedValues=NamedValues(("masterBackup", 1), ("normalMode", 2), ("lacpStaticMode", 3), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfWorkingMode.setStatus('current')
hwTrunkIfWorkingState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, -1))).clone(namedValues=NamedValues(("generalMode", 1), ("initialization", 2), ("masterWorking", 3), ("backupWorking", 4), ("invalid", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkIfWorkingState.setStatus('current')
hwTrunkIfAutoRecover = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("generalMode", 1), ("autoRecover", 2), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfAutoRecover.setStatus('current')
hwTrunkIfPreemptEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("invalid", -1))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfPreemptEnable.setStatus('current')
hwTrunkIfPreemptDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 180), ValueRangeConstraint(-1, -1), )).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfPreemptDelay.setStatus('current')
hwTrunkIfTimeoutReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("fast", 1), ("slow", 2), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfTimeoutReceive.setStatus('current')
hwTrunkIfFlushSendEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("invalid", -1))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfFlushSendEnable.setStatus('current')
hwTrunkIfFlushVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 4094), ValueRangeConstraint(-1, -1), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfFlushVlanId.setStatus('current')
hwTrunkIfFlushPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 17), SnmpPasswdString().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfFlushPasswd.setStatus('current')
hwTrunkIfForceSwitchEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, -1))).clone(namedValues=NamedValues(("enabled", 1), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfForceSwitchEnable.setStatus('current')
hwTrunkIfStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("reset", 1), ("ready", 2), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfStatReset.setStatus('current')
hwTrunkBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 20), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkBandwidth.setStatus('current')
hwTrunkIfArpSendSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(800, 3000), ValueRangeConstraint(-1, -1), )).clone(2000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfArpSendSpeed.setStatus('current')
hwTrunkIfLagSelectedPortStd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("speed", 1), ("priority", 2), ("invalid", -1))).clone('priority')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfLagSelectedPortStd.setStatus('current')
hwTrunkIfLagMaxActiveLinkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 23), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkIfLagMaxActiveLinkNum.setStatus('current')
hwTrunkETrunkPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 65535), ValueRangeConstraint(-1, -1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkETrunkPriority.setStatus('current')
hwTrunkETrunkSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 25), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkETrunkSysID.setStatus('current')
hwTrunkETrunkPriorityReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("invalid", -1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkETrunkPriorityReset.setStatus('current')
hwTrunkETrunkSysIDReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("invalid", -1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkETrunkSysIDReset.setStatus('current')
hwTrunkLocalPrefMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkLocalPrefMode.setStatus('current')
hwTrunkIfTrackVrrpVrid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkIfTrackVrrpVrid.setStatus('current')
hwTrunkIfTrackVrrpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 30), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkIfTrackVrrpIfIndex.setStatus('current')
hwTrunkIfTrackVrrpReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("invalid", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkIfTrackVrrpReset.setStatus('current')
hwTrunkIfBackupPreemptEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 32), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkIfBackupPreemptEnable.setStatus('current')
hwTrunkIfBackupPreemptDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 30), ValueRangeConstraint(-1, -1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkIfBackupPreemptDelay.setStatus('current')
hwTrunkSystemPriority = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkSystemPriority.setStatus('current')
hwTrunkUnknownUnicastIfModel = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("packetAll", 1), ("sourceDesMac", 2), ("packetUdp", 3), ("packetTcp", 4), ("sourceDesIp", 5), ("sourceMacIpv6", 6), ("sourceIpIpv6", 7), ("sourceIp", 8), ("desIp", 9), ("sourceMac", 10), ("desMac", 11), ("sourcePort", 12), ("desPort", 13), ("sourceDesPort", 14), ("label", 15), ("ipOrLabel", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkUnknownUnicastIfModel.setStatus('current')
hwTrunkETrunkSystemPriority = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkETrunkSystemPriority.setStatus('current')
hwTrunkETrunkSystemID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 3, 7), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwTrunkETrunkSystemID.setStatus('current')
hwTrunkMemAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4))
hwTrunkMemTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1), )
if mibBuilder.loadTexts: hwTrunkMemTable.setStatus('current')
hwTrunkMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwTrunkIndex"), (0, "HUAWEI-IF-EXT-MIB", "hwTrunkMemifIndex"))
if mibBuilder.loadTexts: hwTrunkMemEntry.setStatus('current')
hwTrunkMemifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwTrunkMemifIndex.setStatus('current')
hwTrunkValidEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkValidEntry.setStatus('current')
hwTrunkSelectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("trunkSelected", 1), ("trunkDeselected", 2), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkSelectStatus.setStatus('current')
hwTrunkLacpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 4), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkLacpStatus.setStatus('current')
hwTrunkDeleteFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 5), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkDeleteFlag.setStatus('current')
hwTrunkOperstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkOperstatus.setStatus('current')
hwTrunkIsDefaultLagRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTrunkIsDefaultLagRecv.setStatus('current')
hwTrunkPortWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkPortWeight.setStatus('current')
hwTrunkPortStandby = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkPortStandby.setStatus('current')
hwTrunkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkRowStatus.setStatus('current')
hwTrunkPortMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("portSlave", 1), ("portMaster", 2), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkPortMaster.setStatus('current')
hwTrunkPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 65535), ValueRangeConstraint(-1, -1), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkPortPriority.setStatus('current')
hwTrunkPortStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("reset", 1), ("ready", 2), ("invalid", -1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTrunkPortStatReset.setStatus('current')
hwIFFlowStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 5))
hwIFFlowStatGlobalInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIFFlowStatGlobalInterval.setStatus('current')
hwIfStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6))
hwIfEtherStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1), )
if mibBuilder.loadTexts: hwIfEtherStatTable.setStatus('current')
hwIfEtherStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfEtherStatIfIndex"))
if mibBuilder.loadTexts: hwIfEtherStatEntry.setStatus('current')
hwIfEtherStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIfEtherStatIfIndex.setStatus('current')
hwIfEtherStatInPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPkts64Octets.setStatus('current')
hwIfEtherStatInPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPkts65to127Octets.setStatus('current')
hwIfEtherStatInPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPkts128to255Octets.setStatus('current')
hwIfEtherStatInPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPkts256to511Octets.setStatus('current')
hwIfEtherStatInPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPkts512to1023Octets.setStatus('current')
hwIfEtherStatInPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPkts1024to1518Octets.setStatus('current')
hwIfEtherStatInJumboPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInJumboPkts.setStatus('current')
hwIfEtherStatInCRCPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInCRCPkts.setStatus('current')
hwIfEtherStatInLongPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInLongPkts.setStatus('current')
hwIfEtherStatInJabberPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInJabberPkts.setStatus('current')
hwIfEtherStatInFragmentPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInFragmentPkts.setStatus('current')
hwIfEtherStatInUnderSizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInUnderSizePkts.setStatus('current')
hwIfEtherStatInOverRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInOverRunPkts.setStatus('current')
hwIfEtherStatInPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInPausePkts.setStatus('current')
hwIfEtherStatOutJumboPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutJumboPkts.setStatus('current')
hwIfEtherStatOutOverflowPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutOverflowPkts.setStatus('current')
hwIfEtherStatOutUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutUnderRunPkts.setStatus('current')
hwIfEtherStatOutPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutPausePkts.setStatus('current')
hwIfEthIfStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("ready", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfEthIfStatReset.setStatus('current')
hwIfEtherStatInDropEventPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInDropEventPkts.setStatus('current')
hwIfEtherStatInAlignmentPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInAlignmentPkts.setStatus('current')
hwIfEtherStatInSymbolPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInSymbolPkts.setStatus('current')
hwIfEtherStatInIgnoredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInIgnoredPkts.setStatus('current')
hwIfEtherStatInFramePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatInFramePkts.setStatus('current')
hwIfEtherStatOutCollisionPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutCollisionPkts.setStatus('current')
hwIfEtherStatOutDeferredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutDeferredPkts.setStatus('current')
hwIfEtherStatOutLateCollisionPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutLateCollisionPkts.setStatus('current')
hwIfEtherStatOutExcessiveCollisionPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutExcessiveCollisionPkts.setStatus('current')
hwIfEtherStatOutBufferPurgationPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 1, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfEtherStatOutBufferPurgationPkts.setStatus('current')
hwIfSdhStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2), )
if mibBuilder.loadTexts: hwIfSdhStatTable.setStatus('current')
hwIfSdhStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfSdhStatIfIndex"))
if mibBuilder.loadTexts: hwIfSdhStatEntry.setStatus('current')
hwIfSdhStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIfSdhStatIfIndex.setStatus('current')
hwIfSdhStatInCRCPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfSdhStatInCRCPkts.setStatus('current')
hwIfSdhStatInShortPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfSdhStatInShortPkts.setStatus('current')
hwIfSdhStatInLongPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfSdhStatInLongPkts.setStatus('current')
hwIfSdhStatOutOverRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfSdhStatOutOverRunPkts.setStatus('current')
hwIfSdhStatOutUnderRunPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfSdhStatOutUnderRunPkts.setStatus('current')
hwIfSdhIfStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("ready", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfSdhIfStatReset.setStatus('current')
hwIfAtmStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3), )
if mibBuilder.loadTexts: hwIfAtmStatTable.setStatus('current')
hwIfAtmStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfAtmStatIfIndex"))
if mibBuilder.loadTexts: hwIfAtmStatEntry.setStatus('current')
hwIfAtmStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIfAtmStatIfIndex.setStatus('current')
hwIfAtmStatInGoodCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfAtmStatInGoodCells.setStatus('current')
hwIfAtmStatInIdleCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfAtmStatInIdleCells.setStatus('current')
hwIfAtmStatInCorrectedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfAtmStatInCorrectedCells.setStatus('current')
hwIfAtmStatInUncorrectedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfAtmStatInUncorrectedCells.setStatus('current')
hwIfAtmStatOutGoodCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfAtmStatOutGoodCells.setStatus('current')
hwIfAtmStatOutIdleCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfAtmStatOutIdleCells.setStatus('current')
hwIfAtmIfStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("ready", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfAtmIfStatReset.setStatus('current')
hwIfMonitorObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7))
hwIfMonitorThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1), )
if mibBuilder.loadTexts: hwIfMonitorThresholdTable.setStatus('current')
hwIfMonitorThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfMonitorIndex"))
if mibBuilder.loadTexts: hwIfMonitorThresholdEntry.setStatus('current')
hwIfMonitorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIfMonitorIndex.setStatus('current')
hwIfMonitorCrcErrorStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorCrcErrorStatistics.setStatus('current')
hwIfMonitorCrcErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorCrcErrorThreshold.setStatus('current')
hwIfMonitorCrcErrorInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorCrcErrorInterval.setStatus('current')
hwIfMonitorSdhErrorStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorSdhErrorStatistics.setStatus('current')
hwIfMonitorSdhErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhErrorThreshold.setStatus('current')
hwIfMonitorSdhErrorInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhErrorInterval.setStatus('current')
hwIfMonitorInputRatePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorInputRatePercentage.setStatus('current')
hwIfMonitorInputRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorInputRateThreshold.setStatus('current')
hwIfMonitorOutputRatePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorOutputRatePercentage.setStatus('current')
hwIfMonitorOutputRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorOutputRateThreshold.setStatus('current')
hwIfMonitorPauseFrameStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorPauseFrameStatistics.setStatus('current')
hwIfMonitorPauseFrameThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorPauseFrameThreshold.setStatus('current')
hwIfMonitorPauseFrameInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorPauseFrameInterval.setStatus('current')
hwIfMonitorDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorDelayValue.setStatus('current')
hwIfMonitorDelayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorDelayThreshold.setStatus('current')
hwIfMonitorJitterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorJitterValue.setStatus('current')
hwIfMonitorJitterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorJitterThreshold.setStatus('current')
hwIfMonitorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorName.setStatus('current')
hwIfMonitorSdhB1ErrorStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorSdhB1ErrorStatistics.setStatus('current')
hwIfMonitorSdhB1ErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhB1ErrorThreshold.setStatus('current')
hwIfMonitorSdhB1ErrorInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhB1ErrorInterval.setStatus('current')
hwIfMonitorSdhB2ErrorStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorSdhB2ErrorStatistics.setStatus('current')
hwIfMonitorSdhB2ErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhB2ErrorThreshold.setStatus('current')
hwIfMonitorSdhB2ErrorInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhB2ErrorInterval.setStatus('current')
hwIfMonitorSymbolErrorStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorSymbolErrorStatistics.setStatus('current')
hwIfMonitorSymbolErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSymbolErrorThreshold.setStatus('current')
hwIfMonitorSymbolErrorInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSymbolErrorInterval.setStatus('current')
hwIfMonitorBadBytesErrorStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfMonitorBadBytesErrorStatistics.setStatus('current')
hwIfMonitorBadBytesErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorBadBytesErrorThreshold.setStatus('current')
hwIfMonitorBadBytesErrorInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 7, 1, 1, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorBadBytesErrorInterval.setStatus('current')
hwIfMonitorGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8))
hwIfMonitorCrcEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorCrcEnabledStatus.setStatus('current')
hwIfMonitorSdhEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorSdhEnabledStatus.setStatus('current')
hwIfMonitorInputRateEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorInputRateEnabledStatus.setStatus('current')
hwIfMonitorOutputRateEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorOutputRateEnabledStatus.setStatus('current')
hwIfMonitorHalfDuplexEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorHalfDuplexEnabledStatus.setStatus('current')
hwIfMonitorPauseRisingEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 6), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorPauseRisingEnabledStatus.setStatus('current')
hwIfMonitorPauseContinuingEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 7), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIfMonitorPauseContinuingEnabledStatus.setStatus('current')
hwifMonitorBadBytesEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 8, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifMonitorBadBytesEnabledStatus.setStatus('current')
hwAdminVrrpMemberIf = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9))
hwIfFlowChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIfFlowChangeTime.setStatus('obsolete')
hwAdminVrrpMemberIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2), )
if mibBuilder.loadTexts: hwAdminVrrpMemberIfTable.setStatus('obsolete')
hwAdminVrrpMemberIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwAdminVrrpMemberIfIndex"))
if mibBuilder.loadTexts: hwAdminVrrpMemberIfEntry.setStatus('obsolete')
hwAdminVrrpMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwAdminVrrpMemberIfIndex.setStatus('obsolete')
hwAdminVrrpVrid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpVrid.setStatus('obsolete')
hwAdminVrrpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpIfIndex.setStatus('obsolete')
hwAdminVrrpMemberIfFlowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAdminVrrpMemberIfFlowStatus.setStatus('obsolete')
hwAdminVrrpMemberIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 9, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAdminVrrpMemberIfRowStatus.setStatus('obsolete')
hwIfFluxLimit = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10))
hwIfFluxLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1), )
if mibBuilder.loadTexts: hwIfFluxLimitTable.setStatus('current')
hwIfFluxLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfFluxIfIndex"), (0, "HUAWEI-IF-EXT-MIB", "hwIfFluxVlanId"))
if mibBuilder.loadTexts: hwIfFluxLimitEntry.setStatus('current')
hwIfFluxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIfFluxIfIndex.setStatus('current')
hwIfFluxVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 2), VlanIdOrNone())
if mibBuilder.loadTexts: hwIfFluxVlanId.setStatus('current')
hwIfFluxDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 3), HWDirectionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfFluxDirection.setStatus('current')
hwIfFluxLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcastSuppression", 1), ("multicastSuppression", 2), ("unknownUnicastSuppression", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfFluxLimitType.setStatus('current')
hwIfFluxCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfFluxCir.setStatus('current')
hwIfFluxCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfFluxCbs.setStatus('current')
hwIfFluxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 10, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfFluxRowStatus.setStatus('current')
hwIfDiffServ = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11))
hwIfDiffServTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11, 1), )
if mibBuilder.loadTexts: hwIfDiffServTable.setStatus('current')
hwIfDiffServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfDiffServIndex"))
if mibBuilder.loadTexts: hwIfDiffServEntry.setStatus('current')
hwIfDiffServIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwIfDiffServIndex.setStatus('current')
hwIfDiffServMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pipe", 1), ("uniform", 2), ("shortpipe", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfDiffServMode.setStatus('current')
hwIfDiffServServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("default", 0), ("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfDiffServServiceClass.setStatus('current')
hwIfDiffServColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfDiffServColor.setStatus('current')
hwIfQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 12))
hwIfQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 12, 1), )
if mibBuilder.loadTexts: hwIfQueryTable.setStatus('current')
hwIfQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 12, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwIfName"))
if mibBuilder.loadTexts: hwIfQueryEntry.setStatus('current')
hwIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 12, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47)))
if mibBuilder.loadTexts: hwIfName.setStatus('current')
hwIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 12, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfIndex.setStatus('current')
hwLogicIfAttrib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13))
hwLogicIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1), )
if mibBuilder.loadTexts: hwLogicIfTable.setStatus('current')
hwLogicIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwLogicIfIndex"))
if mibBuilder.loadTexts: hwLogicIfEntry.setStatus('current')
hwLogicIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwLogicIfIndex.setStatus('current')
hwLogicIfMainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfMainIndex.setStatus('current')
hwLogicIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("ve", 1), ("loopback", 2), ("vlanif", 3), ("subVe", 4), ("subEthTrunk", 5), ("subEthernet", 6), ("subAtm", 7), ("imaGroup", 8), ("subImaGroup", 9), ("subSerial", 10), ("tunnel", 11), ("mpGroup", 13), ("bridgeIf", 14), ("subAtmTrunk", 15), ("dslGroup", 16), ("wlanEss", 17), ("stackPort", 18)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLogicIfType.setStatus('current')
hwLogicIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLogicIfName.setStatus('current')
hwLogicIfParaOne = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("p2p", 1), ("p2mp", 2), ("none", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLogicIfParaOne.setStatus('current')
hwLogicIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwLogicIfRowStatus.setStatus('current')
hwLogicIfHelpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2), )
if mibBuilder.loadTexts: hwLogicIfHelpTable.setStatus('current')
hwLogicIfHelpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwLogicIfhelpType"))
if mibBuilder.loadTexts: hwLogicIfHelpEntry.setStatus('current')
hwLogicIfhelpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 11, 13, 16))).clone(namedValues=NamedValues(("ve", 1), ("ima-Group", 8), ("tunnel", 11), ("mp-group", 13), ("dslGroup", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfhelpType.setStatus('current')
hwLogicIfChassisNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfChassisNumber.setStatus('current')
hwLogicIfSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfSlotNumber.setStatus('current')
hwLogicIfCardNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfCardNumber.setStatus('current')
hwLogicIfMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfMin.setStatus('current')
hwLogicIfMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfMax.setStatus('current')
hwLogicIfTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicIfTotal.setStatus('current')
hwLogicIfDynamicHelpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3), )
if mibBuilder.loadTexts: hwLogicIfDynamicHelpTable.setStatus('current')
hwLogicIfDynamicHelpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfhelpType"), (0, "HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfChassisNumber"), (0, "HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfSlotNumber"), (0, "HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfCardNumber"))
if mibBuilder.loadTexts: hwLogicIfDynamicHelpEntry.setStatus('current')
hwLogicDynamicIfhelpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 11, 13, 16))).clone(namedValues=NamedValues(("ve", 1), ("ima-Group", 8), ("tunnel", 11), ("mp-group", 13), ("dslGroup", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfhelpType.setStatus('current')
hwLogicDynamicIfChassisNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfChassisNumber.setStatus('current')
hwLogicDynamicIfSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfSlotNumber.setStatus('current')
hwLogicDynamicIfCardNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfCardNumber.setStatus('current')
hwLogicDynamicIfMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfMin.setStatus('current')
hwLogicDynamicIfMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfMax.setStatus('current')
hwLogicDynamicIfTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 13, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLogicDynamicIfTotal.setStatus('current')
hwCppsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14))
hwCppsGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCppsGlobalEnable.setStatus('current')
hwCppsInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 2), )
if mibBuilder.loadTexts: hwCppsInterfaceTable.setStatus('current')
hwCppsInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 2, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwCppsInterfaceIndex"))
if mibBuilder.loadTexts: hwCppsInterfaceEntry.setStatus('current')
hwCppsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCppsInterfaceIndex.setStatus('current')
hwCppsPortPvcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 2, 1, 2), EnabledStatus().clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCppsPortPvcEnable.setStatus('current')
hwCppsPortVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 2, 1, 3), EnabledStatus().clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCppsPortVlanEnable.setStatus('current')
hwCppsIfStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 3), )
if mibBuilder.loadTexts: hwCppsIfStatisticsTable.setStatus('current')
hwCppsIfStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 3, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwCppsIfStatisticsIndex"))
if mibBuilder.loadTexts: hwCppsIfStatisticsEntry.setStatus('current')
hwCppsIfStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCppsIfStatisticsIndex.setStatus('current')
hwCppsInterfacePktStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCppsInterfacePktStatisic.setStatus('current')
hwCppsInterfaceByteStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCppsInterfaceByteStatisic.setStatus('current')
hwCppsResetInterfaceStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unreset", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCppsResetInterfaceStatisic.setStatus('current')
hwCppsAtmPvcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4), )
if mibBuilder.loadTexts: hwCppsAtmPvcTable.setStatus('current')
hwCppsAtmPvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwCppsAtmIfIndex"), (0, "HUAWEI-IF-EXT-MIB", "hwCppsAtmVpi"), (0, "HUAWEI-IF-EXT-MIB", "hwCppsAtmVci"))
if mibBuilder.loadTexts: hwCppsAtmPvcEntry.setStatus('current')
hwCppsAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCppsAtmIfIndex.setStatus('current')
hwCppsAtmVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: hwCppsAtmVpi.setStatus('current')
hwCppsAtmVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1, 3), AtmVcIdentifier())
if mibBuilder.loadTexts: hwCppsAtmVci.setStatus('current')
hwCppsAtmPvcPktStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCppsAtmPvcPktStatisic.setStatus('current')
hwCppsAtmPvcByteStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCppsAtmPvcByteStatisic.setStatus('current')
hwCppsResetAtmPvcStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unreset", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCppsResetAtmPvcStatisic.setStatus('current')
hwCppsPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5), )
if mibBuilder.loadTexts: hwCppsPortVlanTable.setStatus('current')
hwCppsPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwCppsPortIndex"), (0, "HUAWEI-IF-EXT-MIB", "hwCppsVlanId"))
if mibBuilder.loadTexts: hwCppsPortVlanEntry.setStatus('current')
hwCppsPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCppsPortIndex.setStatus('current')
hwCppsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5, 1, 2), VlanIdOrNone())
if mibBuilder.loadTexts: hwCppsVlanId.setStatus('current')
hwCppsPortVlanPktStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCppsPortVlanPktStatisic.setStatus('current')
hwCppsPortVlanByteStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCppsPortVlanByteStatisic.setStatus('current')
hwCppsResetPortVlanStatisic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 14, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unreset", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCppsResetPortVlanStatisic.setStatus('current')
hwPortIsolationGroupAttrib = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 15))
hwPortIsolationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 15, 1), )
if mibBuilder.loadTexts: hwPortIsolationGroupTable.setStatus('current')
hwPortIsolationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 15, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwPortIsolationGroupIndex"))
if mibBuilder.loadTexts: hwPortIsolationGroupEntry.setStatus('current')
hwPortIsolationGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: hwPortIsolationGroupIndex.setStatus('current')
hwPortIsolationGroupPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 15, 1, 1, 2), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortIsolationGroupPortList.setStatus('current')
hwPortIsolationGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 15, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortIsolationGroupRowStatus.setStatus('current')
hwVTrunkAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16))
hwVTrunkIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16, 1), )
if mibBuilder.loadTexts: hwVTrunkIfTable.setStatus('current')
hwVTrunkIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwVTrunkIfIndex"))
if mibBuilder.loadTexts: hwVTrunkIfEntry.setStatus('current')
hwVTrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVTrunkIfIndex.setStatus('current')
hwVTrunkIfID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVTrunkIfID.setStatus('current')
hwVTrunkIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pos-Trunk", 1), ("cpos-Trunk", 2), ("atm-Trunk", 3), ("atm-bundle", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVTrunkIfType.setStatus('current')
hwVTrunkIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 16, 1, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVTrunkIfRowStatus.setStatus('current')
hwVTrunkMemAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17))
hwVTrunkMemTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1), )
if mibBuilder.loadTexts: hwVTrunkMemTable.setStatus('current')
hwVTrunkMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwVTrunkMemIfIndex"))
if mibBuilder.loadTexts: hwVTrunkMemEntry.setStatus('current')
hwVTrunkMemIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwVTrunkMemIfIndex.setStatus('current')
hwVTrunkIfnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVTrunkIfnetIndex.setStatus('current')
hwVTrunkValidEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVTrunkValidEntry.setStatus('current')
hwVTrunkOperstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVTrunkOperstatus.setStatus('current')
hwVTrunkPortActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portInactive", 1), ("portActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVTrunkPortActive.setStatus('current')
hwVTrunkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 17, 1, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVTrunkRowStatus.setStatus('current')
hwMasterBackupTrunkSubinterfaceAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18))
hwMasterBackupTrunkSubinterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1), )
if mibBuilder.loadTexts: hwMasterBackupTrunkSubinterfaceTable.setStatus('current')
hwMasterBackupTrunkSubinterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwBackupTrunkIfIndex"))
if mibBuilder.loadTexts: hwMasterBackupTrunkSubinterfaceEntry.setStatus('current')
hwBackupTrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwBackupTrunkIfIndex.setStatus('current')
hwBackupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("init", 1), ("master", 2), ("backup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBackupStatus.setStatus('current')
hwRevertiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("revertive", 1), ("non-revertive", 2))).clone('revertive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRevertiveMode.setStatus('current')
hwWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwWtrTime.setStatus('current')
hwFlushVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 18, 1, 1, 5), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFlushVlanId.setStatus('current')
hwVaspPort = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 19))
hwVaspPortPeerMacTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 19, 1), )
if mibBuilder.loadTexts: hwVaspPortPeerMacTable.setStatus('current')
hwVaspPortPeerMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 19, 1, 1), ).setIndexNames((0, "HUAWEI-IF-EXT-MIB", "hwVaspPortIfIndex"))
if mibBuilder.loadTexts: hwVaspPortPeerMacEntry.setStatus('current')
hwVaspPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 19, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVaspPortIfIndex.setStatus('current')
hwVaspPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVaspPortName.setStatus('current')
hwVaspPortPeerMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 19, 1, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVaspPortPeerMac.setStatus('current')
hwIFExtTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 20))
hwLinkDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))).clone(namedValues=NamedValues(("physicalLinkDown", 1), ("lacpNegotiationFailed", 2), ("receiveConfReqPacket", 3), ("receiveConfAckPacket", 4), ("receiveNakPacket", 5), ("receiveTermPacket", 6), ("receiveTermAckPacket", 7), ("receiveCodeRejPacket", 8), ("receiveProtoRejPacket", 9), ("chapAuthenticationFailed", 10), ("papAuthenticationFailed", 11), ("keepaliveOutOfTime", 12), ("pvcDown", 13), ("efmSessionFailed", 14), ("tunnelDownOrInexist", 15), ("admindown", 16), ("protocoldown", 17), ("adminup", 18), ("protocolup", 19), ("mainifdown", 20), ("physicalLinkIsUp", 21), ("conditionsForActivationNotMet", 22), ("conditionsForActivationAreMet", 23), ("tunnelIsUp", 24), ("interfaceIsDeleted", 25), ("bfdSessionDown", 26), ("bfdSessionUp", 27), ("efmSessionUp", 28), ("portAlarmDown", 29), ("dldpIsDown", 30), ("dldpIsUp", 31), ("vrrpFlowDown", 32), ("vrrpFlowUp", 33)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLinkDownReason.setStatus('current')
hwMainIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 20, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMainIfName.setStatus('current')
hwCfmOverPhysicalName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 1, 20, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwCfmOverPhysicalName.setStatus('current')
hwIFExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2))
hwIFExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1))
hwTrunkIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 1)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIFExtPhyStatus"), ("HUAWEI-IF-EXT-MIB", "hwIFExtMemberOf"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfMax"), ("HUAWEI-IF-EXT-MIB", "hwTrunkNextIndex"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIndex"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfType"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfModel"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfBandWidthAffectLinkNum"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfMinLinkNum"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfRowStatus"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfWorkingMode"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfWorkingState"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfAutoRecover"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfPreemptEnable"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfPreemptDelay"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfTimeoutReceive"), ("HUAWEI-IF-EXT-MIB", "hwTrunkBandwidth"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfFlushSendEnable"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfFlushVlanId"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfFlushPasswd"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfForceSwitchEnable"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfStatReset"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfLagSelectedPortStd"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfLagMaxActiveLinkNum"), ("HUAWEI-IF-EXT-MIB", "hwTrunkETrunkPriority"), ("HUAWEI-IF-EXT-MIB", "hwTrunkETrunkSysID"), ("HUAWEI-IF-EXT-MIB", "hwTrunkETrunkPriorityReset"), ("HUAWEI-IF-EXT-MIB", "hwTrunkETrunkSysIDReset"), ("HUAWEI-IF-EXT-MIB", "hwTrunkLocalPrefMode"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfTrackVrrpVrid"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfTrackVrrpIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfTrackVrrpReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTrunkIfGroup = hwTrunkIfGroup.setStatus('current')
hwIfIpAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 2)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIpAdEntAddr"), ("HUAWEI-IF-EXT-MIB", "hwIpAdEntIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwIpAdEntNetMask"), ("HUAWEI-IF-EXT-MIB", "hwIpAdEntBcastAddr"), ("HUAWEI-IF-EXT-MIB", "hwIpAdEntReasmMaxSize"), ("HUAWEI-IF-EXT-MIB", "hwIpAdEntAddressType"), ("HUAWEI-IF-EXT-MIB", "hwIfIpMethod"), ("HUAWEI-IF-EXT-MIB", "hwIpAdEntAddrStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfIpAddressGroup = hwIfIpAddressGroup.setStatus('current')
hwIFExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 3)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIFExtLayer"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFrameType"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlowStatInterval"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlushReceiveEnable"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlushVlanId"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlushPasswd"), ("HUAWEI-IF-EXT-MIB", "hwTrunkSystemPriority"), ("HUAWEI-IF-EXT-MIB", "hwTrunkUnknownUnicastIfModel"), ("HUAWEI-IF-EXT-MIB", "hwTrunkETrunkSystemPriority"), ("HUAWEI-IF-EXT-MIB", "hwTrunkETrunkSystemID"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlowStatus"), ("HUAWEI-IF-EXT-MIB", "hwIFExtMtu"), ("HUAWEI-IF-EXT-MIB", "hwIFExtMacAddr"), ("HUAWEI-IF-EXT-MIB", "hwIFExtBlockPriority"), ("HUAWEI-IF-EXT-MIB", "hwIFExtMacShift"), ("HUAWEI-IF-EXT-MIB", "hwIFExtSuppressStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIFExtGroup = hwIFExtGroup.setStatus('current')
hwTrunkMemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 4)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkMemifIndex"), ("HUAWEI-IF-EXT-MIB", "hwTrunkValidEntry"), ("HUAWEI-IF-EXT-MIB", "hwTrunkSelectStatus"), ("HUAWEI-IF-EXT-MIB", "hwTrunkLacpStatus"), ("HUAWEI-IF-EXT-MIB", "hwTrunkDeleteFlag"), ("HUAWEI-IF-EXT-MIB", "hwTrunkOperstatus"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIsDefaultLagRecv"), ("HUAWEI-IF-EXT-MIB", "hwTrunkPortWeight"), ("HUAWEI-IF-EXT-MIB", "hwTrunkPortStandby"), ("HUAWEI-IF-EXT-MIB", "hwTrunkPortMaster"), ("HUAWEI-IF-EXT-MIB", "hwTrunkPortPriority"), ("HUAWEI-IF-EXT-MIB", "hwTrunkPortStatReset"), ("HUAWEI-IF-EXT-MIB", "hwTrunkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTrunkMemGroup = hwTrunkMemGroup.setStatus('current')
hwIFFlowStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 5)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIFFlowStatGlobalInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIFFlowStatGroup = hwIFFlowStatGroup.setStatus('current')
hwAdminVrrpMemberIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 6)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfFlowChangeTime"), ("HUAWEI-IF-EXT-MIB", "hwAdminVrrpVrid"), ("HUAWEI-IF-EXT-MIB", "hwAdminVrrpIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwAdminVrrpMemberIfFlowStatus"), ("HUAWEI-IF-EXT-MIB", "hwAdminVrrpMemberIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAdminVrrpMemberIfGroup = hwAdminVrrpMemberIfGroup.setStatus('obsolete')
hwIfEtherStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 7)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPkts64Octets"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPkts65to127Octets"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPkts128to255Octets"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPkts256to511Octets"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPkts512to1023Octets"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPkts1024to1518Octets"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInJumboPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInCRCPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInLongPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInJabberPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInFragmentPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInUnderSizePkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInOverRunPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInPausePkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutJumboPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutOverflowPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutUnderRunPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutPausePkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEthIfStatReset"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInDropEventPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInAlignmentPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInSymbolPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInIgnoredPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatInFramePkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutCollisionPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutDeferredPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutLateCollisionPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutExcessiveCollisionPkts"), ("HUAWEI-IF-EXT-MIB", "hwIfEtherStatOutBufferPurgationPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfEtherStatGroup = hwIfEtherStatGroup.setStatus('current')
hwIFExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 2))
hwIfMonitorThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 8)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRatePercentage"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRateThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRatePercentage"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRateThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorDelayValue"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorDelayThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorJitterValue"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorJitterThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfMonitorThresholdGroup = hwIfMonitorThresholdGroup.setStatus('current')
hwIfMonitorGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 9)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRateEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRateEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorHalfDuplexEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseRisingEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseContinuingEnabledStatus"), ("HUAWEI-IF-EXT-MIB", "hwifMonitorBadBytesEnabledStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfMonitorGeneralGroup = hwIfMonitorGeneralGroup.setStatus('current')
hwIfFluxLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 10)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfFluxDirection"), ("HUAWEI-IF-EXT-MIB", "hwIfFluxLimitType"), ("HUAWEI-IF-EXT-MIB", "hwIfFluxCir"), ("HUAWEI-IF-EXT-MIB", "hwIfFluxCbs"), ("HUAWEI-IF-EXT-MIB", "hwIfFluxRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfFluxLimitGroup = hwIfFluxLimitGroup.setStatus('current')
hwIfDiffServGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 11)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfDiffServMode"), ("HUAWEI-IF-EXT-MIB", "hwIfDiffServServiceClass"), ("HUAWEI-IF-EXT-MIB", "hwIfDiffServColor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfDiffServGroup = hwIfDiffServGroup.setStatus('current')
hwIfQueryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 12)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfQueryGroup = hwIfQueryGroup.setStatus('current')
hwLogicIfAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 13)).setObjects(("HUAWEI-IF-EXT-MIB", "hwLogicIfMainIndex"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfType"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfName"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfParaOne"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLogicIfAttrGroup = hwLogicIfAttrGroup.setStatus('current')
hwIfIpUnnumberedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 14)).setObjects(("HUAWEI-IF-EXT-MIB", "hwLendIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwLendIpAddr"), ("HUAWEI-IF-EXT-MIB", "hwLendIpAddrNetMask"), ("HUAWEI-IF-EXT-MIB", "hwUnnumberedRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIfIpUnnumberedGroup = hwIfIpUnnumberedGroup.setStatus('current')
hwLinkModeChangeAutoCreateIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 15)).setObjects(("HUAWEI-IF-EXT-MIB", "hwNewIfTimeslot"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLinkModeChangeAutoCreateIfGroup = hwLinkModeChangeAutoCreateIfGroup.setStatus('current')
hwCppsGlobalEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 16)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCppsGlobalEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCppsGlobalEnableGroup = hwCppsGlobalEnableGroup.setStatus('current')
hwCppsInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 17)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCppsPortPvcEnable"), ("HUAWEI-IF-EXT-MIB", "hwCppsPortVlanEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCppsInterfaceGroup = hwCppsInterfaceGroup.setStatus('current')
hwCppsIfStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 18)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCppsInterfacePktStatisic"), ("HUAWEI-IF-EXT-MIB", "hwCppsInterfaceByteStatisic"), ("HUAWEI-IF-EXT-MIB", "hwCppsResetInterfaceStatisic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCppsIfStatisticsGroup = hwCppsIfStatisticsGroup.setStatus('current')
hwCppsAtmPvcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 19)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCppsAtmPvcPktStatisic"), ("HUAWEI-IF-EXT-MIB", "hwCppsAtmPvcByteStatisic"), ("HUAWEI-IF-EXT-MIB", "hwCppsResetAtmPvcStatisic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCppsAtmPvcGroup = hwCppsAtmPvcGroup.setStatus('current')
hwCppsPortVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 20)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCppsPortVlanPktStatisic"), ("HUAWEI-IF-EXT-MIB", "hwCppsPortVlanByteStatisic"), ("HUAWEI-IF-EXT-MIB", "hwCppsResetPortVlanStatisic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCppsPortVlanGroup = hwCppsPortVlanGroup.setStatus('current')
hwPortIsolationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 21)).setObjects(("HUAWEI-IF-EXT-MIB", "hwPortIsolationGroupPortList"), ("HUAWEI-IF-EXT-MIB", "hwPortIsolationGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPortIsolationGroup = hwPortIsolationGroup.setStatus('current')
hwVTrunkIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 22)).setObjects(("HUAWEI-IF-EXT-MIB", "hwVTrunkIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkIfID"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkIfType"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVTrunkIfGroup = hwVTrunkIfGroup.setStatus('current')
hwVTrunkMemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 23)).setObjects(("HUAWEI-IF-EXT-MIB", "hwVTrunkMemIfIndex"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkValidEntry"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkOperstatus"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkPortActive"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVTrunkMemGroup = hwVTrunkMemGroup.setStatus('current')
hwLogicIfHelpTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 24)).setObjects(("HUAWEI-IF-EXT-MIB", "hwLogicIfhelpType"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfChassisNumber"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfSlotNumber"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfCardNumber"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfMin"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfMax"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLogicIfHelpTableGroup = hwLogicIfHelpTableGroup.setStatus('current')
hwSubInterfaceBackupTrunkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 25)).setObjects(("HUAWEI-IF-EXT-MIB", "hwBackupStatus"), ("HUAWEI-IF-EXT-MIB", "hwRevertiveMode"), ("HUAWEI-IF-EXT-MIB", "hwWtrTime"), ("HUAWEI-IF-EXT-MIB", "hwFlushVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSubInterfaceBackupTrunkGroup = hwSubInterfaceBackupTrunkGroup.setStatus('current')
hwVaspPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 26)).setObjects(("HUAWEI-IF-EXT-MIB", "hwVaspPortName"), ("HUAWEI-IF-EXT-MIB", "hwVaspPortPeerMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVaspPortGroup = hwVaspPortGroup.setStatus('current')
hwLogicIfDynamicHelpTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 1, 27)).setObjects(("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfhelpType"), ("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfChassisNumber"), ("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfSlotNumber"), ("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfCardNumber"), ("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfMin"), ("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfMax"), ("HUAWEI-IF-EXT-MIB", "hwLogicDynamicIfTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLogicIfDynamicHelpTableGroup = hwLogicIfDynamicHelpTableGroup.setStatus('current')
hwIFExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 2, 2, 1)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfGroup"), ("HUAWEI-IF-EXT-MIB", "hwIfIpAddressGroup"), ("HUAWEI-IF-EXT-MIB", "hwIFExtGroup"), ("HUAWEI-IF-EXT-MIB", "hwTrunkMemGroup"), ("HUAWEI-IF-EXT-MIB", "hwIFFlowStatGroup"), ("HUAWEI-IF-EXT-MIB", "hwIfQueryGroup"), ("HUAWEI-IF-EXT-MIB", "hwLogicIfAttrGroup"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkIfGroup"), ("HUAWEI-IF-EXT-MIB", "hwVTrunkMemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIFExtCompliance = hwIFExtCompliance.setStatus('current')
hwIFExtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3))
hwTrunkWorkingSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 1)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("HUAWEI-IF-EXT-MIB", "hwTrunkIfWorkingState"))
if mibBuilder.loadTexts: hwTrunkWorkingSwitch.setStatus('current')
hwLacpNegotiateFailed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 2)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("IF-MIB", "ifName"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwLacpNegotiateFailed.setStatus('current')
hwLacpTotalLinkLoss = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 3)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwLacpTotalLinkLoss.setStatus('current')
hwLacpPartialLinkLoss = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 4)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwLacpPartialLinkLoss.setStatus('current')
hwIfFlowDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 5)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlowStatus"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwIfFlowDown.setStatus('current')
hwIfFlowUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 6)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("HUAWEI-IF-EXT-MIB", "hwIFExtFlowStatus"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwIfFlowUp.setStatus('current')
hwIfNameChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 7))
if mibBuilder.loadTexts: hwIfNameChange.setStatus('current')
hwIfNameChangeResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 8))
if mibBuilder.loadTexts: hwIfNameChangeResume.setStatus('current')
hwExtLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 9)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifDescr"), ("HUAWEI-IF-EXT-MIB", "hwIFExtPhyStatus"), ("HUAWEI-IF-EXT-MIB", "hwIFExtMemberOf"))
if mibBuilder.loadTexts: hwExtLinkDown.setStatus('deprecated')
hwExtLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 10)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifAdminStatus"), ("IF-MIB", "ifOperStatus"), ("IF-MIB", "ifDescr"), ("HUAWEI-IF-EXT-MIB", "hwIFExtPhyStatus"), ("HUAWEI-IF-EXT-MIB", "hwIFExtMemberOf"))
if mibBuilder.loadTexts: hwExtLinkUp.setStatus('deprecated')
hwLoopbackBlock = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 11)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfName"))
if mibBuilder.loadTexts: hwLoopbackBlock.setStatus('current')
hwLoopbackResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 12)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfName"))
if mibBuilder.loadTexts: hwLoopbackResume.setStatus('current')
hwLacpNegotiateResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 13)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("IF-MIB", "ifName"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwLacpNegotiateResume.setStatus('current')
hwLacpTotalLinkLossResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 14)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwLacpTotalLinkLossResume.setStatus('current')
hwLacpPartialLinkLossResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 15)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkIfID"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwLacpPartialLinkLossResume.setStatus('current')
hwTrunkSubIfStateToMaster = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 24)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfName"), ("HUAWEI-IF-EXT-MIB", "hwBackupStatus"))
if mibBuilder.loadTexts: hwTrunkSubIfStateToMaster.setStatus('current')
hwTrunkSubIfStateToSlave = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 25)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfName"), ("HUAWEI-IF-EXT-MIB", "hwBackupStatus"))
if mibBuilder.loadTexts: hwTrunkSubIfStateToSlave.setStatus('current')
hwEntityExtCfmOverSlot = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 26)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCfmOverPhysicalName"))
if mibBuilder.loadTexts: hwEntityExtCfmOverSlot.setStatus('current')
hwEntityExtCfmOverCard = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 27)).setObjects(("HUAWEI-IF-EXT-MIB", "hwCfmOverPhysicalName"))
if mibBuilder.loadTexts: hwEntityExtCfmOverCard.setStatus('current')
hwExtAllMemberDownNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 28)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwExtAllMemberDownNotify.setStatus('current')
hwExtAllMemberDownResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 29)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwExtAllMemberDownResume.setStatus('current')
hwIfControlFlapSuppress = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 31)).setObjects(("IF-MIB", "ifName"), ("HUAWEI-IF-EXT-MIB", "hwIFExtSuppressStatus"))
if mibBuilder.loadTexts: hwIfControlFlapSuppress.setStatus('current')
hwIfControlFlapResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 32)).setObjects(("IF-MIB", "ifName"), ("HUAWEI-IF-EXT-MIB", "hwIFExtSuppressStatus"))
if mibBuilder.loadTexts: hwIfControlFlapResume.setStatus('current')
hwExtInterfaceDelete = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 3, 33)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hwExtInterfaceDelete.setStatus('current')
hwMonitorNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4))
hwIfMonitorCrcErrorRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 1)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorCrcErrorRising.setStatus('current')
hwIfMonitorCrcErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 2)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorCrcErrorResume.setStatus('current')
hwIfMonitorSdhErrorRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 3)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSdhErrorRising.setStatus('current')
hwIfMonitorSdhErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 4)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSdhErrorResume.setStatus('current')
hwIfMonitorInputRateRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 5)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRatePercentage"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRateThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorInputRateRising.setStatus('current')
hwIfMonitorInputRateResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 6)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRatePercentage"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRateThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorInputRateResume.setStatus('current')
hwIfMonitorOutputRateRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 7)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRatePercentage"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRateThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorOutputRateRising.setStatus('current')
hwIfMonitorOutputRateResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 8)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRatePercentage"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRateThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorOutputRateResume.setStatus('current')
hwIfMonitorHalfDuplexRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 9)).setObjects(("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hwIfMonitorHalfDuplexRising.setStatus('current')
hwIfMonitorPauseFrameRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 10)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameInterval"))
if mibBuilder.loadTexts: hwIfMonitorPauseFrameRising.setStatus('current')
hwIfMonitorPauseFrameRisingResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 11)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameInterval"))
if mibBuilder.loadTexts: hwIfMonitorPauseFrameRisingResume.setStatus('current')
hwIfPortControlUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 12)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwIfPortControlUp.setStatus('current')
hwIfPortControlDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 13)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwIfPortControlDown.setStatus('current')
hwIfMonitorSdhB1ErrorRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 14)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSdhB1ErrorRising.setStatus('current')
hwIfMonitorSdhB1ErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 15)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSdhB1ErrorResume.setStatus('current')
hwIfMonitorSdhB2ErrorRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 16)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSdhB2ErrorRising.setStatus('current')
hwIfMonitorSdhB2ErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 17)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSdhB2ErrorResume.setStatus('current')
hwIfMonitorSymbolErrorRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 18)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSymbolErrorRising.setStatus('current')
hwIfMonitorSymbolErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 19)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorInterval"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorName"))
if mibBuilder.loadTexts: hwIfMonitorSymbolErrorResume.setStatus('current')
hwIfMonitorBadBytesErrorRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 40)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorInterval"))
if mibBuilder.loadTexts: hwIfMonitorBadBytesErrorRising.setStatus('current')
hwIfMonitorBadBytesErrorResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 4, 41)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorStatistics"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorThreshold"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorInterval"))
if mibBuilder.loadTexts: hwIfMonitorBadBytesErrorResume.setStatus('current')
hwIFExtTrapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 5))
hwIFExtTrapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 5, 1))
hwIFExtTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 5, 1, 1)).setObjects(("HUAWEI-IF-EXT-MIB", "hwTrunkWorkingSwitch"), ("HUAWEI-IF-EXT-MIB", "hwLacpNegotiateFailed"), ("HUAWEI-IF-EXT-MIB", "hwLacpTotalLinkLoss"), ("HUAWEI-IF-EXT-MIB", "hwLacpPartialLinkLoss"), ("HUAWEI-IF-EXT-MIB", "hwIfFlowDown"), ("HUAWEI-IF-EXT-MIB", "hwIfFlowUp"), ("HUAWEI-IF-EXT-MIB", "hwIfNameChange"), ("HUAWEI-IF-EXT-MIB", "hwIfNameChangeResume"), ("HUAWEI-IF-EXT-MIB", "hwExtLinkDown"), ("HUAWEI-IF-EXT-MIB", "hwExtLinkUp"), ("HUAWEI-IF-EXT-MIB", "hwLoopbackBlock"), ("HUAWEI-IF-EXT-MIB", "hwLoopbackResume"), ("HUAWEI-IF-EXT-MIB", "hwLacpNegotiateResume"), ("HUAWEI-IF-EXT-MIB", "hwLacpTotalLinkLossResume"), ("HUAWEI-IF-EXT-MIB", "hwLacpPartialLinkLossResume"), ("HUAWEI-IF-EXT-MIB", "hwExtAllMemberDownNotify"), ("HUAWEI-IF-EXT-MIB", "hwExtAllMemberDownResume"), ("HUAWEI-IF-EXT-MIB", "hwIfControlFlapSuppress"), ("HUAWEI-IF-EXT-MIB", "hwIfControlFlapResume"), ("HUAWEI-IF-EXT-MIB", "hwExtInterfaceDelete"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIFExtTrapGroup = hwIFExtTrapGroup.setStatus('current')
hwMonitorTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 5, 1, 2)).setObjects(("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorCrcErrorResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhErrorResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRateRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorInputRateResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRateRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorOutputRateResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorHalfDuplexRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorPauseFrameRisingResume"), ("HUAWEI-IF-EXT-MIB", "hwIfPortControlUp"), ("HUAWEI-IF-EXT-MIB", "hwIfPortControlDown"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB1ErrorResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSdhB2ErrorResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorSymbolErrorResume"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorRising"), ("HUAWEI-IF-EXT-MIB", "hwIfMonitorBadBytesErrorResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMonitorTrapGroup = hwMonitorTrapGroup.setStatus('current')
hwIFIpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 6))
hwIfIpAddressChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 41, 6, 1)).setObjects(("IP-MIB", "ipAdEntNetMask"), ("IP-MIB", "ipAdEntNetMask"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwIfIpAddressChange.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-IF-EXT-MIB", hwIfMonitorCrcEnabledStatus=hwIfMonitorCrcEnabledStatus, hwIfDiffServEntry=hwIfDiffServEntry, hwIfEthIfStatReset=hwIfEthIfStatReset, hwIfQueryGroup=hwIfQueryGroup, hwVTrunkMemGroup=hwVTrunkMemGroup, hwIfAtmStatTable=hwIfAtmStatTable, hwIFExtTrapObjects=hwIFExtTrapObjects, hwCppsAtmVci=hwCppsAtmVci, hwTrunkDeleteFlag=hwTrunkDeleteFlag, hwIfMonitorPauseFrameInterval=hwIfMonitorPauseFrameInterval, hwBackupTrunkIfIndex=hwBackupTrunkIfIndex, hwTrunkIfFlushVlanId=hwTrunkIfFlushVlanId, hwTrunkPortWeight=hwTrunkPortWeight, hwCppsPortIndex=hwCppsPortIndex, hwRevertiveMode=hwRevertiveMode, hwPortIsolationGroupTable=hwPortIsolationGroupTable, hwIfSdhIfStatReset=hwIfSdhIfStatReset, hwLinkModeChangeAutoCreateIfTable=hwLinkModeChangeAutoCreateIfTable, hwVaspPortPeerMac=hwVaspPortPeerMac, hwIfMonitorSdhB1ErrorRising=hwIfMonitorSdhB1ErrorRising, hwLinkDownReason=hwLinkDownReason, hwIfEtherStatOutPausePkts=hwIfEtherStatOutPausePkts, hwIfMonitorOutputRateEnabledStatus=hwIfMonitorOutputRateEnabledStatus, hwIfAtmStatOutIdleCells=hwIfAtmStatOutIdleCells, hwIFExtTrapGroups=hwIFExtTrapGroups, hwVTrunkIfEntry=hwVTrunkIfEntry, hwTrunkWorkingSwitch=hwTrunkWorkingSwitch, hwTrunkETrunkSysID=hwTrunkETrunkSysID, hwIFExtTable=hwIFExtTable, hwVTrunkIfGroup=hwVTrunkIfGroup, hwIfAtmIfStatReset=hwIfAtmIfStatReset, hwTrunkIfRowStatus=hwTrunkIfRowStatus, hwTrunkIfWorkingMode=hwTrunkIfWorkingMode, hwTrunkIfPreemptEnable=hwTrunkIfPreemptEnable, hwIfIpUnnumberedEntry=hwIfIpUnnumberedEntry, hwTrunkIfTimeoutReceive=hwTrunkIfTimeoutReceive, hwTrunkMemGroup=hwTrunkMemGroup, hwIfMonitorSdhB1ErrorThreshold=hwIfMonitorSdhB1ErrorThreshold, hwIfNameChange=hwIfNameChange, hwTrunkIfArpSendSpeed=hwTrunkIfArpSendSpeed, hwExtInterfaceDelete=hwExtInterfaceDelete, hwTrunkETrunkPriority=hwTrunkETrunkPriority, hwIfFluxLimit=hwIfFluxLimit, hwIfMonitorSdhB2ErrorThreshold=hwIfMonitorSdhB2ErrorThreshold, hwIfMonitorPauseContinuingEnabledStatus=hwIfMonitorPauseContinuingEnabledStatus, hwCppsResetAtmPvcStatisic=hwCppsResetAtmPvcStatisic, hwTrunkBandwidth=hwTrunkBandwidth, hwIpAdEntAddrStatus=hwIpAdEntAddrStatus, hwLinkModeChangeAutoCreateIfEntry=hwLinkModeChangeAutoCreateIfEntry, EnabledStatus=EnabledStatus, hwPortIsolationGroupEntry=hwPortIsolationGroupEntry, hwUnnumberedIfIndex=hwUnnumberedIfIndex, hwLogicIfEntry=hwLogicIfEntry, hwCppsIfStatisticsIndex=hwCppsIfStatisticsIndex, hwIFExtMib=hwIFExtMib, hwTrunkIfType=hwTrunkIfType, hwIfPortControlUp=hwIfPortControlUp, hwVTrunkRowStatus=hwVTrunkRowStatus, hwIpAdEntIfIndex=hwIpAdEntIfIndex, hwTrunkIndex=hwTrunkIndex, hwLogicIfDynamicHelpEntry=hwLogicIfDynamicHelpEntry, hwIFFlowStatGlobalInterval=hwIFFlowStatGlobalInterval, hwIfControlFlapSuppress=hwIfControlFlapSuppress, hwTrunkUnknownUnicastIfModel=hwTrunkUnknownUnicastIfModel, hwIfMonitorDelayThreshold=hwIfMonitorDelayThreshold, hwIfAtmStatIfIndex=hwIfAtmStatIfIndex, hwLacpPartialLinkLossResume=hwLacpPartialLinkLossResume, hwLogicIfTotal=hwLogicIfTotal, hwIfFlowChangeTime=hwIfFlowChangeTime, hwIfAtmStatOutGoodCells=hwIfAtmStatOutGoodCells, hwifMonitorBadBytesEnabledStatus=hwifMonitorBadBytesEnabledStatus, hwIfEtherStatInFramePkts=hwIfEtherStatInFramePkts, hwTrunkIfMax=hwTrunkIfMax, hwIFExtIndex=hwIFExtIndex, SnmpPasswdString=SnmpPasswdString, hwCfmOverPhysicalName=hwCfmOverPhysicalName, hwIFExtBase=hwIFExtBase, hwCppsAtmVpi=hwCppsAtmVpi, hwTrunkETrunkPriorityReset=hwTrunkETrunkPriorityReset, hwLogicIfDynamicHelpTable=hwLogicIfDynamicHelpTable, hwIfEtherStatInDropEventPkts=hwIfEtherStatInDropEventPkts, hwTrunkSubIfStateToSlave=hwTrunkSubIfStateToSlave, hwIFExtTrapConformance=hwIFExtTrapConformance, hwIfDiffServMode=hwIfDiffServMode, hwLogicIfHelpTable=hwLogicIfHelpTable, hwIfMonitorOutputRatePercentage=hwIfMonitorOutputRatePercentage, hwCppsInterfaceEntry=hwCppsInterfaceEntry, hwCppsInterfaceTable=hwCppsInterfaceTable, hwCppsGlobalEnableGroup=hwCppsGlobalEnableGroup, hwCppsGlobalEnable=hwCppsGlobalEnable, hwIfMonitorObject=hwIfMonitorObject, hwIfDiffServServiceClass=hwIfDiffServServiceClass, hwLinkModeChangeAutoCreateIfGroup=hwLinkModeChangeAutoCreateIfGroup, hwLacpNegotiateFailed=hwLacpNegotiateFailed, hwIfMonitorName=hwIfMonitorName, hwTrunkPortPriority=hwTrunkPortPriority, hwLogicIfChassisNumber=hwLogicIfChassisNumber, hwIfFluxCir=hwIfFluxCir, hwMonitorTrapGroup=hwMonitorTrapGroup, hwPortIsolationGroup=hwPortIsolationGroup, hwCppsIfStatisticsGroup=hwCppsIfStatisticsGroup, hwLogicIfName=hwLogicIfName, hwIfMonitorCrcErrorInterval=hwIfMonitorCrcErrorInterval, hwTrunkIfMinLinkNum=hwTrunkIfMinLinkNum, hwIfMonitorGeneral=hwIfMonitorGeneral, hwIfDiffServIndex=hwIfDiffServIndex, hwTrunkIfPreemptDelay=hwTrunkIfPreemptDelay, hwCppsPortVlanEnable=hwCppsPortVlanEnable, hwExtLinkDown=hwExtLinkDown, hwIfMonitorSdhErrorInterval=hwIfMonitorSdhErrorInterval, hwCppsAtmPvcPktStatisic=hwCppsAtmPvcPktStatisic, hwExtAllMemberDownResume=hwExtAllMemberDownResume, HwIpAddressType=HwIpAddressType, hwIFExtFrameType=hwIFExtFrameType, hwLendIpAddr=hwLendIpAddr, hwTrunkIfBandWidthAffectLinkNum=hwTrunkIfBandWidthAffectLinkNum, hwIfMonitorPauseFrameRisingResume=hwIfMonitorPauseFrameRisingResume, hwAdminVrrpMemberIfIndex=hwAdminVrrpMemberIfIndex, hwTrunkOperstatus=hwTrunkOperstatus, hwIfMonitorBadBytesErrorThreshold=hwIfMonitorBadBytesErrorThreshold, hwIfEtherStatOutDeferredPkts=hwIfEtherStatOutDeferredPkts, hwTrunkMemifIndex=hwTrunkMemifIndex, hwEntityExtCfmOverCard=hwEntityExtCfmOverCard, hwIfEtherStatOutOverflowPkts=hwIfEtherStatOutOverflowPkts, hwIFExtMacAddr=hwIFExtMacAddr, hwLogicDynamicIfCardNumber=hwLogicDynamicIfCardNumber, hwVTrunkIfType=hwVTrunkIfType, hwVTrunkPortActive=hwVTrunkPortActive, hwIfSdhStatOutUnderRunPkts=hwIfSdhStatOutUnderRunPkts, hwIfMonitorCrcErrorStatistics=hwIfMonitorCrcErrorStatistics, hwIfMonitorSdhB1ErrorResume=hwIfMonitorSdhB1ErrorResume, hwCppsAtmPvcTable=hwCppsAtmPvcTable, hwTrunkIfTrackVrrpIfIndex=hwTrunkIfTrackVrrpIfIndex, hwIfAtmStatInUncorrectedCells=hwIfAtmStatInUncorrectedCells, hwIfMonitorSymbolErrorRising=hwIfMonitorSymbolErrorRising, hwLogicIfSlotNumber=hwLogicIfSlotNumber, hwIfFluxVlanId=hwIfFluxVlanId, hwIfEtherStatInCRCPkts=hwIfEtherStatInCRCPkts, hwIfMonitorSdhB2ErrorInterval=hwIfMonitorSdhB2ErrorInterval, hwTrunkIsDefaultLagRecv=hwTrunkIsDefaultLagRecv, hwIfEtherStatTable=hwIfEtherStatTable, hwCppsPortVlanPktStatisic=hwCppsPortVlanPktStatisic, hwVTrunkMemTable=hwVTrunkMemTable, hwAutoIfIndex=hwAutoIfIndex, hwIfEtherStatInUnderSizePkts=hwIfEtherStatInUnderSizePkts, hwIfQueryTable=hwIfQueryTable, hwIFExtFlowStatus=hwIFExtFlowStatus, hwIFExtGroup=hwIFExtGroup, hwIfMonitorPauseFrameThreshold=hwIfMonitorPauseFrameThreshold, hwTrunkIfStatReset=hwTrunkIfStatReset, hwSubInterfaceBackupTrunkGroup=hwSubInterfaceBackupTrunkGroup, hwLendIfIndex=hwLendIfIndex, hwVTrunkAttr=hwVTrunkAttr, hwIfEtherStatEntry=hwIfEtherStatEntry, hwLacpTotalLinkLoss=hwLacpTotalLinkLoss, hwIfFlowDown=hwIfFlowDown, hwIfMonitorSdhEnabledStatus=hwIfMonitorSdhEnabledStatus, hwIfEtherStatOutLateCollisionPkts=hwIfEtherStatOutLateCollisionPkts, hwIpAdEntAddressType=hwIpAdEntAddressType, hwLogicIfCardNumber=hwLogicIfCardNumber, hwTrunkETrunkSysIDReset=hwTrunkETrunkSysIDReset, hwTrunkNextIndex=hwTrunkNextIndex, hwIfMonitorGeneralGroup=hwIfMonitorGeneralGroup, hwLogicIfTable=hwLogicIfTable, hwTrunkRowStatus=hwTrunkRowStatus, hwIfEtherStatInPausePkts=hwIfEtherStatInPausePkts, hwLacpTotalLinkLossResume=hwLacpTotalLinkLossResume, hwIfEtherStatInFragmentPkts=hwIfEtherStatInFragmentPkts, hwIfEtherStatOutExcessiveCollisionPkts=hwIfEtherStatOutExcessiveCollisionPkts, hwVaspPortPeerMacTable=hwVaspPortPeerMacTable, hwTrunkIfWorkingState=hwTrunkIfWorkingState, hwExtAllMemberDownNotify=hwExtAllMemberDownNotify, hwTrunkAttr=hwTrunkAttr, hwIfEtherStatInIgnoredPkts=hwIfEtherStatInIgnoredPkts, hwAdminVrrpIfIndex=hwAdminVrrpIfIndex, hwLogicIfRowStatus=hwLogicIfRowStatus, hwAdminVrrpMemberIfGroup=hwAdminVrrpMemberIfGroup, hwVTrunkIfRowStatus=hwVTrunkIfRowStatus, PYSNMP_MODULE_ID=hwIFExtMib, hwIfFluxIfIndex=hwIfFluxIfIndex, hwCppsPortVlanGroup=hwCppsPortVlanGroup, hwAdminVrrpMemberIfTable=hwAdminVrrpMemberIfTable, hwIfMonitorOutputRateThreshold=hwIfMonitorOutputRateThreshold, hwIFExtFlowStatInterval=hwIFExtFlowStatInterval, hwIfMonitorSdhErrorResume=hwIfMonitorSdhErrorResume, hwIfEtherStatInJabberPkts=hwIfEtherStatInJabberPkts, hwVTrunkValidEntry=hwVTrunkValidEntry, hwTrunkIfGroup=hwTrunkIfGroup, hwLendIpAddrNetMask=hwLendIpAddrNetMask, hwTrunkIfBackupPreemptDelay=hwTrunkIfBackupPreemptDelay, hwTrunkIfTrackVrrpVrid=hwTrunkIfTrackVrrpVrid, hwIfMonitorInputRateResume=hwIfMonitorInputRateResume, hwTrunkIfLagMaxActiveLinkNum=hwTrunkIfLagMaxActiveLinkNum, hwIfEtherStatOutCollisionPkts=hwIfEtherStatOutCollisionPkts, hwIfMonitorSdhErrorThreshold=hwIfMonitorSdhErrorThreshold, hwTrunkETrunkSystemID=hwTrunkETrunkSystemID, hwIfMonitorIndex=hwIfMonitorIndex, hwCppsIfStatisticsTable=hwCppsIfStatisticsTable, hwIFExtObjects=hwIFExtObjects, hwLogicIfAttrGroup=hwLogicIfAttrGroup, hwTrunkIfAutoRecover=hwTrunkIfAutoRecover, hwIFFlowStatGroup=hwIFFlowStatGroup, hwIfSdhStatIfIndex=hwIfSdhStatIfIndex, hwCppsVlanId=hwCppsVlanId, hwVTrunkMemIfIndex=hwVTrunkMemIfIndex, hwLoopbackResume=hwLoopbackResume, hwTrunkSystemPriority=hwTrunkSystemPriority, hwIfEtherStatOutJumboPkts=hwIfEtherStatOutJumboPkts, hwCppsAtmPvcEntry=hwCppsAtmPvcEntry, hwIfMonitorSdhErrorRising=hwIfMonitorSdhErrorRising, hwIFExtFlushReceiveEnable=hwIFExtFlushReceiveEnable, hwLogicIfMainIndex=hwLogicIfMainIndex, hwIpAdEntBcastAddr=hwIpAdEntBcastAddr, hwLogicIfDynamicHelpTableGroup=hwLogicIfDynamicHelpTableGroup, hwIfMonitorInputRateEnabledStatus=hwIfMonitorInputRateEnabledStatus, hwUnnumberedRowStatus=hwUnnumberedRowStatus, hwIfEtherStatInPkts256to511Octets=hwIfEtherStatInPkts256to511Octets, hwLogicIfParaOne=hwLogicIfParaOne, hwIfMonitorSdhB2ErrorRising=hwIfMonitorSdhB2ErrorRising, hwInterfaceIp=hwInterfaceIp, hwIFExtCompliance=hwIFExtCompliance, hwIfMonitorCrcErrorRising=hwIfMonitorCrcErrorRising, hwLogicIfMin=hwLogicIfMin, hwLogicIfIndex=hwLogicIfIndex, hwMasterBackupTrunkSubinterfaceEntry=hwMasterBackupTrunkSubinterfaceEntry, hwIfMonitorSdhB2ErrorResume=hwIfMonitorSdhB2ErrorResume, hwAdminVrrpMemberIf=hwAdminVrrpMemberIf, hwIfEtherStatGroup=hwIfEtherStatGroup, hwCppsPortVlanTable=hwCppsPortVlanTable, hwIfMonitorSdhB1ErrorInterval=hwIfMonitorSdhB1ErrorInterval, hwAdminVrrpMemberIfRowStatus=hwAdminVrrpMemberIfRowStatus, hwIFFlowStat=hwIFFlowStat, hwIfMonitorSymbolErrorInterval=hwIfMonitorSymbolErrorInterval, hwVaspPortGroup=hwVaspPortGroup, hwLoopbackBlock=hwLoopbackBlock, hwVaspPortPeerMacEntry=hwVaspPortPeerMacEntry, hwVTrunkMemAttr=hwVTrunkMemAttr, hwIfEtherStatInAlignmentPkts=hwIfEtherStatInAlignmentPkts, hwIfEtherStatIfIndex=hwIfEtherStatIfIndex, hwTrunkPortStatReset=hwTrunkPortStatReset, hwIfFluxLimitTable=hwIfFluxLimitTable, hwIfDiffServ=hwIfDiffServ, hwTrunkValidEntry=hwTrunkValidEntry, hwIfMonitorInputRatePercentage=hwIfMonitorInputRatePercentage, hwIfMonitorThresholdTable=hwIfMonitorThresholdTable, hwIfFluxLimitEntry=hwIfFluxLimitEntry, hwIFExtSuppressStatus=hwIFExtSuppressStatus, hwIfMonitorBadBytesErrorResume=hwIfMonitorBadBytesErrorResume, hwLacpPartialLinkLoss=hwLacpPartialLinkLoss, hwCppsResetInterfaceStatisic=hwCppsResetInterfaceStatisic, hwIfIpAddressGroup=hwIfIpAddressGroup, hwTrunkPortMaster=hwTrunkPortMaster, hwPortIsolationGroupPortList=hwPortIsolationGroupPortList, hwVTrunkMemEntry=hwVTrunkMemEntry)
mibBuilder.exportSymbols("HUAWEI-IF-EXT-MIB", hwWtrTime=hwWtrTime, hwCppsPortVlanEntry=hwCppsPortVlanEntry, hwIfMonitorSdhErrorStatistics=hwIfMonitorSdhErrorStatistics, hwIfControlFlapResume=hwIfControlFlapResume, hwTrunkIfBackupPreemptEnable=hwTrunkIfBackupPreemptEnable, hwIfMonitorHalfDuplexRising=hwIfMonitorHalfDuplexRising, hwCppsPortVlanByteStatisic=hwCppsPortVlanByteStatisic, hwTrunkMemEntry=hwTrunkMemEntry, hwLogicDynamicIfChassisNumber=hwLogicDynamicIfChassisNumber, hwIfQuery=hwIfQuery, hwCppsAtmPvcGroup=hwCppsAtmPvcGroup, hwCppsInterfaceGroup=hwCppsInterfaceGroup, hwIfSdhStatOutOverRunPkts=hwIfSdhStatOutOverRunPkts, hwLogicIfHelpTableGroup=hwLogicIfHelpTableGroup, hwLogicIfHelpEntry=hwLogicIfHelpEntry, hwVaspPortName=hwVaspPortName, hwIfSdhStatEntry=hwIfSdhStatEntry, hwTrunkIfTable=hwTrunkIfTable, hwIfAtmStatInIdleCells=hwIfAtmStatInIdleCells, hwIfEtherStatInJumboPkts=hwIfEtherStatInJumboPkts, hwTrunkIfModel=hwTrunkIfModel, hwVTrunkIfIndex=hwVTrunkIfIndex, hwCppsObjects=hwCppsObjects, hwIfMonitorDelayValue=hwIfMonitorDelayValue, hwIfFluxDirection=hwIfFluxDirection, hwIfDiffServTable=hwIfDiffServTable, hwMasterBackupTrunkSubinterfaceTable=hwMasterBackupTrunkSubinterfaceTable, hwIfEtherStatInPkts64Octets=hwIfEtherStatInPkts64Octets, hwLogicDynamicIfSlotNumber=hwLogicDynamicIfSlotNumber, hwCppsResetPortVlanStatisic=hwCppsResetPortVlanStatisic, hwIfDiffServGroup=hwIfDiffServGroup, hwAdminVrrpMemberIfEntry=hwAdminVrrpMemberIfEntry, hwLogicDynamicIfMax=hwLogicDynamicIfMax, hwIfPortControlDown=hwIfPortControlDown, hwLogicIfhelpType=hwLogicIfhelpType, hwIfDiffServColor=hwIfDiffServColor, hwCppsAtmPvcByteStatisic=hwCppsAtmPvcByteStatisic, hwIfEtherStatInPkts128to255Octets=hwIfEtherStatInPkts128to255Octets, hwIfMonitorBadBytesErrorInterval=hwIfMonitorBadBytesErrorInterval, hwIFExtTraps=hwIFExtTraps, hwIFExtPhyStatus=hwIFExtPhyStatus, hwVaspPortIfIndex=hwVaspPortIfIndex, hwTrunkLacpStatus=hwTrunkLacpStatus, hwIfMonitorSymbolErrorThreshold=hwIfMonitorSymbolErrorThreshold, hwCppsInterfaceByteStatisic=hwCppsInterfaceByteStatisic, hwIfEtherStatInPkts512to1023Octets=hwIfEtherStatInPkts512to1023Octets, hwIfMonitorPauseFrameStatistics=hwIfMonitorPauseFrameStatistics, hwIfMonitorThresholdGroup=hwIfMonitorThresholdGroup, hwIfAtmStatEntry=hwIfAtmStatEntry, hwIfFluxCbs=hwIfFluxCbs, hwTrunkIfForceSwitchEnable=hwTrunkIfForceSwitchEnable, hwIfEtherStatInPkts1024to1518Octets=hwIfEtherStatInPkts1024to1518Octets, hwCppsInterfaceIndex=hwCppsInterfaceIndex, hwIfAtmStatInCorrectedCells=hwIfAtmStatInCorrectedCells, hwTrunkIfID=hwTrunkIfID, hwTrunkIfFlushPasswd=hwTrunkIfFlushPasswd, hwIfFluxLimitGroup=hwIfFluxLimitGroup, hwVTrunkIfnetIndex=hwVTrunkIfnetIndex, hwIfSdhStatTable=hwIfSdhStatTable, hwIfMonitorJitterThreshold=hwIfMonitorJitterThreshold, hwFlushVlanId=hwFlushVlanId, hwCppsIfStatisticsEntry=hwCppsIfStatisticsEntry, hwLogicDynamicIfTotal=hwLogicDynamicIfTotal, hwIfEtherStatInPkts65to127Octets=hwIfEtherStatInPkts65to127Octets, hwIFExtFlushVlanId=hwIFExtFlushVlanId, hwIfMonitorSdhB2ErrorStatistics=hwIfMonitorSdhB2ErrorStatistics, hwIfMonitorBadBytesErrorStatistics=hwIfMonitorBadBytesErrorStatistics, hwIFExtConformance=hwIFExtConformance, hwIfEtherStatInOverRunPkts=hwIfEtherStatInOverRunPkts, HWDirectionType=HWDirectionType, hwIFExtBlockPriority=hwIFExtBlockPriority, hwAdminVrrpVrid=hwAdminVrrpVrid, hwTrunkSubIfStateToMaster=hwTrunkSubIfStateToMaster, hwIfMonitorOutputRateRising=hwIfMonitorOutputRateRising, hwIfIpAddressChange=hwIfIpAddressChange, hwTrunkIfFlushSendEnable=hwTrunkIfFlushSendEnable, hwPortIsolationGroupRowStatus=hwPortIsolationGroupRowStatus, hwVTrunkIfTable=hwVTrunkIfTable, hwIFExtPhyNumber=hwIFExtPhyNumber, hwIfAtmStatInGoodCells=hwIfAtmStatInGoodCells, hwTrunkMemAttr=hwTrunkMemAttr, hwTrunkLocalPrefMode=hwTrunkLocalPrefMode, hwTrunkIfEntry=hwTrunkIfEntry, hwIfIpMethod=hwIfIpMethod, hwMonitorNotifications=hwMonitorNotifications, hwIfEtherStatInSymbolPkts=hwIfEtherStatInSymbolPkts, hwIfSdhStatInShortPkts=hwIfSdhStatInShortPkts, hwIfIndex=hwIfIndex, hwVaspPort=hwVaspPort, hwIFExtGroups=hwIFExtGroups, hwIfMonitorJitterValue=hwIfMonitorJitterValue, hwIfIpUnnumberedGroup=hwIfIpUnnumberedGroup, hwIFIpNotifications=hwIFIpNotifications, hwIfStatistics=hwIfStatistics, hwIfMonitorBadBytesErrorRising=hwIfMonitorBadBytesErrorRising, hwIFExtLayer=hwIFExtLayer, hwTrunkIfIndex=hwTrunkIfIndex, hwCppsInterfacePktStatisic=hwCppsInterfacePktStatisic, hwMainIfName=hwMainIfName, hwIfSdhStatInLongPkts=hwIfSdhStatInLongPkts, hwIFExtFlushPasswd=hwIFExtFlushPasswd, hwTrunkPortStandby=hwTrunkPortStandby, hwVTrunkOperstatus=hwVTrunkOperstatus, hwPortIsolationGroupAttrib=hwPortIsolationGroupAttrib, hwIfName=hwIfName, hwIfMonitorCrcErrorThreshold=hwIfMonitorCrcErrorThreshold, hwIFExtTrapGroup=hwIFExtTrapGroup, hwNewIfTimeslot=hwNewIfTimeslot, hwIpAdEntAddr=hwIpAdEntAddr, hwMasterBackupTrunkSubinterfaceAttr=hwMasterBackupTrunkSubinterfaceAttr, hwIfMonitorPauseRisingEnabledStatus=hwIfMonitorPauseRisingEnabledStatus, hwIfQueryEntry=hwIfQueryEntry, hwLogicIfAttrib=hwLogicIfAttrib, hwIfNameChangeResume=hwIfNameChangeResume, hwLacpNegotiateResume=hwLacpNegotiateResume, hwIFExtEntry=hwIFExtEntry, hwIfMonitorSdhB1ErrorStatistics=hwIfMonitorSdhB1ErrorStatistics, hwIfMonitorInputRateRising=hwIfMonitorInputRateRising, hwIfIpUnnumberedTable=hwIfIpUnnumberedTable, hwLogicIfType=hwLogicIfType, hwIpAdEntNetMask=hwIpAdEntNetMask, hwIfMonitorOutputRateResume=hwIfMonitorOutputRateResume, hwIfEtherStatOutUnderRunPkts=hwIfEtherStatOutUnderRunPkts, hwIfMonitorHalfDuplexEnabledStatus=hwIfMonitorHalfDuplexEnabledStatus, hwTrunkIfTrackVrrpReset=hwTrunkIfTrackVrrpReset, hwExtLinkUp=hwExtLinkUp, hwVTrunkIfID=hwVTrunkIfID, hwTrunkMemTable=hwTrunkMemTable, hwIpAdEntReasmMaxSize=hwIpAdEntReasmMaxSize, hwIfIpEntry=hwIfIpEntry, hwIfSdhStatInCRCPkts=hwIfSdhStatInCRCPkts, hwTrunkIfLagSelectedPortStd=hwTrunkIfLagSelectedPortStd, hwAdminVrrpMemberIfFlowStatus=hwAdminVrrpMemberIfFlowStatus, hwIfIpTable=hwIfIpTable, hwIfMonitorSymbolErrorResume=hwIfMonitorSymbolErrorResume, hwPortIsolationGroupIndex=hwPortIsolationGroupIndex, hwBackupStatus=hwBackupStatus, hwIfFlowUp=hwIfFlowUp, hwIfEtherStatInLongPkts=hwIfEtherStatInLongPkts, hwTrunkETrunkSystemPriority=hwTrunkETrunkSystemPriority, hwIfMonitorSymbolErrorStatistics=hwIfMonitorSymbolErrorStatistics, hwIFExtMacShift=hwIFExtMacShift, hwIfFluxLimitType=hwIfFluxLimitType, hwIFExtCompliances=hwIFExtCompliances, hwIFExtMtu=hwIFExtMtu, hwIfMonitorInputRateThreshold=hwIfMonitorInputRateThreshold, hwIfMonitorCrcErrorResume=hwIfMonitorCrcErrorResume, hwIfEtherStatOutBufferPurgationPkts=hwIfEtherStatOutBufferPurgationPkts, hwIfFluxRowStatus=hwIfFluxRowStatus, hwIFExtMemberOf=hwIFExtMemberOf, hwLogicIfMax=hwLogicIfMax, hwLogicDynamicIfMin=hwLogicDynamicIfMin, hwTrunkSelectStatus=hwTrunkSelectStatus, hwIfMonitorPauseFrameRising=hwIfMonitorPauseFrameRising, hwCppsPortPvcEnable=hwCppsPortPvcEnable, hwEntityExtCfmOverSlot=hwEntityExtCfmOverSlot, hwCppsAtmIfIndex=hwCppsAtmIfIndex, hwLogicDynamicIfhelpType=hwLogicDynamicIfhelpType, hwIfMonitorThresholdEntry=hwIfMonitorThresholdEntry)
