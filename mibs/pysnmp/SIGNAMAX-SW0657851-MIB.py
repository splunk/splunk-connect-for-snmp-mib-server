#
# PySNMP MIB module SIGNAMAX-SW0657851-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SIGNAMAX-SW0657851-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:56:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
MacAddress, = mibBuilder.importSymbols("BRIDGE-MIB", "MacAddress")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Integer32, Unsigned32, iso, ModuleIdentity, Gauge32, Counter64, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Counter32, Bits, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "Unsigned32", "iso", "ModuleIdentity", "Gauge32", "Counter64", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Counter32", "Bits", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
signamax = ModuleIdentity((1, 3, 6, 1, 4, 1, 5205))
if mibBuilder.loadTexts: signamax.setLastUpdated('200812240000Z')
if mibBuilder.loadTexts: signamax.setOrganization('Signamax LLC')
switch = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2))
sw0657851ProductID = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34))
sw0657851Produces = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1))
sw0657851System = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1))
sw0657851CommonSys = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1))
sw0657851Reboot = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Reboot.setStatus('current')
sw0657851BiosVsersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851BiosVsersion.setStatus('current')
sw0657851FirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851FirmwareVersion.setStatus('current')
sw0657851HardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851HardwareVersion.setStatus('current')
sw0657851MechanicalVersion = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MechanicalVersion.setStatus('current')
sw0657851SerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SerialNumber.setStatus('current')
sw0657851HostMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851HostMacAddress.setStatus('current')
sw0657851DevicePort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851DevicePort.setStatus('current')
sw0657851RamSize = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851RamSize.setStatus('current')
sw0657851FlashSize = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851FlashSize.setStatus('current')
sw0657851DeviceName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DeviceName.setStatus('current')
sw0657851SystemDescription = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SystemDescription.setStatus('current')
sw0657851IP = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2))
sw0657851DhcpSetting = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DhcpSetting.setStatus('current')
sw0657851IPAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IPAddress.setStatus('current')
sw0657851NetMask = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851NetMask.setStatus('current')
sw0657851DefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DefaultGateway.setStatus('current')
sw0657851DnsSetting = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DnsSetting.setStatus('current')
sw0657851DnsServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DnsServer.setStatus('current')
sw0657851Time = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3))
sw0657851SystemCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SystemCurrentTime.setStatus('current')
sw0657851ManualTimeSetting = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManualTimeSetting.setStatus('current')
sw0657851NTPServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851NTPServer.setStatus('current')
sw0657851NTPTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851NTPTimeZone.setStatus('current')
sw0657851NTPTimeSync = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851NTPTimeSync.setStatus('current')
sw0657851DaylightSavingTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-5, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DaylightSavingTime.setStatus('current')
sw0657851DaylightStartTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DaylightStartTime.setStatus('current')
sw0657851DaylightEndTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 3, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DaylightEndTime.setStatus('current')
sw0657851Account = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4))
sw0657851AccountNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AccountNumber.setStatus('current')
sw0657851AccountTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 2), )
if mibBuilder.loadTexts: sw0657851AccountTable.setStatus('current')
sw0657851AccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851AccountIndex"))
if mibBuilder.loadTexts: sw0657851AccountEntry.setStatus('current')
sw0657851AccountIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AccountIndex.setStatus('current')
sw0657851AccountAuthorization = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AccountAuthorization.setStatus('current')
sw0657851AccountName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AccountName.setStatus('current')
sw0657851AccountPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AccountPassword.setStatus('current')
sw0657851AccountAddName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AccountAddName.setStatus('current')
sw0657851AccountAddPassword = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AccountAddPassword.setStatus('current')
sw0657851DoAccountAdd = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DoAccountAdd.setStatus('current')
sw0657851AccountDel = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AccountDel.setStatus('current')
sw0657851Snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2))
sw0657851GetCommunity = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GetCommunity.setStatus('current')
sw0657851SetCommunity = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851SetCommunity.setStatus('current')
sw0657851TrapHostNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851TrapHostNumber.setStatus('current')
sw0657851TrapHostTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 4), )
if mibBuilder.loadTexts: sw0657851TrapHostTable.setStatus('current')
sw0657851TrapHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 4, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851TrapHostIndex"))
if mibBuilder.loadTexts: sw0657851TrapHostEntry.setStatus('current')
sw0657851TrapHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851TrapHostIndex.setStatus('current')
sw0657851TrapHostIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrapHostIP.setStatus('current')
sw0657851TrapHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrapHostPort.setStatus('current')
sw0657851TrapHostCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 2, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrapHostCommunity.setStatus('current')
sw0657851Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3))
sw0657851Event = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1))
sw0657851EventNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851EventNumber.setStatus('current')
sw0657851EventTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 2), )
if mibBuilder.loadTexts: sw0657851EventTable.setStatus('current')
sw0657851EventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851EventIndex"))
if mibBuilder.loadTexts: sw0657851EventEntry.setStatus('current')
sw0657851EventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851EventIndex.setStatus('current')
sw0657851EventName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851EventName.setStatus('current')
sw0657851EventSendEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851EventSendEmail.setStatus('current')
sw0657851EventSendTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851EventSendTrap.setStatus('current')
sw0657851Email = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2))
sw0657851EmailServer = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851EmailServer.setStatus('current')
sw0657851EmailUsername = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851EmailUsername.setStatus('current')
sw0657851EmailPassword = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851EmailPassword.setStatus('current')
sw0657851EmailUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851EmailUserNumber.setStatus('current')
sw0657851EmailUserTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 5), )
if mibBuilder.loadTexts: sw0657851EmailUserTable.setStatus('current')
sw0657851EmailUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 5, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851EmailUserIndex"))
if mibBuilder.loadTexts: sw0657851EmailUserEntry.setStatus('current')
sw0657851EmailUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851EmailUserIndex.setStatus('current')
sw0657851EmailUserAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 3, 2, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851EmailUserAddress.setStatus('current')
sw0657851Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5))
sw0657851SaveRestore = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 1))
sw0657851SaveStart = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851SaveStart.setStatus('current')
sw0657851SaveUser = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851SaveUser.setStatus('current')
sw0657851RestoreDefault = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851RestoreDefault.setStatus('current')
sw0657851RestoreUser = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851RestoreUser.setStatus('current')
sw0657851ConfigFile = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 2))
sw0657851ExportIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ExportIpAddress.setStatus('current')
sw0657851DoExportConfig = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DoExportConfig.setStatus('current')
sw0657851ImportIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ImportIpAddress.setStatus('current')
sw0657851ImportConfigName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ImportConfigName.setStatus('current')
sw0657851DoImportConfig = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 5, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DoImportConfig.setStatus('current')
sw0657851Log = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7))
sw0657851ClearLog = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ClearLog.setStatus('current')
sw0657851LogNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851LogNumber.setStatus('current')
sw0657851LogTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7, 5), )
if mibBuilder.loadTexts: sw0657851LogTable.setStatus('current')
sw0657851LogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7, 5, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851LogIndex"))
if mibBuilder.loadTexts: sw0657851LogEntry.setStatus('current')
sw0657851LogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)))
if mibBuilder.loadTexts: sw0657851LogIndex.setStatus('current')
sw0657851LogEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 7, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851LogEvent.setStatus('current')
sw0657851Firmware = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 8))
sw0657851FirmwareIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 8, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851FirmwareIpAddress.setStatus('current')
sw0657851FirmwareFileName = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 8, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851FirmwareFileName.setStatus('current')
sw0657851DoFirmwareUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851DoFirmwareUpgrade.setStatus('current')
sw0657851Port = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9))
sw0657851PortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1))
sw0657851PortStatusNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusNumber.setStatus('current')
sw0657851PortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2), )
if mibBuilder.loadTexts: sw0657851PortStatusTable.setStatus('current')
sw0657851PortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851PortStatusIndex"))
if mibBuilder.loadTexts: sw0657851PortStatusEntry.setStatus('current')
sw0657851PortStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusIndex.setStatus('current')
sw0657851PortStatusMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusMedia.setStatus('current')
sw0657851PortStatusLink = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusLink.setStatus('current')
sw0657851PortStatusSpdDpx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusSpdDpx.setStatus('current')
sw0657851PortStatusFlwCtrlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusFlwCtrlRx.setStatus('current')
sw0657851PortStatusFlwCtrlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatusFlwCtrlTx.setStatus('current')
sw0657851PortStatuDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortStatuDescription.setStatus('current')
sw0657851PortConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2))
sw0657851PortConfNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortConfNumber.setStatus('current')
sw0657851PortConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2), )
if mibBuilder.loadTexts: sw0657851PortConfTable.setStatus('current')
sw0657851PortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851PortConfIndex"))
if mibBuilder.loadTexts: sw0657851PortConfEntry.setStatus('current')
sw0657851PortConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851PortConfIndex.setStatus('current')
sw0657851PortConfPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortConfPortState.setStatus('current')
sw0657851PortConfSpdDpx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortConfSpdDpx.setStatus('current')
sw0657851PortConfFlwCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortConfFlwCtrl.setStatus('current')
sw0657851PortConfExcessiveCollisionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortConfExcessiveCollisionMode.setStatus('current')
sw0657851PortConfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 2, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortConfDescription.setStatus('current')
sw0657851SFPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3))
sw0657851SFPInfoNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPInfoNumber.setStatus('current')
sw0657851SFPInfoTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2), )
if mibBuilder.loadTexts: sw0657851SFPInfoTable.setStatus('current')
sw0657851SFPInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851SFPInfoIndex"))
if mibBuilder.loadTexts: sw0657851SFPInfoEntry.setStatus('current')
sw0657851SFPInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPInfoIndex.setStatus('current')
sw0657851SFPConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPConnectorType.setStatus('current')
sw0657851SFPFiberType = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPFiberType.setStatus('current')
sw0657851SFPWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPWavelength.setStatus('current')
sw0657851SFPBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPBaudRate.setStatus('current')
sw0657851SFPVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPVendorOUI.setStatus('current')
sw0657851SFPVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPVendorName.setStatus('current')
sw0657851SFPVendorPN = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPVendorPN.setStatus('current')
sw0657851SFPVendorRev = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPVendorRev.setStatus('current')
sw0657851SFPVendorSN = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPVendorSN.setStatus('current')
sw0657851SFPDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPDateCode.setStatus('current')
sw0657851SFPTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPTemperature.setStatus('current')
sw0657851SFPVcc = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPVcc.setStatus('current')
sw0657851SFPTxBias = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPTxBias.setStatus('current')
sw0657851SFPTxPWR = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPTxPWR.setStatus('current')
sw0657851SFPRxPWR = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 9, 3, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851SFPRxPWR.setStatus('current')
sw0657851Mirror = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10))
sw0657851MirroringPort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MirroringPort.setStatus('current')
sw0657851MirroredPortsTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10, 2), )
if mibBuilder.loadTexts: sw0657851MirroredPortsTable.setStatus('current')
sw0657851MirroredPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851MirroredPortIndex"))
if mibBuilder.loadTexts: sw0657851MirroredPortsEntry.setStatus('current')
sw0657851MirroredPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MirroredPortIndex.setStatus('current')
sw0657851MirroredPortSrouceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MirroredPortSrouceEnable.setStatus('current')
sw0657851MirroredPortDestinationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MirroredPortDestinationEnable.setStatus('current')
sw0657851MaxPktLen = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 11))
sw0657851MaxPktLenPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MaxPktLenPortNumber.setStatus('current')
sw0657851MaxPktLenConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 11, 2), )
if mibBuilder.loadTexts: sw0657851MaxPktLenConfTable.setStatus('current')
sw0657851MaxPktLenConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 11, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851MaxPktLenConfIndex"))
if mibBuilder.loadTexts: sw0657851MaxPktLenConfEntry.setStatus('current')
sw0657851MaxPktLenConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MaxPktLenConfIndex.setStatus('current')
sw0657851MaxPktLenConfSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1518, 9600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MaxPktLenConfSetting.setStatus('current')
sw0657851LoopDetectedConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12))
sw0657851LoopDetectedNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851LoopDetectedNumber.setStatus('current')
sw0657851LoopDetectedTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12, 2), )
if mibBuilder.loadTexts: sw0657851LoopDetectedTable.setStatus('current')
sw0657851LoopDetectedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851LoopDetectedfIndex"))
if mibBuilder.loadTexts: sw0657851LoopDetectedEntry.setStatus('current')
sw0657851LoopDetectedfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851LoopDetectedfIndex.setStatus('current')
sw0657851LoopDetectedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851LoopDetectedPort.setStatus('current')
sw0657851LoopDetectedLockedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851LoopDetectedLockedPort.setStatus('current')
sw0657851ManagementPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13))
sw0657851ManagementSecurityNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851ManagementSecurityNumber.setStatus('current')
sw0657851ManagementSecurityEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityEntryCreate.setStatus('current')
sw0657851ManagementSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3), )
if mibBuilder.loadTexts: sw0657851ManagementSecurityTable.setStatus('current')
sw0657851ManagementSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851ManagementSecurityIndex"))
if mibBuilder.loadTexts: sw0657851ManagementSecurityEntry.setStatus('current')
sw0657851ManagementSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851ManagementSecurityIndex.setStatus('current')
sw0657851ManagementSecurityName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityName.setStatus('current')
sw0657851ManagementSecurityIpRange = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityIpRange.setStatus('current')
sw0657851ManagementSecurityIncomigPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityIncomigPort.setStatus('current')
sw0657851ManagementSecurityAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityAccessType.setStatus('current')
sw0657851ManagementSecurityAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityAction.setStatus('current')
sw0657851ManagementSecurityEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 13, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementSecurityEntryAction.setStatus('current')
sw0657851VLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14))
sw0657851VlanConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 1))
sw0657851VlanMode = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanMode.setStatus('current')
sw0657851ManagementVlan = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851ManagementVlan.setStatus('current')
sw0657851PortIsolation = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortIsolation.setStatus('current')
sw0657851TagBaseVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2))
sw0657851TagBaseVlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanNumber.setStatus('current')
sw0657851TagBaseVlanGroupEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanGroupEntryCreate.setStatus('current')
sw0657851TagBaseVlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3), )
if mibBuilder.loadTexts: sw0657851TagBaseVlanGroupTable.setStatus('current')
sw0657851TagBaseVlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851TagBaseVlanVid"))
if mibBuilder.loadTexts: sw0657851TagBaseVlanGroupEntry.setStatus('current')
sw0657851TagBaseVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: sw0657851TagBaseVlanVid.setStatus('current')
sw0657851TagBaseVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanName.setStatus('current')
sw0657851TagBaseVlanIgmpProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanIgmpProxy.setStatus('current')
sw0657851TagBaseVlanPrivateVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanPrivateVlan.setStatus('current')
sw0657851TagBaseVlanGvrp = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanGvrp.setStatus('current')
sw0657851TagBaseVlanMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanMemberPort.setStatus('current')
sw0657851TagBaseVlanEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TagBaseVlanEntryAction.setStatus('current')
sw0657851VlanPortConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3), )
if mibBuilder.loadTexts: sw0657851VlanPortConfTable.setStatus('current')
sw0657851VlanPortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851VlanPortConfIndex"))
if mibBuilder.loadTexts: sw0657851VlanPortConfEntry.setStatus('current')
sw0657851VlanPortConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851VlanPortConfIndex.setStatus('current')
sw0657851VlanPortConfVlanAware = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfVlanAware.setStatus('current')
sw0657851VlanPortConfIngressFiltering = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfIngressFiltering.setStatus('current')
sw0657851VlanPortConfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfFrameType.setStatus('current')
sw0657851VlanPortConfPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfPvid.setStatus('current')
sw0657851VlanPortConfRole = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfRole.setStatus('current')
sw0657851VlanPortConfUntagVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfUntagVid.setStatus('current')
sw0657851VlanPortConfDoubleTag = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851VlanPortConfDoubleTag.setStatus('current')
sw0657851PortBaseVlanGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4))
sw0657851PortBaseVlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortBaseVlanNumber.setStatus('current')
sw0657851PortBaseVlanGroupEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupEntryCreate.setStatus('current')
sw0657851PortBaseVlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 3), )
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupTable.setStatus('current')
sw0657851PortBaseVlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851PortBaseVlanGroupIndex"))
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupEntry.setStatus('current')
sw0657851PortBaseVlanGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupIndex.setStatus('current')
sw0657851PortBaseVlanGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupName.setStatus('current')
sw0657851PortBaseVlanGroupMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupMembers.setStatus('current')
sw0657851PortBaseVlanGroupEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 14, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851PortBaseVlanGroupEntryAction.setStatus('current')
sw0657851MacTableInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15))
sw0657851MacTableConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 1))
sw0657851MacAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacAgeTime.setStatus('current')
sw0657851MacTableLearningConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 1, 2), )
if mibBuilder.loadTexts: sw0657851MacTableLearningConfTable.setStatus('current')
sw0657851MacTableLearningConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 1, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851MacTableLearningConfIndex"))
if mibBuilder.loadTexts: sw0657851MacTableLearningConfEntry.setStatus('current')
sw0657851MacTableLearningConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851MacTableLearningConfIndex.setStatus('current')
sw0657851MacTableLearningConfstate = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableLearningConfstate.setStatus('current')
sw0657851MacTableStaticFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2))
sw0657851MacTableStaticFilterNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterNumber.setStatus('current')
sw0657851MacTableStaticFilterEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterEntryCreate.setStatus('current')
sw0657851MacTableStaticFilterTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3), )
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterTable.setStatus('current')
sw0657851MacTableStaticFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851MacTableStaticFilterIndex"))
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterEntry.setStatus('current')
sw0657851MacTableStaticFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterIndex.setStatus('current')
sw0657851MacTableStaticFilterMac = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterMac.setStatus('current')
sw0657851MacTableStaticFilterVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterVid.setStatus('current')
sw0657851MacTableStaticFilterAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterAlias.setStatus('current')
sw0657851MacTableStaticFilterEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticFilterEntryAction.setStatus('current')
sw0657851MacTableStaticForward = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3))
sw0657851MacTableStaticForwardNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardNumber.setStatus('current')
sw0657851MacTableStaticForwardEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardEntryCreate.setStatus('current')
sw0657851MacTableStaticForwardTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3), )
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardTable.setStatus('current')
sw0657851MacTableStaticForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851MacTableStaticForwardIndex"))
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardEntry.setStatus('current')
sw0657851MacTableStaticForwardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardIndex.setStatus('current')
sw0657851MacTableStaticForwardMac = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardMac.setStatus('current')
sw0657851MacTableStaticForwardPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardPort.setStatus('current')
sw0657851MacTableStaticForwardVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardVid.setStatus('current')
sw0657851MacTableStaticForwardAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardAlias.setStatus('current')
sw0657851MacTableStaticForwardEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacTableStaticForwardEntryAction.setStatus('current')
sw0657851MacAlias = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4))
sw0657851MacAliasNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MacAliasNumber.setStatus('current')
sw0657851MacAliasEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851MacAliasEntryCreate.setStatus('current')
sw0657851MacAliasTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 3), )
if mibBuilder.loadTexts: sw0657851MacAliasTable.setStatus('current')
sw0657851MacAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851MacAliasIndex"))
if mibBuilder.loadTexts: sw0657851MacAliasEntry.setStatus('current')
sw0657851MacAliasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: sw0657851MacAliasIndex.setStatus('current')
sw0657851AliasMac = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AliasMac.setStatus('current')
sw0657851AliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AliasName.setStatus('current')
sw0657851MacAliasEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 15, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851MacAliasEntryAction.setStatus('current')
sw0657851GVRPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16))
sw0657851GvrpConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1))
sw0657851GvrpConfState = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfState.setStatus('current')
sw0657851GvrpConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2), )
if mibBuilder.loadTexts: sw0657851GvrpConfTable.setStatus('current')
sw0657851GvrpConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851GvrpConfIndex"))
if mibBuilder.loadTexts: sw0657851GvrpConfEntry.setStatus('current')
sw0657851GvrpConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851GvrpConfIndex.setStatus('current')
sw0657851GvrpConfJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfJoinTime.setStatus('current')
sw0657851GvrpConfLeaveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfLeaveTime.setStatus('current')
sw0657851GvrpConfLeaveAllTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfLeaveAllTime.setStatus('current')
sw0657851GvrpConfDefaultAppMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfDefaultAppMode.setStatus('current')
sw0657851GvrpConfDefaultRegMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfDefaultRegMode.setStatus('current')
sw0657851GvrpConfRestrictedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpConfRestrictedMode.setStatus('current')
sw0657851GvrpCounter = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2))
sw0657851GvrpCounterTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1), )
if mibBuilder.loadTexts: sw0657851GvrpCounterTable.setStatus('current')
sw0657851GvrpCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851GvrpCounterIndex"))
if mibBuilder.loadTexts: sw0657851GvrpCounterEntry.setStatus('current')
sw0657851GvrpCounterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851GvrpCounterIndex.setStatus('current')
sw0657851GvrpCounterRxTotalGvrpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxTotalGvrpPkts.setStatus('current')
sw0657851GvrpCounterRxInvalidGvrpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxInvalidGvrpPkts.setStatus('current')
sw0657851GvrpCounterRxLeaveAllMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxLeaveAllMsg.setStatus('current')
sw0657851GvrpCounterRxJoinEmptyMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxJoinEmptyMsg.setStatus('current')
sw0657851GvrpCounterRxJoinInMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxJoinInMsg.setStatus('current')
sw0657851GvrpCounterRxLeaveEmptyMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxLeaveEmptyMsg.setStatus('current')
sw0657851GvrpCounterRxEmptyMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterRxEmptyMsg.setStatus('current')
sw0657851GvrpCounterTxTotalGvrpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterTxTotalGvrpPkts.setStatus('current')
sw0657851GvrpCounterTxLeaveAllMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterTxLeaveAllMsg.setStatus('current')
sw0657851GvrpCounterTxJoinEmptyMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterTxJoinEmptyMsg.setStatus('current')
sw0657851GvrpCounterTxJoinInMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterTxJoinInMsg.setStatus('current')
sw0657851GvrpCounterTxLeaveEmptyMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterTxLeaveEmptyMsg.setStatus('current')
sw0657851GvrpCounterTxEmptyMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpCounterTxEmptyMsg.setStatus('current')
sw0657851GvrpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3))
sw0657851GvrpGroupNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpGroupNumber.setStatus('current')
sw0657851GvrpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 2), )
if mibBuilder.loadTexts: sw0657851GvrpGroupTable.setStatus('current')
sw0657851GvrpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851GvrpGroupId"))
if mibBuilder.loadTexts: sw0657851GvrpGroupEntry.setStatus('current')
sw0657851GvrpGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpGroupId.setStatus('current')
sw0657851GvrpGroupVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpGroupVid.setStatus('current')
sw0657851GvrpGroupMemberPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpGroupMemberPort.setStatus('current')
sw0657851GvrpGroupAdministrativeCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 3), )
if mibBuilder.loadTexts: sw0657851GvrpGroupAdministrativeCtrlTable.setStatus('current')
sw0657851GvrpGroupAdministrativeCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851GvrpGroupAdministrativeCtrlVid"), (0, "SIGNAMAX-SW0657851-MIB", "sw0657851GvrpGroupAdministrativeCtrlPort"))
if mibBuilder.loadTexts: sw0657851GvrpGroupAdministrativeCtrlEntry.setStatus('current')
sw0657851GvrpGroupAdministrativeCtrlVid = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpGroupAdministrativeCtrlVid.setStatus('current')
sw0657851GvrpGroupAdministrativeCtrlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851GvrpGroupAdministrativeCtrlPort.setStatus('current')
sw0657851GvrpGroupAdministrativeCtrlApp = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpGroupAdministrativeCtrlApp.setStatus('current')
sw0657851GvrpGroupAdministrativeCtrlReg = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 16, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851GvrpGroupAdministrativeCtrlReg.setStatus('current')
sw0657851QosInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17))
sw0657851QosPortConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1))
sw0657851QosNumOfClasses = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosNumOfClasses.setStatus('current')
sw0657851QosPortConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2), )
if mibBuilder.loadTexts: sw0657851QosPortConfTable.setStatus('current')
sw0657851QosPortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851QosPortConfIndex"))
if mibBuilder.loadTexts: sw0657851QosPortConfEntry.setStatus('current')
sw0657851QosPortConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851QosPortConfIndex.setStatus('current')
sw0657851QosPortConfDefaultClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfDefaultClasses.setStatus('current')
sw0657851QosPortConfQCL = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfQCL.setStatus('current')
sw0657851QosPortConfUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfUserPriority.setStatus('current')
sw0657851QosPortConfQueuingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfQueuingMode.setStatus('current')
sw0657851QosPortConfQueueWeightedLow = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfQueueWeightedLow.setStatus('current')
sw0657851QosPortConfQueueWeightedNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfQueueWeightedNormal.setStatus('current')
sw0657851QosPortConfQueueWeightedMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfQueueWeightedMedium.setStatus('current')
sw0657851QosPortConfQueueWeightedHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosPortConfQueueWeightedHigh.setStatus('current')
sw0657851QosRateLimiters = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3))
sw0657851QosRateLimitersTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1), )
if mibBuilder.loadTexts: sw0657851QosRateLimitersTable.setStatus('current')
sw0657851QosRateLimitersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851QosRateLimitersIndex"))
if mibBuilder.loadTexts: sw0657851QosRateLimitersEntry.setStatus('current')
sw0657851QosRateLimitersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851QosRateLimitersIndex.setStatus('current')
sw0657851QosRateLimitersPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosRateLimitersPolicer.setStatus('current')
sw0657851QosRateLimitersPolicerRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosRateLimitersPolicerRate.setStatus('current')
sw0657851QosRateLimitersShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosRateLimitersShaper.setStatus('current')
sw0657851QosRateLimitersShaperRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosRateLimitersShaperRate.setStatus('current')
sw0657851QosStormCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4))
sw0657851QosStromCtrlFloodedUnicastStatus = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosStromCtrlFloodedUnicastStatus.setStatus('current')
sw0657851QosStromCtrlFloodedUnicastRate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosStromCtrlFloodedUnicastRate.setStatus('current')
sw0657851QosStromCtrlMulticastStatus = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosStromCtrlMulticastStatus.setStatus('current')
sw0657851QosStromCtrlMulticastRate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosStromCtrlMulticastRate.setStatus('current')
sw0657851QosStromCtrlBroadcastStatus = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosStromCtrlBroadcastStatus.setStatus('current')
sw0657851QosStromCtrlBroadcastRate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 17, 4, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851QosStromCtrlBroadcastRate.setStatus('current')
sw0657851AclInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18))
sw0657851AclPortsConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1), )
if mibBuilder.loadTexts: sw0657851AclPortsConfTable.setStatus('current')
sw0657851AclPortsConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851AclPortsConfIndex"))
if mibBuilder.loadTexts: sw0657851AclPortsConfEntry.setStatus('current')
sw0657851AclPortsConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851AclPortsConfIndex.setStatus('current')
sw0657851AclPortsConfPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AclPortsConfPolicyId.setStatus('current')
sw0657851AclPortsConfAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AclPortsConfAction.setStatus('current')
sw0657851AclPortsConfRateLimiterId = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AclPortsConfRateLimiterId.setStatus('current')
sw0657851AclPortsConfPortCopy = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AclPortsConfPortCopy.setStatus('current')
sw0657851AclPortsConfCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AclPortsConfCounter.setStatus('current')
sw0657851AclRateLimiter = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 2))
sw0657851AclRateLimiterTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 2, 1), )
if mibBuilder.loadTexts: sw0657851AclRateLimiterTable.setStatus('current')
sw0657851AclRateLimiterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 2, 1, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851AclRateLimiterIndex"))
if mibBuilder.loadTexts: sw0657851AclRateLimiterEntry.setStatus('current')
sw0657851AclRateLimiterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851AclRateLimiterIndex.setStatus('current')
sw0657851AclRateLimiterRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 18, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851AclRateLimiterRate.setStatus('current')
sw0657851IpMacBind = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19))
sw0657851IpMacBindConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 1))
sw0657851IpMacBindstate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindstate.setStatus('current')
sw0657851IpMacBindTrustPort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindTrustPort.setStatus('current')
sw0657851IpMacBindSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2))
sw0657851IpMacBindSettingNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingNumber.setStatus('current')
sw0657851IpMacBindSettingEntryCreate = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingEntryCreate.setStatus('current')
sw0657851IpMacBindSettingTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3), )
if mibBuilder.loadTexts: sw0657851IpMacBindSettingTable.setStatus('current')
sw0657851IpMacBindSettingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851IpMacBindSettingIndex"))
if mibBuilder.loadTexts: sw0657851IpMacBindSettingEntry.setStatus('current')
sw0657851IpMacBindSettingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: sw0657851IpMacBindSettingIndex.setStatus('current')
sw0657851IpMacBindSettingMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingMAC.setStatus('current')
sw0657851IpMacBindSettingIP = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingIP.setStatus('current')
sw0657851IpMacBindSettingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingPort.setStatus('current')
sw0657851IpMacBindSettingVID = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingVID.setStatus('current')
sw0657851IpMacBindSettingEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 19, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IpMacBindSettingEntryAction.setStatus('current')
sw0657851Dot1X = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23))
sw0657851Dot1XServerConf = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1))
sw0657851Dot1XServerConfAuthenticationServerIp = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XServerConfAuthenticationServerIp.setStatus('current')
sw0657851Dot1XServerConfAuthenticationUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XServerConfAuthenticationUdpPort.setStatus('current')
sw0657851Dot1XServerConfAuthenticationSecretKey = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XServerConfAuthenticationSecretKey.setStatus('current')
sw0657851Dot1XServerConfAccountingServerIp = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XServerConfAccountingServerIp.setStatus('current')
sw0657851Dot1XServerConfAccountingUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XServerConfAccountingUdpPort.setStatus('current')
sw0657851Dot1XServerConfAccountingSecretKey = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XServerConfAccountingSecretKey.setStatus('current')
sw0657851Dot1XPortConfTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2), )
if mibBuilder.loadTexts: sw0657851Dot1XPortConfTable.setStatus('current')
sw0657851Dot1XPortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851Dot1XPort"))
if mibBuilder.loadTexts: sw0657851Dot1XPortConfEntry.setStatus('current')
sw0657851Dot1XPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPort.setStatus('current')
sw0657851Dot1XPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortMode.setStatus('current')
sw0657851Dot1XPortControl = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortControl.setStatus('current')
sw0657851Dot1XPortreAuthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortreAuthMax.setStatus('current')
sw0657851Dot1XPorttxPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPorttxPeriod.setStatus('current')
sw0657851Dot1XPortquietPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortquietPeriod.setStatus('current')
sw0657851Dot1XPortreAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortreAuthEnabled.setStatus('current')
sw0657851Dot1XPortreAuthPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortreAuthPeriod.setStatus('current')
sw0657851Dot1XPortmaxReq = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortmaxReq.setStatus('current')
sw0657851Dot1XPortsuppTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortsuppTimeout.setStatus('current')
sw0657851Dot1XPortserverTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XPortserverTimeout.setStatus('current')
sw0657851Dot1XStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 3), )
if mibBuilder.loadTexts: sw0657851Dot1XStatusTable.setStatus('current')
sw0657851Dot1XStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 3, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851Dot1XStatusIndex"))
if mibBuilder.loadTexts: sw0657851Dot1XStatusEntry.setStatus('current')
sw0657851Dot1XStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851Dot1XStatusIndex.setStatus('current')
sw0657851Dot1XStatusMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XStatusMode.setStatus('current')
sw0657851Dot1XStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XStatusStatus.setStatus('current')
sw0657851Dot1XStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4), )
if mibBuilder.loadTexts: sw0657851Dot1XStatisticsTable.setStatus('current')
sw0657851Dot1XStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851Dot1XStatisticsIndex"))
if mibBuilder.loadTexts: sw0657851Dot1XStatisticsEntry.setStatus('current')
sw0657851Dot1XStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851Dot1XStatisticsIndex.setStatus('current')
sw0657851Dot1XClearCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851Dot1XClearCounter.setStatus('current')
sw0657851Dot1XAuthEntersConnecting = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEntersConnecting.setStatus('current')
sw0657851Dot1XauthEapLogoffsWhileConnecting = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XauthEapLogoffsWhileConnecting.setStatus('current')
sw0657851Dot1XAuthEntersAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEntersAuthenticating.setStatus('current')
sw0657851Dot1XAuthAuthSuccessesWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthSuccessesWhileAuthenticating.setStatus('current')
sw0657851Dot1XAuthAuthTimeoutsWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthTimeoutsWhileAuthenticating.setStatus('current')
sw0657851Dot1XAuthAuthFailWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthFailWhileAuthenticating.setStatus('current')
sw0657851Dot1XAuthAuthEapStartsWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthEapStartsWhileAuthenticating.setStatus('current')
sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticating.setStatus('current')
sw0657851Dot1XAuthAuthReauthsWhileAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthReauthsWhileAuthenticated.setStatus('current')
sw0657851Dot1XAuthAuthEapStartsWhileAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthEapStartsWhileAuthenticated.setStatus('current')
sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticated.setStatus('current')
sw0657851Dot1XBackendResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XBackendResponses.setStatus('current')
sw0657851Dot1XBackendAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XBackendAccessChallenges.setStatus('current')
sw0657851Dot1XBackendOtherRequestsToSupplicant = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XBackendOtherRequestsToSupplicant.setStatus('current')
sw0657851Dot1XBackendAuthSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XBackendAuthSuccesses.setStatus('current')
sw0657851Dot1XBackendAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XBackendAuthFails.setStatus('current')
sw0657851Dot1XAuthEapolFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolFramesRx.setStatus('current')
sw0657851Dot1XAuthEapolFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolFramesTx.setStatus('current')
sw0657851Dot1XAuthEapolStartFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolStartFramesRx.setStatus('current')
sw0657851Dot1XAuthEapolLogoffFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolLogoffFramesRx.setStatus('current')
sw0657851Dot1XAuthEapolRespIdFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolRespIdFramesRx.setStatus('current')
sw0657851Dot1XAuthEapolRespFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolRespFramesRx.setStatus('current')
sw0657851Dot1XAuthEapolReqIdFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolReqIdFramesTx.setStatus('current')
sw0657851Dot1XAuthEapolReqFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapolReqFramesTx.setStatus('current')
sw0657851Dot1XAuthInvalidEapolFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthInvalidEapolFramesRx.setStatus('current')
sw0657851Dot1XAuthEapLengthErrorFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthEapLengthErrorFramesRx.setStatus('current')
sw0657851Dot1XAuthLastEapolFrameVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthLastEapolFrameVersion.setStatus('current')
sw0657851Dot1XAuthLastEapolFrameSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 23, 4, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851Dot1XAuthLastEapolFrameSource.setStatus('current')
sw0657851TrunkInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24))
sw0657851TrunkPort = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1))
sw0657851TrunkPortTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1), )
if mibBuilder.loadTexts: sw0657851TrunkPortTable.setStatus('current')
sw0657851TrunkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851TrunkPortIndex"))
if mibBuilder.loadTexts: sw0657851TrunkPortEntry.setStatus('current')
sw0657851TrunkPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851TrunkPortIndex.setStatus('current')
sw0657851TrunkPortMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrunkPortMethod.setStatus('current')
sw0657851TrunkPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrunkPortGroup.setStatus('current')
sw0657851TrunkPortActiveLacp = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrunkPortActiveLacp.setStatus('current')
sw0657851TrunkPortAggtr = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851TrunkPortAggtr.setStatus('current')
sw0657851TrunkPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851TrunkPortStatus.setStatus('current')
sw0657851TrunkPortCurrentMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851TrunkPortCurrentMode.setStatus('current')
sw0657851AggregatorView = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2))
sw0657851AggregatorViewTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2, 1), )
if mibBuilder.loadTexts: sw0657851AggregatorViewTable.setStatus('current')
sw0657851AggregatorViewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2, 1, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851AggregatorViewIndex"))
if mibBuilder.loadTexts: sw0657851AggregatorViewEntry.setStatus('current')
sw0657851AggregatorViewIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sw0657851AggregatorViewIndex.setStatus('current')
sw0657851AggregatorViewMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AggregatorViewMethod.setStatus('current')
sw0657851AggregatorViewMemberPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AggregatorViewMemberPorts.setStatus('current')
sw0657851AggregatorViewReadyPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851AggregatorViewReadyPorts.setStatus('current')
sw0657851LacpSystemPriority = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 24, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851LacpSystemPriority.setStatus('current')
sw0657851IGMPInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25))
sw0657851IgmpProxyConfState = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfState.setStatus('current')
sw0657851IgmpProxyConfUnregIPMCFlooding = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfUnregIPMCFlooding.setStatus('current')
sw0657851IgmpProxyConfGeneralQueuyInterval = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfGeneralQueuyInterval.setStatus('current')
sw0657851IgmpProxyConfGeneralQueuyRepTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfGeneralQueuyRepTimeout.setStatus('current')
sw0657851IgmpProxyConfGeneralQueuyMaxRepTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfGeneralQueuyMaxRepTime.setStatus('current')
sw0657851IgmpProxyConfLastMemberQueuyCount = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfLastMemberQueuyCount.setStatus('current')
sw0657851IgmpProxyConfLastMemberQueuyInterval = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfLastMemberQueuyInterval.setStatus('current')
sw0657851IgmpProxyConfLastMemberQueuyMaxRepTime = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfLastMemberQueuyMaxRepTime.setStatus('current')
sw0657851IgmpProxyConfRouterPorts = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpProxyConfRouterPorts.setStatus('current')
sw0657851IgmpGroupMembershipNumber = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sw0657851IgmpGroupMembershipNumber.setStatus('current')
sw0657851IgmpGroupMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 11), )
if mibBuilder.loadTexts: sw0657851IgmpGroupMembershipTable.setStatus('current')
sw0657851IgmpGroupMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 11, 1), ).setIndexNames((0, "SIGNAMAX-SW0657851-MIB", "sw0657851IgmpGroupNo"))
if mibBuilder.loadTexts: sw0657851IgmpGroupMembershipEntry.setStatus('current')
sw0657851IgmpGroupNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: sw0657851IgmpGroupNo.setStatus('current')
sw0657851IgmpGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851IgmpGroupAddress.setStatus('current')
sw0657851IgmpGroupVLANId = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851IgmpGroupVLANId.setStatus('current')
sw0657851IgmpGroupPortMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 25, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sw0657851IgmpGroupPortMembers.setStatus('current')
sw0657851TrapEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20))
sw0657851UserLogin = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 1)).setObjects(("SIGNAMAX-SW0657851-MIB", "username"))
if mibBuilder.loadTexts: sw0657851UserLogin.setStatus('current')
sw0657851UserLogout = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 2)).setObjects(("SIGNAMAX-SW0657851-MIB", "username"))
if mibBuilder.loadTexts: sw0657851UserLogout.setStatus('current')
sw0657851ModuleInserted = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 3)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657851ModuleInserted.setStatus('current')
sw0657851ModuleRemoved = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 4)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657851ModuleRemoved.setStatus('current')
sw0657851DualMediaSwapped = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 5)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657851DualMediaSwapped.setStatus('current')
sw0657851LoopDetected = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 6)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657851LoopDetected.setStatus('current')
sw0657851StpStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 7))
if mibBuilder.loadTexts: sw0657851StpStateDisabled.setStatus('current')
sw0657851StpStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 8))
if mibBuilder.loadTexts: sw0657851StpStateEnabled.setStatus('current')
sw0657851StpTopologyChanged = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 9)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657851StpTopologyChanged.setStatus('current')
sw0657851LacpStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 10)).setObjects(("IF-MIB", "ifIndex"), ("SIGNAMAX-SW0657851-MIB", "groupId"))
if mibBuilder.loadTexts: sw0657851LacpStateDisabled.setStatus('current')
sw0657851LacpStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 11)).setObjects(("IF-MIB", "ifIndex"), ("SIGNAMAX-SW0657851-MIB", "groupId"))
if mibBuilder.loadTexts: sw0657851LacpStateEnabled.setStatus('current')
sw0657851LacpPortAdded = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 12)).setObjects(("IF-MIB", "ifIndex"), ("SIGNAMAX-SW0657851-MIB", "actorkey"), ("SIGNAMAX-SW0657851-MIB", "partnerkey"))
if mibBuilder.loadTexts: sw0657851LacpPortAdded.setStatus('current')
sw0657851LacpPortTrunkFailure = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 13)).setObjects(("IF-MIB", "ifIndex"), ("SIGNAMAX-SW0657851-MIB", "actorkey"), ("SIGNAMAX-SW0657851-MIB", "partnerkey"))
if mibBuilder.loadTexts: sw0657851LacpPortTrunkFailure.setStatus('current')
sw0657851GvrpStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 14))
if mibBuilder.loadTexts: sw0657851GvrpStateDisabled.setStatus('current')
sw0657851GvrpStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 15))
if mibBuilder.loadTexts: sw0657851GvrpStateEnabled.setStatus('current')
sw0657851VlanStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 16))
if mibBuilder.loadTexts: sw0657851VlanStateDisabled.setStatus('current')
sw0657851VlanPortBaseEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 17))
if mibBuilder.loadTexts: sw0657851VlanPortBaseEnabled.setStatus('current')
sw0657851VlanTagBaseEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 18))
if mibBuilder.loadTexts: sw0657851VlanTagBaseEnabled.setStatus('current')
sw0657851IpmbStateEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 19))
if mibBuilder.loadTexts: sw0657851IpmbStateEnabled.setStatus('current')
sw0657851IpmbStateDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 20))
if mibBuilder.loadTexts: sw0657851IpmbStateDisabled.setStatus('current')
sw0657851IpmbClientFailure = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 21)).setObjects(("SIGNAMAX-SW0657851-MIB", "ipmacIp"), ("SIGNAMAX-SW0657851-MIB", "ipmacMac"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: sw0657851IpmbClientFailure.setStatus('current')
sw0657851IpmbServerFailure = NotificationType((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 20, 22)).setObjects(("SIGNAMAX-SW0657851-MIB", "ipmacClientIp"), ("SIGNAMAX-SW0657851-MIB", "ipmacClientMac"), ("IF-MIB", "ifIndex"), ("SIGNAMAX-SW0657851-MIB", "ipmacServerIp"))
if mibBuilder.loadTexts: sw0657851IpmbServerFailure.setStatus('current')
sw0657851TrapVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22))
username = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: username.setStatus('current')
groupId = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: groupId.setStatus('current')
actorkey = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actorkey.setStatus('current')
partnerkey = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: partnerkey.setStatus('current')
uplink = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uplink.setStatus('current')
ipmacIp = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmacIp.setStatus('current')
ipmacMac = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmacMac.setStatus('current')
ipmacClientIp = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmacClientIp.setStatus('current')
ipmacClientMac = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmacClientMac.setStatus('current')
ipmacServerIp = MibScalar((1, 3, 6, 1, 4, 1, 5205, 2, 34, 1, 22, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmacServerIp.setStatus('current')
mibBuilder.exportSymbols("SIGNAMAX-SW0657851-MIB", sw0657851IgmpProxyConfLastMemberQueuyCount=sw0657851IgmpProxyConfLastMemberQueuyCount, sw0657851EmailUserAddress=sw0657851EmailUserAddress, sw0657851Dot1XPortreAuthEnabled=sw0657851Dot1XPortreAuthEnabled, sw0657851GvrpGroupAdministrativeCtrlVid=sw0657851GvrpGroupAdministrativeCtrlVid, sw0657851GvrpConfLeaveTime=sw0657851GvrpConfLeaveTime, sw0657851GvrpGroupAdministrativeCtrlPort=sw0657851GvrpGroupAdministrativeCtrlPort, sw0657851IpMacBindSettingEntryAction=sw0657851IpMacBindSettingEntryAction, sw0657851VlanStateDisabled=sw0657851VlanStateDisabled, sw0657851QosPortConfIndex=sw0657851QosPortConfIndex, sw0657851LoopDetectedTable=sw0657851LoopDetectedTable, sw0657851LoopDetectedEntry=sw0657851LoopDetectedEntry, sw0657851Email=sw0657851Email, sw0657851SFPBaudRate=sw0657851SFPBaudRate, sw0657851MaxPktLenPortNumber=sw0657851MaxPktLenPortNumber, sw0657851QosPortConfDefaultClasses=sw0657851QosPortConfDefaultClasses, sw0657851GvrpGroupMemberPort=sw0657851GvrpGroupMemberPort, sw0657851EmailUserNumber=sw0657851EmailUserNumber, sw0657851IgmpProxyConfLastMemberQueuyInterval=sw0657851IgmpProxyConfLastMemberQueuyInterval, sw0657851TrapHostNumber=sw0657851TrapHostNumber, sw0657851IGMPInfo=sw0657851IGMPInfo, sw0657851Dot1XAuthEapolFramesTx=sw0657851Dot1XAuthEapolFramesTx, sw0657851ManagementSecurityEntryCreate=sw0657851ManagementSecurityEntryCreate, sw0657851Alarm=sw0657851Alarm, sw0657851AggregatorView=sw0657851AggregatorView, sw0657851SerialNumber=sw0657851SerialNumber, sw0657851TagBaseVlanGroup=sw0657851TagBaseVlanGroup, sw0657851PortStatusSpdDpx=sw0657851PortStatusSpdDpx, sw0657851Mirror=sw0657851Mirror, sw0657851IpmbStateDisabled=sw0657851IpmbStateDisabled, sw0657851LogTable=sw0657851LogTable, sw0657851ManualTimeSetting=sw0657851ManualTimeSetting, sw0657851DoImportConfig=sw0657851DoImportConfig, sw0657851PortBaseVlanGroupEntryCreate=sw0657851PortBaseVlanGroupEntryCreate, sw0657851GvrpCounterRxJoinEmptyMsg=sw0657851GvrpCounterRxJoinEmptyMsg, sw0657851AclPortsConfPolicyId=sw0657851AclPortsConfPolicyId, sw0657851Dot1X=sw0657851Dot1X, sw0657851ManagementSecurityAccessType=sw0657851ManagementSecurityAccessType, sw0657851PortBaseVlanGroupEntryAction=sw0657851PortBaseVlanGroupEntryAction, sw0657851QosRateLimitersShaperRate=sw0657851QosRateLimitersShaperRate, sw0657851MacTableConf=sw0657851MacTableConf, sw0657851Dot1XPorttxPeriod=sw0657851Dot1XPorttxPeriod, sw0657851TrapEntry=sw0657851TrapEntry, sw0657851MacAliasEntryAction=sw0657851MacAliasEntryAction, sw0657851VlanPortConfDoubleTag=sw0657851VlanPortConfDoubleTag, sw0657851GvrpConfState=sw0657851GvrpConfState, sw0657851GvrpConfDefaultRegMode=sw0657851GvrpConfDefaultRegMode, sw0657851IgmpProxyConfLastMemberQueuyMaxRepTime=sw0657851IgmpProxyConfLastMemberQueuyMaxRepTime, sw0657851VlanMode=sw0657851VlanMode, sw0657851GvrpCounterEntry=sw0657851GvrpCounterEntry, sw0657851ClearLog=sw0657851ClearLog, sw0657851IpMacBindSettingPort=sw0657851IpMacBindSettingPort, sw0657851GvrpCounterTxTotalGvrpPkts=sw0657851GvrpCounterTxTotalGvrpPkts, sw0657851MacAliasIndex=sw0657851MacAliasIndex, sw0657851AliasName=sw0657851AliasName, sw0657851ProductID=sw0657851ProductID, sw0657851MaxPktLen=sw0657851MaxPktLen, sw0657851PortStatusEntry=sw0657851PortStatusEntry, sw0657851Dot1XPort=sw0657851Dot1XPort, sw0657851GvrpConfJoinTime=sw0657851GvrpConfJoinTime, sw0657851LogEvent=sw0657851LogEvent, sw0657851GvrpCounterRxInvalidGvrpPkts=sw0657851GvrpCounterRxInvalidGvrpPkts, sw0657851UserLogout=sw0657851UserLogout, sw0657851TrunkPortActiveLacp=sw0657851TrunkPortActiveLacp, sw0657851Dot1XAuthEapolReqIdFramesTx=sw0657851Dot1XAuthEapolReqIdFramesTx, sw0657851TrapHostIndex=sw0657851TrapHostIndex, sw0657851IpMacBindSettingVID=sw0657851IpMacBindSettingVID, sw0657851GvrpGroupAdministrativeCtrlEntry=sw0657851GvrpGroupAdministrativeCtrlEntry, sw0657851EventSendEmail=sw0657851EventSendEmail, sw0657851MacTableStaticFilterMac=sw0657851MacTableStaticFilterMac, sw0657851SFPTxPWR=sw0657851SFPTxPWR, sw0657851LacpPortAdded=sw0657851LacpPortAdded, sw0657851QosRateLimitersIndex=sw0657851QosRateLimitersIndex, sw0657851Dot1XAuthAuthSuccessesWhileAuthenticating=sw0657851Dot1XAuthAuthSuccessesWhileAuthenticating, sw0657851LacpPortTrunkFailure=sw0657851LacpPortTrunkFailure, sw0657851Dot1XAuthEntersAuthenticating=sw0657851Dot1XAuthEntersAuthenticating, sw0657851MacTableStaticFilterEntryAction=sw0657851MacTableStaticFilterEntryAction, sw0657851PortStatusLink=sw0657851PortStatusLink, sw0657851AclInfo=sw0657851AclInfo, sw0657851MaxPktLenConfIndex=sw0657851MaxPktLenConfIndex, sw0657851GvrpConfIndex=sw0657851GvrpConfIndex, sw0657851GvrpGroupNumber=sw0657851GvrpGroupNumber, sw0657851QosPortConfEntry=sw0657851QosPortConfEntry, sw0657851Dot1XServerConf=sw0657851Dot1XServerConf, sw0657851AccountTable=sw0657851AccountTable, sw0657851AggregatorViewMemberPorts=sw0657851AggregatorViewMemberPorts, sw0657851GvrpConfLeaveAllTime=sw0657851GvrpConfLeaveAllTime, sw0657851SFPDateCode=sw0657851SFPDateCode, sw0657851Dot1XAuthEapolFramesRx=sw0657851Dot1XAuthEapolFramesRx, sw0657851LoopDetectedfIndex=sw0657851LoopDetectedfIndex, sw0657851SFPInfo=sw0657851SFPInfo, sw0657851QosStromCtrlFloodedUnicastStatus=sw0657851QosStromCtrlFloodedUnicastStatus, sw0657851CommonSys=sw0657851CommonSys, sw0657851QosInfo=sw0657851QosInfo, sw0657851LogEntry=sw0657851LogEntry, sw0657851PortIsolation=sw0657851PortIsolation, sw0657851Dot1XAuthEapolRespFramesRx=sw0657851Dot1XAuthEapolRespFramesRx, sw0657851GvrpConfEntry=sw0657851GvrpConfEntry, sw0657851TrunkInfo=sw0657851TrunkInfo, sw0657851EventName=sw0657851EventName, sw0657851Dot1XServerConfAuthenticationUdpPort=sw0657851Dot1XServerConfAuthenticationUdpPort, sw0657851SFPWavelength=sw0657851SFPWavelength, sw0657851Dot1XPortConfEntry=sw0657851Dot1XPortConfEntry, sw0657851LoopDetected=sw0657851LoopDetected, sw0657851AggregatorViewTable=sw0657851AggregatorViewTable, sw0657851FirmwareIpAddress=sw0657851FirmwareIpAddress, sw0657851SystemCurrentTime=sw0657851SystemCurrentTime, sw0657851PortStatusFlwCtrlTx=sw0657851PortStatusFlwCtrlTx, sw0657851MacTableLearningConfstate=sw0657851MacTableLearningConfstate, sw0657851IpmbClientFailure=sw0657851IpmbClientFailure, sw0657851Dot1XAuthInvalidEapolFramesRx=sw0657851Dot1XAuthInvalidEapolFramesRx, sw0657851QosStromCtrlBroadcastStatus=sw0657851QosStromCtrlBroadcastStatus, sw0657851PortConfPortState=sw0657851PortConfPortState, sw0657851AclPortsConfRateLimiterId=sw0657851AclPortsConfRateLimiterId, sw0657851QosPortConfQueueWeightedNormal=sw0657851QosPortConfQueueWeightedNormal, sw0657851QosStromCtrlMulticastRate=sw0657851QosStromCtrlMulticastRate, sw0657851Dot1XStatisticsIndex=sw0657851Dot1XStatisticsIndex, sw0657851ManagementPolicy=sw0657851ManagementPolicy, sw0657851MacTableStaticForwardTable=sw0657851MacTableStaticForwardTable, sw0657851AggregatorViewReadyPorts=sw0657851AggregatorViewReadyPorts, sw0657851PortStatusNumber=sw0657851PortStatusNumber, sw0657851TrunkPortCurrentMode=sw0657851TrunkPortCurrentMode, sw0657851Event=sw0657851Event, uplink=uplink, sw0657851LoopDetectedConf=sw0657851LoopDetectedConf, sw0657851GvrpCounterTxLeaveEmptyMsg=sw0657851GvrpCounterTxLeaveEmptyMsg, sw0657851AccountAddPassword=sw0657851AccountAddPassword, sw0657851IpmbServerFailure=sw0657851IpmbServerFailure, sw0657851Configuration=sw0657851Configuration, sw0657851GvrpGroupAdministrativeCtrlApp=sw0657851GvrpGroupAdministrativeCtrlApp, sw0657851Log=sw0657851Log, sw0657851MacAliasNumber=sw0657851MacAliasNumber, sw0657851AclPortsConfPortCopy=sw0657851AclPortsConfPortCopy, sw0657851SystemDescription=sw0657851SystemDescription, sw0657851PortConf=sw0657851PortConf, sw0657851AccountDel=sw0657851AccountDel, sw0657851IgmpGroupMembershipTable=sw0657851IgmpGroupMembershipTable, sw0657851QosPortConfQCL=sw0657851QosPortConfQCL, sw0657851LogIndex=sw0657851LogIndex, sw0657851PortBaseVlanGroupMembers=sw0657851PortBaseVlanGroupMembers, sw0657851MacTableStaticFilterEntryCreate=sw0657851MacTableStaticFilterEntryCreate, sw0657851QosPortConfQueuingMode=sw0657851QosPortConfQueuingMode, sw0657851MacTableStaticFilterAlias=sw0657851MacTableStaticFilterAlias, sw0657851VlanPortConfVlanAware=sw0657851VlanPortConfVlanAware, sw0657851Reboot=sw0657851Reboot, sw0657851EventNumber=sw0657851EventNumber, sw0657851StpStateDisabled=sw0657851StpStateDisabled, sw0657851VlanPortBaseEnabled=sw0657851VlanPortBaseEnabled, sw0657851QosStromCtrlFloodedUnicastRate=sw0657851QosStromCtrlFloodedUnicastRate, sw0657851QosStromCtrlMulticastStatus=sw0657851QosStromCtrlMulticastStatus, sw0657851HardwareVersion=sw0657851HardwareVersion, sw0657851BiosVsersion=sw0657851BiosVsersion, sw0657851AclPortsConfTable=sw0657851AclPortsConfTable, sw0657851GvrpCounterRxTotalGvrpPkts=sw0657851GvrpCounterRxTotalGvrpPkts, sw0657851VlanTagBaseEnabled=sw0657851VlanTagBaseEnabled, sw0657851DaylightEndTime=sw0657851DaylightEndTime, sw0657851Dot1XStatusTable=sw0657851Dot1XStatusTable, sw0657851DaylightSavingTime=sw0657851DaylightSavingTime, sw0657851LacpStateDisabled=sw0657851LacpStateDisabled, sw0657851TrapHostEntry=sw0657851TrapHostEntry, sw0657851MacTableStaticForwardEntry=sw0657851MacTableStaticForwardEntry, sw0657851DaylightStartTime=sw0657851DaylightStartTime, sw0657851Dot1XPortmaxReq=sw0657851Dot1XPortmaxReq, sw0657851Dot1XClearCounter=sw0657851Dot1XClearCounter, sw0657851AccountEntry=sw0657851AccountEntry, sw0657851AccountNumber=sw0657851AccountNumber, sw0657851PortBaseVlanGroupEntry=sw0657851PortBaseVlanGroupEntry, sw0657851QosPortConfUserPriority=sw0657851QosPortConfUserPriority, sw0657851LoopDetectedLockedPort=sw0657851LoopDetectedLockedPort, sw0657851Firmware=sw0657851Firmware, sw0657851AccountIndex=sw0657851AccountIndex, sw0657851TagBaseVlanEntryAction=sw0657851TagBaseVlanEntryAction, sw0657851QosPortConfQueueWeightedLow=sw0657851QosPortConfQueueWeightedLow, sw0657851IgmpProxyConfUnregIPMCFlooding=sw0657851IgmpProxyConfUnregIPMCFlooding, sw0657851HostMacAddress=sw0657851HostMacAddress, sw0657851Dot1XAuthEapolLogoffFramesRx=sw0657851Dot1XAuthEapolLogoffFramesRx, sw0657851QosRateLimitersPolicer=sw0657851QosRateLimitersPolicer, sw0657851SFPInfoNumber=sw0657851SFPInfoNumber, sw0657851GvrpCounterRxLeaveAllMsg=sw0657851GvrpCounterRxLeaveAllMsg, partnerkey=partnerkey, sw0657851IpMacBindSetting=sw0657851IpMacBindSetting, sw0657851Dot1XPortquietPeriod=sw0657851Dot1XPortquietPeriod, sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticated=sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticated, sw0657851Snmp=sw0657851Snmp, sw0657851PortBaseVlanGroupIndex=sw0657851PortBaseVlanGroupIndex, sw0657851AggregatorViewIndex=sw0657851AggregatorViewIndex, sw0657851SFPInfoIndex=sw0657851SFPInfoIndex, sw0657851IgmpProxyConfGeneralQueuyMaxRepTime=sw0657851IgmpProxyConfGeneralQueuyMaxRepTime, ipmacMac=ipmacMac, sw0657851Dot1XBackendAccessChallenges=sw0657851Dot1XBackendAccessChallenges, sw0657851Dot1XAuthLastEapolFrameVersion=sw0657851Dot1XAuthLastEapolFrameVersion, sw0657851MacTableStaticForwardEntryAction=sw0657851MacTableStaticForwardEntryAction, sw0657851Dot1XPortreAuthPeriod=sw0657851Dot1XPortreAuthPeriod, sw0657851QosStormCtrl=sw0657851QosStormCtrl, sw0657851EmailUserEntry=sw0657851EmailUserEntry, sw0657851SFPVendorName=sw0657851SFPVendorName, sw0657851GvrpConfDefaultAppMode=sw0657851GvrpConfDefaultAppMode, sw0657851MechanicalVersion=sw0657851MechanicalVersion, sw0657851Dot1XPortreAuthMax=sw0657851Dot1XPortreAuthMax, sw0657851MacTableStaticForward=sw0657851MacTableStaticForward, sw0657851Dot1XServerConfAccountingUdpPort=sw0657851Dot1XServerConfAccountingUdpPort, sw0657851MacTableStaticForwardEntryCreate=sw0657851MacTableStaticForwardEntryCreate, sw0657851NTPTimeSync=sw0657851NTPTimeSync, sw0657851SFPRxPWR=sw0657851SFPRxPWR, sw0657851MacAlias=sw0657851MacAlias, sw0657851ManagementSecurityAction=sw0657851ManagementSecurityAction, sw0657851IP=sw0657851IP, sw0657851GvrpConfTable=sw0657851GvrpConfTable, sw0657851Dot1XStatusIndex=sw0657851Dot1XStatusIndex, sw0657851DnsServer=sw0657851DnsServer, sw0657851ManagementSecurityNumber=sw0657851ManagementSecurityNumber, sw0657851QosRateLimitersEntry=sw0657851QosRateLimitersEntry, sw0657851MirroredPortsTable=sw0657851MirroredPortsTable, sw0657851EventSendTrap=sw0657851EventSendTrap, sw0657851IpMacBind=sw0657851IpMacBind, sw0657851AggregatorViewEntry=sw0657851AggregatorViewEntry, sw0657851IpMacBindConf=sw0657851IpMacBindConf, sw0657851Dot1XStatisticsTable=sw0657851Dot1XStatisticsTable, sw0657851TrunkPortStatus=sw0657851TrunkPortStatus, sw0657851EmailUserIndex=sw0657851EmailUserIndex, sw0657851EmailUsername=sw0657851EmailUsername, sw0657851GvrpCounterTxEmptyMsg=sw0657851GvrpCounterTxEmptyMsg, sw0657851MacTableStaticForwardVid=sw0657851MacTableStaticForwardVid, sw0657851DevicePort=sw0657851DevicePort, ipmacClientMac=ipmacClientMac, sw0657851IpMacBindSettingIP=sw0657851IpMacBindSettingIP, sw0657851IgmpProxyConfRouterPorts=sw0657851IgmpProxyConfRouterPorts, sw0657851GvrpGroupId=sw0657851GvrpGroupId, sw0657851Dot1XAuthAuthReauthsWhileAuthenticated=sw0657851Dot1XAuthAuthReauthsWhileAuthenticated, sw0657851IgmpProxyConfState=sw0657851IgmpProxyConfState, sw0657851IgmpGroupMembershipEntry=sw0657851IgmpGroupMembershipEntry, sw0657851SFPVendorSN=sw0657851SFPVendorSN, sw0657851Dot1XPortsuppTimeout=sw0657851Dot1XPortsuppTimeout, sw0657851MirroredPortIndex=sw0657851MirroredPortIndex, sw0657851LogNumber=sw0657851LogNumber, sw0657851TagBaseVlanGroupTable=sw0657851TagBaseVlanGroupTable, sw0657851NTPServer=sw0657851NTPServer, sw0657851VlanPortConfPvid=sw0657851VlanPortConfPvid, sw0657851AccountPassword=sw0657851AccountPassword, sw0657851IgmpGroupMembershipNumber=sw0657851IgmpGroupMembershipNumber, sw0657851AclRateLimiterTable=sw0657851AclRateLimiterTable, sw0657851SFPTemperature=sw0657851SFPTemperature, sw0657851LacpStateEnabled=sw0657851LacpStateEnabled, sw0657851Dot1XPortConfTable=sw0657851Dot1XPortConfTable, sw0657851MacAliasEntry=sw0657851MacAliasEntry, sw0657851ManagementSecurityIpRange=sw0657851ManagementSecurityIpRange, sw0657851Dot1XStatusEntry=sw0657851Dot1XStatusEntry, sw0657851FlashSize=sw0657851FlashSize, sw0657851TrunkPortGroup=sw0657851TrunkPortGroup, sw0657851DefaultGateway=sw0657851DefaultGateway, sw0657851VlanConf=sw0657851VlanConf, sw0657851AccountAuthorization=sw0657851AccountAuthorization, sw0657851IpMacBindSettingIndex=sw0657851IpMacBindSettingIndex, sw0657851LacpSystemPriority=sw0657851LacpSystemPriority, sw0657851Dot1XServerConfAccountingServerIp=sw0657851Dot1XServerConfAccountingServerIp)
mibBuilder.exportSymbols("SIGNAMAX-SW0657851-MIB", sw0657851Time=sw0657851Time, sw0657851MacTableStaticFilterNumber=sw0657851MacTableStaticFilterNumber, sw0657851PortStatusFlwCtrlRx=sw0657851PortStatusFlwCtrlRx, sw0657851Dot1XAuthEapolStartFramesRx=sw0657851Dot1XAuthEapolStartFramesRx, sw0657851AccountAddName=sw0657851AccountAddName, sw0657851PortConfIndex=sw0657851PortConfIndex, sw0657851MacAliasTable=sw0657851MacAliasTable, sw0657851VlanPortConfUntagVid=sw0657851VlanPortConfUntagVid, sw0657851Dot1XStatusMode=sw0657851Dot1XStatusMode, sw0657851StpTopologyChanged=sw0657851StpTopologyChanged, sw0657851AclPortsConfEntry=sw0657851AclPortsConfEntry, sw0657851IPAddress=sw0657851IPAddress, sw0657851QosPortConfQueueWeightedMedium=sw0657851QosPortConfQueueWeightedMedium, sw0657851GvrpCounter=sw0657851GvrpCounter, sw0657851DoAccountAdd=sw0657851DoAccountAdd, sw0657851GvrpCounterRxJoinInMsg=sw0657851GvrpCounterRxJoinInMsg, sw0657851System=sw0657851System, sw0657851VlanPortConfIndex=sw0657851VlanPortConfIndex, sw0657851GvrpStateEnabled=sw0657851GvrpStateEnabled, sw0657851Dot1XAuthLastEapolFrameSource=sw0657851Dot1XAuthLastEapolFrameSource, actorkey=actorkey, sw0657851PortStatusTable=sw0657851PortStatusTable, sw0657851PortBaseVlanGroupTable=sw0657851PortBaseVlanGroupTable, sw0657851Dot1XAuthEntersConnecting=sw0657851Dot1XAuthEntersConnecting, sw0657851IgmpProxyConfGeneralQueuyRepTimeout=sw0657851IgmpProxyConfGeneralQueuyRepTimeout, sw0657851VlanPortConfFrameType=sw0657851VlanPortConfFrameType, sw0657851PortConfEntry=sw0657851PortConfEntry, sw0657851SFPInfoTable=sw0657851SFPInfoTable, sw0657851VlanPortConfIngressFiltering=sw0657851VlanPortConfIngressFiltering, sw0657851ManagementSecurityEntry=sw0657851ManagementSecurityEntry, sw0657851IpMacBindstate=sw0657851IpMacBindstate, sw0657851UserLogin=sw0657851UserLogin, sw0657851IgmpGroupAddress=sw0657851IgmpGroupAddress, sw0657851PortBaseVlanGroup=sw0657851PortBaseVlanGroup, sw0657851DeviceName=sw0657851DeviceName, sw0657851GvrpGroupAdministrativeCtrlReg=sw0657851GvrpGroupAdministrativeCtrlReg, sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticating=sw0657851Dot1XAuthAuthEapLogoffWhileAuthenticating, PYSNMP_MODULE_ID=signamax, sw0657851MacTableStaticFilterTable=sw0657851MacTableStaticFilterTable, sw0657851ManagementSecurityIndex=sw0657851ManagementSecurityIndex, sw0657851Dot1XAuthAuthFailWhileAuthenticating=sw0657851Dot1XAuthAuthFailWhileAuthenticating, sw0657851IpMacBindSettingTable=sw0657851IpMacBindSettingTable, sw0657851TagBaseVlanNumber=sw0657851TagBaseVlanNumber, sw0657851StpStateEnabled=sw0657851StpStateEnabled, sw0657851IgmpGroupPortMembers=sw0657851IgmpGroupPortMembers, ipmacServerIp=ipmacServerIp, sw0657851IpMacBindSettingEntry=sw0657851IpMacBindSettingEntry, sw0657851DoExportConfig=sw0657851DoExportConfig, sw0657851MacTableStaticFilter=sw0657851MacTableStaticFilter, sw0657851FirmwareVersion=sw0657851FirmwareVersion, sw0657851AclRateLimiter=sw0657851AclRateLimiter, switch=switch, sw0657851LoopDetectedPort=sw0657851LoopDetectedPort, sw0657851GvrpGroupVid=sw0657851GvrpGroupVid, sw0657851IgmpGroupNo=sw0657851IgmpGroupNo, sw0657851EventTable=sw0657851EventTable, sw0657851GvrpCounterTable=sw0657851GvrpCounterTable, sw0657851RamSize=sw0657851RamSize, sw0657851MirroredPortsEntry=sw0657851MirroredPortsEntry, sw0657851ManagementSecurityName=sw0657851ManagementSecurityName, sw0657851SaveRestore=sw0657851SaveRestore, sw0657851ManagementSecurityIncomigPort=sw0657851ManagementSecurityIncomigPort, sw0657851PortConfExcessiveCollisionMode=sw0657851PortConfExcessiveCollisionMode, sw0657851DualMediaSwapped=sw0657851DualMediaSwapped, sw0657851Dot1XAuthAuthTimeoutsWhileAuthenticating=sw0657851Dot1XAuthAuthTimeoutsWhileAuthenticating, sw0657851EmailPassword=sw0657851EmailPassword, sw0657851GvrpConf=sw0657851GvrpConf, sw0657851EmailUserTable=sw0657851EmailUserTable, ipmacClientIp=ipmacClientIp, sw0657851EmailServer=sw0657851EmailServer, sw0657851PortStatuDescription=sw0657851PortStatuDescription, sw0657851GetCommunity=sw0657851GetCommunity, sw0657851GvrpGroupAdministrativeCtrlTable=sw0657851GvrpGroupAdministrativeCtrlTable, ipmacIp=ipmacIp, sw0657851VlanPortConfEntry=sw0657851VlanPortConfEntry, sw0657851MacTableLearningConfIndex=sw0657851MacTableLearningConfIndex, sw0657851Dot1XAuthAuthEapStartsWhileAuthenticated=sw0657851Dot1XAuthAuthEapStartsWhileAuthenticated, sw0657851MacTableStaticForwardNumber=sw0657851MacTableStaticForwardNumber, sw0657851MirroringPort=sw0657851MirroringPort, sw0657851EventEntry=sw0657851EventEntry, sw0657851TagBaseVlanGroupEntryCreate=sw0657851TagBaseVlanGroupEntryCreate, sw0657851Dot1XBackendAuthSuccesses=sw0657851Dot1XBackendAuthSuccesses, sw0657851MacTableInfo=sw0657851MacTableInfo, sw0657851TrapHostPort=sw0657851TrapHostPort, sw0657851Port=sw0657851Port, sw0657851TagBaseVlanIgmpProxy=sw0657851TagBaseVlanIgmpProxy, sw0657851SetCommunity=sw0657851SetCommunity, sw0657851Dot1XauthEapLogoffsWhileConnecting=sw0657851Dot1XauthEapLogoffsWhileConnecting, sw0657851AclPortsConfIndex=sw0657851AclPortsConfIndex, sw0657851Account=sw0657851Account, sw0657851Dot1XPortserverTimeout=sw0657851Dot1XPortserverTimeout, sw0657851TagBaseVlanMemberPort=sw0657851TagBaseVlanMemberPort, sw0657851FirmwareFileName=sw0657851FirmwareFileName, sw0657851VlanPortConfTable=sw0657851VlanPortConfTable, sw0657851PortStatusIndex=sw0657851PortStatusIndex, sw0657851IgmpProxyConfGeneralQueuyInterval=sw0657851IgmpProxyConfGeneralQueuyInterval, sw0657851MaxPktLenConfEntry=sw0657851MaxPktLenConfEntry, sw0657851IpMacBindTrustPort=sw0657851IpMacBindTrustPort, sw0657851GvrpCounterRxEmptyMsg=sw0657851GvrpCounterRxEmptyMsg, sw0657851PortBaseVlanGroupName=sw0657851PortBaseVlanGroupName, sw0657851Dot1XBackendAuthFails=sw0657851Dot1XBackendAuthFails, sw0657851NTPTimeZone=sw0657851NTPTimeZone, sw0657851Dot1XAuthAuthEapStartsWhileAuthenticating=sw0657851Dot1XAuthAuthEapStartsWhileAuthenticating, sw0657851TrunkPortEntry=sw0657851TrunkPortEntry, sw0657851QosPortConfQueueWeightedHigh=sw0657851QosPortConfQueueWeightedHigh, sw0657851Dot1XPortMode=sw0657851Dot1XPortMode, sw0657851RestoreUser=sw0657851RestoreUser, sw0657851MirroredPortDestinationEnable=sw0657851MirroredPortDestinationEnable, sw0657851Produces=sw0657851Produces, sw0657851VlanPortConfRole=sw0657851VlanPortConfRole, sw0657851MacTableStaticForwardPort=sw0657851MacTableStaticForwardPort, sw0657851MacTableStaticFilterEntry=sw0657851MacTableStaticFilterEntry, sw0657851GvrpCounterIndex=sw0657851GvrpCounterIndex, sw0657851IpmbStateEnabled=sw0657851IpmbStateEnabled, sw0657851Dot1XBackendOtherRequestsToSupplicant=sw0657851Dot1XBackendOtherRequestsToSupplicant, sw0657851GvrpCounterTxLeaveAllMsg=sw0657851GvrpCounterTxLeaveAllMsg, sw0657851SFPVendorPN=sw0657851SFPVendorPN, sw0657851QosRateLimitersTable=sw0657851QosRateLimitersTable, sw0657851IpMacBindSettingNumber=sw0657851IpMacBindSettingNumber, sw0657851TrunkPort=sw0657851TrunkPort, sw0657851AclPortsConfCounter=sw0657851AclPortsConfCounter, sw0657851SFPInfoEntry=sw0657851SFPInfoEntry, sw0657851PortConfDescription=sw0657851PortConfDescription, sw0657851TagBaseVlanPrivateVlan=sw0657851TagBaseVlanPrivateVlan, sw0657851GvrpCounterTxJoinEmptyMsg=sw0657851GvrpCounterTxJoinEmptyMsg, sw0657851TrapVariable=sw0657851TrapVariable, sw0657851AccountName=sw0657851AccountName, sw0657851Dot1XPortControl=sw0657851Dot1XPortControl, sw0657851TrunkPortTable=sw0657851TrunkPortTable, sw0657851NetMask=sw0657851NetMask, sw0657851ConfigFile=sw0657851ConfigFile, sw0657851ModuleRemoved=sw0657851ModuleRemoved, sw0657851QosRateLimitersShaper=sw0657851QosRateLimitersShaper, sw0657851MacTableStaticFilterVid=sw0657851MacTableStaticFilterVid, sw0657851IgmpGroupVLANId=sw0657851IgmpGroupVLANId, sw0657851PortConfNumber=sw0657851PortConfNumber, sw0657851DoFirmwareUpgrade=sw0657851DoFirmwareUpgrade, sw0657851PortBaseVlanNumber=sw0657851PortBaseVlanNumber, sw0657851ManagementSecurityEntryAction=sw0657851ManagementSecurityEntryAction, sw0657851GvrpGroupEntry=sw0657851GvrpGroupEntry, sw0657851Dot1XStatisticsEntry=sw0657851Dot1XStatisticsEntry, sw0657851VLAN=sw0657851VLAN, sw0657851GvrpCounterTxJoinInMsg=sw0657851GvrpCounterTxJoinInMsg, sw0657851QosPortConfTable=sw0657851QosPortConfTable, sw0657851RestoreDefault=sw0657851RestoreDefault, sw0657851DnsSetting=sw0657851DnsSetting, sw0657851AliasMac=sw0657851AliasMac, sw0657851Dot1XStatusStatus=sw0657851Dot1XStatusStatus, sw0657851SFPVcc=sw0657851SFPVcc, sw0657851Dot1XAuthEapLengthErrorFramesRx=sw0657851Dot1XAuthEapLengthErrorFramesRx, sw0657851MacAgeTime=sw0657851MacAgeTime, sw0657851SaveUser=sw0657851SaveUser, sw0657851TagBaseVlanVid=sw0657851TagBaseVlanVid, sw0657851LoopDetectedNumber=sw0657851LoopDetectedNumber, sw0657851GvrpCounterRxLeaveEmptyMsg=sw0657851GvrpCounterRxLeaveEmptyMsg, sw0657851ModuleInserted=sw0657851ModuleInserted, sw0657851MacTableLearningConfTable=sw0657851MacTableLearningConfTable, sw0657851AclRateLimiterEntry=sw0657851AclRateLimiterEntry, sw0657851GvrpConfRestrictedMode=sw0657851GvrpConfRestrictedMode, sw0657851QosStromCtrlBroadcastRate=sw0657851QosStromCtrlBroadcastRate, sw0657851TrunkPortMethod=sw0657851TrunkPortMethod, sw0657851ManagementVlan=sw0657851ManagementVlan, sw0657851MacTableStaticForwardIndex=sw0657851MacTableStaticForwardIndex, sw0657851TrunkPortIndex=sw0657851TrunkPortIndex, sw0657851PortConfTable=sw0657851PortConfTable, sw0657851TagBaseVlanGvrp=sw0657851TagBaseVlanGvrp, sw0657851TrunkPortAggtr=sw0657851TrunkPortAggtr, sw0657851PortStatusMedia=sw0657851PortStatusMedia, sw0657851ManagementSecurityTable=sw0657851ManagementSecurityTable, sw0657851Dot1XAuthEapolReqFramesTx=sw0657851Dot1XAuthEapolReqFramesTx, sw0657851SaveStart=sw0657851SaveStart, sw0657851QosRateLimiters=sw0657851QosRateLimiters, sw0657851Dot1XServerConfAuthenticationSecretKey=sw0657851Dot1XServerConfAuthenticationSecretKey, sw0657851DhcpSetting=sw0657851DhcpSetting, sw0657851Dot1XAuthEapolRespIdFramesRx=sw0657851Dot1XAuthEapolRespIdFramesRx, sw0657851MacTableStaticForwardAlias=sw0657851MacTableStaticForwardAlias, sw0657851EventIndex=sw0657851EventIndex, sw0657851IpMacBindSettingMAC=sw0657851IpMacBindSettingMAC, sw0657851GvrpGroup=sw0657851GvrpGroup, sw0657851Dot1XBackendResponses=sw0657851Dot1XBackendResponses, sw0657851SFPTxBias=sw0657851SFPTxBias, sw0657851QosPortConf=sw0657851QosPortConf, sw0657851MacTableLearningConfEntry=sw0657851MacTableLearningConfEntry, sw0657851PortStatus=sw0657851PortStatus, sw0657851SFPVendorRev=sw0657851SFPVendorRev, sw0657851MacAliasEntryCreate=sw0657851MacAliasEntryCreate, sw0657851GVRPInfo=sw0657851GVRPInfo, sw0657851QosRateLimitersPolicerRate=sw0657851QosRateLimitersPolicerRate, sw0657851PortConfFlwCtrl=sw0657851PortConfFlwCtrl, groupId=groupId, sw0657851TagBaseVlanName=sw0657851TagBaseVlanName, sw0657851ExportIpAddress=sw0657851ExportIpAddress, sw0657851SFPConnectorType=sw0657851SFPConnectorType, sw0657851AclPortsConfAction=sw0657851AclPortsConfAction, sw0657851AclRateLimiterIndex=sw0657851AclRateLimiterIndex, sw0657851PortConfSpdDpx=sw0657851PortConfSpdDpx, sw0657851AclRateLimiterRate=sw0657851AclRateLimiterRate, sw0657851AggregatorViewMethod=sw0657851AggregatorViewMethod, sw0657851IpMacBindSettingEntryCreate=sw0657851IpMacBindSettingEntryCreate, sw0657851MaxPktLenConfTable=sw0657851MaxPktLenConfTable, sw0657851MirroredPortSrouceEnable=sw0657851MirroredPortSrouceEnable, sw0657851ImportConfigName=sw0657851ImportConfigName, sw0657851TrapHostIP=sw0657851TrapHostIP, sw0657851MaxPktLenConfSetting=sw0657851MaxPktLenConfSetting, sw0657851QosNumOfClasses=sw0657851QosNumOfClasses, sw0657851GvrpGroupTable=sw0657851GvrpGroupTable, sw0657851Dot1XServerConfAuthenticationServerIp=sw0657851Dot1XServerConfAuthenticationServerIp, sw0657851ImportIpAddress=sw0657851ImportIpAddress, sw0657851SFPFiberType=sw0657851SFPFiberType, sw0657851GvrpStateDisabled=sw0657851GvrpStateDisabled, sw0657851Dot1XServerConfAccountingSecretKey=sw0657851Dot1XServerConfAccountingSecretKey, sw0657851TagBaseVlanGroupEntry=sw0657851TagBaseVlanGroupEntry, sw0657851TrapHostTable=sw0657851TrapHostTable, sw0657851SFPVendorOUI=sw0657851SFPVendorOUI, sw0657851TrapHostCommunity=sw0657851TrapHostCommunity, sw0657851MacTableStaticForwardMac=sw0657851MacTableStaticForwardMac, signamax=signamax, sw0657851MacTableStaticFilterIndex=sw0657851MacTableStaticFilterIndex, username=username)
