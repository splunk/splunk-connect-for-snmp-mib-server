#
# PySNMP MIB module TIMETRA-TWAMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-TWAMP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:15:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, iso, ObjectIdentity, IpAddress, MibIdentifier, ModuleIdentity, Counter32, NotificationType, Bits, Gauge32, Unsigned32, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "ObjectIdentity", "IpAddress", "MibIdentifier", "ModuleIdentity", "Counter32", "NotificationType", "Bits", "Gauge32", "Unsigned32", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TimeStamp", "TextualConvention")
tmnxSRNotifyPrefix, tmnxSRConfs, tmnxSRObjs, timetraSRMIBModules = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "tmnxSRConfs", "tmnxSRObjs", "timetraSRMIBModules")
TmnxOperState, TmnxAdminState, TItemDescription = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TmnxOperState", "TmnxAdminState", "TItemDescription")
timetraTwampMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 76))
timetraTwampMIBModule.setRevisions(('2011-02-01 00:00',))
if mibBuilder.loadTexts: timetraTwampMIBModule.setLastUpdated('201102010000Z')
if mibBuilder.loadTexts: timetraTwampMIBModule.setOrganization('Alcatel-Lucent')
tmnxTwampObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76))
tmnxTwampNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76))
tmnxTwampConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76))
tmnxTwampTableLastChangeObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 1))
tmnxTwampConfigObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2))
tmnxTwampStatisticsObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3))
tmnxTwampNotificationObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 4))
tmnxTwampNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76, 0))
tmnxTwampComplianceObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 1))
tmnxTwampGroupObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 2))
tmnxTwampConfigScalarObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 1))
tmnxTwampConfigTableObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2))
tmnxTwampStatisticsScalarObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1))
tmnxTwampStatisticsTableObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2))
tmnxTwampV9v0GroupObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 2, 1))
class TmnxTwampSrvConnectionCount(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 64)

class TmnxTwampSrvSessionCount(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 128)

tmnxTwampSrvPrefixTblLastChg = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPrefixTblLastChg.setStatus('current')
tmnxTwampSrvAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 1, 1), TmnxAdminState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxTwampSrvAdminState.setStatus('current')
tmnxTwampSrvInactTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxTwampSrvInactTimeout.setStatus('current')
tmnxTwampSrvMaxConnections = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 1, 3), TmnxTwampSrvConnectionCount().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxTwampSrvMaxConnections.setStatus('current')
tmnxTwampSrvMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 1, 4), TmnxTwampSrvSessionCount().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxTwampSrvMaxSessions.setStatus('current')
tmnxTwampSrvPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1), )
if mibBuilder.loadTexts: tmnxTwampSrvPrefixTable.setStatus('current')
tmnxTwampSrvPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1), ).setIndexNames((0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixAddrType"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixAddr"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixLen"))
if mibBuilder.loadTexts: tmnxTwampSrvPrefixEntry.setStatus('current')
tmnxTwampSrvPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxTwampSrvPrefixAddrType.setStatus('current')
tmnxTwampSrvPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxTwampSrvPrefixAddr.setStatus('current')
tmnxTwampSrvPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: tmnxTwampSrvPrefixLen.setStatus('current')
tmnxTwampSrvPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxTwampSrvPrefixRowStatus.setStatus('current')
tmnxTwampSrvPrefixLastChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPrefixLastChg.setStatus('current')
tmnxTwampSrvPrefixDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 6), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxTwampSrvPrefixDescription.setStatus('current')
tmnxTwampSrvPrefixMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 7), TmnxTwampSrvConnectionCount().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxTwampSrvPrefixMaxConnections.setStatus('current')
tmnxTwampSrvPrefixMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 2, 2, 1, 1, 8), TmnxTwampSrvSessionCount().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxTwampSrvPrefixMaxSessions.setStatus('current')
tmnxTwampSrvOperState = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 1), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvOperState.setStatus('current')
tmnxTwampSrvUpTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 2), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvUpTime.setStatus('current')
tmnxTwampSrvConnectionCount = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 3), TmnxTwampSrvConnectionCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnectionCount.setStatus('current')
tmnxTwampSrvConnectionsRejected = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnectionsRejected.setStatus('current')
tmnxTwampSrvSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 5), TmnxTwampSrvSessionCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvSessionCount.setStatus('current')
tmnxTwampSrvTestSessCompleted = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvTestSessCompleted.setStatus('current')
tmnxTwampSrvTestSessRejected = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvTestSessRejected.setStatus('current')
tmnxTwampSrvTestSessAborted = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvTestSessAborted.setStatus('current')
tmnxTwampSrvTestPacketsRx = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvTestPacketsRx.setStatus('current')
tmnxTwampSrvTestPacketsTx = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvTestPacketsTx.setStatus('current')
tmnxTwampSrvPrefixStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1), )
if mibBuilder.loadTexts: tmnxTwampSrvPrefixStatsTable.setStatus('current')
tmnxTwampSrvPrefixStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1), )
tmnxTwampSrvPrefixEntry.registerAugmentions(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixStatsEntry"))
tmnxTwampSrvPrefixStatsEntry.setIndexNames(*tmnxTwampSrvPrefixEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxTwampSrvPrefixStatsEntry.setStatus('current')
tmnxTwampSrvPfxConnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 1), TmnxTwampSrvConnectionCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxConnCount.setStatus('current')
tmnxTwampSrvPfxConnsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxConnsRejected.setStatus('current')
tmnxTwampSrvPfxSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 3), TmnxTwampSrvSessionCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxSessionCount.setStatus('current')
tmnxTwampSrvPfxTestSessCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxTestSessCompleted.setStatus('current')
tmnxTwampSrvPfxTestSessRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxTestSessRejected.setStatus('current')
tmnxTwampSrvPfxTestSessAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxTestSessAbort.setStatus('current')
tmnxTwampSrvPfxTestPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxTestPacketsRx.setStatus('current')
tmnxTwampSrvPfxTestPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvPfxTestPacketsTx.setStatus('current')
tmnxTwampSrvConnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2), )
if mibBuilder.loadTexts: tmnxTwampSrvConnStatsTable.setStatus('current')
tmnxTwampSrvConnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1), ).setIndexNames((0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixAddrType"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixAddr"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixLen"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnClientAddrType"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnClientAddr"), (0, "TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnSeqNum"))
if mibBuilder.loadTexts: tmnxTwampSrvConnStatsEntry.setStatus('current')
tmnxTwampSrvConnClientAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxTwampSrvConnClientAddrType.setStatus('current')
tmnxTwampSrvConnClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxTwampSrvConnClientAddr.setStatus('current')
tmnxTwampSrvConnSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxTwampSrvConnSeqNum.setStatus('current')
tmnxTwampSrvConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("settingUp", 1), ("ready", 2), ("running", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnState.setStatus('current')
tmnxTwampSrvConnIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnIdleTime.setStatus('current')
tmnxTwampSrvConnSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 6), TmnxTwampSrvSessionCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnSessionCount.setStatus('current')
tmnxTwampSrvConnTestSessComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnTestSessComplete.setStatus('current')
tmnxTwampSrvConnTestSessRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnTestSessRejected.setStatus('current')
tmnxTwampSrvConnTestPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnTestPacketsRx.setStatus('current')
tmnxTwampSrvConnTestPacketsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 3, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxTwampSrvConnTestPacketsTx.setStatus('current')
tmnxTwampSrvNotifClientAddrType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 4, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxTwampSrvNotifClientAddrType.setStatus('current')
tmnxTwampSrvNotifClientAddr = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 76, 4, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxTwampSrvNotifClientAddr.setStatus('current')
tmnxTwampSrvInactivityTimeout = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76, 0, 1)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnIdleTime"))
if mibBuilder.loadTexts: tmnxTwampSrvInactivityTimeout.setStatus('current')
tmnxTwampSrvMaxConnsExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76, 0, 2)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnectionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddrType"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddr"))
if mibBuilder.loadTexts: tmnxTwampSrvMaxConnsExceeded.setStatus('current')
tmnxTwampSrvPfxMaxConnsExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76, 0, 3)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxConnCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddrType"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddr"))
if mibBuilder.loadTexts: tmnxTwampSrvPfxMaxConnsExceeded.setStatus('current')
tmnxTwampSrvMaxSessExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76, 0, 4)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvSessionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddrType"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddr"))
if mibBuilder.loadTexts: tmnxTwampSrvMaxSessExceeded.setStatus('current')
tmnxTwampSrvPfxMaxSessExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 76, 0, 5)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxSessionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddrType"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddr"))
if mibBuilder.loadTexts: tmnxTwampSrvPfxMaxSessExceeded.setStatus('current')
tmnxTwampCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 1, 1)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvV9v0Group"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifyV9v0Group"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifyObjsV9v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxTwampCompliance = tmnxTwampCompliance.setStatus('current')
tmnxTwampSrvV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 2, 1, 1)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvAdminState"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvInactTimeout"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvMaxConnections"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvMaxSessions"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixTblLastChg"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixRowStatus"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixLastChg"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixDescription"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixMaxConnections"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPrefixMaxSessions"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvOperState"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvUpTime"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnectionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnectionsRejected"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvSessionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvTestSessCompleted"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvTestSessRejected"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvTestSessAborted"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvTestPacketsRx"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvTestPacketsTx"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxConnCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxConnsRejected"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxSessionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxTestSessCompleted"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxTestSessRejected"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxTestSessAbort"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxTestPacketsRx"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxTestPacketsTx"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnState"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnIdleTime"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnSessionCount"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnTestSessComplete"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnTestSessRejected"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnTestPacketsRx"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvConnTestPacketsTx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxTwampSrvV9v0Group = tmnxTwampSrvV9v0Group.setStatus('current')
tmnxTwampSrvNotifyV9v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 2, 1, 2)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvInactivityTimeout"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvMaxConnsExceeded"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxMaxConnsExceeded"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvMaxSessExceeded"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvPfxMaxSessExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxTwampSrvNotifyV9v0Group = tmnxTwampSrvNotifyV9v0Group.setStatus('current')
tmnxTwampSrvNotifyObjsV9v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 76, 2, 1, 3)).setObjects(("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddrType"), ("TIMETRA-TWAMP-MIB", "tmnxTwampSrvNotifClientAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxTwampSrvNotifyObjsV9v0Group = tmnxTwampSrvNotifyObjsV9v0Group.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-TWAMP-MIB", tmnxTwampTableLastChangeObjs=tmnxTwampTableLastChangeObjs, tmnxTwampSrvPfxMaxConnsExceeded=tmnxTwampSrvPfxMaxConnsExceeded, TmnxTwampSrvSessionCount=TmnxTwampSrvSessionCount, tmnxTwampSrvPfxMaxSessExceeded=tmnxTwampSrvPfxMaxSessExceeded, tmnxTwampSrvPrefixAddr=tmnxTwampSrvPrefixAddr, tmnxTwampObjs=tmnxTwampObjs, tmnxTwampSrvConnTestSessComplete=tmnxTwampSrvConnTestSessComplete, tmnxTwampSrvSessionCount=tmnxTwampSrvSessionCount, tmnxTwampCompliance=tmnxTwampCompliance, tmnxTwampSrvConnTestPacketsRx=tmnxTwampSrvConnTestPacketsRx, tmnxTwampSrvNotifClientAddr=tmnxTwampSrvNotifClientAddr, tmnxTwampConfigTableObjs=tmnxTwampConfigTableObjs, tmnxTwampSrvConnClientAddrType=tmnxTwampSrvConnClientAddrType, tmnxTwampConformance=tmnxTwampConformance, tmnxTwampSrvConnIdleTime=tmnxTwampSrvConnIdleTime, PYSNMP_MODULE_ID=timetraTwampMIBModule, tmnxTwampSrvPrefixTblLastChg=tmnxTwampSrvPrefixTblLastChg, tmnxTwampSrvTestPacketsTx=tmnxTwampSrvTestPacketsTx, tmnxTwampSrvConnectionCount=tmnxTwampSrvConnectionCount, tmnxTwampStatisticsTableObjs=tmnxTwampStatisticsTableObjs, tmnxTwampSrvPfxTestPacketsRx=tmnxTwampSrvPfxTestPacketsRx, tmnxTwampSrvPrefixEntry=tmnxTwampSrvPrefixEntry, tmnxTwampSrvPrefixStatsEntry=tmnxTwampSrvPrefixStatsEntry, tmnxTwampSrvPfxTestSessAbort=tmnxTwampSrvPfxTestSessAbort, tmnxTwampStatisticsObjs=tmnxTwampStatisticsObjs, tmnxTwampSrvConnClientAddr=tmnxTwampSrvConnClientAddr, tmnxTwampSrvMaxConnections=tmnxTwampSrvMaxConnections, tmnxTwampSrvV9v0Group=tmnxTwampSrvV9v0Group, tmnxTwampSrvPrefixLastChg=tmnxTwampSrvPrefixLastChg, tmnxTwampSrvInactivityTimeout=tmnxTwampSrvInactivityTimeout, tmnxTwampSrvNotifClientAddrType=tmnxTwampSrvNotifClientAddrType, tmnxTwampSrvNotifyV9v0Group=tmnxTwampSrvNotifyV9v0Group, tmnxTwampSrvPfxSessionCount=tmnxTwampSrvPfxSessionCount, tmnxTwampSrvConnSeqNum=tmnxTwampSrvConnSeqNum, TmnxTwampSrvConnectionCount=TmnxTwampSrvConnectionCount, tmnxTwampSrvConnStatsTable=tmnxTwampSrvConnStatsTable, tmnxTwampSrvNotifyObjsV9v0Group=tmnxTwampSrvNotifyObjsV9v0Group, tmnxTwampSrvPrefixMaxSessions=tmnxTwampSrvPrefixMaxSessions, tmnxTwampConfigScalarObjs=tmnxTwampConfigScalarObjs, tmnxTwampNotifyPrefix=tmnxTwampNotifyPrefix, tmnxTwampSrvPrefixRowStatus=tmnxTwampSrvPrefixRowStatus, tmnxTwampNotifications=tmnxTwampNotifications, tmnxTwampStatisticsScalarObjs=tmnxTwampStatisticsScalarObjs, tmnxTwampSrvPrefixTable=tmnxTwampSrvPrefixTable, tmnxTwampConfigObjs=tmnxTwampConfigObjs, tmnxTwampComplianceObjs=tmnxTwampComplianceObjs, tmnxTwampSrvPfxConnCount=tmnxTwampSrvPfxConnCount, tmnxTwampSrvPfxTestPacketsTx=tmnxTwampSrvPfxTestPacketsTx, tmnxTwampSrvPfxConnsRejected=tmnxTwampSrvPfxConnsRejected, tmnxTwampSrvTestPacketsRx=tmnxTwampSrvTestPacketsRx, tmnxTwampSrvPrefixLen=tmnxTwampSrvPrefixLen, tmnxTwampSrvPrefixMaxConnections=tmnxTwampSrvPrefixMaxConnections, tmnxTwampV9v0GroupObjs=tmnxTwampV9v0GroupObjs, tmnxTwampSrvMaxSessions=tmnxTwampSrvMaxSessions, tmnxTwampSrvPfxTestSessRejected=tmnxTwampSrvPfxTestSessRejected, tmnxTwampSrvConnTestSessRejected=tmnxTwampSrvConnTestSessRejected, tmnxTwampSrvPfxTestSessCompleted=tmnxTwampSrvPfxTestSessCompleted, tmnxTwampNotificationObjs=tmnxTwampNotificationObjs, tmnxTwampSrvTestSessRejected=tmnxTwampSrvTestSessRejected, tmnxTwampGroupObjs=tmnxTwampGroupObjs, tmnxTwampSrvConnState=tmnxTwampSrvConnState, timetraTwampMIBModule=timetraTwampMIBModule, tmnxTwampSrvPrefixDescription=tmnxTwampSrvPrefixDescription, tmnxTwampSrvMaxConnsExceeded=tmnxTwampSrvMaxConnsExceeded, tmnxTwampSrvTestSessAborted=tmnxTwampSrvTestSessAborted, tmnxTwampSrvConnSessionCount=tmnxTwampSrvConnSessionCount, tmnxTwampSrvMaxSessExceeded=tmnxTwampSrvMaxSessExceeded, tmnxTwampSrvUpTime=tmnxTwampSrvUpTime, tmnxTwampSrvInactTimeout=tmnxTwampSrvInactTimeout, tmnxTwampSrvTestSessCompleted=tmnxTwampSrvTestSessCompleted, tmnxTwampSrvAdminState=tmnxTwampSrvAdminState, tmnxTwampSrvOperState=tmnxTwampSrvOperState, tmnxTwampSrvConnStatsEntry=tmnxTwampSrvConnStatsEntry, tmnxTwampSrvConnTestPacketsTx=tmnxTwampSrvConnTestPacketsTx, tmnxTwampSrvPrefixAddrType=tmnxTwampSrvPrefixAddrType, tmnxTwampSrvPrefixStatsTable=tmnxTwampSrvPrefixStatsTable, tmnxTwampSrvConnectionsRejected=tmnxTwampSrvConnectionsRejected)
