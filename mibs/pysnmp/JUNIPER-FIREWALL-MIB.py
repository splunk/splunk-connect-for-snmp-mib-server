#
# PySNMP MIB module JUNIPER-FIREWALL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-FIREWALL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ModuleIdentity, Bits, Counter32, Counter64, TimeTicks, NotificationType, IpAddress, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Bits", "Counter32", "Counter64", "TimeTicks", "NotificationType", "IpAddress", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxFirewalls = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 5))
jnxFirewalls.setRevisions(('2016-01-23 15:53',))
if mibBuilder.loadTexts: jnxFirewalls.setLastUpdated('201601231553Z')
if mibBuilder.loadTexts: jnxFirewalls.setOrganization('Juniper Networks, Inc.')
jnxFirewallsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1), )
if mibBuilder.loadTexts: jnxFirewallsTable.setStatus('deprecated')
jnxFirewallsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1), ).setIndexNames((0, "JUNIPER-FIREWALL-MIB", "jnxFWFilter"), (0, "JUNIPER-FIREWALL-MIB", "jnxFWCounter"))
if mibBuilder.loadTexts: jnxFirewallsEntry.setStatus('current')
jnxFWFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWFilter.setStatus('current')
jnxFWCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounter.setStatus('current')
jnxFWType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("counter", 2), ("policer", 3), ("hpolagg", 4), ("hpolpre", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWType.setStatus('current')
jnxFWPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWPackets.setStatus('current')
jnxFWBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWBytes.setStatus('current')
jnxFirewallCounterTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2), )
if mibBuilder.loadTexts: jnxFirewallCounterTable.setStatus('current')
jnxFirewallCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1), ).setIndexNames((0, "JUNIPER-FIREWALL-MIB", "jnxFWCounterFilterName"), (0, "JUNIPER-FIREWALL-MIB", "jnxFWCounterName"), (0, "JUNIPER-FIREWALL-MIB", "jnxFWCounterType"))
if mibBuilder.loadTexts: jnxFirewallCounterEntry.setStatus('current')
jnxFWCounterFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: jnxFWCounterFilterName.setStatus('current')
jnxFWCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: jnxFWCounterName.setStatus('current')
jnxFWCounterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("counter", 2), ("policer", 3), ("hpolagg", 4), ("hpolpre", 5))))
if mibBuilder.loadTexts: jnxFWCounterType.setStatus('current')
jnxFWCounterPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterPacketCount.setStatus('current')
jnxFWCounterByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterByteCount.setStatus('current')
jnxFWCounterDisplayFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterDisplayFilterName.setStatus('current')
jnxFWCounterDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterDisplayName.setStatus('current')
jnxFWCounterDisplayType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("counter", 2), ("policer", 3), ("hpolagg", 4), ("hpolpre", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCounterDisplayType.setStatus('current')
jnxFWCntrXTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3), )
if mibBuilder.loadTexts: jnxFWCntrXTable.setStatus('current')
jnxFWCntrXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1), )
jnxFirewallCounterEntry.registerAugmentions(("JUNIPER-FIREWALL-MIB", "jnxFWCntrXEntry"))
jnxFWCntrXEntry.setIndexNames(*jnxFirewallCounterEntry.getIndexNames())
if mibBuilder.loadTexts: jnxFWCntrXEntry.setStatus('current')
jnxFWCntrPolicerOfferedPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOfferedPktCount.setStatus('current')
jnxFWCntrPolicerOfferedByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOfferedByteCount.setStatus('current')
jnxFWCntrPolicerOutSpecPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOutSpecPktCount.setStatus('current')
jnxFWCntrPolicerOutSpecByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerOutSpecByteCount.setStatus('current')
jnxFWCntrPolicerTxPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerTxPktCount.setStatus('current')
jnxFWCntrPolicerTxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 5, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxFWCntrPolicerTxByteCount.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-FIREWALL-MIB", jnxFWCounterFilterName=jnxFWCounterFilterName, jnxFWCntrPolicerOutSpecByteCount=jnxFWCntrPolicerOutSpecByteCount, jnxFWCounterType=jnxFWCounterType, jnxFWType=jnxFWType, jnxFWCounterPacketCount=jnxFWCounterPacketCount, jnxFWCntrPolicerTxByteCount=jnxFWCntrPolicerTxByteCount, jnxFWPackets=jnxFWPackets, jnxFWCounterDisplayType=jnxFWCounterDisplayType, jnxFWCntrXTable=jnxFWCntrXTable, jnxFWCounterDisplayName=jnxFWCounterDisplayName, jnxFWCntrPolicerOfferedPktCount=jnxFWCntrPolicerOfferedPktCount, jnxFWFilter=jnxFWFilter, jnxFirewalls=jnxFirewalls, jnxFWCntrXEntry=jnxFWCntrXEntry, jnxFWCntrPolicerOutSpecPktCount=jnxFWCntrPolicerOutSpecPktCount, jnxFWCntrPolicerTxPktCount=jnxFWCntrPolicerTxPktCount, jnxFWCounterByteCount=jnxFWCounterByteCount, jnxFirewallCounterTable=jnxFirewallCounterTable, jnxFirewallCounterEntry=jnxFirewallCounterEntry, jnxFWCntrPolicerOfferedByteCount=jnxFWCntrPolicerOfferedByteCount, jnxFirewallsEntry=jnxFirewallsEntry, jnxFWCounterName=jnxFWCounterName, jnxFirewallsTable=jnxFirewallsTable, jnxFWCounter=jnxFWCounter, PYSNMP_MODULE_ID=jnxFirewalls, jnxFWBytes=jnxFWBytes, jnxFWCounterDisplayFilterName=jnxFWCounterDisplayFilterName)
