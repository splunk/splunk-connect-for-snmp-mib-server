#
# PySNMP MIB module CISCO-LWAPP-DOT11-CCX-CLIENT-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-DOT11-CCX-CLIENT-DIAG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
CLDot11ClientDiagAssocReason, CiscoLwappDot11ClientAuthMethod = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-CCX-TC-MIB", "CLDot11ClientDiagAssocReason", "CiscoLwappDot11ClientAuthMethod")
ciscoLwappDot11ClientCcxMIBObjects, cldcClientMacAddress = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-MIB", "ciscoLwappDot11ClientCcxMIBObjects", "cldcClientMacAddress")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoMilliSeconds, = mibBuilder.importSymbols("CISCO-TC", "CiscoMilliSeconds")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, ModuleIdentity, Unsigned32, Counter32, MibIdentifier, Gauge32, TimeTicks, Integer32, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Unsigned32", "Counter32", "MibIdentifier", "Gauge32", "TimeTicks", "Integer32", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "ObjectIdentity")
DisplayString, TimeStamp, TruthValue, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TruthValue", "TextualConvention", "MacAddress", "RowStatus")
ciscoLwappDot11CcxClientDiagMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2))
ciscoLwappDot11CcxClientDiagMIB.setRevisions(('2006-04-10 00:00',))
if mibBuilder.loadTexts: ciscoLwappDot11CcxClientDiagMIB.setLastUpdated('200606240000Z')
if mibBuilder.loadTexts: ciscoLwappDot11CcxClientDiagMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappDot11CcxClientDiagMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0))
ciscoLwappDot11CcxClientDiagMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 1))
ciscoLwappDot11CcxClientDiagMIBNotifObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 2))
ciscoClientCcxDiagRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1))
ciscoClientCcxDiagResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2))
ciscoClientCcxDiagStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 3))
class CiscoLwappCcxDiagResponseStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5))
    namedValues = NamedValues(("successful", 0), ("fail", 1), ("refused", 3), ("incapable", 4), ("unknown", 5))

class CiscoLwappCcxDiagTestStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 5))
    namedValues = NamedValues(("successful", 0), ("pending", 1), ("timeout", 3), ("stopped", 4), ("mismatch", 5))

class CiscoLwappDot11ClientDot1xCredential(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 255))
    namedValues = NamedValues(("pre-sharedkey", 0), ("username-password", 1), ("xdot", 2), ("other-cert", 3), ("one-time-password", 4), ("secure-id-token", 5), ("none", 255))

class CiscoLwappDot11ClientAbortTestReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("reserved", 0), ("timeout", 1), ("cancelled-by-operator", 2))

class CiscoLwappDot11ClientInitiateTest(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("initiate-test", 1), ("abort-test", 2))

cldccDiagDhcpTestReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 1), )
if mibBuilder.loadTexts: cldccDiagDhcpTestReqTable.setStatus('current')
cldccDiagDhcpTestReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagDhcpTestReqEntry.setStatus('current')
cldccDiagDhcpTestReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagDhcpTestReqRowStatus.setStatus('current')
cldccDiagDhcpTestRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 1), )
if mibBuilder.loadTexts: cldccDiagDhcpTestRespTable.setStatus('current')
cldccDiagDhcpTestRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagDhcpTestRespEntry.setStatus('current')
cldccDiagDhcpTestRespDhcpOffer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagDhcpTestRespDhcpOffer.setStatus('current')
cldccDiagPingTestReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 2), )
if mibBuilder.loadTexts: cldccDiagPingTestReqTable.setStatus('current')
cldccDiagPingTestReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagPingTestReqEntry.setStatus('current')
cldccDiagPingTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dns-server", 1), ("default-gw", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagPingTestType.setStatus('current')
cldccDiagPingTestReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagPingTestReqRowStatus.setStatus('current')
cldccDiagPingTestRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2), )
if mibBuilder.loadTexts: cldccDiagPingTestRespTable.setStatus('current')
cldccDiagPingTestRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagPingTestRespEntry.setStatus('current')
cldccDiagPingTestRespIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespIPAddressType.setStatus('current')
cldccDiagPingTestRespIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespIPAddress.setStatus('current')
cldccDiagPingTestRespDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespDestMacAddress.setStatus('current')
cldccDiagPingTestRespPingsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespPingsSent.setStatus('current')
cldccDiagPingTestRespPingsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespPingsReceived.setStatus('current')
cldccDiagPingTestRespMinEchoTIme = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 6), CiscoMilliSeconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespMinEchoTIme.setStatus('current')
cldccDiagPingTestRespMaxEchoTIme = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 2, 2, 7), CiscoMilliSeconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagPingTestRespMaxEchoTIme.setStatus('current')
cldccDiagDnsNameResolTestReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 3), )
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestReqTable.setStatus('current')
cldccDiagDnsNameResolTestReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestReqEntry.setStatus('current')
cldccDiagDnsNameResolTestReqNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestReqNetworkName.setStatus('current')
cldccDiagDnsNameResolTestReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestReqRowStatus.setStatus('current')
cldccDiagDnsNameResolTestRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 3), )
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestRespTable.setStatus('current')
cldccDiagDnsNameResolTestRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestRespEntry.setStatus('current')
cldccDiagDnsNameResolTestRespIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 3, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestRespIpAddressType.setStatus('current')
cldccDiagDnsNameResolTestRespIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 3, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestRespIpAddress.setStatus('current')
cldccDiagDnsNameResolTestRespServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagDnsNameResolTestRespServerName.setStatus('current')
cldccDiagAssociationTestReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4), )
if mibBuilder.loadTexts: cldccDiagAssociationTestReqTable.setStatus('current')
cldccDiagAssociationTestReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagAssociationTestReqEntry.setStatus('current')
cldccDiagAssocTestReqBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1, 1), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAssocTestReqBssid.setStatus('current')
cldccDiagAssocTestReqSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAssocTestReqSsid.setStatus('current')
cldccDiagAssocTestReqChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAssocTestReqChannel.setStatus('current')
cldccDiagAssocTestReqBand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAssocTestReqBand.setStatus('current')
cldccDiagAssocTestReqPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAssocTestReqPhyType.setStatus('current')
cldccDiagAssocTestReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAssocTestReqRowStatus.setStatus('current')
cldccDiagAssociationTestRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 4), )
if mibBuilder.loadTexts: cldccDiagAssociationTestRespTable.setStatus('current')
cldccDiagAssociationTestRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 4, 4), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagAssociationTestRespEntry.setStatus('current')
cldccDiagAssociationTestRespIsAssocComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 4, 4, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagAssociationTestRespIsAssocComplete.setStatus('current')
cldccDiagAssocTestRespReturnedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 4, 4, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagAssocTestRespReturnedStatus.setStatus('current')
cldccDiagAuthenticationTestReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5), )
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqTable.setStatus('current')
cldccDiagAuthenticationTestReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqEntry.setStatus('current')
cldccDiagAuthenticationTestReqBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1, 1), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqBssid.setStatus('current')
cldccDiagAuthenticationTestReqProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqProfileId.setStatus('current')
cldccDiagAuthenticationTestReqChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqChannel.setStatus('current')
cldccDiagAuthenticationTestReqBand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqBand.setStatus('current')
cldccDiagAuthenticationTestReqPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqPhyType.setStatus('current')
cldccDiagAuthenticationTestReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 5, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestReqRowStatus.setStatus('current')
cldccDiagAuthenticationTestRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 5), )
if mibBuilder.loadTexts: cldccDiagAuthenticationTestRespTable.setStatus('current')
cldccDiagAuthenticationTestRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 5, 5), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagAuthenticationTestRespEntry.setStatus('current')
cldccDiagAuthenticationTestRespIsCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 5, 5, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestRespIsCompleted.setStatus('current')
cldccDiagAuthenticationTestRespReturnedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 5, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestRespReturnedStatus.setStatus('current')
cldccDiagAuthenticationTestRespEAPMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 5, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagAuthenticationTestRespEAPMethod.setStatus('current')
cldccDiagMsgDisplayReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 6), )
if mibBuilder.loadTexts: cldccDiagMsgDisplayReqTable.setStatus('current')
cldccDiagMsgDisplayReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagMsgDisplayReqEntry.setStatus('current')
cldccDiagMsgDisplayMsgType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33))).clone(namedValues=NamedValues(("invalid-ssid", 1), ("invalid-network-settings", 2), ("wlan-capability-mismatch", 3), ("bad-credentials", 4), ("call-support", 5), ("problem-resolved", 6), ("resolution-incomplete", 7), ("try-again-later", 8), ("user-action-required", 9), ("trouble-shooting-refused-by-network", 10), ("retrieving-client-reports", 11), ("retrieving-client-logs", 12), ("retrieval-complete", 13), ("begining-association-test", 14), ("begining-dhcp-test", 15), ("begining-network-connectivity-test", 16), ("begining-dns-ping-test", 17), ("begining-name-resolution-test", 18), ("begining-dot1x-test", 19), ("redirecting-client-to-a-profile", 20), ("test-complete", 21), ("test-passed", 22), ("test-failed", 23), ("cancel-diag-channel-operation", 24), ("log-retrieval-refused", 25), ("client-report-retrieval-refused", 26), ("test-request-refused-by-client", 27), ("invalid-network-address", 28), ("known-problem-with-network", 29), ("scheduled-maint-period", 30), ("wlan-security-incorrect", 31), ("waln-encryption-incorrect", 32), ("wlan-auth-incorrect", 33)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagMsgDisplayMsgType.setStatus('current')
cldccDiagMsgDisplayReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagMsgDisplayReqRowStatus.setStatus('current')
cldccDiagProfileRedirectReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 7), )
if mibBuilder.loadTexts: cldccDiagProfileRedirectReqTable.setStatus('current')
cldccDiagProfileRedirectReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 7, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagProfileRedirectReqEntry.setStatus('current')
cldccDiagProfileRedirectReqProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 7, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagProfileRedirectReqProfileId.setStatus('current')
cldccDiagProfileRedirectReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccDiagProfileRedirectReqRowStatus.setStatus('current')
cldccDiagMsgDisplayRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 6), )
if mibBuilder.loadTexts: cldccDiagMsgDisplayRespTable.setStatus('current')
cldccDiagMsgDisplayRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagMsgDisplayRespEntry.setStatus('current')
cldccDiagMsgDisplayRespString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagMsgDisplayRespString.setStatus('current')
cldccDiagTestLoggedFrameTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 8), )
if mibBuilder.loadTexts: cldccDiagTestLoggedFrameTable.setStatus('current')
cldccDiagTestLoggedFrameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 8, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CCX-CLIENT-DIAG-MIB", "cldccDiagTestLoggedFrameIndex"))
if mibBuilder.loadTexts: cldccDiagTestLoggedFrameEntry.setStatus('current')
cldccDiagTestLoggedFrameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagTestLoggedFrameIndex.setStatus('current')
cldccDiagTestLoggedFrameDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("up", 0), ("down", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagTestLoggedFrameDirection.setStatus('current')
cldccDiagTestLoggedFrameTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagTestLoggedFrameTimeStamp.setStatus('current')
cldccDiagTestLoggedFrameData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 2, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagTestLoggedFrameData.setStatus('current')
cldccDiagTestStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 3, 1), )
if mibBuilder.loadTexts: cldccDiagTestStatusTable.setStatus('current')
cldccDiagTestStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 3, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccDiagTestStatusEntry.setStatus('current')
cldccDiagTestLastTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 3, 1, 1, 1), CiscoLwappCcxDiagTestStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagTestLastTestStatus.setStatus('current')
cldccDiagTestLastResponseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 0, 3, 1, 1, 2), CiscoLwappCcxDiagResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccDiagTestLastResponseStatus.setStatus('current')
cldccDiagClientMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 2, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cldccDiagClientMacAddress.setStatus('current')
cldccDiagAssocReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 2, 2), CLDot11ClientDiagAssocReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cldccDiagAssocReasonCode.setStatus('current')
cldccDiagClientAssociatedToDiagWlan = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 2, 1, 1)).setObjects(("CISCO-LWAPP-DOT11-CCX-CLIENT-DIAG-MIB", "cldccDiagClientMacAddress"), ("CISCO-LWAPP-DOT11-CCX-CLIENT-DIAG-MIB", "cldccDiagAssocReasonCode"))
if mibBuilder.loadTexts: cldccDiagClientAssociatedToDiagWlan.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-DOT11-CCX-CLIENT-DIAG-MIB", PYSNMP_MODULE_ID=ciscoLwappDot11CcxClientDiagMIB, cldccDiagTestLastResponseStatus=cldccDiagTestLastResponseStatus, cldccDiagDhcpTestRespEntry=cldccDiagDhcpTestRespEntry, cldccDiagPingTestRespPingsReceived=cldccDiagPingTestRespPingsReceived, cldccDiagPingTestRespMaxEchoTIme=cldccDiagPingTestRespMaxEchoTIme, cldccDiagAssociationTestRespEntry=cldccDiagAssociationTestRespEntry, cldccDiagAssocReasonCode=cldccDiagAssocReasonCode, ciscoLwappDot11CcxClientDiagMIB=ciscoLwappDot11CcxClientDiagMIB, cldccDiagProfileRedirectReqEntry=cldccDiagProfileRedirectReqEntry, cldccDiagAssocTestReqChannel=cldccDiagAssocTestReqChannel, cldccDiagAuthenticationTestReqPhyType=cldccDiagAuthenticationTestReqPhyType, cldccDiagAuthenticationTestRespEAPMethod=cldccDiagAuthenticationTestRespEAPMethod, cldccDiagTestLoggedFrameData=cldccDiagTestLoggedFrameData, cldccDiagAuthenticationTestReqBand=cldccDiagAuthenticationTestReqBand, cldccDiagAssociationTestRespIsAssocComplete=cldccDiagAssociationTestRespIsAssocComplete, cldccDiagMsgDisplayMsgType=cldccDiagMsgDisplayMsgType, ciscoClientCcxDiagStatus=ciscoClientCcxDiagStatus, cldccDiagDnsNameResolTestRespIpAddressType=cldccDiagDnsNameResolTestRespIpAddressType, cldccDiagProfileRedirectReqRowStatus=cldccDiagProfileRedirectReqRowStatus, cldccDiagAuthenticationTestRespIsCompleted=cldccDiagAuthenticationTestRespIsCompleted, cldccDiagPingTestType=cldccDiagPingTestType, cldccDiagClientAssociatedToDiagWlan=cldccDiagClientAssociatedToDiagWlan, cldccDiagClientMacAddress=cldccDiagClientMacAddress, cldccDiagAuthenticationTestReqRowStatus=cldccDiagAuthenticationTestReqRowStatus, cldccDiagAssocTestReqSsid=cldccDiagAssocTestReqSsid, cldccDiagAuthenticationTestReqEntry=cldccDiagAuthenticationTestReqEntry, cldccDiagAssocTestReqBand=cldccDiagAssocTestReqBand, cldccDiagMsgDisplayRespString=cldccDiagMsgDisplayRespString, cldccDiagPingTestRespIPAddressType=cldccDiagPingTestRespIPAddressType, cldccDiagMsgDisplayReqTable=cldccDiagMsgDisplayReqTable, cldccDiagPingTestReqEntry=cldccDiagPingTestReqEntry, cldccDiagPingTestRespPingsSent=cldccDiagPingTestRespPingsSent, cldccDiagAuthenticationTestReqProfileId=cldccDiagAuthenticationTestReqProfileId, cldccDiagDnsNameResolTestReqRowStatus=cldccDiagDnsNameResolTestReqRowStatus, cldccDiagAssocTestReqRowStatus=cldccDiagAssocTestReqRowStatus, cldccDiagAuthenticationTestRespEntry=cldccDiagAuthenticationTestRespEntry, cldccDiagTestStatusTable=cldccDiagTestStatusTable, cldccDiagProfileRedirectReqTable=cldccDiagProfileRedirectReqTable, cldccDiagAssociationTestRespTable=cldccDiagAssociationTestRespTable, cldccDiagMsgDisplayReqEntry=cldccDiagMsgDisplayReqEntry, cldccDiagPingTestRespTable=cldccDiagPingTestRespTable, cldccDiagDnsNameResolTestReqEntry=cldccDiagDnsNameResolTestReqEntry, cldccDiagProfileRedirectReqProfileId=cldccDiagProfileRedirectReqProfileId, cldccDiagAuthenticationTestRespTable=cldccDiagAuthenticationTestRespTable, cldccDiagDhcpTestReqRowStatus=cldccDiagDhcpTestReqRowStatus, cldccDiagMsgDisplayReqRowStatus=cldccDiagMsgDisplayReqRowStatus, cldccDiagMsgDisplayRespTable=cldccDiagMsgDisplayRespTable, cldccDiagDhcpTestReqEntry=cldccDiagDhcpTestReqEntry, cldccDiagAssocTestReqPhyType=cldccDiagAssocTestReqPhyType, cldccDiagDnsNameResolTestRespIpAddress=cldccDiagDnsNameResolTestRespIpAddress, cldccDiagTestStatusEntry=cldccDiagTestStatusEntry, CiscoLwappCcxDiagTestStatus=CiscoLwappCcxDiagTestStatus, CiscoLwappDot11ClientInitiateTest=CiscoLwappDot11ClientInitiateTest, cldccDiagPingTestRespDestMacAddress=cldccDiagPingTestRespDestMacAddress, cldccDiagTestLoggedFrameIndex=cldccDiagTestLoggedFrameIndex, cldccDiagMsgDisplayRespEntry=cldccDiagMsgDisplayRespEntry, cldccDiagAssociationTestReqEntry=cldccDiagAssociationTestReqEntry, cldccDiagPingTestReqTable=cldccDiagPingTestReqTable, CiscoLwappCcxDiagResponseStatus=CiscoLwappCcxDiagResponseStatus, cldccDiagPingTestRespEntry=cldccDiagPingTestRespEntry, cldccDiagAuthenticationTestReqBssid=cldccDiagAuthenticationTestReqBssid, cldccDiagDhcpTestRespTable=cldccDiagDhcpTestRespTable, cldccDiagAuthenticationTestReqChannel=cldccDiagAuthenticationTestReqChannel, cldccDiagPingTestRespMinEchoTIme=cldccDiagPingTestRespMinEchoTIme, cldccDiagAuthenticationTestReqTable=cldccDiagAuthenticationTestReqTable, cldccDiagPingTestReqRowStatus=cldccDiagPingTestReqRowStatus, cldccDiagDhcpTestRespDhcpOffer=cldccDiagDhcpTestRespDhcpOffer, ciscoLwappDot11CcxClientDiagMIBNotifObjs=ciscoLwappDot11CcxClientDiagMIBNotifObjs, cldccDiagTestLoggedFrameDirection=cldccDiagTestLoggedFrameDirection, cldccDiagAuthenticationTestRespReturnedStatus=cldccDiagAuthenticationTestRespReturnedStatus, ciscoLwappDot11CcxClientDiagMIBObjects=ciscoLwappDot11CcxClientDiagMIBObjects, cldccDiagAssocTestReqBssid=cldccDiagAssocTestReqBssid, ciscoLwappDot11CcxClientDiagMIBNotifs=ciscoLwappDot11CcxClientDiagMIBNotifs, CiscoLwappDot11ClientDot1xCredential=CiscoLwappDot11ClientDot1xCredential, cldccDiagPingTestRespIPAddress=cldccDiagPingTestRespIPAddress, cldccDiagDnsNameResolTestRespTable=cldccDiagDnsNameResolTestRespTable, ciscoClientCcxDiagRequest=ciscoClientCcxDiagRequest, cldccDiagTestLastTestStatus=cldccDiagTestLastTestStatus, cldccDiagTestLoggedFrameTable=cldccDiagTestLoggedFrameTable, cldccDiagDnsNameResolTestReqNetworkName=cldccDiagDnsNameResolTestReqNetworkName, cldccDiagTestLoggedFrameEntry=cldccDiagTestLoggedFrameEntry, CiscoLwappDot11ClientAbortTestReason=CiscoLwappDot11ClientAbortTestReason, cldccDiagAssociationTestReqTable=cldccDiagAssociationTestReqTable, cldccDiagTestLoggedFrameTimeStamp=cldccDiagTestLoggedFrameTimeStamp, ciscoClientCcxDiagResponse=ciscoClientCcxDiagResponse, cldccDiagDnsNameResolTestReqTable=cldccDiagDnsNameResolTestReqTable, cldccDiagDhcpTestReqTable=cldccDiagDhcpTestReqTable, cldccDiagDnsNameResolTestRespServerName=cldccDiagDnsNameResolTestRespServerName, cldccDiagDnsNameResolTestRespEntry=cldccDiagDnsNameResolTestRespEntry, cldccDiagAssocTestRespReturnedStatus=cldccDiagAssocTestRespReturnedStatus)
