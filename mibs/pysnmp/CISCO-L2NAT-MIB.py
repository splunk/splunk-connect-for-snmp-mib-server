#
# PySNMP MIB module CISCO-L2NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-L2NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:47:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoInetAddressMask, = mibBuilder.importSymbols("CISCO-TC", "CiscoInetAddressMask")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, Bits, Counter64, Counter32, Unsigned32, NotificationType, IpAddress, MibIdentifier, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Counter64", "Counter32", "Unsigned32", "NotificationType", "IpAddress", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Gauge32")
DisplayString, TextualConvention, RowStatus, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "StorageType")
ciscoL2natMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 806))
ciscoL2natMIB.setRevisions(('2013-04-16 00:00',))
if mibBuilder.loadTexts: ciscoL2natMIB.setLastUpdated('201304160000Z')
if mibBuilder.loadTexts: ciscoL2natMIB.setOrganization('Cisco Systems, Inc.')
ciscoL2natMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 806, 1))
cl2natTotalInstances = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTotalInstances.setStatus('current')
cl2natTotalMatched = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTotalMatched.setStatus('current')
cl2natTotalUnmatched = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTotalUnmatched.setStatus('current')
cl2natTotalFixups = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTotalFixups.setStatus('current')
cl2natTotalTranslationEntryConfigured = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTotalTranslationEntryConfigured.setStatus('current')
cl2natTotalPacketTranslated = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTotalPacketTranslated.setStatus('current')
cl2natInstConfigInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7), )
if mibBuilder.loadTexts: cl2natInstConfigInstanceTable.setStatus('current')
cl2natInstConfigInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1), ).setIndexNames((0, "CISCO-L2NAT-MIB", "cl2natInstConfigInstanceName"))
if mibBuilder.loadTexts: cl2natInstConfigInstanceEntry.setStatus('current')
cl2natInstConfigInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cl2natInstConfigInstanceName.setStatus('current')
cl2natInstConfigPermitIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1, 2), Bits().clone(namedValues=NamedValues(("unmatched", 0), ("igmp", 1), ("multicast", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstConfigPermitIn.setStatus('current')
cl2natInstConfigPermitOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1, 3), Bits().clone(namedValues=NamedValues(("unmatched", 0), ("igmp", 1), ("multicast", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstConfigPermitOut.setStatus('current')
cl2natInstConfigFixup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1, 4), Bits().clone(namedValues=NamedValues(("arp", 0), ("icmp", 1), ("profinet", 2), ("cip", 3), ("snmp", 4))).clone(namedValues=NamedValues(("arp", 0), ("icmp", 1), ("profinet", 2), ("cip", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstConfigFixup.setStatus('current')
cl2natInstConfigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1, 5), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natInstConfigStorageType.setStatus('current')
cl2natInstConfigInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstConfigInstanceRowStatus.setStatus('current')
cl2natInstIpInstanceIpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8), )
if mibBuilder.loadTexts: cl2natInstIpInstanceIpTable.setStatus('current')
cl2natInstIpInstanceIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1), ).setIndexNames((0, "CISCO-L2NAT-MIB", "cl2natInstConfigInstanceName"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpDirection"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpFromIpAddressType"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpFromIpAddress"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpAddressType"))
if mibBuilder.loadTexts: cl2natInstIpInstanceIpEntry.setStatus('current')
cl2natInstIpDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inside", 1), ("outside", 2))))
if mibBuilder.loadTexts: cl2natInstIpDirection.setStatus('current')
cl2natInstIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("host", 1), ("range", 2), ("network", 3))))
if mibBuilder.loadTexts: cl2natInstIpAddressType.setStatus('current')
cl2natInstIpFromIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cl2natInstIpFromIpAddressType.setStatus('current')
cl2natInstIpFromIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cl2natInstIpFromIpAddress.setStatus('current')
cl2natInstIpToIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstIpToIpAddressType.setStatus('current')
cl2natInstIpToIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstIpToIpAddress.setStatus('current')
cl2natInstIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 7), CiscoInetAddressMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstIpAddressMask.setStatus('current')
cl2natInstIpRange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstIpRange.setStatus('current')
cl2natInstStorageIpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 9), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natInstStorageIpStorageType.setStatus('current')
cl2natInstIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 8, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInstIpRowStatus.setStatus('current')
cl2natInterfaceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9), )
if mibBuilder.loadTexts: cl2natInterfaceConfigTable.setStatus('current')
cl2natInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9, 1), ).setIndexNames((0, "CISCO-L2NAT-MIB", "cl2natInterfaceConfigIfIndex"), (0, "CISCO-L2NAT-MIB", "cl2natInterfaceConfigVlanIndex"))
if mibBuilder.loadTexts: cl2natInterfaceConfigEntry.setStatus('current')
cl2natInterfaceConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cl2natInterfaceConfigIfIndex.setStatus('current')
cl2natInterfaceConfigVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cl2natInterfaceConfigVlanIndex.setStatus('current')
cl2natInterfaceConfigInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natInterfaceConfigInstanceName.setStatus('current')
cl2natInterfaceConfigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natInterfaceConfigStorageType.setStatus('current')
cl2natInterfaceConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 9, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cl2natInterfaceConfigRowStatus.setStatus('current')
cl2natInterfaceStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10), )
if mibBuilder.loadTexts: cl2natInterfaceStatisticsTable.setStatus('current')
cl2natInterfaceStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1), ).setIndexNames((0, "CISCO-L2NAT-MIB", "cl2natInterfaceConfigIfIndex"), (0, "CISCO-L2NAT-MIB", "cl2natInterfaceConfigVlanIndex"))
if mibBuilder.loadTexts: cl2natInterfaceStatisticsEntry.setStatus('current')
cl2natFixupArpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupArpIn.setStatus('current')
cl2natFixupIcmpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupIcmpIn.setStatus('current')
cl2natFixupCipIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupCipIn.setStatus('current')
cl2natFixupProfinetIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupProfinetIn.setStatus('current')
cl2natFixupFtpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupFtpIn.setStatus('current')
cl2natFixupSnmpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupSnmpIn.setStatus('current')
cl2natFixupSipIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupSipIn.setStatus('current')
cl2natFixupSccpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupSccpIn.setStatus('current')
cl2natUnmatchedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natUnmatchedIn.setStatus('current')
cl2natTranslatedUnicastIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTranslatedUnicastIn.setStatus('current')
cl2natDroppedUnicastIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natDroppedUnicastIn.setStatus('current')
cl2natDroppedMulticastIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natDroppedMulticastIn.setStatus('current')
cl2natPassThruUnicastIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natPassThruUnicastIn.setStatus('current')
cl2natPassThruMulticastIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natPassThruMulticastIn.setStatus('current')
cl2natPassThruIgmpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natPassThruIgmpIn.setStatus('current')
cl2natDroppedIgmpIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natDroppedIgmpIn.setStatus('current')
cl2natFixupArpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupArpOut.setStatus('current')
cl2natFixupIcmpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupIcmpOut.setStatus('current')
cl2natFixupCipOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupCipOut.setStatus('current')
cl2natFixupProfinetOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupProfinetOut.setStatus('current')
cl2natFixupFtpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupFtpOut.setStatus('current')
cl2natFixupSnmpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupSnmpOut.setStatus('current')
cl2natFixupSipOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupSipOut.setStatus('current')
cl2natFixupSccpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natFixupSccpOut.setStatus('current')
cl2natUnmatchedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natUnmatchedOut.setStatus('current')
cl2natDroppedUnicastOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natDroppedUnicastOut.setStatus('current')
cl2natTranslatedUnicastOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTranslatedUnicastOut.setStatus('current')
cl2natPassThruUnicastOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natPassThruUnicastOut.setStatus('current')
cl2natDroppedMulticastOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natDroppedMulticastOut.setStatus('current')
cl2natPassThruMulticastOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natPassThruMulticastOut.setStatus('current')
cl2natDroppedIgmpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natDroppedIgmpOut.setStatus('current')
cl2natPassThruIgmpOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 10, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natPassThruIgmpOut.setStatus('current')
cl2natInterfaceIpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 11), )
if mibBuilder.loadTexts: cl2natInterfaceIpStatisticsTable.setStatus('current')
cl2natInterfaceIpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 11, 1), ).setIndexNames((0, "CISCO-L2NAT-MIB", "cl2natInterfaceConfigIfIndex"), (0, "CISCO-L2NAT-MIB", "cl2natInterfaceConfigVlanIndex"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpDirection"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpFromIpAddressType"), (0, "CISCO-L2NAT-MIB", "cl2natInstIpFromIpAddress"))
if mibBuilder.loadTexts: cl2natInterfaceIpStatisticsEntry.setStatus('current')
cl2natTranslatesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 11, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTranslatesIn.setStatus('current')
cl2natTranslatesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 806, 1, 11, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cl2natTranslatesOut.setStatus('current')
ciscoL2natMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 806, 3))
ciscoL2natMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 1))
ciscoL2natMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 2))
ciscoL2natMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 1, 1)).setObjects(("CISCO-L2NAT-MIB", "cl2natGlobalStatisticsGroup"), ("CISCO-L2NAT-MIB", "cl2natInstanceConfigGroup"), ("CISCO-L2NAT-MIB", "cl2natInstanceStatisticsGroup"), ("CISCO-L2NAT-MIB", "cl2natInstanceTranslationStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL2natMIBCompliance = ciscoL2natMIBCompliance.setStatus('current')
cl2natGlobalStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 2, 1)).setObjects(("CISCO-L2NAT-MIB", "cl2natTotalInstances"), ("CISCO-L2NAT-MIB", "cl2natTotalMatched"), ("CISCO-L2NAT-MIB", "cl2natTotalUnmatched"), ("CISCO-L2NAT-MIB", "cl2natTotalFixups"), ("CISCO-L2NAT-MIB", "cl2natTotalTranslationEntryConfigured"), ("CISCO-L2NAT-MIB", "cl2natTotalPacketTranslated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cl2natGlobalStatisticsGroup = cl2natGlobalStatisticsGroup.setStatus('current')
cl2natInstanceConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 2, 2)).setObjects(("CISCO-L2NAT-MIB", "cl2natInstConfigPermitIn"), ("CISCO-L2NAT-MIB", "cl2natInstConfigPermitOut"), ("CISCO-L2NAT-MIB", "cl2natInstConfigFixup"), ("CISCO-L2NAT-MIB", "cl2natInstIpRange"), ("CISCO-L2NAT-MIB", "cl2natInstIpToIpAddress"), ("CISCO-L2NAT-MIB", "cl2natInstIpToIpAddressType"), ("CISCO-L2NAT-MIB", "cl2natInstConfigInstanceRowStatus"), ("CISCO-L2NAT-MIB", "cl2natInterfaceConfigRowStatus"), ("CISCO-L2NAT-MIB", "cl2natInstIpAddressMask"), ("CISCO-L2NAT-MIB", "cl2natInterfaceConfigInstanceName"), ("CISCO-L2NAT-MIB", "cl2natInstIpRowStatus"), ("CISCO-L2NAT-MIB", "cl2natInstConfigStorageType"), ("CISCO-L2NAT-MIB", "cl2natInstStorageIpStorageType"), ("CISCO-L2NAT-MIB", "cl2natInterfaceConfigStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cl2natInstanceConfigGroup = cl2natInstanceConfigGroup.setStatus('current')
cl2natInstanceStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 2, 3)).setObjects(("CISCO-L2NAT-MIB", "cl2natUnmatchedIn"), ("CISCO-L2NAT-MIB", "cl2natDroppedUnicastIn"), ("CISCO-L2NAT-MIB", "cl2natTranslatedUnicastIn"), ("CISCO-L2NAT-MIB", "cl2natFixupArpIn"), ("CISCO-L2NAT-MIB", "cl2natFixupIcmpIn"), ("CISCO-L2NAT-MIB", "cl2natFixupCipIn"), ("CISCO-L2NAT-MIB", "cl2natFixupProfinetIn"), ("CISCO-L2NAT-MIB", "cl2natFixupFtpIn"), ("CISCO-L2NAT-MIB", "cl2natFixupSnmpIn"), ("CISCO-L2NAT-MIB", "cl2natFixupSipIn"), ("CISCO-L2NAT-MIB", "cl2natFixupSccpIn"), ("CISCO-L2NAT-MIB", "cl2natUnmatchedOut"), ("CISCO-L2NAT-MIB", "cl2natDroppedUnicastOut"), ("CISCO-L2NAT-MIB", "cl2natTranslatedUnicastOut"), ("CISCO-L2NAT-MIB", "cl2natFixupArpOut"), ("CISCO-L2NAT-MIB", "cl2natFixupIcmpOut"), ("CISCO-L2NAT-MIB", "cl2natFixupCipOut"), ("CISCO-L2NAT-MIB", "cl2natFixupProfinetOut"), ("CISCO-L2NAT-MIB", "cl2natFixupFtpOut"), ("CISCO-L2NAT-MIB", "cl2natFixupSnmpOut"), ("CISCO-L2NAT-MIB", "cl2natFixupSipOut"), ("CISCO-L2NAT-MIB", "cl2natFixupSccpOut"), ("CISCO-L2NAT-MIB", "cl2natPassThruUnicastIn"), ("CISCO-L2NAT-MIB", "cl2natPassThruUnicastOut"), ("CISCO-L2NAT-MIB", "cl2natDroppedMulticastIn"), ("CISCO-L2NAT-MIB", "cl2natDroppedMulticastOut"), ("CISCO-L2NAT-MIB", "cl2natPassThruMulticastIn"), ("CISCO-L2NAT-MIB", "cl2natPassThruMulticastOut"), ("CISCO-L2NAT-MIB", "cl2natDroppedIgmpIn"), ("CISCO-L2NAT-MIB", "cl2natDroppedIgmpOut"), ("CISCO-L2NAT-MIB", "cl2natPassThruIgmpIn"), ("CISCO-L2NAT-MIB", "cl2natPassThruIgmpOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cl2natInstanceStatisticsGroup = cl2natInstanceStatisticsGroup.setStatus('current')
cl2natInstanceTranslationStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 806, 3, 2, 4)).setObjects(("CISCO-L2NAT-MIB", "cl2natTranslatesIn"), ("CISCO-L2NAT-MIB", "cl2natTranslatesOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cl2natInstanceTranslationStatisticsGroup = cl2natInstanceTranslationStatisticsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-L2NAT-MIB", cl2natTotalFixups=cl2natTotalFixups, cl2natInterfaceConfigVlanIndex=cl2natInterfaceConfigVlanIndex, ciscoL2natMIBObjects=ciscoL2natMIBObjects, cl2natFixupCipOut=cl2natFixupCipOut, cl2natInstConfigStorageType=cl2natInstConfigStorageType, cl2natPassThruMulticastOut=cl2natPassThruMulticastOut, cl2natUnmatchedOut=cl2natUnmatchedOut, ciscoL2natMIBGroups=ciscoL2natMIBGroups, cl2natInstIpRange=cl2natInstIpRange, cl2natInterfaceIpStatisticsEntry=cl2natInterfaceIpStatisticsEntry, cl2natInstanceConfigGroup=cl2natInstanceConfigGroup, cl2natInstIpInstanceIpTable=cl2natInstIpInstanceIpTable, cl2natInstIpToIpAddress=cl2natInstIpToIpAddress, cl2natInstanceStatisticsGroup=cl2natInstanceStatisticsGroup, cl2natDroppedMulticastIn=cl2natDroppedMulticastIn, cl2natInstConfigInstanceRowStatus=cl2natInstConfigInstanceRowStatus, cl2natInterfaceStatisticsEntry=cl2natInterfaceStatisticsEntry, cl2natInterfaceConfigStorageType=cl2natInterfaceConfigStorageType, cl2natDroppedIgmpIn=cl2natDroppedIgmpIn, cl2natUnmatchedIn=cl2natUnmatchedIn, cl2natTranslatesOut=cl2natTranslatesOut, cl2natFixupSnmpIn=cl2natFixupSnmpIn, ciscoL2natMIBCompliance=ciscoL2natMIBCompliance, cl2natInstConfigPermitOut=cl2natInstConfigPermitOut, ciscoL2natMIBConformance=ciscoL2natMIBConformance, cl2natPassThruIgmpOut=cl2natPassThruIgmpOut, cl2natInstIpFromIpAddressType=cl2natInstIpFromIpAddressType, cl2natFixupSipIn=cl2natFixupSipIn, cl2natInstConfigPermitIn=cl2natInstConfigPermitIn, cl2natInstIpAddressMask=cl2natInstIpAddressMask, cl2natInstIpDirection=cl2natInstIpDirection, cl2natInstIpAddressType=cl2natInstIpAddressType, cl2natTranslatedUnicastOut=cl2natTranslatedUnicastOut, cl2natGlobalStatisticsGroup=cl2natGlobalStatisticsGroup, cl2natInstConfigInstanceEntry=cl2natInstConfigInstanceEntry, cl2natInterfaceConfigInstanceName=cl2natInterfaceConfigInstanceName, cl2natDroppedMulticastOut=cl2natDroppedMulticastOut, cl2natInstIpFromIpAddress=cl2natInstIpFromIpAddress, cl2natTranslatesIn=cl2natTranslatesIn, cl2natFixupFtpIn=cl2natFixupFtpIn, cl2natFixupProfinetOut=cl2natFixupProfinetOut, cl2natInstIpRowStatus=cl2natInstIpRowStatus, cl2natTranslatedUnicastIn=cl2natTranslatedUnicastIn, cl2natInterfaceIpStatisticsTable=cl2natInterfaceIpStatisticsTable, cl2natFixupIcmpIn=cl2natFixupIcmpIn, cl2natInstanceTranslationStatisticsGroup=cl2natInstanceTranslationStatisticsGroup, cl2natInstStorageIpStorageType=cl2natInstStorageIpStorageType, cl2natFixupSnmpOut=cl2natFixupSnmpOut, cl2natPassThruUnicastOut=cl2natPassThruUnicastOut, cl2natFixupProfinetIn=cl2natFixupProfinetIn, ciscoL2natMIBCompliances=ciscoL2natMIBCompliances, cl2natPassThruUnicastIn=cl2natPassThruUnicastIn, cl2natTotalMatched=cl2natTotalMatched, cl2natFixupIcmpOut=cl2natFixupIcmpOut, cl2natFixupSipOut=cl2natFixupSipOut, cl2natTotalUnmatched=cl2natTotalUnmatched, cl2natInstIpToIpAddressType=cl2natInstIpToIpAddressType, cl2natTotalInstances=cl2natTotalInstances, cl2natTotalTranslationEntryConfigured=cl2natTotalTranslationEntryConfigured, cl2natDroppedIgmpOut=cl2natDroppedIgmpOut, cl2natPassThruIgmpIn=cl2natPassThruIgmpIn, cl2natPassThruMulticastIn=cl2natPassThruMulticastIn, cl2natFixupSccpIn=cl2natFixupSccpIn, cl2natInstConfigInstanceName=cl2natInstConfigInstanceName, cl2natInterfaceConfigIfIndex=cl2natInterfaceConfigIfIndex, cl2natFixupFtpOut=cl2natFixupFtpOut, cl2natInstConfigInstanceTable=cl2natInstConfigInstanceTable, cl2natInstIpInstanceIpEntry=cl2natInstIpInstanceIpEntry, cl2natDroppedUnicastOut=cl2natDroppedUnicastOut, cl2natInterfaceConfigTable=cl2natInterfaceConfigTable, cl2natFixupSccpOut=cl2natFixupSccpOut, cl2natFixupArpIn=cl2natFixupArpIn, PYSNMP_MODULE_ID=ciscoL2natMIB, cl2natDroppedUnicastIn=cl2natDroppedUnicastIn, cl2natInterfaceStatisticsTable=cl2natInterfaceStatisticsTable, cl2natTotalPacketTranslated=cl2natTotalPacketTranslated, ciscoL2natMIB=ciscoL2natMIB, cl2natFixupCipIn=cl2natFixupCipIn, cl2natFixupArpOut=cl2natFixupArpOut, cl2natInstConfigFixup=cl2natInstConfigFixup, cl2natInterfaceConfigRowStatus=cl2natInterfaceConfigRowStatus, cl2natInterfaceConfigEntry=cl2natInterfaceConfigEntry)
