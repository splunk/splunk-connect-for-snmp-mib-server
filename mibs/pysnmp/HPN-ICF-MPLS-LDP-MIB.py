#
# PySNMP MIB module HPN-ICF-MPLS-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPLS-LDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hpnicfMpls, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfMpls")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, TimeTicks, Gauge32, IpAddress, Counter64, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, Integer32, Counter32, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "Gauge32", "IpAddress", "Counter64", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "Integer32", "Counter32", "ModuleIdentity", "ObjectIdentity")
DisplayString, TruthValue, RowStatus, TimeInterval, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "RowStatus", "TimeInterval", "TextualConvention")
hpnicfMplsLdp = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2))
hpnicfMplsLdp.setRevisions(('1996-11-08 21:55',))
if mibBuilder.loadTexts: hpnicfMplsLdp.setLastUpdated('9906301200Z')
if mibBuilder.loadTexts: hpnicfMplsLdp.setOrganization('')
class DisplayString(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class PhysAddress(OctetString):
    pass

class BitRate(Integer32):
    pass

class BurstSize(Integer32):
    pass

class MplsLsrIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class MplsLdpGenAddr(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class MplsLdpIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class AtmVpIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 4095)

class AtmVcIdentifier(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class AddressFamilyNumbers(TextualConvention, Integer32):
    reference = 'RFC 1700 Assigned Numbers, Reynolds and Postel, Oct. 1994'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("other", 0), ("ipv4", 1), ("ipv6", 2), ("nsap", 3), ("hdlc", 4), ("bbn1822", 5), ("ieee802", 6), ("e163", 7), ("e164", 8), ("f69", 9), ("x121", 10), ("ipx", 11), ("appleTalk", 12), ("decnetIV", 13), ("banyanVines", 14), ("e164WithNsap", 15))

class MplsLabel(TextualConvention, Integer32):
    reference = '1. MPLS Label Stack Encoding, Rosen et al, draft- ietf-mpls-label-encaps-04.txt, April 1999. 2. Use of Label Switching on Frame Relay Networks, Conta et al, draft-ietf-mpls-fr-03.txt, Nov. 1998.'
    status = 'current'

class MplsTunnelIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

hpnicfMplsLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1))
hpnicfMplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2))
hpnicfMplsLdpLsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1))
hpnicfMplsLdpEntityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2))
hpnicfMplsLdpPeerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3))
hpnicfMplsLdpSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4))
hpnicfMplsLdpHelloAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 5))
hpnicfMplsLdpCrlspTnlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6))
hpnicfMplsLdpLsrIncarnTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfMplsLdpLsrIncarnTable.setStatus('current')
hpnicfMplsLdpLsrIncarnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hpnicfMplsLdpLsrIncarnEntry.setStatus('current')
hpnicfMplsLdpLsrID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 1), MplsLsrIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrID.setStatus('current')
hpnicfMplsLdpLsrLoopDetectionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrLoopDetectionPresent.setStatus('current')
hpnicfMplsLdpLsrLoopDetectionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrLoopDetectionAdminStatus.setStatus('current')
hpnicfMplsLdpLsrPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 4), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrPathVectorLimit.setStatus('current')
hpnicfMplsLdpLsrHopCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 5), Integer32().clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrHopCountLimit.setStatus('current')
hpnicfMplsLdpLsrLoopPreventionPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrLoopPreventionPresent.setStatus('current')
hpnicfMplsLdpLsrLoopPreventionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrLoopPreventionAdminStatus.setStatus('current')
hpnicfMplsLdpLsrLabelRetentionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conservative", 1), ("liberal", 2))).clone('conservative')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrLabelRetentionMode.setStatus('current')
hpnicfMplsLdpLsrIncarnID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrIncarnID.setStatus('current')
hpnicfMplsLdpLsrMaxLdpEntities = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxLdpEntities.setStatus('current')
hpnicfMplsLdpLsrMaxLocalPeers = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxLocalPeers.setStatus('current')
hpnicfMplsLdpLsrMaxRemotePeers = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxRemotePeers.setStatus('current')
hpnicfMplsLdpLsrMaxIfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxIfaces.setStatus('current')
hpnicfMplsLdpLsrMaxLsps = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxLsps.setStatus('current')
hpnicfMplsLdpLsrMaxCrlspTnls = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxCrlspTnls.setStatus('current')
hpnicfMplsLdpLsrMaxErhopPerCrlspTnl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxErhopPerCrlspTnl.setStatus('current')
hpnicfMplsLdpLsrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrRowStatus.setStatus('current')
hpnicfMplsLdpLsrMaxVcmCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrMaxVcmCapability.setStatus('current')
hpnicfMplsLdpLsrVcmPathVecInAllLblMapPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrVcmPathVecInAllLblMapPresent.setStatus('current')
hpnicfMplsLdpLsrRequestRetrytimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrRequestRetrytimerValue.setStatus('current')
hpnicfMplsLdpLsrNumOfRequestRetryAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 1, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsLdpLsrNumOfRequestRetryAttempts.setStatus('current')
hpnicfMplsLdpEntityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfMplsLdpEntityTable.setStatus('current')
hpnicfMplsLdpEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpEntityEntry.setStatus('current')
hpnicfMplsLdpEntityID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 1), MplsLdpIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityID.setStatus('current')
hpnicfMplsLdpEntityLabelSpaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("perInterface", 2), ("perPlatform", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityLabelSpaceType.setStatus('current')
hpnicfMplsLdpEntityDefVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityDefVpi.setStatus('current')
hpnicfMplsLdpEntityDefVci = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 4), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityDefVci.setStatus('current')
hpnicfMplsLdpEntityUnlabTrafVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 5), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityUnlabTrafVpi.setStatus('current')
hpnicfMplsLdpEntityUnlabTrafVci = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 6), AtmVcIdentifier().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityUnlabTrafVci.setStatus('current')
hpnicfMplsLdpEntityMergeCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noMerge", 0), ("vpMerge", 1), ("vcMerge", 2), ("vpVcMerge", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityMergeCapability.setStatus('current')
hpnicfMplsLdpEntityVcDirectionality = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bidirectional", 1), ("unidirectional", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityVcDirectionality.setStatus('current')
hpnicfMplsLdpEntityWellKnownDiscoveryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityWellKnownDiscoveryPort.setStatus('current')
hpnicfMplsLdpEntityMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityMtu.setStatus('current')
hpnicfMplsLdpEntityKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityKeepAliveHoldTimer.setStatus('current')
hpnicfMplsLdpEntityFailedInitSessionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityFailedInitSessionThreshold.setStatus('current')
hpnicfMplsLdpEntityLabelDistributionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityLabelDistributionMethod.setStatus('current')
hpnicfMplsLdpEntityLabelAllocationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ordered", 1), ("independent", 2))).clone('ordered')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityLabelAllocationMethod.setStatus('current')
hpnicfMplsLdpEntityHelloHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityHelloHoldTimer.setStatus('current')
hpnicfMplsLdpEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityRowStatus.setStatus('current')
hpnicfMplsLdpEntityIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfMplsLdpEntityIfTable.setStatus('current')
hpnicfMplsLdpEntityIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpEntityIfEntry.setStatus('current')
hpnicfMplsLdpEntityIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsLdpEntityIfIndex.setStatus('current')
hpnicfMplsLdpEntityIfIpv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityIfIpv4Address.setStatus('current')
hpnicfMplsLdpEntityIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityIfRowStatus.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3), )
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeTable.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVPI"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVCI"))
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeEntry.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVPI.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVCI.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVPI.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3, 1, 4), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVCI.setStatus('current')
hpnicfMplsLdpEntityConfAtmLabelRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpEntityConfAtmLabelRangeRowStatus.setStatus('current')
hpnicfMplsLdpEntityStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 4), )
if mibBuilder.loadTexts: hpnicfMplsLdpEntityStatsTable.setStatus('current')
hpnicfMplsLdpEntityStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 4, 1), )
hpnicfMplsLdpEntityEntry.registerAugmentions(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityStatsEntry"))
hpnicfMplsLdpEntityStatsEntry.setIndexNames(*hpnicfMplsLdpEntityEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfMplsLdpEntityStatsEntry.setStatus('current')
hpnicfMplsLdpAttemptedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpAttemptedSessions.setStatus('current')
hpnicfMplsLdpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfMplsLdpPeerTable.setStatus('current')
hpnicfMplsLdpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpPeerIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpPeerEntry.setStatus('current')
hpnicfMplsLdpPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsLdpPeerIndex.setStatus('current')
hpnicfMplsLdpPeerID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 2), MplsLdpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerID.setStatus('current')
hpnicfMplsLdpPeerInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 3), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerInternetworkAddrType.setStatus('current')
hpnicfMplsLdpPeerInternetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 4), MplsLdpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerInternetworkAddr.setStatus('current')
hpnicfMplsLdpPeerDefaultMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(9180)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerDefaultMtu.setStatus('current')
hpnicfMplsLdpPeerKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerKeepAliveHoldTimer.setStatus('current')
hpnicfMplsLdpPeerLabelDistributionMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerLabelDistributionMethod.setStatus('current')
hpnicfMplsLdpPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerType.setStatus('current')
hpnicfMplsLdpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerRowStatus.setStatus('current')
hpnicfMplsLdpPeerConfAtmLabelRangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 2), )
if mibBuilder.loadTexts: hpnicfMplsLdpPeerConfAtmLabelRangeTable.setStatus('current')
hpnicfMplsLdpPeerConfAtmLabelRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpPeerIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVPI"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVCI"))
if mibBuilder.loadTexts: hpnicfMplsLdpPeerConfAtmLabelRangeEntry.setStatus('current')
hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 2, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVPI.setStatus('current')
hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 2, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVCI.setStatus('current')
hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 2, 1, 3), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVPI.setStatus('current')
hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 3, 2, 1, 4), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVCI.setStatus('current')
hpnicfMplsLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1), )
if mibBuilder.loadTexts: hpnicfMplsLdpSessionTable.setStatus('current')
hpnicfMplsLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpPeerIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpSessionIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpSessionEntry.setStatus('current')
hpnicfMplsLdpSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsLdpSessionIndex.setStatus('current')
hpnicfMplsLdpSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 2), MplsLdpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionID.setStatus('current')
hpnicfMplsLdpSessionProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionProtocolVersion.setStatus('current')
hpnicfMplsLdpSessionKeepAliveHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 4), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionKeepAliveHoldTimeRemaining.setStatus('current')
hpnicfMplsLdpSessionRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionRole.setStatus('current')
hpnicfMplsLdpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionState.setStatus('current')
hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 7), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVPI.setStatus('current')
hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 8), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVCI.setStatus('current')
hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 9), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVPI.setStatus('current')
hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 4, 1, 1, 10), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVCI.setStatus('current')
hpnicfMplsLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 5, 1), )
if mibBuilder.loadTexts: hpnicfMplsLdpHelloAdjacencyTable.setStatus('current')
hpnicfMplsLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 5, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityIfIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpPeerIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpSessionIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpHelloAdjacencyEntry.setStatus('current')
hpnicfMplsLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfMplsLdpHelloAdjacencyIndex.setStatus('current')
hpnicfMplsLdpHelloAdjacencyHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 5, 1, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsLdpHelloAdjacencyHoldTimeRemaining.setStatus('current')
hpnicfMplsLdpCrlspTnlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1), )
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlTable.setStatus('current')
hpnicfMplsLdpCrlspTnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlEntry.setStatus('current')
hpnicfMplsLdpCrlspTnlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 1), MplsTunnelIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlIndex.setStatus('current')
hpnicfMplsLdpCrlspTnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlName.setStatus('current')
hpnicfMplsLdpCrlspTnlDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("in", 1), ("out", 2), ("inOut", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlDirection.setStatus('current')
hpnicfMplsLdpCrlspTnlSignallingProto = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("ldp", 2), ("rsvp", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlSignallingProto.setStatus('current')
hpnicfMplsLdpCrlspTnlSetupPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlSetupPrio.setStatus('current')
hpnicfMplsLdpCrlspTnlHoldingPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlHoldingPrio.setStatus('current')
hpnicfMplsLdpCrlspTnlPeakDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 7), BitRate()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlPeakDataRate.setStatus('current')
hpnicfMplsLdpCrlspTnlPeakBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 8), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlPeakBurstSize.setStatus('current')
hpnicfMplsLdpCrlspTnlCommittedDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 9), BitRate()).setUnits('bits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlCommittedDataRate.setStatus('current')
hpnicfMplsLdpCrlspTnlCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 10), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlCommittedBurstSize.setStatus('current')
hpnicfMplsLdpCrlspTnlExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 11), BurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlExcessBurstSize.setStatus('current')
hpnicfMplsLdpCrlspTnlIsPinned = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlIsPinned.setStatus('current')
hpnicfMplsLdpCrlspTnlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlFrequency.setStatus('current')
hpnicfMplsLdpCrlspTnlWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlWeight.setStatus('current')
hpnicfMplsLdpCrlspTnlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTnlRowStatus.setStatus('current')
hpnicfMplsLdpCrlspErHopTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2), )
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopTable.setStatus('current')
hpnicfMplsLdpCrlspErHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpCrlspTnlIndex"), (0, "HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpCrlspErHopIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopEntry.setStatus('current')
hpnicfMplsLdpCrlspErHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopIndex.setStatus('current')
hpnicfMplsLdpCrlspErHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ipV4", 1))).clone('ipV4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopAddrType.setStatus('current')
hpnicfMplsLdpCrlspErHopIpv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopIpv4Addr.setStatus('current')
hpnicfMplsLdpCrlspErHopIpv4PrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopIpv4PrefixLen.setStatus('current')
hpnicfMplsLdpCrlspErHopStrictOrLoose = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strict", 1), ("loose", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopStrictOrLoose.setStatus('current')
hpnicfMplsLdpCrlspErHopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 1, 6, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspErHopRowStatus.setStatus('current')
hpnicfMplsLdpNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0))
hpnicfMplsLdpFailedInitSessionThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 1)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityFailedInitSessionThreshold"))
if mibBuilder.loadTexts: hpnicfMplsLdpFailedInitSessionThresholdExceeded.setStatus('current')
hpnicfMplsLdpCrlspTunnelUp = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 2)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTunnelUp.setStatus('current')
hpnicfMplsLdpCrlspTunnelDown = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 3)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTunnelDown.setStatus('current')
hpnicfMplsLdpCrlspTunnelSetupFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 4)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpCrlspTnlIndex"))
if mibBuilder.loadTexts: hpnicfMplsLdpCrlspTunnelSetupFailure.setStatus('current')
hpnicfMplsLdpIncarnUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 11)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hpnicfMplsLdpIncarnUpEventFailure.setStatus('current')
hpnicfMplsLdpIncarnDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 12)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"))
if mibBuilder.loadTexts: hpnicfMplsLdpIncarnDownEventFailure.setStatus('current')
hpnicfMplsLdpEntityUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 13)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityID"))
if mibBuilder.loadTexts: hpnicfMplsLdpEntityUpEventFailure.setStatus('current')
hpnicfMplsLdpEntityDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 14)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpLsrIncarnID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpEntityID"))
if mibBuilder.loadTexts: hpnicfMplsLdpEntityDownEventFailure.setStatus('current')
hpnicfMplsLdpSessionUpEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 15)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpSessionID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpSessionState"))
if mibBuilder.loadTexts: hpnicfMplsLdpSessionUpEventFailure.setStatus('current')
hpnicfMplsLdpSessionDownEventFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 2, 2, 0, 16)).setObjects(("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpSessionID"), ("HPN-ICF-MPLS-LDP-MIB", "hpnicfMplsLdpSessionState"))
if mibBuilder.loadTexts: hpnicfMplsLdpSessionDownEventFailure.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MPLS-LDP-MIB", hpnicfMplsLdpCrlspTnlCommittedDataRate=hpnicfMplsLdpCrlspTnlCommittedDataRate, hpnicfMplsLdpLsrLoopPreventionPresent=hpnicfMplsLdpLsrLoopPreventionPresent, hpnicfMplsLdpCrlspTunnelSetupFailure=hpnicfMplsLdpCrlspTunnelSetupFailure, hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVPI=hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVPI, hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVPI=hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVPI, hpnicfMplsLdpEntityObjects=hpnicfMplsLdpEntityObjects, hpnicfMplsLdpLsrObjects=hpnicfMplsLdpLsrObjects, hpnicfMplsLdpCrlspTnlIndex=hpnicfMplsLdpCrlspTnlIndex, hpnicfMplsLdpSessionDownEventFailure=hpnicfMplsLdpSessionDownEventFailure, hpnicfMplsLdpEntityEntry=hpnicfMplsLdpEntityEntry, hpnicfMplsLdpCrlspTnlPeakBurstSize=hpnicfMplsLdpCrlspTnlPeakBurstSize, hpnicfMplsLdpEntityMergeCapability=hpnicfMplsLdpEntityMergeCapability, hpnicfMplsLdpSessionObjects=hpnicfMplsLdpSessionObjects, hpnicfMplsLdpAttemptedSessions=hpnicfMplsLdpAttemptedSessions, hpnicfMplsLdpCrlspTnlObjects=hpnicfMplsLdpCrlspTnlObjects, hpnicfMplsLdpCrlspErHopIndex=hpnicfMplsLdpCrlspErHopIndex, hpnicfMplsLdpCrlspTnlSetupPrio=hpnicfMplsLdpCrlspTnlSetupPrio, hpnicfMplsLdpLsrLoopDetectionPresent=hpnicfMplsLdpLsrLoopDetectionPresent, hpnicfMplsLdpIncarnDownEventFailure=hpnicfMplsLdpIncarnDownEventFailure, hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVCI=hpnicfMplsLdpSessionAtmLabelRangeUpperBoundVCI, hpnicfMplsLdpHelloAdjacencyIndex=hpnicfMplsLdpHelloAdjacencyIndex, hpnicfMplsLdpCrlspTnlFrequency=hpnicfMplsLdpCrlspTnlFrequency, hpnicfMplsLdpEntityStatsEntry=hpnicfMplsLdpEntityStatsEntry, hpnicfMplsLdpLsrHopCountLimit=hpnicfMplsLdpLsrHopCountLimit, hpnicfMplsLdpEntityFailedInitSessionThreshold=hpnicfMplsLdpEntityFailedInitSessionThreshold, hpnicfMplsLdpFailedInitSessionThresholdExceeded=hpnicfMplsLdpFailedInitSessionThresholdExceeded, hpnicfMplsLdp=hpnicfMplsLdp, hpnicfMplsLdpCrlspTnlName=hpnicfMplsLdpCrlspTnlName, hpnicfMplsLdpPeerKeepAliveHoldTimer=hpnicfMplsLdpPeerKeepAliveHoldTimer, MplsTunnelIndex=MplsTunnelIndex, hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVCI=hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVCI, hpnicfMplsLdpCrlspErHopRowStatus=hpnicfMplsLdpCrlspErHopRowStatus, hpnicfMplsLdpLsrMaxErhopPerCrlspTnl=hpnicfMplsLdpLsrMaxErhopPerCrlspTnl, hpnicfMplsLdpNotifications=hpnicfMplsLdpNotifications, hpnicfMplsLdpLsrIncarnTable=hpnicfMplsLdpLsrIncarnTable, BurstSize=BurstSize, DisplayString=DisplayString, hpnicfMplsLdpPeerConfAtmLabelRangeTable=hpnicfMplsLdpPeerConfAtmLabelRangeTable, hpnicfMplsLdpEntityIfIndex=hpnicfMplsLdpEntityIfIndex, hpnicfMplsLdpLsrLoopDetectionAdminStatus=hpnicfMplsLdpLsrLoopDetectionAdminStatus, hpnicfMplsLdpLsrMaxLsps=hpnicfMplsLdpLsrMaxLsps, hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVCI=hpnicfMplsLdpEntityConfAtmLabelRangeUpperBoundVCI, hpnicfMplsLdpHelloAdjacencyTable=hpnicfMplsLdpHelloAdjacencyTable, hpnicfMplsLdpSessionUpEventFailure=hpnicfMplsLdpSessionUpEventFailure, PYSNMP_MODULE_ID=hpnicfMplsLdp, hpnicfMplsLdpLsrRequestRetrytimerValue=hpnicfMplsLdpLsrRequestRetrytimerValue, hpnicfMplsLdpEntityConfAtmLabelRangeEntry=hpnicfMplsLdpEntityConfAtmLabelRangeEntry, hpnicfMplsLdpLsrMaxVcmCapability=hpnicfMplsLdpLsrMaxVcmCapability, hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVCI=hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVCI, MplsLdpIdentifier=MplsLdpIdentifier, hpnicfMplsLdpCrlspTunnelUp=hpnicfMplsLdpCrlspTunnelUp, hpnicfMplsLdpEntityUnlabTrafVpi=hpnicfMplsLdpEntityUnlabTrafVpi, AddressFamilyNumbers=AddressFamilyNumbers, hpnicfMplsLdpSessionEntry=hpnicfMplsLdpSessionEntry, hpnicfMplsLdpEntityMtu=hpnicfMplsLdpEntityMtu, hpnicfMplsLdpLsrLoopPreventionAdminStatus=hpnicfMplsLdpLsrLoopPreventionAdminStatus, hpnicfMplsLdpEntityIfEntry=hpnicfMplsLdpEntityIfEntry, hpnicfMplsLdpLsrVcmPathVecInAllLblMapPresent=hpnicfMplsLdpLsrVcmPathVecInAllLblMapPresent, hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVCI=hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVCI, hpnicfMplsLdpLsrMaxIfaces=hpnicfMplsLdpLsrMaxIfaces, hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVPI=hpnicfMplsLdpEntityConfAtmLabelRangeLowerBoundVPI, hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVPI=hpnicfMplsLdpPeerConfAtmLabelRangeUpperBoundVPI, hpnicfMplsLdpSessionID=hpnicfMplsLdpSessionID, MplsLsrIdentifier=MplsLsrIdentifier, hpnicfMplsLdpEntityStatsTable=hpnicfMplsLdpEntityStatsTable, hpnicfMplsLdpSessionTable=hpnicfMplsLdpSessionTable, hpnicfMplsLdpHelloAdjacencyEntry=hpnicfMplsLdpHelloAdjacencyEntry, hpnicfMplsLdpCrlspTnlIsPinned=hpnicfMplsLdpCrlspTnlIsPinned, hpnicfMplsLdpCrlspTnlExcessBurstSize=hpnicfMplsLdpCrlspTnlExcessBurstSize, hpnicfMplsLdpEntityVcDirectionality=hpnicfMplsLdpEntityVcDirectionality, AtmVpIdentifier=AtmVpIdentifier, hpnicfMplsLdpCrlspErHopTable=hpnicfMplsLdpCrlspErHopTable, hpnicfMplsLdpObjects=hpnicfMplsLdpObjects, hpnicfMplsLdpEntityUnlabTrafVci=hpnicfMplsLdpEntityUnlabTrafVci, hpnicfMplsLdpCrlspTnlRowStatus=hpnicfMplsLdpCrlspTnlRowStatus, hpnicfMplsLdpCrlspTnlHoldingPrio=hpnicfMplsLdpCrlspTnlHoldingPrio, hpnicfMplsLdpIncarnUpEventFailure=hpnicfMplsLdpIncarnUpEventFailure, AtmVcIdentifier=AtmVcIdentifier, hpnicfMplsLdpEntityLabelAllocationMethod=hpnicfMplsLdpEntityLabelAllocationMethod, hpnicfMplsLdpCrlspTnlPeakDataRate=hpnicfMplsLdpCrlspTnlPeakDataRate, hpnicfMplsLdpCrlspErHopEntry=hpnicfMplsLdpCrlspErHopEntry, hpnicfMplsLdpCrlspErHopStrictOrLoose=hpnicfMplsLdpCrlspErHopStrictOrLoose, hpnicfMplsLdpPeerObjects=hpnicfMplsLdpPeerObjects, hpnicfMplsLdpEntityConfAtmLabelRangeTable=hpnicfMplsLdpEntityConfAtmLabelRangeTable, hpnicfMplsLdpEntityKeepAliveHoldTimer=hpnicfMplsLdpEntityKeepAliveHoldTimer, hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVPI=hpnicfMplsLdpPeerConfAtmLabelRangeLowerBoundVPI, hpnicfMplsLdpLsrRowStatus=hpnicfMplsLdpLsrRowStatus, hpnicfMplsLdpLsrLabelRetentionMode=hpnicfMplsLdpLsrLabelRetentionMode, hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVCI=hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVCI, hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVPI=hpnicfMplsLdpSessionAtmLabelRangeLowerBoundVPI, BitRate=BitRate, hpnicfMplsLdpEntityWellKnownDiscoveryPort=hpnicfMplsLdpEntityWellKnownDiscoveryPort, PhysAddress=PhysAddress, hpnicfMplsLdpEntityHelloHoldTimer=hpnicfMplsLdpEntityHelloHoldTimer, hpnicfMplsLdpSessionIndex=hpnicfMplsLdpSessionIndex, hpnicfMplsLdpCrlspErHopAddrType=hpnicfMplsLdpCrlspErHopAddrType, hpnicfMplsLdpSessionState=hpnicfMplsLdpSessionState, hpnicfMplsLdpEntityLabelDistributionMethod=hpnicfMplsLdpEntityLabelDistributionMethod, hpnicfMplsLdpPeerRowStatus=hpnicfMplsLdpPeerRowStatus, hpnicfMplsLdpLsrPathVectorLimit=hpnicfMplsLdpLsrPathVectorLimit, hpnicfMplsLdpPeerLabelDistributionMethod=hpnicfMplsLdpPeerLabelDistributionMethod, hpnicfMplsLdpLsrID=hpnicfMplsLdpLsrID, hpnicfMplsLdpLsrNumOfRequestRetryAttempts=hpnicfMplsLdpLsrNumOfRequestRetryAttempts, hpnicfMplsLdpPeerConfAtmLabelRangeEntry=hpnicfMplsLdpPeerConfAtmLabelRangeEntry, hpnicfMplsLdpCrlspTnlTable=hpnicfMplsLdpCrlspTnlTable, hpnicfMplsLdpCrlspTnlDirection=hpnicfMplsLdpCrlspTnlDirection, hpnicfMplsLdpCrlspTnlEntry=hpnicfMplsLdpCrlspTnlEntry, hpnicfMplsLdpEntityDefVci=hpnicfMplsLdpEntityDefVci, hpnicfMplsLdpEntityLabelSpaceType=hpnicfMplsLdpEntityLabelSpaceType, hpnicfMplsLdpLsrMaxLdpEntities=hpnicfMplsLdpLsrMaxLdpEntities, hpnicfMplsLdpEntityConfAtmLabelRangeRowStatus=hpnicfMplsLdpEntityConfAtmLabelRangeRowStatus, hpnicfMplsLdpEntityRowStatus=hpnicfMplsLdpEntityRowStatus, hpnicfMplsLdpEntityIfRowStatus=hpnicfMplsLdpEntityIfRowStatus, hpnicfMplsLdpPeerInternetworkAddrType=hpnicfMplsLdpPeerInternetworkAddrType, hpnicfMplsLdpPeerIndex=hpnicfMplsLdpPeerIndex, hpnicfMplsLdpLsrMaxRemotePeers=hpnicfMplsLdpLsrMaxRemotePeers, hpnicfMplsLdpSessionProtocolVersion=hpnicfMplsLdpSessionProtocolVersion, hpnicfMplsLdpEntityIfIpv4Address=hpnicfMplsLdpEntityIfIpv4Address, hpnicfMplsLdpEntityIfTable=hpnicfMplsLdpEntityIfTable, hpnicfMplsLdpSessionRole=hpnicfMplsLdpSessionRole, hpnicfMplsLdpCrlspErHopIpv4Addr=hpnicfMplsLdpCrlspErHopIpv4Addr, hpnicfMplsLdpHelloAdjacencyHoldTimeRemaining=hpnicfMplsLdpHelloAdjacencyHoldTimeRemaining, hpnicfMplsLdpEntityID=hpnicfMplsLdpEntityID, hpnicfMplsLdpEntityUpEventFailure=hpnicfMplsLdpEntityUpEventFailure, hpnicfMplsLdpCrlspTnlWeight=hpnicfMplsLdpCrlspTnlWeight, hpnicfMplsLdpLsrMaxLocalPeers=hpnicfMplsLdpLsrMaxLocalPeers, hpnicfMplsLdpCrlspTunnelDown=hpnicfMplsLdpCrlspTunnelDown, hpnicfMplsLdpLsrMaxCrlspTnls=hpnicfMplsLdpLsrMaxCrlspTnls, hpnicfMplsLdpCrlspErHopIpv4PrefixLen=hpnicfMplsLdpCrlspErHopIpv4PrefixLen, hpnicfMplsLdpPeerDefaultMtu=hpnicfMplsLdpPeerDefaultMtu, hpnicfMplsLdpCrlspTnlCommittedBurstSize=hpnicfMplsLdpCrlspTnlCommittedBurstSize, hpnicfMplsLdpHelloAdjacencyObjects=hpnicfMplsLdpHelloAdjacencyObjects, hpnicfMplsLdpLsrIncarnEntry=hpnicfMplsLdpLsrIncarnEntry, hpnicfMplsLdpEntityDownEventFailure=hpnicfMplsLdpEntityDownEventFailure, hpnicfMplsLdpPeerTable=hpnicfMplsLdpPeerTable, hpnicfMplsLdpNotificationPrefix=hpnicfMplsLdpNotificationPrefix, hpnicfMplsLdpPeerInternetworkAddr=hpnicfMplsLdpPeerInternetworkAddr, MplsLabel=MplsLabel, MplsLdpGenAddr=MplsLdpGenAddr, hpnicfMplsLdpCrlspTnlSignallingProto=hpnicfMplsLdpCrlspTnlSignallingProto, hpnicfMplsLdpLsrIncarnID=hpnicfMplsLdpLsrIncarnID, hpnicfMplsLdpEntityDefVpi=hpnicfMplsLdpEntityDefVpi, hpnicfMplsLdpPeerType=hpnicfMplsLdpPeerType, hpnicfMplsLdpEntityTable=hpnicfMplsLdpEntityTable, hpnicfMplsLdpPeerID=hpnicfMplsLdpPeerID, hpnicfMplsLdpSessionKeepAliveHoldTimeRemaining=hpnicfMplsLdpSessionKeepAliveHoldTimeRemaining, hpnicfMplsLdpPeerEntry=hpnicfMplsLdpPeerEntry)
