#
# PySNMP MIB module HUAWEI-WLAN-DEVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-WLAN-DEVICE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:38:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hwWlan, = mibBuilder.importSymbols("HUAWEI-WLAN-MIB", "hwWlan")
hwStaWirelessStatTxRate, hwStaRecvDropFrames, hwWlanServiceStaOnlineTime, hwStaReSendFrames, hwWlanServiceStaEssName, hwStaWirelessStatTxPkts, hwStaVlan, hwStaSendDropFrames, hwStaWirelessStatTxBytes, hwStaWirelessStatRxBytes, hwStaReSendBytes, hwWlanServiceStaRxPowerUs, hwStaUsername, hwStaSendErrorFrames, hwWlanServiceStaRadioId, hwWlanServiceStaSnrUs, hwWlanServiceStaSsid, hwWlanServiceStaMac, hwStaIp, hwStaRecvErrorFrames, hwStaAccessChannel, hwStaNoise, hwWlanServiceStaApId, hwStaWirelessStatRxRate, hwStaWirelessStatRxPkts, hwStaRssi = mibBuilder.importSymbols("HUAWEI-WLAN-SERVICE-MIB", "hwStaWirelessStatTxRate", "hwStaRecvDropFrames", "hwWlanServiceStaOnlineTime", "hwStaReSendFrames", "hwWlanServiceStaEssName", "hwStaWirelessStatTxPkts", "hwStaVlan", "hwStaSendDropFrames", "hwStaWirelessStatTxBytes", "hwStaWirelessStatRxBytes", "hwStaReSendBytes", "hwWlanServiceStaRxPowerUs", "hwStaUsername", "hwStaSendErrorFrames", "hwWlanServiceStaRadioId", "hwWlanServiceStaSnrUs", "hwWlanServiceStaSsid", "hwWlanServiceStaMac", "hwStaIp", "hwStaRecvErrorFrames", "hwStaAccessChannel", "hwStaNoise", "hwWlanServiceStaApId", "hwStaWirelessStatRxRate", "hwStaWirelessStatRxPkts", "hwStaRssi")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Counter64, IpAddress, Counter32, Integer32, Bits, MibIdentifier, NotificationType, ObjectIdentity, Unsigned32, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Counter64", "IpAddress", "Counter32", "Integer32", "Bits", "MibIdentifier", "NotificationType", "ObjectIdentity", "Unsigned32", "Gauge32", "ModuleIdentity")
MacAddress, DateAndTime, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DateAndTime", "TextualConvention", "RowStatus", "DisplayString")
hwWlanDevice = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2))
hwWlanDevice.setRevisions(('2015-06-18 20:10', '2015-01-20 20:10', '2014-12-16 10:10', '2014-11-20 09:10', '2014-09-01 09:45', '2014-07-03 15:51', '2014-06-16 15:31', '2014-06-04 11:51', '2014-04-24 20:18', '2014-03-21 16:28', '2013-12-04 09:56', '2013-10-26 10:56', '2013-09-02 00:00', '2010-11-04 00:00', '2010-09-10 00:00', '2010-08-13 00:00', '2010-07-07 00:00', '2010-05-25 10:01',))
if mibBuilder.loadTexts: hwWlanDevice.setLastUpdated('201506182010Z')
if mibBuilder.loadTexts: hwWlanDevice.setOrganization('Huawei Technologies Co.,Ltd.')
hwWlanDeviceNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1))
hwWlanDeviceNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1))
hwApFaultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 1)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultTimes"))
if mibBuilder.loadTexts: hwApFaultNotify.setStatus('current')
hwApNormalNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 2)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApNormalNotify.setStatus('current')
hwApTypeNotMatchNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 3)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApActualType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApTypeNotMatchNotify.setStatus('current')
hwApPingResultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 4)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultSuccessCount"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultFailureCount"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultAverageResponseTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultMinimumResponseTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultMaximumResponseTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApPingResultNotify.setStatus('current')
hwApColdstartNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 5)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApColdstartNotify.setStatus('current')
hwApConfigCommitNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 8)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApConfigCommitNotify.setStatus('current')
hwApAddOffLineNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 9)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSn"))
if mibBuilder.loadTexts: hwApAddOffLineNotify.setStatus('current')
hwApConfirmNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 10)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSn"))
if mibBuilder.loadTexts: hwApConfirmNotify.setStatus('current')
hwUnAuthorizedApRecordExistNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 11)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwUnAuthorizedApRecordNumber"))
if mibBuilder.loadTexts: hwUnAuthorizedApRecordExistNotify.setStatus('current')
hwUnAuthorizedApRecordClearNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 12))
if mibBuilder.loadTexts: hwUnAuthorizedApRecordClearNotify.setStatus('current')
hwApCpuOverloadNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 13)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuOccupancyRate"))
if mibBuilder.loadTexts: hwApCpuOverloadNotify.setStatus('current')
hwApCpuOverloadRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 14)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuOccupancyRate"))
if mibBuilder.loadTexts: hwApCpuOverloadRestoreNotify.setStatus('current')
hwApMemoryOverloadNOtify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 15)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryOccupancyRate"))
if mibBuilder.loadTexts: hwApMemoryOverloadNOtify.setStatus('current')
hwApMemoryOverloadRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 16)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryOccupancyRate"))
if mibBuilder.loadTexts: hwApMemoryOverloadRestoreNotify.setStatus('current')
hwAPStaFullNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 17)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStaAuthFailCause"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPermitStaNum"))
if mibBuilder.loadTexts: hwAPStaFullNotify.setStatus('current')
hwAPStaFullRecoverNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 18)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStaAuthFailCause"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPermitStaNum"))
if mibBuilder.loadTexts: hwAPStaFullRecoverNotify.setStatus('current')
hwAcDevicesSwitchNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 19)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcSystemSwitchType"))
if mibBuilder.loadTexts: hwAcDevicesSwitchNotify.setStatus('current')
hwApTimeSynFailNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 20)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApTimeSynFailNotify.setStatus('current')
hwDyingGaspTrapNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 21)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwDyingGaspTrapNotify.setStatus('current')
hwApFaultNotifyFat = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 22)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"))
if mibBuilder.loadTexts: hwApFaultNotifyFat.setStatus('current')
hwApNormalNotifyFat = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 23)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"))
if mibBuilder.loadTexts: hwApNormalNotifyFat.setStatus('current')
hwApTemperatureTooLowNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 24)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyOrRestoreTemperature"))
if mibBuilder.loadTexts: hwApTemperatureTooLowNotify.setStatus('current')
hwApTemperatureTooLowRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 25)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyOrRestoreTemperature"))
if mibBuilder.loadTexts: hwApTemperatureTooLowRestoreNotify.setStatus('current')
hwApTemperatureTooHighNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 26)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyOrRestoreTemperature"))
if mibBuilder.loadTexts: hwApTemperatureTooHighNotify.setStatus('current')
hwApTemperatureTooHighRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 27)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyOrRestoreTemperature"))
if mibBuilder.loadTexts: hwApTemperatureTooHighRestoreNotify.setStatus('current')
hwRadioDownNotifyFat = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 29)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRadioNotifyPara"))
if mibBuilder.loadTexts: hwRadioDownNotifyFat.setStatus('current')
hwRadioDownRecovNotifyFat = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 30)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRadioNotifyPara"))
if mibBuilder.loadTexts: hwRadioDownRecovNotifyFat.setStatus('current')
hwApOpticalRxPowerTooHighNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 31)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPower"))
if mibBuilder.loadTexts: hwApOpticalRxPowerTooHighNotify.setStatus('current')
hwApOpticalRxPowerTooHighRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 32)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPower"))
if mibBuilder.loadTexts: hwApOpticalRxPowerTooHighRestoreNotify.setStatus('current')
hwApOpticalRxPowerTooLowNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 33)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPower"))
if mibBuilder.loadTexts: hwApOpticalRxPowerTooLowNotify.setStatus('current')
hwApOpticalRxPowerTooLowRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 34)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPower"))
if mibBuilder.loadTexts: hwApOpticalRxPowerTooLowRestoreNotify.setStatus('current')
hwApOpticalTemperatureTooHighNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 35)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperature"))
if mibBuilder.loadTexts: hwApOpticalTemperatureTooHighNotify.setStatus('current')
hwApOpticalTemperatureTooHighRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 36)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperature"))
if mibBuilder.loadTexts: hwApOpticalTemperatureTooHighRestoreNotify.setStatus('current')
hwApOpticalTemperatureTooLowNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 37)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperature"))
if mibBuilder.loadTexts: hwApOpticalTemperatureTooLowNotify.setStatus('current')
hwApOpticalTemperatureTooLowRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 38)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperature"))
if mibBuilder.loadTexts: hwApOpticalTemperatureTooLowRestoreNotify.setStatus('current')
hwApNotSupportCountryCodeNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 39)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCfgCountryCode"))
if mibBuilder.loadTexts: hwApNotSupportCountryCodeNotify.setStatus('current')
hwApReceivedInvalidArpNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 40)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyRadioId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyWlanId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackSrcMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackDstMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackSrcIP"))
if mibBuilder.loadTexts: hwApReceivedInvalidArpNotify.setStatus('current')
hwApArpExceedThresholdNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 41)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyRadioId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyWlanId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpActualRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpCfgRateThreshold"))
if mibBuilder.loadTexts: hwApArpExceedThresholdNotify.setStatus('current')
hwApColdBootNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 42)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootNotifyName"))
if mibBuilder.loadTexts: hwApColdBootNotify.setStatus('current')
hwApColdBootRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 43)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootNotifyName"))
if mibBuilder.loadTexts: hwApColdBootRestoreNotify.setStatus('current')
hwApHotBootNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 44)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootNotifyName"))
if mibBuilder.loadTexts: hwApHotBootNotify.setStatus('current')
hwApHotBootRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 45)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootNotifyName"))
if mibBuilder.loadTexts: hwApHotBootRestoreNotify.setStatus('current')
hwStationOnlineNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 46)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaRadioId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessChannel"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRssi"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"))
if mibBuilder.loadTexts: hwStationOnlineNotify.setStatus('current')
hwStationOfflineNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 47)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaRadioId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaAccessChannel"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRssi"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"))
if mibBuilder.loadTexts: hwStationOfflineNotify.setStatus('current')
hwStationSignalStrengthLowThanThresholdNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 48)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaRadioId"), ("HUAWEI-WLAN-SERVICE-MIB", "hwWlanServiceStaMac"), ("HUAWEI-WLAN-SERVICE-MIB", "hwStaRssi"), ("HUAWEI-WLAN-DEVICE-MIB", "hwSignalStrengthThreshold"))
if mibBuilder.loadTexts: hwStationSignalStrengthLowThanThresholdNotify.setStatus('current')
hwAPBroadcastStormDownNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 49))
if mibBuilder.loadTexts: hwAPBroadcastStormDownNotify.setStatus('current')
hwAPBroadcastStormDownRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 50))
if mibBuilder.loadTexts: hwAPBroadcastStormDownRestoreNotify.setStatus('current')
hwAPBroadcastStormUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 51))
if mibBuilder.loadTexts: hwAPBroadcastStormUpNotify.setStatus('current')
hwAPBroadcastStormUpRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 52))
if mibBuilder.loadTexts: hwAPBroadcastStormUpRestoreNotify.setStatus('current')
hwApBroadcastRestrainDownNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 53))
if mibBuilder.loadTexts: hwApBroadcastRestrainDownNotify.setStatus('current')
hwApBroadcastRestrainDownRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 54))
if mibBuilder.loadTexts: hwApBroadcastRestrainDownRestoreNotify.setStatus('current')
hwApBroadcastRestrainUpNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 55))
if mibBuilder.loadTexts: hwApBroadcastRestrainUpNotify.setStatus('current')
hwApBroadcastRestrainUpRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 56))
if mibBuilder.loadTexts: hwApBroadcastRestrainUpRestoreNotify.setStatus('current')
hwApCRCTooHighNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 57)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcErrActual"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcPortType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcPortID"))
if mibBuilder.loadTexts: hwApCRCTooHighNotify.setStatus('current')
hwApCRCTooHighRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 58)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcErrActual"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcPortType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcPortID"))
if mibBuilder.loadTexts: hwApCRCTooHighRestoreNotify.setStatus('current')
hwApConflictApNameNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 59)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"))
if mibBuilder.loadTexts: hwApConflictApNameNotify.setStatus('current')
hwApLicenseNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 60)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApLicenseInfo"))
if mibBuilder.loadTexts: hwApLicenseNotify.setStatus('current')
hwApFmeaIICFaultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 61)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApFmeaIICFaultNotify.setStatus('current')
hwApFmeaIICFaultRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 62)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApFmeaIICFaultRestoreNotify.setStatus('current')
hwApFmeaPHYFaultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 63)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApFmeaPHYFaultNotify.setStatus('current')
hwApFmeaPHYFaultRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 64)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApFmeaPHYFaultRestoreNotify.setStatus('current')
hwApFmeaFaultNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 65)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIfIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultInfo"))
if mibBuilder.loadTexts: hwApFmeaFaultNotify.setStatus('current')
hwApFmeaFaultRestoreNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 66)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIfIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultInfo"))
if mibBuilder.loadTexts: hwApFmeaFaultRestoreNotify.setStatus('current')
hwApOpticalInsertNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 67)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIfIndex"))
if mibBuilder.loadTexts: hwApOpticalInsertNotify.setStatus('current')
hwApOpticalRemoveNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 68)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIfIndex"))
if mibBuilder.loadTexts: hwApOpticalRemoveNotify.setStatus('current')
hwApReceivedInvalidArpNewNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 69)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyRadioId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyWlanId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackDropNum"))
if mibBuilder.loadTexts: hwApReceivedInvalidArpNewNotify.setStatus('current')
hwApVersionMismatchNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 1, 70)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApActualType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSoftwareVersion"))
if mibBuilder.loadTexts: hwApVersionMismatchNotify.setStatus('current')
hwWlanDeviceNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2))
hwApActualType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApActualType.setStatus('current')
hwApCpuOccupancyRate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApCpuOccupancyRate.setStatus('current')
hwApMemoryOccupancyRate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMemoryOccupancyRate.setStatus('current')
hwApPermitStaNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPermitStaNum.setStatus('current')
hwStaAuthFailCause = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwStaAuthFailCause.setStatus('current')
hwAcSystemSwitchType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcSystemSwitchType.setStatus('current')
hwApRadioNotifyPara = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRadioNotifyPara.setStatus('current')
hwApOpticalRxPower = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalRxPower.setStatus('current')
hwApOpticalTemperature = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalTemperature.setStatus('current')
hwApCfgCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApCfgCountryCode.setStatus('current')
hwApArpAttackSrcMac = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApArpAttackSrcMac.setStatus('current')
hwApArpAttackDstMac = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApArpAttackDstMac.setStatus('current')
hwApArpAttackSrcIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApArpAttackSrcIP.setStatus('current')
hwApArpCfgRateThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApArpCfgRateThreshold.setStatus('current')
hwApArpActualRate = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApArpActualRate.setStatus('current')
hwApNotifyRadioId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApNotifyRadioId.setStatus('current')
hwApNotifyOrRestoreTemperature = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApNotifyOrRestoreTemperature.setStatus('current')
hwOccurTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOccurTime.setStatus('current')
hwApBootNotifyName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApBootNotifyName.setStatus('current')
hwApFaultTimes = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApFaultTimes.setStatus('current')
hwSignalStrengthThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSignalStrengthThreshold.setStatus('current')
hwStaBroadcastFlux = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 23), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwStaBroadcastFlux.setStatus('current')
hwBroadcastWarnThresholdDown = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 24), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBroadcastWarnThresholdDown.setStatus('current')
hwBroadcastWarnThresholdUp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 25), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBroadcastWarnThresholdUp.setStatus('current')
hwBroadcastRestrainThresholdDown = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 26), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBroadcastRestrainThresholdDown.setStatus('current')
hwBroadcastRestrainThresholdUp = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBroadcastRestrainThresholdUp.setStatus('current')
hwApBroadcastFlux = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApBroadcastFlux.setStatus('current')
hwCrcErrActual = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCrcErrActual.setStatus('current')
hwCrcThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCrcThreshold.setStatus('current')
hwApNotifyWlanId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApNotifyWlanId.setStatus('current')
hwApLicenseInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 32), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLicenseInfo.setStatus('current')
hwCrcPortType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 33), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCrcPortType.setStatus('current')
hwCrcPortID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCrcPortID.setStatus('current')
hwApArpAttackDropNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApArpAttackDropNum.setStatus('current')
hwApFaultID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("phy", 1), ("cpld", 2), ("lm75", 3), ("sfp", 4), ("wifi", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApFaultID.setStatus('current')
hwApIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApIfIndex.setStatus('current')
hwApFaultInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 1, 2, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApFaultInfo.setStatus('current')
hwApTypeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2))
hwApTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1), )
if mibBuilder.loadTexts: hwApTypeTable.setStatus('current')
hwApTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApType"))
if mibBuilder.loadTexts: hwApTypeEntry.setStatus('current')
hwApType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwApType.setStatus('current')
hwApTypeDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeDesc.setStatus('current')
hwApTypeLineatePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeLineatePortNum.setStatus('current')
hwApTypeRadioNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeRadioNum.setStatus('current')
hwApTypeMaxStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeMaxStaNum.setStatus('current')
hwApTypeMaxSsidNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeMaxSsidNum.setStatus('current')
hwApTypeAntennaGain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 7), Integer32()).setUnits('dBi').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeAntennaGain.setStatus('current')
hwApTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApTypeRowStatus.setStatus('current')
hwApTypeReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApTypeReset.setStatus('current')
hwApTypeRadioTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3), )
if mibBuilder.loadTexts: hwApTypeRadioTable.setStatus('current')
hwApTypeRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApType"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApTypeRadioIndex"))
if mibBuilder.loadTexts: hwApTypeRadioEntry.setStatus('current')
hwApTypeRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApTypeRadioIndex.setStatus('current')
hwApTypeRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("wlan80211a", 1), ("wlan80211b", 2), ("wlan80211g", 3), ("wlan80211bg", 4), ("wlan80211an", 5), ("wlan80211bgn", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApTypeRadioType.setStatus('current')
hwRadioMaxSpatialStreamsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRadioMaxSpatialStreamsNum.setStatus('current')
hwRadioMaxAntennasNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRadioMaxAntennasNum.setStatus('current')
hwRadioMaxVAPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRadioMaxVAPNum.setStatus('current')
hwApTypeRadioAntennaGain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApTypeRadioAntennaGain.setStatus('current')
hwApTypeLineatePortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 4), )
if mibBuilder.loadTexts: hwApTypeLineatePortInfoTable.setStatus('current')
hwApTypeLineatePortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 4, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApType"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApTypeLineatePortIndex"))
if mibBuilder.loadTexts: hwApTypeLineatePortInfoEntry.setStatus('current')
hwApTypeLineatePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApTypeLineatePortIndex.setStatus('current')
hwApTypeLineatePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("fe", 1), ("ge", 2), ("gpon", 3), ("epon", 4), ("adsl2plus", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApTypeLineatePortType.setStatus('current')
hwApTypeLineatePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 2, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApTypeLineatePortName.setStatus('current')
hwApProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3))
hwApProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1), )
if mibBuilder.loadTexts: hwApProfileTable.setStatus('current')
hwApProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApProfileName"))
if mibBuilder.loadTexts: hwApProfileEntry.setStatus('current')
hwApProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 1), OctetString())
if mibBuilder.loadTexts: hwApProfileName.setStatus('current')
hwApEthPortMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEthPortMtu.setStatus('current')
hwApDosDefend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApDosDefend.setStatus('current')
hwApWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bridge", 1), ("routing", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApWorkMode.setStatus('current')
hwApLogBackupServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLogBackupServerIp.setStatus('current')
hwApLogBackupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoBackup", 1), ("manualBackup", 2), ("disable", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLogBackupMode.setStatus('current')
hwApProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApProfileRowStatus.setStatus('current')
hwApSampleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApSampleTime.setStatus('current')
hwApStatisticsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApStatisticsInterval.setStatus('current')
hwApEapStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicast", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEapStartMode.setStatus('current')
hwApEapStartUnicastMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 11), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEapStartUnicastMac.setStatus('current')
hwApEapStartTransform = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("specific", 1), ("all", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEapStartTransform.setStatus('current')
hwApEapResponseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicastSpecific", 3), ("unicastLearning", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEapResponseMode.setStatus('current')
hwApEapResponseUnicastMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 14), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEapResponseUnicastMac.setStatus('current')
hwApEapResponseTransform = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("specific", 1), ("all", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApEapResponseTransform.setStatus('current')
hwApOfflineManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApOfflineManagement.setStatus('current')
hwApAlarmRestrictionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAlarmRestrictionMode.setStatus('current')
hwApAlarmRestrictionPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAlarmRestrictionPeriod.setStatus('current')
hwAp4WayHandshakeRoamPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ac", 1), ("ap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAp4WayHandshakeRoamPolicy.setStatus('current')
hwApLogRecordLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("info", 7), ("debug", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogRecordLevel.setStatus('current')
hwApLogBackupPeriodTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogBackupPeriodTime.setStatus('current')
hwApLogRecordFtpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("ftp", 2), ("sftp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogRecordFtpMode.setStatus('current')
hwApLogServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogServerUsername.setStatus('current')
hwApLogServerUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogServerUserPassword.setStatus('current')
hwApLogServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogServerIp.setStatus('current')
hwApProfileTelnetSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileTelnetSwitch.setStatus('current')
hwApSshSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApSshSwitch.setStatus('current')
hwApProfileDhcpTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileDhcpTrustPort.setStatus('current')
hwApProfileConsoleSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileConsoleSwitch.setStatus('current')
hwApProfileMaxUserNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApProfileMaxUserNum.setStatus('current')
hwApProfileNdTrustPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileNdTrustPort.setStatus('current')
hwApLogBackupServerIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLogBackupServerIpv6Addr.setStatus('current')
hwApLedSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLedSwitch.setStatus('current')
hwApLocalAssocResSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLocalAssocResSwitch.setStatus('current')
hwApProfileDefault = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileDefault.setStatus('current')
hwApProfileBatchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 3))
hwApProfileBatchStart = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileBatchStart.setStatus('current')
hwApProfileBatchNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApProfileBatchNumber.setStatus('current')
hwApProfileBatchReturnNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApProfileBatchReturnNumber.setStatus('current')
hwApProfileBatchNameList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 3, 3, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApProfileBatchNameList.setStatus('current')
hwApAuthListObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4))
hwApMacWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 1), )
if mibBuilder.loadTexts: hwApMacWhitelistTable.setStatus('current')
hwApMacWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApMacWhitelistMacAddr"))
if mibBuilder.loadTexts: hwApMacWhitelistEntry.setStatus('current')
hwApMacWhitelistMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwApMacWhitelistMacAddr.setStatus('current')
hwApMacWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApMacWhitelistRowStatus.setStatus('current')
hwApSnWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 2), )
if mibBuilder.loadTexts: hwApSnWhitelistTable.setStatus('current')
hwApSnWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 2, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApSnWhitelistSn"))
if mibBuilder.loadTexts: hwApSnWhitelistEntry.setStatus('current')
hwApSnWhitelistSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 2, 1, 1), OctetString())
if mibBuilder.loadTexts: hwApSnWhitelistSn.setStatus('current')
hwApSnWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApSnWhitelistRowStatus.setStatus('current')
hwApAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("macAuth", 1), ("snAuth", 2), ("noAuth", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAuthMode.setStatus('current')
hwApMacWhitelistBatchQueryInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 4))
hwApMacWhitelistBatchQueryStartNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMacWhitelistBatchQueryStartNumber.setStatus('current')
hwApMacWhitelistBatchQueryNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMacWhitelistBatchQueryNumber.setStatus('current')
hwApMacWhitelistBatchQueryList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 4, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMacWhitelistBatchQueryList.setStatus('current')
hwApMacWhitelistBatchQueryReturnNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMacWhitelistBatchQueryReturnNumber.setStatus('current')
hwApSnWhitelistBatchQueryInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 5))
hwApSnWhitelistBatchQueryStartNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApSnWhitelistBatchQueryStartNumber.setStatus('current')
hwApSnWhitelistBatchQueryNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApSnWhitelistBatchQueryNumber.setStatus('current')
hwApSnWhitelistBatchQueryList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSnWhitelistBatchQueryList.setStatus('current')
hwApSnWhitelistBatchQueryReturnNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSnWhitelistBatchQueryReturnNumber.setStatus('current')
hwApMacBlacklistTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 6), )
if mibBuilder.loadTexts: hwApMacBlacklistTable.setStatus('current')
hwApMacBlacklistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 6, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApMacBlacklistMacAddr"))
if mibBuilder.loadTexts: hwApMacBlacklistEntry.setStatus('current')
hwApMacBlacklistMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwApMacBlacklistMacAddr.setStatus('current')
hwApMacBlacklistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApMacBlacklistRowStatus.setStatus('current')
hwApSnBlacklistTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 7), )
if mibBuilder.loadTexts: hwApSnBlacklistTable.setStatus('current')
hwApSnBlacklistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 7, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApSnBlacklistSn"))
if mibBuilder.loadTexts: hwApSnBlacklistEntry.setStatus('current')
hwApSnBlacklistSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 7, 1, 1), OctetString())
if mibBuilder.loadTexts: hwApSnBlacklistSn.setStatus('current')
hwApSnBlacklistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 4, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApSnBlacklistRowStatus.setStatus('current')
hwApRegionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5))
hwApRegionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1), )
if mibBuilder.loadTexts: hwApRegionTable.setStatus('current')
hwApRegionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApRegionIndex"))
if mibBuilder.loadTexts: hwApRegionEntry.setStatus('current')
hwApRegionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApRegionIndex.setStatus('current')
hwApRegionName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApRegionName.setStatus('current')
hwApRegionDeployMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("discreteDeploy", 1), ("normalDeploy", 2), ("denselyDeploy", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApRegionDeployMode.setStatus('current')
hwApRegionApNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRegionApNumber.setStatus('current')
hwApRegionApIndexMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRegionApIndexMask.setStatus('current')
hwApRegionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApRegionRowStatus.setStatus('current')
hwApRegionForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("directForward", 1), ("tunnel", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionForwardMode.setStatus('current')
hwApRegionCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionCountryCode.setStatus('current')
hwApRegionScanChannel2G = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionScanChannel2G.setStatus('current')
hwApRegionScanChannel5G = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionScanChannel5G.setStatus('current')
hwApRegionCalibrateChannel2G = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionCalibrateChannel2G.setStatus('current')
hwApRegionCalibrateChannel5G = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionCalibrateChannel5G.setStatus('current')
hwApRegionCalibrate5gBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 0))).clone(namedValues=NamedValues(("ht20", 1), ("ht40", 2), ("ht80", 3), ("unknown", 0))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionCalibrate5gBandWidth.setStatus('current')
hwApRegionGlobalInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2))
hwApRegionDefault = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionDefault.setStatus('current')
hwApRegionAllExistRegionIndexMask = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRegionAllExistRegionIndexMask.setStatus('current')
hwApRegionBatchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 3))
hwApRegionBatchStart = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionBatchStart.setStatus('current')
hwApRegionBatchNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRegionBatchNumber.setStatus('current')
hwApRegionBatchReturnNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRegionBatchReturnNumber.setStatus('current')
hwApRegionBatchNameList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 3, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRegionBatchNameList.setStatus('current')
hwApRegionBatchDeployMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 2, 3, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRegionBatchDeployMode.setStatus('current')
hwApRegionMerge = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 3))
hwApSrcRegionIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApSrcRegionIndex.setStatus('current')
hwApDestRegionIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 5, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApDestRegionIndex.setStatus('current')
hwApObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6))
hwApTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1), )
if mibBuilder.loadTexts: hwApTable.setStatus('current')
hwApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"))
if mibBuilder.loadTexts: hwApEntry.setStatus('current')
hwApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwApIndex.setStatus('current')
hwApUsedType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApUsedType.setStatus('current')
hwApUsedProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApUsedProfileName.setStatus('current')
hwApUsedRegionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApUsedRegionIndex.setStatus('current')
hwApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApMac.setStatus('current')
hwApSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApSn.setStatus('current')
hwApSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 7), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApSysName.setStatus('current')
hwApRunState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("idle", 1), ("autofind", 2), ("typeNotMatch", 3), ("fault", 4), ("config", 5), ("configFailed", 6), ("download", 7), ("normal", 8), ("committing", 9), ("commitFailed", 10), ("standby", 11), ("vermismatch", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRunState.setStatus('current')
hwApSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSoftwareVersion.setStatus('current')
hwApHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApHardwareVersion.setStatus('current')
hwApCpuType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApCpuType.setStatus('current')
hwApCpufrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 12), Integer32()).setUnits('MHZ').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApCpufrequency.setStatus('current')
hwApMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMemoryType.setStatus('current')
hwApDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApDomain.setStatus('current')
hwApIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApIpAddress.setStatus('current')
hwApIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApIpNetMask.setStatus('current')
hwApGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApGatewayIp.setStatus('current')
hwApMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 18), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMemorySize.setStatus('current')
hwApFlashSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 19), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApFlashSize.setStatus('current')
hwApRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApRunTime.setStatus('current')
hwApUpEthPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("speed10", 1), ("speed100", 2), ("speed1000", 3), ("speed10000", 4)))).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpEthPortSpeed.setStatus('current')
hwApUpEthPortSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpEthPortSpeedMode.setStatus('current')
hwApUpEthPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpEthPortDuplex.setStatus('current')
hwApUpEthPortDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpEthPortDuplexMode.setStatus('current')
hwApAdminOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6))).clone(namedValues=NamedValues(("reset", 1), ("confirm", 2), ("manufacturerConfig", 3), ("replaceAp", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAdminOper.setStatus('current')
hwApRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApRowstatus.setStatus('current')
hwApPerformanceStatCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fiveMinutes", 1), ("tenMinutes", 2), ("fifteenMinutes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPerformanceStatCycle.setStatus('current')
hwApDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApDNS.setStatus('current')
hwApRunningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("fat", 2), ("fit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApRunningMode.setStatus('current')
hwApForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("directForward", 1), ("tunnel", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApForwardMode.setStatus('current')
hwApAntennaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoMode", 1), ("leftMode", 2), ("rightMode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAntennaMode.setStatus('current')
hwApCpuThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 32), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApCpuThreshold.setStatus('current')
hwApMemThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 33), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApMemThreshold.setStatus('current')
hwApNEnumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 34), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApNEnumber.setStatus('current')
hwApOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOnlineTime.setStatus('current')
hwApSysSoftwareDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 36), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysSoftwareDesc.setStatus('current')
hwApSysHardtwareDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysHardtwareDesc.setStatus('current')
hwApSysManufacture = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysManufacture.setStatus('current')
hwApSysSoftwareName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysSoftwareName.setStatus('current')
hwApSysSoftwareVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 40), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysSoftwareVendor.setStatus('current')
hwApManagementVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApManagementVlanID.setStatus('current')
hwApUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApUsername.setStatus('current')
hwApPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPassword.setStatus('current')
hwApAcIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 44), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAcIP1.setStatus('current')
hwApAcIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 45), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAcIP2.setStatus('current')
hwApAcIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 46), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAcIP3.setStatus('current')
hwApAcIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 47), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAcIP4.setStatus('current')
hwApIpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dchp", 1), ("pppoe", 2), ("static", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApIpMode.setStatus('current')
hwApLldpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpEnable.setStatus('current')
hwApLldpManageAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpManageAddr.setStatus('current')
hwApLldpPortDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpPortDes.setStatus('current')
hwApLldpSysCab = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpSysCab.setStatus('current')
hwApLldpSysDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpSysDes.setStatus('current')
hwApLldpSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpSysName.setStatus('current')
hwApLldpDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpDelay.setStatus('current')
hwApLldpHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpHoldMultiplier.setStatus('current')
hwApLldpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 32768)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpInterval.setStatus('current')
hwApLldpRestartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpRestartDelay.setStatus('current')
hwApLldpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("txrx", 1), ("rx", 2), ("tx", 3))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpAdminStatus.setStatus('current')
hwApLldpReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApLldpReportInterval.setStatus('current')
hwApBomCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 61), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApBomCode.setStatus('current')
hwApSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 62), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApSaveMode.setStatus('obsolete')
hwApProtectAcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 63), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApProtectAcPriority.setStatus('current')
hwApProtectAcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 64), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApProtectAcIP.setStatus('current')
hwApOpticalHighRxPowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApOpticalHighRxPowerThreshold.setStatus('current')
hwApOpticalLowRxPowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApOpticalLowRxPowerThreshold.setStatus('current')
hwApOpticalHighTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 125))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApOpticalHighTemperatureThreshold.setStatus('current')
hwApOpticalLowTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, -5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApOpticalLowTemperatureThreshold.setStatus('current')
hwApKeepService = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("allowaccess", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApKeepService.setStatus('current')
hwApPriorityAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPriorityAccessMode.setStatus('current')
hwApLineateportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("root", 1), ("endpoint", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineateportMode.setStatus('current')
hwApLineateportVlanTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 72), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineateportVlanTagged.setStatus('current')
hwApLineateportVlanUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 73), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineateportVlanUntagged.setStatus('current')
hwApLineateportPvidVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineateportPvidVlan.setStatus('current')
hwApLineateportUserIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineateportUserIsolate.setStatus('current')
hwApLineateportStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineateportStpEnable.setStatus('current')
hwApHighTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 110))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApHighTemperatureThreshold.setStatus('current')
hwApLowTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-70, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLowTemperatureThreshold.setStatus('current')
hwApReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 79), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApReset.setStatus('current')
hwApStaticIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 80), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApStaticIpAddress.setStatus('current')
hwApStaticNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 81), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApStaticNetMask.setStatus('current')
hwApStaticGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 82), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApStaticGatewayIp.setStatus('current')
hwApAttackFloodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 83), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackFloodInterval.setStatus('current')
hwApAttackFloodTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 84), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackFloodTimes.setStatus('current')
hwApDynamicBlacklistEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 85), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApDynamicBlacklistEnable.setStatus('current')
hwApDynamicBlacklistAgingInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 86), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApDynamicBlacklistAgingInt.setStatus('current')
hwApAttackPskInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 87), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackPskInterval.setStatus('current')
hwApAttackPskTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 88), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackPskTimes.setStatus('current')
hwApAccessBalanceGap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 89), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAccessBalanceGap.setStatus('current')
hwApIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 90), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApIpv6Address.setStatus('current')
hwApIpv6NetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 91), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApIpv6NetMask.setStatus('current')
hwApGatewayIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 92), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApGatewayIpv6.setStatus('current')
hwApIpv6DNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 93), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApIpv6DNS.setStatus('current')
hwApProtectAcIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 94), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApProtectAcIPv6Addr.setStatus('current')
hwApLineatePortCfgMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortCfgMtu.setStatus('current')
hwApLineatePortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 96), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortMacAddress.setStatus('current')
hwApAccessBalanceSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApAccessBalanceSwitch.setStatus('current')
hwApNatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 98), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApNatIpAddress.setStatus('current')
hwApAttackFloodQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackFloodQuietTime.setStatus('current')
hwApAttackPskQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackPskQuietTime.setStatus('current')
hwApAttackWeakivQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 101), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackWeakivQuietTime.setStatus('current')
hwApAttackSpoofQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApAttackSpoofQuietTime.setStatus('current')
hwApBootCountTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 103), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApBootCountTotal.setStatus('current')
hwApBootCountPowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 104), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApBootCountPowerOff.setStatus('current')
hwApBootCountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 1, 1, 105), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwApBootCountRowStatus.setStatus('current')
hwApLineatePortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2), )
if mibBuilder.loadTexts: hwApLineatePortTable.setStatus('current')
hwApLineatePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortIndex"))
if mibBuilder.loadTexts: hwApLineatePortEntry.setStatus('current')
hwApLineatePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApLineatePortIndex.setStatus('current')
hwApLineatePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fe", 1), ("ge", 2), ("gpon", 3), ("epon", 4), ("adsl2plus", 5), ("trunk", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortType.setStatus('current')
hwApLineatePortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortDesc.setStatus('current')
hwApLineatePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortState.setStatus('current')
hwApLineatePortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 5), Integer32()).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortSpeed.setStatus('current')
hwApMultiLineatePortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("half", 1), ("full", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortDuplex.setStatus('current')
hwApMultiLineatePortNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("auto", 1), ("forced", 2), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMultiLineatePortNegotiation.setStatus('current')
hwApMultiLineatePortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("root", 1), ("endpoint", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortMode.setStatus('current')
hwApMultiLineatePortUserIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortUserIsolate.setStatus('current')
hwApMultiLineatePortStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortStpEnable.setStatus('current')
hwApMultiLineatePortVlanTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortVlanTagged.setStatus('current')
hwApMultiLineatePortVlanUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortVlanUntagged.setStatus('current')
hwApMultiLineatePortPvidVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortPvidVlan.setStatus('current')
hwApMultiLineatePortCRCErrorHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortCRCErrorHighThreshold.setStatus('current')
hwApMultiLineatePortCRCErrorLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortCRCErrorLowThreshold.setStatus('current')
hwApMultiLineatePortCRCErrorSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortCRCErrorSwitch.setStatus('current')
hwApLineatePortAclNumInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNumInbound.setStatus('current')
hwApLineatePortAclNumOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNumOutbound.setStatus('current')
hwApLineatePortAclNameInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNameInbound.setStatus('current')
hwApLineatePortAclNameOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNameOutbound.setStatus('current')
hwApLineatePortAclSwitchInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclSwitchInbound.setStatus('current')
hwApLineatePortAclSwitchOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclSwitchOutbound.setStatus('current')
hwApLineatePortAclNumInboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNumInboundIPV6.setStatus('current')
hwApLineatePortAclNumOutboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNumOutboundIPV6.setStatus('current')
hwApLineatePortAclNameInboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 25), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNameInboundIPV6.setStatus('current')
hwApLineatePortAclNameOutboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 26), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclNameOutboundIPV6.setStatus('current')
hwApLineatePortAclSwitchInboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclSwitchInboundIPV6.setStatus('current')
hwApLineatePortAclSwitchOutboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortAclSwitchOutboundIPV6.setStatus('current')
hwApMultiLineatePortIsAddInTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("exit", 1), ("add", 2), ("unknow", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortIsAddInTrunk.setStatus('current')
hwApMultiLineatePortAddedOrExitTrunkID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApMultiLineatePortAddedOrExitTrunkID.setStatus('current')
hwApGlobalInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3))
hwApAllExistApIndexMask = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAllExistApIndexMask.setStatus('current')
hwUnAuthorizedApRecordNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUnAuthorizedApRecordNumber.setStatus('current')
hwUnAuthorizedApRecordAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwUnAuthorizedApRecordAdmin.setStatus('current')
hwApResetAllOnlineFailRecord = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, -1))).clone(namedValues=NamedValues(("reset", 1), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApResetAllOnlineFailRecord.setStatus('current')
hwApResetAllOfflineRecord = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApResetAllOfflineRecord.setStatus('current')
hwApResetAllBootCountRecord = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApResetAllBootCountRecord.setStatus('current')
hwApBatchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 4))
hwApBatchIndexStart = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApBatchIndexStart.setStatus('current')
hwApBatchIndexNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApBatchIndexNumber.setStatus('current')
hwApBatchIndexReturnNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApBatchIndexReturnNumber.setStatus('current')
hwApBatchState = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 4, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApBatchState.setStatus('current')
hwApBatchNameList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 4, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApBatchNameList.setStatus('current')
hwApPing = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5))
hwApPingIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingIndex.setStatus('current')
hwApPingAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingAddress.setStatus('current')
hwApPingCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingCount.setStatus('current')
hwApPingPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 4), Integer32()).setUnits('Bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingPacketSize.setStatus('current')
hwApPingWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 5), Integer32()).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingWaitTime.setStatus('current')
hwApPingTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 6), Integer32()).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingTimeOut.setStatus('current')
hwApPingResultSuccessCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPingResultSuccessCount.setStatus('current')
hwApPingResultFailureCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPingResultFailureCount.setStatus('current')
hwApPingResultAverageResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 9), Integer32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPingResultAverageResponseTime.setStatus('current')
hwApPingResultMinimumResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 10), Integer32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPingResultMinimumResponseTime.setStatus('current')
hwApPingResultMaximumResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 11), Integer32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPingResultMaximumResponseTime.setStatus('current')
hwApPingApMac = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 12), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApPingApMac.setStatus('current')
hwApPingResultFlag = MibScalar((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 5, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApPingResultFlag.setStatus('current')
hwApPerformanceStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6), )
if mibBuilder.loadTexts: hwApPerformanceStatTable.setStatus('current')
hwApPerformanceStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"))
if mibBuilder.loadTexts: hwApPerformanceStatEntry.setStatus('current')
hwApMemoryUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 1), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApMemoryUseRate.setStatus('current')
hwApCpuUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 2), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApCpuUseRate.setStatus('current')
hwApFlashFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 3), Integer32()).setUnits('kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApFlashFreeSize.setStatus('current')
hwApTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 4), Integer32()).setUnits('C').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApTemperature.setStatus('current')
hwApOnlineUserNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOnlineUserNum.setStatus('current')
hwApUpPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 6), Integer32()).setUnits('Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortSpeed.setStatus('current')
hwApUpPortRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvFrames.setStatus('current')
hwApUpPortRecvRightFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvRightFrames.setStatus('current')
hwApUpPortRecvErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvErrorFrames.setStatus('current')
hwApUpPortSendFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortSendFrames.setStatus('current')
hwApUpPortRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvBytes.setStatus('current')
hwApUpPortSendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortSendBytes.setStatus('current')
hwAPUpPortPER = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 13), Integer32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAPUpPortPER.setStatus('current')
hwAPWirelessUpPortTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAPWirelessUpPortTraffic.setStatus('current')
hwAPUpPortTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAPUpPortTraffic.setStatus('current')
hwApAirportSendDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportSendDropFrames.setStatus('current')
hwApEthportRecvDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvDropFrames.setStatus('current')
hwApAirportUpTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportUpTraffic.setStatus('current')
hwApAirportDwTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportDwTraffic.setStatus('current')
hwApEthportDwTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportDwTraffic.setStatus('current')
hwApEthportUpTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportUpTraffic.setStatus('current')
hwApAirportRecvDropPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportRecvDropPacket.setStatus('current')
hwApAirportRecvErrorPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportRecvErrorPacket.setStatus('current')
hwApEthportRecvUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvUnicastPacket.setStatus('current')
hwApEthportRecvNonUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvNonUnicastPacket.setStatus('current')
hwApEthportSendUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportSendUnicastPacket.setStatus('current')
hwApEthportSendNonUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportSendNonUnicastPacket.setStatus('current')
hwApAvgRCPUUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAvgRCPUUseRate.setStatus('current')
hwApAvgRMemoryUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAvgRMemoryUseRate.setStatus('current')
hwEthportSendDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthportSendDropFrames.setStatus('current')
hwEthportSendErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthportSendErrorFrames.setStatus('current')
hwEthportUpDwnTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthportUpDwnTimes.setStatus('current')
hwApAirportRecvUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportRecvUnicastFrames.setStatus('current')
hwApEthportRecvUnknownFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvUnknownFrames.setStatus('current')
hwApEthportUpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportUpRate.setStatus('current')
hwApEthportDownRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportDownRate.setStatus('current')
hwApUpPortRecvFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvFrames64Bits.setStatus('current')
hwApUpPortRecvRightFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvRightFrames64Bits.setStatus('current')
hwApUpPortRecvErrorFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvErrorFrames64Bits.setStatus('current')
hwApUpPortSendFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortSendFrames64Bits.setStatus('current')
hwApUpPortRecvBytes64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortRecvBytes64Bits.setStatus('current')
hwApUpPortSendBytes64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUpPortSendBytes64Bits.setStatus('current')
hwAPWirelessUpPortTraffic64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAPWirelessUpPortTraffic64Bits.setStatus('current')
hwAPUpPortTraffic64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAPUpPortTraffic64Bits.setStatus('current')
hwApAirportSendDropFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportSendDropFrames64Bits.setStatus('current')
hwApEthportRecvDropFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvDropFrames64Bits.setStatus('current')
hwApAirportRecvDropPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportRecvDropPacket64Bits.setStatus('current')
hwApAirportRecvErrorPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApAirportRecvErrorPacket64Bits.setStatus('current')
hwApEthportRecvUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvUnicastPacket64Bits.setStatus('current')
hwApEthportRecvNonUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportRecvNonUnicastPacket64Bits.setStatus('current')
hwApEthportSendUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportSendUnicastPacket64Bits.setStatus('current')
hwApEthportSendNonUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 6, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApEthportSendNonUnicastPacket64Bits.setStatus('current')
hwApUnauthorizedApRecordTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7), )
if mibBuilder.loadTexts: hwApUnauthorizedApRecordTable.setStatus('current')
hwApUnauthorizedApRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApUnauthorizedApRecordIndex"))
if mibBuilder.loadTexts: hwApUnauthorizedApRecordEntry.setStatus('current')
hwApUnauthorizedApRecordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApUnauthorizedApRecordIndex.setStatus('current')
hwApUnauthorizedApType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUnauthorizedApType.setStatus('current')
hwApUnauthorizedApMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUnauthorizedApMacAddress.setStatus('current')
hwApUnauthorizedApSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUnauthorizedApSn.setStatus('current')
hwApUnauthorizedApIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUnauthorizedApIpAddress.setStatus('current')
hwApUnauthorizedApRecordTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApUnauthorizedApRecordTime.setStatus('current')
hwApParaStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 8), )
if mibBuilder.loadTexts: hwApParaStatisticTable.setStatus('current')
hwApParaStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 8, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwApParaStatisticEntry.setStatus('current')
hwApStaAveSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApStaAveSignalStrength.setStatus('current')
hwMacApTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9), )
if mibBuilder.loadTexts: hwMacApTable.setStatus('current')
hwMacApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"))
if mibBuilder.loadTexts: hwMacApEntry.setStatus('current')
hwMacApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwMacApMac.setStatus('current')
hwMacApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApIndex.setStatus('current')
hwMacApUsedType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApUsedType.setStatus('current')
hwMacApUsedProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApUsedProfileName.setStatus('current')
hwMacApUsedRegionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApUsedRegionIndex.setStatus('current')
hwMacApSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApSn.setStatus('current')
hwMacApSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 7), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApSysName.setStatus('current')
hwMacApRunState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("idle", 1), ("autofind", 2), ("typeNotMatch", 3), ("fault", 4), ("config", 5), ("configFailed", 6), ("download", 7), ("normal", 8), ("committing", 9), ("commitFailed", 10), ("standby", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApRunState.setStatus('current')
hwMacApSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApSoftwareVersion.setStatus('current')
hwMacApHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApHardwareVersion.setStatus('current')
hwMacApCpuType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApCpuType.setStatus('current')
hwMacApCpufrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApCpufrequency.setStatus('current')
hwMacApMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApMemoryType.setStatus('current')
hwMacApDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApDomain.setStatus('current')
hwMacApIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApIpAddress.setStatus('current')
hwMacApIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApIpNetMask.setStatus('current')
hwMacApGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApGatewayIp.setStatus('current')
hwMacApMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApMemorySize.setStatus('current')
hwMacApFlashSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApFlashSize.setStatus('current')
hwMacApRunTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApRunTime.setStatus('current')
hwMacApUpEthPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("speed10", 1), ("speed100", 2), ("speed1000", 3), ("speed10000", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpEthPortSpeed.setStatus('current')
hwMacApUpEthPortSpeedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpEthPortSpeedMode.setStatus('current')
hwMacApUpEthPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpEthPortDuplex.setStatus('current')
hwMacApUpEthPortDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpEthPortDuplexMode.setStatus('current')
hwMacApAdminOper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6))).clone(namedValues=NamedValues(("reset", 1), ("confirm", 2), ("manufacturerConfig", 3), ("replaceAp", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApAdminOper.setStatus('current')
hwMacApRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApRowstatus.setStatus('current')
hwMacApPerformanceStatCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fiveMinutes", 1), ("tenMinutes", 2), ("fifteenMinutes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApPerformanceStatCycle.setStatus('current')
hwMacApDNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApDNS.setStatus('current')
hwMacApRunningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("fat", 2), ("fit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApRunningMode.setStatus('current')
hwMacApForwardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("directForward", 1), ("tunnel", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApForwardMode.setStatus('current')
hwMacApAntennaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("autoMode", 1), ("leftMode", 2), ("rightMode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApAntennaMode.setStatus('current')
hwMacApCpuThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 32), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApCpuThreshold.setStatus('current')
hwMacApMemThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 33), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApMemThreshold.setStatus('current')
hwMacApNEnumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 34), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApNEnumber.setStatus('current')
hwMacApOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOnlineTime.setStatus('current')
hwMacApSysSoftwareDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 36), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApSysSoftwareDesc.setStatus('current')
hwMacApSysHardtwareDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApSysHardtwareDesc.setStatus('current')
hwMacApSysManufacture = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApSysManufacture.setStatus('current')
hwMacApSysSoftwareName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApSysSoftwareName.setStatus('current')
hwMacApSysSoftwareVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 40), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApSysSoftwareVendor.setStatus('current')
hwMacApManagementVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApManagementVlanID.setStatus('current')
hwMacApUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApUsername.setStatus('current')
hwMacApPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApPassword.setStatus('current')
hwMacApAcIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 44), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApAcIP1.setStatus('current')
hwMacApAcIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 45), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApAcIP2.setStatus('current')
hwMacApAcIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 46), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApAcIP3.setStatus('current')
hwMacApAcIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 47), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApAcIP4.setStatus('current')
hwMacApIpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dhcp", 1), ("pppoe", 2), ("static", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApIpMode.setStatus('current')
hwMacApLldpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpEnable.setStatus('current')
hwMacApLldpManageAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpManageAddr.setStatus('current')
hwMacApLldpPortDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpPortDes.setStatus('current')
hwMacApLldpSysCab = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpSysCab.setStatus('current')
hwMacApLldpSysDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpSysDes.setStatus('current')
hwMacApLldpSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpSysName.setStatus('current')
hwMacApLldpDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpDelay.setStatus('current')
hwMacApLldpHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpHoldMultiplier.setStatus('current')
hwMacApLldpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 32768)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpInterval.setStatus('current')
hwMacApLldpRestartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpRestartDelay.setStatus('current')
hwMacApLldpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("txrx", 1), ("rx", 2), ("tx", 3))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpAdminStatus.setStatus('current')
hwMacApLldpReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApLldpReportInterval.setStatus('current')
hwMacApBomCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 61), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApBomCode.setStatus('current')
hwMacApSaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 62), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApSaveMode.setStatus('obsolete')
hwMacApProtectAcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 63), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApProtectAcPriority.setStatus('current')
hwMacApProtectAcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 64), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApProtectAcIP.setStatus('current')
hwMacApOpticalHighRxPowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApOpticalHighRxPowerThreshold.setStatus('current')
hwMacApOpticalLowRxPowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApOpticalLowRxPowerThreshold.setStatus('current')
hwMacApOpticalHighTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(70, 125))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApOpticalHighTemperatureThreshold.setStatus('current')
hwMacApOpticalLowTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, -5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApOpticalLowTemperatureThreshold.setStatus('current')
hwMacApKeepService = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApKeepService.setStatus('current')
hwMacApPriorityAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApPriorityAccessMode.setStatus('current')
hwMacApLineateportMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("root", 1), ("endpoint", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineateportMode.setStatus('current')
hwMacApLineateportVlanTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 72), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineateportVlanTagged.setStatus('current')
hwMacApLineateportVlanUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 73), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineateportVlanUntagged.setStatus('current')
hwMacApLineateportPvidVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineateportPvidVlan.setStatus('current')
hwMacApLineateportUserIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineateportUserIsolate.setStatus('current')
hwMacApLineateportStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineateportStpEnable.setStatus('current')
hwMacApHighTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 70))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApHighTemperatureThreshold.setStatus('current')
hwMacApLowTemperatureThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLowTemperatureThreshold.setStatus('current')
hwMacApReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 79), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApReset.setStatus('current')
hwMacApStaticIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 80), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApStaticIpAddress.setStatus('current')
hwMacApStaticNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 81), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApStaticNetMask.setStatus('current')
hwMacApStaticGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 82), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApStaticGatewayIp.setStatus('current')
hwMacApAttackFloodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 83), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApAttackFloodInterval.setStatus('current')
hwMACApAttackFloodTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 84), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackFloodTimes.setStatus('current')
hwMACApDynamicBlacklistEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 85), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApDynamicBlacklistEnable.setStatus('current')
hwMACApDynamicBlacklistAgingInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 86), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApDynamicBlacklistAgingInt.setStatus('current')
hwMACApAttackPskInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 87), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackPskInterval.setStatus('current')
hwMACApAttackPskTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 88), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackPskTimes.setStatus('current')
hwMACApAccessBalanceGap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 89), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMACApAccessBalanceGap.setStatus('current')
hwMACApIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 90), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMACApIpv6Address.setStatus('current')
hwMACApIpv6NetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 91), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApIpv6NetMask.setStatus('current')
hwMACApGatewayIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 92), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApGatewayIpv6.setStatus('current')
hwMACApIpv6DNS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 93), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApIpv6DNS.setStatus('current')
hwMACApProtectAcIPv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 94), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApProtectAcIPv6Addr.setStatus('current')
hwMACApLineatePortCfgMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLineatePortCfgMtu.setStatus('current')
hwMACApLineatePortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 96), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLineatePortMacAddress.setStatus('current')
hwMACApAccessBalanceSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMACApAccessBalanceSwitch.setStatus('current')
hwMACApNatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 98), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApNatIpAddress.setStatus('current')
hwMACApAttackFloodQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackFloodQuietTime.setStatus('current')
hwMACApAttackPskQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackPskQuietTime.setStatus('current')
hwMACApAttackWeakivQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 101), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackWeakivQuietTime.setStatus('current')
hwMACApAttackSpoofQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 36000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApAttackSpoofQuietTime.setStatus('current')
hwMACApBootCountTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 103), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApBootCountTotal.setStatus('current')
hwMACApBootCountPowerOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 104), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApBootCountPowerOff.setStatus('current')
hwMACApBootCountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 9, 1, 105), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMACApBootCountRowStatus.setStatus('current')
hwMacApLineatePortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10), )
if mibBuilder.loadTexts: hwMacApLineatePortTable.setStatus('current')
hwMacApLineatePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortIndex"))
if mibBuilder.loadTexts: hwMacApLineatePortEntry.setStatus('current')
hwMacApLineatePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMacApLineatePortIndex.setStatus('current')
hwMacApLineatePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fe", 1), ("ge", 2), ("gpon", 3), ("epon", 4), ("adsl2plus", 5), ("trunk", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortType.setStatus('current')
hwMacApLineatePortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortDesc.setStatus('current')
hwMacApLineatePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortState.setStatus('current')
hwMacApLineatePortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortSpeed.setStatus('current')
hwMacApMultiLineatePortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("half", 1), ("full", 2), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApMultiLineatePortDuplex.setStatus('current')
hwMacApMultiLineatePortNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("auto", 1), ("forced", 2), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApMultiLineatePortNegotiation.setStatus('current')
hwMacApMultiLineatePortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("root", 1), ("endpoint", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortMode.setStatus('current')
hwMacApMultiLineatePortUserIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortUserIsolate.setStatus('current')
hwMacApMultiLineatePortStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortStpEnable.setStatus('current')
hwMacApMultiLineatePortVlanTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortVlanTagged.setStatus('current')
hwMacApMultiLineatePortVlanUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortVlanUntagged.setStatus('current')
hwMacApMultiLineatePortPvidVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortPvidVlan.setStatus('current')
hwMacApMultiLineatePortCRCErrorHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortCRCErrorHighThreshold.setStatus('current')
hwMacApMultiLineatePortCRCErrorLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortCRCErrorLowThreshold.setStatus('current')
hwMacApMultiLineatePortCRCErrorSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortCRCErrorSwitch.setStatus('current')
hwMacApLineatePortAclNumInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNumInbound.setStatus('current')
hwMacApLineatePortAclNumOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNumOutbound.setStatus('current')
hwMacApLineatePortAclNameInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 19), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNameInbound.setStatus('current')
hwMacApLineatePortAclNameOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 20), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNameOutbound.setStatus('current')
hwMacApLineatePortAclSwitchInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclSwitchInbound.setStatus('current')
hwMacApLineatePortAclSwitchOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclSwitchOutbound.setStatus('current')
hwMacApLineatePortAclNumInboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNumInboundIPV6.setStatus('current')
hwMacApLineatePortAclNumOutboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNumOutboundIPV6.setStatus('current')
hwMacApLineatePortAclNameInboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 25), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNameInboundIPV6.setStatus('current')
hwMacApLineatePortAclNameOutboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 26), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclNameOutboundIPV6.setStatus('current')
hwMacApLineatePortAclSwitchInboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclSwitchInboundIPV6.setStatus('current')
hwMacApLineatePortAclSwitchOutboundIPV6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortAclSwitchOutboundIPV6.setStatus('current')
hwMacApMultiLineatePortIsAddInTrunk = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, -1))).clone(namedValues=NamedValues(("exit", 1), ("add", 2), ("unknown", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortIsAddInTrunk.setStatus('current')
hwMacApMultiLineatePortAddedOrExitTrunkID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 10, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApMultiLineatePortAddedOrExitTrunkID.setStatus('current')
hwMacApPerformanceStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11), )
if mibBuilder.loadTexts: hwMacApPerformanceStatTable.setStatus('current')
hwMacApPerformanceStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApMac"))
if mibBuilder.loadTexts: hwMacApPerformanceStatEntry.setStatus('current')
hwMacApMemoryUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApMemoryUseRate.setStatus('current')
hwMacApCpuUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApCpuUseRate.setStatus('current')
hwMacApFlashFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApFlashFreeSize.setStatus('current')
hwMacApTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApTemperature.setStatus('current')
hwMacApOnlineUserNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOnlineUserNum.setStatus('current')
hwMacApUpPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortSpeed.setStatus('current')
hwMacApUpPortRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvFrames.setStatus('current')
hwMacApUpPortRecvRightFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvRightFrames.setStatus('current')
hwMacApUpPortRecvErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvErrorFrames.setStatus('current')
hwMacApUpPortSendFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortSendFrames.setStatus('current')
hwMacApUpPortRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvBytes.setStatus('current')
hwMacApUpPortSendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortSendBytes.setStatus('current')
hwMacAPUpPortPER = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAPUpPortPER.setStatus('current')
hwMacAPWirelessUpPortTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAPWirelessUpPortTraffic.setStatus('current')
hwMacAPUpPortTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAPUpPortTraffic.setStatus('current')
hwMacApAirportSendDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportSendDropFrames.setStatus('current')
hwMacApEthportRecvDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvDropFrames.setStatus('current')
hwMacApAirportUpTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 18), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportUpTraffic.setStatus('current')
hwMacApAirportDwTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportDwTraffic.setStatus('current')
hwMacApEthportDwTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportDwTraffic.setStatus('current')
hwMacApEthportUpTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportUpTraffic.setStatus('current')
hwMacApAirportRecvDropPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportRecvDropPacket.setStatus('current')
hwMacApAirportRecvErrorPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportRecvErrorPacket.setStatus('current')
hwMacApEthportRecvUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvUnicastPacket.setStatus('current')
hwMacApEthportRecvNonUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvNonUnicastPacket.setStatus('current')
hwMacApEthportSendUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportSendUnicastPacket.setStatus('current')
hwMacApEthportSendNonUnicastPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportSendNonUnicastPacket.setStatus('current')
hwMacApAvgRCPUUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAvgRCPUUseRate.setStatus('current')
hwMacApAvgRMemoryUseRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAvgRMemoryUseRate.setStatus('current')
hwMacEthportSendDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacEthportSendDropFrames.setStatus('current')
hwMacEthportSendErrorFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacEthportSendErrorFrames.setStatus('current')
hwMacEthportUpDwnTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacEthportUpDwnTimes.setStatus('current')
hwMacApAirportRecvUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportRecvUnicastFrames.setStatus('current')
hwMacApEthportRecvUnknownFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvUnknownFrames.setStatus('current')
hwMacEthportUpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacEthportUpRate.setStatus('current')
hwMacEthportDownRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacEthportDownRate.setStatus('current')
hwMacApUpPortRecvFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvFrames64Bits.setStatus('current')
hwMacApUpPortRecvRightFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvRightFrames64Bits.setStatus('current')
hwMacApUpPortRecvErrorFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvErrorFrames64Bits.setStatus('current')
hwMacApUpPortSendFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortSendFrames64Bits.setStatus('current')
hwMacApUpPortRecvBytes64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortRecvBytes64Bits.setStatus('current')
hwMacApUpPortSendBytes64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApUpPortSendBytes64Bits.setStatus('current')
hwMacAPWirelessUpPortTraffic64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAPWirelessUpPortTraffic64Bits.setStatus('current')
hwMacAPUpPortTraffic64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacAPUpPortTraffic64Bits.setStatus('current')
hwMacApAirportSendDropFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportSendDropFrames64Bits.setStatus('current')
hwMacApEthportRecvDropFrames64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvDropFrames64Bits.setStatus('current')
hwMacApAirportRecvDropPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportRecvDropPacket64Bits.setStatus('current')
hwMacApAirportRecvErrorPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApAirportRecvErrorPacket64Bits.setStatus('current')
hwMacApEthportRecvUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvUnicastPacket64Bits.setStatus('current')
hwMacApEthportRecvNonUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportRecvNonUnicastPacket64Bits.setStatus('current')
hwMacApEthportSendUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportSendUnicastPacket64Bits.setStatus('current')
hwMacApEthportSendNonUnicastPacket64Bits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 11, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApEthportSendNonUnicastPacket64Bits.setStatus('current')
hwApLineportInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12), )
if mibBuilder.loadTexts: hwApLineportInfoTable.setStatus('current')
hwApLineportInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineportIndex"))
if mibBuilder.loadTexts: hwApLineportInfoEntry.setStatus('current')
hwApLineportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: hwApLineportIndex.setStatus('current')
hwApLineportDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineportDesc.setStatus('current')
hwApLineportType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineportType.setStatus('current')
hwApLineportMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineportMtu.setStatus('current')
hwApLineportSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineportSpeed.setStatus('current')
hwApLineportMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineportMac.setStatus('current')
hwApLineportAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("adminUp", 1), ("down", 2), ("adminDown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineportAdminStatus.setStatus('current')
hwApLineportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineportNum.setStatus('current')
hwMacApLineportInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13), )
if mibBuilder.loadTexts: hwMacApLineportInfoTable.setStatus('current')
hwMacApLineportInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportIndex"))
if mibBuilder.loadTexts: hwMacApLineportInfoEntry.setStatus('current')
hwMacApLineportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: hwMacApLineportIndex.setStatus('current')
hwMacApLineportDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineportDesc.setStatus('current')
hwMacApLineportType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineportType.setStatus('current')
hwMacApLineportMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineportMtu.setStatus('current')
hwMacApLineportSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineportSpeed.setStatus('current')
hwMacApLineportMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineportMac.setStatus('current')
hwMacApLineportAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("adminUp", 1), ("down1", 2), ("adminDown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineportAdminStatus.setStatus('current')
hwMacApLineportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 13, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineportNum.setStatus('current')
hwApLldpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14), )
if mibBuilder.loadTexts: hwApLldpTable.setStatus('current')
hwApLldpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemIndex"))
if mibBuilder.loadTexts: hwApLldpEntry.setStatus('current')
hwApLldpRemLocalPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApLldpRemLocalPortNum.setStatus('current')
hwApLldpRemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 2), Integer32())
if mibBuilder.loadTexts: hwApLldpRemIndex.setStatus('current')
hwApLldpRemChassisIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemChassisIdSubtype.setStatus('current')
hwApLldpRemChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemChassisId.setStatus('current')
hwApLldpRemPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemPortIdSubtype.setStatus('current')
hwApLldpRemPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemPortId.setStatus('current')
hwApLldpRemPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemPortDesc.setStatus('current')
hwApLldpRemSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemSysName.setStatus('current')
hwApLldpRemSysDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemSysDesc.setStatus('current')
hwApLldpRemSysCapSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemSysCapSupported.setStatus('current')
hwApLldpRemSysCapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 14, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemSysCapEnabled.setStatus('current')
hwMacApLldpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15), )
if mibBuilder.loadTexts: hwMacApLldpTable.setStatus('current')
hwMacApLldpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemIndex"))
if mibBuilder.loadTexts: hwMacApLldpEntry.setStatus('current')
hwMacApLldpRemLocalPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMacApLldpRemLocalPortNum.setStatus('current')
hwMacApLldpRemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacApLldpRemIndex.setStatus('current')
hwMacApLldpRemChassisIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemChassisIdSubtype.setStatus('current')
hwMacApLldpRemChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemChassisId.setStatus('current')
hwMacApLldpRemPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemPortIdSubtype.setStatus('current')
hwMacApLldpRemPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemPortId.setStatus('current')
hwMacApLldpRemPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemPortDesc.setStatus('current')
hwMacApLldpRemSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemSysName.setStatus('current')
hwMacApLldpRemSysDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemSysDesc.setStatus('current')
hwMacApLldpRemSysCapSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemSysCapSupported.setStatus('current')
hwMacApLldpRemSysCapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 15, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLldpRemSysCapEnabled.setStatus('current')
hwAplldpRemManAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16), )
if mibBuilder.loadTexts: hwAplldpRemManAddrTable.setStatus('current')
hwAplldpRemManAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemManAddrSubtype"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemManAddr"))
if mibBuilder.loadTexts: hwAplldpRemManAddrEntry.setStatus('current')
hwApLldpRemManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApLldpRemManAddrSubtype.setStatus('current')
hwApLldpRemManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwApLldpRemManAddr.setStatus('current')
hwApLldpRemManAddrIfSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemManAddrIfSubtype.setStatus('current')
hwApLldpRemManAddrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemManAddrIfId.setStatus('current')
hwApLldpRemManAddrOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 16, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLldpRemManAddrOID.setStatus('current')
hwMacAplldpRemManAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17), )
if mibBuilder.loadTexts: hwMacAplldpRemManAddrTable.setStatus('current')
hwMacAplldpRemManAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMACApLldpRemManAddrSubtype"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMACApLldpRemManAddr"))
if mibBuilder.loadTexts: hwMacAplldpRemManAddrEntry.setStatus('current')
hwMACApLldpRemManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMACApLldpRemManAddrSubtype.setStatus('current')
hwMACApLldpRemManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwMACApLldpRemManAddr.setStatus('current')
hwMACApLldpRemManAddrIfSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLldpRemManAddrIfSubtype.setStatus('current')
hwMACApLldpRemManAddrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLldpRemManAddrIfId.setStatus('current')
hwMACApLldpRemManAddrOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 17, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLldpRemManAddrOID.setStatus('current')
hwApOpticalInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18), )
if mibBuilder.loadTexts: hwApOpticalInfoTable.setStatus('current')
hwApOpticalInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"))
if mibBuilder.loadTexts: hwApOpticalInfoEntry.setStatus('current')
hwApOpticalNominalBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalNominalBitRate.setStatus('current')
hwApOpticalLinkLen9X125km = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalLinkLen9X125km.setStatus('current')
hwApOpticalLinkLen50X125X100m = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalLinkLen50X125X100m.setStatus('current')
hwApOpticalLinkLen62p5X125X10m = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalLinkLen62p5X125X10m.setStatus('current')
hwApOpticalLinkLenCopper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalLinkLenCopper.setStatus('current')
hwApOpticalSfpConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalSfpConnector.setStatus('current')
hwApOpticalDdmVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalDdmVoltage.setStatus('current')
hwApOpticalDdmTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalDdmTxBiasCurrent.setStatus('current')
hwApOpticalDdmTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalDdmTxPower.setStatus('current')
hwApOpticalDdmRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalDdmRxPower.setStatus('current')
hwApOpticalDdmTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalDdmTemperature.setStatus('current')
hwApOpticalVdndorOui = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalVdndorOui.setStatus('current')
hwApOpticalVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalVendorName.setStatus('current')
hwApOpticalVendorPn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalVendorPn.setStatus('current')
hwApOpticalVendorRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalVendorRev.setStatus('current')
hwApOpticalVendorSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 18, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApOpticalVendorSn.setStatus('current')
hwMacApOpticalInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19), )
if mibBuilder.loadTexts: hwMacApOpticalInfoTable.setStatus('current')
hwMacApOpticalInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"))
if mibBuilder.loadTexts: hwMacApOpticalInfoEntry.setStatus('current')
hwMacApOpticalNominalBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalNominalBitRate.setStatus('current')
hwMacApOpticalLinkLen9X125km = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalLinkLen9X125km.setStatus('current')
hwMacApOpticalLinkLen50X125X100m = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalLinkLen50X125X100m.setStatus('current')
hwMacApOpticalLinkLen62p5X125X10m = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalLinkLen62p5X125X10m.setStatus('current')
hwMacApOpticalLinkLenCopper = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalLinkLenCopper.setStatus('current')
hwMacApOpticalSfpConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalSfpConnector.setStatus('current')
hwMacApOpticalDdmVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalDdmVoltage.setStatus('current')
hwMacApOpticalDdmTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalDdmTxBiasCurrent.setStatus('current')
hwMacApOpticalDdmTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalDdmTxPower.setStatus('current')
hwMacApOpticalDdmRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalDdmRxPower.setStatus('current')
hwMacApOpticalDdmTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalDdmTemperature.setStatus('current')
hwMacApOpticalVdndorOui = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalVdndorOui.setStatus('current')
hwMacApOpticalVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalVendorName.setStatus('current')
hwMacApOpticalVendorPn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalVendorPn.setStatus('current')
hwMacApOpticalVendorRev = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalVendorRev.setStatus('current')
hwMacApOpticalVendorSn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 19, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOpticalVendorSn.setStatus('current')
hwApSysnameTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 20), )
if mibBuilder.loadTexts: hwApSysnameTable.setStatus('current')
hwApSysnameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 20, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"))
if mibBuilder.loadTexts: hwApSysnameEntry.setStatus('current')
hwApSysnameApId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysnameApId.setStatus('current')
hwApSysnameApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 20, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApSysnameApMac.setStatus('current')
hwApPhysicalAttrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 21), )
if mibBuilder.loadTexts: hwApPhysicalAttrTable.setStatus('current')
hwApPhysicalAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 21, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"))
if mibBuilder.loadTexts: hwApPhysicalAttrEntry.setStatus('current')
hwApElectronicLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 21, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1025))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApElectronicLabel.setStatus('current')
hwMacApPhysicalAttrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 22), )
if mibBuilder.loadTexts: hwMacApPhysicalAttrTable.setStatus('current')
hwMacApPhysicalAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 22, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"))
if mibBuilder.loadTexts: hwMacApPhysicalAttrEntry.setStatus('current')
hwMacApElectronicLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 22, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1025))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApElectronicLabel.setStatus('current')
hwApLineportStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23), )
if mibBuilder.loadTexts: hwApLineportStatTable.setStatus('current')
hwApLineportStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortIndex"))
if mibBuilder.loadTexts: hwApLineportStatEntry.setStatus('current')
hwApLinePortStatClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLinePortStatClear.setStatus('current')
hwApLinePortUpDwnTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortUpDwnTimes.setStatus('current')
hwApLinePortInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortInPkts.setStatus('current')
hwApLinePortInUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortInUnicastPkts.setStatus('current')
hwApLinePortInNonUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortInNonUnicastPkts.setStatus('current')
hwApLinePortInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortInBytes.setStatus('current')
hwApLinePortInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortInErrorPkts.setStatus('current')
hwApLinePortInDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortInDiscardPkts.setStatus('current')
hwApLinePortOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortOutPkts.setStatus('current')
hwApLinePortOutUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortOutUnicastPkts.setStatus('current')
hwApLinePortOutNonUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortOutNonUnicastPkts.setStatus('current')
hwApLinePortOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortOutBytes.setStatus('current')
hwApLinePortOutErrorsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortOutErrorsPkts.setStatus('current')
hwApLinePortOutDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 23, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLinePortOutDiscardPkts.setStatus('current')
hwMacApLineportStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24), )
if mibBuilder.loadTexts: hwMacApLineportStatTable.setStatus('current')
hwMacApLineportStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortIndex"))
if mibBuilder.loadTexts: hwMacApLineportStatEntry.setStatus('current')
hwMacApLinePortStatClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLinePortStatClear.setStatus('current')
hwMacApLinePortUpDwnTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortUpDwnTimes.setStatus('current')
hwMacApLinePortInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortInPkts.setStatus('current')
hwMacApLinePortInUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortInUnicastPkts.setStatus('current')
hwMacApLinePortInNonUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortInNonUnicastPkts.setStatus('current')
hwMacApLinePortInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortInBytes.setStatus('current')
hwMacApLinePortInErrorPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortInErrorPkts.setStatus('current')
hwMacApLinePortInDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortInDiscardPkts.setStatus('current')
hwMacApLinePortOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortOutPkts.setStatus('current')
hwMacApLinePortOutUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortOutUnicastPkts.setStatus('current')
hwMacApLinePortOutNonUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortOutNonUnicastPkts.setStatus('current')
hwMacApLinePortOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortOutBytes.setStatus('current')
hwMacApLinePortOutErrorsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortOutErrorsPkts.setStatus('current')
hwMacApLinePortOutDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 24, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLinePortOutDiscardPkts.setStatus('current')
hwApLineatePortLldpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25), )
if mibBuilder.loadTexts: hwApLineatePortLldpCfgTable.setStatus('current')
hwApLineatePortLldpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpIndex"))
if mibBuilder.loadTexts: hwApLineatePortLldpCfgEntry.setStatus('current')
hwApLineatePortLldpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApLineatePortLldpIndex.setStatus('current')
hwApLineatePortLldpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpEnable.setStatus('current')
hwApLineatePortLldpManageAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpManageAddr.setStatus('current')
hwApLineatePortLldpPortDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpPortDes.setStatus('current')
hwApLineatePortLldpSysCab = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpSysCab.setStatus('current')
hwApLineatePortLldpSysDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpSysDes.setStatus('current')
hwApLineatePortLldpSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpSysName.setStatus('current')
hwApLineatePortLldpDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpDelay.setStatus('current')
hwApLineatePortLldpHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpHoldMultiplier.setStatus('current')
hwApLineatePortLldpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpInterval.setStatus('current')
hwApLineatePortLldpRestartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpRestartDelay.setStatus('current')
hwApLineatePortLldpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpAdminStatus.setStatus('current')
hwApLineatePortLldpReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 25, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwApLineatePortLldpReportInterval.setStatus('current')
hwMacApLineatePortLldpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26), )
if mibBuilder.loadTexts: hwMacApLineatePortLldpCfgTable.setStatus('current')
hwMacApLineatePortLldpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortLldpIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"))
if mibBuilder.loadTexts: hwMacApLineatePortLldpCfgEntry.setStatus('current')
hwMacApLineatePortLldpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMacApLineatePortLldpIndex.setStatus('current')
hwMacApLineatePortLldpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpEnable.setStatus('current')
hwMacApLineatePortLldpManageAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpManageAddr.setStatus('current')
hwMacApLineatePortLldpPortDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpPortDes.setStatus('current')
hwMacApLineatePortLldpSysCab = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpSysCab.setStatus('current')
hwMacApLineatePortLldpSysDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpSysDes.setStatus('current')
hwMacApLineatePortLldpSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpSysName.setStatus('current')
hwMacApLineatePortLldpDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpDelay.setStatus('current')
hwMacApLineatePortLldpHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpHoldMultiplier.setStatus('current')
hwMacApLineatePortLldpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpInterval.setStatus('current')
hwMacApLineatePortLldpRestartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRestartDelay.setStatus('current')
hwMacApLineatePortLldpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpAdminStatus.setStatus('current')
hwMacApLineatePortLldpReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 26, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApLineatePortLldpReportInterval.setStatus('current')
hwApLineatePortLldpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27), )
if mibBuilder.loadTexts: hwApLineatePortLldpTable.setStatus('current')
hwApLineatePortLldpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpRemIndex"))
if mibBuilder.loadTexts: hwApLineatePortLldpEntry.setStatus('current')
hwApLineatePortLldpRemLocalPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApLineatePortLldpRemLocalPortNum.setStatus('current')
hwApLineatePortLldpRemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 2), Integer32())
if mibBuilder.loadTexts: hwApLineatePortLldpRemIndex.setStatus('current')
hwApLineatePortLldpRemChassisIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemChassisIdSubtype.setStatus('current')
hwApLineatePortLldpRemChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemChassisId.setStatus('current')
hwApLineatePortLldpRemPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemPortIdSubtype.setStatus('current')
hwApLineatePortLldpRemPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemPortId.setStatus('current')
hwApLineatePortLldpRemPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemPortDesc.setStatus('current')
hwApLineatePortLldpRemSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemSysName.setStatus('current')
hwApLineatePortLldpRemSysDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemSysDesc.setStatus('current')
hwApLineatePortLldpRemSysCapSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemSysCapSupported.setStatus('current')
hwApLineatePortLldpRemSysCapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 27, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemSysCapEnabled.setStatus('current')
hwMacApLineatePortLldpTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28), )
if mibBuilder.loadTexts: hwMacApLineatePortLldpTable.setStatus('current')
hwMacApLineatePortLldpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortLldpRemIndex"))
if mibBuilder.loadTexts: hwMacApLineatePortLldpEntry.setStatus('current')
hwMacApLineatePortLldpRemLocalPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemLocalPortNum.setStatus('current')
hwMacApLineatePortLldpRemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 2), Integer32())
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemIndex.setStatus('current')
hwMacApLineatePortLldpRemChassisIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemChassisIdSubtype.setStatus('current')
hwMacApLineatePortLldpRemChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemChassisId.setStatus('current')
hwMacApLineatePortLldpRemPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemPortIdSubtype.setStatus('current')
hwMacApLineatePortLldpRemPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemPortId.setStatus('current')
hwMacApLineatePortLldpRemPortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemPortDesc.setStatus('current')
hwMacApLineatePortLldpRemSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemSysName.setStatus('current')
hwMacApLineatePortLldpRemSysDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemSysDesc.setStatus('current')
hwMacApLineatePortLldpRemSysCapSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemSysCapSupported.setStatus('current')
hwMacApLineatePortLldpRemSysCapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 28, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemSysCapEnabled.setStatus('current')
hwApLineatePortLldpRemManAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29), )
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddrTable.setStatus('current')
hwApLineatePortLldpRemManAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpRemIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpRemManAddrSubtype"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortLldpRemManAddr"))
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddrEntry.setStatus('current')
hwApLineatePortLldpRemManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29, 1, 1), Integer32())
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddrSubtype.setStatus('current')
hwApLineatePortLldpRemManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddr.setStatus('current')
hwApLineatePortLldpRemManAddrIfSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddrIfSubtype.setStatus('current')
hwApLineatePortLldpRemManAddrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddrIfId.setStatus('current')
hwApLineatePortLldpRemManAddrOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 29, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwApLineatePortLldpRemManAddrOID.setStatus('current')
hwMacApLineatePortLldpRemManAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30), )
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemManAddrTable.setStatus('current')
hwMacApLineatePortLldpRemManAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApMac"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortLldpRemLocalPortNum"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortLldpRemIndex"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMACApLineatePortLldpRemManAddrSubtype"), (0, "HUAWEI-WLAN-DEVICE-MIB", "hwMACApLineatePortLldpRemManAddr"))
if mibBuilder.loadTexts: hwMacApLineatePortLldpRemManAddrEntry.setStatus('current')
hwMACApLineatePortLldpRemManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMACApLineatePortLldpRemManAddrSubtype.setStatus('current')
hwMACApLineatePortLldpRemManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwMACApLineatePortLldpRemManAddr.setStatus('current')
hwMACApLineatePortLldpRemManAddrIfSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLineatePortLldpRemManAddrIfSubtype.setStatus('current')
hwMACApLineatePortLldpRemManAddrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLineatePortLldpRemManAddrIfId.setStatus('current')
hwMACApLineatePortLldpRemManAddrOID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 30, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMACApLineatePortLldpRemManAddrOID.setStatus('current')
hwApOnlineFailTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 31), )
if mibBuilder.loadTexts: hwApOnlineFailTable.setStatus('current')
hwApOnlineFailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 31, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApOnlineFailMac"))
if mibBuilder.loadTexts: hwApOnlineFailEntry.setStatus('current')
hwApOnlineFailMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 31, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwApOnlineFailMac.setStatus('current')
hwMacApOnlineFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 31, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOnlineFailTime.setStatus('current')
hwMacApOnlineFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 31, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOnlineFailReason.setStatus('current')
hwMacApOnlineFailRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 31, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacApOnlineFailRowStatus.setStatus('current')
hwApOfflineTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 32), )
if mibBuilder.loadTexts: hwApOfflineTable.setStatus('current')
hwApOfflineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 32, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwApOfflineMac"))
if mibBuilder.loadTexts: hwApOfflineEntry.setStatus('current')
hwApOfflineMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 32, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwApOfflineMac.setStatus('current')
hwMacApOfflineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 32, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOfflineTime.setStatus('current')
hwMacApOfflineReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 32, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacApOfflineReason.setStatus('current')
hwMacApOfflineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 6, 32, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacApOfflineRowStatus.setStatus('current')
hwAcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7))
hwAcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1), )
if mibBuilder.loadTexts: hwAcTable.setStatus('current')
hwAcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMemAcIndex"))
if mibBuilder.loadTexts: hwAcEntry.setStatus('current')
hwMemAcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hwMemAcIndex.setStatus('current')
hwAcIpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAcIpVersion.setStatus('current')
hwAcIPv4Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAcIPv4Address.setStatus('current')
hwAcIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAcIPv6Address.setStatus('current')
hwAcState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("fault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwAcState.setStatus('current')
hwAcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 1, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAcRowStatus.setStatus('current')
hwMobilityGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2), )
if mibBuilder.loadTexts: hwMobilityGroupTable.setStatus('current')
hwMobilityGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2, 1), ).setIndexNames((0, "HUAWEI-WLAN-DEVICE-MIB", "hwMobilityGroupName"))
if mibBuilder.loadTexts: hwMobilityGroupEntry.setStatus('current')
hwMobilityGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2, 1, 1), OctetString())
if mibBuilder.loadTexts: hwMobilityGroupName.setStatus('current')
hwMobilityGroupMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMobilityGroupMemberList.setStatus('current')
hwMobilityGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMobilityGroupStatus.setStatus('current')
hwMobilityGroupMemberOpcode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("add", 1), ("del", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMobilityGroupMemberOpcode.setStatus('current')
hwMobilityGroupMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMobilityGroupMemberIndex.setStatus('current')
hwWlanDeviceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 8))
hwWlanDeviceConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9))
hwWlanDeviceCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 1))
hwWlanDeviceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 1, 1)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwWlanDeviceNotifyGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwWlanDeviceNotifyObjectsGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAuthListGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApGroup"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanDeviceCompliance = hwWlanDeviceCompliance.setStatus('current')
hwWlanDeviceObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2))
hwWlanDeviceNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 1)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNormalNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeNotMatchNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApColdstartNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApConfigCommitNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAddOffLineNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApConfirmNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwUnAuthorizedApRecordExistNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwUnAuthorizedApRecordClearNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuOverloadNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuOverloadRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryOverloadNOtify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryOverloadRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPStaFullNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPStaFullRecoverNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcDevicesSwitchNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTimeSynFailNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwDyingGaspTrapNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultNotifyFat"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNormalNotifyFat"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTemperatureTooLowNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTemperatureTooLowRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTemperatureTooHighNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTemperatureTooHighRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwRadioDownNotifyFat"), ("HUAWEI-WLAN-DEVICE-MIB", "hwRadioDownRecovNotifyFat"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPowerTooHighNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPowerTooHighRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPowerTooLowNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPowerTooLowRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperatureTooHighNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperatureTooHighRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperatureTooLowNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperatureTooLowRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotSupportCountryCodeNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApReceivedInvalidArpNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpExceedThresholdNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApColdBootNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApColdBootRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApHotBootNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApHotBootRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStationOnlineNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStationOfflineNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStationSignalStrengthLowThanThresholdNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPBroadcastStormDownNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPBroadcastStormDownRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPBroadcastStormUpNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPBroadcastStormUpRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBroadcastRestrainDownNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBroadcastRestrainDownRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBroadcastRestrainUpNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBroadcastRestrainUpRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCRCTooHighNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCRCTooHighRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApConflictApNameNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLicenseNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFmeaIICFaultNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFmeaIICFaultRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFmeaPHYFaultNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFmeaPHYFaultRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFmeaFaultNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFmeaFaultRestoreNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalInsertNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRemoveNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApReceivedInvalidArpNewNotify"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApVersionMismatchNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanDeviceNotifyGroup = hwWlanDeviceNotifyGroup.setStatus('current')
hwWlanDeviceNotifyObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 2)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApActualType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuOccupancyRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryOccupancyRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPermitStaNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStaAuthFailCause"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcSystemSwitchType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRadioNotifyPara"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalRxPower"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalTemperature"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCfgCountryCode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackSrcMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackDstMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackSrcIP"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpCfgRateThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpActualRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyRadioId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyOrRestoreTemperature"), ("HUAWEI-WLAN-DEVICE-MIB", "hwOccurTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootNotifyName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwSignalStrengthThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwStaBroadcastFlux"), ("HUAWEI-WLAN-DEVICE-MIB", "hwBroadcastWarnThresholdDown"), ("HUAWEI-WLAN-DEVICE-MIB", "hwBroadcastWarnThresholdUp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwBroadcastRestrainThresholdDown"), ("HUAWEI-WLAN-DEVICE-MIB", "hwBroadcastRestrainThresholdUp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBroadcastFlux"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcErrActual"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNotifyWlanId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLicenseInfo"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcPortType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwCrcPortID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApArpAttackDropNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIfIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFaultInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwWlanDeviceNotifyObjectsGroup = hwWlanDeviceNotifyObjectsGroup.setStatus('current')
hwApTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 3)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeLineatePortNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeRadioNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeMaxStaNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeMaxSsidNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeAntennaGain"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeReset"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeLineatePortType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeRadioType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwRadioMaxSpatialStreamsNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwRadioMaxAntennasNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwRadioMaxVAPNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTypeRadioAntennaGain"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLocalAssocResSwitch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApTypeGroup = hwApTypeGroup.setStatus('current')
hwApProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 4)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApEthPortMtu"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApDosDefend"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApWorkMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogBackupServerIp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogBackupMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSampleTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApStatisticsInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEapStartMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEapStartUnicastMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEapStartTransform"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEapResponseMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEapResponseUnicastMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEapResponseTransform"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOfflineManagement"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAlarmRestrictionMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAlarmRestrictionPeriod"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAp4WayHandshakeRoamPolicy"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogRecordLevel"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogBackupPeriodTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogRecordFtpMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogServerUsername"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogServerUserPassword"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLogServerIp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileTelnetSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSshSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileDhcpTrustPort"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileConsoleSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileMaxUserNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileNdTrustPort"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLedSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileDefault"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileBatchStart"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileBatchNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileBatchReturnNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProfileBatchNameList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApProfileGroup = hwApProfileGroup.setStatus('current')
hwApAuthListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 5)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApMacWhitelistRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSnWhitelistRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAuthMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMacWhitelistBatchQueryStartNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMacWhitelistBatchQueryNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMacWhitelistBatchQueryList"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMacWhitelistBatchQueryReturnNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSnWhitelistBatchQueryStartNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSnWhitelistBatchQueryNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSnWhitelistBatchQueryList"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSnWhitelistBatchQueryReturnNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMacBlacklistRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSnBlacklistRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApAuthListGroup = hwApAuthListGroup.setStatus('current')
hwApRegionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 6)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionDeployMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionApNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionApIndexMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionForwardMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionCountryCode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionDefault"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionAllExistRegionIndexMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionBatchStart"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionBatchNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionBatchReturnNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionBatchNameList"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionBatchDeployMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSrcRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApDestRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionScanChannel2G"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionScanChannel5G"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionCalibrateChannel2G"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionCalibrateChannel5G"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRegionCalibrate5gBandWidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApRegionGroup = hwApRegionGroup.setStatus('current')
hwApGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 7))
for _hwApGroup_obj in [[("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedProfileName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRunState"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSoftwareVersion"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApHardwareVersion"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpufrequency"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApDomain"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIpNetMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApGatewayIp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemorySize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFlashSize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRunTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpEthPortSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpEthPortSpeedMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpEthPortDuplex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpEthPortDuplexMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAdminOper"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRowstatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPerformanceStatCycle"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApDNS"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApRunningMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApForwardMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAntennaMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNEnumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOnlineTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysSoftwareDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysHardtwareDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysManufacture"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysSoftwareName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysSoftwareVendor"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApManagementVlanID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUsername"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPassword"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAcIP1"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAcIP2"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAcIP3"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAcIP4"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIpMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpManageAddr"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpPortDes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpSysCab"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpSysDes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpDelay"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpHoldMultiplier"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRestartDelay"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpAdminStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpReportInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBomCode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProtectAcPriority"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProtectAcIP"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalHighRxPowerThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalLowRxPowerThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalHighTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalLowTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApKeepService"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPriorityAccessMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineateportMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineateportVlanTagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineateportVlanUntagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineateportPvidVlan"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineateportUserIsolate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineateportStpEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApHighTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLowTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApReset"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApStaticIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApStaticNetMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApStaticGatewayIp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackFloodInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackFloodTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApDynamicBlacklistEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApDynamicBlacklistAgingInt"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackPskInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackPskTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAccessBalanceGap"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIpv6Address"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIpv6NetMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApGatewayIpv6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApIpv6DNS"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApProtectAcIPv6Addr"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortCfgMtu"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortMacAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAccessBalanceSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApNatIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackFloodQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackPskQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackWeakivQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAttackSpoofQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootCountTotal"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootCountPowerOff"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBootCountRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortState"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortDuplex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortNegotiation"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortUserIsolate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortStpEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortVlanTagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortVlanUntagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortPvidVlan"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortCRCErrorHighThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortCRCErrorLowThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortCRCErrorSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNumInbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNumOutbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNameInbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNameOutbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclSwitchInbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclSwitchOutbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNumInboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNumOutboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNameInboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclNameOutboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclSwitchInboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineatePortAclSwitchOutboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortIsAddInTrunk"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMultiLineatePortAddedOrExitTrunkID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAllExistApIndexMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwUnAuthorizedApRecordNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwUnAuthorizedApRecordAdmin"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBatchIndexStart"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBatchIndexNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBatchIndexReturnNumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBatchState"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApBatchNameList"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingCount"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingPacketSize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingWaitTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingTimeOut"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultSuccessCount"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultFailureCount"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultAverageResponseTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultMinimumResponseTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultMaximumResponseTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApPingResultFlag"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApMemoryUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApCpuUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApFlashFreeSize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApTemperature"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOnlineUserNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortRecvFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortRecvRightFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortRecvErrorFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortSendFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortRecvBytes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUpPortSendBytes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPUpPortPER"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPWirelessUpPortTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAPUpPortTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAirportSendDropFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportRecvDropFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAirportUpTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAirportDwTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportDwTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportUpTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAirportRecvDropPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAirportRecvErrorPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportRecvUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportRecvNonUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportSendUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportSendNonUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAvgRCPUUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAvgRMemoryUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwEthportSendDropFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwEthportSendErrorFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwEthportUpDwnTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApAirportRecvUnicastFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportRecvUnknownFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportUpRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApEthportDownRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUnauthorizedApType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUnauthorizedApMacAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUnauthorizedApSn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUnauthorizedApIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApUnauthorizedApRecordTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApStaAveSignalStrength"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUsedType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUsedProfileName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUsedRegionIndex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApRunState"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSoftwareVersion"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApHardwareVersion"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApCpuType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApCpufrequency"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMemoryType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApDomain"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApIpNetMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApGatewayIp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMemorySize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApFlashSize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApRunTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpEthPortSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpEthPortSpeedMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpEthPortDuplex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpEthPortDuplexMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAdminOper"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApRowstatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApPerformanceStatCycle"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApDNS"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApRunningMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApForwardMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAntennaMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApCpuThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMemThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApNEnumber"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOnlineTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSysSoftwareDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSysHardtwareDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSysManufacture"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSysSoftwareName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApSysSoftwareVendor"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApManagementVlanID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUsername"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApPassword"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAcIP1"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAcIP2"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAcIP3"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAcIP4"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApIpMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpManageAddr"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpPortDes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpSysCab"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpSysDes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpDelay"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpHoldMultiplier"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRestartDelay"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpAdminStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpReportInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApBomCode")], [("HUAWEI-WLAN-DEVICE-MIB", "hwMacApProtectAcPriority"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApProtectAcIP"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalHighRxPowerThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalLowRxPowerThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalHighTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalLowTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApKeepService"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApPriorityAccessMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineateportMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineateportVlanTagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineateportVlanUntagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineateportPvidVlan"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineateportUserIsolate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineateportStpEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApHighTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLowTemperatureThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApReset"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApStaticIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApStaticNetMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApStaticGatewayIp"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAttackFloodInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackFloodTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApDynamicBlacklistEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApDynamicBlacklistAgingInt"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackPskInterval"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackPskTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAccessBalanceGap"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApIpv6Address"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApIpv6NetMask"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApGatewayIpv6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApIpv6DNS"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApProtectAcIPv6Addr"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApLineatePortCfgMtu"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApLineatePortMacAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAccessBalanceSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApNatIpAddress"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackFloodQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackPskQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackWeakivQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApAttackSpoofQuietTime"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApBootCountTotal"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApBootCountPowerOff"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApBootCountRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortState"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortDuplex"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortNegotiation"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortMode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortUserIsolate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortStpEnable"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortVlanTagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortVlanUntagged"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortPvidVlan"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortCRCErrorHighThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortCRCErrorLowThreshold"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortCRCErrorSwitch"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNumInbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNumOutbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNameInbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNameOutbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclSwitchInbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclSwitchOutbound"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNumInboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNumOutboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNameInboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclNameOutboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclSwitchInboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineatePortAclSwitchOutboundIPV6"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortIsAddInTrunk"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMultiLineatePortAddedOrExitTrunkID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApMemoryUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApCpuUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApFlashFreeSize"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApTemperature"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOnlineUserNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortRecvFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortRecvRightFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortRecvErrorFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortSendFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortRecvBytes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApUpPortSendBytes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacAPUpPortPER"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacAPWirelessUpPortTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacAPUpPortTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAirportSendDropFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportRecvDropFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAirportUpTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAirportDwTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportDwTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportUpTraffic"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAirportRecvDropPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAirportRecvErrorPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportRecvUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportRecvNonUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportSendUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportSendNonUnicastPacket"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAvgRCPUUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAvgRMemoryUseRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacEthportSendDropFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacEthportSendErrorFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacEthportUpDwnTimes"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApAirportRecvUnicastFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApEthportRecvUnknownFrames"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacEthportUpRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacEthportDownRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportMtu"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportAdminStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLineportNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportType"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportMtu"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportSpeed"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportAdminStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLineportNum"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemChassisIdSubtype"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemChassisId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemPortIdSubtype"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemPortId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemPortDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemSysDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemSysCapSupported"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemSysCapEnabled"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemChassisIdSubtype"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemChassisId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemPortIdSubtype"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemPortId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemPortDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemSysName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemSysDesc"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemSysCapSupported"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApLldpRemSysCapEnabled"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemManAddrIfSubtype"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemManAddrIfId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApLldpRemManAddrOID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApLldpRemManAddrIfSubtype"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApLldpRemManAddrIfId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMACApLldpRemManAddrOID"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalNominalBitRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalLinkLen9X125km"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalLinkLen50X125X100m"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalLinkLen62p5X125X10m"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalLinkLenCopper"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalSfpConnector"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalDdmVoltage"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalDdmTxBiasCurrent"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalDdmTxPower"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalDdmRxPower"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalDdmTemperature"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalVdndorOui"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalVendorName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalVendorPn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalVendorRev"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApOpticalVendorSn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalNominalBitRate"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalLinkLen9X125km"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalLinkLen50X125X100m"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalLinkLen62p5X125X10m"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalLinkLenCopper"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalSfpConnector"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalDdmVoltage"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalDdmTxBiasCurrent"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalDdmTxPower"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalDdmRxPower"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalDdmTemperature"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalVdndorOui"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalVendorName"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalVendorPn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalVendorRev"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApOpticalVendorSn"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysnameApId"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApSysnameApMac"), ("HUAWEI-WLAN-DEVICE-MIB", "hwApElectronicLabel"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMacApElectronicLabel")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        hwApGroup = hwApGroup.setObjects(*_hwApGroup_obj)
    else:
        hwApGroup = hwApGroup.setObjects(*_hwApGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwApGroup = hwApGroup.setStatus('current')
hwAcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 6, 139, 2, 9, 2, 8)).setObjects(("HUAWEI-WLAN-DEVICE-MIB", "hwAcIpVersion"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcIPv4Address"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcIPv6Address"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcState"), ("HUAWEI-WLAN-DEVICE-MIB", "hwAcRowStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMobilityGroupMemberList"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMobilityGroupStatus"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMobilityGroupMemberOpcode"), ("HUAWEI-WLAN-DEVICE-MIB", "hwMobilityGroupMemberIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAcGroup = hwAcGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-WLAN-DEVICE-MIB", hwApAttackFloodTimes=hwApAttackFloodTimes, hwOccurTime=hwOccurTime, hwApLinePortInErrorPkts=hwApLinePortInErrorPkts, hwMacApLineateportPvidVlan=hwMacApLineateportPvidVlan, hwApMemoryOverloadNOtify=hwApMemoryOverloadNOtify, hwMacApPriorityAccessMode=hwMacApPriorityAccessMode, hwApFmeaIICFaultRestoreNotify=hwApFmeaIICFaultRestoreNotify, hwApMacWhitelistEntry=hwApMacWhitelistEntry, hwApEthportUpRate=hwApEthportUpRate, hwApPingAddress=hwApPingAddress, hwMacApNEnumber=hwMacApNEnumber, hwMacApLineateportVlanTagged=hwMacApLineateportVlanTagged, hwApLineatePortDesc=hwApLineatePortDesc, hwApDomain=hwApDomain, hwMacApUpPortSpeed=hwMacApUpPortSpeed, hwWlanDeviceNotifyObjectsGroup=hwWlanDeviceNotifyObjectsGroup, hwApRegionAllExistRegionIndexMask=hwApRegionAllExistRegionIndexMask, hwApMultiLineatePortMode=hwApMultiLineatePortMode, hwApEthportSendUnicastPacket64Bits=hwApEthportSendUnicastPacket64Bits, hwApTypeLineatePortIndex=hwApTypeLineatePortIndex, hwMacApEthportRecvNonUnicastPacket64Bits=hwMacApEthportRecvNonUnicastPacket64Bits, hwBroadcastWarnThresholdUp=hwBroadcastWarnThresholdUp, hwApProtectAcIP=hwApProtectAcIP, hwMacEthportUpDwnTimes=hwMacEthportUpDwnTimes, hwApRunState=hwApRunState, hwAcState=hwAcState, hwApGatewayIpv6=hwApGatewayIpv6, hwMACApIpv6DNS=hwMACApIpv6DNS, hwApUpPortSendFrames=hwApUpPortSendFrames, hwMacAPUpPortPER=hwMacAPUpPortPER, hwMacApLineatePortLldpAdminStatus=hwMacApLineatePortLldpAdminStatus, hwApAttackSpoofQuietTime=hwApAttackSpoofQuietTime, hwMACApAttackPskTimes=hwMACApAttackPskTimes, hwMacApEntry=hwMacApEntry, hwMacApLineatePortLldpRemChassisIdSubtype=hwMacApLineatePortLldpRemChassisIdSubtype, hwApUpPortRecvErrorFrames64Bits=hwApUpPortRecvErrorFrames64Bits, hwApEthportRecvNonUnicastPacket64Bits=hwApEthportRecvNonUnicastPacket64Bits, hwApLineatePortLldpRemManAddrEntry=hwApLineatePortLldpRemManAddrEntry, hwMacApLinePortOutErrorsPkts=hwMacApLinePortOutErrorsPkts, hwApTypeRadioNum=hwApTypeRadioNum, hwApOpticalRxPowerTooLowNotify=hwApOpticalRxPowerTooLowNotify, hwApTypeMaxStaNum=hwApTypeMaxStaNum, hwAcEntry=hwAcEntry, hwApLinePortInNonUnicastPkts=hwApLinePortInNonUnicastPkts, hwAPWirelessUpPortTraffic64Bits=hwAPWirelessUpPortTraffic64Bits, hwMACApBootCountRowStatus=hwMACApBootCountRowStatus, hwApElectronicLabel=hwApElectronicLabel, hwApLldpRemSysName=hwApLldpRemSysName, hwApOpticalHighTemperatureThreshold=hwApOpticalHighTemperatureThreshold, hwMacApMultiLineatePortStpEnable=hwMacApMultiLineatePortStpEnable, hwApOpticalTemperatureTooHighNotify=hwApOpticalTemperatureTooHighNotify, hwApLldpTable=hwApLldpTable, hwApLldpRemSysCapSupported=hwApLldpRemSysCapSupported, hwApStaAveSignalStrength=hwApStaAveSignalStrength, hwApMultiLineatePortCRCErrorLowThreshold=hwApMultiLineatePortCRCErrorLowThreshold, hwMACApGatewayIpv6=hwMACApGatewayIpv6, hwApPermitStaNum=hwApPermitStaNum, hwApEthportSendUnicastPacket=hwApEthportSendUnicastPacket, hwMacApMemThreshold=hwMacApMemThreshold, hwApParaStatisticTable=hwApParaStatisticTable, hwMacApPerformanceStatCycle=hwMacApPerformanceStatCycle, hwMacApLldpRemSysCapSupported=hwMacApLldpRemSysCapSupported, hwMacApLineatePortLldpRemPortId=hwMacApLineatePortLldpRemPortId, hwAcSystemSwitchType=hwAcSystemSwitchType, hwMacApOnlineFailRowStatus=hwMacApOnlineFailRowStatus, hwAcIpVersion=hwAcIpVersion, hwMacAPWirelessUpPortTraffic64Bits=hwMacAPWirelessUpPortTraffic64Bits, hwMobilityGroupEntry=hwMobilityGroupEntry, hwMacApDNS=hwMacApDNS, hwMacApSaveMode=hwMacApSaveMode, hwMacApLineatePortAclNumInbound=hwMacApLineatePortAclNumInbound, hwApStaticGatewayIp=hwApStaticGatewayIp, hwApUpPortSendBytes=hwApUpPortSendBytes, hwMacApOpticalHighTemperatureThreshold=hwMacApOpticalHighTemperatureThreshold, hwApPingResultMinimumResponseTime=hwApPingResultMinimumResponseTime, hwApLineatePortLldpRemPortId=hwApLineatePortLldpRemPortId, hwMacApOnlineTime=hwMacApOnlineTime, hwApNotifyOrRestoreTemperature=hwApNotifyOrRestoreTemperature, hwApLinePortOutPkts=hwApLinePortOutPkts, hwApAdminOper=hwApAdminOper, hwApLineportMtu=hwApLineportMtu, hwApLineatePortLldpRemPortDesc=hwApLineatePortLldpRemPortDesc, hwApOpticalLinkLen62p5X125X10m=hwApOpticalLinkLen62p5X125X10m, hwApOpticalRemoveNotify=hwApOpticalRemoveNotify, hwMacApLowTemperatureThreshold=hwMacApLowTemperatureThreshold, hwApMemoryOccupancyRate=hwApMemoryOccupancyRate, hwApLineateportMode=hwApLineateportMode, hwMacApOpticalVendorSn=hwMacApOpticalVendorSn, hwMacApLineatePortAclSwitchOutbound=hwMacApLineatePortAclSwitchOutbound, hwApAuthListObjects=hwApAuthListObjects, hwApUsedType=hwApUsedType, hwMacApLinePortOutDiscardPkts=hwMacApLinePortOutDiscardPkts, hwMacApSysSoftwareVendor=hwMacApSysSoftwareVendor, hwApLldpRemSysDesc=hwApLldpRemSysDesc, hwMacApLldpDelay=hwMacApLldpDelay, hwMacApLineatePortLldpInterval=hwMacApLineatePortLldpInterval, hwApPhysicalAttrEntry=hwApPhysicalAttrEntry, hwMACApAttackWeakivQuietTime=hwMACApAttackWeakivQuietTime, hwApSrcRegionIndex=hwApSrcRegionIndex, hwCrcErrActual=hwCrcErrActual, hwApIfIndex=hwApIfIndex, hwApResetAllOfflineRecord=hwApResetAllOfflineRecord, hwApTypeRadioEntry=hwApTypeRadioEntry, hwEthportSendErrorFrames=hwEthportSendErrorFrames, hwApLogBackupServerIp=hwApLogBackupServerIp, hwApFaultNotifyFat=hwApFaultNotifyFat, hwMacApMultiLineatePortMode=hwMacApMultiLineatePortMode, hwMacApUpPortRecvErrorFrames=hwMacApUpPortRecvErrorFrames, hwApUsedRegionIndex=hwApUsedRegionIndex, hwApBatchState=hwApBatchState, hwApTypeAntennaGain=hwApTypeAntennaGain, hwMacApLineatePortAclSwitchInboundIPV6=hwMacApLineatePortAclSwitchInboundIPV6, hwApOnlineUserNum=hwApOnlineUserNum, hwApTimeSynFailNotify=hwApTimeSynFailNotify, hwApCRCTooHighRestoreNotify=hwApCRCTooHighRestoreNotify, hwApAcIP3=hwApAcIP3, hwApPingCount=hwApPingCount, hwApLogBackupServerIpv6Addr=hwApLogBackupServerIpv6Addr, hwMacApLineatePortEntry=hwMacApLineatePortEntry, hwApAntennaMode=hwApAntennaMode, hwMacApUsedRegionIndex=hwMacApUsedRegionIndex, hwMacApAirportRecvErrorPacket=hwMacApAirportRecvErrorPacket, hwMacApUpPortRecvRightFrames64Bits=hwMacApUpPortRecvRightFrames64Bits, hwMacApRunState=hwMacApRunState, hwMacApLineportMtu=hwMacApLineportMtu, hwApUpEthPortDuplexMode=hwApUpEthPortDuplexMode, hwMacApLineatePortLldpRemManAddrEntry=hwMacApLineatePortLldpRemManAddrEntry, hwApEthportDownRate=hwApEthportDownRate, hwAPBroadcastStormUpNotify=hwAPBroadcastStormUpNotify, hwMacApIpNetMask=hwMacApIpNetMask, hwMacApAvgRMemoryUseRate=hwMacApAvgRMemoryUseRate, hwMacApUpPortSendFrames64Bits=hwMacApUpPortSendFrames64Bits, hwBroadcastRestrainThresholdUp=hwBroadcastRestrainThresholdUp, hwMacApLldpRestartDelay=hwMacApLldpRestartDelay, hwApProfileEntry=hwApProfileEntry, hwApUpEthPortSpeed=hwApUpEthPortSpeed, hwApCpuOverloadRestoreNotify=hwApCpuOverloadRestoreNotify, hwMacApForwardMode=hwMacApForwardMode, hwMacApLinePortOutNonUnicastPkts=hwMacApLinePortOutNonUnicastPkts, hwApProfileRowStatus=hwApProfileRowStatus, hwApTemperatureTooLowRestoreNotify=hwApTemperatureTooLowRestoreNotify, hwMacApLineportType=hwMacApLineportType, hwApOpticalInsertNotify=hwApOpticalInsertNotify, hwMacApEthportRecvDropFrames64Bits=hwMacApEthportRecvDropFrames64Bits, hwAcObjects=hwAcObjects, hwMacApLineatePortAclNameInbound=hwMacApLineatePortAclNameInbound, hwApMemoryOverloadRestoreNotify=hwApMemoryOverloadRestoreNotify, hwApAccessBalanceGap=hwApAccessBalanceGap, hwApDynamicBlacklistAgingInt=hwApDynamicBlacklistAgingInt, hwApRegionEntry=hwApRegionEntry, hwMacApHighTemperatureThreshold=hwMacApHighTemperatureThreshold, hwApOpticalHighRxPowerThreshold=hwApOpticalHighRxPowerThreshold, hwMacApUpPortSendFrames=hwMacApUpPortSendFrames, hwMacApOpticalLinkLen62p5X125X10m=hwMacApOpticalLinkLen62p5X125X10m, hwMobilityGroupName=hwMobilityGroupName, hwApUnauthorizedApRecordTime=hwApUnauthorizedApRecordTime, hwMACApAttackPskInterval=hwMACApAttackPskInterval, hwApLineatePortLldpRemIndex=hwApLineatePortLldpRemIndex, hwApLineatePortAclSwitchOutboundIPV6=hwApLineatePortAclSwitchOutboundIPV6, hwApRegionDeployMode=hwApRegionDeployMode, hwApLineatePortLldpRemManAddrIfSubtype=hwApLineatePortLldpRemManAddrIfSubtype, hwMacApLineportNum=hwMacApLineportNum, hwApArpCfgRateThreshold=hwApArpCfgRateThreshold, hwApSnBlacklistTable=hwApSnBlacklistTable, hwApLldpRemSysCapEnabled=hwApLldpRemSysCapEnabled, hwApRegionGlobalInfo=hwApRegionGlobalInfo, hwMacApLldpRemSysDesc=hwMacApLldpRemSysDesc, hwMacApOfflineRowStatus=hwMacApOfflineRowStatus, hwApLineatePortIndex=hwApLineatePortIndex, hwApDNS=hwApDNS, hwMacApLineateportVlanUntagged=hwMacApLineateportVlanUntagged, hwApUnauthorizedApSn=hwApUnauthorizedApSn, hwMacApMultiLineatePortNegotiation=hwMacApMultiLineatePortNegotiation, hwApLinePortInPkts=hwApLinePortInPkts, hwApPing=hwApPing, hwApLineatePortLldpRemSysName=hwApLineatePortLldpRemSysName, hwMacApAirportRecvUnicastFrames=hwMacApAirportRecvUnicastFrames, hwApTemperature=hwApTemperature, hwApLineatePortLldpRemManAddrIfId=hwApLineatePortLldpRemManAddrIfId, hwMacApRunningMode=hwMacApRunningMode, hwRadioMaxAntennasNum=hwRadioMaxAntennasNum, hwMacApAdminOper=hwMacApAdminOper, hwMacEthportSendDropFrames=hwMacEthportSendDropFrames, hwMacApUpPortRecvErrorFrames64Bits=hwMacApUpPortRecvErrorFrames64Bits, hwApSnBlacklistSn=hwApSnBlacklistSn, hwMacApAcIP4=hwMacApAcIP4, hwApLogRecordLevel=hwApLogRecordLevel, hwMacApMultiLineatePortCRCErrorSwitch=hwMacApMultiLineatePortCRCErrorSwitch, hwApUsername=hwApUsername, hwApBootNotifyName=hwApBootNotifyName, hwApReceivedInvalidArpNotify=hwApReceivedInvalidArpNotify, hwApLineatePortLldpEntry=hwApLineatePortLldpEntry, hwApLinePortOutDiscardPkts=hwApLinePortOutDiscardPkts, hwMacApUsername=hwMacApUsername, hwMacApUpEthPortDuplexMode=hwMacApUpEthPortDuplexMode, hwApEapResponseMode=hwApEapResponseMode, hwApAvgRCPUUseRate=hwApAvgRCPUUseRate, hwApOpticalDdmVoltage=hwApOpticalDdmVoltage, hwApProfileTelnetSwitch=hwApProfileTelnetSwitch, hwMacApEthportRecvDropFrames=hwMacApEthportRecvDropFrames, hwApCpuOverloadNotify=hwApCpuOverloadNotify, hwApBatchIndexReturnNumber=hwApBatchIndexReturnNumber, hwMacApDomain=hwMacApDomain, hwApBroadcastRestrainDownNotify=hwApBroadcastRestrainDownNotify, hwApSaveMode=hwApSaveMode, hwApLldpEnable=hwApLldpEnable, hwApLldpRemManAddrIfId=hwApLldpRemManAddrIfId, hwApGlobalInfo=hwApGlobalInfo, hwMacApLineatePortAclSwitchOutboundIPV6=hwMacApLineatePortAclSwitchOutboundIPV6, hwApMacWhitelistBatchQueryStartNumber=hwApMacWhitelistBatchQueryStartNumber, hwApLineportInfoTable=hwApLineportInfoTable, hwApLineateportVlanUntagged=hwApLineateportVlanUntagged, hwApColdBootRestoreNotify=hwApColdBootRestoreNotify, hwMobilityGroupTable=hwMobilityGroupTable, hwApUpPortRecvFrames=hwApUpPortRecvFrames, hwMacApSoftwareVersion=hwMacApSoftwareVersion, hwMACApAccessBalanceSwitch=hwMACApAccessBalanceSwitch, hwApAttackFloodQuietTime=hwApAttackFloodQuietTime, hwApTypeLineatePortName=hwApTypeLineatePortName, hwApLineatePortLldpRestartDelay=hwApLineatePortLldpRestartDelay, hwApPingResultSuccessCount=hwApPingResultSuccessCount, hwApLineateportPvidVlan=hwApLineateportPvidVlan, hwApTypeReset=hwApTypeReset, hwApSnWhitelistTable=hwApSnWhitelistTable, hwMacApLinePortInPkts=hwMacApLinePortInPkts, hwApTypeTable=hwApTypeTable, hwApRegionMerge=hwApRegionMerge, hwWlanDeviceCompliance=hwWlanDeviceCompliance, hwApEapResponseTransform=hwApEapResponseTransform, hwAcIPv4Address=hwAcIPv4Address, hwApRegionIndex=hwApRegionIndex, hwApArpExceedThresholdNotify=hwApArpExceedThresholdNotify, hwApPriorityAccessMode=hwApPriorityAccessMode, hwMacApUpPortRecvFrames=hwMacApUpPortRecvFrames, hwApMemThreshold=hwApMemThreshold, hwApLineportIndex=hwApLineportIndex, hwAplldpRemManAddrEntry=hwAplldpRemManAddrEntry, hwRadioMaxSpatialStreamsNum=hwRadioMaxSpatialStreamsNum, hwMacApLinePortInNonUnicastPkts=hwMacApLinePortInNonUnicastPkts, hwApLldpRemPortIdSubtype=hwApLldpRemPortIdSubtype, hwRadioMaxVAPNum=hwRadioMaxVAPNum, hwApRegionBatchInfo=hwApRegionBatchInfo, hwApSysnameEntry=hwApSysnameEntry, hwApTypeEntry=hwApTypeEntry, hwApSnWhitelistBatchQueryStartNumber=hwApSnWhitelistBatchQueryStartNumber, hwMacApEthportRecvNonUnicastPacket=hwMacApEthportRecvNonUnicastPacket, hwApFaultNotify=hwApFaultNotify, hwApOpticalLinkLen50X125X100m=hwApOpticalLinkLen50X125X100m, hwApLinePortOutNonUnicastPkts=hwApLinePortOutNonUnicastPkts, hwApEthportRecvUnknownFrames=hwApEthportRecvUnknownFrames, hwApSysnameApMac=hwApSysnameApMac, hwApProfileBatchNumber=hwApProfileBatchNumber, hwApRegionTable=hwApRegionTable, hwMacApLineportMac=hwMacApLineportMac)
mibBuilder.exportSymbols("HUAWEI-WLAN-DEVICE-MIB", hwApProfileBatchStart=hwApProfileBatchStart, hwApSnWhitelistEntry=hwApSnWhitelistEntry, hwMACApAttackSpoofQuietTime=hwMACApAttackSpoofQuietTime, hwApLineatePortLldpCfgTable=hwApLineatePortLldpCfgTable, hwApOnlineFailEntry=hwApOnlineFailEntry, hwApMacBlacklistEntry=hwApMacBlacklistEntry, hwApUnauthorizedApIpAddress=hwApUnauthorizedApIpAddress, hwApOpticalRxPowerTooHighRestoreNotify=hwApOpticalRxPowerTooHighRestoreNotify, hwApSysSoftwareName=hwApSysSoftwareName, hwApLineatePortSpeed=hwApLineatePortSpeed, hwApUpPortRecvBytes64Bits=hwApUpPortRecvBytes64Bits, hwApMultiLineatePortVlanTagged=hwApMultiLineatePortVlanTagged, hwApBroadcastFlux=hwApBroadcastFlux, hwApMacWhitelistBatchQueryList=hwApMacWhitelistBatchQueryList, hwApLogServerUserPassword=hwApLogServerUserPassword, hwApVersionMismatchNotify=hwApVersionMismatchNotify, hwMacApMultiLineatePortIsAddInTrunk=hwMacApMultiLineatePortIsAddInTrunk, hwApUpPortRecvErrorFrames=hwApUpPortRecvErrorFrames, hwApSnWhitelistBatchQueryReturnNumber=hwApSnWhitelistBatchQueryReturnNumber, hwMacApEthportRecvUnicastPacket=hwMacApEthportRecvUnicastPacket, hwMacApEthportRecvUnknownFrames=hwMacApEthportRecvUnknownFrames, hwApLldpRemPortDesc=hwApLldpRemPortDesc, hwMacApLldpRemPortIdSubtype=hwMacApLldpRemPortIdSubtype, hwApSysSoftwareVendor=hwApSysSoftwareVendor, hwApLineatePortAclNumInboundIPV6=hwApLineatePortAclNumInboundIPV6, hwApGroup=hwApGroup, hwMacApLineatePortLldpSysDes=hwMacApLineatePortLldpSysDes, hwMacApLineatePortLldpCfgEntry=hwMacApLineatePortLldpCfgEntry, hwMacApLinePortInErrorPkts=hwMacApLinePortInErrorPkts, hwApSnWhitelistBatchQueryInfo=hwApSnWhitelistBatchQueryInfo, hwApLldpHoldMultiplier=hwApLldpHoldMultiplier, hwApNatIpAddress=hwApNatIpAddress, PYSNMP_MODULE_ID=hwWlanDevice, hwAPUpPortTraffic=hwAPUpPortTraffic, hwMACApLineatePortLldpRemManAddr=hwMACApLineatePortLldpRemManAddr, hwApLineportStatTable=hwApLineportStatTable, hwApGatewayIp=hwApGatewayIp, hwApOpticalRxPowerTooLowRestoreNotify=hwApOpticalRxPowerTooLowRestoreNotify, hwMacApOpticalSfpConnector=hwMacApOpticalSfpConnector, hwApOpticalLinkLenCopper=hwApOpticalLinkLenCopper, hwApLldpPortDes=hwApLldpPortDes, hwApAllExistApIndexMask=hwApAllExistApIndexMask, hwApAirportRecvErrorPacket64Bits=hwApAirportRecvErrorPacket64Bits, hwApLineatePortAclNameOutboundIPV6=hwApLineatePortAclNameOutboundIPV6, hwApLineportDesc=hwApLineportDesc, hwApLineatePortLldpRemChassisId=hwApLineatePortLldpRemChassisId, hwApArpAttackDstMac=hwApArpAttackDstMac, hwMacApSysSoftwareDesc=hwMacApSysSoftwareDesc, hwApLldpRemManAddrIfSubtype=hwApLldpRemManAddrIfSubtype, hwApLinePortInDiscardPkts=hwApLinePortInDiscardPkts, hwMacApLinePortInDiscardPkts=hwMacApLinePortInDiscardPkts, hwMacApLinePortUpDwnTimes=hwMacApLinePortUpDwnTimes, hwApTypeRadioIndex=hwApTypeRadioIndex, hwApAuthListGroup=hwApAuthListGroup, hwApLineatePortLldpAdminStatus=hwApLineatePortLldpAdminStatus, hwMacApAvgRCPUUseRate=hwMacApAvgRCPUUseRate, hwMacApLineatePortDesc=hwMacApLineatePortDesc, hwApHardwareVersion=hwApHardwareVersion, hwMacApOpticalLinkLenCopper=hwMacApOpticalLinkLenCopper, hwApIndex=hwApIndex, hwApRegionBatchNameList=hwApRegionBatchNameList, hwMacApLldpReportInterval=hwMacApLldpReportInterval, hwApLldpRemManAddrOID=hwApLldpRemManAddrOID, hwApManagementVlanID=hwApManagementVlanID, hwMacApCpufrequency=hwMacApCpufrequency, hwMacApFlashFreeSize=hwMacApFlashFreeSize, hwMacApMemoryUseRate=hwMacApMemoryUseRate, hwApLineportAdminStatus=hwApLineportAdminStatus, hwMacApLineatePortLldpRemIndex=hwMacApLineatePortLldpRemIndex, hwApOpticalRxPowerTooHighNotify=hwApOpticalRxPowerTooHighNotify, hwApConfigCommitNotify=hwApConfigCommitNotify, hwApAcIP2=hwApAcIP2, hwMacApUpPortRecvRightFrames=hwMacApUpPortRecvRightFrames, hwApOpticalTemperature=hwApOpticalTemperature, hwMacApEthportUpTraffic=hwMacApEthportUpTraffic, hwApPingPacketSize=hwApPingPacketSize, hwApConflictApNameNotify=hwApConflictApNameNotify, hwApFlashFreeSize=hwApFlashFreeSize, hwWlanDeviceNotifyObjects=hwWlanDeviceNotifyObjects, hwApLldpAdminStatus=hwApLldpAdminStatus, hwApProfileBatchInfo=hwApProfileBatchInfo, hwAPWirelessUpPortTraffic=hwAPWirelessUpPortTraffic, hwApOpticalDdmTxBiasCurrent=hwApOpticalDdmTxBiasCurrent, hwMacApLineatePortSpeed=hwMacApLineatePortSpeed, hwMacApLineatePortLldpHoldMultiplier=hwMacApLineatePortLldpHoldMultiplier, hwApLogServerIp=hwApLogServerIp, hwApCpuType=hwApCpuType, hwApAddOffLineNotify=hwApAddOffLineNotify, hwApArpAttackDropNum=hwApArpAttackDropNum, hwApUnauthorizedApRecordIndex=hwApUnauthorizedApRecordIndex, hwApLldpInterval=hwApLldpInterval, hwApArpAttackSrcIP=hwApArpAttackSrcIP, hwApBatchIndexNumber=hwApBatchIndexNumber, hwApEthportSendNonUnicastPacket=hwApEthportSendNonUnicastPacket, hwMacApLineatePortLldpManageAddr=hwMacApLineatePortLldpManageAddr, hwApSysnameApId=hwApSysnameApId, hwMacApOpticalInfoTable=hwMacApOpticalInfoTable, hwWlanDeviceCompliances=hwWlanDeviceCompliances, hwApLineatePortAclSwitchOutbound=hwApLineatePortAclSwitchOutbound, hwMacApLineatePortLldpRemChassisId=hwMacApLineatePortLldpRemChassisId, hwApLinePortInUnicastPkts=hwApLinePortInUnicastPkts, hwMacApOpticalDdmTxBiasCurrent=hwMacApOpticalDdmTxBiasCurrent, hwMACApDynamicBlacklistAgingInt=hwMACApDynamicBlacklistAgingInt, hwApRegionGroup=hwApRegionGroup, hwApSshSwitch=hwApSshSwitch, hwApOpticalLowRxPowerThreshold=hwApOpticalLowRxPowerThreshold, hwApEthportSendNonUnicastPacket64Bits=hwApEthportSendNonUnicastPacket64Bits, hwApFmeaFaultNotify=hwApFmeaFaultNotify, hwApStaticIpAddress=hwApStaticIpAddress, hwApProfileMaxUserNum=hwApProfileMaxUserNum, hwMACApProtectAcIPv6Addr=hwMACApProtectAcIPv6Addr, hwApEthportRecvDropFrames64Bits=hwApEthportRecvDropFrames64Bits, hwApOpticalDdmTemperature=hwApOpticalDdmTemperature, hwApPingResultMaximumResponseTime=hwApPingResultMaximumResponseTime, hwApRegionName=hwApRegionName, hwApCRCTooHighNotify=hwApCRCTooHighNotify, hwApBroadcastRestrainUpRestoreNotify=hwApBroadcastRestrainUpRestoreNotify, hwApSnBlacklistRowStatus=hwApSnBlacklistRowStatus, hwMacApManagementVlanID=hwMacApManagementVlanID, hwApProfileDhcpTrustPort=hwApProfileDhcpTrustPort, hwAPStaFullRecoverNotify=hwAPStaFullRecoverNotify, hwApParaStatisticEntry=hwApParaStatisticEntry, hwMacApAntennaMode=hwMacApAntennaMode, hwApAirportSendDropFrames=hwApAirportSendDropFrames, hwMacApSysManufacture=hwMacApSysManufacture, hwApPerformanceStatCycle=hwApPerformanceStatCycle, hwApSysManufacture=hwApSysManufacture, hwCrcThreshold=hwCrcThreshold, hwApLineatePortAclSwitchInbound=hwApLineatePortAclSwitchInbound, hwApLineatePortTable=hwApLineatePortTable, hwWlanDeviceNotifications=hwWlanDeviceNotifications, hwApLineatePortLldpHoldMultiplier=hwApLineatePortLldpHoldMultiplier, hwAcGroup=hwAcGroup, hwMacApPassword=hwMacApPassword, hwMacApLineatePortLldpRemPortDesc=hwMacApLineatePortLldpRemPortDesc, hwApLineatePortLldpRemManAddrSubtype=hwApLineatePortLldpRemManAddrSubtype, hwApNormalNotifyFat=hwApNormalNotifyFat, hwMacApTemperature=hwMacApTemperature, hwApPingResultAverageResponseTime=hwApPingResultAverageResponseTime, hwApEthportRecvDropFrames=hwApEthportRecvDropFrames, hwMacApMemoryType=hwMacApMemoryType, hwUnAuthorizedApRecordClearNotify=hwUnAuthorizedApRecordClearNotify, hwMacEthportSendErrorFrames=hwMacEthportSendErrorFrames, hwMacApUpPortSendBytes64Bits=hwMacApUpPortSendBytes64Bits, hwApCpufrequency=hwApCpufrequency, hwMacApOpticalLinkLen9X125km=hwMacApOpticalLinkLen9X125km, hwAcTable=hwAcTable, hwMacApLineateportMode=hwMacApLineateportMode, hwApAuthMode=hwApAuthMode, hwApSysnameTable=hwApSysnameTable, hwApLocalAssocResSwitch=hwApLocalAssocResSwitch, hwApLineatePortLldpRemSysCapEnabled=hwApLineatePortLldpRemSysCapEnabled, hwApMacWhitelistMacAddr=hwApMacWhitelistMacAddr, hwApUpPortRecvBytes=hwApUpPortRecvBytes, hwApResetAllOnlineFailRecord=hwApResetAllOnlineFailRecord, hwMacApAirportRecvDropPacket=hwMacApAirportRecvDropPacket, hwApLineportStatEntry=hwApLineportStatEntry, hwMacApLineatePortLldpRemPortIdSubtype=hwMacApLineatePortLldpRemPortIdSubtype, hwApBatchInfo=hwApBatchInfo, hwMacApTable=hwMacApTable, hwApLineatePortAclNumOutboundIPV6=hwApLineatePortAclNumOutboundIPV6, hwApFmeaIICFaultNotify=hwApFmeaIICFaultNotify, hwUnAuthorizedApRecordExistNotify=hwUnAuthorizedApRecordExistNotify, hwMACApLldpRemManAddrSubtype=hwMACApLldpRemManAddrSubtype, hwApPingIndex=hwApPingIndex, hwMacApMultiLineatePortCRCErrorLowThreshold=hwMacApMultiLineatePortCRCErrorLowThreshold, hwApMemoryType=hwApMemoryType, hwMACApLldpRemManAddrIfSubtype=hwMACApLldpRemManAddrIfSubtype, hwApAttackPskInterval=hwApAttackPskInterval, hwApConfirmNotify=hwApConfirmNotify, hwMacApMultiLineatePortCRCErrorHighThreshold=hwMacApMultiLineatePortCRCErrorHighThreshold, hwMacApEthportSendUnicastPacket64Bits=hwMacApEthportSendUnicastPacket64Bits, hwMacApStaticIpAddress=hwMacApStaticIpAddress, hwApCpuUseRate=hwApCpuUseRate, hwMacApLldpRemChassisId=hwMacApLldpRemChassisId, hwApAlarmRestrictionMode=hwApAlarmRestrictionMode, hwApAirportSendDropFrames64Bits=hwApAirportSendDropFrames64Bits, hwMacApLineatePortType=hwMacApLineatePortType, hwMacApEthportSendNonUnicastPacket64Bits=hwMacApEthportSendNonUnicastPacket64Bits, hwApRegionObjects=hwApRegionObjects, hwApMultiLineatePortCRCErrorHighThreshold=hwApMultiLineatePortCRCErrorHighThreshold, hwMacApIndex=hwMacApIndex, hwApLineatePortAclNameInbound=hwApLineatePortAclNameInbound, hwApTypeGroup=hwApTypeGroup, hwMacApGatewayIp=hwMacApGatewayIp, hwApProfileConsoleSwitch=hwApProfileConsoleSwitch, hwApAirportRecvErrorPacket=hwApAirportRecvErrorPacket, hwApUpPortSendBytes64Bits=hwApUpPortSendBytes64Bits, hwApRowstatus=hwApRowstatus, hwDyingGaspTrapNotify=hwDyingGaspTrapNotify, hwEthportSendDropFrames=hwEthportSendDropFrames, hwMacApAirportSendDropFrames=hwMacApAirportSendDropFrames, hwMacApLineatePortLldpReportInterval=hwMacApLineatePortLldpReportInterval, hwApPingResultFlag=hwApPingResultFlag, hwRadioDownRecovNotifyFat=hwRadioDownRecovNotifyFat, hwMacApLineatePortLldpPortDes=hwMacApLineatePortLldpPortDes, hwMACApNatIpAddress=hwMACApNatIpAddress, hwApProfileBatchReturnNumber=hwApProfileBatchReturnNumber, hwApIpv6DNS=hwApIpv6DNS, hwApLldpRestartDelay=hwApLldpRestartDelay, hwAp4WayHandshakeRoamPolicy=hwAp4WayHandshakeRoamPolicy, hwApOpticalDdmRxPower=hwApOpticalDdmRxPower, hwApTemperatureTooHighNotify=hwApTemperatureTooHighNotify, hwMacApLldpTable=hwMacApLldpTable, hwApLineatePortLldpRemManAddrOID=hwApLineatePortLldpRemManAddrOID, hwApLineatePortLldpTable=hwApLineatePortLldpTable, hwApNotifyWlanId=hwApNotifyWlanId, hwApOnlineFailTable=hwApOnlineFailTable, hwMacApLldpRemPortDesc=hwMacApLldpRemPortDesc, hwApIpAddress=hwApIpAddress, hwUnAuthorizedApRecordNumber=hwUnAuthorizedApRecordNumber, hwApUnauthorizedApMacAddress=hwApUnauthorizedApMacAddress, hwApRegionApIndexMask=hwApRegionApIndexMask, hwMacApProtectAcPriority=hwMacApProtectAcPriority, hwMACApLineatePortMacAddress=hwMACApLineatePortMacAddress, hwMacApLldpEnable=hwMacApLldpEnable, hwMacApPerformanceStatEntry=hwMacApPerformanceStatEntry, hwMacApUpPortRecvBytes64Bits=hwMacApUpPortRecvBytes64Bits, hwApLineatePortLldpEnable=hwApLineatePortLldpEnable, hwStationOfflineNotify=hwStationOfflineNotify, hwMACApAttackPskQuietTime=hwMACApAttackPskQuietTime, hwApMultiLineatePortPvidVlan=hwApMultiLineatePortPvidVlan, hwBroadcastWarnThresholdDown=hwBroadcastWarnThresholdDown, hwMacApRunTime=hwMacApRunTime, hwMacApOpticalVendorPn=hwMacApOpticalVendorPn, hwMacApSysHardtwareDesc=hwMacApSysHardtwareDesc, hwMacApAcIP2=hwMacApAcIP2, hwApIpv6Address=hwApIpv6Address, hwMacApLineportStatTable=hwMacApLineportStatTable, hwApLogBackupPeriodTime=hwApLogBackupPeriodTime, hwAPBroadcastStormUpRestoreNotify=hwAPBroadcastStormUpRestoreNotify, hwApLldpRemChassisIdSubtype=hwApLldpRemChassisIdSubtype, hwApSysName=hwApSysName, hwMacApLineatePortLldpSysName=hwMacApLineatePortLldpSysName, hwApLineateportUserIsolate=hwApLineateportUserIsolate, hwApReset=hwApReset, hwMacApKeepService=hwMacApKeepService, hwApLineportType=hwApLineportType, hwMacApLineateportUserIsolate=hwMacApLineateportUserIsolate, hwMacApIpAddress=hwMacApIpAddress, hwApHighTemperatureThreshold=hwApHighTemperatureThreshold, hwApPingTimeOut=hwApPingTimeOut, hwApSn=hwApSn, hwApLineatePortLldpSysCab=hwApLineatePortLldpSysCab, hwWlanDeviceNotify=hwWlanDeviceNotify, hwApPingApMac=hwApPingApMac, hwApLldpSysCab=hwApLldpSysCab, hwMacApAcIP1=hwMacApAcIP1, hwMacApMultiLineatePortDuplex=hwMacApMultiLineatePortDuplex, hwMacApLinePortOutBytes=hwMacApLinePortOutBytes, hwApLogBackupMode=hwApLogBackupMode, hwApAirportRecvUnicastFrames=hwApAirportRecvUnicastFrames, hwMacApLineportDesc=hwMacApLineportDesc, hwApOpticalNominalBitRate=hwApOpticalNominalBitRate)
mibBuilder.exportSymbols("HUAWEI-WLAN-DEVICE-MIB", hwMacApLineportInfoEntry=hwMacApLineportInfoEntry, hwApTemperatureTooLowNotify=hwApTemperatureTooLowNotify, hwApLldpRemLocalPortNum=hwApLldpRemLocalPortNum, hwMacApLineatePortLldpRestartDelay=hwMacApLineatePortLldpRestartDelay, hwApSnBlacklistEntry=hwApSnBlacklistEntry, hwApWorkMode=hwApWorkMode, hwApReceivedInvalidArpNewNotify=hwApReceivedInvalidArpNewNotify, hwMacApOpticalDdmTxPower=hwMacApOpticalDdmTxPower, hwMacApPhysicalAttrEntry=hwMacApPhysicalAttrEntry, hwApLowTemperatureThreshold=hwApLowTemperatureThreshold, hwApLineportSpeed=hwApLineportSpeed, hwApTypeMaxSsidNum=hwApTypeMaxSsidNum, hwApBootCountPowerOff=hwApBootCountPowerOff, hwApFmeaPHYFaultRestoreNotify=hwApFmeaPHYFaultRestoreNotify, hwApOpticalVendorRev=hwApOpticalVendorRev, hwApActualType=hwApActualType, hwApProfileBatchNameList=hwApProfileBatchNameList, hwApLldpReportInterval=hwApLldpReportInterval, hwApIpMode=hwApIpMode, hwMacApOpticalVdndorOui=hwMacApOpticalVdndorOui, hwApPingResultFailureCount=hwApPingResultFailureCount, hwMobilityGroupMemberOpcode=hwMobilityGroupMemberOpcode, hwApLinePortUpDwnTimes=hwApLinePortUpDwnTimes, hwMacApLineportStatEntry=hwMacApLineportStatEntry, hwApFaultID=hwApFaultID, hwMacApOpticalDdmVoltage=hwMacApOpticalDdmVoltage, hwApRadioNotifyPara=hwApRadioNotifyPara, hwApLldpSysDes=hwApLldpSysDes, hwMacApLldpRemChassisIdSubtype=hwMacApLldpRemChassisIdSubtype, hwMacApAirportDwTraffic=hwMacApAirportDwTraffic, hwApLineatePortLldpDelay=hwApLineatePortLldpDelay, hwApAcIP1=hwApAcIP1, hwApLineatePortLldpReportInterval=hwApLineatePortLldpReportInterval, hwApSampleTime=hwApSampleTime, hwApOfflineManagement=hwApOfflineManagement, hwApMultiLineatePortStpEnable=hwApMultiLineatePortStpEnable, hwApMemoryUseRate=hwApMemoryUseRate, hwMacApAttackFloodInterval=hwMacApAttackFloodInterval, hwApRunningMode=hwApRunningMode, hwApTemperatureTooHighRestoreNotify=hwApTemperatureTooHighRestoreNotify, hwApAirportDwTraffic=hwApAirportDwTraffic, hwMacApCpuThreshold=hwMacApCpuThreshold, hwMacApLineportAdminStatus=hwMacApLineportAdminStatus, hwMacApUsedProfileName=hwMacApUsedProfileName, hwMacApLineatePortLldpEntry=hwMacApLineatePortLldpEntry, hwMacApLineatePortLldpRemSysCapSupported=hwMacApLineatePortLldpRemSysCapSupported, hwApLldpDelay=hwApLldpDelay, hwApMacWhitelistBatchQueryReturnNumber=hwApMacWhitelistBatchQueryReturnNumber, hwMACApLineatePortCfgMtu=hwMACApLineatePortCfgMtu, hwMacApOnlineFailTime=hwMacApOnlineFailTime, hwApMacBlacklistTable=hwApMacBlacklistTable, hwMacApStaticGatewayIp=hwMacApStaticGatewayIp, hwApTypeLineatePortInfoEntry=hwApTypeLineatePortInfoEntry, hwMACApLineatePortLldpRemManAddrIfSubtype=hwMACApLineatePortLldpRemManAddrIfSubtype, hwCrcPortType=hwCrcPortType, hwMacApLineatePortState=hwMacApLineatePortState, hwApCfgCountryCode=hwApCfgCountryCode, hwMacApLinePortInBytes=hwMacApLinePortInBytes, hwApResetAllBootCountRecord=hwApResetAllBootCountRecord, hwMacApAirportRecvDropPacket64Bits=hwMacApAirportRecvDropPacket64Bits, hwApFaultInfo=hwApFaultInfo, hwMACApAttackFloodTimes=hwMACApAttackFloodTimes, hwMacEthportUpRate=hwMacEthportUpRate, hwApUnauthorizedApType=hwApUnauthorizedApType, hwApForwardMode=hwApForwardMode, hwApColdBootNotify=hwApColdBootNotify, hwApColdstartNotify=hwApColdstartNotify, hwApLineatePortState=hwApLineatePortState, hwMacApEthportSendUnicastPacket=hwMacApEthportSendUnicastPacket, hwApLineatePortAclNumOutbound=hwApLineatePortAclNumOutbound, hwApLineatePortLldpSysName=hwApLineatePortLldpSysName, hwMACApAttackFloodQuietTime=hwMACApAttackFloodQuietTime, hwApAttackPskTimes=hwApAttackPskTimes, hwApOfflineEntry=hwApOfflineEntry, hwApCpuThreshold=hwApCpuThreshold, hwMacApProtectAcIP=hwMacApProtectAcIP, hwApMacWhitelistBatchQueryInfo=hwApMacWhitelistBatchQueryInfo, hwMacApOnlineFailReason=hwMacApOnlineFailReason, hwMacApLldpManageAddr=hwMacApLldpManageAddr, hwApFaultTimes=hwApFaultTimes, hwMobilityGroupMemberIndex=hwMobilityGroupMemberIndex, hwApLinePortOutErrorsPkts=hwApLinePortOutErrorsPkts, hwApMacWhitelistBatchQueryNumber=hwApMacWhitelistBatchQueryNumber, hwMacApLldpPortDes=hwMacApLldpPortDes, hwApTypeRadioTable=hwApTypeRadioTable, hwApTypeLineatePortInfoTable=hwApTypeLineatePortInfoTable, hwMacEthportDownRate=hwMacEthportDownRate, hwMacApLineportInfoTable=hwMacApLineportInfoTable, hwMacApLineatePortLldpDelay=hwMacApLineatePortLldpDelay, hwStationSignalStrengthLowThanThresholdNotify=hwStationSignalStrengthLowThanThresholdNotify, hwApUnauthorizedApRecordTable=hwApUnauthorizedApRecordTable, hwApMultiLineatePortAddedOrExitTrunkID=hwApMultiLineatePortAddedOrExitTrunkID, hwApMultiLineatePortNegotiation=hwApMultiLineatePortNegotiation, hwApCpuOccupancyRate=hwApCpuOccupancyRate, hwApLineatePortLldpIndex=hwApLineatePortLldpIndex, hwApLineatePortLldpManageAddr=hwApLineatePortLldpManageAddr, hwApLineatePortLldpRemSysCapSupported=hwApLineatePortLldpRemSysCapSupported, hwApRegionRowStatus=hwApRegionRowStatus, hwApEapStartMode=hwApEapStartMode, hwApLinePortInBytes=hwApLinePortInBytes, hwApOpticalVendorName=hwApOpticalVendorName, hwApLogServerUsername=hwApLogServerUsername, hwWlanDeviceObjectGroups=hwWlanDeviceObjectGroups, hwMACApDynamicBlacklistEnable=hwMACApDynamicBlacklistEnable, hwApPingResultNotify=hwApPingResultNotify, hwApSoftwareVersion=hwApSoftwareVersion, hwApMacBlacklistMacAddr=hwApMacBlacklistMacAddr, hwApOpticalDdmTxPower=hwApOpticalDdmTxPower, hwApType=hwApType, hwAPBroadcastStormDownRestoreNotify=hwAPBroadcastStormDownRestoreNotify, hwApUpPortRecvRightFrames64Bits=hwApUpPortRecvRightFrames64Bits, hwAPBroadcastStormDownNotify=hwAPBroadcastStormDownNotify, hwMacApOpticalVendorRev=hwMacApOpticalVendorRev, hwStaBroadcastFlux=hwStaBroadcastFlux, hwMacApLinePortInUnicastPkts=hwMacApLinePortInUnicastPkts, hwApRunTime=hwApRunTime, hwApLldpSysName=hwApLldpSysName, hwMacAplldpRemManAddrEntry=hwMacAplldpRemManAddrEntry, hwApLineatePortLldpSysDes=hwApLineatePortLldpSysDes, hwWlanDeviceNotifyGroup=hwWlanDeviceNotifyGroup, hwRadioDownNotifyFat=hwRadioDownNotifyFat, hwMacApUpEthPortDuplex=hwMacApUpEthPortDuplex, hwEthportUpDwnTimes=hwEthportUpDwnTimes, hwMacApUpEthPortSpeedMode=hwMacApUpEthPortSpeedMode, hwMacApIpMode=hwMacApIpMode, hwApTypeRowStatus=hwApTypeRowStatus, hwApRegionBatchReturnNumber=hwApRegionBatchReturnNumber, hwMacApAcIP3=hwMacApAcIP3, hwApOnlineFailMac=hwApOnlineFailMac, hwApMemorySize=hwApMemorySize, hwApFlashSize=hwApFlashSize, hwWlanDevice=hwWlanDevice, hwMacApLineatePortAclNumInboundIPV6=hwMacApLineatePortAclNumInboundIPV6, hwMacApCpuType=hwMacApCpuType, hwMacApOpticalLowRxPowerThreshold=hwMacApOpticalLowRxPowerThreshold, hwMACApBootCountTotal=hwMACApBootCountTotal, hwApOpticalTemperatureTooHighRestoreNotify=hwApOpticalTemperatureTooHighRestoreNotify, hwApLineatePortCfgMtu=hwApLineatePortCfgMtu, hwApLicenseInfo=hwApLicenseInfo, hwApSnWhitelistRowStatus=hwApSnWhitelistRowStatus, hwAcIPv6Address=hwAcIPv6Address, hwMacApLineatePortLldpCfgTable=hwMacApLineatePortLldpCfgTable, hwApUpPortSpeed=hwApUpPortSpeed, hwApRegionCountryCode=hwApRegionCountryCode, hwApSysSoftwareDesc=hwApSysSoftwareDesc, hwApMultiLineatePortCRCErrorSwitch=hwApMultiLineatePortCRCErrorSwitch, hwApLineatePortLldpCfgEntry=hwApLineatePortLldpCfgEntry, hwMacApLineatePortLldpRemSysName=hwMacApLineatePortLldpRemSysName, hwApFmeaFaultRestoreNotify=hwApFmeaFaultRestoreNotify, hwMacApMac=hwMacApMac, hwMACApLldpRemManAddr=hwMACApLldpRemManAddr, hwMacApHardwareVersion=hwMacApHardwareVersion, hwApPingWaitTime=hwApPingWaitTime, hwWlanDeviceObjects=hwWlanDeviceObjects, hwApAttackWeakivQuietTime=hwApAttackWeakivQuietTime, hwMacApLineateportStpEnable=hwMacApLineateportStpEnable, hwMacApLineatePortIndex=hwMacApLineatePortIndex, hwMacApOpticalVendorName=hwMacApOpticalVendorName, hwApLldpManageAddr=hwApLldpManageAddr, hwApFmeaPHYFaultNotify=hwApFmeaPHYFaultNotify, hwApLldpRemManAddr=hwApLldpRemManAddr, hwApArpAttackSrcMac=hwApArpAttackSrcMac, hwMacApLldpInterval=hwMacApLldpInterval, hwApRegionApNumber=hwApRegionApNumber, hwMacApLineatePortAclNumOutbound=hwMacApLineatePortAclNumOutbound, hwMacApFlashSize=hwMacApFlashSize, hwApUpEthPortSpeedMode=hwApUpEthPortSpeedMode, hwApTypeRadioAntennaGain=hwApTypeRadioAntennaGain, hwApPerformanceStatTable=hwApPerformanceStatTable, hwMacApAirportSendDropFrames64Bits=hwMacApAirportSendDropFrames64Bits, hwMacApOfflineReason=hwMacApOfflineReason, hwMacApOpticalLinkLen50X125X100m=hwMacApOpticalLinkLen50X125X100m, hwApRegionBatchStart=hwApRegionBatchStart, hwApStatisticsInterval=hwApStatisticsInterval, hwMACApLldpRemManAddrIfId=hwMACApLldpRemManAddrIfId, hwMacApLldpRemPortId=hwMacApLldpRemPortId, hwApLineatePortEntry=hwApLineatePortEntry, hwMacApLineatePortLldpIndex=hwMacApLineatePortLldpIndex, hwApLineatePortLldpRemPortIdSubtype=hwApLineatePortLldpRemPortIdSubtype, hwApProfileTable=hwApProfileTable, hwMacApOpticalNominalBitRate=hwMacApOpticalNominalBitRate, hwAcDevicesSwitchNotify=hwAcDevicesSwitchNotify, hwMACApLineatePortLldpRemManAddrIfId=hwMACApLineatePortLldpRemManAddrIfId, hwMacApEthportSendNonUnicastPacket=hwMacApEthportSendNonUnicastPacket, hwApLineatePortLldpRemSysDesc=hwApLineatePortLldpRemSysDesc, hwMacApLldpSysDes=hwMacApLldpSysDes, hwApPassword=hwApPassword, hwMACApAccessBalanceGap=hwMACApAccessBalanceGap, hwApOpticalVendorPn=hwApOpticalVendorPn, hwApArpActualRate=hwApArpActualRate, hwApRegionCalibrate5gBandWidth=hwApRegionCalibrate5gBandWidth, hwMacApOpticalInfoEntry=hwMacApOpticalInfoEntry, hwApRegionScanChannel5G=hwApRegionScanChannel5G, hwApAirportRecvDropPacket64Bits=hwApAirportRecvDropPacket64Bits, hwMacApMultiLineatePortVlanTagged=hwMacApMultiLineatePortVlanTagged, hwApSnWhitelistSn=hwApSnWhitelistSn, hwApHotBootRestoreNotify=hwApHotBootRestoreNotify, hwMacApOpticalLowTemperatureThreshold=hwMacApOpticalLowTemperatureThreshold, hwApLineatePortAclNameOutbound=hwApLineatePortAclNameOutbound, hwMacApMultiLineatePortPvidVlan=hwMacApMultiLineatePortPvidVlan, hwMacApElectronicLabel=hwMacApElectronicLabel, hwApRegionBatchDeployMode=hwApRegionBatchDeployMode, hwMacApUpPortRecvBytes=hwMacApUpPortRecvBytes, hwApTable=hwApTable, hwApAcIP4=hwApAcIP4, hwApBomCode=hwApBomCode, hwMacApLldpRemSysName=hwMacApLldpRemSysName, hwApAccessBalanceSwitch=hwApAccessBalanceSwitch, hwMacApMultiLineatePortVlanUntagged=hwMacApMultiLineatePortVlanUntagged, hwMacApLineatePortAclNameOutbound=hwMacApLineatePortAclNameOutbound, hwApAirportRecvDropPacket=hwApAirportRecvDropPacket, hwAPUpPortTraffic64Bits=hwAPUpPortTraffic64Bits, hwCrcPortID=hwCrcPortID, hwAPStaFullNotify=hwAPStaFullNotify, hwMacApRowstatus=hwMacApRowstatus, hwApNEnumber=hwApNEnumber, hwMacApMemorySize=hwMacApMemorySize, hwApStaticNetMask=hwApStaticNetMask, hwApIpv6NetMask=hwApIpv6NetMask, hwMacApMultiLineatePortUserIsolate=hwMacApMultiLineatePortUserIsolate, hwApTypeLineatePortType=hwApTypeLineatePortType, hwApLineatePortAclNumInbound=hwApLineatePortAclNumInbound, hwApProtectAcIPv6Addr=hwApProtectAcIPv6Addr, hwApDestRegionIndex=hwApDestRegionIndex, hwApEthportUpTraffic=hwApEthportUpTraffic, hwMacApLineatePortAclNameOutboundIPV6=hwMacApLineatePortAclNameOutboundIPV6, hwApUpPortRecvRightFrames=hwApUpPortRecvRightFrames, hwApOpticalLinkLen9X125km=hwApOpticalLinkLen9X125km, hwApKeepService=hwApKeepService, hwApRegionCalibrateChannel5G=hwApRegionCalibrateChannel5G, hwAplldpRemManAddrTable=hwAplldpRemManAddrTable, hwApEthportRecvUnicastPacket64Bits=hwApEthportRecvUnicastPacket64Bits, hwApOpticalTemperatureTooLowNotify=hwApOpticalTemperatureTooLowNotify, hwApRegionBatchNumber=hwApRegionBatchNumber, hwMacApLineatePortTable=hwMacApLineatePortTable, hwApLldpEntry=hwApLldpEntry, hwApPerformanceStatEntry=hwApPerformanceStatEntry, hwMacApBomCode=hwMacApBomCode, hwApAirportUpTraffic=hwApAirportUpTraffic, hwMacApLineatePortLldpRemManAddrTable=hwMacApLineatePortLldpRemManAddrTable, hwMacAPUpPortTraffic=hwMacAPUpPortTraffic, hwApOpticalVdndorOui=hwApOpticalVdndorOui, hwApLedSwitch=hwApLedSwitch, hwApAvgRMemoryUseRate=hwApAvgRMemoryUseRate, hwMacApLldpSysCab=hwMacApLldpSysCab, hwMemAcIndex=hwMemAcIndex, hwMacApLldpSysName=hwMacApLldpSysName, hwMacApReset=hwMacApReset, hwApMacWhitelistRowStatus=hwApMacWhitelistRowStatus, hwApOnlineTime=hwApOnlineTime, hwApBroadcastRestrainDownRestoreNotify=hwApBroadcastRestrainDownRestoreNotify, hwMacApLineportIndex=hwMacApLineportIndex, hwApLineatePortLldpPortDes=hwApLineatePortLldpPortDes, hwApNormalNotify=hwApNormalNotify)
mibBuilder.exportSymbols("HUAWEI-WLAN-DEVICE-MIB", hwApLineateportStpEnable=hwApLineateportStpEnable, hwApNotifyRadioId=hwApNotifyRadioId, hwMacApEthportRecvUnicastPacket64Bits=hwMacApEthportRecvUnicastPacket64Bits, hwApOpticalInfoEntry=hwApOpticalInfoEntry, hwApProfileGroup=hwApProfileGroup, hwApDynamicBlacklistEnable=hwApDynamicBlacklistEnable, hwApLogRecordFtpMode=hwApLogRecordFtpMode, hwMacApLinePortStatClear=hwMacApLinePortStatClear, hwApTypeNotMatchNotify=hwApTypeNotMatchNotify, hwApLineportNum=hwApLineportNum, hwApDosDefend=hwApDosDefend, hwApEntry=hwApEntry, hwApMultiLineatePortUserIsolate=hwApMultiLineatePortUserIsolate, hwUnAuthorizedApRecordAdmin=hwUnAuthorizedApRecordAdmin, hwApBatchNameList=hwApBatchNameList, hwMACApLineatePortLldpRemManAddrOID=hwMACApLineatePortLldpRemManAddrOID, hwApOpticalTemperatureTooLowRestoreNotify=hwApOpticalTemperatureTooLowRestoreNotify, hwMacAplldpRemManAddrTable=hwMacAplldpRemManAddrTable, hwApEapStartUnicastMac=hwApEapStartUnicastMac, hwApProfileDefault=hwApProfileDefault, hwApRegionCalibrateChannel2G=hwApRegionCalibrateChannel2G, hwApLldpRemIndex=hwApLldpRemIndex, hwApTypeDesc=hwApTypeDesc, hwMacApLineatePortAclSwitchInbound=hwMacApLineatePortAclSwitchInbound, hwApProfileObjects=hwApProfileObjects, hwApHotBootNotify=hwApHotBootNotify, hwApMultiLineatePortDuplex=hwApMultiLineatePortDuplex, hwApBatchIndexStart=hwApBatchIndexStart, hwApLineatePortAclSwitchInboundIPV6=hwApLineatePortAclSwitchInboundIPV6, hwApLineatePortLldpRemChassisIdSubtype=hwApLineatePortLldpRemChassisIdSubtype, hwApLineatePortLldpInterval=hwApLineatePortLldpInterval, hwMACApLineatePortLldpRemManAddrSubtype=hwMACApLineatePortLldpRemManAddrSubtype, hwApLinePortOutUnicastPkts=hwApLinePortOutUnicastPkts, hwApNotSupportCountryCodeNotify=hwApNotSupportCountryCodeNotify, hwApProfileName=hwApProfileName, hwApAlarmRestrictionPeriod=hwApAlarmRestrictionPeriod, hwStationOnlineNotify=hwStationOnlineNotify, hwApLldpRemChassisId=hwApLldpRemChassisId, hwMacApLineatePortLldpEnable=hwMacApLineatePortLldpEnable, hwMobilityGroupMemberList=hwMobilityGroupMemberList, hwApAttackPskQuietTime=hwApAttackPskQuietTime, hwApLicenseNotify=hwApLicenseNotify, hwMacApLineatePortLldpRemLocalPortNum=hwMacApLineatePortLldpRemLocalPortNum, hwMACApIpv6NetMask=hwMACApIpv6NetMask, hwMacApUpPortSendBytes=hwMacApUpPortSendBytes, hwApEapStartTransform=hwApEapStartTransform, hwMacApLldpHoldMultiplier=hwMacApLldpHoldMultiplier, hwApMacBlacklistRowStatus=hwApMacBlacklistRowStatus, hwMacApOpticalDdmTemperature=hwMacApOpticalDdmTemperature, hwApLineatePortLldpRemLocalPortNum=hwApLineatePortLldpRemLocalPortNum, hwApAttackFloodInterval=hwApAttackFloodInterval, hwMacApOpticalHighRxPowerThreshold=hwMacApOpticalHighRxPowerThreshold, hwMacApSysSoftwareName=hwMacApSysSoftwareName, hwMacApLineatePortLldpTable=hwMacApLineatePortLldpTable, hwApEthPortMtu=hwApEthPortMtu, hwApUsedProfileName=hwApUsedProfileName, hwMacApUpEthPortSpeed=hwMacApUpEthPortSpeed, hwApOpticalLowTemperatureThreshold=hwApOpticalLowTemperatureThreshold, hwMacApUpPortRecvFrames64Bits=hwMacApUpPortRecvFrames64Bits, hwMacApLineatePortAclNameInboundIPV6=hwMacApLineatePortAclNameInboundIPV6, hwMacAPUpPortTraffic64Bits=hwMacAPUpPortTraffic64Bits, hwApMultiLineatePortVlanUntagged=hwApMultiLineatePortVlanUntagged, hwMacApCpuUseRate=hwMacApCpuUseRate, hwApOpticalSfpConnector=hwApOpticalSfpConnector, hwApEthportRecvNonUnicastPacket=hwApEthportRecvNonUnicastPacket, hwMobilityGroupStatus=hwMobilityGroupStatus, hwMacApAirportRecvErrorPacket64Bits=hwMacApAirportRecvErrorPacket64Bits, hwApEthportDwTraffic=hwApEthportDwTraffic, hwApLineatePortLldpRemManAddrTable=hwApLineatePortLldpRemManAddrTable, hwAcRowStatus=hwAcRowStatus, hwMacApPerformanceStatTable=hwMacApPerformanceStatTable, hwMACApBootCountPowerOff=hwMACApBootCountPowerOff, hwApUpPortRecvFrames64Bits=hwApUpPortRecvFrames64Bits, hwApRegionDefault=hwApRegionDefault, hwApBroadcastRestrainUpNotify=hwApBroadcastRestrainUpNotify, hwApMac=hwApMac, hwApLineatePortType=hwApLineatePortType, hwMacApLinePortOutUnicastPkts=hwMacApLinePortOutUnicastPkts, hwApIpNetMask=hwApIpNetMask, hwMacApLldpRemSysCapEnabled=hwMacApLldpRemSysCapEnabled, hwApSnWhitelistBatchQueryList=hwApSnWhitelistBatchQueryList, hwWlanDeviceConformance=hwWlanDeviceConformance, hwApLldpRemManAddrSubtype=hwApLldpRemManAddrSubtype, hwApEthportRecvUnicastPacket=hwApEthportRecvUnicastPacket, hwMacApMultiLineatePortAddedOrExitTrunkID=hwMacApMultiLineatePortAddedOrExitTrunkID, hwMacApOpticalDdmRxPower=hwMacApOpticalDdmRxPower, hwApLineportInfoEntry=hwApLineportInfoEntry, hwApProtectAcPriority=hwApProtectAcPriority, hwMacApSn=hwMacApSn, hwApSnWhitelistBatchQueryNumber=hwApSnWhitelistBatchQueryNumber, hwMACApIpv6Address=hwMACApIpv6Address, hwApLldpRemPortId=hwApLldpRemPortId, hwMacApStaticNetMask=hwMacApStaticNetMask, hwApUpEthPortDuplex=hwApUpEthPortDuplex, hwApOfflineTable=hwApOfflineTable, hwApOpticalRxPower=hwApOpticalRxPower, hwApLineatePortAclNameInboundIPV6=hwApLineatePortAclNameInboundIPV6, hwMacApSysName=hwMacApSysName, hwApBootCountTotal=hwApBootCountTotal, hwApLinePortStatClear=hwApLinePortStatClear, hwApTypeRadioType=hwApTypeRadioType, hwApUpPortSendFrames64Bits=hwApUpPortSendFrames64Bits, hwStaAuthFailCause=hwStaAuthFailCause, hwApMacWhitelistTable=hwApMacWhitelistTable, hwMacAPWirelessUpPortTraffic=hwMacAPWirelessUpPortTraffic, hwApLineatePortMacAddress=hwApLineatePortMacAddress, hwApLineatePortLldpRemManAddr=hwApLineatePortLldpRemManAddr, hwApMultiLineatePortIsAddInTrunk=hwApMultiLineatePortIsAddInTrunk, hwApOpticalInfoTable=hwApOpticalInfoTable, hwApLinePortOutBytes=hwApLinePortOutBytes, hwMacApLldpAdminStatus=hwMacApLldpAdminStatus, hwApObjects=hwApObjects, hwSignalStrengthThreshold=hwSignalStrengthThreshold, hwMacApLldpRemLocalPortNum=hwMacApLldpRemLocalPortNum, hwApBootCountRowStatus=hwApBootCountRowStatus, hwApEapResponseUnicastMac=hwApEapResponseUnicastMac, hwMacApPhysicalAttrTable=hwMacApPhysicalAttrTable, hwMacApUsedType=hwMacApUsedType, hwApSysHardtwareDesc=hwApSysHardtwareDesc, hwMacApLldpEntry=hwMacApLldpEntry, hwApUnauthorizedApRecordEntry=hwApUnauthorizedApRecordEntry, hwApRegionForwardMode=hwApRegionForwardMode, hwMacApLineatePortLldpSysCab=hwMacApLineatePortLldpSysCab, hwMacApLinePortOutPkts=hwMacApLinePortOutPkts, hwApLineportMac=hwApLineportMac, hwMacApEthportDwTraffic=hwMacApEthportDwTraffic, hwMACApLldpRemManAddrOID=hwMACApLldpRemManAddrOID, hwApRegionScanChannel2G=hwApRegionScanChannel2G, hwApOfflineMac=hwApOfflineMac, hwMacApLineatePortAclNumOutboundIPV6=hwMacApLineatePortAclNumOutboundIPV6, hwApTypeLineatePortNum=hwApTypeLineatePortNum, hwMacApAirportUpTraffic=hwMacApAirportUpTraffic, hwApProfileNdTrustPort=hwApProfileNdTrustPort, hwApPhysicalAttrTable=hwApPhysicalAttrTable, hwMacApLineatePortLldpRemSysDesc=hwMacApLineatePortLldpRemSysDesc, hwMacApLineatePortLldpRemSysCapEnabled=hwMacApLineatePortLldpRemSysCapEnabled, hwMacApOfflineTime=hwMacApOfflineTime, hwAPUpPortPER=hwAPUpPortPER, hwApTypeObjects=hwApTypeObjects, hwApOpticalVendorSn=hwApOpticalVendorSn, hwApLineateportVlanTagged=hwApLineateportVlanTagged, hwMacApLineportSpeed=hwMacApLineportSpeed, hwBroadcastRestrainThresholdDown=hwBroadcastRestrainThresholdDown, hwMacApLldpRemIndex=hwMacApLldpRemIndex, hwMacApOnlineUserNum=hwMacApOnlineUserNum)
