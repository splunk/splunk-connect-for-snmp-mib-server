#
# PySNMP MIB module IP-EXTENSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IP-EXTENSION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:44:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
cjnProtocol, = mibBuilder.importSymbols("Cajun-ROOT", "cjnProtocol")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Unsigned32, Bits, Counter32, Gauge32, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, NotificationType, IpAddress, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Bits", "Counter32", "Gauge32", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "NotificationType", "IpAddress", "TimeTicks", "ModuleIdentity")
TextualConvention, PhysAddress, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "PhysAddress", "RowStatus", "DisplayString")
cjnIpv4 = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1))
if mibBuilder.loadTexts: cjnIpv4.setLastUpdated('9902110000Z')
if mibBuilder.loadTexts: cjnIpv4.setOrganization("Lucent's Concord Technology Center (CTC)")
cjnIpGblExt = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1))
cjnIpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpEnabled.setStatus('current')
cjnIpMCEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpMCEnabled.setStatus('current')
cjnIpRteEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpRteEnabled.setStatus('current')
cjnIpSSREnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpSSREnabled.setStatus('current')
cjnMaxRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(16384)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnMaxRoutes.setStatus('current')
cjnMaxArpCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999999)).clone(16384)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnMaxArpCacheEntries.setStatus('current')
cjnIpGlobalStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpGlobalStatsReset.setStatus('current')
cjnProxyArpGblConf = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 2))
cjnProxyArpLimit = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnProxyArpLimit.setStatus('current')
cjnProxyArpDefRte = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnProxyArpDefRte.setStatus('current')
cjnRtePrefGblGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3))
cjnLocalRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnLocalRtePref.setStatus('current')
cjnRIPRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnRIPRtePref.setStatus('current')
cjnOSPFIntraAreaRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOSPFIntraAreaRtePref.setStatus('current')
cjnOSPFExternalRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOSPFExternalRtePref.setStatus('current')
cjnHighPrefStaticRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnHighPrefStaticRtePref.setStatus('current')
cjnLowPrefStaticRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnLowPrefStaticRtePref.setStatus('current')
cjnOSPFInterAreaRtePref = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 3, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOSPFInterAreaRtePref.setStatus('current')
cjnIpGblStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4))
cjnIpInReceives = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpInReceives.setStatus('current')
cjnIpInHdrErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpInHdrErrors.setStatus('current')
cjnIpInAddrErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpInAddrErrors.setStatus('current')
cjnIpForwDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpForwDatagrams.setStatus('current')
cjnIpInUnknownProtos = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpInUnknownProtos.setStatus('current')
cjnIpInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpInDiscards.setStatus('current')
cjnIpInDelivers = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpInDelivers.setStatus('current')
cjnIpOutRequests = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpOutRequests.setStatus('current')
cjnIpOutDiscards = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpOutDiscards.setStatus('current')
cjnIpOutNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpOutNoRoutes.setStatus('current')
cjnIpReasmTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpReasmTimeout.setStatus('current')
cjnIpReasmReqds = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpReasmReqds.setStatus('current')
cjnIpReasmOKs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpReasmOKs.setStatus('current')
cjnIpReasmFails = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpReasmFails.setStatus('current')
cjnIpFragOKs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpFragOKs.setStatus('current')
cjnIpFragFails = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpFragFails.setStatus('current')
cjnIpFragCreates = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpFragCreates.setStatus('current')
cjnIpRoutingDiscards = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpRoutingDiscards.setStatus('current')
cjnIcmpInMsgs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInMsgs.setStatus('current')
cjnIcmpInErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInErrors.setStatus('current')
cjnIcmpInDestUnreachs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInDestUnreachs.setStatus('current')
cjnIcmpInTimeExcds = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInTimeExcds.setStatus('current')
cjnIcmpInParmProbs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInParmProbs.setStatus('current')
cjnIcmpInSrcQuenchs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInSrcQuenchs.setStatus('current')
cjnIcmpInRedirects = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInRedirects.setStatus('current')
cjnIcmpInEchos = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInEchos.setStatus('current')
cjnIcmpInEchoReps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInEchoReps.setStatus('current')
cjnIcmpInTimestamps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInTimestamps.setStatus('current')
cjnIcmpInTimestampReps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInTimestampReps.setStatus('current')
cjnIcmpInAddrMasks = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInAddrMasks.setStatus('current')
cjnIcmpInAddrMaskReps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpInAddrMaskReps.setStatus('current')
cjnIcmpOutMsgs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutMsgs.setStatus('current')
cjnIcmpOutErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutErrors.setStatus('current')
cjnIcmpOutDestUnreachs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutDestUnreachs.setStatus('current')
cjnIcmpOutTimeExcds = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutTimeExcds.setStatus('current')
cjnIcmpOutParmProbs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutParmProbs.setStatus('current')
cjnIcmpOutSrcQuenchs = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 37), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutSrcQuenchs.setStatus('current')
cjnIcmpOutRedirects = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutRedirects.setStatus('current')
cjnIcmpOutEchos = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutEchos.setStatus('current')
cjnIcmpOutEchoReps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 40), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutEchoReps.setStatus('current')
cjnIcmpOutTimestamps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 41), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutTimestamps.setStatus('current')
cjnIcmpOutTimestampReps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 42), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutTimestampReps.setStatus('current')
cjnIcmpOutAddrMasks = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutAddrMasks.setStatus('current')
cjnIcmpOutAddrMaskReps = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 44), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIcmpOutAddrMaskReps.setStatus('current')
cjnUdpInDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 45), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnUdpInDatagrams.setStatus('current')
cjnUdpNoPorts = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 46), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnUdpNoPorts.setStatus('current')
cjnUdpInErrors = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 47), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnUdpInErrors.setStatus('current')
cjnUdpOutDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 48), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnUdpOutDatagrams.setStatus('current')
cjnIpmcForwDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpmcForwDatagrams.setStatus('current')
cjnIpmcInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 50), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpmcInDiscards.setStatus('current')
cjnIpmcInReceives = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 4, 51), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpmcInReceives.setStatus('current')
cjnIpNetToMediaGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5))
cjnIpNetToMediaTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1), )
if mibBuilder.loadTexts: cjnIpNetToMediaTable.setStatus('current')
cjnIpNetToMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1, 1), ).setIndexNames((0, "IP-EXTENSION-MIB", "cjnIpNetToMediaIfIndex"), (0, "IP-EXTENSION-MIB", "cjnIpNetToMediaNetAddress"))
if mibBuilder.loadTexts: cjnIpNetToMediaEntry.setStatus('current')
cjnIpNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIpNetToMediaIfIndex.setStatus('current')
cjnIpNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1, 1, 2), PhysAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpNetToMediaPhysAddress.setStatus('current')
cjnIpNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpNetToMediaNetAddress.setStatus('current')
cjnIpNetToMediaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpNetToMediaRowStatus.setStatus('current')
cjnIpNetToMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIpNetToMediaType.setStatus('current')
mibBuilder.exportSymbols("IP-EXTENSION-MIB", cjnIpNetToMediaNetAddress=cjnIpNetToMediaNetAddress, cjnIpEnabled=cjnIpEnabled, cjnIpOutNoRoutes=cjnIpOutNoRoutes, cjnProxyArpDefRte=cjnProxyArpDefRte, cjnIcmpInAddrMaskReps=cjnIcmpInAddrMaskReps, cjnIcmpInEchoReps=cjnIcmpInEchoReps, cjnIpInDiscards=cjnIpInDiscards, cjnIpReasmFails=cjnIpReasmFails, cjnIpmcInDiscards=cjnIpmcInDiscards, cjnIpmcInReceives=cjnIpmcInReceives, cjnUdpOutDatagrams=cjnUdpOutDatagrams, cjnIcmpOutAddrMasks=cjnIcmpOutAddrMasks, cjnIpReasmOKs=cjnIpReasmOKs, cjnMaxRoutes=cjnMaxRoutes, cjnIcmpOutParmProbs=cjnIcmpOutParmProbs, cjnIpInDelivers=cjnIpInDelivers, cjnIcmpInTimestamps=cjnIcmpInTimestamps, cjnIpMCEnabled=cjnIpMCEnabled, cjnIcmpInMsgs=cjnIcmpInMsgs, cjnIpSSREnabled=cjnIpSSREnabled, cjnIcmpOutAddrMaskReps=cjnIcmpOutAddrMaskReps, cjnOSPFExternalRtePref=cjnOSPFExternalRtePref, cjnIpFragOKs=cjnIpFragOKs, cjnIpOutDiscards=cjnIpOutDiscards, cjnIpNetToMediaEntry=cjnIpNetToMediaEntry, cjnIcmpInTimestampReps=cjnIcmpInTimestampReps, cjnIcmpInDestUnreachs=cjnIcmpInDestUnreachs, cjnUdpInDatagrams=cjnUdpInDatagrams, cjnIcmpOutEchoReps=cjnIcmpOutEchoReps, cjnIpNetToMediaTable=cjnIpNetToMediaTable, cjnIpNetToMediaIfIndex=cjnIpNetToMediaIfIndex, cjnIcmpInSrcQuenchs=cjnIcmpInSrcQuenchs, cjnIpNetToMediaType=cjnIpNetToMediaType, cjnIcmpInRedirects=cjnIcmpInRedirects, cjnIpmcForwDatagrams=cjnIpmcForwDatagrams, cjnHighPrefStaticRtePref=cjnHighPrefStaticRtePref, cjnLocalRtePref=cjnLocalRtePref, cjnRIPRtePref=cjnRIPRtePref, cjnIpRoutingDiscards=cjnIpRoutingDiscards, cjnIcmpOutEchos=cjnIcmpOutEchos, cjnOSPFIntraAreaRtePref=cjnOSPFIntraAreaRtePref, cjnIcmpOutDestUnreachs=cjnIcmpOutDestUnreachs, cjnIcmpOutMsgs=cjnIcmpOutMsgs, cjnUdpInErrors=cjnUdpInErrors, cjnIpInHdrErrors=cjnIpInHdrErrors, cjnIpReasmTimeout=cjnIpReasmTimeout, cjnIpFragFails=cjnIpFragFails, cjnIpNetToMediaRowStatus=cjnIpNetToMediaRowStatus, cjnIpNetToMediaGroup=cjnIpNetToMediaGroup, cjnRtePrefGblGroup=cjnRtePrefGblGroup, cjnIcmpInAddrMasks=cjnIcmpInAddrMasks, cjnLowPrefStaticRtePref=cjnLowPrefStaticRtePref, cjnIcmpInParmProbs=cjnIcmpInParmProbs, cjnIpRteEnabled=cjnIpRteEnabled, cjnOSPFInterAreaRtePref=cjnOSPFInterAreaRtePref, cjnIpInAddrErrors=cjnIpInAddrErrors, cjnIpGblExt=cjnIpGblExt, cjnIpFragCreates=cjnIpFragCreates, cjnProxyArpGblConf=cjnProxyArpGblConf, cjnProxyArpLimit=cjnProxyArpLimit, cjnIcmpInErrors=cjnIcmpInErrors, cjnIcmpOutRedirects=cjnIcmpOutRedirects, cjnIcmpInEchos=cjnIcmpInEchos, cjnIpGblStats=cjnIpGblStats, cjnIcmpOutTimestamps=cjnIcmpOutTimestamps, cjnIpInUnknownProtos=cjnIpInUnknownProtos, cjnIcmpOutSrcQuenchs=cjnIcmpOutSrcQuenchs, cjnIpOutRequests=cjnIpOutRequests, cjnIpv4=cjnIpv4, cjnIcmpOutErrors=cjnIcmpOutErrors, cjnIpInReceives=cjnIpInReceives, cjnIpReasmReqds=cjnIpReasmReqds, PYSNMP_MODULE_ID=cjnIpv4, cjnIcmpOutTimeExcds=cjnIcmpOutTimeExcds, cjnMaxArpCacheEntries=cjnMaxArpCacheEntries, cjnIpGlobalStatsReset=cjnIpGlobalStatsReset, cjnUdpNoPorts=cjnUdpNoPorts, cjnIcmpInTimeExcds=cjnIcmpInTimeExcds, cjnIcmpOutTimestampReps=cjnIcmpOutTimestampReps, cjnIpForwDatagrams=cjnIpForwDatagrams, cjnIpNetToMediaPhysAddress=cjnIpNetToMediaPhysAddress)
