#
# PySNMP MIB module BIANCA-BRICK-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, NotificationType, Gauge32, MibIdentifier, Bits, ModuleIdentity, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "NotificationType", "Gauge32", "MibIdentifier", "Bits", "ModuleIdentity", "Integer32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
biboipx = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 9))
ipxClientTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 9, 1), )
if mibBuilder.loadTexts: ipxClientTable.setStatus('mandatory')
ipxClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 9, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-IPX-MIB", "ipxClientCircIndex"))
if mibBuilder.loadTexts: ipxClientEntry.setStatus('mandatory')
ipxClientNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxClientNode.setStatus('mandatory')
ipxClientCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxClientCircIndex.setStatus('mandatory')
ipxClientReconns = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxClientReconns.setStatus('mandatory')
ipxAllowTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 9, 2), )
if mibBuilder.loadTexts: ipxAllowTable.setStatus('mandatory')
ipxAllowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1), ).setIndexNames((0, "BIANCA-BRICK-IPX-MIB", "ipxAllowPktTypeMode"), (0, "BIANCA-BRICK-IPX-MIB", "ipxAllowSrcIfIndexMode"))
if mibBuilder.loadTexts: ipxAllowEntry.setStatus('mandatory')
ipxAllowPktTypeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowPktTypeMode.setStatus('mandatory')
ipxAllowPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 1, 4, 5, 17, 20))).clone(namedValues=NamedValues(("unknown", 256), ("rip", 1), ("sap", 4), ("spx", 5), ("ncp", 17), ("netbios", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowPktType.setStatus('mandatory')
ipxAllowDstIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("up", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstIfStatus.setStatus('mandatory')
ipxAllowDstNetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstNetMode.setStatus('mandatory')
ipxAllowDstNet = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstNet.setStatus('mandatory')
ipxAllowDstNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstNodeMode.setStatus('mandatory')
ipxAllowDstNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstNode.setStatus('mandatory')
ipxAllowDstSockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstSockMode.setStatus('mandatory')
ipxAllowDstSock = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowDstSock.setStatus('mandatory')
ipxAllowSrcIfIndexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcIfIndexMode.setStatus('mandatory')
ipxAllowSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcIfIndex.setStatus('mandatory')
ipxAllowSrcNetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcNetMode.setStatus('mandatory')
ipxAllowSrcNet = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcNet.setStatus('mandatory')
ipxAllowSrcNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcNodeMode.setStatus('mandatory')
ipxAllowSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcNode.setStatus('mandatory')
ipxAllowSrcSockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcSockMode.setStatus('mandatory')
ipxAllowSrcSock = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAllowSrcSock.setStatus('mandatory')
ipxDenyTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 9, 3), )
if mibBuilder.loadTexts: ipxDenyTable.setStatus('mandatory')
ipxDenyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1), ).setIndexNames((0, "BIANCA-BRICK-IPX-MIB", "ipxDenyPktTypeMode"), (0, "BIANCA-BRICK-IPX-MIB", "ipxDenySrcIfIndexMode"))
if mibBuilder.loadTexts: ipxDenyEntry.setStatus('mandatory')
ipxDenyPktTypeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyPktTypeMode.setStatus('mandatory')
ipxDenyPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 1, 4, 5, 17, 20))).clone(namedValues=NamedValues(("unknown", 256), ("rip", 1), ("sap", 4), ("spx", 5), ("ncp", 17), ("netbios", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyPktType.setStatus('mandatory')
ipxDenyDstIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("dormant", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstIfStatus.setStatus('mandatory')
ipxDenyDstNetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstNetMode.setStatus('mandatory')
ipxDenyDstNet = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstNet.setStatus('mandatory')
ipxDenyDstNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstNodeMode.setStatus('mandatory')
ipxDenyDstNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstNode.setStatus('mandatory')
ipxDenyDstSockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstSockMode.setStatus('mandatory')
ipxDenyDstSock = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenyDstSock.setStatus('mandatory')
ipxDenySrcIfIndexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcIfIndexMode.setStatus('mandatory')
ipxDenySrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcIfIndex.setStatus('mandatory')
ipxDenySrcNetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcNetMode.setStatus('mandatory')
ipxDenySrcNet = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcNet.setStatus('mandatory')
ipxDenySrcNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcNodeMode.setStatus('mandatory')
ipxDenySrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcNode.setStatus('mandatory')
ipxDenySrcSockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcSockMode.setStatus('mandatory')
ipxDenySrcSock = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 3, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDenySrcSock.setStatus('mandatory')
ipxAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 9, 4))
ipxAdmSpxSpoofing = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmSpxSpoofing.setStatus('mandatory')
ipxAdmIpxSpoofing = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmIpxSpoofing.setStatus('mandatory')
ipxAdmNETBIOSRepl = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("lan-only", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmNETBIOSRepl.setStatus('mandatory')
ipxAdmSpxVerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmSpxVerTimeout.setStatus('mandatory')
ipxAdmSpxAbrTimeout = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmSpxAbrTimeout.setStatus('mandatory')
ipxAdmRIPSAPOffset = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmRIPSAPOffset.setStatus('mandatory')
ipxAdmLearnStatics = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("done", 1), ("rip", 2), ("sap", 3), ("both", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdmLearnStatics.setStatus('mandatory')
ipxAdmSpxConns = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 9, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdmSpxConns.setStatus('mandatory')
sapAllowTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 9, 5), )
if mibBuilder.loadTexts: sapAllowTable.setStatus('mandatory')
sapAllowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1), ).setIndexNames((0, "BIANCA-BRICK-IPX-MIB", "sapAllowIfIndex"))
if mibBuilder.loadTexts: sapAllowEntry.setStatus('mandatory')
sapAllowIfIndexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowIfIndexMode.setStatus('mandatory')
sapAllowIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowIfIndex.setStatus('mandatory')
sapAllowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dont-verify", 1), ("outgoing", 2), ("incoming", 3), ("both", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowDirection.setStatus('mandatory')
sapAllowTypeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowTypeMode.setStatus('mandatory')
sapAllowType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowType.setStatus('mandatory')
sapAllowNetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowNetMode.setStatus('mandatory')
sapAllowNet = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowNet.setStatus('mandatory')
sapAllowNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowNodeMode.setStatus('mandatory')
sapAllowNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowNode.setStatus('mandatory')
sapAllowSockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowSockMode.setStatus('mandatory')
sapAllowSock = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowSock.setStatus('mandatory')
sapAllowName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 5, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapAllowName.setStatus('mandatory')
sapDenyTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 9, 6), )
if mibBuilder.loadTexts: sapDenyTable.setStatus('mandatory')
sapDenyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1), ).setIndexNames((0, "BIANCA-BRICK-IPX-MIB", "sapDenyIfIndex"))
if mibBuilder.loadTexts: sapDenyEntry.setStatus('mandatory')
sapDenyIfIndexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyIfIndexMode.setStatus('mandatory')
sapDenyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyIfIndex.setStatus('mandatory')
sapDenyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dont-verify", 1), ("outgoing", 2), ("incoming", 3), ("both", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyDirection.setStatus('mandatory')
sapDenyTypeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyTypeMode.setStatus('mandatory')
sapDenyType = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyType.setStatus('mandatory')
sapDenyNetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyNetMode.setStatus('mandatory')
sapDenyNet = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyNet.setStatus('mandatory')
sapDenyNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyNodeMode.setStatus('mandatory')
sapDenyNode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyNode.setStatus('mandatory')
sapDenySockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dont-verify", 1), ("verify", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenySockMode.setStatus('mandatory')
sapDenySock = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenySock.setStatus('mandatory')
sapDenyName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 9, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapDenyName.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-IPX-MIB", biboipx=biboipx, sapDenyNet=sapDenyNet, ipxAdmSpxAbrTimeout=ipxAdmSpxAbrTimeout, ipxAllowDstIfStatus=ipxAllowDstIfStatus, sapAllowTypeMode=sapAllowTypeMode, sapDenyNetMode=sapDenyNetMode, ipxAllowEntry=ipxAllowEntry, sapDenySock=sapDenySock, ipxAllowDstNetMode=ipxAllowDstNetMode, ipxAllowSrcNode=ipxAllowSrcNode, ipxDenySrcNodeMode=ipxDenySrcNodeMode, sapAllowIfIndexMode=sapAllowIfIndexMode, sapAllowNode=sapAllowNode, ipxAllowDstSockMode=ipxAllowDstSockMode, ipxDenyDstIfStatus=ipxDenyDstIfStatus, ipxAllowSrcSock=ipxAllowSrcSock, ipxDenyDstNodeMode=ipxDenyDstNodeMode, ipxAllowDstNet=ipxAllowDstNet, ipxDenyDstSockMode=ipxDenyDstSockMode, ipxAdmLearnStatics=ipxAdmLearnStatics, ipxAllowPktType=ipxAllowPktType, ipxDenyEntry=ipxDenyEntry, sapDenyIfIndexMode=sapDenyIfIndexMode, sapDenyTable=sapDenyTable, ipxClientTable=ipxClientTable, ipxAdmRIPSAPOffset=ipxAdmRIPSAPOffset, sapAllowName=sapAllowName, ipxDenyDstSock=ipxDenyDstSock, ipxAllowDstSock=ipxAllowDstSock, ipxAllowDstNodeMode=ipxAllowDstNodeMode, ipxDenySrcNet=ipxDenySrcNet, ipxDenyDstNetMode=ipxDenyDstNetMode, internet=internet, ipxAllowSrcNet=ipxAllowSrcNet, sapAllowNodeMode=sapAllowNodeMode, ipxDenyTable=ipxDenyTable, sapAllowNet=sapAllowNet, ipxDenySrcIfIndex=ipxDenySrcIfIndex, sapDenyDirection=sapDenyDirection, ipxDenySrcIfIndexMode=ipxDenySrcIfIndexMode, ipxAllowPktTypeMode=ipxAllowPktTypeMode, sapDenyEntry=sapDenyEntry, ipxDenySrcNetMode=ipxDenySrcNetMode, ipxAdmNETBIOSRepl=ipxAdmNETBIOSRepl, ipxDenyDstNode=ipxDenyDstNode, sapDenyTypeMode=sapDenyTypeMode, ipxAdmSpxConns=ipxAdmSpxConns, sapAllowDirection=sapAllowDirection, sapDenyIfIndex=sapDenyIfIndex, ipxClientCircIndex=ipxClientCircIndex, ipxAllowSrcSockMode=ipxAllowSrcSockMode, ipxDenyPktType=ipxDenyPktType, sapAllowEntry=sapAllowEntry, sapAllowType=sapAllowType, ipxAllowSrcIfIndexMode=ipxAllowSrcIfIndexMode, ipxDenySrcSockMode=ipxDenySrcSockMode, ipxClientReconns=ipxClientReconns, ipxAdmIpxSpoofing=ipxAdmIpxSpoofing, ipxAllowTable=ipxAllowTable, bintec=bintec, sapDenySockMode=sapDenySockMode, ipxAllowSrcNodeMode=ipxAllowSrcNodeMode, enterprises=enterprises, sapDenyNodeMode=sapDenyNodeMode, ipxDenyDstNet=ipxDenyDstNet, sapAllowIfIndex=sapAllowIfIndex, sapAllowSockMode=sapAllowSockMode, ipxDenySrcSock=ipxDenySrcSock, sapDenyNode=sapDenyNode, sapAllowSock=sapAllowSock, ipxAllowSrcIfIndex=ipxAllowSrcIfIndex, sapDenyName=sapDenyName, ipxDenyPktTypeMode=ipxDenyPktTypeMode, sapAllowNetMode=sapAllowNetMode, ipxClientNode=ipxClientNode, ipxAdmin=ipxAdmin, ipxAdmSpxVerTimeout=ipxAdmSpxVerTimeout, ipxAdmSpxSpoofing=ipxAdmSpxSpoofing, ipxDenySrcNode=ipxDenySrcNode, org=org, ipxClientEntry=ipxClientEntry, sapDenyType=sapDenyType, ipxAllowSrcNetMode=ipxAllowSrcNetMode, dod=dod, ipxAllowDstNode=ipxAllowDstNode, sapAllowTable=sapAllowTable, private=private, bibo=bibo)
