#
# PySNMP MIB module Fore-DSX1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-DSX1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
asx, = mibBuilder.importSymbols("Fore-Common-MIB", "asx")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, ModuleIdentity, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, IpAddress, Counter64, Counter32, NotificationType, ObjectIdentity, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "IpAddress", "Counter64", "Counter32", "NotificationType", "ObjectIdentity", "Bits", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
foreDsx1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10))
if mibBuilder.loadTexts: foreDsx1.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: foreDsx1.setOrganization('FORE')
dsx1ForeConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1))
dsx1ForeStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2))
dsx1ForeConfTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1), )
if mibBuilder.loadTexts: dsx1ForeConfTable.setStatus('current')
dsx1ForeConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1), ).setIndexNames((0, "Fore-DSX1-MIB", "dsx1ForeLineIndex"))
if mibBuilder.loadTexts: dsx1ForeConfEntry.setStatus('current')
dsx1ForeLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeLineIndex.setStatus('current')
dsx1ForeReceiveCode = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("dsx1ReceiveNoCode", 1), ("dsx1ReceiveLineCode", 2), ("dsx1ReceivePayloadCode", 3), ("dsx1ReceiveResetCode", 4), ("dsx1ReceiveQRS", 5), ("dsx1Receive511Pattern", 6), ("dsx1Receive3in24Pattern", 7), ("dsx1ReceiveOtherTestPattern", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeReceiveCode.setStatus('current')
dsx1ForeLineLength = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("dsx1LineLt40", 1), ("dsx1Line40-80", 2), ("dsx1Line80-120", 3), ("dsx1Line120-160", 4), ("dsx1Line160-200", 5), ("dsx1LineE1Coax", 6), ("dsx1LineTwistedPair", 7))).clone('dsx1LineLt40')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeLineLength.setStatus('current')
dsx1ForeFdlConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeFdlConfiguration.setStatus('current')
dsx1ForeLineImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 5), Integer32().clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeLineImpedance.setStatus('deprecated')
dsx1ForeFdlPerfConf = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeFdlPerfConf.setStatus('current')
dsx1ForeFdlBomConf = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeFdlBomConf.setStatus('current')
dsx1ForeUpStreamAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeUpStreamAIS.setStatus('current')
dsx1ForePortModel = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForePortModel.setStatus('current')
dsx1ForeAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsx1ForeAdminStatus.setStatus('current')
dsx1ForeFramingTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1), )
if mibBuilder.loadTexts: dsx1ForeFramingTable.setStatus('current')
dsx1ForeFramingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1), ).setIndexNames((0, "Fore-DSX1-MIB", "dsx1ForeFramingIndex"))
if mibBuilder.loadTexts: dsx1ForeFramingEntry.setStatus('current')
dsx1ForeFramingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingIndex.setStatus('current')
dsx1ForeFramingLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingLOSs.setStatus('current')
dsx1ForeFramingLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingLCVs.setStatus('current')
dsx1ForeFramingFERRs = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingFERRs.setStatus('current')
dsx1ForeFramingOOFs = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingOOFs.setStatus('current')
dsx1ForeFramingAISs = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingAISs.setStatus('current')
dsx1ForeFramingB8ZSPatterns = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingB8ZSPatterns.setStatus('current')
dsx1ForeFraming8Zeros = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFraming8Zeros.setStatus('current')
dsx1ForeFraming16Zeros = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFraming16Zeros.setStatus('current')
dsx1ForeFramingYellowAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingYellowAlarms.setStatus('current')
dsx1ForeFramingRedAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingRedAlarms.setStatus('current')
dsx1ForeFramingBEEs = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeFramingBEEs.setStatus('current')
dsx1ForeAtmTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 2), )
if mibBuilder.loadTexts: dsx1ForeAtmTable.setStatus('current')
dsx1ForeAtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 2, 1), ).setIndexNames((0, "Fore-DSX1-MIB", "dsx1ForeAtmIndex"))
if mibBuilder.loadTexts: dsx1ForeAtmEntry.setStatus('current')
dsx1ForeAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeAtmIndex.setStatus('current')
dsx1ForeAtmRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeAtmRxCells.setStatus('current')
dsx1ForeAtmTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 10, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsx1ForeAtmTxCells.setStatus('current')
mibBuilder.exportSymbols("Fore-DSX1-MIB", dsx1ForeFramingOOFs=dsx1ForeFramingOOFs, dsx1ForeFramingB8ZSPatterns=dsx1ForeFramingB8ZSPatterns, dsx1ForeFramingEntry=dsx1ForeFramingEntry, dsx1ForeFramingLCVs=dsx1ForeFramingLCVs, dsx1ForeLineImpedance=dsx1ForeLineImpedance, foreDsx1=foreDsx1, PYSNMP_MODULE_ID=foreDsx1, dsx1ForeFramingFERRs=dsx1ForeFramingFERRs, dsx1ForeAtmTable=dsx1ForeAtmTable, dsx1ForeFraming16Zeros=dsx1ForeFraming16Zeros, dsx1ForeConfEntry=dsx1ForeConfEntry, dsx1ForeFramingRedAlarms=dsx1ForeFramingRedAlarms, dsx1ForeAtmTxCells=dsx1ForeAtmTxCells, dsx1ForeStatsGroup=dsx1ForeStatsGroup, dsx1ForeConfTable=dsx1ForeConfTable, dsx1ForePortModel=dsx1ForePortModel, dsx1ForeFdlBomConf=dsx1ForeFdlBomConf, dsx1ForeAtmRxCells=dsx1ForeAtmRxCells, dsx1ForeAtmIndex=dsx1ForeAtmIndex, dsx1ForeConfGroup=dsx1ForeConfGroup, dsx1ForeFramingYellowAlarms=dsx1ForeFramingYellowAlarms, dsx1ForeFramingAISs=dsx1ForeFramingAISs, dsx1ForeFramingBEEs=dsx1ForeFramingBEEs, dsx1ForeLineIndex=dsx1ForeLineIndex, dsx1ForeFramingTable=dsx1ForeFramingTable, dsx1ForeReceiveCode=dsx1ForeReceiveCode, dsx1ForeUpStreamAIS=dsx1ForeUpStreamAIS, dsx1ForeFdlPerfConf=dsx1ForeFdlPerfConf, dsx1ForeFraming8Zeros=dsx1ForeFraming8Zeros, dsx1ForeAtmEntry=dsx1ForeAtmEntry, dsx1ForeFramingLOSs=dsx1ForeFramingLOSs, dsx1ForeLineLength=dsx1ForeLineLength, dsx1ForeFramingIndex=dsx1ForeFramingIndex, dsx1ForeFdlConfiguration=dsx1ForeFdlConfiguration, dsx1ForeAdminStatus=dsx1ForeAdminStatus)
