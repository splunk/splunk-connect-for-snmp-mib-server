#
# PySNMP MIB module HUAWEI-ETHARP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ETHARP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
entPhysicalName, PhysicalIndex, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "PhysicalIndex", "entPhysicalIndex")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressIPv4, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Counter32, ObjectIdentity, Unsigned32, Gauge32, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, Bits, TimeTicks, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "ObjectIdentity", "Unsigned32", "Gauge32", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "Bits", "TimeTicks", "Integer32", "MibIdentifier")
PhysAddress, RowStatus, DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "RowStatus", "DisplayString", "MacAddress", "TextualConvention")
hwEthernetARPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123))
hwEthernetARPMIB.setRevisions(('2014-04-23 10:44', '2013-09-07 00:00', '2006-06-10 00:00',))
if mibBuilder.loadTexts: hwEthernetARPMIB.setLastUpdated('201404231044Z')
if mibBuilder.loadTexts: hwEthernetARPMIB.setOrganization('Huawei Technologies Co.,Ltd.')
hwEthernetARPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1))
hwEthernetARPAntiAttackLog = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPAntiAttackLog.setStatus('current')
hwEthernetARPLearningStrict = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPLearningStrict.setStatus('current')
hwEthernetARPSpeedLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 3), )
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitTable.setStatus('current')
hwEthernetARPSpeedLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 3, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthernetARPLimitSlot"), (0, "HUAWEI-ETHARP-MIB", "hwEthernetARPLimitType"), (0, "HUAWEI-ETHARP-MIB", "hwEthernetARPLimitIPType"))
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitEntry.setStatus('current')
hwEthernetARPLimitSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwEthernetARPLimitSlot.setStatus('current')
hwEthernetARPLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("arp", 1), ("arpmiss", 2))))
if mibBuilder.loadTexts: hwEthernetARPLimitType.setStatus('current')
hwEthernetARPLimitIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 8))).clone(namedValues=NamedValues(("sourceip", 4), ("destinationip", 8))))
if mibBuilder.loadTexts: hwEthernetARPLimitIPType.setStatus('current')
hwEthernetARPLimitSpeedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPLimitSpeedValue.setStatus('current')
hwEthernetARPSpeedLimitIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 4), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitIfIndex.setStatus('current')
hwEthernetARPSpeedLimitConfigured = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 5), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitConfigured.setStatus('current')
hwEthernetARPSpeedLimitCurrent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 6), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitCurrent.setStatus('current')
hwEthernetARPSpeedLimitType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitType.setStatus('current')
hwEthernetARPSpeedLimitSrcIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 8), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitSrcIPAddr.setStatus('current')
hwEthernetARPSpeedLimitDstIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 9), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitDstIPAddr.setStatus('current')
hwEthernetARPSpeedLimitVPNinstance = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitVPNinstance.setStatus('current')
hwEthernetARPStaticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11), )
if mibBuilder.loadTexts: hwEthernetARPStaticsTable.setStatus('current')
hwEthernetARPStaticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthernetARPStaticsSlot"))
if mibBuilder.loadTexts: hwEthernetARPStaticsEntry.setStatus('current')
hwEthernetARPStaticsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 128), ValueRangeConstraint(65535, 65535), )))
if mibBuilder.loadTexts: hwEthernetARPStaticsSlot.setStatus('current')
hwEthernetARPStaticsLearnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPStaticsLearnTotal.setStatus('current')
hwEthernetARPDropForLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPDropForLimit.setStatus('current')
hwEthernetARPDropForARPSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPDropForARPSuppress.setStatus('current')
hwEthernetARPDropForARPMissSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPDropForARPMissSuppress.setStatus('current')
hwEthernetARPDropForOther = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPDropForOther.setStatus('current')
hwEthernetARPMissDropForOther = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPMissDropForOther.setStatus('current')
hwEthernetARPRcvNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPRcvNum.setStatus('current')
hwEthernetARPMissRcvNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPMissRcvNum.setStatus('current')
hwEthernetARPStaticsOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unused", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPStaticsOperation.setStatus('current')
hwEthernetARPDropForARPProxySuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPDropForARPProxySuppress.setStatus('current')
hwEthARPShowWithInterAndVidTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 12), )
if mibBuilder.loadTexts: hwEthARPShowWithInterAndVidTable.setStatus('current')
hwEthARPShowWithInterAndVidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 12, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthARPShowIfindex"), (0, "HUAWEI-ETHARP-MIB", "hwEthARPShowVid"), (0, "HUAWEI-ETHARP-MIB", "hwEthARPIpAddr"))
if mibBuilder.loadTexts: hwEthARPShowWithInterAndVidEntry.setStatus('current')
hwEthARPShowIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 12, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwEthARPShowIfindex.setStatus('current')
hwEthARPShowVid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwEthARPShowVid.setStatus('current')
hwEthARPIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 12, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwEthARPIpAddr.setStatus('current')
hwEthARPMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 12, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthARPMacAddr.setStatus('current')
hwEthARPLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13), )
if mibBuilder.loadTexts: hwEthARPLimitTable.setStatus('current')
hwEthARPLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthARPLimitCfgIfindex"), (0, "HUAWEI-ETHARP-MIB", "hwEthARPVLANFirst"), (0, "HUAWEI-ETHARP-MIB", "hwEthARPVLANLast"))
if mibBuilder.loadTexts: hwEthARPLimitEntry.setStatus('current')
hwEthARPLimitCfgIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwEthARPLimitCfgIfindex.setStatus('current')
hwEthARPVLANFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwEthARPVLANFirst.setStatus('current')
hwEthARPVLANLast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwEthARPVLANLast.setStatus('current')
hwEthARPLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEthARPLimitNum.setStatus('current')
hwEthARPLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEthARPLimitRowStatus.setStatus('current')
hwEthernetARPLearningStrictInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 14), )
if mibBuilder.loadTexts: hwEthernetARPLearningStrictInterfaceTable.setStatus('current')
hwEthernetARPLearningStrictInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 14, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthernetARPLearningStrictIfindex"))
if mibBuilder.loadTexts: hwEthernetARPLearningStrictInterfaceEntry.setStatus('current')
hwEthernetARPLearningStrictIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 14, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwEthernetARPLearningStrictIfindex.setStatus('current')
hwEthernetARPLearningStrictState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forceEnable", 1), ("forceDisable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEthernetARPLearningStrictState.setStatus('current')
hwEthernetARPLearningStrictRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 14, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwEthernetARPLearningStrictRowStatus.setStatus('current')
hwArpLinkInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15), )
if mibBuilder.loadTexts: hwArpLinkInterfaceTable.setStatus('current')
hwArpLinkInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwArpLinkIfIndex"))
if mibBuilder.loadTexts: hwArpLinkInterfaceEntry.setStatus('current')
hwArpLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwArpLinkIfIndex.setStatus('current')
hwArpLinkPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 11), InetAddressIPv4()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpLinkPeerIp.setStatus('current')
hwArpLinkDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 10000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpLinkDetectTime.setStatus('current')
hwArpLinkDetectTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpLinkDetectTimes.setStatus('current')
hwArpLinkDetectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loose", 1), ("strict", 2))).clone('strict')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpLinkDetectMode.setStatus('current')
hwArpLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpLinkStatus.setStatus('current')
hwArpLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 15, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpLinkRowStatus.setStatus('current')
hwArpEntryExpireControlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 16), )
if mibBuilder.loadTexts: hwArpEntryExpireControlTable.setStatus('current')
hwArpEntryExpireControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 16, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwArpEntryExpireIfIndex"))
if mibBuilder.loadTexts: hwArpEntryExpireControlEntry.setStatus('current')
hwArpEntryExpireIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 16, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwArpEntryExpireIfIndex.setStatus('current')
hwArpEntryExpireDetectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("unicast", 2))).clone('broadcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwArpEntryExpireDetectMode.setStatus('current')
hwArpEntryExpireFakeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 36000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwArpEntryExpireFakeTime.setStatus('current')
hwArpDynTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17), )
if mibBuilder.loadTexts: hwArpDynTable.setStatus('current')
hwArpDynEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwArpDynIfIndex"), (0, "HUAWEI-ETHARP-MIB", "hwArpDynIpAdd"), (0, "HUAWEI-ETHARP-MIB", "hwArpDynVrf"))
if mibBuilder.loadTexts: hwArpDynEntry.setStatus('current')
hwArpDynIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwArpDynIfIndex.setStatus('current')
hwArpDynIpAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 2), InetAddressIPv4())
if mibBuilder.loadTexts: hwArpDynIpAdd.setStatus('current')
hwArpDynVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwArpDynVrf.setStatus('current')
hwArpDynMacAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 11), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpDynMacAdd.setStatus('current')
hwArpDynVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpDynVlanId.setStatus('current')
hwArpDynCeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpDynCeVlanId.setStatus('current')
hwArpDynOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 14), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpDynOutIfIndex.setStatus('current')
hwArpDynExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 17, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpDynExpireTime.setStatus('current')
hwArpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18), )
if mibBuilder.loadTexts: hwArpCfgTable.setStatus('current')
hwArpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwArpCfgIpAdd"), (0, "HUAWEI-ETHARP-MIB", "hwArpCfgVrf"))
if mibBuilder.loadTexts: hwArpCfgEntry.setStatus('current')
hwArpCfgIpAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 1), InetAddressIPv4())
if mibBuilder.loadTexts: hwArpCfgIpAdd.setStatus('current')
hwArpCfgMacAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpCfgMacAdd.setStatus('current')
hwArpCfgVrf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwArpCfgVrf.setStatus('current')
hwArpCfgVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpCfgVlanId.setStatus('current')
hwArpCfgCeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpCfgCeVlanId.setStatus('current')
hwArpCfgOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpCfgOutIfIndex.setStatus('current')
hwArpCfgRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 18, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpCfgRowstatus.setStatus('current')
hwEthernetARPAntiAttackStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("fixMac", 1), ("fixAll", 2), ("sendAck", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPAntiAttackStatus.setStatus('current')
hwEthernetARPAntiGateWayConflict = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 20), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPAntiGateWayConflict.setStatus('current')
hwEthernetARPLogAndTrapTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPLogAndTrapTimer.setStatus('current')
hwEthernetARPAntiAttackObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 22))
hwEthernetARPAntiAttackIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 22, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPAntiAttackIpAddress.setStatus('current')
hwEthernetARPAntiAttackMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 22, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPAntiAttackMacAddress.setStatus('current')
hwEthernetARPAntiAttackVlanId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 22, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPAntiAttackVlanId.setStatus('current')
hwEthernetARPAntiAttackIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 22, 4), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPAntiAttackIfName.setStatus('current')
hwArpEntryGatewayConflictTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23), )
if mibBuilder.loadTexts: hwArpEntryGatewayConflictTable.setStatus('current')
hwArpEntryGatewayConflictEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictIndex"))
if mibBuilder.loadTexts: hwArpEntryGatewayConflictEntry.setStatus('current')
hwEthernetARPAntiGatewayConflictIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: hwEthernetARPAntiGatewayConflictIndex.setStatus('current')
hwEthernetARPAntiGatewayConflictIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPAntiGatewayConflictIpAddress.setStatus('current')
hwEthernetARPAntiGatewayConflictMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPAntiGatewayConflictMacAddress.setStatus('current')
hwEthernetARPAntiGatewayConflictVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPAntiGatewayConflictVlanId.setStatus('current')
hwEthernetARPAntiGatewayConflictIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 23, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPAntiGatewayConflictIfName.setStatus('current')
hwArpSecValidateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 24), )
if mibBuilder.loadTexts: hwArpSecValidateTable.setStatus('current')
hwArpSecValidateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 24, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwArpSecValidateIfIndex"))
if mibBuilder.loadTexts: hwArpSecValidateEntry.setStatus('current')
hwArpSecValidateIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 24, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwArpSecValidateIfIndex.setStatus('current')
hwArpSecValidateSmac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 24, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpSecValidateSmac.setStatus('current')
hwArpSecValidateDmac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 24, 1, 3), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpSecValidateDmac.setStatus('current')
hwArpSecValidateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 24, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwArpSecValidateRowStatus.setStatus('current')
hwARPGratuitousSendTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 25), )
if mibBuilder.loadTexts: hwARPGratuitousSendTable.setStatus('current')
hwARPGratuitousSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 25, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwARPGratuitousSendIfIndex"))
if mibBuilder.loadTexts: hwARPGratuitousSendEntry.setStatus('current')
hwARPGratuitousSendIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 25, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwARPGratuitousSendIfIndex.setStatus('current')
hwARPGratuitousSendEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 25, 1, 2), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwARPGratuitousSendEnable.setStatus('current')
hwARPArpGratuitousSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwARPArpGratuitousSendInterval.setStatus('current')
hwEthernetARPThresholdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 26))
hwEthernetARPThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 26, 1), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPThresholdValue.setStatus('current')
hwEthernetARPThresholdDynamicNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 26, 2), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPThresholdDynamicNumber.setStatus('current')
hwEthernetARPThresholdStaticNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 26, 3), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPThresholdStaticNumber.setStatus('current')
hwEthernetARPConflictDetect = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwEthernetARPConflictDetect.setStatus('current')
hwETHARPIPConflictObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28))
hwEthernetARPIPConflictIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictIPAddress.setStatus('current')
hwEthernetARPIPConflictLocalInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictLocalInterfaceName.setStatus('current')
hwEthernetARPIPConflictLocalMAC = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictLocalMAC.setStatus('current')
hwEthernetARPIPConflictLocalVLAN = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictLocalVLAN.setStatus('current')
hwEthernetARPIPConflictLocalCEVLAN = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictLocalCEVLAN.setStatus('current')
hwEthernetARPIPConflictReceiveInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 6), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictReceiveInterfaceName.setStatus('current')
hwEthernetARPIPConflictReceiveMAC = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 7), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictReceiveMAC.setStatus('current')
hwEthernetARPIPConflictReceiveVLAN = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictReceiveVLAN.setStatus('current')
hwEthernetARPIPConflictReceiveCEVLAN = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictReceiveCEVLAN.setStatus('current')
hwEthernetARPIPConflictType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 10), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPIPConflictType.setStatus('current')
hwEthernetARPReceiveDstIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 11), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPReceiveDstIPAddr.setStatus('current')
hwEthernetARPReceiveDstMAC = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 28, 12), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPReceiveDstMAC.setStatus('current')
hwEthernetARPLearnStopTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 29), )
if mibBuilder.loadTexts: hwEthernetARPLearnStopTable.setStatus('current')
hwEthernetARPLearnStopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 29, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopSlot"))
if mibBuilder.loadTexts: hwEthernetARPLearnStopEntry.setStatus('current')
hwEthernetARPLearnStopSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPLearnStopSlot.setStatus('current')
hwEthernetARPLearnStopThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 29, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEthernetARPLearnStopThreshold.setStatus('current')
hwArpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 30), )
if mibBuilder.loadTexts: hwArpStatisticsTable.setStatus('current')
hwArpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 30, 1), ).setIndexNames((0, "HUAWEI-ETHARP-MIB", "hwArpStatisticsSlot"), (0, "HUAWEI-ETHARP-MIB", "hwArpStatisticsType"))
if mibBuilder.loadTexts: hwArpStatisticsEntry.setStatus('current')
hwArpStatisticsSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwArpStatisticsSlot.setStatus('current')
hwArpStatisticsType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("phy", 1), ("ve", 2), ("ethTrunk", 3), ("vlanif", 4), ("phyQinq", 5), ("ethTrunkQinq", 6), ("veQinq", 7))))
if mibBuilder.loadTexts: hwArpStatisticsType.setStatus('current')
hwArpStatisticsLearnedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 30, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpStatisticsLearnedCount.setStatus('current')
hwArpStatisticsAvailableCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 30, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwArpStatisticsAvailableCount.setStatus('current')
hwEthernetARPRemoteBackupFailObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 31))
hwEthernetARPRemoteBackupFailMainIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 1, 31, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEthernetARPRemoteBackupFailMainIfName.setStatus('current')
hwEthernetARPNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2))
hwEthernetARPSpeedLimitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 1)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitIfIndex"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitConfigured"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitCurrent"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitType"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitSrcIPAddr"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitDstIPAddr"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitVPNinstance"))
if mibBuilder.loadTexts: hwEthernetARPSpeedLimitAlarm.setStatus('current')
hwEthernetARPAntiAttackAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 2)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackIpAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackMacAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackVlanId"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackIfName"))
if mibBuilder.loadTexts: hwEthernetARPAntiAttackAlarm.setStatus('current')
hwEthernetARPAntiGatewayConflictAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 3)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictIpAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictMacAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictVlanId"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictIfName"))
if mibBuilder.loadTexts: hwEthernetARPAntiGatewayConflictAlarm.setStatus('current')
hwEthernetARPThresholdExceedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 4)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdValue"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdDynamicNumber"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdStaticNumber"))
if mibBuilder.loadTexts: hwEthernetARPThresholdExceedAlarm.setStatus('current')
hwEthernetARPThresholdResumeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 5)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdValue"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdDynamicNumber"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdStaticNumber"))
if mibBuilder.loadTexts: hwEthernetARPThresholdResumeAlarm.setStatus('current')
hwEthernetARPIPConflictEvent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 6)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictIPAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalInterfaceName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalCEVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveInterfaceName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveCEVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictType"))
if mibBuilder.loadTexts: hwEthernetARPIPConflictEvent.setStatus('current')
hwEthernetARPMACIPConflict = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 7)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalInterfaceName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictIPAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPReceiveDstMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPReceiveDstIPAddr"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveCEVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveInterfaceName"))
if mibBuilder.loadTexts: hwEthernetARPMACIPConflict.setStatus('current')
hwEthernetARPMACIPConflictResolved = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 8)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalInterfaceName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictIPAddress"))
if mibBuilder.loadTexts: hwEthernetARPMACIPConflictResolved.setStatus('current')
hwEthernetARPLearnStopAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 9)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopSlot"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopThreshold"))
if mibBuilder.loadTexts: hwEthernetARPLearnStopAlarm.setStatus('current')
hwEthernetARPLearnResumeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 10)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopSlot"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopThreshold"))
if mibBuilder.loadTexts: hwEthernetARPLearnResumeAlarm.setStatus('current')
hwEthernetARPRemoteBackupFailAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 11)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPRemoteBackupFailMainIfName"))
if mibBuilder.loadTexts: hwEthernetARPRemoteBackupFailAlarm.setStatus('current')
hwEthernetARPRemoteBackupFailResumeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 2, 12)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPRemoteBackupFailMainIfName"))
if mibBuilder.loadTexts: hwEthernetARPRemoteBackupFailResumeAlarm.setStatus('current')
hwEthernetARPConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3))
hwEthernetARPGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1))
hwEthernetARPCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 2))
hwEthernetARPStaticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 1)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPStaticsLearnTotal"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPDropForLimit"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPDropForARPSuppress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPDropForARPMissSuppress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPDropForOther"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPMissDropForOther"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPRcvNum"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPMissRcvNum"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPStaticsOperation"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPDropForARPProxySuppress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPStaticsGroup = hwEthernetARPStaticsGroup.setStatus('current')
hwEthernetARPSpeedLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 2)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPLimitSpeedValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPSpeedLimitGroup = hwEthernetARPSpeedLimitGroup.setStatus('current')
hwEthARPShowWithInterAndVidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 3)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthARPMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthARPShowWithInterAndVidGroup = hwEthARPShowWithInterAndVidGroup.setStatus('current')
hwEthARPLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 4)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthARPLimitNum"), ("HUAWEI-ETHARP-MIB", "hwEthARPLimitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthARPLimitGroup = hwEthARPLimitGroup.setStatus('current')
hwEthernetARPBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 5)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackLog"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearningStrict"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitIfIndex"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitConfigured"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitCurrent"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitType"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitSrcIPAddr"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitDstIPAddr"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitVPNinstance"), ("HUAWEI-ETHARP-MIB", "hwArpSecValidateSmac"), ("HUAWEI-ETHARP-MIB", "hwArpSecValidateDmac"), ("HUAWEI-ETHARP-MIB", "hwArpSecValidateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPBaseGroup = hwEthernetARPBaseGroup.setStatus('current')
hwEthernetARPNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 6)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPSpeedLimitAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdExceedAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdResumeAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictEvent"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPMACIPConflict"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPMACIPConflictResolved"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnResumeAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPRemoteBackupFailAlarm"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPRemoteBackupFailResumeAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPNotificationsGroup = hwEthernetARPNotificationsGroup.setStatus('current')
hwEthernetARPLearningStrictInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 7)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPLearningStrictState"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearningStrictRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPLearningStrictInterfaceGroup = hwEthernetARPLearningStrictInterfaceGroup.setStatus('current')
hwArpLinkInferaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 8)).setObjects(("HUAWEI-ETHARP-MIB", "hwArpLinkPeerIp"), ("HUAWEI-ETHARP-MIB", "hwArpLinkDetectTime"), ("HUAWEI-ETHARP-MIB", "hwArpLinkDetectTimes"), ("HUAWEI-ETHARP-MIB", "hwArpLinkDetectMode"), ("HUAWEI-ETHARP-MIB", "hwArpLinkStatus"), ("HUAWEI-ETHARP-MIB", "hwArpLinkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwArpLinkInferaceGroup = hwArpLinkInferaceGroup.setStatus('current')
hwArpEntryExpireControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 9)).setObjects(("HUAWEI-ETHARP-MIB", "hwArpEntryExpireDetectMode"), ("HUAWEI-ETHARP-MIB", "hwArpEntryExpireFakeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwArpEntryExpireControlGroup = hwArpEntryExpireControlGroup.setStatus('current')
hwArpAntiAttackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 10)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackStatus"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGateWayConflict"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLogAndTrapTimer"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackIpAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackMacAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackVlanId"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiAttackIfName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictIpAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictMacAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictVlanId"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPAntiGatewayConflictIfName"), ("HUAWEI-ETHARP-MIB", "hwArpDynMacAdd"), ("HUAWEI-ETHARP-MIB", "hwArpDynVlanId"), ("HUAWEI-ETHARP-MIB", "hwArpDynCeVlanId"), ("HUAWEI-ETHARP-MIB", "hwArpDynOutIfIndex"), ("HUAWEI-ETHARP-MIB", "hwArpDynExpireTime"), ("HUAWEI-ETHARP-MIB", "hwArpCfgVlanId"), ("HUAWEI-ETHARP-MIB", "hwArpCfgCeVlanId"), ("HUAWEI-ETHARP-MIB", "hwArpCfgOutIfIndex"), ("HUAWEI-ETHARP-MIB", "hwArpCfgRowstatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwArpAntiAttackGroup = hwArpAntiAttackGroup.setStatus('current')
hwEthernetARPThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 11)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdValue"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdDynamicNumber"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPThresholdStaticNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPThresholdGroup = hwEthernetARPThresholdGroup.setStatus('current')
hwETHARPIPConflictGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 12)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictIPAddress"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalInterfaceName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictLocalCEVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveInterfaceName"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictReceiveCEVLAN"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPIPConflictType"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPReceiveDstIPAddr"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPReceiveDstMAC"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPConflictDetect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwETHARPIPConflictGroup = hwETHARPIPConflictGroup.setStatus('current')
hwEthernetARPLearnStopGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 13)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopSlot"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearnStopThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPLearnStopGroup = hwEthernetARPLearnStopGroup.setStatus('current')
hwArpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 14)).setObjects(("HUAWEI-ETHARP-MIB", "hwArpStatisticsSlot"), ("HUAWEI-ETHARP-MIB", "hwArpStatisticsType"), ("HUAWEI-ETHARP-MIB", "hwArpStatisticsLearnedCount"), ("HUAWEI-ETHARP-MIB", "hwArpStatisticsAvailableCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwArpStatisticsGroup = hwArpStatisticsGroup.setStatus('current')
hwEthernetARPRemoteBackupFaidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 1, 15)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPRemoteBackupFailMainIfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPRemoteBackupFaidGroup = hwEthernetARPRemoteBackupFaidGroup.setStatus('current')
hwEthernetARPCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 123, 3, 2, 1)).setObjects(("HUAWEI-ETHARP-MIB", "hwEthernetARPBaseGroup"), ("HUAWEI-ETHARP-MIB", "hwEthernetARPLearningStrictInterfaceGroup"), ("HUAWEI-ETHARP-MIB", "hwArpEntryExpireControlGroup"), ("HUAWEI-ETHARP-MIB", "hwArpAntiAttackGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwEthernetARPCompliance = hwEthernetARPCompliance.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-ETHARP-MIB", hwEthernetARPAntiAttackIfName=hwEthernetARPAntiAttackIfName, hwEthernetARPObjects=hwEthernetARPObjects, hwEthernetARPIPConflictLocalInterfaceName=hwEthernetARPIPConflictLocalInterfaceName, hwEthernetARPAntiGatewayConflictIpAddress=hwEthernetARPAntiGatewayConflictIpAddress, hwEthernetARPThresholdExceedAlarm=hwEthernetARPThresholdExceedAlarm, hwEthernetARPBaseGroup=hwEthernetARPBaseGroup, hwArpStatisticsType=hwArpStatisticsType, hwEthARPShowIfindex=hwEthARPShowIfindex, hwArpStatisticsEntry=hwArpStatisticsEntry, hwEthernetARPSpeedLimitDstIPAddr=hwEthernetARPSpeedLimitDstIPAddr, hwEthernetARPDropForARPProxySuppress=hwEthernetARPDropForARPProxySuppress, hwEthernetARPCompliances=hwEthernetARPCompliances, hwArpLinkIfIndex=hwArpLinkIfIndex, hwEthernetARPReceiveDstMAC=hwEthernetARPReceiveDstMAC, hwArpSecValidateSmac=hwArpSecValidateSmac, hwEthernetARPAntiGatewayConflictIndex=hwEthernetARPAntiGatewayConflictIndex, hwARPArpGratuitousSendInterval=hwARPArpGratuitousSendInterval, hwEthernetARPRemoteBackupFailResumeAlarm=hwEthernetARPRemoteBackupFailResumeAlarm, hwEthernetARPIPConflictReceiveMAC=hwEthernetARPIPConflictReceiveMAC, hwArpAntiAttackGroup=hwArpAntiAttackGroup, hwEthernetARPStaticsTable=hwEthernetARPStaticsTable, hwEthARPLimitEntry=hwEthARPLimitEntry, hwEthARPLimitGroup=hwEthARPLimitGroup, hwArpDynTable=hwArpDynTable, hwETHARPIPConflictObjects=hwETHARPIPConflictObjects, hwEthernetARPLearnStopEntry=hwEthernetARPLearnStopEntry, hwEthernetARPThresholdResumeAlarm=hwEthernetARPThresholdResumeAlarm, hwEthernetARPThresholdGroup=hwEthernetARPThresholdGroup, hwArpDynIfIndex=hwArpDynIfIndex, hwEthernetARPLearnStopAlarm=hwEthernetARPLearnStopAlarm, hwArpEntryExpireControlEntry=hwArpEntryExpireControlEntry, hwEthernetARPLearnStopThreshold=hwEthernetARPLearnStopThreshold, hwArpSecValidateTable=hwArpSecValidateTable, hwEthernetARPIPConflictType=hwEthernetARPIPConflictType, hwEthARPShowWithInterAndVidTable=hwEthARPShowWithInterAndVidTable, hwEthernetARPAntiAttackIpAddress=hwEthernetARPAntiAttackIpAddress, hwEthernetARPIPConflictLocalMAC=hwEthernetARPIPConflictLocalMAC, hwEthernetARPRemoteBackupFailMainIfName=hwEthernetARPRemoteBackupFailMainIfName, hwEthernetARPSpeedLimitType=hwEthernetARPSpeedLimitType, hwArpLinkInterfaceTable=hwArpLinkInterfaceTable, hwArpCfgIpAdd=hwArpCfgIpAdd, hwEthernetARPSpeedLimitVPNinstance=hwEthernetARPSpeedLimitVPNinstance, hwArpEntryExpireControlGroup=hwArpEntryExpireControlGroup, hwEthernetARPLearningStrictRowStatus=hwEthernetARPLearningStrictRowStatus, hwEthernetARPStaticsLearnTotal=hwEthernetARPStaticsLearnTotal, hwEthernetARPMissRcvNum=hwEthernetARPMissRcvNum, hwEthernetARPAntiGatewayConflictMacAddress=hwEthernetARPAntiGatewayConflictMacAddress, hwArpLinkDetectMode=hwArpLinkDetectMode, hwEthernetARPLearnStopGroup=hwEthernetARPLearnStopGroup, PYSNMP_MODULE_ID=hwEthernetARPMIB, hwArpCfgEntry=hwArpCfgEntry, hwEthARPIpAddr=hwEthARPIpAddr, hwEthernetARPIPConflictLocalCEVLAN=hwEthernetARPIPConflictLocalCEVLAN, hwEthARPLimitCfgIfindex=hwEthARPLimitCfgIfindex, hwEthernetARPSpeedLimitConfigured=hwEthernetARPSpeedLimitConfigured, hwEthernetARPGroups=hwEthernetARPGroups, hwEthernetARPIPConflictReceiveInterfaceName=hwEthernetARPIPConflictReceiveInterfaceName, hwEthernetARPThresholdObjects=hwEthernetARPThresholdObjects, hwEthARPMacAddr=hwEthARPMacAddr, hwEthernetARPRcvNum=hwEthernetARPRcvNum, hwARPGratuitousSendIfIndex=hwARPGratuitousSendIfIndex, hwArpCfgCeVlanId=hwArpCfgCeVlanId, hwEthernetARPConflictDetect=hwEthernetARPConflictDetect, hwEthernetARPCompliance=hwEthernetARPCompliance, hwEthernetARPLearningStrictInterfaceTable=hwEthernetARPLearningStrictInterfaceTable, hwArpEntryExpireDetectMode=hwArpEntryExpireDetectMode, hwArpStatisticsLearnedCount=hwArpStatisticsLearnedCount, hwEthernetARPSpeedLimitTable=hwEthernetARPSpeedLimitTable, hwArpLinkPeerIp=hwArpLinkPeerIp, hwArpCfgVlanId=hwArpCfgVlanId, hwArpDynMacAdd=hwArpDynMacAdd, hwEthARPShowWithInterAndVidGroup=hwEthARPShowWithInterAndVidGroup, hwEthernetARPStaticsOperation=hwEthernetARPStaticsOperation, hwEthARPVLANFirst=hwEthARPVLANFirst, hwEthernetARPLogAndTrapTimer=hwEthernetARPLogAndTrapTimer, hwArpLinkDetectTimes=hwArpLinkDetectTimes, hwEthernetARPIPConflictLocalVLAN=hwEthernetARPIPConflictLocalVLAN, hwEthernetARPConformance=hwEthernetARPConformance, hwArpEntryGatewayConflictEntry=hwArpEntryGatewayConflictEntry, hwEthernetARPNotifications=hwEthernetARPNotifications, hwArpCfgMacAdd=hwArpCfgMacAdd, hwEthernetARPIPConflictReceiveVLAN=hwEthernetARPIPConflictReceiveVLAN, hwEthARPVLANLast=hwEthARPVLANLast, hwEthARPLimitTable=hwEthARPLimitTable, hwEthernetARPMACIPConflict=hwEthernetARPMACIPConflict, hwArpDynOutIfIndex=hwArpDynOutIfIndex, hwArpStatisticsAvailableCount=hwArpStatisticsAvailableCount, hwEthernetARPSpeedLimitIfIndex=hwEthernetARPSpeedLimitIfIndex, hwEthernetARPAntiAttackStatus=hwEthernetARPAntiAttackStatus, hwEthernetARPAntiGatewayConflictVlanId=hwEthernetARPAntiGatewayConflictVlanId, hwArpStatisticsSlot=hwArpStatisticsSlot, hwEthernetARPAntiAttackVlanId=hwEthernetARPAntiAttackVlanId, hwEthernetARPAntiGatewayConflictAlarm=hwEthernetARPAntiGatewayConflictAlarm, hwEthernetARPLearningStrict=hwEthernetARPLearningStrict, hwEthernetARPSpeedLimitSrcIPAddr=hwEthernetARPSpeedLimitSrcIPAddr, hwEthernetARPDropForARPSuppress=hwEthernetARPDropForARPSuppress, hwEthernetARPLearnResumeAlarm=hwEthernetARPLearnResumeAlarm, hwEthARPLimitRowStatus=hwEthARPLimitRowStatus, hwEthernetARPAntiAttackMacAddress=hwEthernetARPAntiAttackMacAddress, hwEthernetARPSpeedLimitCurrent=hwEthernetARPSpeedLimitCurrent, hwEthARPLimitNum=hwEthARPLimitNum, hwEthernetARPLearningStrictState=hwEthernetARPLearningStrictState, hwEthernetARPSpeedLimitAlarm=hwEthernetARPSpeedLimitAlarm, hwEthernetARPIPConflictEvent=hwEthernetARPIPConflictEvent, hwArpLinkDetectTime=hwArpLinkDetectTime, hwEthARPShowVid=hwEthARPShowVid, hwEthernetARPAntiAttackAlarm=hwEthernetARPAntiAttackAlarm, hwEthernetARPDropForARPMissSuppress=hwEthernetARPDropForARPMissSuppress, hwArpDynVrf=hwArpDynVrf, hwArpCfgVrf=hwArpCfgVrf, hwEthARPShowWithInterAndVidEntry=hwEthARPShowWithInterAndVidEntry, hwEthernetARPIPConflictIPAddress=hwEthernetARPIPConflictIPAddress, hwEthernetARPRemoteBackupFaidGroup=hwEthernetARPRemoteBackupFaidGroup, hwArpLinkStatus=hwArpLinkStatus, hwEthernetARPMIB=hwEthernetARPMIB, hwArpEntryGatewayConflictTable=hwArpEntryGatewayConflictTable, hwEthernetARPThresholdValue=hwEthernetARPThresholdValue, hwEthernetARPLearningStrictIfindex=hwEthernetARPLearningStrictIfindex, hwEthernetARPAntiGatewayConflictIfName=hwEthernetARPAntiGatewayConflictIfName, hwArpSecValidateIfIndex=hwArpSecValidateIfIndex, hwEthernetARPMACIPConflictResolved=hwEthernetARPMACIPConflictResolved, hwEthernetARPRemoteBackupFailAlarm=hwEthernetARPRemoteBackupFailAlarm, hwARPGratuitousSendEntry=hwARPGratuitousSendEntry, hwEthernetARPSpeedLimitGroup=hwEthernetARPSpeedLimitGroup, hwARPGratuitousSendEnable=hwARPGratuitousSendEnable, hwEthernetARPLearnStopSlot=hwEthernetARPLearnStopSlot, hwEthernetARPThresholdDynamicNumber=hwEthernetARPThresholdDynamicNumber, hwEthernetARPReceiveDstIPAddr=hwEthernetARPReceiveDstIPAddr, hwArpStatisticsTable=hwArpStatisticsTable, hwArpEntryExpireFakeTime=hwArpEntryExpireFakeTime, hwEthernetARPLimitType=hwEthernetARPLimitType, hwArpStatisticsGroup=hwArpStatisticsGroup, hwArpEntryExpireIfIndex=hwArpEntryExpireIfIndex, hwARPGratuitousSendTable=hwARPGratuitousSendTable, hwEthernetARPStaticsSlot=hwEthernetARPStaticsSlot, hwArpDynEntry=hwArpDynEntry, hwEthernetARPStaticsGroup=hwEthernetARPStaticsGroup, hwArpDynExpireTime=hwArpDynExpireTime, hwEthernetARPAntiAttackLog=hwEthernetARPAntiAttackLog, hwEthernetARPDropForLimit=hwEthernetARPDropForLimit, hwArpDynCeVlanId=hwArpDynCeVlanId, hwEthernetARPAntiAttackObjects=hwEthernetARPAntiAttackObjects, hwArpDynVlanId=hwArpDynVlanId, hwEthernetARPStaticsEntry=hwEthernetARPStaticsEntry, hwEthernetARPIPConflictReceiveCEVLAN=hwEthernetARPIPConflictReceiveCEVLAN, hwArpEntryExpireControlTable=hwArpEntryExpireControlTable, hwArpCfgRowstatus=hwArpCfgRowstatus, hwEthernetARPLearnStopTable=hwEthernetARPLearnStopTable, hwEthernetARPRemoteBackupFailObjects=hwEthernetARPRemoteBackupFailObjects, hwArpLinkRowStatus=hwArpLinkRowStatus, hwEthernetARPThresholdStaticNumber=hwEthernetARPThresholdStaticNumber, hwArpSecValidateEntry=hwArpSecValidateEntry, hwArpSecValidateDmac=hwArpSecValidateDmac, hwEthernetARPNotificationsGroup=hwEthernetARPNotificationsGroup, hwArpLinkInterfaceEntry=hwArpLinkInterfaceEntry, hwEthernetARPLimitSlot=hwEthernetARPLimitSlot, hwEthernetARPSpeedLimitEntry=hwEthernetARPSpeedLimitEntry, hwArpCfgTable=hwArpCfgTable, hwEthernetARPAntiGateWayConflict=hwEthernetARPAntiGateWayConflict, hwEthernetARPMissDropForOther=hwEthernetARPMissDropForOther, hwArpDynIpAdd=hwArpDynIpAdd, hwEthernetARPLearningStrictInterfaceEntry=hwEthernetARPLearningStrictInterfaceEntry, hwEthernetARPLimitSpeedValue=hwEthernetARPLimitSpeedValue, hwArpLinkInferaceGroup=hwArpLinkInferaceGroup, hwEthernetARPLearningStrictInterfaceGroup=hwEthernetARPLearningStrictInterfaceGroup, hwArpSecValidateRowStatus=hwArpSecValidateRowStatus, hwEthernetARPLimitIPType=hwEthernetARPLimitIPType, hwArpCfgOutIfIndex=hwArpCfgOutIfIndex, hwETHARPIPConflictGroup=hwETHARPIPConflictGroup, hwEthernetARPDropForOther=hwEthernetARPDropForOther)
