#
# PySNMP MIB module ALTIGA-DHCP-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-DHCP-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:05:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alDhcpMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alDhcpMibModule")
alDhcpGroup, alStatsDhcp = mibBuilder.importSymbols("ALTIGA-MIB", "alDhcpGroup", "alStatsDhcp")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, IpAddress, iso, Integer32, Unsigned32, MibIdentifier, Counter32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "iso", "Integer32", "Unsigned32", "MibIdentifier", "Counter32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Counter64", "TimeTicks")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
altigaDhcpStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 25, 2))
altigaDhcpStatsMibModule.setRevisions(('2002-09-05 13:00', '2002-07-10 00:00',))
if mibBuilder.loadTexts: altigaDhcpStatsMibModule.setLastUpdated('200209051300Z')
if mibBuilder.loadTexts: altigaDhcpStatsMibModule.setOrganization('Cisco Systems, Inc.')
alStatsDhcpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1))
alDhcpStatsActiveLeases = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsActiveLeases.setStatus('current')
alDhcpStatsMaximumLeases = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsMaximumLeases.setStatus('current')
alDhcpStatsDiscoversSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsDiscoversSent.setStatus('current')
alDhcpStatsOffersRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsOffersRcvd.setStatus('current')
alDhcpStatsInitRequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsInitRequestsSent.setStatus('current')
alDhcpStatsT1RequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT1RequestsSent.setStatus('current')
alDhcpStatsT2RequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT2RequestsSent.setStatus('current')
alDhcpStatsInitAcksRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsInitAcksRcvd.setStatus('current')
alDhcpStatsInitNaksRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsInitNaksRcvd.setStatus('current')
alDhcpStatsT1AcksRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT1AcksRcvd.setStatus('current')
alDhcpStatsT1NaksRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT1NaksRcvd.setStatus('current')
alDhcpStatsT2AcksRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT2AcksRcvd.setStatus('current')
alDhcpStatsT2NaksRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT2NaksRcvd.setStatus('current')
alDhcpStatsT1Timeouts = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT1Timeouts.setStatus('current')
alDhcpStatsT2Timeouts = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsT2Timeouts.setStatus('current')
alDhcpStatsApiRequests = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsApiRequests.setStatus('current')
alDhcpStatsLeaseTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsLeaseTimeouts.setStatus('current')
alDhcpStatsSessTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2), )
if mibBuilder.loadTexts: alDhcpStatsSessTable.setStatus('current')
alDhcpStatsSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1), ).setIndexNames((0, "ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessIpAddr"))
if mibBuilder.loadTexts: alDhcpStatsSessEntry.setStatus('current')
alDhcpStatsSessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alDhcpStatsSessRowStatus.setStatus('current')
alDhcpStatsSessId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessId.setStatus('current')
alDhcpStatsSessKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessKey.setStatus('current')
alDhcpStatsSessIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessIpAddr.setStatus('current')
alDhcpStatsSessUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessUpTime.setStatus('current')
alDhcpStatsSessLeaseDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessLeaseDuration.setStatus('current')
alDhcpStatsSessLeaseExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessLeaseExpire.setStatus('current')
alDhcpStatsSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessState.setStatus('current')
alDhcpStatsSessClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessClientId.setStatus('current')
alDhcpStatsSessSrvrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 20, 2, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpStatsSessSrvrIpAddr.setStatus('current')
altigaDhcpStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 25, 2, 1))
altigaDhcpStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 25, 2, 1, 1))
altigaDhcpStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 25, 2, 1, 1, 1)).setObjects(("ALTIGA-DHCP-STATS-MIB", "altigaDhcpStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaDhcpStatsMibCompliance = altigaDhcpStatsMibCompliance.setStatus('current')
altigaDhcpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 20, 2)).setObjects(("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsActiveLeases"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsMaximumLeases"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsDiscoversSent"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsOffersRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsInitRequestsSent"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT1RequestsSent"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT2RequestsSent"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsInitAcksRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsInitNaksRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT1AcksRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT1NaksRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT2AcksRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT2NaksRcvd"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT1Timeouts"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsT2Timeouts"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsApiRequests"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsLeaseTimeouts"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessRowStatus"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessId"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessKey"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessIpAddr"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessUpTime"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessLeaseDuration"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessLeaseExpire"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessState"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessClientId"), ("ALTIGA-DHCP-STATS-MIB", "alDhcpStatsSessSrvrIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaDhcpStatsGroup = altigaDhcpStatsGroup.setStatus('current')
mibBuilder.exportSymbols("ALTIGA-DHCP-STATS-MIB", alDhcpStatsInitNaksRcvd=alDhcpStatsInitNaksRcvd, alDhcpStatsSessRowStatus=alDhcpStatsSessRowStatus, alDhcpStatsMaximumLeases=alDhcpStatsMaximumLeases, alDhcpStatsT1RequestsSent=alDhcpStatsT1RequestsSent, alDhcpStatsSessLeaseExpire=alDhcpStatsSessLeaseExpire, PYSNMP_MODULE_ID=altigaDhcpStatsMibModule, altigaDhcpStatsGroup=altigaDhcpStatsGroup, alDhcpStatsApiRequests=alDhcpStatsApiRequests, alDhcpStatsSessLeaseDuration=alDhcpStatsSessLeaseDuration, alDhcpStatsSessTable=alDhcpStatsSessTable, altigaDhcpStatsMibCompliance=altigaDhcpStatsMibCompliance, alDhcpStatsActiveLeases=alDhcpStatsActiveLeases, alDhcpStatsSessId=alDhcpStatsSessId, alDhcpStatsSessKey=alDhcpStatsSessKey, alDhcpStatsT2Timeouts=alDhcpStatsT2Timeouts, alDhcpStatsInitRequestsSent=alDhcpStatsInitRequestsSent, alDhcpStatsSessState=alDhcpStatsSessState, altigaDhcpStatsMibConformance=altigaDhcpStatsMibConformance, alDhcpStatsOffersRcvd=alDhcpStatsOffersRcvd, alDhcpStatsSessUpTime=alDhcpStatsSessUpTime, alStatsDhcpGlobal=alStatsDhcpGlobal, alDhcpStatsT1NaksRcvd=alDhcpStatsT1NaksRcvd, alDhcpStatsLeaseTimeouts=alDhcpStatsLeaseTimeouts, altigaDhcpStatsMibCompliances=altigaDhcpStatsMibCompliances, alDhcpStatsSessClientId=alDhcpStatsSessClientId, alDhcpStatsT2NaksRcvd=alDhcpStatsT2NaksRcvd, alDhcpStatsT2AcksRcvd=alDhcpStatsT2AcksRcvd, alDhcpStatsT1Timeouts=alDhcpStatsT1Timeouts, alDhcpStatsT2RequestsSent=alDhcpStatsT2RequestsSent, alDhcpStatsSessSrvrIpAddr=alDhcpStatsSessSrvrIpAddr, alDhcpStatsSessIpAddr=alDhcpStatsSessIpAddr, alDhcpStatsInitAcksRcvd=alDhcpStatsInitAcksRcvd, alDhcpStatsT1AcksRcvd=alDhcpStatsT1AcksRcvd, alDhcpStatsSessEntry=alDhcpStatsSessEntry, altigaDhcpStatsMibModule=altigaDhcpStatsMibModule, alDhcpStatsDiscoversSent=alDhcpStatsDiscoversSent)
