#
# PySNMP MIB module CXLLCInterfaceModule-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CXLLCInterfaceModule-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:17:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
Alias, cxLlcim = mibBuilder.importSymbols("CXProduct-SMI", "Alias", "cxLlcim")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, iso, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, TimeTicks, Bits, NotificationType, ObjectIdentity, MibIdentifier, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "TimeTicks", "Bits", "NotificationType", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
llcimConnectInterval = MibScalar((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 900)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcimConnectInterval.setStatus('mandatory')
llcimSapTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10), )
if mibBuilder.loadTexts: llcimSapTable.setStatus('mandatory')
llcimSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1), ).setIndexNames((0, "CXLLCInterfaceModule-MIB", "llcimSapNumber"))
if mibBuilder.loadTexts: llcimSapEntry.setStatus('mandatory')
llcimSapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcimSapNumber.setStatus('mandatory')
llcimSapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcimSapRowStatus.setStatus('mandatory')
llcimSapAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 3), Alias()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcimSapAlias.setStatus('mandatory')
llcimSapCompanionAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 4), Alias()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcimSapCompanionAlias.setStatus('mandatory')
llcimSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lower", 1), ("upper", 2))).clone('lower')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcimSapType.setStatus('mandatory')
llcimSapConnectMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("generateXid", 1), ("waitForXid", 2), ("immediate", 3))).clone('generateXid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: llcimSapConnectMethod.setStatus('mandatory')
llcimSapState = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 34, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("offLine", 1), ("unbound", 2), ("notConnected", 3), ("testExchange", 4), ("xidIssued", 5), ("waitXid", 6), ("connected", 7), ("setMode", 8), ("waitSetMode", 9), ("setModeReceived", 10), ("data", 11), ("inLinkDisconnect", 12), ("outLinkDisconnect", 13), ("outLineDisconnect", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: llcimSapState.setStatus('mandatory')
mibBuilder.exportSymbols("CXLLCInterfaceModule-MIB", llcimSapEntry=llcimSapEntry, llcimSapAlias=llcimSapAlias, llcimSapCompanionAlias=llcimSapCompanionAlias, llcimSapType=llcimSapType, llcimSapRowStatus=llcimSapRowStatus, llcimSapConnectMethod=llcimSapConnectMethod, llcimConnectInterval=llcimConnectInterval, llcimSapState=llcimSapState, llcimSapTable=llcimSapTable, llcimSapNumber=llcimSapNumber)
