#
# PySNMP MIB module HUAWEI-L2IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-L2IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifDescr", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIdOrNone, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone", "VlanId")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Integer32, Unsigned32, ModuleIdentity, TimeTicks, MibIdentifier, IpAddress, Gauge32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Unsigned32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "IpAddress", "Gauge32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Counter64")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
hwL2Mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42))
hwL2IfMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1))
if mibBuilder.loadTexts: hwL2IfMib.setLastUpdated('200505100836Z')
if mibBuilder.loadTexts: hwL2IfMib.setOrganization('Huawei Technologies Co.,Ltd.')
class VlanList(TextualConvention, OctetString):
    status = 'current'

hwL2IfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1))
hwL2Interface = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1))
hwL2IfPortMax = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfPortMax.setStatus('current')
hwL2TopologyDetect = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2TopologyDetect.setStatus('current')
hwL2IfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3), )
if mibBuilder.loadTexts: hwL2IfTable.setStatus('current')
hwL2IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfPortNum"))
if mibBuilder.loadTexts: hwL2IfEntry.setStatus('current')
hwL2IfPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2IfPortNum.setStatus('current')
hwL2IfPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfPortIfIndex.setStatus('current')
hwL2IfPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 0), ("trunk", 1), ("access", 2), ("hybrid", 3), ("fabric", 4), ("qinq", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPortType.setStatus('current')
hwL2IfPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPVID.setStatus('current')
hwL2IfIsSrcMacFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfIsSrcMacFilter.setStatus('current')
hwL2IfMacAddrLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("iVL", 1), ("sVL", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfMacAddrLearnMode.setStatus('current')
hwL2IfMacAddressLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("discard", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfMacAddressLearn.setStatus('current')
hwL2IfBcastRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfBcastRatio.setStatus('current')
hwL2IfMcastRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfMcastRatio.setStatus('current')
hwL2IfUcastRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfUcastRatio.setStatus('current')
hwL2IfOutBcastRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfOutBcastRatio.setStatus('current')
hwL2IfOutMcastRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfOutMcastRatio.setStatus('current')
hwL2IfOutUcastRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfOutUcastRatio.setStatus('current')
hwL2IfDiscardBcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 14), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfDiscardBcast.setStatus('current')
hwL2IfDiscardUnknownMcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 15), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfDiscardUnknownMcast.setStatus('current')
hwL2IfDiscardUnknownUcast = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 16), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfDiscardUnknownUcast.setStatus('current')
hwL2IfBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 17), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfBpdu.setStatus('current')
hwL2IfPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPortPriority.setStatus('current')
hwL2IfPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfPortName.setStatus('current')
hwL2IfInInvalidVlanPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfInInvalidVlanPkts.setStatus('current')
hwL2IfFlushEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 21), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfFlushEnable.setStatus('current')
hwL2IfFlushControlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfFlushControlVlan.setStatus('current')
hwL2IfCurrentInBcastPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 23), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfCurrentInBcastPercent.setStatus('current')
hwL2IfCurrentOutBcastPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 24), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfCurrentOutBcastPercent.setStatus('current')
hwL2IfQinqVlanTransEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 25), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfQinqVlanTransEnable.setStatus('current')
hwL2IfQinqVlanTransMissDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noDrop", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfQinqVlanTransMissDrop.setStatus('current')
hwL2IfIpSubnetVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 27), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfIpSubnetVlanEnable.setStatus('current')
hwL2IfMacVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 28), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfMacVlanEnable.setStatus('current')
hwL2IfPolicyVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 29), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPolicyVlanEnable.setStatus('current')
hwL2IfVlanPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfVlanPrecedence.setStatus('current')
hwL2IfIsolateGroupEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 3, 1, 31), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfIsolateGroupEnable.setStatus('current')
hwL2IfHybridPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9), )
if mibBuilder.loadTexts: hwL2IfHybridPortTable.setStatus('current')
hwL2IfHybridPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfHybridPortIndex"))
if mibBuilder.loadTexts: hwL2IfHybridPortEntry.setStatus('current')
hwL2IfHybridPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2IfHybridPortIndex.setStatus('current')
hwL2IfHybridTaggedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9, 1, 2), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfHybridTaggedVlanListLow.setStatus('current')
hwL2IfHybridTaggedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9, 1, 3), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfHybridTaggedVlanListHigh.setStatus('current')
hwL2IfHybridUnTaggedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9, 1, 4), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfHybridUnTaggedVlanListLow.setStatus('current')
hwL2IfHybridUnTaggedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 9, 1, 5), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfHybridUnTaggedVlanListHigh.setStatus('current')
hwL2IfTrunkPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 10), )
if mibBuilder.loadTexts: hwL2IfTrunkPortTable.setStatus('current')
hwL2IfTrunkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 10, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfTrunkPortIndex"))
if mibBuilder.loadTexts: hwL2IfTrunkPortEntry.setStatus('current')
hwL2IfTrunkPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2IfTrunkPortIndex.setStatus('current')
hwL2IfTrunkAllowPassVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 10, 1, 2), VlanList().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfTrunkAllowPassVlanListLow.setStatus('current')
hwL2IfTrunkAllowPassVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 10, 1, 3), VlanList().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfTrunkAllowPassVlanListHigh.setStatus('current')
hwL2IfPortIsolateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 11), )
if mibBuilder.loadTexts: hwL2IfPortIsolateTable.setStatus('current')
hwL2IfPortIsolateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 11, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfPortIsolatePortIndex"), (0, "HUAWEI-L2IF-MIB", "hwL2IfPortIsolateSIName"))
if mibBuilder.loadTexts: hwL2IfPortIsolateEntry.setStatus('current')
hwL2IfPortIsolatePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2IfPortIsolatePortIndex.setStatus('current')
hwL2IfPortIsolateSIName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2IfPortIsolateSIName.setStatus('current')
hwL2IfPortIsolateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPortIsolateRowStatus.setStatus('current')
hwL2IfSuppressionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12), )
if mibBuilder.loadTexts: hwL2IfSuppressionTable.setStatus('current')
hwL2IfSuppressionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfSuppressionPortIndex"), (0, "HUAWEI-L2IF-MIB", "hwL2IfSuppressionType"))
if mibBuilder.loadTexts: hwL2IfSuppressionEntry.setStatus('current')
hwL2IfSuppressionPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfSuppressionPortIndex.setStatus('current')
hwL2IfSuppressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicast", 3))))
if mibBuilder.loadTexts: hwL2IfSuppressionType.setStatus('current')
hwL2IfSuppressionCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfSuppressionCir.setStatus('current')
hwL2IfSuppressionCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2048, 64000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfSuppressionCbs.setStatus('current')
hwL2IfSuppressionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 12, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfSuppressionRowStatus.setStatus('current')
hwL2IfVlanSuppressionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13), )
if mibBuilder.loadTexts: hwL2IfVlanSuppressionTable.setStatus('current')
hwL2IfVlanSuppressionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfVlanSuppressionPortIndex"), (0, "HUAWEI-L2IF-MIB", "hwL2IfVlanSuppressionStartVlan"), (0, "HUAWEI-L2IF-MIB", "hwL2IfVlanSuppressionEndVlan"))
if mibBuilder.loadTexts: hwL2IfVlanSuppressionEntry.setStatus('current')
hwL2IfVlanSuppressionPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: hwL2IfVlanSuppressionPortIndex.setStatus('current')
hwL2IfVlanSuppressionStartVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwL2IfVlanSuppressionStartVlan.setStatus('current')
hwL2IfVlanSuppressionEndVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwL2IfVlanSuppressionEndVlan.setStatus('current')
hwL2IfVlanSuppressionCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfVlanSuppressionCir.setStatus('current')
hwL2IfVlanSuppressionCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2048, 64000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfVlanSuppressionCbs.setStatus('current')
hwL2IfVlanSuppressionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 13, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfVlanSuppressionRowStatus.setStatus('current')
hwL2IfPortTcnTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14), )
if mibBuilder.loadTexts: hwL2IfPortTcnTable.setStatus('current')
hwL2IfPortTcnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfTcnPortIndex"))
if mibBuilder.loadTexts: hwL2IfPortTcnEntry.setStatus('current')
hwL2IfTcnPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2IfTcnPortIndex.setStatus('current')
hwL2IfTcnStp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfTcnStp.setStatus('current')
hwL2IfTcnSmartLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfTcnSmartLink.setStatus('current')
hwL2IfTcnVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfTcnVlanListLow.setStatus('current')
hwL2IfTcnVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 14, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfTcnVlanListHigh.setStatus('current')
hwL2IfPortLoopDetectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15), )
if mibBuilder.loadTexts: hwL2IfPortLoopDetectTable.setStatus('current')
hwL2IfPortLoopDetectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectPort"))
if mibBuilder.loadTexts: hwL2IfPortLoopDetectEntry.setStatus('current')
hwL2IfPortLoopDetectPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: hwL2IfPortLoopDetectPort.setStatus('current')
hwL2IfPortLoopDetectEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPortLoopDetectEnabled.setStatus('current')
hwL2IfPortLoopDetectInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPortLoopDetectInterval.setStatus('current')
hwL2IfPortLoopDetectAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("shutdown", 1), ("block", 2), ("trap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPortLoopDetectAction.setStatus('current')
hwL2IfPortLoopDetectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("block", 2), ("shutdown", 3), ("trap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfPortLoopDetectStatus.setStatus('current')
hwL2IfPortLoopDetectProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfPortLoopDetectProtocol.setStatus('current')
hwL2IfPortProtocolVlanDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 16), )
if mibBuilder.loadTexts: hwL2IfPortProtocolVlanDataTable.setStatus('current')
hwL2IfPortProtocolVlanDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 16, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfPortProtocolVlanDataPortIndex"))
if mibBuilder.loadTexts: hwL2IfPortProtocolVlanDataEntry.setStatus('current')
hwL2IfPortProtocolVlanDataPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 479)))
if mibBuilder.loadTexts: hwL2IfPortProtocolVlanDataPortIndex.setStatus('current')
hwL2IfPortProtocolVlanDataVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 16, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPortProtocolVlanDataVlan.setStatus('current')
hwL2IfPortProtocolVlanDataPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 16, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPortProtocolVlanDataPri.setStatus('current')
hwL2IfPortProtocolVlanDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 16, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPortProtocolVlanDataRowStatus.setStatus('current')
hwL2IfPwSuppressionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17), )
if mibBuilder.loadTexts: hwL2IfPwSuppressionTable.setStatus('current')
hwL2IfPwSuppressionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfPwSuppressionVsiName"), (0, "HUAWEI-L2IF-MIB", "hwL2IfPwSuppressionPwName"), (0, "HUAWEI-L2IF-MIB", "hwL2IfPwSuppressionType"))
if mibBuilder.loadTexts: hwL2IfPwSuppressionEntry.setStatus('current')
hwL2IfPwSuppressionVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwL2IfPwSuppressionVsiName.setStatus('current')
hwL2IfPwSuppressionPwName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: hwL2IfPwSuppressionPwName.setStatus('current')
hwL2IfPwSuppressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicast", 3))))
if mibBuilder.loadTexts: hwL2IfPwSuppressionType.setStatus('current')
hwL2IfPwSuppressionCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPwSuppressionCir.setStatus('current')
hwL2IfPwSuppressionCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 33554432))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPwSuppressionCbs.setStatus('current')
hwL2IfPwSuppressionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 17, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2IfPwSuppressionRowStatus.setStatus('current')
hwL2IfLoopDetectInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2IfLoopDetectInterval.setStatus('current')
hwL2IfDynamicPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19), )
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanTable.setStatus('current')
hwL2IfDynamicPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1), ).setIndexNames((0, "HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanPortIndex"), (0, "HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanServiceType"))
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanEntry.setStatus('current')
hwL2IfDynamicPortVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanPortIndex.setStatus('current')
hwL2IfDynamicPortVlanServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("configured", 1), ("gvrp", 2), ("voiceVLAN", 3), ("unAuthenUserVLAN", 4), ("dynAuthenVLAN", 5), ("hvrp", 6), ("elmi", 7), ("macFlapping", 8), ("loopbackDetect", 9), ("loopDetection", 10))))
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanServiceType.setStatus('current')
hwL2IfDynamicPortVlanPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 3), VlanIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanPvid.setStatus('current')
hwL2IfDynamicPortVlanUntaggedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 4), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanUntaggedVlanListLow.setStatus('current')
hwL2IfDynamicPortVlanUntaggedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 5), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanUntaggedVlanListHigh.setStatus('current')
hwL2IfDynamicPortVlanTaggedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 6), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanTaggedVlanListLow.setStatus('current')
hwL2IfDynamicPortVlanTaggedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 1, 19, 1, 7), VlanList().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2IfDynamicPortVlanTaggedVlanListHigh.setStatus('current')
hwL2IfTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 2))
hwL2IfInvalidVlanPacketAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 2, 1)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortName"), ("HUAWEI-L2IF-MIB", "hwL2IfInInvalidVlanPkts"))
if mibBuilder.loadTexts: hwL2IfInvalidVlanPacketAlarm.setStatus('current')
hwInBcastRisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 1, 2, 2)).setObjects(("IF-MIB", "ifDescr"), ("HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectStatus"))
if mibBuilder.loadTexts: hwInBcastRisingThreshold.setStatus('current')
hwL2IfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2))
hwL2IfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 1))
hwL2IfMacAddrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 1)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfMacAddrLearnMode"), ("HUAWEI-L2IF-MIB", "hwL2IfMacAddressLearn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfMacAddrGroup = hwL2IfMacAddrGroup.setStatus('current')
hwL2IfBroadcastRatioGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 2)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfBcastRatio"), ("HUAWEI-L2IF-MIB", "hwL2IfMcastRatio"), ("HUAWEI-L2IF-MIB", "hwL2IfUcastRatio"), ("HUAWEI-L2IF-MIB", "hwL2IfOutBcastRatio"), ("HUAWEI-L2IF-MIB", "hwL2IfOutMcastRatio"), ("HUAWEI-L2IF-MIB", "hwL2IfOutUcastRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfBroadcastRatioGroup = hwL2IfBroadcastRatioGroup.setStatus('current')
hwL2IfHybridTaggedVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 3)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfHybridTaggedVlanListLow"), ("HUAWEI-L2IF-MIB", "hwL2IfHybridTaggedVlanListHigh"), ("HUAWEI-L2IF-MIB", "hwL2IfHybridUnTaggedVlanListLow"), ("HUAWEI-L2IF-MIB", "hwL2IfHybridUnTaggedVlanListHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfHybridTaggedVlanGroup = hwL2IfHybridTaggedVlanGroup.setStatus('current')
hwL2IfTrunkAllowPassVlanListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 4)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfTrunkAllowPassVlanListLow"), ("HUAWEI-L2IF-MIB", "hwL2IfTrunkAllowPassVlanListHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfTrunkAllowPassVlanListGroup = hwL2IfTrunkAllowPassVlanListGroup.setStatus('current')
hwL2IfPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 5)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortIfIndex"), ("HUAWEI-L2IF-MIB", "hwL2IfIsSrcMacFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortGroup = hwL2IfPortGroup.setStatus('current')
hwL2IfPVIDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 6)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPVID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPVIDGroup = hwL2IfPVIDGroup.setStatus('current')
hwL2IfPortTypeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 7)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortTypeGroup = hwL2IfPortTypeGroup.setStatus('current')
hwL2IfPortMaxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 8)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortMax"), ("HUAWEI-L2IF-MIB", "hwL2TopologyDetect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortMaxGroup = hwL2IfPortMaxGroup.setStatus('current')
hwL2IfPortExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 9)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfBpdu"), ("HUAWEI-L2IF-MIB", "hwL2IfDiscardBcast"), ("HUAWEI-L2IF-MIB", "hwL2IfDiscardUnknownMcast"), ("HUAWEI-L2IF-MIB", "hwL2IfDiscardUnknownUcast"), ("HUAWEI-L2IF-MIB", "hwL2IfPortPriority"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"), ("HUAWEI-L2IF-MIB", "hwL2IfInInvalidVlanPkts"), ("HUAWEI-L2IF-MIB", "hwL2IfFlushEnable"), ("HUAWEI-L2IF-MIB", "hwL2IfFlushControlVlan"), ("HUAWEI-L2IF-MIB", "hwL2IfCurrentInBcastPercent"), ("HUAWEI-L2IF-MIB", "hwL2IfCurrentOutBcastPercent"), ("HUAWEI-L2IF-MIB", "hwL2IfQinqVlanTransEnable"), ("HUAWEI-L2IF-MIB", "hwL2IfQinqVlanTransMissDrop"), ("HUAWEI-L2IF-MIB", "hwL2IfIpSubnetVlanEnable"), ("HUAWEI-L2IF-MIB", "hwL2IfMacVlanEnable"), ("HUAWEI-L2IF-MIB", "hwL2IfPolicyVlanEnable"), ("HUAWEI-L2IF-MIB", "hwL2IfVlanPrecedence"), ("HUAWEI-L2IF-MIB", "hwL2IfIsolateGroupEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortExtGroup = hwL2IfPortExtGroup.setStatus('current')
hwL2IfPortIsolateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 10)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortIsolateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortIsolateGroup = hwL2IfPortIsolateGroup.setStatus('current')
hwL2IfAlarmGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 11)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfInvalidVlanPacketAlarm"), ("HUAWEI-L2IF-MIB", "hwInBcastRisingThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfAlarmGroup = hwL2IfAlarmGroup.setStatus('current')
hwL2IfSuppressionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 12)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfSuppressionCir"), ("HUAWEI-L2IF-MIB", "hwL2IfSuppressionCbs"), ("HUAWEI-L2IF-MIB", "hwL2IfSuppressionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfSuppressionGroup = hwL2IfSuppressionGroup.setStatus('current')
hwL2IfVlanSuppressionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 13)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfVlanSuppressionCir"), ("HUAWEI-L2IF-MIB", "hwL2IfVlanSuppressionCbs"), ("HUAWEI-L2IF-MIB", "hwL2IfVlanSuppressionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfVlanSuppressionGroup = hwL2IfVlanSuppressionGroup.setStatus('current')
hwL2IfPortTcnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 14)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfTcnStp"), ("HUAWEI-L2IF-MIB", "hwL2IfTcnSmartLink"), ("HUAWEI-L2IF-MIB", "hwL2IfTcnVlanListLow"), ("HUAWEI-L2IF-MIB", "hwL2IfTcnVlanListHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortTcnGroup = hwL2IfPortTcnGroup.setStatus('current')
hwL2IfPortLoopDetectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 15)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectEnabled"), ("HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectInterval"), ("HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectAction"), ("HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectStatus"), ("HUAWEI-L2IF-MIB", "hwL2IfPortLoopDetectProtocol"), ("HUAWEI-L2IF-MIB", "hwL2IfLoopDetectInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortLoopDetectGroup = hwL2IfPortLoopDetectGroup.setStatus('current')
hwL2IfPortProtocolVlanDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 16)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPortProtocolVlanDataVlan"), ("HUAWEI-L2IF-MIB", "hwL2IfPortProtocolVlanDataPri"), ("HUAWEI-L2IF-MIB", "hwL2IfPortProtocolVlanDataRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPortProtocolVlanDataGroup = hwL2IfPortProtocolVlanDataGroup.setStatus('current')
hwL2IfPwSuppressionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 17)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfPwSuppressionCir"), ("HUAWEI-L2IF-MIB", "hwL2IfPwSuppressionCbs"), ("HUAWEI-L2IF-MIB", "hwL2IfPwSuppressionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfPwSuppressionGroup = hwL2IfPwSuppressionGroup.setStatus('current')
hwL2IfDynamicPortVlanTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2, 19)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanPvid"), ("HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanUntaggedVlanListLow"), ("HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanUntaggedVlanListHigh"), ("HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanTaggedVlanListLow"), ("HUAWEI-L2IF-MIB", "hwL2IfDynamicPortVlanTaggedVlanListHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfDynamicPortVlanTableGroup = hwL2IfDynamicPortVlanTableGroup.setStatus('current')
hwL2IfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 1, 1)).setObjects(("HUAWEI-L2IF-MIB", "hwL2IfMacAddrGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfBroadcastRatioGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfHybridTaggedVlanGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfTrunkAllowPassVlanListGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfPortGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfPVIDGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfPortTypeGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfPortMaxGroup"), ("HUAWEI-L2IF-MIB", "hwL2IfPortExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2IfCompliance = hwL2IfCompliance.setStatus('current')
hwL2IfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 1, 2, 2))
mibBuilder.exportSymbols("HUAWEI-L2IF-MIB", hwL2IfHybridPortEntry=hwL2IfHybridPortEntry, hwL2IfPortType=hwL2IfPortType, hwL2IfPortName=hwL2IfPortName, hwL2IfPortIsolateSIName=hwL2IfPortIsolateSIName, VlanList=VlanList, hwL2IfMacAddressLearn=hwL2IfMacAddressLearn, hwL2IfInInvalidVlanPkts=hwL2IfInInvalidVlanPkts, hwL2IfOutUcastRatio=hwL2IfOutUcastRatio, hwL2IfPortProtocolVlanDataPortIndex=hwL2IfPortProtocolVlanDataPortIndex, hwL2IfSuppressionCir=hwL2IfSuppressionCir, hwL2IfHybridTaggedVlanListLow=hwL2IfHybridTaggedVlanListLow, hwL2TopologyDetect=hwL2TopologyDetect, hwL2IfTable=hwL2IfTable, hwL2IfPortMax=hwL2IfPortMax, hwL2IfDynamicPortVlanPortIndex=hwL2IfDynamicPortVlanPortIndex, hwL2IfVlanSuppressionEntry=hwL2IfVlanSuppressionEntry, hwL2IfMacAddrGroup=hwL2IfMacAddrGroup, hwL2IfPortIsolateRowStatus=hwL2IfPortIsolateRowStatus, hwL2IfPortLoopDetectAction=hwL2IfPortLoopDetectAction, hwL2IfMacAddrLearnMode=hwL2IfMacAddrLearnMode, hwL2IfPwSuppressionGroup=hwL2IfPwSuppressionGroup, hwL2IfPwSuppressionType=hwL2IfPwSuppressionType, hwL2IfSuppressionEntry=hwL2IfSuppressionEntry, hwL2IfDynamicPortVlanTable=hwL2IfDynamicPortVlanTable, hwL2IfTrunkAllowPassVlanListGroup=hwL2IfTrunkAllowPassVlanListGroup, hwL2IfMacVlanEnable=hwL2IfMacVlanEnable, hwL2IfPortTcnEntry=hwL2IfPortTcnEntry, hwL2IfPortProtocolVlanDataTable=hwL2IfPortProtocolVlanDataTable, hwL2IfTrunkAllowPassVlanListHigh=hwL2IfTrunkAllowPassVlanListHigh, hwL2IfOutMcastRatio=hwL2IfOutMcastRatio, hwL2IfPortGroup=hwL2IfPortGroup, hwL2IfPwSuppressionEntry=hwL2IfPwSuppressionEntry, hwL2IfDynamicPortVlanUntaggedVlanListHigh=hwL2IfDynamicPortVlanUntaggedVlanListHigh, hwL2IfIpSubnetVlanEnable=hwL2IfIpSubnetVlanEnable, hwL2IfPortLoopDetectPort=hwL2IfPortLoopDetectPort, hwL2IfTraps=hwL2IfTraps, hwL2IfPortLoopDetectGroup=hwL2IfPortLoopDetectGroup, hwL2IfMcastRatio=hwL2IfMcastRatio, hwL2IfPortExtGroup=hwL2IfPortExtGroup, hwL2IfPortIsolateEntry=hwL2IfPortIsolateEntry, hwL2IfPwSuppressionCir=hwL2IfPwSuppressionCir, hwL2IfVlanSuppressionTable=hwL2IfVlanSuppressionTable, hwL2IfQinqVlanTransEnable=hwL2IfQinqVlanTransEnable, hwL2IfDynamicPortVlanTaggedVlanListLow=hwL2IfDynamicPortVlanTaggedVlanListLow, hwL2IfSuppressionType=hwL2IfSuppressionType, hwL2IfInvalidVlanPacketAlarm=hwL2IfInvalidVlanPacketAlarm, hwL2IfPortTcnTable=hwL2IfPortTcnTable, hwL2IfFlushEnable=hwL2IfFlushEnable, hwL2IfLoopDetectInterval=hwL2IfLoopDetectInterval, hwL2IfDynamicPortVlanServiceType=hwL2IfDynamicPortVlanServiceType, hwL2IfPortLoopDetectTable=hwL2IfPortLoopDetectTable, hwL2Mgmt=hwL2Mgmt, hwL2IfTcnPortIndex=hwL2IfTcnPortIndex, hwL2IfTcnVlanListLow=hwL2IfTcnVlanListLow, hwL2IfIsSrcMacFilter=hwL2IfIsSrcMacFilter, hwL2IfVlanSuppressionStartVlan=hwL2IfVlanSuppressionStartVlan, hwL2IfDynamicPortVlanPvid=hwL2IfDynamicPortVlanPvid, hwL2IfPwSuppressionVsiName=hwL2IfPwSuppressionVsiName, hwL2IfPortIsolateTable=hwL2IfPortIsolateTable, hwL2IfCurrentOutBcastPercent=hwL2IfCurrentOutBcastPercent, hwL2IfHybridUnTaggedVlanListHigh=hwL2IfHybridUnTaggedVlanListHigh, hwL2IfSuppressionPortIndex=hwL2IfSuppressionPortIndex, hwL2IfQinqVlanTransMissDrop=hwL2IfQinqVlanTransMissDrop, hwL2IfPortProtocolVlanDataRowStatus=hwL2IfPortProtocolVlanDataRowStatus, hwL2IfEntry=hwL2IfEntry, hwL2IfPolicyVlanEnable=hwL2IfPolicyVlanEnable, hwL2IfTcnStp=hwL2IfTcnStp, hwL2IfPVID=hwL2IfPVID, hwL2IfPwSuppressionPwName=hwL2IfPwSuppressionPwName, hwL2IfBcastRatio=hwL2IfBcastRatio, hwL2IfIsolateGroupEnable=hwL2IfIsolateGroupEnable, hwInBcastRisingThreshold=hwInBcastRisingThreshold, hwL2IfCompliances=hwL2IfCompliances, hwL2IfPortTcnGroup=hwL2IfPortTcnGroup, hwL2IfVlanSuppressionCir=hwL2IfVlanSuppressionCir, hwL2IfPwSuppressionCbs=hwL2IfPwSuppressionCbs, hwL2IfObjects=hwL2IfObjects, hwL2IfVlanSuppressionPortIndex=hwL2IfVlanSuppressionPortIndex, hwL2IfPVIDGroup=hwL2IfPVIDGroup, hwL2IfPwSuppressionTable=hwL2IfPwSuppressionTable, hwL2IfTrunkAllowPassVlanListLow=hwL2IfTrunkAllowPassVlanListLow, hwL2IfGroups=hwL2IfGroups, hwL2IfMib=hwL2IfMib, hwL2IfCurrentInBcastPercent=hwL2IfCurrentInBcastPercent, hwL2IfPwSuppressionRowStatus=hwL2IfPwSuppressionRowStatus, hwL2IfPortTypeGroup=hwL2IfPortTypeGroup, hwL2IfBroadcastRatioGroup=hwL2IfBroadcastRatioGroup, hwL2IfPortProtocolVlanDataGroup=hwL2IfPortProtocolVlanDataGroup, hwL2IfDiscardUnknownUcast=hwL2IfDiscardUnknownUcast, hwL2IfDynamicPortVlanEntry=hwL2IfDynamicPortVlanEntry, hwL2IfVlanSuppressionEndVlan=hwL2IfVlanSuppressionEndVlan, hwL2IfHybridPortTable=hwL2IfHybridPortTable, hwL2IfVlanSuppressionRowStatus=hwL2IfVlanSuppressionRowStatus, hwL2IfAlarmGroup=hwL2IfAlarmGroup, hwL2IfVlanSuppressionGroup=hwL2IfVlanSuppressionGroup, hwL2IfDiscardUnknownMcast=hwL2IfDiscardUnknownMcast, hwL2IfSuppressionRowStatus=hwL2IfSuppressionRowStatus, hwL2Interface=hwL2Interface, hwL2IfHybridTaggedVlanGroup=hwL2IfHybridTaggedVlanGroup, hwL2IfPortProtocolVlanDataPri=hwL2IfPortProtocolVlanDataPri, hwL2IfSuppressionCbs=hwL2IfSuppressionCbs, hwL2IfTcnVlanListHigh=hwL2IfTcnVlanListHigh, hwL2IfHybridTaggedVlanListHigh=hwL2IfHybridTaggedVlanListHigh, hwL2IfDynamicPortVlanTableGroup=hwL2IfDynamicPortVlanTableGroup, hwL2IfVlanSuppressionCbs=hwL2IfVlanSuppressionCbs, hwL2IfPortProtocolVlanDataVlan=hwL2IfPortProtocolVlanDataVlan, hwL2IfPortIsolatePortIndex=hwL2IfPortIsolatePortIndex, hwL2IfPortIsolateGroup=hwL2IfPortIsolateGroup, hwL2IfTcnSmartLink=hwL2IfTcnSmartLink, hwL2IfFlushControlVlan=hwL2IfFlushControlVlan, hwL2IfSuppressionGroup=hwL2IfSuppressionGroup, hwL2IfPortLoopDetectInterval=hwL2IfPortLoopDetectInterval, hwL2IfConformance=hwL2IfConformance, hwL2IfBpdu=hwL2IfBpdu, hwL2IfHybridUnTaggedVlanListLow=hwL2IfHybridUnTaggedVlanListLow, hwL2IfDynamicPortVlanTaggedVlanListHigh=hwL2IfDynamicPortVlanTaggedVlanListHigh, hwL2IfPortPriority=hwL2IfPortPriority, hwL2IfPortLoopDetectEntry=hwL2IfPortLoopDetectEntry, hwL2IfPortIfIndex=hwL2IfPortIfIndex, hwL2IfHybridPortIndex=hwL2IfHybridPortIndex, hwL2IfVlanPrecedence=hwL2IfVlanPrecedence, PYSNMP_MODULE_ID=hwL2IfMib, hwL2IfPortNum=hwL2IfPortNum, hwL2IfDynamicPortVlanUntaggedVlanListLow=hwL2IfDynamicPortVlanUntaggedVlanListLow, hwL2IfPortLoopDetectStatus=hwL2IfPortLoopDetectStatus, hwL2IfCompliance=hwL2IfCompliance, hwL2IfPortMaxGroup=hwL2IfPortMaxGroup, hwL2IfDiscardBcast=hwL2IfDiscardBcast, hwL2IfTrunkPortEntry=hwL2IfTrunkPortEntry, hwL2IfPortProtocolVlanDataEntry=hwL2IfPortProtocolVlanDataEntry, hwL2IfOutBcastRatio=hwL2IfOutBcastRatio, hwL2IfPortLoopDetectEnabled=hwL2IfPortLoopDetectEnabled, hwL2IfPortLoopDetectProtocol=hwL2IfPortLoopDetectProtocol, hwL2IfTrunkPortIndex=hwL2IfTrunkPortIndex, hwL2IfUcastRatio=hwL2IfUcastRatio, hwL2IfSuppressionTable=hwL2IfSuppressionTable, hwL2IfTrunkPortTable=hwL2IfTrunkPortTable)
