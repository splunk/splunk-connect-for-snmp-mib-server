#
# PySNMP MIB module CIENA-CES-DHCPV6-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-DHCPV6-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
cienaCesNotifications, cienaCesConfig = mibBuilder.importSymbols("CIENA-SMI", "cienaCesNotifications", "cienaCesConfig")
CienaStatsClear, CienaGlobalState = mibBuilder.importSymbols("CIENA-TC", "CienaStatsClear", "CienaGlobalState")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, TimeTicks, Bits, IpAddress, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, iso, ObjectIdentity, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "TimeTicks", "Bits", "IpAddress", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "NotificationType", "Counter32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
cienaCesDhcpv6ClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30))
cienaCesDhcpv6ClientMIB.setRevisions(('2016-06-21 00:00', '2016-01-19 00:00', '2015-11-02 00:00', '2015-08-06 00:00', '2013-10-17 00:00', '2013-09-24 00:00', '2013-07-19 00:00', '2013-02-11 19:00', '2013-02-11 00:00', '2013-02-08 00:00', '2012-11-15 00:00',))
if mibBuilder.loadTexts: cienaCesDhcpv6ClientMIB.setLastUpdated('201606210000Z')
if mibBuilder.loadTexts: cienaCesDhcpv6ClientMIB.setOrganization('Ciena, Inc')
cienaCesDhcpv6ClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1))
cienaCesDhcpv6Client = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1))
cienaCesDhcpv6RelayAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2))
cienaCesDhcpv6RelayAgentGlobalAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1))
cienaCesDhcpv6ClientMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 30))
cienaCesDhcpv6ClientMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 30, 0))
cienaCesDhcpv6ClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 2))
cienaCesDhcpv6ClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 2, 1))
cienaCesDhcpv6ClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 2, 2))
cienaCesDhcpv6AdminState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 1), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6AdminState.setStatus('current')
cienaCesDhcpv6IfName = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6IfName.setStatus('current')
cienaCesDhcpv6RapidCommitState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 3), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6RapidCommitState.setStatus('current')
cienaCesDhcpv6PrefLifetimeReq = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6PrefLifetimeReq.setStatus('current')
cienaCesDhcpv6ValidLifetimeReq = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ValidLifetimeReq.setStatus('current')
cienaCesDhcpv6ClientOptionTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 7), )
if mibBuilder.loadTexts: cienaCesDhcpv6ClientOptionTable.setStatus('current')
cienaCesDhcpv6ClientOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 7, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6OptionCodeIndex"))
if mibBuilder.loadTexts: cienaCesDhcpv6ClientOptionEntry.setStatus('current')
cienaCesDhcpv6OptionCodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6OptionCodeIndex.setStatus('current')
cienaCesDhcpv6OptionDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6OptionDesc.setStatus('current')
cienaCesDhcpv6OptionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6OptionCode.setStatus('current')
cienaCesDhcpv6OptionState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 7, 1, 4), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6OptionState.setStatus('current')
cienaCesDhcpv6ClientSessTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8), )
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessTable.setStatus('current')
cienaCesDhcpv6ClientSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6ClientSessMgmtIntfIndex"))
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessEntry.setStatus('current')
cienaCesDhcpv6ClientSessMgmtIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessMgmtIntfIndex.setStatus('current')
cienaCesDhcpv6ClientSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 99))).clone(namedValues=NamedValues(("disabled", 1), ("init", 2), ("bound", 3), ("renewing", 4), ("rebinding", 5), ("solicit", 6), ("request", 7), ("reconfigure", 8), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessState.setStatus('current')
cienaCesDhcpv6ClientSessAutoConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("none", 1), ("stateless", 2), ("stateful", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessAutoConfigState.setStatus('current')
cienaCesDhcpv6ClientSessUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessUpTime.setStatus('current')
cienaCesDhcpv6ClientSessPrefLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessPrefLifetime.setStatus('current')
cienaCesDhcpv6ClientSessValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 6), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessValidLifetime.setStatus('current')
cienaCesDhcpv6ClientSessLeaseExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessLeaseExpire.setStatus('current')
cienaCesDhcpv6ClientSessClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessClientId.setStatus('current')
cienaCesDhcpv6ClientSessServerIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessServerIpAddrType.setStatus('current')
cienaCesDhcpv6ClientSessServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessServerIpAddr.setStatus('current')
cienaCesDhcpv6ClientSessServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessServerId.setStatus('current')
cienaCesDhcpv6ClientSessT1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 12), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessT1Time.setStatus('current')
cienaCesDhcpv6ClientSessT2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 8, 1, 13), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessT2Time.setStatus('current')
cienaCesDhcpv6ClientSessStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9), )
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsTable.setStatus('current')
cienaCesDhcpv6ClientSessStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6ClientSessStatsMgmtIntfIndex"))
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsEntry.setStatus('current')
cienaCesDhcpv6ClientSessStatsMgmtIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsMgmtIntfIndex.setStatus('current')
cienaCesDhcpv6ClientSessStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 2), CienaStatsClear()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsClear.setStatus('current')
cienaCesDhcpv6ClientSessStatsPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsPktsRx.setStatus('current')
cienaCesDhcpv6ClientSessStatsReply = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsReply.setStatus('current')
cienaCesDhcpv6ClientSessStatsAdvert = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsAdvert.setStatus('current')
cienaCesDhcpv6ClientSessStatsRecfg = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsRecfg.setStatus('current')
cienaCesDhcpv6ClientSessStatsInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsInvalid.setStatus('current')
cienaCesDhcpv6ClientSessStatsPktsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsPktsTx.setStatus('current')
cienaCesDhcpv6ClientSessStatsSolicit = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsSolicit.setStatus('current')
cienaCesDhcpv6ClientSessStatsRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsRequest.setStatus('current')
cienaCesDhcpv6ClientSessStatsConfirm = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsConfirm.setStatus('current')
cienaCesDhcpv6ClientSessStatsRenew = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsRenew.setStatus('current')
cienaCesDhcpv6ClientSessStatsRebind = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsRebind.setStatus('current')
cienaCesDhcpv6ClientSessStatsInfoReq = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsInfoReq.setStatus('current')
cienaCesDhcpv6ClientSessStatsRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsRelease.setStatus('current')
cienaCesDhcpv6ClientSessStatsDecline = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsDecline.setStatus('current')
cienaCesDhcpv6ClientSessStatsTxFail = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 1, 9, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6ClientSessStatsTxFail.setStatus('current')
cienaCesDhcpv6LdraState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 1), CienaGlobalState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraState.setStatus('current')
cienaCesDhcpv6LdraInterfaceId = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("slotAndPort", 1), ("slotAndPortAndVlan", 2), ("intidString", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraInterfaceId.setStatus('current')
cienaCesDhcpv6LdraRemoteId = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("macAddress", 1), ("hostName", 2), ("ridString", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRemoteId.setStatus('current')
cienaCesDhcpv6LdraRemoteIdOption = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRemoteIdOption.setStatus('current')
cienaCesDhcpv6LdraRemoteIdEnterpriseNo = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRemoteIdEnterpriseNo.setStatus('current')
cienaCesDhcpv6LdraForward = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraForward.setStatus('current')
cienaCesDhcpv6LdraRelayed = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRelayed.setStatus('current')
cienaCesDhcpv6LdraDropped = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraDropped.setStatus('current')
cienaCesDhcpv6LdraGlobalStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 9), CienaStatsClear()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraGlobalStatsClear.setStatus('current')
cienaCesDhcpv6LdraNotForRelay = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraNotForRelay.setStatus('current')
cienaCesDhcpv6LdraStateTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 2), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraStateTable.setStatus('current')
cienaCesDhcpv6LdraStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 2, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraStateEntry.setStatus('current')
cienaCesDhcpv6LdraVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24576)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVlan.setStatus('current')
cienaCesDhcpv6LdraAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 2, 1, 2), CienaGlobalState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraAdminState.setStatus('current')
cienaCesDhcpv6LdraOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 2, 1, 3), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraOperState.setStatus('current')
cienaCesDhcpv6LdraRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRowStatus.setStatus('current')
cienaCesDhcpv6LdraTrustTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 3), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraTrustTable.setStatus('deprecated')
cienaCesDhcpv6LdraTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 3, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraPort"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraTrustEntry.setStatus('deprecated')
cienaCesDhcpv6LdraPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraPort.setStatus('current')
cienaCesDhcpv6LdraTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("clientTrust", 2), ("serverTrust", 3), ("dualRoleTrust", 4), ("unTrust", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraTrustMode.setStatus('deprecated')
cienaCesDhcpv6LdraStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraStatsTable.setStatus('current')
cienaCesDhcpv6LdraStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraStatsEntry.setStatus('current')
cienaCesDhcpv6LdraPktsForRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraPktsForRelay.setStatus('current')
cienaCesDhcpv6LdraRelayedClient = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRelayedClient.setStatus('current')
cienaCesDhcpv6LdraRelayedServer = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRelayedServer.setStatus('current')
cienaCesDhcpv6LdraUntrustedClientPortPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraUntrustedClientPortPktsRx.setStatus('current')
cienaCesDhcpv6LdraUntrustedServerPortPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraUntrustedServerPortPktsRx.setStatus('current')
cienaCesDhcpv6LdraFailedValidationPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraFailedValidationPktDrop.setStatus('current')
cienaCesDhcpv6LdraInvalidConfigPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraInvalidConfigPktDrop.setStatus('current')
cienaCesDhcpv6LdraExceededHopCountPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraExceededHopCountPktDrop.setStatus('current')
cienaCesDhcpv6LdraExceedMTUPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraExceedMTUPktDrop.setStatus('current')
cienaCesDhcpv6LdraNoTrustedServerPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraNoTrustedServerPktDrop.setStatus('current')
cienaCesDhcpv6LdraNoTrustedClientPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraNoTrustedClientPktDrop.setStatus('current')
cienaCesDhcpv6LdraIPv6FragBadExtHdrPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraIPv6FragBadExtHdrPktDrop.setStatus('current')
cienaCesDhcpv6LdraGeneralErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraGeneralErrors.setStatus('current')
cienaCesDhcpv6LdraStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 4, 1, 14), CienaStatsClear()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraStatsClear.setStatus('current')
cienaCesDhcpv6LdraIntidStringTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 5), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraIntidStringTable.setStatus('current')
cienaCesDhcpv6LdraIntidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 5, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraIntidStringPort"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraIntidStringEntry.setStatus('current')
cienaCesDhcpv6LdraIntidStringPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraIntidStringPort.setStatus('current')
cienaCesDhcpv6LdraIntidString = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraIntidString.setStatus('current')
cienaCesDhcpv6LdraIntidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraIntidStringRowStatus.setStatus('current')
cienaCesDhcpv6LdraRidStringTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 6), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRidStringTable.setStatus('current')
cienaCesDhcpv6LdraRidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 6, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraRidStringPort"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRidStringEntry.setStatus('current')
cienaCesDhcpv6LdraRidStringPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRidStringPort.setStatus('current')
cienaCesDhcpv6LdraRidString = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRidString.setStatus('current')
cienaCesDhcpv6LdraRidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraRidStringRowStatus.setStatus('current')
cienaCesDhcpv6LdraExtTrustTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 7), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraExtTrustTable.setStatus('current')
cienaCesDhcpv6LdraExtTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 7, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraPort"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraExtTrustEntry.setStatus('current')
cienaCesDhcpv6LdraExtPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraExtPortState.setStatus('current')
cienaCesDhcpv6LdraExtTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("clientTrust", 2), ("serverTrust", 3), ("dualRoleTrust", 4), ("unTrust", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraExtTrustMode.setStatus('current')
cienaCesDhcpv6LdraVsStateTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsStateTable.setStatus('current')
cienaCesDhcpv6LdraVsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsVlan"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsStateEntry.setStatus('current')
cienaCesDhcpv6LdraVsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24576)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsVlan.setStatus('current')
cienaCesDhcpv6LdraVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsName.setStatus('current')
cienaCesDhcpv6LdraVsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8, 1, 3), CienaGlobalState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsAdminState.setStatus('current')
cienaCesDhcpv6LdraVsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8, 1, 4), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsOperState.setStatus('current')
cienaCesDhcpv6LdraVsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRowStatus.setStatus('current')
cienaCesDhcpv6LdraVsTrustTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 9), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsTrustTable.setStatus('current')
cienaCesDhcpv6LdraVsTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 9, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsPort"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsSubVlan"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsTrustEntry.setStatus('current')
cienaCesDhcpv6LdraVsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsPort.setStatus('current')
cienaCesDhcpv6LdraVsSubVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24576)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsSubVlan.setStatus('current')
cienaCesDhcpv6LdraVsPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsPortState.setStatus('current')
cienaCesDhcpv6LdraVsTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("clientTrust", 2), ("serverTrust", 3), ("dualRoleTrust", 4), ("unTrust", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsTrustMode.setStatus('current')
cienaCesDhcpv6LdraVsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsStatsTable.setStatus('current')
cienaCesDhcpv6LdraVsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsVlan"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsStatsEntry.setStatus('current')
cienaCesDhcpv6LdraVsPktsForRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsPktsForRelay.setStatus('current')
cienaCesDhcpv6LdraVsRelayedClient = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRelayedClient.setStatus('current')
cienaCesDhcpv6LdraVsRelayedServer = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRelayedServer.setStatus('current')
cienaCesDhcpv6LdraVsUntrustedClientPortPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsUntrustedClientPortPktsRx.setStatus('current')
cienaCesDhcpv6LdraVsUntrustedServerPortPktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsUntrustedServerPortPktsRx.setStatus('current')
cienaCesDhcpv6LdraVsFailedValidationPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsFailedValidationPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsInvalidConfigPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsInvalidConfigPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsExceededHopCountPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsExceededHopCountPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsExceedMTUPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsExceedMTUPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsNoTrustedServerPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsNoTrustedServerPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsNoTrustedClientPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsNoTrustedClientPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsIPv6FragBadExtHdrPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsIPv6FragBadExtHdrPktDrop.setStatus('current')
cienaCesDhcpv6LdraVsGeneralErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsGeneralErrors.setStatus('current')
cienaCesDhcpv6LdraVsStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 10, 1, 14), CienaStatsClear().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsStatsClear.setStatus('current')
cienaCesDhcpv6LdraVsIntidStringTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 11), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsIntidStringTable.setStatus('current')
cienaCesDhcpv6LdraVsIntidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 11, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsPort"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsIntidStringEntry.setStatus('current')
cienaCesDhcpv6LdraVsIntidString = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsIntidString.setStatus('current')
cienaCesDhcpv6LdraVsIntidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsIntidStringRowStatus.setStatus('current')
cienaCesDhcpv6LdraVsRidStringTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 12), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRidStringTable.setStatus('current')
cienaCesDhcpv6LdraVsRidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 12, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVlan"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraVsPort"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRidStringEntry.setStatus('current')
cienaCesDhcpv6LdraVsRidString = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRidString.setStatus('current')
cienaCesDhcpv6LdraVsRidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraVsRidStringRowStatus.setStatus('current')
cienaCesDhcpv6LdraMplsStateTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsStateTable.setStatus('current')
cienaCesDhcpv6LdraMplsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsId"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsStateEntry.setStatus('current')
cienaCesDhcpv6LdraMplsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1677215)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsId.setStatus('current')
cienaCesDhcpv6LdraMplsName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsName.setStatus('current')
cienaCesDhcpv6LdraMplsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13, 1, 3), CienaGlobalState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsAdminState.setStatus('current')
cienaCesDhcpv6LdraMplsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13, 1, 4), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsOperState.setStatus('current')
cienaCesDhcpv6LdraMplsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRowStatus.setStatus('current')
cienaCesDhcpv6LdraMplsTrustTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 14), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsTrustTable.setStatus('current')
cienaCesDhcpv6LdraMplsTrustEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 14, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsId"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsInterface"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsTrustEntry.setStatus('current')
cienaCesDhcpv6LdraMplsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsInterface.setStatus('current')
cienaCesDhcpv6LdraMplsVcName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsVcName.setStatus('current')
cienaCesDhcpv6LdraMplsInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsInterfaceState.setStatus('current')
cienaCesDhcpv6LdraMplsTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("clientTrust", 2), ("serverTrust", 3), ("dualRoleTrust", 4), ("unTrust", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsTrustMode.setStatus('current')
cienaCesDhcpv6LdraMplsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsStatsTable.setStatus('current')
cienaCesDhcpv6LdraMplsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsId"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsStatsEntry.setStatus('current')
cienaCesDhcpv6LdraMplsPktsForRelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsPktsForRelay.setStatus('current')
cienaCesDhcpv6LdraMplsRelayedClient = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRelayedClient.setStatus('current')
cienaCesDhcpv6LdraMplsRelayedServer = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRelayedServer.setStatus('current')
cienaCesDhcpv6LdraMplsUntrustedClientInterfacePktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsUntrustedClientInterfacePktsRx.setStatus('current')
cienaCesDhcpv6LdraMplsUntrustedServerInterfacePktsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsUntrustedServerInterfacePktsRx.setStatus('current')
cienaCesDhcpv6LdraMplsFailedValidationPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsFailedValidationPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsInvalidConfigPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsInvalidConfigPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsExceededHopCountPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsExceededHopCountPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsExceedMTUPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsExceedMTUPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsNoTrustedServerPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsNoTrustedServerPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsNoTrustedClientPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsNoTrustedClientPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsIPv6FragBadExtHdrPktDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsIPv6FragBadExtHdrPktDrop.setStatus('current')
cienaCesDhcpv6LdraMplsGeneralErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsGeneralErrors.setStatus('current')
cienaCesDhcpv6LdraMplsStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 15, 1, 14), CienaStatsClear().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsStatsClear.setStatus('current')
cienaCesDhcpv6LdraMplsIntidStringTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 16), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsIntidStringTable.setStatus('current')
cienaCesDhcpv6LdraMplsIntidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 16, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsId"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsInterface"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsIntidStringEntry.setStatus('current')
cienaCesDhcpv6LdraMplsIntidString = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsIntidString.setStatus('current')
cienaCesDhcpv6LdraMplsIntidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 16, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsIntidStringRowStatus.setStatus('current')
cienaCesDhcpv6LdraMplsRidStringTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 17), )
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRidStringTable.setStatus('current')
cienaCesDhcpv6LdraMplsRidStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 17, 1), ).setIndexNames((0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsId"), (0, "CIENA-CES-DHCPV6-CLIENT-MIB", "cienaCesDhcpv6LdraMplsInterface"))
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRidStringEntry.setStatus('current')
cienaCesDhcpv6LdraMplsRidString = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRidString.setStatus('current')
cienaCesDhcpv6LdraMplsRidStringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 30, 1, 2, 17, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesDhcpv6LdraMplsRidStringRowStatus.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-DHCPV6-CLIENT-MIB", cienaCesDhcpv6LdraVsOperState=cienaCesDhcpv6LdraVsOperState, cienaCesDhcpv6ClientSessAutoConfigState=cienaCesDhcpv6ClientSessAutoConfigState, cienaCesDhcpv6LdraRelayedClient=cienaCesDhcpv6LdraRelayedClient, cienaCesDhcpv6ClientSessServerIpAddrType=cienaCesDhcpv6ClientSessServerIpAddrType, cienaCesDhcpv6ClientSessStatsClear=cienaCesDhcpv6ClientSessStatsClear, cienaCesDhcpv6LdraExtPortState=cienaCesDhcpv6LdraExtPortState, cienaCesDhcpv6LdraVsPktsForRelay=cienaCesDhcpv6LdraVsPktsForRelay, cienaCesDhcpv6ClientMIB=cienaCesDhcpv6ClientMIB, cienaCesDhcpv6LdraVsStatsTable=cienaCesDhcpv6LdraVsStatsTable, cienaCesDhcpv6LdraExtTrustMode=cienaCesDhcpv6LdraExtTrustMode, cienaCesDhcpv6LdraVsStatsClear=cienaCesDhcpv6LdraVsStatsClear, cienaCesDhcpv6LdraMplsExceededHopCountPktDrop=cienaCesDhcpv6LdraMplsExceededHopCountPktDrop, cienaCesDhcpv6LdraVsPortState=cienaCesDhcpv6LdraVsPortState, cienaCesDhcpv6LdraMplsRowStatus=cienaCesDhcpv6LdraMplsRowStatus, cienaCesDhcpv6ClientOptionEntry=cienaCesDhcpv6ClientOptionEntry, cienaCesDhcpv6LdraMplsInvalidConfigPktDrop=cienaCesDhcpv6LdraMplsInvalidConfigPktDrop, cienaCesDhcpv6ValidLifetimeReq=cienaCesDhcpv6ValidLifetimeReq, cienaCesDhcpv6LdraIntidStringEntry=cienaCesDhcpv6LdraIntidStringEntry, cienaCesDhcpv6LdraVsFailedValidationPktDrop=cienaCesDhcpv6LdraVsFailedValidationPktDrop, cienaCesDhcpv6LdraInterfaceId=cienaCesDhcpv6LdraInterfaceId, cienaCesDhcpv6ClientSessStatsDecline=cienaCesDhcpv6ClientSessStatsDecline, cienaCesDhcpv6LdraVsIntidStringTable=cienaCesDhcpv6LdraVsIntidStringTable, cienaCesDhcpv6LdraMplsIntidStringEntry=cienaCesDhcpv6LdraMplsIntidStringEntry, cienaCesDhcpv6LdraIPv6FragBadExtHdrPktDrop=cienaCesDhcpv6LdraIPv6FragBadExtHdrPktDrop, cienaCesDhcpv6LdraMplsOperState=cienaCesDhcpv6LdraMplsOperState, cienaCesDhcpv6LdraNotForRelay=cienaCesDhcpv6LdraNotForRelay, cienaCesDhcpv6LdraMplsIntidStringTable=cienaCesDhcpv6LdraMplsIntidStringTable, cienaCesDhcpv6LdraVsUntrustedClientPortPktsRx=cienaCesDhcpv6LdraVsUntrustedClientPortPktsRx, cienaCesDhcpv6LdraPort=cienaCesDhcpv6LdraPort, cienaCesDhcpv6LdraRelayedServer=cienaCesDhcpv6LdraRelayedServer, cienaCesDhcpv6ClientSessServerIpAddr=cienaCesDhcpv6ClientSessServerIpAddr, cienaCesDhcpv6LdraStateTable=cienaCesDhcpv6LdraStateTable, cienaCesDhcpv6LdraUntrustedClientPortPktsRx=cienaCesDhcpv6LdraUntrustedClientPortPktsRx, cienaCesDhcpv6LdraMplsIntidStringRowStatus=cienaCesDhcpv6LdraMplsIntidStringRowStatus, cienaCesDhcpv6ClientSessStatsInfoReq=cienaCesDhcpv6ClientSessStatsInfoReq, cienaCesDhcpv6Client=cienaCesDhcpv6Client, cienaCesDhcpv6ClientSessStatsInvalid=cienaCesDhcpv6ClientSessStatsInvalid, cienaCesDhcpv6ClientSessStatsRelease=cienaCesDhcpv6ClientSessStatsRelease, cienaCesDhcpv6LdraRidStringTable=cienaCesDhcpv6LdraRidStringTable, cienaCesDhcpv6LdraVsRidString=cienaCesDhcpv6LdraVsRidString, cienaCesDhcpv6LdraStatsTable=cienaCesDhcpv6LdraStatsTable, cienaCesDhcpv6LdraMplsVcName=cienaCesDhcpv6LdraMplsVcName, cienaCesDhcpv6ClientSessStatsReply=cienaCesDhcpv6ClientSessStatsReply, cienaCesDhcpv6LdraRidStringEntry=cienaCesDhcpv6LdraRidStringEntry, cienaCesDhcpv6ClientSessStatsTxFail=cienaCesDhcpv6ClientSessStatsTxFail, cienaCesDhcpv6LdraRemoteIdOption=cienaCesDhcpv6LdraRemoteIdOption, cienaCesDhcpv6LdraStatsEntry=cienaCesDhcpv6LdraStatsEntry, cienaCesDhcpv6LdraVsGeneralErrors=cienaCesDhcpv6LdraVsGeneralErrors, cienaCesDhcpv6ClientSessStatsTable=cienaCesDhcpv6ClientSessStatsTable, cienaCesDhcpv6LdraVsRowStatus=cienaCesDhcpv6LdraVsRowStatus, cienaCesDhcpv6LdraMplsId=cienaCesDhcpv6LdraMplsId, cienaCesDhcpv6LdraVsRelayedClient=cienaCesDhcpv6LdraVsRelayedClient, cienaCesDhcpv6LdraVsName=cienaCesDhcpv6LdraVsName, cienaCesDhcpv6OptionCodeIndex=cienaCesDhcpv6OptionCodeIndex, cienaCesDhcpv6LdraMplsAdminState=cienaCesDhcpv6LdraMplsAdminState, cienaCesDhcpv6LdraVsIPv6FragBadExtHdrPktDrop=cienaCesDhcpv6LdraVsIPv6FragBadExtHdrPktDrop, cienaCesDhcpv6ClientSessStatsRequest=cienaCesDhcpv6ClientSessStatsRequest, cienaCesDhcpv6LdraMplsTrustTable=cienaCesDhcpv6LdraMplsTrustTable, cienaCesDhcpv6LdraMplsInterfaceState=cienaCesDhcpv6LdraMplsInterfaceState, cienaCesDhcpv6LdraIntidString=cienaCesDhcpv6LdraIntidString, cienaCesDhcpv6LdraMplsRelayedClient=cienaCesDhcpv6LdraMplsRelayedClient, cienaCesDhcpv6LdraExceededHopCountPktDrop=cienaCesDhcpv6LdraExceededHopCountPktDrop, cienaCesDhcpv6LdraVsTrustMode=cienaCesDhcpv6LdraVsTrustMode, cienaCesDhcpv6LdraRemoteId=cienaCesDhcpv6LdraRemoteId, cienaCesDhcpv6LdraMplsIPv6FragBadExtHdrPktDrop=cienaCesDhcpv6LdraMplsIPv6FragBadExtHdrPktDrop, cienaCesDhcpv6ClientMIBCompliances=cienaCesDhcpv6ClientMIBCompliances, cienaCesDhcpv6ClientSessStatsConfirm=cienaCesDhcpv6ClientSessStatsConfirm, cienaCesDhcpv6LdraTrustMode=cienaCesDhcpv6LdraTrustMode, cienaCesDhcpv6LdraMplsStateEntry=cienaCesDhcpv6LdraMplsStateEntry, cienaCesDhcpv6LdraMplsExceedMTUPktDrop=cienaCesDhcpv6LdraMplsExceedMTUPktDrop, cienaCesDhcpv6ClientSessStatsAdvert=cienaCesDhcpv6ClientSessStatsAdvert, cienaCesDhcpv6LdraVsPort=cienaCesDhcpv6LdraVsPort, cienaCesDhcpv6LdraVsExceededHopCountPktDrop=cienaCesDhcpv6LdraVsExceededHopCountPktDrop, cienaCesDhcpv6LdraPktsForRelay=cienaCesDhcpv6LdraPktsForRelay, cienaCesDhcpv6LdraUntrustedServerPortPktsRx=cienaCesDhcpv6LdraUntrustedServerPortPktsRx, cienaCesDhcpv6LdraMplsFailedValidationPktDrop=cienaCesDhcpv6LdraMplsFailedValidationPktDrop, cienaCesDhcpv6LdraDropped=cienaCesDhcpv6LdraDropped, cienaCesDhcpv6LdraMplsRidStringTable=cienaCesDhcpv6LdraMplsRidStringTable, cienaCesDhcpv6LdraMplsTrustMode=cienaCesDhcpv6LdraMplsTrustMode, cienaCesDhcpv6ClientSessServerId=cienaCesDhcpv6ClientSessServerId, cienaCesDhcpv6ClientSessTable=cienaCesDhcpv6ClientSessTable, cienaCesDhcpv6LdraVsInvalidConfigPktDrop=cienaCesDhcpv6LdraVsInvalidConfigPktDrop, cienaCesDhcpv6LdraVsRidStringEntry=cienaCesDhcpv6LdraVsRidStringEntry, cienaCesDhcpv6LdraIntidStringPort=cienaCesDhcpv6LdraIntidStringPort, cienaCesDhcpv6LdraMplsRidStringRowStatus=cienaCesDhcpv6LdraMplsRidStringRowStatus, cienaCesDhcpv6ClientSessMgmtIntfIndex=cienaCesDhcpv6ClientSessMgmtIntfIndex, cienaCesDhcpv6RelayAgentGlobalAttrs=cienaCesDhcpv6RelayAgentGlobalAttrs, cienaCesDhcpv6LdraGeneralErrors=cienaCesDhcpv6LdraGeneralErrors, cienaCesDhcpv6LdraVsRelayedServer=cienaCesDhcpv6LdraVsRelayedServer, cienaCesDhcpv6LdraMplsInterface=cienaCesDhcpv6LdraMplsInterface, cienaCesDhcpv6ClientSessStatsPktsRx=cienaCesDhcpv6ClientSessStatsPktsRx, cienaCesDhcpv6ClientSessUpTime=cienaCesDhcpv6ClientSessUpTime, cienaCesDhcpv6LdraExceedMTUPktDrop=cienaCesDhcpv6LdraExceedMTUPktDrop, cienaCesDhcpv6LdraStatsClear=cienaCesDhcpv6LdraStatsClear, cienaCesDhcpv6LdraVsRidStringTable=cienaCesDhcpv6LdraVsRidStringTable, cienaCesDhcpv6ClientSessEntry=cienaCesDhcpv6ClientSessEntry, cienaCesDhcpv6LdraVsVlan=cienaCesDhcpv6LdraVsVlan, cienaCesDhcpv6LdraMplsUntrustedServerInterfacePktsRx=cienaCesDhcpv6LdraMplsUntrustedServerInterfacePktsRx, cienaCesDhcpv6ClientOptionTable=cienaCesDhcpv6ClientOptionTable, cienaCesDhcpv6ClientSessValidLifetime=cienaCesDhcpv6ClientSessValidLifetime, cienaCesDhcpv6LdraRowStatus=cienaCesDhcpv6LdraRowStatus, cienaCesDhcpv6LdraVsTrustEntry=cienaCesDhcpv6LdraVsTrustEntry, cienaCesDhcpv6LdraRelayed=cienaCesDhcpv6LdraRelayed, cienaCesDhcpv6LdraMplsGeneralErrors=cienaCesDhcpv6LdraMplsGeneralErrors, cienaCesDhcpv6LdraVsNoTrustedServerPktDrop=cienaCesDhcpv6LdraVsNoTrustedServerPktDrop, cienaCesDhcpv6ClientSessT1Time=cienaCesDhcpv6ClientSessT1Time, cienaCesDhcpv6LdraMplsPktsForRelay=cienaCesDhcpv6LdraMplsPktsForRelay, cienaCesDhcpv6LdraMplsName=cienaCesDhcpv6LdraMplsName, cienaCesDhcpv6ClientSessLeaseExpire=cienaCesDhcpv6ClientSessLeaseExpire, cienaCesDhcpv6ClientMIBConformance=cienaCesDhcpv6ClientMIBConformance, cienaCesDhcpv6LdraExtTrustTable=cienaCesDhcpv6LdraExtTrustTable, cienaCesDhcpv6LdraOperState=cienaCesDhcpv6LdraOperState, cienaCesDhcpv6ClientSessStatsRecfg=cienaCesDhcpv6ClientSessStatsRecfg, cienaCesDhcpv6ClientSessT2Time=cienaCesDhcpv6ClientSessT2Time, cienaCesDhcpv6ClientSessStatsRenew=cienaCesDhcpv6ClientSessStatsRenew, cienaCesDhcpv6RapidCommitState=cienaCesDhcpv6RapidCommitState, cienaCesDhcpv6OptionDesc=cienaCesDhcpv6OptionDesc, cienaCesDhcpv6LdraVsExceedMTUPktDrop=cienaCesDhcpv6LdraVsExceedMTUPktDrop, cienaCesDhcpv6LdraRemoteIdEnterpriseNo=cienaCesDhcpv6LdraRemoteIdEnterpriseNo, cienaCesDhcpv6ClientSessStatsSolicit=cienaCesDhcpv6ClientSessStatsSolicit, cienaCesDhcpv6OptionState=cienaCesDhcpv6OptionState, cienaCesDhcpv6ClientMIBGroups=cienaCesDhcpv6ClientMIBGroups, cienaCesDhcpv6LdraRidStringPort=cienaCesDhcpv6LdraRidStringPort, cienaCesDhcpv6LdraRidStringRowStatus=cienaCesDhcpv6LdraRidStringRowStatus, cienaCesDhcpv6ClientMIBNotificationPrefix=cienaCesDhcpv6ClientMIBNotificationPrefix, cienaCesDhcpv6LdraVsTrustTable=cienaCesDhcpv6LdraVsTrustTable, cienaCesDhcpv6AdminState=cienaCesDhcpv6AdminState, cienaCesDhcpv6ClientSessStatsMgmtIntfIndex=cienaCesDhcpv6ClientSessStatsMgmtIntfIndex, cienaCesDhcpv6LdraMplsNoTrustedClientPktDrop=cienaCesDhcpv6LdraMplsNoTrustedClientPktDrop, cienaCesDhcpv6LdraMplsIntidString=cienaCesDhcpv6LdraMplsIntidString, cienaCesDhcpv6LdraMplsRidString=cienaCesDhcpv6LdraMplsRidString, cienaCesDhcpv6LdraMplsRelayedServer=cienaCesDhcpv6LdraMplsRelayedServer, cienaCesDhcpv6RelayAgent=cienaCesDhcpv6RelayAgent, cienaCesDhcpv6LdraForward=cienaCesDhcpv6LdraForward, cienaCesDhcpv6LdraGlobalStatsClear=cienaCesDhcpv6LdraGlobalStatsClear, cienaCesDhcpv6LdraState=cienaCesDhcpv6LdraState, cienaCesDhcpv6LdraRidString=cienaCesDhcpv6LdraRidString, cienaCesDhcpv6LdraVsRidStringRowStatus=cienaCesDhcpv6LdraVsRidStringRowStatus, cienaCesDhcpv6ClientSessStatsRebind=cienaCesDhcpv6ClientSessStatsRebind, cienaCesDhcpv6LdraVsIntidStringRowStatus=cienaCesDhcpv6LdraVsIntidStringRowStatus, cienaCesDhcpv6ClientSessStatsPktsTx=cienaCesDhcpv6ClientSessStatsPktsTx, cienaCesDhcpv6OptionCode=cienaCesDhcpv6OptionCode, cienaCesDhcpv6ClientSessStatsEntry=cienaCesDhcpv6ClientSessStatsEntry, cienaCesDhcpv6LdraVsIntidString=cienaCesDhcpv6LdraVsIntidString, cienaCesDhcpv6LdraMplsStatsClear=cienaCesDhcpv6LdraMplsStatsClear, cienaCesDhcpv6LdraVsUntrustedServerPortPktsRx=cienaCesDhcpv6LdraVsUntrustedServerPortPktsRx, cienaCesDhcpv6LdraVsIntidStringEntry=cienaCesDhcpv6LdraVsIntidStringEntry, cienaCesDhcpv6LdraNoTrustedClientPktDrop=cienaCesDhcpv6LdraNoTrustedClientPktDrop, cienaCesDhcpv6LdraVsNoTrustedClientPktDrop=cienaCesDhcpv6LdraVsNoTrustedClientPktDrop, cienaCesDhcpv6ClientSessClientId=cienaCesDhcpv6ClientSessClientId, cienaCesDhcpv6LdraTrustTable=cienaCesDhcpv6LdraTrustTable, cienaCesDhcpv6LdraMplsStatsTable=cienaCesDhcpv6LdraMplsStatsTable, cienaCesDhcpv6LdraVsStatsEntry=cienaCesDhcpv6LdraVsStatsEntry, cienaCesDhcpv6LdraMplsNoTrustedServerPktDrop=cienaCesDhcpv6LdraMplsNoTrustedServerPktDrop, cienaCesDhcpv6LdraFailedValidationPktDrop=cienaCesDhcpv6LdraFailedValidationPktDrop, cienaCesDhcpv6LdraMplsStatsEntry=cienaCesDhcpv6LdraMplsStatsEntry, cienaCesDhcpv6LdraNoTrustedServerPktDrop=cienaCesDhcpv6LdraNoTrustedServerPktDrop, cienaCesDhcpv6ClientMIBNotifications=cienaCesDhcpv6ClientMIBNotifications, cienaCesDhcpv6LdraInvalidConfigPktDrop=cienaCesDhcpv6LdraInvalidConfigPktDrop, cienaCesDhcpv6ClientSessPrefLifetime=cienaCesDhcpv6ClientSessPrefLifetime, cienaCesDhcpv6LdraIntidStringTable=cienaCesDhcpv6LdraIntidStringTable, cienaCesDhcpv6LdraExtTrustEntry=cienaCesDhcpv6LdraExtTrustEntry, cienaCesDhcpv6LdraVsSubVlan=cienaCesDhcpv6LdraVsSubVlan, cienaCesDhcpv6LdraMplsRidStringEntry=cienaCesDhcpv6LdraMplsRidStringEntry, cienaCesDhcpv6LdraVsStateEntry=cienaCesDhcpv6LdraVsStateEntry, cienaCesDhcpv6LdraMplsStateTable=cienaCesDhcpv6LdraMplsStateTable, cienaCesDhcpv6LdraMplsTrustEntry=cienaCesDhcpv6LdraMplsTrustEntry, cienaCesDhcpv6LdraVsStateTable=cienaCesDhcpv6LdraVsStateTable, cienaCesDhcpv6LdraVsAdminState=cienaCesDhcpv6LdraVsAdminState, cienaCesDhcpv6ClientSessState=cienaCesDhcpv6ClientSessState, cienaCesDhcpv6LdraTrustEntry=cienaCesDhcpv6LdraTrustEntry, cienaCesDhcpv6LdraMplsUntrustedClientInterfacePktsRx=cienaCesDhcpv6LdraMplsUntrustedClientInterfacePktsRx, cienaCesDhcpv6LdraStateEntry=cienaCesDhcpv6LdraStateEntry, cienaCesDhcpv6LdraVlan=cienaCesDhcpv6LdraVlan, cienaCesDhcpv6LdraIntidStringRowStatus=cienaCesDhcpv6LdraIntidStringRowStatus, cienaCesDhcpv6IfName=cienaCesDhcpv6IfName, cienaCesDhcpv6ClientMIBObjects=cienaCesDhcpv6ClientMIBObjects, cienaCesDhcpv6PrefLifetimeReq=cienaCesDhcpv6PrefLifetimeReq, PYSNMP_MODULE_ID=cienaCesDhcpv6ClientMIB, cienaCesDhcpv6LdraAdminState=cienaCesDhcpv6LdraAdminState)
