#
# PySNMP MIB module ISD2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ISD2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:46:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
scanet, = mibBuilder.importSymbols("SCANET-MIB", "scanet")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, iso, NotificationType, ModuleIdentity, MibIdentifier, Bits, Unsigned32, TimeTicks, Counter64, IpAddress, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "iso", "NotificationType", "ModuleIdentity", "MibIdentifier", "Bits", "Unsigned32", "TimeTicks", "Counter64", "IpAddress", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
isd2 = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 48))
isd2SigChan = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 48, 1))
isd2Dchan = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 48, 2))
isd2Phys = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 48, 3))
isd2CallCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 208, 48, 4))
isd2SigChanTable = MibTable((1, 3, 6, 1, 4, 1, 208, 48, 1, 1), )
if mibBuilder.loadTexts: isd2SigChanTable.setStatus('mandatory')
isd2SigChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1), ).setIndexNames((0, "ISD2-MIB", "isd2SigChanIfIndex"))
if mibBuilder.loadTexts: isd2SigChanEntry.setStatus('mandatory')
isd2SigChanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2SigChanIfIndex.setStatus('mandatory')
isd2SigChanL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("teiUnassigned", 1), ("assignAwaitTei", 2), ("establishAwaitTei", 3), ("teiAssigned", 4), ("awaitEstablishment", 5), ("awaitRelease", 6), ("multipleFrameEstablished", 7), ("timerRecovery", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2SigChanL2State.setStatus('mandatory')
isd2SigChanCES = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2SigChanCES.setStatus('mandatory')
isd2SigChanSAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2SigChanSAPI.setStatus('mandatory')
isd2SigChanCallCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2SigChanCallCollisions.setStatus('mandatory')
isd2SigChanAddressCheckFails = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2SigChanAddressCheckFails.setStatus('mandatory')
isd2DchanTable = MibTable((1, 3, 6, 1, 4, 1, 208, 48, 2, 1), )
if mibBuilder.loadTexts: isd2DchanTable.setStatus('mandatory')
isd2DchanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1), ).setIndexNames((0, "ISD2-MIB", "isd2DchanIfIndex"))
if mibBuilder.loadTexts: isd2DchanEntry.setStatus('mandatory')
isd2DchanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanIfIndex.setStatus('mandatory')
isd2DchanRxShort = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxShort.setStatus('mandatory')
isd2DchanRxLong = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxLong.setStatus('mandatory')
isd2DchanRxCRCerror = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxCRCerror.setStatus('mandatory')
isd2DchanRxResidual = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxResidual.setStatus('mandatory')
isd2DchanRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxAborts.setStatus('mandatory')
isd2DchanRxOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxOverrun.setStatus('mandatory')
isd2DchanRxLostSync = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxLostSync.setStatus('mandatory')
isd2DchanRxBufferLack = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxBufferLack.setStatus('mandatory')
isd2DchanRxApplnotready = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxApplnotready.setStatus('mandatory')
isd2DchanRxUnknownProto = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanRxUnknownProto.setStatus('mandatory')
isd2DchanTxDiscardedProto = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanTxDiscardedProto.setStatus('mandatory')
isd2DchanTxDiscardedData = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanTxDiscardedData.setStatus('mandatory')
isd2DchanTxUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanTxUnderrun.setStatus('mandatory')
isd2DchanTxCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2DchanTxCollision.setStatus('mandatory')
isd2PhysTable = MibTable((1, 3, 6, 1, 4, 1, 208, 48, 3, 1), )
if mibBuilder.loadTexts: isd2PhysTable.setStatus('mandatory')
isd2PhysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 48, 3, 1, 1), ).setIndexNames((0, "ISD2-MIB", "isd2PhysIfIndex"))
if mibBuilder.loadTexts: isd2PhysEntry.setStatus('mandatory')
isd2PhysIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2PhysIfIndex.setStatus('mandatory')
isd2PhysL1State = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100, 101, 102, 103, 104, 105, 106))).clone(namedValues=NamedValues(("inactive", 1), ("sensing", 2), ("deactivated", 3), ("awaitingSignal", 4), ("identifyingInput", 5), ("synchronized", 6), ("activated", 7), ("lostFraming", 8), ("lossOfPower", 100), ("operational", 101), ("fault1", 102), ("fault2", 103), ("fault3", 104), ("fault4", 105), ("powerOn", 106)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2PhysL1State.setStatus('mandatory')
isd2PhysL1Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("noCableInserted", 1), ("lossOfSignal", 2), ("txCableNotConnected", 3), ("alarmIndicationSignal", 4), ("remoteAlarmIndication", 5), ("noMultiFrameAlignment", 6), ("noBasicFrameAlignment", 7), ("noSyncPattern", 8), ("ncrc4", 9), ("crce0", 10), ("crce1", 11), ("ebit0", 12), ("ebit1", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2PhysL1Alarm.setStatus('mandatory')
isd2CallCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 208, 48, 4, 1), )
if mibBuilder.loadTexts: isd2CallCtrlTable.setStatus('mandatory')
isd2CallCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1), ).setIndexNames((0, "ISD2-MIB", "isd2CallCtrlSigchanIfIndex"))
if mibBuilder.loadTexts: isd2CallCtrlEntry.setStatus('mandatory')
isd2CallCtrlSigchanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlSigchanIfIndex.setStatus('mandatory')
isd2CallCtrlBchanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlBchanIfIndex.setStatus('mandatory')
isd2CallCtrlLocalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlLocalNumber.setStatus('mandatory')
isd2CallCtrlLocalSubaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlLocalSubaddr.setStatus('mandatory')
isd2CallCtrlRemoteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlRemoteNumber.setStatus('mandatory')
isd2CallCtrlRemoteSubaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlRemoteSubaddr.setStatus('mandatory')
isd2CallCtrlL3State = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("callInit", 1), ("overlapSending", 2), ("outCallProc", 3), ("callDelivered", 4), ("undef5", 5), ("callPresent", 6), ("callReceived", 7), ("connectRequest", 8), ("inCallProc", 9), ("callActive", 10), ("disconnectRequest", 11), ("disconnectInd", 12), ("passiveAwaitingConf", 13), ("callPassive", 14), ("suspendRequest", 15), ("undef16", 16), ("resumeRequest", 17), ("undef18", 18), ("releaseRequest", 19), ("registerRequest", 20), ("cancelRequest", 21), ("undef22", 22), ("undef23", 23), ("undef24", 24), ("overlapReceive", 25), ("idleState", 26), ("establishWait", 27), ("asaiTr1State", 28), ("u10HoldRequest", 29), ("u10TransferRequest", 30), ("u10ConferenceRequest", 31), ("u10ReconnectRequest", 32), ("u10AwaitingDisc", 33), ("u10CallOnHold", 34), ("deactivated", 35), ("reactivateRequested", 36), ("deactivateRequested", 37), ("ni1HoldReqU3", 38), ("ni1HoldReqU4", 39), ("ni1HoldReqU10", 40), ("ni1RetrieveU3", 41), ("ni1RetrieveU4", 42), ("ni1RetrieveU10", 43), ("ni1HoldActiveU3", 44), ("ni1HoldActiveU4", 45), ("ni1HoldActiveU10", 46), ("broadcastState", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlL3State.setStatus('mandatory')
isd2CallCtrlCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlCallRef.setStatus('mandatory')
isd2CallCtrlChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlChannelNum.setStatus('mandatory')
isd2CallCtrlOutCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlOutCallsConnected.setStatus('mandatory')
isd2CallCtrlOutCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlOutCallsFailed.setStatus('mandatory')
isd2CallCtrlInCallsConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlInCallsConnected.setStatus('mandatory')
isd2CallCtrlInCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlInCallsRefused.setStatus('mandatory')
isd2CallCtrlCallCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlCallCollisions.setStatus('mandatory')
isd2CallCtrlCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlCauseCode.setStatus('mandatory')
isd2CallCtrlLocationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlLocationCode.setStatus('mandatory')
isd2CallCtrlCauseText = MibTableColumn((1, 3, 6, 1, 4, 1, 208, 48, 4, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(100, 100)).setFixedLength(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: isd2CallCtrlCauseText.setStatus('mandatory')
mibBuilder.exportSymbols("ISD2-MIB", isd2SigChanCallCollisions=isd2SigChanCallCollisions, isd2DchanRxBufferLack=isd2DchanRxBufferLack, isd2SigChanCES=isd2SigChanCES, isd2CallCtrlCallRef=isd2CallCtrlCallRef, isd2SigChanAddressCheckFails=isd2SigChanAddressCheckFails, isd2PhysIfIndex=isd2PhysIfIndex, isd2CallCtrlLocalSubaddr=isd2CallCtrlLocalSubaddr, isd2SigChanTable=isd2SigChanTable, isd2PhysL1State=isd2PhysL1State, isd2CallCtrlChannelNum=isd2CallCtrlChannelNum, isd2SigChanL2State=isd2SigChanL2State, isd2CallCtrlEntry=isd2CallCtrlEntry, isd2CallCtrlInCallsRefused=isd2CallCtrlInCallsRefused, isd2CallCtrlInCallsConnected=isd2CallCtrlInCallsConnected, isd2DchanRxApplnotready=isd2DchanRxApplnotready, isd2CallCtrlSigchanIfIndex=isd2CallCtrlSigchanIfIndex, isd2Dchan=isd2Dchan, isd2DchanRxOverrun=isd2DchanRxOverrun, isd2CallCtrlCallCollisions=isd2CallCtrlCallCollisions, isd2CallCtrlCauseCode=isd2CallCtrlCauseCode, isd2CallCtrlL3State=isd2CallCtrlL3State, isd2DchanRxLostSync=isd2DchanRxLostSync, isd2DchanTxCollision=isd2DchanTxCollision, isd2CallCtrlLocalNumber=isd2CallCtrlLocalNumber, isd2CallCtrlOutCallsConnected=isd2CallCtrlOutCallsConnected, isd2DchanRxAborts=isd2DchanRxAborts, isd2CallCtrlCauseText=isd2CallCtrlCauseText, isd2DchanTxDiscardedProto=isd2DchanTxDiscardedProto, isd2SigChanIfIndex=isd2SigChanIfIndex, isd2PhysL1Alarm=isd2PhysL1Alarm, isd2SigChan=isd2SigChan, isd2DchanTable=isd2DchanTable, isd2DchanRxCRCerror=isd2DchanRxCRCerror, isd2DchanRxUnknownProto=isd2DchanRxUnknownProto, isd2DchanTxUnderrun=isd2DchanTxUnderrun, isd2DchanRxResidual=isd2DchanRxResidual, isd2DchanIfIndex=isd2DchanIfIndex, isd2CallCtrlRemoteNumber=isd2CallCtrlRemoteNumber, isd2CallCtrlRemoteSubaddr=isd2CallCtrlRemoteSubaddr, isd2CallCtrlBchanIfIndex=isd2CallCtrlBchanIfIndex, isd2CallCtrlLocationCode=isd2CallCtrlLocationCode, isd2CallCtrl=isd2CallCtrl, isd2PhysEntry=isd2PhysEntry, isd2CallCtrlOutCallsFailed=isd2CallCtrlOutCallsFailed, isd2DchanRxLong=isd2DchanRxLong, isd2PhysTable=isd2PhysTable, isd2SigChanSAPI=isd2SigChanSAPI, isd2DchanRxShort=isd2DchanRxShort, isd2CallCtrlTable=isd2CallCtrlTable, isd2SigChanEntry=isd2SigChanEntry, isd2DchanTxDiscardedData=isd2DchanTxDiscardedData, isd2Phys=isd2Phys, isd2=isd2, isd2DchanEntry=isd2DchanEntry)
