#
# PySNMP MIB module INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
chassis, = mibBuilder.importSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-MIB", "chassis")
regModule, groups = mibBuilder.importSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-REG", "regModule", "groups")
PowerLedStates, IdromBinary16, PresenceLedStates, Presence, FaultLedStates, Index, Power = mibBuilder.importSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-TC", "PowerLedStates", "IdromBinary16", "PresenceLedStates", "Presence", "FaultLedStates", "Index", "Power")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, iso, TimeTicks, Counter64, Integer32, Unsigned32, NotificationType, MibIdentifier, Gauge32, Counter32, ObjectIdentity, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "TimeTicks", "Counter64", "Integer32", "Unsigned32", "NotificationType", "MibIdentifier", "Gauge32", "Counter32", "ObjectIdentity", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
multiFlexServerCmmMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 1, 1, 11))
multiFlexServerCmmMibModule.setRevisions(('2007-08-16 13:30', '2007-07-11 12:30', '2007-06-07 20:30', '2007-06-07 13:30', '2007-05-29 20:00', '2007-05-09 11:30', '2007-04-09 10:30', '2007-03-12 18:00', '2007-03-06 10:30', '2007-02-22 17:00', '2006-11-07 07:01', '2006-09-29 15:29',))
if mibBuilder.loadTexts: multiFlexServerCmmMibModule.setLastUpdated('200708161330Z')
if mibBuilder.loadTexts: multiFlexServerCmmMibModule.setOrganization('Intel Corporation')
maxCmms = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: maxCmms.setStatus('current')
numOfCmms = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numOfCmms.setStatus('current')
cmmPresenceMask = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmPresenceMask.setStatus('current')
cmms = ObjectIdentity((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201))
if mibBuilder.loadTexts: cmms.setStatus('current')
firmwareBundleId = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareBundleId.setStatus('current')
cmmTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2), )
if mibBuilder.loadTexts: cmmTable.setStatus('current')
cmmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1), ).setIndexNames((0, "INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmIndex"))
if mibBuilder.loadTexts: cmmEntry.setStatus('current')
cmmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmIndex.setStatus('current')
cmmPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 2), Presence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmPresence.setStatus('current')
cmmVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmVendor.setStatus('current')
cmmMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmMfgDate.setStatus('current')
cmmDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmDeviceName.setStatus('current')
cmmPart = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 6), IdromBinary16()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmPart.setStatus('current')
cmmSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 7), IdromBinary16()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmSerialNo.setStatus('current')
cmmMaximumPower = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 8), Power()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmMaximumPower.setStatus('current')
cmmNominalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 9), Power()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmNominalPower.setStatus('current')
cmmAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 10), IdromBinary16()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmAssetTag.setStatus('current')
cmmExternalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 11), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmExternalMac.setStatus('current')
cmmChassisMac = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 12), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmChassisMac.setStatus('current')
cmmPowerLed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 13), PowerLedStates()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmPowerLed.setStatus('current')
cmmFaultLed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 14), FaultLedStates()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmFaultLed.setStatus('current')
cmmPresenceLed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 15), PresenceLedStates()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmmPresenceLed.setStatus('current')
cmmEbfFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 10, 201, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmmEbfFirmwareVersion.setStatus('current')
cmmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 343, 2, 19, 1, 2, 2, 2, 11)).setObjects(("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "maxCmms"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "numOfCmms"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmPresenceMask"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "firmwareBundleId"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmIndex"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmPresence"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmVendor"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmMfgDate"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmDeviceName"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmPart"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmSerialNo"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmMaximumPower"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmNominalPower"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmAssetTag"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmExternalMac"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmChassisMac"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmPowerLed"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmFaultLed"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmPresenceLed"), ("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", "cmmEbfFirmwareVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmGroup = cmmGroup.setStatus('current')
mibBuilder.exportSymbols("INTELCORPORATION-MULTI-FLEX-SERVER-CMM-MIB", multiFlexServerCmmMibModule=multiFlexServerCmmMibModule, cmmEntry=cmmEntry, numOfCmms=numOfCmms, cmmIndex=cmmIndex, PYSNMP_MODULE_ID=multiFlexServerCmmMibModule, cmmSerialNo=cmmSerialNo, cmmTable=cmmTable, cmmGroup=cmmGroup, cmmEbfFirmwareVersion=cmmEbfFirmwareVersion, cmmMfgDate=cmmMfgDate, cmmChassisMac=cmmChassisMac, cmmPresenceMask=cmmPresenceMask, maxCmms=maxCmms, cmmMaximumPower=cmmMaximumPower, cmmPart=cmmPart, cmmDeviceName=cmmDeviceName, cmmPresence=cmmPresence, cmmPowerLed=cmmPowerLed, cmmExternalMac=cmmExternalMac, cmmVendor=cmmVendor, cmmAssetTag=cmmAssetTag, cmmPresenceLed=cmmPresenceLed, firmwareBundleId=firmwareBundleId, cmmNominalPower=cmmNominalPower, cmmFaultLed=cmmFaultLed, cmms=cmms)
