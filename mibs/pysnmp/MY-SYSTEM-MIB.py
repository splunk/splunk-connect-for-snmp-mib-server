#
# PySNMP MIB module MY-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Counter32, TimeTicks, iso, Counter64, ObjectIdentity, MibIdentifier, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Counter32", "TimeTicks", "iso", "Counter64", "ObjectIdentity", "MibIdentifier", "NotificationType", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
mySystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1))
mySystemMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: mySystemMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: mySystemMIB.setOrganization('D-Link Crop.')
mySystemMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1))
mySystemHwVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemHwVersion.setStatus('current')
mySystemSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemSwVersion.setStatus('current')
mySystemBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemBootVersion.setStatus('current')
mySystemSysCtrlVersion = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemSysCtrlVersion.setStatus('current')
mySystemParametersSave = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemParametersSave.setStatus('current')
mySystemOutBandRate = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("baud9600", 1), ("baud19200", 2), ("baud38400", 3), ("baud57600", 4), ("baud115200", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemOutBandRate.setStatus('current')
mySystemReset = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemReset.setStatus('current')
mySwitchLayer = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("layer2", 1), ("layer3", 2), ("router", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySwitchLayer.setStatus('current')
mySystemHwPower = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rpsNoLink", 1), ("rpsLinkAndNoPower", 2), ("rpsLinkAndReadyForPower", 3), ("rpsLinkAndPower", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemHwPower.setStatus('current')
mySystemHwFan = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("work", 1), ("stop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemHwFan.setStatus('current')
mySystemOutBandTimeout = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemOutBandTimeout.setStatus('obsolete')
mySystemTelnetTimeout = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemTelnetTimeout.setStatus('obsolete')
mySystemMainFile = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemMainFile.setStatus('current')
mySystemCurrentPower = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemCurrentPower.setStatus('current')
mySystemRemainPower = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemRemainPower.setStatus('current')
mySystemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemTemperature.setStatus('current')
mySystemElectricalSourceNum = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemElectricalSourceNum.setStatus('current')
mySystemElectricalSourceIsNormalTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 18), )
if mibBuilder.loadTexts: mySystemElectricalSourceIsNormalTable.setStatus('current')
mySystemElectricalSourceIsNormalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 18, 1), ).setIndexNames((0, "MY-SYSTEM-MIB", "mySystemElectricalSourceIsNormalIndex"))
if mibBuilder.loadTexts: mySystemElectricalSourceIsNormalEntry.setStatus('current')
mySystemElectricalSourceIsNormalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemElectricalSourceIsNormalIndex.setStatus('current')
mySystemElectricalSourceIsNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noexist", 1), ("existnopower", 2), ("existreadypower", 3), ("normal", 4), ("powerbutabnormal", 5), ("unknow", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemElectricalSourceIsNormal.setStatus('current')
mySystemElectricalSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 18, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemElectricalSourceName.setStatus('current')
mySystemCurrentVoltage = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemCurrentVoltage.setStatus('current')
mySystemFanNUM = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemFanNUM.setStatus('current')
mySystemFanIsNormalTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 21), )
if mibBuilder.loadTexts: mySystemFanIsNormalTable.setStatus('current')
mySystemFanIsNormalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 21, 1), ).setIndexNames((0, "MY-SYSTEM-MIB", "mySystemFanIsNormalIndex"))
if mibBuilder.loadTexts: mySystemFanIsNormalEntry.setStatus('current')
mySystemFanIsNormalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemFanIsNormalIndex.setStatus('current')
mySystemFanIsNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noexist", 1), ("existnopower", 2), ("existreadypower", 3), ("normal", 4), ("powerbutabnormal", 5), ("unknow", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemFanIsNormal.setStatus('current')
mySystemFanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 21, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemFanName.setStatus('current')
mySystemReloadTimeRemain = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemReloadTimeRemain.setStatus('current')
mySystemTemperatureTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23), )
if mibBuilder.loadTexts: mySystemTemperatureTable.setStatus('current')
mySystemTemperatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23, 1), ).setIndexNames((0, "MY-SYSTEM-MIB", "mySystemTemperatureIndex"))
if mibBuilder.loadTexts: mySystemTemperatureEntry.setStatus('current')
mySystemTemperatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemTemperatureIndex.setStatus('current')
mySystemTemperatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemTemperatureName.setStatus('current')
mySystemTemperatureCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemTemperatureCurrent.setStatus('current')
mySystemTemperatureWarningVaule = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemTemperatureWarningVaule.setStatus('current')
mySystemTemperatureCritialVaule = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 23, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mySystemTemperatureCritialVaule.setStatus('current')
mySystemSerialno = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemSerialno.setStatus('current')
mySystemVersionTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25), )
if mibBuilder.loadTexts: mySystemVersionTable.setStatus('current')
mySystemVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1), ).setIndexNames((0, "MY-SYSTEM-MIB", "mySystemVersionIndex"))
if mibBuilder.loadTexts: mySystemVersionEntry.setStatus('current')
mySystemVersionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionIndex.setStatus('current')
mySystemVersionName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionName.setStatus('current')
mySystemVersionSwBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionSwBoot.setStatus('current')
mySystemVersionSwCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionSwCtrl.setStatus('current')
mySystemVersionSwMain = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionSwMain.setStatus('current')
mySystemVersionHw = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionHw.setStatus('current')
mySystemVersionSerialno = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 1, 25, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mySystemVersionSerialno.setStatus('current')
mySystemMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 2))
mySystemHardChangeDesc = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: mySystemHardChangeDesc.setStatus('current')
mySystemHardChangeDetected = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 2, 2)).setObjects(("MY-SYSTEM-MIB", "mySystemHardChangeDesc"))
if mibBuilder.loadTexts: mySystemHardChangeDetected.setStatus('current')
mySystemPowerStateChange = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 2, 3)).setObjects(("MY-SYSTEM-MIB", "mySystemHwPower"))
if mibBuilder.loadTexts: mySystemPowerStateChange.setStatus('current')
mySystemFanStateChange = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 2, 4)).setObjects(("MY-SYSTEM-MIB", "mySystemHwFan"))
if mibBuilder.loadTexts: mySystemFanStateChange.setStatus('current')
mySystemMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 3))
mySystemMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 3, 1))
mySystemMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 3, 2))
mySystemMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 3, 1, 1)).setObjects(("MY-SYSTEM-MIB", "mySystemMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mySystemMIBCompliance = mySystemMIBCompliance.setStatus('current')
mySystemMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 1, 3, 2, 1)).setObjects(("MY-SYSTEM-MIB", "mySystemHwVersion"), ("MY-SYSTEM-MIB", "mySystemSwVersion"), ("MY-SYSTEM-MIB", "mySystemBootVersion"), ("MY-SYSTEM-MIB", "mySystemSysCtrlVersion"), ("MY-SYSTEM-MIB", "mySystemParametersSave"), ("MY-SYSTEM-MIB", "mySystemReset"), ("MY-SYSTEM-MIB", "mySystemOutBandRate"), ("MY-SYSTEM-MIB", "mySwitchLayer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mySystemMIBGroup = mySystemMIBGroup.setStatus('current')
mibBuilder.exportSymbols("MY-SYSTEM-MIB", mySystemFanIsNormalEntry=mySystemFanIsNormalEntry, mySystemHardChangeDetected=mySystemHardChangeDetected, mySystemReloadTimeRemain=mySystemReloadTimeRemain, mySystemElectricalSourceIsNormalEntry=mySystemElectricalSourceIsNormalEntry, mySystemElectricalSourceName=mySystemElectricalSourceName, mySystemVersionIndex=mySystemVersionIndex, mySystemVersionName=mySystemVersionName, mySystemSwVersion=mySystemSwVersion, mySystemVersionSerialno=mySystemVersionSerialno, mySystemMainFile=mySystemMainFile, mySystemMIBGroups=mySystemMIBGroups, mySystemVersionSwMain=mySystemVersionSwMain, mySystemVersionHw=mySystemVersionHw, mySystemCurrentVoltage=mySystemCurrentVoltage, mySystemFanIsNormal=mySystemFanIsNormal, mySystemTemperature=mySystemTemperature, mySystemTemperatureCurrent=mySystemTemperatureCurrent, mySystemTemperatureWarningVaule=mySystemTemperatureWarningVaule, mySystemHwFan=mySystemHwFan, mySystemTemperatureCritialVaule=mySystemTemperatureCritialVaule, mySystemTemperatureName=mySystemTemperatureName, mySystemFanIsNormalIndex=mySystemFanIsNormalIndex, mySystemHwPower=mySystemHwPower, mySystemMIBCompliance=mySystemMIBCompliance, mySystemElectricalSourceIsNormalTable=mySystemElectricalSourceIsNormalTable, mySystemOutBandRate=mySystemOutBandRate, mySystemFanStateChange=mySystemFanStateChange, mySwitchLayer=mySwitchLayer, mySystemMIBGroup=mySystemMIBGroup, mySystemRemainPower=mySystemRemainPower, mySystemTemperatureEntry=mySystemTemperatureEntry, mySystemFanIsNormalTable=mySystemFanIsNormalTable, mySystemCurrentPower=mySystemCurrentPower, mySystemMIBCompliances=mySystemMIBCompliances, mySystemMIBConformance=mySystemMIBConformance, PYSNMP_MODULE_ID=mySystemMIB, mySystemTelnetTimeout=mySystemTelnetTimeout, mySystemElectricalSourceIsNormal=mySystemElectricalSourceIsNormal, mySystemVersionTable=mySystemVersionTable, mySystemHardChangeDesc=mySystemHardChangeDesc, mySystemOutBandTimeout=mySystemOutBandTimeout, mySystemHwVersion=mySystemHwVersion, mySystemFanNUM=mySystemFanNUM, mySystemMIBTraps=mySystemMIBTraps, mySystemElectricalSourceNum=mySystemElectricalSourceNum, mySystemSerialno=mySystemSerialno, mySystemElectricalSourceIsNormalIndex=mySystemElectricalSourceIsNormalIndex, mySystemMIBObjects=mySystemMIBObjects, mySystemBootVersion=mySystemBootVersion, mySystemFanName=mySystemFanName, mySystemSysCtrlVersion=mySystemSysCtrlVersion, mySystemPowerStateChange=mySystemPowerStateChange, mySystemVersionSwBoot=mySystemVersionSwBoot, mySystemVersionEntry=mySystemVersionEntry, mySystemTemperatureTable=mySystemTemperatureTable, mySystemParametersSave=mySystemParametersSave, mySystemVersionSwCtrl=mySystemVersionSwCtrl, mySystemMIB=mySystemMIB, mySystemTemperatureIndex=mySystemTemperatureIndex, mySystemReset=mySystemReset)
