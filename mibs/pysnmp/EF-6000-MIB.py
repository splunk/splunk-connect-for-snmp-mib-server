#
# PySNMP MIB module EF-6000-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EF-6000-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Gauge32, Integer32, NotificationType, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, IpAddress, MibIdentifier, Bits, ModuleIdentity, Counter32, enterprises, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "Integer32", "NotificationType", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "IpAddress", "MibIdentifier", "Bits", "ModuleIdentity", "Counter32", "enterprises", "iso", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

class Ef6000SysOperStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operational", 1), ("redundant-failure", 2), ("minor-failure", 3), ("major-failure", 4), ("not-operational", 5))

class Ef6000FruCode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("fru-bkplane", 1), ("fru-ctp", 2), ("fru-sbar", 3), ("fru-fan2", 4), ("fru-fan", 5), ("fru-power", 6), ("fru-reserved", 7), ("fru-glsl", 8), ("fru-gsml", 9), ("fru-gxxl", 10), ("fru-gsf1", 11), ("fru-gsf2", 12), ("fru-glsr", 13), ("fru-gsmr", 14), ("fru-gxxr", 15), ("fru-fint1", 16))

class Ef6000FruPosition(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

class Ef6000PortIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2048)

class Ef6000PortPhyState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("psNotInstalled", 1), ("psAvailable", 2), ("psBlocked", 3), ("psUnavailable", 4), ("psLinkFailure", 5), ("psLinkFailLOL", 6), ("psIntDiags", 7), ("psExtLoop", 8), ("psPortFail", 9), ("psSR", 10), ("psLR", 11), ("psInaccessible", 12), ("psInactive", 13))

class Ef6000PortWWN(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class Ef6000PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(32, 32)
    fixedLength = 32

mcData = MibIdentifier((1, 3, 6, 1, 4, 1, 289))
commDev = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2))
fibreChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1))
fcSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1))
ef_6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2)).setLabel("ef-6000")
ef6000Sys = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1))
ef6000Fru = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2))
ef6000Port = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3))
ef6000PortBinding = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4))
ef6000Zoning = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5))
ef6000TA = MibIdentifier((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6))
ef6000SysCurrentDate = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysCurrentDate.setStatus('mandatory')
ef6000SysBootDate = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysBootDate.setStatus('mandatory')
ef6000SysFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysFirmwareVersion.setStatus('mandatory')
ef6000SysTypeNum = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysTypeNum.setStatus('mandatory')
ef6000SysModelNum = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysModelNum.setStatus('mandatory')
ef6000SysMfg = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysMfg.setStatus('mandatory')
ef6000SysPlantOfMfg = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysPlantOfMfg.setStatus('mandatory')
ef6000SysEcLevel = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysEcLevel.setStatus('mandatory')
ef6000SysSerialNum = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysSerialNum.setStatus('mandatory')
ef6000SysOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 10), Ef6000SysOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysOperStatus.setStatus('mandatory')
ef6000SysState = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("online", 1), ("coming-online", 2), ("offline", 3), ("going-offline", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysState.setStatus('mandatory')
ef6000SysAdmStatus = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ef6000SysAdmStatus.setStatus('mandatory')
ef6000SysConfigSpeed = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one-gig", 1), ("two-gig", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000SysConfigSpeed.setStatus('mandatory')
ef6000FruTable = MibTable((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: ef6000FruTable.setStatus('mandatory')
ef6000FruEntry = MibTableRow((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "EF-6000-MIB", "ef6000FruCode"), (0, "EF-6000-MIB", "ef6000FruPosition"))
if mibBuilder.loadTexts: ef6000FruEntry.setStatus('mandatory')
ef6000FruCode = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 1), Ef6000FruCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruCode.setStatus('mandatory')
ef6000FruPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 2), Ef6000FruPosition()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruPosition.setStatus('mandatory')
ef6000FruStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("backup", 2), ("update-busy", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruStatus.setStatus('mandatory')
ef6000FruPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruPartNumber.setStatus('mandatory')
ef6000FruSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruSerialNumber.setStatus('mandatory')
ef6000FruPowerOnHours = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruPowerOnHours.setStatus('mandatory')
ef6000FruTestDate = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000FruTestDate.setStatus('mandatory')
ef6000PortTable = MibTable((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1), )
if mibBuilder.loadTexts: ef6000PortTable.setStatus('mandatory')
ef6000PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1), ).setIndexNames((0, "EF-6000-MIB", "ef6000PortIndex"))
if mibBuilder.loadTexts: ef6000PortEntry.setStatus('mandatory')
ef6000PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 1), Ef6000PortIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortIndex.setStatus('mandatory')
ef6000PortPhyState = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 2), Ef6000PortPhyState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortPhyState.setStatus('mandatory')
ef6000PortOpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("online", 1), ("offline", 2), ("testing", 3), ("faulty", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortOpStatus.setStatus('mandatory')
ef6000PortAdmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("online", 1), ("offline", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ef6000PortAdmStatus.setStatus('mandatory')
ef6000PortConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("lc", 2), ("mt-rj", 3), ("mu", 4), ("internal-port", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortConnector.setStatus('mandatory')
ef6000PortDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortDistance.setStatus('mandatory')
ef6000PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("longDistance", 2), ("longWaveLaser-LL", 3), ("shortWaveLaser-OFC", 4), ("shortWaveLaser-noOFC", 5), ("longWaveLaser-LC", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortType.setStatus('mandatory')
ef6000PortMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortMedia.setStatus('mandatory')
ef6000PortSpeedCap = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortSpeedCap.setStatus('mandatory')
ef6000PortConfigSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("one-gig", 1), ("two-gig", 2), ("negotiate", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortConfigSpeed.setStatus('mandatory')
ef6000PortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("one-gig", 2), ("two-gig", 3), ("negotiate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortSpeed.setStatus('mandatory')
ef6000PortTxWords32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxWords32.setStatus('mandatory')
ef6000PortRxWords32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxWords32.setStatus('mandatory')
ef6000PortTxFrames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxFrames32.setStatus('mandatory')
ef6000PortRxFrames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxFrames32.setStatus('mandatory')
ef6000PortTxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxThroughput.setStatus('mandatory')
ef6000PortRxThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxThroughput.setStatus('mandatory')
ef6000PortTxC2Words32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC2Words32.setStatus('mandatory')
ef6000PortRxC2Words32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC2Words32.setStatus('mandatory')
ef6000PortTxC2Frames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC2Frames32.setStatus('mandatory')
ef6000PortRxC2Frames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC2Frames32.setStatus('mandatory')
ef6000PortTxC2Octets32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC2Octets32.setStatus('mandatory')
ef6000PortRxC2Octets32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC2Octets32.setStatus('mandatory')
ef6000PortTxC3Words32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC3Words32.setStatus('mandatory')
ef6000PortRxC3Words32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC3Words32.setStatus('mandatory')
ef6000PortTxC3Frames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC3Frames32.setStatus('mandatory')
ef6000PortRxC3Frames32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC3Frames32.setStatus('mandatory')
ef6000PortTxC3Octets32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC3Octets32.setStatus('mandatory')
ef6000PortRxC3Octets32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC3Octets32.setStatus('mandatory')
ef6000PortC3Discards32 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortC3Discards32.setStatus('mandatory')
ef6000PortDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortDiscardFrames.setStatus('mandatory')
ef6000PortTxLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxLinkResets.setStatus('mandatory')
ef6000PortRxLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxLinkResets.setStatus('mandatory')
ef6000PortTxOLSs = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxOLSs.setStatus('mandatory')
ef6000PortRxOLSs = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxOLSs.setStatus('mandatory')
ef6000PortSyncLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortSyncLosses.setStatus('mandatory')
ef6000PortSigLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortSigLosses.setStatus('mandatory')
ef6000PortProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortProtocolErrors.setStatus('mandatory')
ef6000PortInvalidTxWords = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortInvalidTxWords.setStatus('mandatory')
ef6000PortLinkFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortLinkFailures.setStatus('mandatory')
ef6000PortCrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortCrcs.setStatus('mandatory')
ef6000PortTruncs = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTruncs.setStatus('mandatory')
ef6000PortTxWords64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 67), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxWords64.setStatus('mandatory')
ef6000PortRxWords64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 68), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxWords64.setStatus('mandatory')
ef6000PortTxFrames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 69), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxFrames64.setStatus('mandatory')
ef6000PortRxFrames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 70), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxFrames64.setStatus('mandatory')
ef6000PortTxC2Words64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 71), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC2Words64.setStatus('mandatory')
ef6000PortRxC2Words64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 72), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC2Words64.setStatus('mandatory')
ef6000PortTxC2Frames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 73), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC2Frames64.setStatus('mandatory')
ef6000PortRxC2Frames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 74), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC2Frames64.setStatus('mandatory')
ef6000PortTxC2Octets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 75), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC2Octets64.setStatus('mandatory')
ef6000PortRxC2Octets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 76), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC2Octets64.setStatus('mandatory')
ef6000PortTxC3Words64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 77), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC3Words64.setStatus('mandatory')
ef6000PortRxC3Words64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 78), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC3Words64.setStatus('mandatory')
ef6000PortTxC3Frames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 79), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC3Frames64.setStatus('mandatory')
ef6000PortRxC3Frames64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 80), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC3Frames64.setStatus('mandatory')
ef6000PortTxC3Octets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 81), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortTxC3Octets64.setStatus('mandatory')
ef6000PortRxC3Octets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 82), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortRxC3Octets64.setStatus('mandatory')
ef6000PortC3Discards64 = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 3, 1, 1, 83), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortC3Discards64.setStatus('mandatory')
ef6000PortBindingTable = MibTable((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4, 1), )
if mibBuilder.loadTexts: ef6000PortBindingTable.setStatus('mandatory')
ef6000PortBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4, 1, 1), ).setIndexNames((0, "EF-6000-MIB", "ef6000PortBindingIndex"))
if mibBuilder.loadTexts: ef6000PortBindingEntry.setStatus('mandatory')
ef6000PortBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4, 1, 1, 1), Ef6000PortIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortBindingIndex.setStatus('mandatory')
ef6000PortBindingFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ef6000PortBindingFlag.setStatus('mandatory')
ef6000PortConfiguredWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4, 1, 1, 3), Ef6000PortWWN()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ef6000PortConfiguredWWN.setStatus('mandatory')
ef6000PortAttachedWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 4, 1, 1, 4), Ef6000PortWWN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000PortAttachedWWN.setStatus('mandatory')
ef6000ActiveZoneSetName = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000ActiveZoneSetName.setStatus('mandatory')
ef6000ActiveZoneCount = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000ActiveZoneCount.setStatus('mandatory')
ef6000DefaultZoneSetState = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000DefaultZoneSetState.setStatus('mandatory')
ef6000ActiveZoneSetState = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000ActiveZoneSetState.setStatus('mandatory')
ef6000HardwareEnforcedZoning = MibScalar((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000HardwareEnforcedZoning.setStatus('mandatory')
ef6000ActiveZoneTable = MibTable((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 6), )
if mibBuilder.loadTexts: ef6000ActiveZoneTable.setStatus('mandatory')
ef6000ActiveZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 6, 1), ).setIndexNames((0, "EF-6000-MIB", "ef6000ZoneIndex"))
if mibBuilder.loadTexts: ef6000ActiveZoneEntry.setStatus('mandatory')
ef6000ZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000ZoneIndex.setStatus('mandatory')
ef6000ZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000ZoneName.setStatus('mandatory')
ef6000ZoneMemberCount = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000ZoneMemberCount.setStatus('mandatory')
ef6000ActiveMemberTable = MibTable((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7), )
if mibBuilder.loadTexts: ef6000ActiveMemberTable.setStatus('mandatory')
ef6000ActiveMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1), ).setIndexNames((0, "EF-6000-MIB", "ef6000MemberZoneIndex"), (0, "EF-6000-MIB", "ef6000MemberIndex"))
if mibBuilder.loadTexts: ef6000ActiveMemberEntry.setStatus('mandatory')
ef6000MemberZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000MemberZoneIndex.setStatus('mandatory')
ef6000MemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000MemberIndex.setStatus('mandatory')
ef6000MemberType = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wwn", 1), ("portnumber", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000MemberType.setStatus('mandatory')
ef6000MemberWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1, 4), Ef6000PortWWN()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000MemberWWN.setStatus('mandatory')
ef6000MemberDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000MemberDomainID.setStatus('mandatory')
ef6000MemberPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 5, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000MemberPortNumber.setStatus('mandatory')
ef6000TATable = MibTable((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1), )
if mibBuilder.loadTexts: ef6000TATable.setStatus('mandatory')
ef6000TAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1), ).setIndexNames((0, "EF-6000-MIB", "ef6000TAIndex"))
if mibBuilder.loadTexts: ef6000TAEntry.setStatus('mandatory')
ef6000TAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAIndex.setStatus('mandatory')
ef6000TAName = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAName.setStatus('mandatory')
ef6000TAState = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAState.setStatus('mandatory')
ef6000TAType = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("throughput", 1), ("counter", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAType.setStatus('mandatory')
ef6000TAPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("list", 1), ("ePorts", 2), ("fPorts", 3), ("flPorts", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAPortType.setStatus('mandatory')
ef6000TAPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 6), Ef6000PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAPortList.setStatus('mandatory')
ef6000TAInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TAInterval.setStatus('mandatory')
ef6000TATriggerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TATriggerValue.setStatus('mandatory')
ef6000TTADirection = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transmit", 1), ("receive", 2), ("either", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TTADirection.setStatus('mandatory')
ef6000TTATriggerDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000TTATriggerDuration.setStatus('mandatory')
ef6000CTACounter = MibTableColumn((1, 3, 6, 1, 4, 1, 289, 2, 1, 1, 2, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ef6000CTACounter.setStatus('mandatory')
ef6000PortScn = NotificationType((1, 3, 6, 1, 4, 1, 289) + (0,1)).setObjects(("EF-6000-MIB", "ef6000PortOpStatus"))
ef6000FruScn = NotificationType((1, 3, 6, 1, 4, 1, 289) + (0,2)).setObjects(("EF-6000-MIB", "ef6000FruStatus"))
ef6000PortBindingViolation = NotificationType((1, 3, 6, 1, 4, 1, 289) + (0,3)).setObjects(("EF-6000-MIB", "ef6000PortAttachedWWN"))
ef6000ThresholdAlert = NotificationType((1, 3, 6, 1, 4, 1, 289) + (0,4)).setObjects(("EF-6000-MIB", "ef6000PortIndex"), ("EF-6000-MIB", "ef6000TAIndex"))
mibBuilder.exportSymbols("EF-6000-MIB", ef6000PortRxC3Words64=ef6000PortRxC3Words64, ef6000PortRxThroughput=ef6000PortRxThroughput, ef6000PortRxC3Frames64=ef6000PortRxC3Frames64, ef6000PortTxFrames32=ef6000PortTxFrames32, Ef6000PortList=Ef6000PortList, ef6000SysSerialNum=ef6000SysSerialNum, ef6000PortSpeedCap=ef6000PortSpeedCap, ef6000PortConfigSpeed=ef6000PortConfigSpeed, ef6000HardwareEnforcedZoning=ef6000HardwareEnforcedZoning, ef6000PortBindingIndex=ef6000PortBindingIndex, ef6000MemberType=ef6000MemberType, ef6000SysAdmStatus=ef6000SysAdmStatus, ef6000FruScn=ef6000FruScn, ef6000PortTxThroughput=ef6000PortTxThroughput, ef6000TAName=ef6000TAName, ef6000TATriggerValue=ef6000TATriggerValue, ef6000FruTestDate=ef6000FruTestDate, ef6000PortRxWords64=ef6000PortRxWords64, ef6000ZoneName=ef6000ZoneName, ef6000ActiveZoneSetState=ef6000ActiveZoneSetState, ef6000SysState=ef6000SysState, ef6000PortCrcs=ef6000PortCrcs, ef6000ActiveMemberEntry=ef6000ActiveMemberEntry, ef6000PortTxWords32=ef6000PortTxWords32, ef6000FruPartNumber=ef6000FruPartNumber, ef6000PortRxC3Octets32=ef6000PortRxC3Octets32, ef6000SysFirmwareVersion=ef6000SysFirmwareVersion, ef6000PortTxFrames64=ef6000PortTxFrames64, ef6000PortTxC3Octets32=ef6000PortTxC3Octets32, ef6000SysConfigSpeed=ef6000SysConfigSpeed, ef6000FruTable=ef6000FruTable, ef6000SysBootDate=ef6000SysBootDate, ef6000PortRxFrames64=ef6000PortRxFrames64, ef6000PortBinding=ef6000PortBinding, ef6000SysEcLevel=ef6000SysEcLevel, ef6000PortOpStatus=ef6000PortOpStatus, ef6000PortTxLinkResets=ef6000PortTxLinkResets, ef6000PortEntry=ef6000PortEntry, ef6000CTACounter=ef6000CTACounter, ef6000PortTxC2Words64=ef6000PortTxC2Words64, ef6000PortBindingEntry=ef6000PortBindingEntry, ef6000ActiveZoneSetName=ef6000ActiveZoneSetName, ef6000TAState=ef6000TAState, ef6000PortTxC3Frames32=ef6000PortTxC3Frames32, ef6000FruEntry=ef6000FruEntry, ef6000TAIndex=ef6000TAIndex, ef6000PortTxC2Frames64=ef6000PortTxC2Frames64, ef6000PortAdmStatus=ef6000PortAdmStatus, ef6000Port=ef6000Port, ef6000SysMfg=ef6000SysMfg, ef6000FruStatus=ef6000FruStatus, ef6000PortProtocolErrors=ef6000PortProtocolErrors, ef6000TTADirection=ef6000TTADirection, ef6000PortTruncs=ef6000PortTruncs, commDev=commDev, ef6000SysModelNum=ef6000SysModelNum, ef6000PortDistance=ef6000PortDistance, ef6000Fru=ef6000Fru, ef6000TA=ef6000TA, ef6000MemberWWN=ef6000MemberWWN, ef6000TATable=ef6000TATable, ef6000TAType=ef6000TAType, ef6000Sys=ef6000Sys, ef6000PortRxC3Frames32=ef6000PortRxC3Frames32, ef6000PortMedia=ef6000PortMedia, ef6000PortDiscardFrames=ef6000PortDiscardFrames, ef6000PortRxOLSs=ef6000PortRxOLSs, Ef6000PortIndex=Ef6000PortIndex, ef6000PortRxC2Octets64=ef6000PortRxC2Octets64, Ef6000SysOperStatus=Ef6000SysOperStatus, ef6000PortLinkFailures=ef6000PortLinkFailures, ef6000PortTxC3Frames64=ef6000PortTxC3Frames64, ef6000MemberZoneIndex=ef6000MemberZoneIndex, ef6000PortRxC3Words32=ef6000PortRxC3Words32, ef6000FruPosition=ef6000FruPosition, ef6000PortTxC3Words64=ef6000PortTxC3Words64, ef6000PortRxFrames32=ef6000PortRxFrames32, ef6000PortSpeed=ef6000PortSpeed, ef6000PortTxC3Words32=ef6000PortTxC3Words32, ef6000SysTypeNum=ef6000SysTypeNum, ef6000ActiveZoneTable=ef6000ActiveZoneTable, ef6000PortC3Discards32=ef6000PortC3Discards32, ef6000PortTxWords64=ef6000PortTxWords64, ef6000MemberDomainID=ef6000MemberDomainID, fcSwitch=fcSwitch, ef6000PortPhyState=ef6000PortPhyState, ef6000PortBindingFlag=ef6000PortBindingFlag, ef6000PortType=ef6000PortType, ef6000SysOperStatus=ef6000SysOperStatus, ef6000MemberPortNumber=ef6000MemberPortNumber, ef6000TAInterval=ef6000TAInterval, ef6000PortSyncLosses=ef6000PortSyncLosses, Ef6000PortWWN=Ef6000PortWWN, ef6000PortRxC3Octets64=ef6000PortRxC3Octets64, ef6000MemberIndex=ef6000MemberIndex, ef6000PortInvalidTxWords=ef6000PortInvalidTxWords, ef6000PortIndex=ef6000PortIndex, ef6000PortTxOLSs=ef6000PortTxOLSs, ef6000PortRxC2Words64=ef6000PortRxC2Words64, ef6000SysPlantOfMfg=ef6000SysPlantOfMfg, ef6000FruSerialNumber=ef6000FruSerialNumber, ef6000PortRxWords32=ef6000PortRxWords32, ef6000ActiveZoneCount=ef6000ActiveZoneCount, ef6000TAEntry=ef6000TAEntry, ef6000PortTxC2Words32=ef6000PortTxC2Words32, ef6000PortRxC2Octets32=ef6000PortRxC2Octets32, ef6000ActiveZoneEntry=ef6000ActiveZoneEntry, ef6000PortBindingViolation=ef6000PortBindingViolation, ef6000PortConfiguredWWN=ef6000PortConfiguredWWN, mcData=mcData, ef6000PortAttachedWWN=ef6000PortAttachedWWN, Ef6000FruCode=Ef6000FruCode, ef6000PortTxC2Octets32=ef6000PortTxC2Octets32, ef6000FruCode=ef6000FruCode, ef6000ThresholdAlert=ef6000ThresholdAlert, ef6000PortTxC2Frames32=ef6000PortTxC2Frames32, ef6000PortTable=ef6000PortTable, ef6000SysCurrentDate=ef6000SysCurrentDate, ef6000TTATriggerDuration=ef6000TTATriggerDuration, ef6000PortScn=ef6000PortScn, ef6000PortTxC3Octets64=ef6000PortTxC3Octets64, ef6000Zoning=ef6000Zoning, ef6000PortRxLinkResets=ef6000PortRxLinkResets, ef6000PortConnector=ef6000PortConnector, fibreChannel=fibreChannel, ef6000TAPortType=ef6000TAPortType, ef_6000=ef_6000, Ef6000FruPosition=Ef6000FruPosition, ef6000PortBindingTable=ef6000PortBindingTable, ef6000FruPowerOnHours=ef6000FruPowerOnHours, ef6000DefaultZoneSetState=ef6000DefaultZoneSetState, ef6000ZoneMemberCount=ef6000ZoneMemberCount, ef6000PortRxC2Frames32=ef6000PortRxC2Frames32, ef6000PortRxC2Frames64=ef6000PortRxC2Frames64, ef6000ActiveMemberTable=ef6000ActiveMemberTable, ef6000PortSigLosses=ef6000PortSigLosses, ef6000PortTxC2Octets64=ef6000PortTxC2Octets64, ef6000ZoneIndex=ef6000ZoneIndex, ef6000TAPortList=ef6000TAPortList, Ef6000PortPhyState=Ef6000PortPhyState, DisplayString=DisplayString, ef6000PortC3Discards64=ef6000PortC3Discards64, ef6000PortRxC2Words32=ef6000PortRxC2Words32)
