#
# PySNMP MIB module LIGO-GENERIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIGO-GENERIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:56:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ligoMgmt, = mibBuilder.importSymbols("LIGOWAVE-MIB", "ligoMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysLocation, = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation")
NotificationType, ModuleIdentity, Integer32, Counter32, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, TimeTicks, iso, IpAddress, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "Integer32", "Counter32", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "TimeTicks", "iso", "IpAddress", "Unsigned32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ligoGenericMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 32750, 3, 1))
ligoGenericMIB.setRevisions(('2016-01-15 00:00', '2009-02-13 00:00',))
if mibBuilder.loadTexts: ligoGenericMIB.setLastUpdated('201601150000Z')
if mibBuilder.loadTexts: ligoGenericMIB.setOrganization('LigoWave')
ligoGenericMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1))
ligoGenericNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0))
ligoGenericInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1))
ligoPingHostsTable = MibTable((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2), )
if mibBuilder.loadTexts: ligoPingHostsTable.setStatus('current')
ligoPingHostsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1), ).setIndexNames((0, "LIGO-GENERIC-MIB", "ligoPingAddrType"), (0, "LIGO-GENERIC-MIB", "ligoPingAddr"))
if mibBuilder.loadTexts: ligoPingHostsEntry.setStatus('current')
ligoPingAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ligoPingAddrType.setStatus('current')
ligoPingAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: ligoPingAddr.setStatus('current')
ligoPingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 3), Integer32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoPingTime.setStatus('current')
ligoPingHost = MibTableColumn((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ligoPingHost.setStatus('current')
ligoPowerLoss = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 1)).setObjects(("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: ligoPowerLoss.setStatus('current')
ligoAdministrativeReboot = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 2)).setObjects(("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: ligoAdministrativeReboot.setStatus('current')
ligoHeartbeat = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 3)).setObjects(("SNMPv2-MIB", "sysLocation"))
if mibBuilder.loadTexts: ligoHeartbeat.setStatus('current')
ligoHighPing = NotificationType((1, 3, 6, 1, 4, 1, 32750, 3, 1, 1, 0, 4)).setObjects(("SNMPv2-MIB", "sysLocation"), ("LIGO-GENERIC-MIB", "ligoPingTime"))
if mibBuilder.loadTexts: ligoHighPing.setStatus('current')
mibBuilder.exportSymbols("LIGO-GENERIC-MIB", ligoGenericMIB=ligoGenericMIB, ligoGenericNotifs=ligoGenericNotifs, ligoPingHost=ligoPingHost, ligoPowerLoss=ligoPowerLoss, ligoGenericMIBObjects=ligoGenericMIBObjects, ligoPingHostsTable=ligoPingHostsTable, ligoAdministrativeReboot=ligoAdministrativeReboot, ligoPingAddrType=ligoPingAddrType, ligoGenericInfo=ligoGenericInfo, ligoPingHostsEntry=ligoPingHostsEntry, ligoHighPing=ligoHighPing, ligoPingTime=ligoPingTime, PYSNMP_MODULE_ID=ligoGenericMIB, ligoPingAddr=ligoPingAddr, ligoHeartbeat=ligoHeartbeat)
