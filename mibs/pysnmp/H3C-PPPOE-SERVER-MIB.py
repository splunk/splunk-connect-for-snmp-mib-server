#
# PySNMP MIB module H3C-PPPOE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-PPPOE-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, TimeTicks, Bits, NotificationType, Counter64, Gauge32, ObjectIdentity, iso, Unsigned32, IpAddress, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "TimeTicks", "Bits", "NotificationType", "Counter64", "Gauge32", "ObjectIdentity", "iso", "Unsigned32", "IpAddress", "Counter32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
h3cPPPoEServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102))
h3cPPPoEServer.setRevisions(('2009-05-06 00:00',))
if mibBuilder.loadTexts: h3cPPPoEServer.setLastUpdated('200905060000Z')
if mibBuilder.loadTexts: h3cPPPoEServer.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
h3cPPPoEServerObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1))
h3cPPPoEServerMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerMaxSessions.setStatus('current')
h3cPPPoEServerCurrSessions = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerCurrSessions.setStatus('current')
h3cPPPoEServerAuthRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerAuthRequests.setStatus('current')
h3cPPPoEServerAuthSuccesses = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerAuthSuccesses.setStatus('current')
h3cPPPoEServerAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cPPPoEServerAuthFailures.setStatus('current')
h3cPPPoESAbnormOffsThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPoESAbnormOffsThreshold.setStatus('current')
h3cPPPoESAbnormOffPerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPoESAbnormOffPerThreshold.setStatus('current')
h3cPPPoESNormOffPerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cPPPoESNormOffPerThreshold.setStatus('current')
h3cPPPoEServerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2))
h3cPPPoeServerTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0))
h3cPPPoESAbnormOffsAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0, 1))
if mibBuilder.loadTexts: h3cPPPoESAbnormOffsAlarm.setStatus('current')
h3cPPPoESAbnormOffPerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0, 2))
if mibBuilder.loadTexts: h3cPPPoESAbnormOffPerAlarm.setStatus('current')
h3cPPPoESNormOffPerAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 102, 2, 0, 3))
if mibBuilder.loadTexts: h3cPPPoESNormOffPerAlarm.setStatus('current')
mibBuilder.exportSymbols("H3C-PPPOE-SERVER-MIB", PYSNMP_MODULE_ID=h3cPPPoEServer, h3cPPPoEServerMaxSessions=h3cPPPoEServerMaxSessions, h3cPPPoEServerAuthFailures=h3cPPPoEServerAuthFailures, h3cPPPoEServerAuthRequests=h3cPPPoEServerAuthRequests, h3cPPPoeServerTrapPrefix=h3cPPPoeServerTrapPrefix, h3cPPPoEServerCurrSessions=h3cPPPoEServerCurrSessions, h3cPPPoESNormOffPerThreshold=h3cPPPoESNormOffPerThreshold, h3cPPPoESNormOffPerAlarm=h3cPPPoESNormOffPerAlarm, h3cPPPoESAbnormOffPerAlarm=h3cPPPoESAbnormOffPerAlarm, h3cPPPoEServer=h3cPPPoEServer, h3cPPPoEServerObject=h3cPPPoEServerObject, h3cPPPoESAbnormOffsAlarm=h3cPPPoESAbnormOffsAlarm, h3cPPPoEServerTraps=h3cPPPoEServerTraps, h3cPPPoESAbnormOffPerThreshold=h3cPPPoESAbnormOffPerThreshold, h3cPPPoEServerAuthSuccesses=h3cPPPoEServerAuthSuccesses, h3cPPPoESAbnormOffsThreshold=h3cPPPoESAbnormOffsThreshold)
