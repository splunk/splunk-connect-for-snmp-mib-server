#
# PySNMP MIB module HPN-ICF-3GMODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-3GMODEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:24:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, IpAddress, MibIdentifier, iso, Counter64, Bits, NotificationType, Unsigned32, Integer32, ModuleIdentity, Gauge32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "MibIdentifier", "iso", "Counter64", "Bits", "NotificationType", "Unsigned32", "Integer32", "ModuleIdentity", "Gauge32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hpnicf3GModem = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98))
hpnicf3GModem.setRevisions(('2009-04-30 12:00',))
if mibBuilder.loadTexts: hpnicf3GModem.setLastUpdated('200904301200Z')
if mibBuilder.loadTexts: hpnicf3GModem.setOrganization('')
class HpnicfUIMStatusType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("absent", 1), ("initial", 2), ("fault", 3), ("unprotected", 4), ("protected", 5), ("pinLocked", 6), ("pukLocked", 7), ("selfDestruct", 8))

class HpnicfSmsEncodeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ascii", 1), ("ucs2", 2))

hpnicf3GModemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1))
hpnicfWirelessCard = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1))
hpnicfUIM = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2))
hpnicf3GCdma = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3))
hpnicf3GGsm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4))
hpnicfLte = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5))
hpnicfWirelessCardTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfWirelessCardTable.setStatus('current')
hpnicfWirelessCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"))
if mibBuilder.loadTexts: hpnicfWirelessCardEntry.setStatus('current')
hpnicfWirelessCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardIndex.setStatus('current')
hpnicfWirelessCardModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardModelName.setStatus('current')
hpnicfWirelessCardMfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardMfgName.setStatus('current')
hpnicfWirelessCardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardDescription.setStatus('current')
hpnicfWirelessCardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardSerialNumber.setStatus('current')
hpnicfWirelessCardCMIIID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardCMIIID.setStatus('current')
hpnicfWirelessCardHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardHardwareVersion.setStatus('current')
hpnicfWirelessCardFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardFirmwareVersion.setStatus('current')
hpnicfWirelessCardPRLVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardPRLVersion.setStatus('current')
hpnicfWirelessCardInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 10), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardInterfaceIndex.setStatus('current')
hpnicfWirelessCardModemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("onLine", 2), ("offLine", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardModemStatus.setStatus('current')
hpnicfWirelessCardModemMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("tdscdma", 2), ("wcdma", 3), ("cdma", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardModemMode.setStatus('current')
hpnicfWirelessCardCurNetConn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("unknown", 1), ("noService", 2), ("gsm", 3), ("gprs", 4), ("edge", 5), ("hsdpa", 6), ("hsupa", 7), ("hsupaAndhsdpa", 8), ("hspaPlus", 9), ("umts", 10), ("dchspaPlus", 11), ("lte", 12), ("onexrtt", 13), ("evdo", 14), ("onexrttAndevdo", 15), ("tdscdma", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardCurNetConn.setStatus('current')
hpnicfSmsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2))
hpnicfSmsScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 1))
hpnicfSmsRxNotifSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSmsRxNotifSwitch.setStatus('current')
hpnicfSmsOperationTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfSmsOperationTable.setStatus('current')
hpnicfSmsOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"))
if mibBuilder.loadTexts: hpnicfSmsOperationEntry.setStatus('current')
hpnicfSmsDestNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSmsDestNumber.setStatus('current')
hpnicfSmsEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 2, 1, 2), HpnicfSmsEncodeType().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSmsEncode.setStatus('current')
hpnicfSmsContent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSmsContent.setStatus('current')
hpnicfSmsSendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("set2Send", 1), ("ready2Send", 2), ("sending", 3), ("sentAlready", 4), ("telnumberInvalid", 5), ("paramInvalid", 6), ("contentTooLong", 7), ("codeError", 8), ("unknown", 9), ("busy", 10), ("notPresent", 11), ("notSupport", 12), ("initializing", 13), ("noCenterNum", 14), ("noSim", 15), ("simNotReady", 16), ("sendAtFailed", 17), ("sendDisable", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfSmsSendStatus.setStatus('current')
hpnicfWirelessCardOnlineTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfWirelessCardOnlineTable.setStatus('current')
hpnicfWirelessCardOnlineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), (0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardOnlineTime"))
if mibBuilder.loadTexts: hpnicfWirelessCardOnlineEntry.setStatus('current')
hpnicfWirelessCardOnlineTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpnicfWirelessCardOnlineTime.setStatus('current')
hpnicfWirelessCardOnlineType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfWirelessCardOnlineType.setStatus('current')
hpnicfUIMInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfUIMInfoTable.setStatus('current')
hpnicfUIMInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), (0, "HPN-ICF-3GMODEM-MIB", "hpnicfUIMIndex"))
if mibBuilder.loadTexts: hpnicfUIMInfoEntry.setStatus('current')
hpnicfUIMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfUIMIndex.setStatus('current')
hpnicfUIMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 2), HpnicfUIMStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMStatus.setStatus('current')
hpnicfUIMImsi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMImsi.setStatus('current')
hpnicfUIMPin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMPin.setStatus('current')
hpnicfUIMVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('milli-volt').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMVoltage.setStatus('current')
hpnicfUIMProvider = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMProvider.setStatus('current')
hpnicfUIMSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 31), ValueRangeConstraint(99, 99), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMSignal.setStatus('current')
hpnicfUIMTryPinPukTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfUIMTryPinPukTimes.setStatus('current')
hpnicfUIMOldPin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 2, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfUIMOldPin.setStatus('current')
hpnicf3GCdma1xRttTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicf3GCdma1xRttTable.setStatus('current')
hpnicf3GCdma1xRttEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"))
if mibBuilder.loadTexts: hpnicf3GCdma1xRttEntry.setStatus('current')
hpnicf3GCdma1xRttCurrentRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2147483648, -2147483648), ValueRangeConstraint(-150, 0), ))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GCdma1xRttCurrentRssi.setStatus('current')
hpnicf3GCdma1xRttRssiMediumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GCdma1xRttRssiMediumThreshold.setStatus('current')
hpnicf3GCdma1xRttRssiWeakThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0)).clone(-150)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GCdma1xRttRssiWeakThreshold.setStatus('current')
hpnicf3GCdma1xRttCurServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("emergency", 3), ("lowPower", 4), ("noService", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GCdma1xRttCurServiceStatus.setStatus('current')
hpnicf3GCdma1xRttCurRoamingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("roaming", 2), ("home", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GCdma1xRttCurRoamingStatus.setStatus('current')
hpnicf3GCdmaEvDoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2), )
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoTable.setStatus('current')
hpnicf3GCdmaEvDoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"))
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoEntry.setStatus('current')
hpnicf3GCdmaEvDoCurrentRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2147483648, -2147483648), ValueRangeConstraint(-150, 0), ))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoCurrentRssi.setStatus('current')
hpnicf3GCdmaEvDoRssiMediumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoRssiMediumThreshold.setStatus('current')
hpnicf3GCdmaEvDoRssiWeakThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0)).clone(-150)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoRssiWeakThreshold.setStatus('current')
hpnicf3GCdmaEvDoCurServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("emergency", 3), ("lowPower", 4), ("noService", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoCurServiceStatus.setStatus('current')
hpnicf3GCdmaEvDoCurRoamingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("roaming", 2), ("home", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GCdmaEvDoCurRoamingStatus.setStatus('current')
hpnicf3GGsmInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1), )
if mibBuilder.loadTexts: hpnicf3GGsmInfoTable.setStatus('current')
hpnicf3GGsmInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"))
if mibBuilder.loadTexts: hpnicf3GGsmInfoEntry.setStatus('current')
hpnicf3GGsmCurrentRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2147483648, -2147483648), ValueRangeConstraint(-150, 0), ))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmCurrentRssi.setStatus('current')
hpnicf3GGsmRssiMediumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GGsmRssiMediumThreshold.setStatus('current')
hpnicf3GGsmRssiWeakThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0)).clone(-150)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GGsmRssiWeakThreshold.setStatus('current')
hpnicf3GGsmImsi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmImsi.setStatus('current')
hpnicf3GGsmImei = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmImei.setStatus('current')
hpnicf3GGsmApn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicf3GGsmApn.setStatus('current')
hpnicf3GGsmPacketSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmPacketSessionStatus.setStatus('current')
hpnicf3GGsmNetworkSelectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("automatic", 2), ("manual", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmNetworkSelectionMode.setStatus('current')
hpnicf3GGsmMobileNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmMobileNetworkName.setStatus('current')
hpnicf3GGsmLac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmLac.setStatus('current')
hpnicf3GGsmCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmCellId.setStatus('current')
hpnicf3GGsmSimStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("notInsert", 3), ("networkReject", 4), ("blocked", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmSimStatus.setStatus('current')
hpnicf3GGsmCurServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("emergency", 3), ("lowPower", 4), ("noService", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmCurServiceStatus.setStatus('current')
hpnicf3GGsmCurRoamingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("roaming", 2), ("home", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmCurRoamingStatus.setStatus('current')
hpnicf3GGsmMcc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmMcc.setStatus('current')
hpnicf3GGsmMnc = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 4, 1, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicf3GGsmMnc.setStatus('current')
hpnicfLteInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1), )
if mibBuilder.loadTexts: hpnicfLteInfoTable.setStatus('current')
hpnicfLteInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1), ).setIndexNames((0, "HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"))
if mibBuilder.loadTexts: hpnicfLteInfoEntry.setStatus('current')
hpnicfLteCurrentRsrp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 1), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLteCurrentRsrp.setStatus('current')
hpnicfLteCurrentRsrq = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 2), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLteCurrentRsrq.setStatus('current')
hpnicfLteCurrentSinr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 3), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLteCurrentSinr.setStatus('current')
hpnicfLteTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 4), Integer32()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLteTxPower.setStatus('current')
hpnicfLteCurrentRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2147483648, -2147483648), ValueRangeConstraint(-150, 0), ))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLteCurrentRssi.setStatus('current')
hpnicfLteRssiMediumThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfLteRssiMediumThreshold.setStatus('current')
hpnicfLteRssiWeakThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0)).clone(-150)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfLteRssiWeakThreshold.setStatus('current')
hpnicf3GModemTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2))
hpnicf3GModemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3))
hpnicf3GModemTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0))
hpnicfDevSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDevSerialNumber.setStatus('current')
hpnicfDeviceOUI = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDeviceOUI.setStatus('current')
hpnicfAccessMedia = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("air", 2), ("cable", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfAccessMedia.setStatus('current')
hpnicf3GCurrentService = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("oneXRtt", 2), ("evDo", 3), ("gsm", 4), ("lte", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicf3GCurrentService.setStatus('current')
hpnicf3GCurrentRssiBind = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-2147483648, -2147483648), ValueRangeConstraint(-150, 0), ))).setUnits('dBm').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicf3GCurrentRssiBind.setStatus('current')
hpnicf3GImsiBind = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicf3GImsiBind.setStatus('current')
hpnicfSmsSrcNumberBind = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfSmsSrcNumberBind.setStatus('current')
hpnicfSmsTimeBind = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfSmsTimeBind.setStatus('current')
hpnicfSmsEncodeBind = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 9), HpnicfSmsEncodeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfSmsEncodeBind.setStatus('current')
hpnicfSmsContentBind = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 2, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfSmsContentBind.setStatus('current')
hpnicfWirelessCardInserted = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 1)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMImsi"))
if mibBuilder.loadTexts: hpnicfWirelessCardInserted.setStatus('current')
hpnicfWirelessCardPulledOut = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 2)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMImsi"))
if mibBuilder.loadTexts: hpnicfWirelessCardPulledOut.setStatus('current')
hpnicfUIMPinInvalid = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 3)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMImsi"))
if mibBuilder.loadTexts: hpnicfUIMPinInvalid.setStatus('current')
hpnicfUIMPinChanged = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 4)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMImsi"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMOldPin"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMPin"))
if mibBuilder.loadTexts: hpnicfUIMPinChanged.setStatus('current')
hpnicfAccessMediaChanged = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 5)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfUIMImsi"), ("HPN-ICF-3GMODEM-MIB", "hpnicfAccessMedia"))
if mibBuilder.loadTexts: hpnicfAccessMediaChanged.setStatus('current')
hpnicf3GRssiStrongSignalTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 6)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GCurrentService"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GCurrentRssiBind"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GImsiBind"))
if mibBuilder.loadTexts: hpnicf3GRssiStrongSignalTrap.setStatus('current')
hpnicf3GRssiMediumSignalTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 7)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GCurrentService"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GCurrentRssiBind"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GImsiBind"))
if mibBuilder.loadTexts: hpnicf3GRssiMediumSignalTrap.setStatus('current')
hpnicf3GRssiWeakSignalTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 8)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDeviceOUI"), ("HPN-ICF-3GMODEM-MIB", "hpnicfDevSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardSerialNumber"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GCurrentService"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GCurrentRssiBind"), ("HPN-ICF-3GMODEM-MIB", "hpnicf3GImsiBind"))
if mibBuilder.loadTexts: hpnicf3GRssiWeakSignalTrap.setStatus('current')
hpnicfSmsTxNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 9)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), ("HPN-ICF-3GMODEM-MIB", "hpnicfSmsSendStatus"))
if mibBuilder.loadTexts: hpnicfSmsTxNotification.setStatus('current')
hpnicfSmsRxNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 98, 3, 0, 10)).setObjects(("HPN-ICF-3GMODEM-MIB", "hpnicfWirelessCardIndex"), ("HPN-ICF-3GMODEM-MIB", "hpnicfSmsSrcNumberBind"), ("HPN-ICF-3GMODEM-MIB", "hpnicfSmsTimeBind"), ("HPN-ICF-3GMODEM-MIB", "hpnicfSmsEncodeBind"), ("HPN-ICF-3GMODEM-MIB", "hpnicfSmsContentBind"))
if mibBuilder.loadTexts: hpnicfSmsRxNotification.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-3GMODEM-MIB", hpnicfLteInfoEntry=hpnicfLteInfoEntry, hpnicfUIMSignal=hpnicfUIMSignal, hpnicfLteInfoTable=hpnicfLteInfoTable, hpnicf3GCdma1xRttCurServiceStatus=hpnicf3GCdma1xRttCurServiceStatus, hpnicfLteTxPower=hpnicfLteTxPower, hpnicfWirelessCardPulledOut=hpnicfWirelessCardPulledOut, hpnicf3GCdmaEvDoCurServiceStatus=hpnicf3GCdmaEvDoCurServiceStatus, hpnicf3GGsmMcc=hpnicf3GGsmMcc, hpnicf3GGsmInfoEntry=hpnicf3GGsmInfoEntry, hpnicfWirelessCardModelName=hpnicfWirelessCardModelName, hpnicf3GCdma=hpnicf3GCdma, hpnicf3GGsmCurRoamingStatus=hpnicf3GGsmCurRoamingStatus, hpnicf3GRssiWeakSignalTrap=hpnicf3GRssiWeakSignalTrap, hpnicfWirelessCardMfgName=hpnicfWirelessCardMfgName, hpnicf3GModemTrap=hpnicf3GModemTrap, hpnicf3GCdmaEvDoCurrentRssi=hpnicf3GCdmaEvDoCurrentRssi, hpnicfWirelessCard=hpnicfWirelessCard, hpnicfWirelessCardCurNetConn=hpnicfWirelessCardCurNetConn, hpnicfWirelessCardIndex=hpnicfWirelessCardIndex, hpnicfLteRssiMediumThreshold=hpnicfLteRssiMediumThreshold, hpnicf3GCdma1xRttTable=hpnicf3GCdma1xRttTable, hpnicfWirelessCardOnlineTable=hpnicfWirelessCardOnlineTable, hpnicfUIMPin=hpnicfUIMPin, hpnicfSmsTimeBind=hpnicfSmsTimeBind, HpnicfSmsEncodeType=HpnicfSmsEncodeType, hpnicfWirelessCardCMIIID=hpnicfWirelessCardCMIIID, hpnicf3GGsmNetworkSelectionMode=hpnicf3GGsmNetworkSelectionMode, hpnicfUIMImsi=hpnicfUIMImsi, hpnicfUIMVoltage=hpnicfUIMVoltage, hpnicfSmsDestNumber=hpnicfSmsDestNumber, hpnicfLteCurrentRsrq=hpnicfLteCurrentRsrq, hpnicf3GCdma1xRttRssiMediumThreshold=hpnicf3GCdma1xRttRssiMediumThreshold, hpnicfUIM=hpnicfUIM, hpnicf3GCdma1xRttEntry=hpnicf3GCdma1xRttEntry, hpnicf3GGsmLac=hpnicf3GGsmLac, hpnicf3GGsmImei=hpnicf3GGsmImei, hpnicfSmsScalarObjects=hpnicfSmsScalarObjects, PYSNMP_MODULE_ID=hpnicf3GModem, hpnicfSmsOperationTable=hpnicfSmsOperationTable, HpnicfUIMStatusType=HpnicfUIMStatusType, hpnicfWirelessCardModemMode=hpnicfWirelessCardModemMode, hpnicfAccessMedia=hpnicfAccessMedia, hpnicfWirelessCardInterfaceIndex=hpnicfWirelessCardInterfaceIndex, hpnicf3GGsmCurrentRssi=hpnicf3GGsmCurrentRssi, hpnicfUIMInfoTable=hpnicfUIMInfoTable, hpnicf3GGsmMnc=hpnicf3GGsmMnc, hpnicfSmsGroup=hpnicfSmsGroup, hpnicf3GRssiMediumSignalTrap=hpnicf3GRssiMediumSignalTrap, hpnicfWirelessCardFirmwareVersion=hpnicfWirelessCardFirmwareVersion, hpnicfAccessMediaChanged=hpnicfAccessMediaChanged, hpnicfSmsContent=hpnicfSmsContent, hpnicf3GGsm=hpnicf3GGsm, hpnicf3GCdmaEvDoRssiMediumThreshold=hpnicf3GCdmaEvDoRssiMediumThreshold, hpnicfWirelessCardHardwareVersion=hpnicfWirelessCardHardwareVersion, hpnicf3GCdmaEvDoEntry=hpnicf3GCdmaEvDoEntry, hpnicfWirelessCardDescription=hpnicfWirelessCardDescription, hpnicf3GGsmSimStatus=hpnicf3GGsmSimStatus, hpnicfSmsEncode=hpnicfSmsEncode, hpnicf3GModemTrapPrefix=hpnicf3GModemTrapPrefix, hpnicf3GGsmApn=hpnicf3GGsmApn, hpnicfLteCurrentSinr=hpnicfLteCurrentSinr, hpnicfSmsEncodeBind=hpnicfSmsEncodeBind, hpnicf3GCdmaEvDoRssiWeakThreshold=hpnicf3GCdmaEvDoRssiWeakThreshold, hpnicfUIMStatus=hpnicfUIMStatus, hpnicf3GCurrentService=hpnicf3GCurrentService, hpnicfUIMInfoEntry=hpnicfUIMInfoEntry, hpnicf3GModemTraps=hpnicf3GModemTraps, hpnicf3GGsmInfoTable=hpnicf3GGsmInfoTable, hpnicfWirelessCardOnlineType=hpnicfWirelessCardOnlineType, hpnicfUIMPinInvalid=hpnicfUIMPinInvalid, hpnicfSmsRxNotification=hpnicfSmsRxNotification, hpnicfUIMOldPin=hpnicfUIMOldPin, hpnicfLte=hpnicfLte, hpnicf3GCdmaEvDoCurRoamingStatus=hpnicf3GCdmaEvDoCurRoamingStatus, hpnicf3GCdma1xRttCurrentRssi=hpnicf3GCdma1xRttCurrentRssi, hpnicf3GCurrentRssiBind=hpnicf3GCurrentRssiBind, hpnicfUIMTryPinPukTimes=hpnicfUIMTryPinPukTimes, hpnicf3GGsmImsi=hpnicf3GGsmImsi, hpnicfDeviceOUI=hpnicfDeviceOUI, hpnicf3GModem=hpnicf3GModem, hpnicfLteRssiWeakThreshold=hpnicfLteRssiWeakThreshold, hpnicfWirelessCardTable=hpnicfWirelessCardTable, hpnicf3GGsmCellId=hpnicf3GGsmCellId, hpnicf3GGsmRssiMediumThreshold=hpnicf3GGsmRssiMediumThreshold, hpnicfWirelessCardEntry=hpnicfWirelessCardEntry, hpnicfUIMIndex=hpnicfUIMIndex, hpnicf3GGsmMobileNetworkName=hpnicf3GGsmMobileNetworkName, hpnicfUIMPinChanged=hpnicfUIMPinChanged, hpnicfWirelessCardOnlineEntry=hpnicfWirelessCardOnlineEntry, hpnicfWirelessCardInserted=hpnicfWirelessCardInserted, hpnicfWirelessCardSerialNumber=hpnicfWirelessCardSerialNumber, hpnicf3GImsiBind=hpnicf3GImsiBind, hpnicfSmsSendStatus=hpnicfSmsSendStatus, hpnicf3GCdma1xRttRssiWeakThreshold=hpnicf3GCdma1xRttRssiWeakThreshold, hpnicfSmsOperationEntry=hpnicfSmsOperationEntry, hpnicf3GGsmPacketSessionStatus=hpnicf3GGsmPacketSessionStatus, hpnicfLteCurrentRsrp=hpnicfLteCurrentRsrp, hpnicf3GGsmRssiWeakThreshold=hpnicf3GGsmRssiWeakThreshold, hpnicf3GGsmCurServiceStatus=hpnicf3GGsmCurServiceStatus, hpnicf3GRssiStrongSignalTrap=hpnicf3GRssiStrongSignalTrap, hpnicfDevSerialNumber=hpnicfDevSerialNumber, hpnicfSmsContentBind=hpnicfSmsContentBind, hpnicfWirelessCardOnlineTime=hpnicfWirelessCardOnlineTime, hpnicfWirelessCardModemStatus=hpnicfWirelessCardModemStatus, hpnicfSmsSrcNumberBind=hpnicfSmsSrcNumberBind, hpnicfSmsRxNotifSwitch=hpnicfSmsRxNotifSwitch, hpnicf3GCdma1xRttCurRoamingStatus=hpnicf3GCdma1xRttCurRoamingStatus, hpnicf3GModemObjects=hpnicf3GModemObjects, hpnicfUIMProvider=hpnicfUIMProvider, hpnicfLteCurrentRssi=hpnicfLteCurrentRssi, hpnicfSmsTxNotification=hpnicfSmsTxNotification, hpnicf3GCdmaEvDoTable=hpnicf3GCdmaEvDoTable, hpnicfWirelessCardPRLVersion=hpnicfWirelessCardPRLVersion)
