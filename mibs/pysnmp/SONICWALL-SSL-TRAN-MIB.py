#
# PySNMP MIB module SONICWALL-SSL-TRAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONICWALL-SSL-TRAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, NotificationType, Gauge32, MibIdentifier, TimeTicks, ObjectIdentity, enterprises, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, Unsigned32, Bits, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "Gauge32", "MibIdentifier", "TimeTicks", "ObjectIdentity", "enterprises", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "Unsigned32", "Bits", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sonicWALL = MibIdentifier((1, 3, 6, 1, 4, 1, 8714))
sonicSEC = MibIdentifier((1, 3, 6, 1, 4, 1, 8714, 2))
sonicSSL = MibIdentifier((1, 3, 6, 1, 4, 1, 8714, 2, 1))
sonicSSLTran = ModuleIdentity((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7))
if mibBuilder.loadTexts: sonicSSLTran.setLastUpdated('200203061330Z')
if mibBuilder.loadTexts: sonicSSLTran.setOrganization('SonicWALL, Inc.')
sslTranStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2))
totalRSAOperations = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalRSAOperations.setStatus('mandatory')
connRejNoRes = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connRejNoRes.setStatus('mandatory')
activeConnBlock = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeConnBlock.setStatus('mandatory')
activeClientConns = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeClientConns.setStatus('mandatory')
connAccepted = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connAccepted.setStatus('mandatory')
activeServerConns = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeServerConns.setStatus('mandatory')
sslNegRefused = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sslNegRefused.setStatus('mandatory')
sslNegAccept = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sslNegAccept.setStatus('mandatory')
activeOpenSockets = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 2, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeOpenSockets.setStatus('mandatory')
sslTranErrs = MibIdentifier((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3))
connErrs = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connErrs.setStatus('mandatory')
connBlockErrs = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connBlockErrs.setStatus('mandatory')
sslNegErrs = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sslNegErrs.setStatus('mandatory')
sslErrors = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sslErrors.setStatus('mandatory')
openSSLAcceptErrs = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: openSSLAcceptErrs.setStatus('mandatory')
openSSLConnErrs = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: openSSLConnErrs.setStatus('mandatory')
totSocketErrs = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totSocketErrs.setStatus('mandatory')
openSSLWriteErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: openSSLWriteErr.setStatus('mandatory')
sslPipeWriteErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sslPipeWriteErr.setStatus('mandatory')
toServerWriteErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: toServerWriteErr.setStatus('mandatory')
toServerPipeWriteErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: toServerPipeWriteErr.setStatus('mandatory')
openSSLReadErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: openSSLReadErr.setStatus('mandatory')
sslPipeReadErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sslPipeReadErr.setStatus('mandatory')
toServerReadErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: toServerReadErr.setStatus('mandatory')
toServerPipeReadErr = MibScalar((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 3, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: toServerPipeReadErr.setStatus('mandatory')
sslTranEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 10))
sslTpsChangeHi = NotificationType((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 10) + (0,4))
sslTpsChangeLo = NotificationType((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 10) + (0,5))
sslTotalConnectsChangeHi = NotificationType((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 10) + (0,6))
sslTotalConnectsChangeLo = NotificationType((1, 3, 6, 1, 4, 1, 8714, 2, 1, 7, 10) + (0,7))
mibBuilder.exportSymbols("SONICWALL-SSL-TRAN-MIB", sslNegAccept=sslNegAccept, PYSNMP_MODULE_ID=sonicSSLTran, totalRSAOperations=totalRSAOperations, openSSLConnErrs=openSSLConnErrs, sslTotalConnectsChangeLo=sslTotalConnectsChangeLo, connBlockErrs=connBlockErrs, sslErrors=sslErrors, sslTranErrs=sslTranErrs, toServerPipeReadErr=toServerPipeReadErr, openSSLReadErr=openSSLReadErr, toServerReadErr=toServerReadErr, sslTranStats=sslTranStats, toServerWriteErr=toServerWriteErr, sslNegErrs=sslNegErrs, activeClientConns=activeClientConns, sslNegRefused=sslNegRefused, activeOpenSockets=activeOpenSockets, sonicWALL=sonicWALL, activeConnBlock=activeConnBlock, sslPipeReadErr=sslPipeReadErr, activeServerConns=activeServerConns, toServerPipeWriteErr=toServerPipeWriteErr, sslTpsChangeLo=sslTpsChangeLo, sslTranEvents=sslTranEvents, sonicSSLTran=sonicSSLTran, connAccepted=connAccepted, totSocketErrs=totSocketErrs, connRejNoRes=connRejNoRes, sslTotalConnectsChangeHi=sslTotalConnectsChangeHi, sonicSEC=sonicSEC, sonicSSL=sonicSSL, openSSLAcceptErrs=openSSLAcceptErrs, sslPipeWriteErr=sslPipeWriteErr, openSSLWriteErr=openSSLWriteErr, connErrs=connErrs, sslTpsChangeHi=sslTpsChangeHi)
