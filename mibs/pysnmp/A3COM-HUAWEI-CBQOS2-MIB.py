#
# PySNMP MIB module A3COM-HUAWEI-CBQOS2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-CBQOS2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, ObjectIdentity, Counter32, TimeTicks, MibIdentifier, iso, Integer32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "ObjectIdentity", "Counter32", "TimeTicks", "MibIdentifier", "iso", "Integer32", "Counter64", "IpAddress")
DisplayString, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TextualConvention")
h3cCBQos2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2))
if mibBuilder.loadTexts: h3cCBQos2.setLastUpdated('200507300000Z')
if mibBuilder.loadTexts: h3cCBQos2.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
h3cQos2 = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65))
class MatchRuleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))
    namedValues = NamedValues(("matchRuleAny", 1), ("matchRuleIpv4Acl", 2), ("matchRuleIPv6Acl", 3), ("matchRuleIPv4Protocol", 4), ("matchRuleIPv6Protocol", 5), ("matchRuleIPXProtocol", 6), ("matchRuleDscp", 7), ("matchRuleIpPre", 8), ("matchRuleVlan8021p", 9), ("matchRuleMplsExp", 10), ("matchRuleAtmClp", 11), ("matchRuleFrDe", 12), ("matchRuleSourceMac", 13), ("matchRuleDestinationMac", 14), ("matchRuleQosLocalID", 15), ("matchRuleClassifier", 16), ("matchRuleInboundInterface", 17), ("matchRuleRtpPort", 18), ("matchRuleSourceIp", 19), ("matchRuleVlanID", 20), ("matchRuleTopMostVlanID", 21), ("matchRuleLocalPrecedence", 22), ("matchRuleDropPriority", 23), ("matchRuleBittorrent", 24), ("matchRuleServiceDot1p", 25))

class CarAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))
    namedValues = NamedValues(("invalid", 0), ("pass", 1), ("continue", 2), ("discard", 3), ("remark", 4), ("remark-ip-continue", 5), ("remark-ip-pass", 6), ("remark-mplsexp-continue", 7), ("remark-mplsexp-pass", 8), ("remark-dscp-continue", 9), ("remark-dscp-pass", 10), ("remark-dot1p-continue", 11), ("remark-dot1p-pass", 12), ("remark-atm-clp-continue", 13), ("remark-atm-clp-pass", 14), ("remark-fr-de-continue", 15), ("remark-fr-de-pass", 16), ("remark-local-pre-pass", 17), ("remark-drop-pre-pass", 18))

class RemarkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("typeIpPrecedence", 1), ("typeDscp", 2), ("typeMplsExp", 3), ("typeVlan8021p", 4), ("typeAtmClp", 5), ("typeFrDe", 6), ("typeVlanID", 7), ("typeQosLocalID", 8), ("typeDropPrecedence", 9), ("typeLocalPrecedence", 10), ("typeTopMostVlanID", 11))

class WredType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("typeIpPrecBased", 1), ("typeDscpBased", 2), ("typeDropLevelBased", 3), ("typeAtmClpBased", 4), ("typeVlan8021pBased", 5), ("typeMplsExpBased", 6))

class QueueType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ef", 1), ("af", 2), ("wfq", 3))

class QueueBandwidthUnit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unitUnavailable", 0), ("unitAbsolute", 1), ("unitPercent", 2))

class DirectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class ApplyObjectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("interface", 1), ("vlan", 2), ("atmPvc", 3), ("frDlci", 4))

h3cCBQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1))
h3cCBQoSClassifierObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1))
h3cCBQoSClassifierIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassifierIndexNext.setStatus('current')
h3cCBQoSClassifierCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2), )
if mibBuilder.loadTexts: h3cCBQoSClassifierCfgInfoTable.setStatus('current')
h3cCBQoSClassifierCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSClassifierIndex"))
if mibBuilder.loadTexts: h3cCBQoSClassifierCfgInfoEntry.setStatus('current')
h3cCBQoSClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSClassifierIndex.setStatus('current')
h3cCBQoSClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSClassifierName.setStatus('current')
h3cCBQoSClassifierRuleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassifierRuleCount.setStatus('current')
h3cCBQoSClassifierOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("and", 1), ("or", 2))).clone('and')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSClassifierOperator.setStatus('current')
h3cCBQoSClassifierLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unavailable", 1), ("l2", 2), ("l3", 3), ("both", 4))).clone('l3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSClassifierLayer.setStatus('current')
h3cCBQoSClassifierType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemDefined", 1), ("userDefined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassifierType.setStatus('current')
h3cCBQosClassifierMatchRuleNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQosClassifierMatchRuleNextIndex.setStatus('current')
h3cCBQoSClassifierRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSClassifierRowStatus.setStatus('current')
h3cCBQoSMatchRuleCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3), )
if mibBuilder.loadTexts: h3cCBQoSMatchRuleCfgInfoTable.setStatus('current')
h3cCBQoSMatchRuleCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSClassifierIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSMatchRuleIndex"))
if mibBuilder.loadTexts: h3cCBQoSMatchRuleCfgInfoEntry.setStatus('current')
h3cCBQoSMatchRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSMatchRuleIndex.setStatus('current')
h3cCBQoSMatchRuleIfNot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("match", 1), ("matchNot", 2))).clone('match')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchRuleIfNot.setStatus('current')
h3cCBQoSMatchRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 3), MatchRuleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchRuleType.setStatus('current')
h3cCBQoSMatchRuleStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchRuleStringValue.setStatus('current')
h3cCBQoSMatchRuleIntValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchRuleIntValue1.setStatus('current')
h3cCBQoSMatchRuleIntValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchRuleIntValue2.setStatus('current')
h3cCBQoSMatchIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchIpAddressType.setStatus('current')
h3cCBQoSMatchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchIpAddress.setStatus('current')
h3cCBQoSMatchRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 1, 3, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMatchRuleRowStatus.setStatus('current')
h3cCBQoSBehaviorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2))
h3cCBQoSBehaviorIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSBehaviorIndexNext.setStatus('current')
h3cCBQoSBehaviorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 2), )
if mibBuilder.loadTexts: h3cCBQoSBehaviorCfgInfoTable.setStatus('current')
h3cCBQoSBehaviorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSBehaviorCfgInfoEntry.setStatus('current')
h3cCBQoSBehaviorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSBehaviorIndex.setStatus('current')
h3cCBQoSBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSBehaviorName.setStatus('current')
h3cCBQoSBehaviorType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemDefined", 1), ("userDefined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSBehaviorType.setStatus('current')
h3cCBQoSBehaviorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSBehaviorRowStatus.setStatus('current')
h3cCBQoSCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3), )
if mibBuilder.loadTexts: h3cCBQoSCarCfgInfoTable.setStatus('current')
h3cCBQoSCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSCarCfgInfoEntry.setStatus('current')
h3cCBQoSCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarCir.setStatus('current')
h3cCBQoSCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarCbs.setStatus('current')
h3cCBQoSCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarEbs.setStatus('current')
h3cCBQoSCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarPir.setStatus('current')
h3cCBQoSCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarPbs.setStatus('current')
h3cCBQoSCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 6), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarGreenAction.setStatus('current')
h3cCBQoSCarGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarGreenRemarkValue.setStatus('current')
h3cCBQoSCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 8), CarAction().clone('remark')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarYellowAction.setStatus('current')
h3cCBQoSCarYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarYellowRemarkValue.setStatus('current')
h3cCBQoSCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 10), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarRedAction.setStatus('current')
h3cCBQoSCarRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarRedRemarkValue.setStatus('current')
h3cCBQoSCarPolicedPriorityMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("policed-service-map", 1), ("local-precedence-dot1p-map", 2), ("drop-precedence-map", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarPolicedPriorityMapType.setStatus('current')
h3cCBQoSCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSCarRowStatus.setStatus('current')
h3cCBQoSAggregativeCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 4), )
if mibBuilder.loadTexts: h3cCBQoSAggregativeCarCfgInfoTable.setStatus('current')
h3cCBQoSAggregativeCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSCarAggregativeCarIndex"))
if mibBuilder.loadTexts: h3cCBQoSAggregativeCarCfgInfoEntry.setStatus('current')
h3cCBQoSCarAggregativeCarIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSCarAggregativeCarIndex.setStatus('current')
h3cCBQoSCarAggregativeCarName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarAggregativeCarName.setStatus('current')
h3cCBQoSAggregativeCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSAggregativeCarRowStatus.setStatus('current')
h3cCBQoSGtsCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5), )
if mibBuilder.loadTexts: h3cCBQoSGtsCfgInfoTable.setStatus('current')
h3cCBQoSGtsCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSGtsCfgInfoEntry.setStatus('current')
h3cCBQoSGtsCir = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGtsCir.setStatus('current')
h3cCBQoSGtsCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGtsCbs.setStatus('current')
h3cCBQoSGtsEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGtsEbs.setStatus('current')
h3cCBQoSGtsQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGtsQueueLength.setStatus('current')
h3cCBQoSGtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGtsRowStatus.setStatus('current')
h3cCBQoSRemarkCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 6), )
if mibBuilder.loadTexts: h3cCBQoSRemarkCfgInfoTable.setStatus('current')
h3cCBQoSRemarkCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSRemarkType"))
if mibBuilder.loadTexts: h3cCBQoSRemarkCfgInfoEntry.setStatus('current')
h3cCBQoSRemarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 6, 1, 1), RemarkType())
if mibBuilder.loadTexts: h3cCBQoSRemarkType.setStatus('current')
h3cCBQoSRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRemarkValue.setStatus('current')
h3cCBQoSRemarkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRemarkRowStatus.setStatus('current')
h3cCBQoSQueueCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7), )
if mibBuilder.loadTexts: h3cCBQoSQueueCfgInfoTable.setStatus('current')
h3cCBQoSQueueCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSQueueCfgInfoEntry.setStatus('current')
h3cCBQoSQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 1), QueueType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueType.setStatus('current')
h3cCBQoSQueueDropType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("typeUnavailable", 0), ("typeTailDrop", 1), ("typeWred", 2))).clone('typeTailDrop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueDropType.setStatus('current')
h3cCBQoSQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 512), ValueRangeConstraint(2147483647, 2147483647), )).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueLength.setStatus('current')
h3cCBQoSQueueBandwidthUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 4), QueueBandwidthUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueBandwidthUnit.setStatus('current')
h3cCBQoSQueueBandwidthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 10000000), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueBandwidthValue.setStatus('current')
h3cCBQoSQueueCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(32, 1000000000), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueCbs.setStatus('current')
h3cCBQoSQueueQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("unavailable", 0), ("a16", 16), ("a32", 32), ("a64", 64), ("a128", 128), ("a256", 256), ("a512", 512), ("a1024", 1024), ("a2048", 2048), ("a4096", 4096))).clone('a256')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueQueueNumber.setStatus('current')
h3cCBQoSQueueCbsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(25, 500), ValueRangeConstraint(2147483647, 2147483647), )).clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueCbsRatio.setStatus('current')
h3cCBQoSQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 7, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSQueueRowStatus.setStatus('current')
h3cCBQoSWredCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 8), )
if mibBuilder.loadTexts: h3cCBQoSWredCfgInfoTable.setStatus('current')
h3cCBQoSWredCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSWredCfgInfoEntry.setStatus('current')
h3cCBQoSWredType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 8, 1, 1), WredType().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cCBQoSWredType.setStatus('current')
h3cCBQoSWredWeightConst = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cCBQoSWredWeightConst.setStatus('current')
h3cCBQoSWredClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 9), )
if mibBuilder.loadTexts: h3cCBQoSWredClassCfgInfoTable.setStatus('current')
h3cCBQoSWredClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSWredClassCfgInfoEntry.setStatus('current')
h3cCBQoSWredClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: h3cCBQoSWredClassValue.setStatus('current')
h3cCBQoSWredClassLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cCBQoSWredClassLowLimit.setStatus('current')
h3cCBQoSWredClassHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cCBQoSWredClassHighLimit.setStatus('current')
h3cCBQoSWredClassDiscardProb = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cCBQoSWredClassDiscardProb.setStatus('current')
h3cCBQoSPolicyRouteCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 10), )
if mibBuilder.loadTexts: h3cCBQoSPolicyRouteCfgInfoTable.setStatus('current')
h3cCBQoSPolicyRouteCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 10, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSPolicyRouteCfgInfoEntry.setStatus('current')
h3cCBQoSPolicyRouteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 10, 1, 1), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyRouteIpAddrType.setStatus('current')
h3cCBQoSPolicyRouteNexthop = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 10, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyRouteNexthop.setStatus('current')
h3cCBQoSPolicyRouteBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backup", 1), ("notbackup", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyRouteBackup.setStatus('current')
h3cCBQoSPolicyRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyRouteRowStatus.setStatus('current')
h3cCBQoSNatCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 11), )
if mibBuilder.loadTexts: h3cCBQoSNatCfgInfoTable.setStatus('current')
h3cCBQoSNatCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSNatCfgInfoEntry.setStatus('current')
h3cCBQoSNatMainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNatMainNumber.setStatus('current')
h3cCBQoSNatBackupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNatBackupNumber.setStatus('current')
h3cCBQoSNatServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNatServiceClass.setStatus('current')
h3cCBQoSNatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNatRowStatus.setStatus('current')
h3cCBQoSFirewallCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 12), )
if mibBuilder.loadTexts: h3cCBQoSFirewallCfgInfoTable.setStatus('current')
h3cCBQoSFirewallCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 12, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSFirewallCfgInfoEntry.setStatus('current')
h3cCBQoSFirewallAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSFirewallAction.setStatus('current')
h3cCBQoSFirewallRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSFirewallRowStatus.setStatus('current')
h3cCBQoSSamplingCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 13), )
if mibBuilder.loadTexts: h3cCBQoSSamplingCfgInfoTable.setStatus('current')
h3cCBQoSSamplingCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 13, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSSamplingCfgInfoEntry.setStatus('current')
h3cCBQoSSamplingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSSamplingNum.setStatus('current')
h3cCBQoSSamplingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 13, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSSamplingRowStatus.setStatus('current')
h3cCBQoSAccountCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 14), )
if mibBuilder.loadTexts: h3cCBQoSAccountCfgInfoTable.setStatus('current')
h3cCBQoSAccountCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 14, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSAccountCfgInfoEntry.setStatus('current')
h3cCBQoSAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 14, 1, 1), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSAccounting.setStatus('current')
h3cCBQoSAccountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSAccountRowStatus.setStatus('current')
h3cCBQoSRedirectCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15), )
if mibBuilder.loadTexts: h3cCBQoSRedirectCfgInfoTable.setStatus('current')
h3cCBQoSRedirectCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSRedirectCfgInfoEntry.setStatus('current')
h3cCBQoSRedirectType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cpu", 1), ("interface", 2), ("nextHop", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectType.setStatus('current')
h3cCBQoSRedirectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectIfIndex.setStatus('current')
h3cCBQoSRedirectIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 3), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectIpAddressType.setStatus('current')
h3cCBQoSRedirectIpAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectIpAddress1.setStatus('current')
h3cCBQoSRedirectIpAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectIpAddress2.setStatus('current')
h3cCBQoSRedirectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectRowStatus.setStatus('current')
h3cCBQoSRedirectIpv6Interface1 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectIpv6Interface1.setStatus('current')
h3cCBQoSRedirectIpv6Interface2 = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 15, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSRedirectIpv6Interface2.setStatus('current')
h3cCBQoSPriorityMapCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16), )
if mibBuilder.loadTexts: h3cCBQoSPriorityMapCfgInfoTable.setStatus('current')
h3cCBQoSPriorityMapCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSPriorityMapCfgInfoEntry.setStatus('current')
h3cCBQoSPriorityMapImportType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("invalid", 1), ("dscp", 2), ("dot1p", 3), ("exp", 4), ("ipPrecedence", 5), ("localPrecedence", 6), ("dropPrecedence", 7))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPriorityMapImportType.setStatus('current')
h3cCBQoSPriorityMapExportType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("invalid", 1), ("dscp", 2), ("dot1p", 3), ("exp", 4), ("ipPrecedence", 5), ("localPrecedence", 6), ("dropPrecedence", 7))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPriorityMapExportType.setStatus('current')
h3cCBQoSPriorityMapGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPriorityMapGroupIndex.setStatus('current')
h3cCBQoSPriorityMapGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPriorityMapGroupName.setStatus('current')
h3cCBQoSPriorityMapAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("autoDscp", 2), ("autoDot1p", 3), ("autoMplsExp", 4), ("autoIp", 5))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPriorityMapAuto.setStatus('current')
h3cCBQoSPriorityMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 16, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPriorityMapRowStatus.setStatus('current')
h3cCBQoSMirrorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 17), )
if mibBuilder.loadTexts: h3cCBQoSMirrorCfgInfoTable.setStatus('current')
h3cCBQoSMirrorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 17, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSMirrorCfgInfoEntry.setStatus('current')
h3cCBQoSMirrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("interface", 1), ("cpu", 2), ("vlan", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMirrorType.setStatus('current')
h3cCBQoSMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMirrorIfIndex.setStatus('current')
h3cCBQoSMirrorVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMirrorVlanID.setStatus('current')
h3cCBQoSMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 17, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSMirrorRowStatus.setStatus('current')
h3cCBQoSNestCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18), )
if mibBuilder.loadTexts: h3cCBQoSNestCfgInfoTable.setStatus('current')
h3cCBQoSNestCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSNestCfgInfoEntry.setStatus('current')
h3cCBQoSNestServiceVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestServiceVlanID.setStatus('current')
h3cCBQoSNestServiceDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestServiceDot1pValue.setStatus('current')
h3cCBQoSNestCustomerVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4094), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestCustomerVlanID.setStatus('current')
h3cCBQoSNestCustomerDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestCustomerDot1pValue.setStatus('current')
h3cCBQoSNestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 18, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestRowStatus.setStatus('current')
h3cCBQoSNestPolicyCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 19), )
if mibBuilder.loadTexts: h3cCBQoSNestPolicyCfgInfoTable.setStatus('current')
h3cCBQoSNestPolicyCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 19, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: h3cCBQoSNestPolicyCfgInfoEntry.setStatus('current')
h3cCBQoSNestPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 19, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestPolicyName.setStatus('current')
h3cCBQoSNestPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 2, 19, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSNestPolicyRowStatus.setStatus('current')
h3cCBQoSPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3))
h3cCBQoSPolicyIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyIndexNext.setStatus('current')
h3cCBQoSPolicyCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2), )
if mibBuilder.loadTexts: h3cCBQoSPolicyCfgInfoTable.setStatus('current')
h3cCBQoSPolicyCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyIndex"))
if mibBuilder.loadTexts: h3cCBQoSPolicyCfgInfoEntry.setStatus('current')
h3cCBQoSPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSPolicyIndex.setStatus('current')
h3cCBQoSPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyName.setStatus('current')
h3cCBQoSPolicyClassCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassCount.setStatus('current')
h3cCBQoSPolicyConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unavailable", 0), ("config", 1), ("auto", 2))).clone('config')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyConfigMode.setStatus('current')
h3cCBQoSPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("systemDefined", 1), ("userDefined", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyType.setStatus('current')
h3cCBQoSPolicyClassNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassNextIndex.setStatus('current')
h3cCBQoSPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyRowStatus.setStatus('current')
h3cCBQoSPolicyClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3), )
if mibBuilder.loadTexts: h3cCBQoSPolicyClassCfgInfoTable.setStatus('current')
h3cCBQoSPolicyClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSPolicyClassCfgInfoEntry.setStatus('current')
h3cCBQoSPolicyClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSPolicyClassIndex.setStatus('current')
h3cCBQoSPolicyClassClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassClassifierIndex.setStatus('current')
h3cCBQoSPolicyClassClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassClassifierName.setStatus('current')
h3cCBQoSPolicyClassBehaviorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassBehaviorIndex.setStatus('current')
h3cCBQoSPolicyClassBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassBehaviorName.setStatus('current')
h3cCBQoSPolicyClassPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 16383), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassPrecedence.setStatus('current')
h3cCBQoSPolicyClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassRowStatus.setStatus('current')
h3cCBQoSPolicyClassMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("modeNo", 1), ("modeDot1q", 2))).clone('modeNo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassMode.setStatus('current')
h3cCBQoSPolicyClassCfgOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 3, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPolicyClassCfgOrder.setStatus('current')
h3cCBQoSApplyPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4))
h3cCBQoSIfApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1), )
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyTable.setStatus('current')
h3cCBQoSIfApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyEntry.setStatus('current')
h3cCBQoSIfApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyIfIndex.setStatus('current')
h3cCBQoSIfApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1, 1, 2), DirectionType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyDirection.setStatus('current')
h3cCBQoSIfApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyName.setStatus('current')
h3cCBQoSIfApplyPolicyEnableDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unavailable", 1), ("true", 2), ("false", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyEnableDynamic.setStatus('current')
h3cCBQoSIfApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSIfApplyPolicyRowStatus.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyTable.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyEntry.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyIfIndex.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyVPI.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1, 3), Integer32())
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyVCI.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1, 4), DirectionType())
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyDirection.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyName.setStatus('current')
h3cCBQoSAtmPvcApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcApplyPolicyRowStatus.setStatus('current')
h3cCBQoSVlanApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3), )
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPolicyTable.setStatus('current')
h3cCBQoSVlanApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyVlanid"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPolicyEntry.setStatus('current')
h3cCBQoSVlanApplyPolicyVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPolicyVlanid.setStatus('current')
h3cCBQoSVlanApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3, 1, 2), DirectionType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPolicyDirection.setStatus('current')
h3cCBQoSVlanApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPolicyName.setStatus('current')
h3cCBQoSVlanApplyPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPriority.setStatus('current')
h3cCBQoSVlanApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSVlanApplyPolicyRowStatus.setStatus('current')
h3cCBQoSFrClassApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 4), )
if mibBuilder.loadTexts: h3cCBQoSFrClassApplyPolicyTable.setStatus('current')
h3cCBQoSFrClassApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrClassApplyPolicyFrClassName"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrClassApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSFrClassApplyPolicyEntry.setStatus('current')
h3cCBQoSFrClassApplyPolicyFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: h3cCBQoSFrClassApplyPolicyFrClassName.setStatus('current')
h3cCBQoSFrClassApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 4, 1, 2), DirectionType())
if mibBuilder.loadTexts: h3cCBQoSFrClassApplyPolicyDirection.setStatus('current')
h3cCBQoSFrClassApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSFrClassApplyPolicyName.setStatus('current')
h3cCBQoSFrClassApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSFrClassApplyPolicyRowStatus.setStatus('current')
h3cCBQoSFrPvcApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyTable.setStatus('current')
h3cCBQoSFrPvcApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyEntry.setStatus('current')
h3cCBQoSFrPvcApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyIfIndex.setStatus('current')
h3cCBQoSFrPvcApplyPolicyDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyDlciNum.setStatus('current')
h3cCBQoSFrPvcApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5, 1, 3), DirectionType())
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyDirection.setStatus('current')
h3cCBQoSFrPvcApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyName.setStatus('current')
h3cCBQoSFrPvcApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 5, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcApplyPolicyRowStatus.setStatus('current')
h3cCBQoSGlobalApplyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 6), )
if mibBuilder.loadTexts: h3cCBQoSGlobalApplyTable.setStatus('current')
h3cCBQoSGlobalApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSGlobalApplyDirection"))
if mibBuilder.loadTexts: h3cCBQoSGlobalApplyEntry.setStatus('current')
h3cCBQoSGlobalApplyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 6, 1, 1), DirectionType())
if mibBuilder.loadTexts: h3cCBQoSGlobalApplyDirection.setStatus('current')
h3cCBQoSGlobalApplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGlobalApplyName.setStatus('current')
h3cCBQoSGlobalApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 4, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cCBQoSGlobalApplyRowStatus.setStatus('current')
h3cCBQoSApplyPolicyStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5))
h3cCBQoSIfStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1))
h3cCBQoSIfCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1), )
if mibBuilder.loadTexts: h3cCBQoSIfCbqRunInfoTable.setStatus('current')
h3cCBQoSIfCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfCbqRunInfoEntry.setStatus('current')
h3cCBQoSIfCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqQueueSize.setStatus('current')
h3cCBQoSIfCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqDiscard.setStatus('current')
h3cCBQoSIfCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqEfQueueSize.setStatus('current')
h3cCBQoSIfCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqAfQueueSize.setStatus('current')
h3cCBQoSIfCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqBeQueueSize.setStatus('current')
h3cCBQoSIfCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqBeActiveQueueNum.setStatus('current')
h3cCBQoSIfCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqBeMaxActiveQueueNum.setStatus('current')
h3cCBQoSIfCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqBeTotalQueueNum.setStatus('current')
h3cCBQoSIfCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCbqAfAllocatedQueueNum.setStatus('current')
h3cCBQoSIfClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 2), )
if mibBuilder.loadTexts: h3cCBQoSIfClassMatchRunInfoTable.setStatus('current')
h3cCBQoSIfClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfClassMatchRunInfoEntry.setStatus('current')
h3cCBQoSIfClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfClassMatchedPackets.setStatus('current')
h3cCBQoSIfClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfClassMatchedBytes.setStatus('current')
h3cCBQoSIfClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfClassAverageRate.setStatus('current')
h3cCBQoSIfCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3), )
if mibBuilder.loadTexts: h3cCBQoSIfCarRunInfoTable.setStatus('current')
h3cCBQoSIfCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfCarRunInfoEntry.setStatus('current')
h3cCBQoSIfCarGreenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCarGreenPackets.setStatus('current')
h3cCBQoSIfCarGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCarGreenBytes.setStatus('current')
h3cCBQoSIfCarRedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCarRedPackets.setStatus('current')
h3cCBQoSIfCarRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCarRedBytes.setStatus('current')
h3cCBQoSIfCarYellowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCarYellowPackets.setStatus('current')
h3cCBQoSIfCarYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfCarYellowBytes.setStatus('current')
h3cCBQoSIfGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4), )
if mibBuilder.loadTexts: h3cCBQoSIfGtsRunInfoTable.setStatus('current')
h3cCBQoSIfGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfGtsRunInfoEntry.setStatus('current')
h3cCBQoSIfGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsPassedPackets.setStatus('current')
h3cCBQoSIfGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsPassedBytes.setStatus('current')
h3cCBQoSIfGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsDiscardedPackets.setStatus('current')
h3cCBQoSIfGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsDiscardedBytes.setStatus('current')
h3cCBQoSIfGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsDelayedPackets.setStatus('current')
h3cCBQoSIfGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsDelayedBytes.setStatus('current')
h3cCBQoSIfGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfGtsQueueSize.setStatus('current')
h3cCBQoSIfRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 5), )
if mibBuilder.loadTexts: h3cCBQoSIfRemarkRunInfoTable.setStatus('current')
h3cCBQoSIfRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfRemarkRunInfoEntry.setStatus('current')
h3cCBQoSIfRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfRemarkedPackets.setStatus('current')
h3cCBQoSIfQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6), )
if mibBuilder.loadTexts: h3cCBQoSIfQueueRunInfoTable.setStatus('current')
h3cCBQoSIfQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfQueueRunInfoEntry.setStatus('current')
h3cCBQoSIfQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfQueueMatchedPackets.setStatus('current')
h3cCBQoSIfQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfQueueMatchedBytes.setStatus('current')
h3cCBQoSIfQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfQueueEnqueuedPackets.setStatus('current')
h3cCBQoSIfQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfQueueEnqueuedBytes.setStatus('current')
h3cCBQoSIfQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfQueueDiscardedPackets.setStatus('current')
h3cCBQoSIfQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfQueueDiscardedBytes.setStatus('current')
h3cCBQoSIfWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 7), )
if mibBuilder.loadTexts: h3cCBQoSIfWredRunInfoTable.setStatus('current')
h3cCBQoSIfWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSIfWredRunInfoEntry.setStatus('current')
h3cCBQoSIfWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfWredRandomDiscardedPackets.setStatus('current')
h3cCBQoSIfWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfWredTailDiscardedPackets.setStatus('current')
h3cCBQoSIfAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 8), )
if mibBuilder.loadTexts: h3cCBQoSIfAccountingRunInfoTable.setStatus('current')
h3cCBQoSIfAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSIfAccountingRunInfoEntry.setStatus('current')
h3cCBQoSIfAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfAccountingPackets.setStatus('current')
h3cCBQoSIfAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 1, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIfAccountingBytes.setStatus('current')
h3cCBQoSAtmPvcStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2))
h3cCBQoSAtmPvcCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqQueueSize.setStatus('current')
h3cCBQoSAtmPvcCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqDiscard.setStatus('current')
h3cCBQoSAtmPvcCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqEfQueueSize.setStatus('current')
h3cCBQoSAtmPvcCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqAfQueueSize.setStatus('current')
h3cCBQoSAtmPvcCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqBeQueueSize.setStatus('current')
h3cCBQoSAtmPvcCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqBeActiveQueueNum.setStatus('current')
h3cCBQoSAtmPvcCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqBeMaxActiveQueueNum.setStatus('current')
h3cCBQoSAtmPvcCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqBeTotalQueueNum.setStatus('current')
h3cCBQoSAtmPvcCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCbqAfAllocatedQueueNum.setStatus('current')
h3cCBQoSAtmPvcClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 2), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcClassMatchRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcClassMatchRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcClassMatchPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcClassMatchPackets.setStatus('current')
h3cCBQoSAtmPvcClassMatchBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcClassMatchBytes.setStatus('current')
h3cCBQoSAtmPvcClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcClassAverageRate.setStatus('current')
h3cCBQoSAtmPvcCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 3), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCarRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCarRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcCarConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCarConformPackets.setStatus('current')
h3cCBQoSAtmPvcCarConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCarConformBytes.setStatus('current')
h3cCBQoSAtmPvcCarExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCarExceedPackets.setStatus('current')
h3cCBQoSAtmPvcCarExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcCarExceedBytes.setStatus('current')
h3cCBQoSAtmPvcGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsPassedPackets.setStatus('current')
h3cCBQoSAtmPvcGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsPassedBytes.setStatus('current')
h3cCBQoSAtmPvcGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsDiscardedPackets.setStatus('current')
h3cCBQoSAtmPvcGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsDiscardedBytes.setStatus('current')
h3cCBQoSAtmPvcGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsDelayedPackets.setStatus('current')
h3cCBQoSAtmPvcGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsDelayedBytes.setStatus('current')
h3cCBQoSAtmPvcGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcGtsQueueSize.setStatus('current')
h3cCBQoSAtmPvcRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 5), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcRemarkRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcRemarkRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcRemarkedPackets.setStatus('current')
h3cCBQoSAtmPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueMatchedPackets.setStatus('current')
h3cCBQoSAtmPvcQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueMatchedBytes.setStatus('current')
h3cCBQoSAtmPvcQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueEnqueuedPackets.setStatus('current')
h3cCBQoSAtmPvcQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueEnqueuedBytes.setStatus('current')
h3cCBQoSAtmPvcQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueDiscardedPackets.setStatus('current')
h3cCBQoSAtmPvcQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcQueueDiscardedBytes.setStatus('current')
h3cCBQoSAtmPvcWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 7), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcWredRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcWredRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcWredRandomDiscardedPackets.setStatus('current')
h3cCBQoSAtmPvcWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcWredTailDiscardedPackets.setStatus('current')
h3cCBQoSAtmPvcAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 8), )
if mibBuilder.loadTexts: h3cCBQoSAtmPvcAccountingRunInfoTable.setStatus('current')
h3cCBQoSAtmPvcAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVPI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyVCI"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSAtmPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSAtmPvcAccountingRunInfoEntry.setStatus('current')
h3cCBQoSAtmPvcAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcAccountingPackets.setStatus('current')
h3cCBQoSAtmPvcAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 2, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAtmPvcAccountingBytes.setStatus('current')
h3cCBQoSFrPvcStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3))
h3cCBQoSFrPvcCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqRunInfoTable.setStatus('current')
h3cCBQoSFrPvcCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqQueueSize.setStatus('current')
h3cCBQoSFrPvcCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqDiscard.setStatus('current')
h3cCBQoSFrPvcCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqEfQueueSize.setStatus('current')
h3cCBQoSFrPvcCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqAfQueueSize.setStatus('current')
h3cCBQoSFrPvcCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqBeQueueSize.setStatus('current')
h3cCBQoSFrPvcCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqBeActiveQueueNum.setStatus('current')
h3cCBQoSFrPvcCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqBeMaxActiveQueueNum.setStatus('current')
h3cCBQoSFrPvcCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqBeTotalQueueNum.setStatus('current')
h3cCBQoSFrPvcCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCbqAfAllocatedQueueNum.setStatus('current')
h3cCBQoSFrPvcClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 2), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcClassMatchRunInfoTable.setStatus('current')
h3cCBQoSFrPvcClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcClassMatchRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcClassMatchedPackets.setStatus('current')
h3cCBQoSFrPvcClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcClassMatchedBytes.setStatus('current')
h3cCBQoSFrPvcClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcClassAverageRate.setStatus('current')
h3cCBQoSFrPvcCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 3), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcCarRunInfoTable.setStatus('current')
h3cCBQoSFrPvcCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcCarRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcCarConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCarConformPackets.setStatus('current')
h3cCBQoSFrPvcCarConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCarConformBytes.setStatus('current')
h3cCBQoSFrPvcCarExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCarExceedPackets.setStatus('current')
h3cCBQoSFrPvcCarExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcCarExceedBytes.setStatus('current')
h3cCBQoSFrPvcGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsRunInfoTable.setStatus('current')
h3cCBQoSFrPvcGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsPassedPackets.setStatus('current')
h3cCBQoSFrPvcGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsPassedBytes.setStatus('current')
h3cCBQoSFrPvcGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsDiscardedPackets.setStatus('current')
h3cCBQoSFrPvcGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsDiscardedBytes.setStatus('current')
h3cCBQoSFrPvcGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsDelayedPackets.setStatus('current')
h3cCBQoSFrPvcGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsDelayedBytes.setStatus('current')
h3cCBQoSFrPvcGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcGtsQueueSize.setStatus('current')
h3cCBQoSFrPvcRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 5), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcRemarkRunInfoTable.setStatus('current')
h3cCBQoSFrPvcRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcRemarkRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcRemarkedPackets.setStatus('current')
h3cCBQoSFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueRunInfoTable.setStatus('current')
h3cCBQoSFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueMatchedPackets.setStatus('current')
h3cCBQoSFrPvcQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueMatchedBytes.setStatus('current')
h3cCBQoSFrPvcQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueEnqueuedPackets.setStatus('current')
h3cCBQoSFrPvcQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueEnqueuedBytes.setStatus('current')
h3cCBQoSFrPvcQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueDiscardedPackets.setStatus('current')
h3cCBQoSFrPvcQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcQueueDiscardedBytes.setStatus('current')
h3cCBQoSFrPvcWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 7), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcWredRunInfoTable.setStatus('current')
h3cCBQoSFrPvcWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcWredRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcWredRandomDiscardedPackets.setStatus('current')
h3cCBQoSFrPvcWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcWredTailDiscardedPackets.setStatus('current')
h3cCBQoSFrPvcAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 8), )
if mibBuilder.loadTexts: h3cCBQoSFrPvcAccountingRunInfoTable.setStatus('current')
h3cCBQoSFrPvcAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDlciNum"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSFrPvcApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSFrPvcAccountingRunInfoEntry.setStatus('current')
h3cCBQoSFrPvcAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcAccountingPackets.setStatus('current')
h3cCBQoSFrPvcAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 3, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSFrPvcAccountingBytes.setStatus('current')
h3cCBQoSVlanStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4))
h3cCBQoSVlanClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 1), )
if mibBuilder.loadTexts: h3cCBQoSVlanClassMatchRunInfoTable.setStatus('current')
h3cCBQoSVlanClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyVlanid"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSVlanClassMatchRunInfoEntry.setStatus('current')
h3cCBQoSVlanClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSVlanClassMatchedPackets.setStatus('current')
h3cCBQoSVlanAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 2), )
if mibBuilder.loadTexts: h3cCBQoSVlanAccountingRunInfoTable.setStatus('current')
h3cCBQoSVlanAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyVlanid"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyDirection"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSVlanAccountingRunInfoEntry.setStatus('current')
h3cCBQoSVlanAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSVlanAccountingPackets.setStatus('current')
h3cCBQoSVlanAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 4, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSVlanAccountingBytes.setStatus('current')
h3cCBQoSApplyPolicyIndexObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5))
h3cCBQoSApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1), )
if mibBuilder.loadTexts: h3cCBQoSApplyObjectTable.setStatus('current')
h3cCBQoSApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"))
if mibBuilder.loadTexts: h3cCBQoSApplyObjectEntry.setStatus('current')
h3cCBQoSApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: h3cCBQoSApplyObjectIndex.setStatus('current')
h3cCBQoSApplyObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 2), ApplyObjectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyObjectType.setStatus('current')
h3cCBQoSApplyObjectDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyObjectDirection.setStatus('current')
h3cCBQoSApplyObjectMainSite = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyObjectMainSite.setStatus('current')
h3cCBQoSApplyObjectSubChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyObjectSubChannel.setStatus('current')
h3cCBQoSApplyObjectSubClass = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyObjectSubClass.setStatus('current')
h3cCBQoSApplyObjectSubClassSec = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyObjectSubClassSec.setStatus('current')
h3cCBQoSIntApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 2), )
if mibBuilder.loadTexts: h3cCBQoSIntApplyObjectTable.setStatus('current')
h3cCBQoSIntApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIntApplyObjectIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectDirection"))
if mibBuilder.loadTexts: h3cCBQoSIntApplyObjectEntry.setStatus('current')
h3cCBQoSIntApplyObjectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: h3cCBQoSIntApplyObjectIfIndex.setStatus('current')
h3cCBQoSIntApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSIntApplyObjectIndex.setStatus('current')
h3cCBQoSVlanApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 3), )
if mibBuilder.loadTexts: h3cCBQoSVlanApplyObjectTable.setStatus('current')
h3cCBQoSVlanApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyObjectVlanID"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectDirection"))
if mibBuilder.loadTexts: h3cCBQoSVlanApplyObjectEntry.setStatus('current')
h3cCBQoSVlanApplyObjectVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: h3cCBQoSVlanApplyObjectVlanID.setStatus('current')
h3cCBQoSVlanApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSVlanApplyObjectIndex.setStatus('current')
h3cCBQoSPvcApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 4), )
if mibBuilder.loadTexts: h3cCBQoSPvcApplyObjectTable.setStatus('current')
h3cCBQoSPvcApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPvcApplyObjectIfIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPvcApplyObjectPvcID"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectDirection"))
if mibBuilder.loadTexts: h3cCBQoSPvcApplyObjectEntry.setStatus('current')
h3cCBQoSPvcApplyObjectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: h3cCBQoSPvcApplyObjectIfIndex.setStatus('current')
h3cCBQoSPvcApplyObjectPvcID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: h3cCBQoSPvcApplyObjectPvcID.setStatus('current')
h3cCBQoSPvcApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSPvcApplyObjectIndex.setStatus('current')
h3cCBQoSNestPolicyApplyObjectTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 5), )
if mibBuilder.loadTexts: h3cCBQoSNestPolicyApplyObjectTable.setStatus('current')
h3cCBQoSNestPolicyApplyObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSNestPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSNestPolicyApplyObjectEntry.setStatus('current')
h3cCBQoSNestPolicyClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: h3cCBQoSNestPolicyClassIndex.setStatus('current')
h3cCBQoSNestPolicyApplyObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 5, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSNestPolicyApplyObjectIndex.setStatus('current')
h3cCBQoSStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6))
h3cCBQoSCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1), )
if mibBuilder.loadTexts: h3cCBQoSCbqRunInfoTable.setStatus('current')
h3cCBQoSCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"))
if mibBuilder.loadTexts: h3cCBQoSCbqRunInfoEntry.setStatus('current')
h3cCBQoSCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqQueueSize.setStatus('current')
h3cCBQoSCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqDiscard.setStatus('current')
h3cCBQoSCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqEfQueueSize.setStatus('current')
h3cCBQoSCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqAfQueueSize.setStatus('current')
h3cCBQoSCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqBeQueueSize.setStatus('current')
h3cCBQoSCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqBeActiveQueueNum.setStatus('current')
h3cCBQoSCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqBeMaxActiveQueueNum.setStatus('current')
h3cCBQoSCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqBeTotalQueueNum.setStatus('current')
h3cCBQoSCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCbqAfAllocatedQueueNum.setStatus('current')
h3cCBQoSClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2), )
if mibBuilder.loadTexts: h3cCBQoSClassMatchRunInfoTable.setStatus('current')
h3cCBQoSClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSClassMatchRunInfoEntry.setStatus('current')
h3cCBQoSClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassMatchedPackets.setStatus('current')
h3cCBQoSClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassMatchedBytes.setStatus('current')
h3cCBQoSClassFwdPktpps = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassFwdPktpps.setStatus('current')
h3cCBQoSClassFwdPktbps = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassFwdPktbps.setStatus('current')
h3cCBQoSClassDropPktpps = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassDropPktpps.setStatus('current')
h3cCBQoSClassDropPktbps = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassDropPktbps.setStatus('current')
h3cCBQoSClassFlowStatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassFlowStatInterval.setStatus('current')
h3cCBQoSClassBehaviorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSClassBehaviorStatus.setStatus('current')
h3cCBQoSCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3), )
if mibBuilder.loadTexts: h3cCBQoSCarRunInfoTable.setStatus('current')
h3cCBQoSCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSCarRunInfoEntry.setStatus('current')
h3cCBQoSCarGreenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarGreenPackets.setStatus('current')
h3cCBQoSCarGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarGreenBytes.setStatus('current')
h3cCBQoSCarRedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarRedPackets.setStatus('current')
h3cCBQoSCarRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarRedBytes.setStatus('current')
h3cCBQoSCarYellowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarYellowPackets.setStatus('current')
h3cCBQoSCarYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSCarYellowBytes.setStatus('current')
h3cCBQoSGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4), )
if mibBuilder.loadTexts: h3cCBQoSGtsRunInfoTable.setStatus('current')
h3cCBQoSGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSGtsRunInfoEntry.setStatus('current')
h3cCBQoSGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsPassedPackets.setStatus('current')
h3cCBQoSGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsPassedBytes.setStatus('current')
h3cCBQoSGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsDiscardedPackets.setStatus('current')
h3cCBQoSGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsDiscardedBytes.setStatus('current')
h3cCBQoSGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsDelayedPackets.setStatus('current')
h3cCBQoSGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsDelayedBytes.setStatus('current')
h3cCBQoSGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSGtsQueueSize.setStatus('current')
h3cCBQoSRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 5), )
if mibBuilder.loadTexts: h3cCBQoSRemarkRunInfoTable.setStatus('current')
h3cCBQoSRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSRemarkRunInfoEntry.setStatus('current')
h3cCBQoSRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSRemarkedPackets.setStatus('current')
h3cCBQoSQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6), )
if mibBuilder.loadTexts: h3cCBQoSQueueRunInfoTable.setStatus('current')
h3cCBQoSQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSQueueRunInfoEntry.setStatus('current')
h3cCBQoSQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSQueueMatchedPackets.setStatus('current')
h3cCBQoSQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSQueueMatchedBytes.setStatus('current')
h3cCBQoSQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSQueueEnqueuedPackets.setStatus('current')
h3cCBQoSQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSQueueEnqueuedBytes.setStatus('current')
h3cCBQoSQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSQueueDiscardedPackets.setStatus('current')
h3cCBQoSQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSQueueDiscardedBytes.setStatus('current')
h3cCBQoSWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 7), )
if mibBuilder.loadTexts: h3cCBQoSWredRunInfoTable.setStatus('current')
h3cCBQoSWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSWredClassValue"))
if mibBuilder.loadTexts: h3cCBQoSWredRunInfoEntry.setStatus('current')
h3cCBQoSWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSWredRandomDiscardedPackets.setStatus('current')
h3cCBQoSWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSWredTailDiscardedPackets.setStatus('current')
h3cCBQoSAccountingRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 8), )
if mibBuilder.loadTexts: h3cCBQoSAccountingRunInfoTable.setStatus('current')
h3cCBQoSAccountingRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSApplyObjectIndex"), (0, "A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: h3cCBQoSAccountingRunInfoEntry.setStatus('current')
h3cCBQoSAccountingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAccountingPackets.setStatus('current')
h3cCBQoSAccountingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 5, 6, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSAccountingBytes.setStatus('current')
h3cCBQoSApplyingStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 6))
h3cCBQoSApplyingStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("busy", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cCBQoSApplyingStatus.setStatus('current')
h3cCBQoSNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 7))
h3cCBQoSNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 7, 0))
h3cCBQoSIfPolicyChanged = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 7, 0, 1)).setObjects(("A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyIfIndex"), ("A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSIfApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSIfPolicyChanged.setStatus('current')
h3cCBQoSVlanPolicyChanged = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 65, 2, 1, 7, 0, 2)).setObjects(("A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyVlanid"), ("A3COM-HUAWEI-CBQOS2-MIB", "h3cCBQoSVlanApplyPolicyDirection"))
if mibBuilder.loadTexts: h3cCBQoSVlanPolicyChanged.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-CBQOS2-MIB", h3cCBQoSNestPolicyCfgInfoEntry=h3cCBQoSNestPolicyCfgInfoEntry, h3cCBQoSNestCfgInfoTable=h3cCBQoSNestCfgInfoTable, h3cCBQoSGlobalApplyRowStatus=h3cCBQoSGlobalApplyRowStatus, h3cCBQoSAtmPvcCbqRunInfoEntry=h3cCBQoSAtmPvcCbqRunInfoEntry, h3cCBQoSAtmPvcClassMatchRunInfoEntry=h3cCBQoSAtmPvcClassMatchRunInfoEntry, h3cCBQoSIfCarRedPackets=h3cCBQoSIfCarRedPackets, h3cCBQoSAtmPvcGtsDiscardedPackets=h3cCBQoSAtmPvcGtsDiscardedPackets, h3cCBQoSFrPvcAccountingRunInfoTable=h3cCBQoSFrPvcAccountingRunInfoTable, h3cCBQoSCbqRunInfoEntry=h3cCBQoSCbqRunInfoEntry, h3cCBQoSAtmPvcRemarkRunInfoEntry=h3cCBQoSAtmPvcRemarkRunInfoEntry, h3cCBQoSFrPvcRemarkRunInfoEntry=h3cCBQoSFrPvcRemarkRunInfoEntry, h3cCBQoSFrPvcGtsRunInfoTable=h3cCBQoSFrPvcGtsRunInfoTable, h3cCBQoSSamplingNum=h3cCBQoSSamplingNum, h3cCBQoSIntApplyObjectIfIndex=h3cCBQoSIntApplyObjectIfIndex, h3cCBQoSCarCfgInfoEntry=h3cCBQoSCarCfgInfoEntry, h3cCBQoSAtmPvcCarExceedBytes=h3cCBQoSAtmPvcCarExceedBytes, h3cCBQoSClassDropPktpps=h3cCBQoSClassDropPktpps, h3cCBQoSAccounting=h3cCBQoSAccounting, h3cCBQoSPriorityMapRowStatus=h3cCBQoSPriorityMapRowStatus, h3cCBQoSPolicyName=h3cCBQoSPolicyName, h3cCBQoSAtmPvcCbqBeTotalQueueNum=h3cCBQoSAtmPvcCbqBeTotalQueueNum, h3cCBQoSNotificationsPrefix=h3cCBQoSNotificationsPrefix, h3cCBQoSFrPvcGtsDiscardedBytes=h3cCBQoSFrPvcGtsDiscardedBytes, h3cCBQoSFrPvcCbqAfAllocatedQueueNum=h3cCBQoSFrPvcCbqAfAllocatedQueueNum, h3cCBQoSFrPvcClassMatchRunInfoTable=h3cCBQoSFrPvcClassMatchRunInfoTable, h3cCBQoSIfGtsRunInfoTable=h3cCBQoSIfGtsRunInfoTable, h3cCBQoSVlanApplyPriority=h3cCBQoSVlanApplyPriority, h3cCBQoSAtmPvcAccountingRunInfoTable=h3cCBQoSAtmPvcAccountingRunInfoTable, QueueBandwidthUnit=QueueBandwidthUnit, h3cCBQoSFrPvcCarExceedPackets=h3cCBQoSFrPvcCarExceedPackets, h3cCBQoSFrPvcAccountingRunInfoEntry=h3cCBQoSFrPvcAccountingRunInfoEntry, h3cCBQoSIfGtsDiscardedPackets=h3cCBQoSIfGtsDiscardedPackets, h3cCBQoSAtmPvcCbqAfAllocatedQueueNum=h3cCBQoSAtmPvcCbqAfAllocatedQueueNum, h3cCBQoSRedirectIpv6Interface1=h3cCBQoSRedirectIpv6Interface1, h3cCBQoSFrPvcQueueRunInfoTable=h3cCBQoSFrPvcQueueRunInfoTable, h3cCBQoSClassMatchedPackets=h3cCBQoSClassMatchedPackets, h3cCBQoSAtmPvcCbqAfQueueSize=h3cCBQoSAtmPvcCbqAfQueueSize, h3cCBQoSGlobalApplyTable=h3cCBQoSGlobalApplyTable, h3cCBQoSBehaviorIndexNext=h3cCBQoSBehaviorIndexNext, h3cCBQoSApplyingStatus=h3cCBQoSApplyingStatus, h3cCBQoSQueueRowStatus=h3cCBQoSQueueRowStatus, h3cCBQoSFrPvcCbqBeQueueSize=h3cCBQoSFrPvcCbqBeQueueSize, h3cCBQoSGtsEbs=h3cCBQoSGtsEbs, h3cCBQoSClassifierCfgInfoTable=h3cCBQoSClassifierCfgInfoTable, h3cCBQoSQueueDiscardedBytes=h3cCBQoSQueueDiscardedBytes, h3cCBQoSQueueRunInfoTable=h3cCBQoSQueueRunInfoTable, h3cCBQoSPolicyConfigMode=h3cCBQoSPolicyConfigMode, h3cCBQoSNestCustomerVlanID=h3cCBQoSNestCustomerVlanID, h3cCBQoSIfGtsQueueSize=h3cCBQoSIfGtsQueueSize, h3cCBQoSIfQueueRunInfoTable=h3cCBQoSIfQueueRunInfoTable, h3cCBQoSObjects=h3cCBQoSObjects, h3cCBQoSApplyObjectSubChannel=h3cCBQoSApplyObjectSubChannel, h3cCBQoSClassifierObjects=h3cCBQoSClassifierObjects, h3cCBQoSAtmPvcApplyPolicyEntry=h3cCBQoSAtmPvcApplyPolicyEntry, h3cCBQoSAggregativeCarCfgInfoTable=h3cCBQoSAggregativeCarCfgInfoTable, h3cCBQoSBehaviorCfgInfoTable=h3cCBQoSBehaviorCfgInfoTable, h3cCBQoSIfCbqQueueSize=h3cCBQoSIfCbqQueueSize, h3cCBQoSIfGtsDelayedBytes=h3cCBQoSIfGtsDelayedBytes, h3cCBQoSFrPvcGtsDelayedBytes=h3cCBQoSFrPvcGtsDelayedBytes, h3cCBQoSIfGtsRunInfoEntry=h3cCBQoSIfGtsRunInfoEntry, h3cCBQoSFrPvcRemarkRunInfoTable=h3cCBQoSFrPvcRemarkRunInfoTable, h3cCBQoSFrPvcQueueMatchedPackets=h3cCBQoSFrPvcQueueMatchedPackets, h3cCBQoSIfApplyPolicyName=h3cCBQoSIfApplyPolicyName, h3cCBQoSMatchRuleType=h3cCBQoSMatchRuleType, h3cCBQoSClassFwdPktpps=h3cCBQoSClassFwdPktpps, h3cCBQoSNatRowStatus=h3cCBQoSNatRowStatus, h3cCBQoSPolicyClassMode=h3cCBQoSPolicyClassMode, h3cCBQoSCarRunInfoTable=h3cCBQoSCarRunInfoTable, h3cCBQoSFirewallCfgInfoTable=h3cCBQoSFirewallCfgInfoTable, CarAction=CarAction, h3cCBQoSPolicyClassPrecedence=h3cCBQoSPolicyClassPrecedence, h3cCBQoSCarRunInfoEntry=h3cCBQoSCarRunInfoEntry, DirectionType=DirectionType, h3cCBQoSApplyObjectIndex=h3cCBQoSApplyObjectIndex, h3cCBQoSVlanApplyPolicyTable=h3cCBQoSVlanApplyPolicyTable, h3cCBQoSPolicyClassCount=h3cCBQoSPolicyClassCount, h3cCBQoSFrPvcGtsDelayedPackets=h3cCBQoSFrPvcGtsDelayedPackets, h3cCBQoSPolicyClassClassifierName=h3cCBQoSPolicyClassClassifierName, h3cCBQoSCbqBeTotalQueueNum=h3cCBQoSCbqBeTotalQueueNum, h3cCBQoSCarPolicedPriorityMapType=h3cCBQoSCarPolicedPriorityMapType, h3cCBQoSRedirectIpv6Interface2=h3cCBQoSRedirectIpv6Interface2, h3cCBQoSClassMatchRunInfoEntry=h3cCBQoSClassMatchRunInfoEntry, h3cCBQoSIfCbqBeActiveQueueNum=h3cCBQoSIfCbqBeActiveQueueNum, h3cCBQoSPvcApplyObjectIndex=h3cCBQoSPvcApplyObjectIndex, h3cCBQoSGtsQueueSize=h3cCBQoSGtsQueueSize, h3cCBQoSWredClassCfgInfoEntry=h3cCBQoSWredClassCfgInfoEntry, h3cCBQoSPolicyClassCfgInfoEntry=h3cCBQoSPolicyClassCfgInfoEntry, h3cCBQoSVlanApplyObjectEntry=h3cCBQoSVlanApplyObjectEntry, h3cCBQoSVlanApplyObjectVlanID=h3cCBQoSVlanApplyObjectVlanID, h3cCBQoSAtmPvcGtsDelayedBytes=h3cCBQoSAtmPvcGtsDelayedBytes, h3cCBQoSPolicyObjects=h3cCBQoSPolicyObjects, h3cCBQoSAtmPvcWredRunInfoEntry=h3cCBQoSAtmPvcWredRunInfoEntry, h3cCBQoSRemarkValue=h3cCBQoSRemarkValue, h3cCBQoSPolicyClassCfgOrder=h3cCBQoSPolicyClassCfgOrder, h3cCBQoSCarRowStatus=h3cCBQoSCarRowStatus, h3cCBQoSQueueBandwidthUnit=h3cCBQoSQueueBandwidthUnit, h3cCBQoSPolicyClassBehaviorName=h3cCBQoSPolicyClassBehaviorName, h3cCBQoSAtmPvcCbqDiscard=h3cCBQoSAtmPvcCbqDiscard, h3cCBQoSFrPvcCbqRunInfoEntry=h3cCBQoSFrPvcCbqRunInfoEntry, h3cCBQoSClassDropPktbps=h3cCBQoSClassDropPktbps, h3cCBQoSFrPvcCarConformBytes=h3cCBQoSFrPvcCarConformBytes, h3cCBQoSFrClassApplyPolicyName=h3cCBQoSFrClassApplyPolicyName, h3cCBQoSIfQueueRunInfoEntry=h3cCBQoSIfQueueRunInfoEntry, h3cCBQoSBehaviorRowStatus=h3cCBQoSBehaviorRowStatus, h3cCBQoSFrPvcCarRunInfoEntry=h3cCBQoSFrPvcCarRunInfoEntry, h3cCBQoSPvcApplyObjectIfIndex=h3cCBQoSPvcApplyObjectIfIndex, h3cCBQoSFrPvcCarExceedBytes=h3cCBQoSFrPvcCarExceedBytes, h3cCBQoSNestPolicyApplyObjectTable=h3cCBQoSNestPolicyApplyObjectTable, h3cCBQoSPolicyRouteBackup=h3cCBQoSPolicyRouteBackup, h3cCBQoSRemarkCfgInfoEntry=h3cCBQoSRemarkCfgInfoEntry, h3cCBQoSQueueDiscardedPackets=h3cCBQoSQueueDiscardedPackets, h3cCBQoSRedirectCfgInfoEntry=h3cCBQoSRedirectCfgInfoEntry, h3cCBQoSAccountingPackets=h3cCBQoSAccountingPackets, h3cCBQoSWredType=h3cCBQoSWredType, h3cCBQoSNestRowStatus=h3cCBQoSNestRowStatus, h3cCBQoSPolicyType=h3cCBQoSPolicyType, h3cCBQoSVlanAccountingBytes=h3cCBQoSVlanAccountingBytes, MatchRuleType=MatchRuleType, h3cCBQoSCarCir=h3cCBQoSCarCir, h3cCBQoSFrPvcCarConformPackets=h3cCBQoSFrPvcCarConformPackets, h3cCBQoSIfGtsPassedBytes=h3cCBQoSIfGtsPassedBytes, h3cCBQoSQueueDropType=h3cCBQoSQueueDropType, h3cCBQoSWredWeightConst=h3cCBQoSWredWeightConst, h3cCBQoSVlanApplyObjectTable=h3cCBQoSVlanApplyObjectTable, h3cCBQoSFrPvcWredRandomDiscardedPackets=h3cCBQoSFrPvcWredRandomDiscardedPackets, h3cCBQoSCbqBeQueueSize=h3cCBQoSCbqBeQueueSize, h3cCBQoSPriorityMapImportType=h3cCBQoSPriorityMapImportType, h3cCBQoSPriorityMapExportType=h3cCBQoSPriorityMapExportType, h3cCBQoSAccountingBytes=h3cCBQoSAccountingBytes, h3cCBQoSWredClassValue=h3cCBQoSWredClassValue, h3cCBQoSAtmPvcClassAverageRate=h3cCBQoSAtmPvcClassAverageRate, h3cCBQoSFrPvcGtsPassedBytes=h3cCBQoSFrPvcGtsPassedBytes, h3cCBQoSVlanClassMatchRunInfoEntry=h3cCBQoSVlanClassMatchRunInfoEntry, h3cCBQoSQueueRunInfoEntry=h3cCBQoSQueueRunInfoEntry, h3cCBQoSPolicyClassNextIndex=h3cCBQoSPolicyClassNextIndex, h3cCBQoSIfRemarkedPackets=h3cCBQoSIfRemarkedPackets, h3cCBQoSFrPvcCbqQueueSize=h3cCBQoSFrPvcCbqQueueSize, h3cCBQoSFrPvcQueueMatchedBytes=h3cCBQoSFrPvcQueueMatchedBytes, h3cCBQoSVlanAccountingPackets=h3cCBQoSVlanAccountingPackets, h3cCBQoSPolicyClassClassifierIndex=h3cCBQoSPolicyClassClassifierIndex, h3cCBQoSNestPolicyApplyObjectEntry=h3cCBQoSNestPolicyApplyObjectEntry, h3cCBQoSGtsCir=h3cCBQoSGtsCir, h3cCBQoSIfPolicyChanged=h3cCBQoSIfPolicyChanged, h3cCBQoSMatchRuleStringValue=h3cCBQoSMatchRuleStringValue, h3cCBQoSGtsRowStatus=h3cCBQoSGtsRowStatus, h3cCBQoSRemarkType=h3cCBQoSRemarkType, h3cCBQoSFrPvcWredTailDiscardedPackets=h3cCBQoSFrPvcWredTailDiscardedPackets, h3cCBQoSFirewallCfgInfoEntry=h3cCBQoSFirewallCfgInfoEntry, h3cCBQoSVlanStaticsObjects=h3cCBQoSVlanStaticsObjects, h3cCBQoSFrPvcCbqDiscard=h3cCBQoSFrPvcCbqDiscard, h3cCBQoSIfCbqAfQueueSize=h3cCBQoSIfCbqAfQueueSize, h3cCBQoSFrPvcGtsRunInfoEntry=h3cCBQoSFrPvcGtsRunInfoEntry, h3cCBQoSApplyObjectDirection=h3cCBQoSApplyObjectDirection, h3cCBQoSPolicyCfgInfoEntry=h3cCBQoSPolicyCfgInfoEntry, h3cCBQoSRedirectCfgInfoTable=h3cCBQoSRedirectCfgInfoTable, h3cCBQoSSamplingCfgInfoTable=h3cCBQoSSamplingCfgInfoTable, h3cCBQoSCbqBeActiveQueueNum=h3cCBQoSCbqBeActiveQueueNum, h3cCBQoSIfCbqBeQueueSize=h3cCBQoSIfCbqBeQueueSize, h3cCBQoSClassifierName=h3cCBQoSClassifierName, h3cCBQoSQueueMatchedBytes=h3cCBQoSQueueMatchedBytes, h3cCBQoSRemarkRunInfoTable=h3cCBQoSRemarkRunInfoTable, h3cCBQoSClassifierIndexNext=h3cCBQoSClassifierIndexNext, h3cCBQoSWredRunInfoEntry=h3cCBQoSWredRunInfoEntry, h3cCBQoSFrClassApplyPolicyTable=h3cCBQoSFrClassApplyPolicyTable, h3cCBQoSAtmPvcGtsPassedBytes=h3cCBQoSAtmPvcGtsPassedBytes, h3cCBQoSFrPvcCbqRunInfoTable=h3cCBQoSFrPvcCbqRunInfoTable, h3cCBQoSAtmPvcGtsRunInfoTable=h3cCBQoSAtmPvcGtsRunInfoTable, h3cCBQoSNatServiceClass=h3cCBQoSNatServiceClass, h3cCBQoSPolicyRouteRowStatus=h3cCBQoSPolicyRouteRowStatus, h3cCBQoSIfCarRunInfoEntry=h3cCBQoSIfCarRunInfoEntry, h3cCBQoSFrPvcQueueEnqueuedBytes=h3cCBQoSFrPvcQueueEnqueuedBytes, h3cCBQoSCarRedPackets=h3cCBQoSCarRedPackets, h3cCBQoSBehaviorType=h3cCBQoSBehaviorType, h3cCBQoSMirrorVlanID=h3cCBQoSMirrorVlanID, h3cCBQoSBehaviorCfgInfoEntry=h3cCBQoSBehaviorCfgInfoEntry, h3cCBQoSRedirectType=h3cCBQoSRedirectType, h3cCBQoSAtmPvcCbqBeQueueSize=h3cCBQoSAtmPvcCbqBeQueueSize, h3cCBQoSNatBackupNumber=h3cCBQoSNatBackupNumber, h3cCBQoSAtmPvcCbqBeMaxActiveQueueNum=h3cCBQoSAtmPvcCbqBeMaxActiveQueueNum, h3cCBQoSAccountingRunInfoTable=h3cCBQoSAccountingRunInfoTable, h3cCBQoSCarYellowPackets=h3cCBQoSCarYellowPackets, h3cCBQoSQueueCbsRatio=h3cCBQoSQueueCbsRatio, h3cCBQoSCbqBeMaxActiveQueueNum=h3cCBQoSCbqBeMaxActiveQueueNum, h3cCBQoSAtmPvcCbqEfQueueSize=h3cCBQoSAtmPvcCbqEfQueueSize, h3cCBQoSFrPvcClassAverageRate=h3cCBQoSFrPvcClassAverageRate, h3cCBQoSAtmPvcCarConformPackets=h3cCBQoSAtmPvcCarConformPackets, h3cCBQoSCarYellowRemarkValue=h3cCBQoSCarYellowRemarkValue, h3cCBQoSQueueBandwidthValue=h3cCBQoSQueueBandwidthValue, h3cCBQoSFrPvcGtsDiscardedPackets=h3cCBQoSFrPvcGtsDiscardedPackets, h3cCBQoSVlanAccountingRunInfoEntry=h3cCBQoSVlanAccountingRunInfoEntry, h3cCBQoSCbqEfQueueSize=h3cCBQoSCbqEfQueueSize, h3cCBQoSIfCbqEfQueueSize=h3cCBQoSIfCbqEfQueueSize, h3cCBQoSRemarkCfgInfoTable=h3cCBQoSRemarkCfgInfoTable, h3cCBQoSCbqAfQueueSize=h3cCBQoSCbqAfQueueSize, h3cCBQoSMatchRuleIfNot=h3cCBQoSMatchRuleIfNot, h3cCBQoSQueueCfgInfoEntry=h3cCBQoSQueueCfgInfoEntry, h3cCBQoSFrPvcApplyPolicyEntry=h3cCBQoSFrPvcApplyPolicyEntry, h3cCBQoSFrPvcQueueEnqueuedPackets=h3cCBQoSFrPvcQueueEnqueuedPackets, h3cCBQoSIfQueueMatchedPackets=h3cCBQoSIfQueueMatchedPackets, h3cCBQoSIfAccountingBytes=h3cCBQoSIfAccountingBytes, h3cCBQoSFrClassApplyPolicyRowStatus=h3cCBQoSFrClassApplyPolicyRowStatus, h3cCBQoSClassifierIndex=h3cCBQoSClassifierIndex, WredType=WredType, h3cCBQoSFrPvcApplyPolicyDirection=h3cCBQoSFrPvcApplyPolicyDirection, h3cCBQoSIfQueueEnqueuedBytes=h3cCBQoSIfQueueEnqueuedBytes, h3cCBQoSCarYellowBytes=h3cCBQoSCarYellowBytes, h3cCBQoSApplyPolicyStaticsObjects=h3cCBQoSApplyPolicyStaticsObjects, h3cCBQoSGtsQueueLength=h3cCBQoSGtsQueueLength, h3cCBQoSIfWredRunInfoEntry=h3cCBQoSIfWredRunInfoEntry, h3cCBQoSCarYellowAction=h3cCBQoSCarYellowAction, h3cCBQoSAtmPvcQueueEnqueuedBytes=h3cCBQoSAtmPvcQueueEnqueuedBytes, h3cCBQoSApplyObjectType=h3cCBQoSApplyObjectType, h3cCBQoSAtmPvcGtsQueueSize=h3cCBQoSAtmPvcGtsQueueSize, h3cCBQoSPolicyRouteIpAddrType=h3cCBQoSPolicyRouteIpAddrType, h3cCBQoSCarAggregativeCarName=h3cCBQoSCarAggregativeCarName, h3cCBQoSIfCbqRunInfoEntry=h3cCBQoSIfCbqRunInfoEntry, h3cCBQoSMatchIpAddressType=h3cCBQoSMatchIpAddressType, h3cCBQoSAtmPvcCarConformBytes=h3cCBQoSAtmPvcCarConformBytes, h3cCBQoSWredClassCfgInfoTable=h3cCBQoSWredClassCfgInfoTable, h3cCBQoSAtmPvcClassMatchRunInfoTable=h3cCBQoSAtmPvcClassMatchRunInfoTable, h3cCBQoSRedirectIpAddressType=h3cCBQoSRedirectIpAddressType, h3cCBQoSFrPvcClassMatchedBytes=h3cCBQoSFrPvcClassMatchedBytes, h3cCBQoSWredClassDiscardProb=h3cCBQoSWredClassDiscardProb, h3cCBQoSSamplingCfgInfoEntry=h3cCBQoSSamplingCfgInfoEntry, h3cCBQoSGlobalApplyDirection=h3cCBQoSGlobalApplyDirection, h3cCBQoSStaticsObjects=h3cCBQoSStaticsObjects, h3cCBQoSCbqRunInfoTable=h3cCBQoSCbqRunInfoTable, h3cCBQoSMirrorCfgInfoTable=h3cCBQoSMirrorCfgInfoTable, h3cCBQoSAtmPvcStaticsObjects=h3cCBQoSAtmPvcStaticsObjects, h3cCBQoSIfWredTailDiscardedPackets=h3cCBQoSIfWredTailDiscardedPackets, h3cCBQoSClassifierRowStatus=h3cCBQoSClassifierRowStatus, h3cCBQoSFrPvcCbqAfQueueSize=h3cCBQoSFrPvcCbqAfQueueSize, h3cCBQoSGtsPassedBytes=h3cCBQoSGtsPassedBytes, h3cCBQoSQueueQueueNumber=h3cCBQoSQueueQueueNumber, h3cCBQoSPolicyRouteCfgInfoEntry=h3cCBQoSPolicyRouteCfgInfoEntry, h3cCBQoSFrPvcWredRunInfoTable=h3cCBQoSFrPvcWredRunInfoTable, h3cCBQoSAtmPvcQueueEnqueuedPackets=h3cCBQoSAtmPvcQueueEnqueuedPackets, h3cCBQoSApplyObjectSubClassSec=h3cCBQoSApplyObjectSubClassSec, h3cCBQoSMirrorRowStatus=h3cCBQoSMirrorRowStatus, h3cCBQoSFrPvcCbqBeMaxActiveQueueNum=h3cCBQoSFrPvcCbqBeMaxActiveQueueNum, h3cCBQoSWredRandomDiscardedPackets=h3cCBQoSWredRandomDiscardedPackets, h3cCBQos2=h3cCBQos2, h3cCBQoSFirewallAction=h3cCBQoSFirewallAction, h3cCBQoSIfCarGreenPackets=h3cCBQoSIfCarGreenPackets, h3cCBQoSPvcApplyObjectPvcID=h3cCBQoSPvcApplyObjectPvcID, h3cCBQoSCarCbs=h3cCBQoSCarCbs, h3cCBQoSClassMatchedBytes=h3cCBQoSClassMatchedBytes, h3cCBQoSIfCbqRunInfoTable=h3cCBQoSIfCbqRunInfoTable, h3cCBQoSFrPvcAccountingBytes=h3cCBQoSFrPvcAccountingBytes, h3cCBQoSFrPvcCbqBeTotalQueueNum=h3cCBQoSFrPvcCbqBeTotalQueueNum, h3cCBQoSQueueLength=h3cCBQoSQueueLength, h3cCBQoSGtsPassedPackets=h3cCBQoSGtsPassedPackets, h3cCBQoSGtsDiscardedBytes=h3cCBQoSGtsDiscardedBytes, h3cQos2=h3cQos2)
mibBuilder.exportSymbols("A3COM-HUAWEI-CBQOS2-MIB", h3cCBQoSIfClassAverageRate=h3cCBQoSIfClassAverageRate, h3cCBQoSFrPvcCarRunInfoTable=h3cCBQoSFrPvcCarRunInfoTable, h3cCBQoSAtmPvcGtsRunInfoEntry=h3cCBQoSAtmPvcGtsRunInfoEntry, h3cCBQoSAtmPvcApplyPolicyRowStatus=h3cCBQoSAtmPvcApplyPolicyRowStatus, h3cCBQoSBehaviorObjects=h3cCBQoSBehaviorObjects, h3cCBQoSMatchRuleCfgInfoEntry=h3cCBQoSMatchRuleCfgInfoEntry, h3cCBQoSClassifierType=h3cCBQoSClassifierType, h3cCBQoSQueueEnqueuedPackets=h3cCBQoSQueueEnqueuedPackets, h3cCBQoSIfClassMatchedBytes=h3cCBQoSIfClassMatchedBytes, h3cCBQoSIfClassMatchRunInfoEntry=h3cCBQoSIfClassMatchRunInfoEntry, h3cCBQoSCarAggregativeCarIndex=h3cCBQoSCarAggregativeCarIndex, h3cCBQoSIfClassMatchRunInfoTable=h3cCBQoSIfClassMatchRunInfoTable, h3cCBQoSMatchRuleRowStatus=h3cCBQoSMatchRuleRowStatus, h3cCBQoSNestPolicyClassIndex=h3cCBQoSNestPolicyClassIndex, h3cCBQoSIfCarRunInfoTable=h3cCBQoSIfCarRunInfoTable, h3cCBQoSAtmPvcRemarkRunInfoTable=h3cCBQoSAtmPvcRemarkRunInfoTable, RemarkType=RemarkType, h3cCBQoSGtsDelayedBytes=h3cCBQoSGtsDelayedBytes, h3cCBQoSIfGtsDiscardedBytes=h3cCBQoSIfGtsDiscardedBytes, h3cCBQoSAtmPvcCarRunInfoEntry=h3cCBQoSAtmPvcCarRunInfoEntry, h3cCBQoSAtmPvcCbqRunInfoTable=h3cCBQoSAtmPvcCbqRunInfoTable, h3cCBQoSNestPolicyApplyObjectIndex=h3cCBQoSNestPolicyApplyObjectIndex, h3cCBQoSNatCfgInfoTable=h3cCBQoSNatCfgInfoTable, h3cCBQoSVlanApplyPolicyEntry=h3cCBQoSVlanApplyPolicyEntry, h3cCBQoSFrClassApplyPolicyEntry=h3cCBQoSFrClassApplyPolicyEntry, h3cCBQoSAtmPvcApplyPolicyIfIndex=h3cCBQoSAtmPvcApplyPolicyIfIndex, h3cCBQoSGtsDiscardedPackets=h3cCBQoSGtsDiscardedPackets, h3cCBQoSCarCfgInfoTable=h3cCBQoSCarCfgInfoTable, h3cCBQoSIfApplyPolicyEntry=h3cCBQoSIfApplyPolicyEntry, h3cCBQoSIfCbqDiscard=h3cCBQoSIfCbqDiscard, h3cCBQoSAtmPvcWredRandomDiscardedPackets=h3cCBQoSAtmPvcWredRandomDiscardedPackets, h3cCBQoSQueueEnqueuedBytes=h3cCBQoSQueueEnqueuedBytes, h3cCBQoSCarEbs=h3cCBQoSCarEbs, h3cCBQoSFrPvcGtsPassedPackets=h3cCBQoSFrPvcGtsPassedPackets, h3cCBQoSCarGreenBytes=h3cCBQoSCarGreenBytes, h3cCBQoSPolicyIndexNext=h3cCBQoSPolicyIndexNext, h3cCBQoSIfRemarkRunInfoTable=h3cCBQoSIfRemarkRunInfoTable, h3cCBQoSMirrorIfIndex=h3cCBQoSMirrorIfIndex, h3cCBQoSIfAccountingRunInfoTable=h3cCBQoSIfAccountingRunInfoTable, h3cCBQoSFrPvcApplyPolicyDlciNum=h3cCBQoSFrPvcApplyPolicyDlciNum, h3cCBQoSIfCarYellowBytes=h3cCBQoSIfCarYellowBytes, h3cCBQoSAtmPvcGtsDiscardedBytes=h3cCBQoSAtmPvcGtsDiscardedBytes, h3cCBQoSGtsCbs=h3cCBQoSGtsCbs, h3cCBQoSFrPvcStaticsObjects=h3cCBQoSFrPvcStaticsObjects, h3cCBQoSAtmPvcRemarkedPackets=h3cCBQoSAtmPvcRemarkedPackets, h3cCBQoSPolicyCfgInfoTable=h3cCBQoSPolicyCfgInfoTable, h3cCBQoSIfRemarkRunInfoEntry=h3cCBQoSIfRemarkRunInfoEntry, h3cCBQoSIfCbqBeTotalQueueNum=h3cCBQoSIfCbqBeTotalQueueNum, h3cCBQoSAccountCfgInfoEntry=h3cCBQoSAccountCfgInfoEntry, h3cCBQoSAtmPvcApplyPolicyDirection=h3cCBQoSAtmPvcApplyPolicyDirection, h3cCBQoSPolicyClassCfgInfoTable=h3cCBQoSPolicyClassCfgInfoTable, h3cCBQoSRedirectIfIndex=h3cCBQoSRedirectIfIndex, h3cCBQoSAtmPvcClassMatchBytes=h3cCBQoSAtmPvcClassMatchBytes, h3cCBQoSAtmPvcAccountingPackets=h3cCBQoSAtmPvcAccountingPackets, h3cCBQoSAtmPvcAccountingRunInfoEntry=h3cCBQoSAtmPvcAccountingRunInfoEntry, h3cCBQoSGlobalApplyEntry=h3cCBQoSGlobalApplyEntry, h3cCBQoSIfWredRunInfoTable=h3cCBQoSIfWredRunInfoTable, h3cCBQoSAggregativeCarCfgInfoEntry=h3cCBQoSAggregativeCarCfgInfoEntry, h3cCBQoSAccountingRunInfoEntry=h3cCBQoSAccountingRunInfoEntry, h3cCBQoSAtmPvcCarRunInfoTable=h3cCBQoSAtmPvcCarRunInfoTable, h3cCBQoSVlanApplyPolicyDirection=h3cCBQoSVlanApplyPolicyDirection, h3cCBQoSFrPvcQueueRunInfoEntry=h3cCBQoSFrPvcQueueRunInfoEntry, h3cCBQoSPolicyClassRowStatus=h3cCBQoSPolicyClassRowStatus, h3cCBQoSNestServiceDot1pValue=h3cCBQoSNestServiceDot1pValue, h3cCBQoSQueueCfgInfoTable=h3cCBQoSQueueCfgInfoTable, h3cCBQoSNestPolicyCfgInfoTable=h3cCBQoSNestPolicyCfgInfoTable, h3cCBQoSPolicyIndex=h3cCBQoSPolicyIndex, h3cCBQoSIntApplyObjectEntry=h3cCBQoSIntApplyObjectEntry, h3cCBQoSAtmPvcQueueRunInfoEntry=h3cCBQoSAtmPvcQueueRunInfoEntry, h3cCBQoSRedirectIpAddress2=h3cCBQoSRedirectIpAddress2, h3cCBQoSCarGreenAction=h3cCBQoSCarGreenAction, h3cCBQoSCarPir=h3cCBQoSCarPir, h3cCBQoSIntApplyObjectTable=h3cCBQoSIntApplyObjectTable, h3cCBQoSNatCfgInfoEntry=h3cCBQoSNatCfgInfoEntry, h3cCBQoSCbqQueueSize=h3cCBQoSCbqQueueSize, h3cCBQoSIntApplyObjectIndex=h3cCBQoSIntApplyObjectIndex, h3cCBQoSVlanApplyPolicyName=h3cCBQoSVlanApplyPolicyName, h3cCBQoSWredCfgInfoTable=h3cCBQoSWredCfgInfoTable, h3cCBQoSIfApplyPolicyRowStatus=h3cCBQoSIfApplyPolicyRowStatus, h3cCBQoSFrPvcCbqBeActiveQueueNum=h3cCBQoSFrPvcCbqBeActiveQueueNum, h3cCBQoSIfApplyPolicyIfIndex=h3cCBQoSIfApplyPolicyIfIndex, h3cCBQoSVlanApplyObjectIndex=h3cCBQoSVlanApplyObjectIndex, h3cCBQoSNotifications=h3cCBQoSNotifications, h3cCBQoSAtmPvcCbqQueueSize=h3cCBQoSAtmPvcCbqQueueSize, h3cCBQoSFrPvcQueueDiscardedBytes=h3cCBQoSFrPvcQueueDiscardedBytes, h3cCBQoSAtmPvcQueueMatchedPackets=h3cCBQoSAtmPvcQueueMatchedPackets, h3cCBQoSApplyObjectSubClass=h3cCBQoSApplyObjectSubClass, h3cCBQoSVlanClassMatchRunInfoTable=h3cCBQoSVlanClassMatchRunInfoTable, h3cCBQoSAtmPvcApplyPolicyVPI=h3cCBQoSAtmPvcApplyPolicyVPI, h3cCBQoSApplyPolicyObjects=h3cCBQoSApplyPolicyObjects, h3cCBQoSClassMatchRunInfoTable=h3cCBQoSClassMatchRunInfoTable, h3cCBQoSFrPvcApplyPolicyIfIndex=h3cCBQoSFrPvcApplyPolicyIfIndex, h3cCBQoSAtmPvcGtsPassedPackets=h3cCBQoSAtmPvcGtsPassedPackets, h3cCBQoSIfQueueDiscardedBytes=h3cCBQoSIfQueueDiscardedBytes, h3cCBQoSIfGtsPassedPackets=h3cCBQoSIfGtsPassedPackets, h3cCBQoSIfGtsDelayedPackets=h3cCBQoSIfGtsDelayedPackets, h3cCBQoSFrPvcAccountingPackets=h3cCBQoSFrPvcAccountingPackets, h3cCBQoSIfApplyPolicyDirection=h3cCBQoSIfApplyPolicyDirection, h3cCBQoSIfQueueDiscardedPackets=h3cCBQoSIfQueueDiscardedPackets, h3cCBQoSCarGreenPackets=h3cCBQoSCarGreenPackets, h3cCBQoSFrPvcQueueDiscardedPackets=h3cCBQoSFrPvcQueueDiscardedPackets, h3cCBQoSQueueCbs=h3cCBQoSQueueCbs, h3cCBQoSCbqAfAllocatedQueueNum=h3cCBQoSCbqAfAllocatedQueueNum, h3cCBQoSGtsRunInfoTable=h3cCBQoSGtsRunInfoTable, h3cCBQoSMatchRuleCfgInfoTable=h3cCBQoSMatchRuleCfgInfoTable, h3cCBQoSAtmPvcCbqBeActiveQueueNum=h3cCBQoSAtmPvcCbqBeActiveQueueNum, h3cCBQoSRemarkRowStatus=h3cCBQoSRemarkRowStatus, h3cCBQoSCarRedRemarkValue=h3cCBQoSCarRedRemarkValue, h3cCBQoSIfAccountingRunInfoEntry=h3cCBQoSIfAccountingRunInfoEntry, h3cCBQoSFrPvcCbqEfQueueSize=h3cCBQoSFrPvcCbqEfQueueSize, h3cCBQoSVlanApplyPolicyVlanid=h3cCBQoSVlanApplyPolicyVlanid, h3cCBQoSFirewallRowStatus=h3cCBQoSFirewallRowStatus, h3cCBQoSRedirectIpAddress1=h3cCBQoSRedirectIpAddress1, h3cCBQoSRemarkRunInfoEntry=h3cCBQoSRemarkRunInfoEntry, h3cCBQoSGtsCfgInfoEntry=h3cCBQoSGtsCfgInfoEntry, h3cCBQoSFrPvcRemarkedPackets=h3cCBQoSFrPvcRemarkedPackets, h3cCBQoSVlanPolicyChanged=h3cCBQoSVlanPolicyChanged, h3cCBQoSGtsDelayedPackets=h3cCBQoSGtsDelayedPackets, h3cCBQoSPolicyRouteNexthop=h3cCBQoSPolicyRouteNexthop, h3cCBQoSAccountCfgInfoTable=h3cCBQoSAccountCfgInfoTable, h3cCBQoSFrClassApplyPolicyFrClassName=h3cCBQoSFrClassApplyPolicyFrClassName, h3cCBQoSIfCarYellowPackets=h3cCBQoSIfCarYellowPackets, h3cCBQoSAtmPvcQueueRunInfoTable=h3cCBQoSAtmPvcQueueRunInfoTable, h3cCBQoSClassFwdPktbps=h3cCBQoSClassFwdPktbps, h3cCBQoSVlanApplyPolicyRowStatus=h3cCBQoSVlanApplyPolicyRowStatus, h3cCBQoSPriorityMapCfgInfoTable=h3cCBQoSPriorityMapCfgInfoTable, h3cCBQoSMatchRuleIntValue1=h3cCBQoSMatchRuleIntValue1, QueueType=QueueType, h3cCBQoSWredRunInfoTable=h3cCBQoSWredRunInfoTable, h3cCBQoSFrPvcClassMatchedPackets=h3cCBQoSFrPvcClassMatchedPackets, h3cCBQoSAtmPvcAccountingBytes=h3cCBQoSAtmPvcAccountingBytes, h3cCBQoSRemarkedPackets=h3cCBQoSRemarkedPackets, h3cCBQoSIfAccountingPackets=h3cCBQoSIfAccountingPackets, h3cCBQoSAggregativeCarRowStatus=h3cCBQoSAggregativeCarRowStatus, h3cCBQoSVlanAccountingRunInfoTable=h3cCBQoSVlanAccountingRunInfoTable, h3cCBQoSPriorityMapGroupName=h3cCBQoSPriorityMapGroupName, h3cCBQoSIfCbqAfAllocatedQueueNum=h3cCBQoSIfCbqAfAllocatedQueueNum, h3cCBQoSClassifierRuleCount=h3cCBQoSClassifierRuleCount, h3cCBQoSIfApplyPolicyTable=h3cCBQoSIfApplyPolicyTable, h3cCBQoSIfCarGreenBytes=h3cCBQoSIfCarGreenBytes, h3cCBQoSIfApplyPolicyEnableDynamic=h3cCBQoSIfApplyPolicyEnableDynamic, h3cCBQoSAtmPvcApplyPolicyTable=h3cCBQoSAtmPvcApplyPolicyTable, h3cCBQoSBehaviorName=h3cCBQoSBehaviorName, h3cCBQoSPolicyRowStatus=h3cCBQoSPolicyRowStatus, h3cCBQoSAtmPvcClassMatchPackets=h3cCBQoSAtmPvcClassMatchPackets, h3cCBQoSFrPvcGtsQueueSize=h3cCBQoSFrPvcGtsQueueSize, h3cCBQoSApplyObjectTable=h3cCBQoSApplyObjectTable, h3cCBQoSWredTailDiscardedPackets=h3cCBQoSWredTailDiscardedPackets, h3cCBQoSAtmPvcQueueDiscardedPackets=h3cCBQoSAtmPvcQueueDiscardedPackets, h3cCBQoSCarRedAction=h3cCBQoSCarRedAction, h3cCBQoSWredClassLowLimit=h3cCBQoSWredClassLowLimit, h3cCBQoSAtmPvcGtsDelayedPackets=h3cCBQoSAtmPvcGtsDelayedPackets, h3cCBQoSVlanClassMatchedPackets=h3cCBQoSVlanClassMatchedPackets, h3cCBQoSPvcApplyObjectTable=h3cCBQoSPvcApplyObjectTable, h3cCBQoSCbqDiscard=h3cCBQoSCbqDiscard, h3cCBQoSFrPvcApplyPolicyName=h3cCBQoSFrPvcApplyPolicyName, h3cCBQoSFrPvcApplyPolicyTable=h3cCBQoSFrPvcApplyPolicyTable, h3cCBQoSApplyObjectMainSite=h3cCBQoSApplyObjectMainSite, h3cCBQoSNestCfgInfoEntry=h3cCBQoSNestCfgInfoEntry, h3cCBQoSSamplingRowStatus=h3cCBQoSSamplingRowStatus, h3cCBQoSGtsRunInfoEntry=h3cCBQoSGtsRunInfoEntry, h3cCBQoSGlobalApplyName=h3cCBQoSGlobalApplyName, h3cCBQoSClassifierOperator=h3cCBQoSClassifierOperator, h3cCBQoSQueueType=h3cCBQoSQueueType, h3cCBQoSPolicyClassBehaviorIndex=h3cCBQoSPolicyClassBehaviorIndex, h3cCBQoSFrPvcApplyPolicyRowStatus=h3cCBQoSFrPvcApplyPolicyRowStatus, h3cCBQoSClassFlowStatInterval=h3cCBQoSClassFlowStatInterval, h3cCBQoSFrPvcClassMatchRunInfoEntry=h3cCBQoSFrPvcClassMatchRunInfoEntry, h3cCBQoSCarGreenRemarkValue=h3cCBQoSCarGreenRemarkValue, h3cCBQoSAtmPvcQueueDiscardedBytes=h3cCBQoSAtmPvcQueueDiscardedBytes, h3cCBQoSNestServiceVlanID=h3cCBQoSNestServiceVlanID, h3cCBQoSClassifierCfgInfoEntry=h3cCBQoSClassifierCfgInfoEntry, h3cCBQoSMatchRuleIndex=h3cCBQoSMatchRuleIndex, h3cCBQoSMatchRuleIntValue2=h3cCBQoSMatchRuleIntValue2, h3cCBQoSApplyingStatusObjects=h3cCBQoSApplyingStatusObjects, h3cCBQoSGtsCfgInfoTable=h3cCBQoSGtsCfgInfoTable, h3cCBQoSMatchIpAddress=h3cCBQoSMatchIpAddress, h3cCBQoSApplyObjectEntry=h3cCBQoSApplyObjectEntry, h3cCBQoSQueueMatchedPackets=h3cCBQoSQueueMatchedPackets, h3cCBQoSAtmPvcApplyPolicyVCI=h3cCBQoSAtmPvcApplyPolicyVCI, h3cCBQoSAtmPvcCarExceedPackets=h3cCBQoSAtmPvcCarExceedPackets, h3cCBQoSCarRedBytes=h3cCBQoSCarRedBytes, h3cCBQoSIfClassMatchedPackets=h3cCBQoSIfClassMatchedPackets, h3cCBQoSIfCbqBeMaxActiveQueueNum=h3cCBQoSIfCbqBeMaxActiveQueueNum, h3cCBQoSPolicyRouteCfgInfoTable=h3cCBQoSPolicyRouteCfgInfoTable, h3cCBQoSPvcApplyObjectEntry=h3cCBQoSPvcApplyObjectEntry, h3cCBQoSIfWredRandomDiscardedPackets=h3cCBQoSIfWredRandomDiscardedPackets, h3cCBQoSApplyPolicyIndexObjects=h3cCBQoSApplyPolicyIndexObjects, h3cCBQoSPolicyClassIndex=h3cCBQoSPolicyClassIndex, h3cCBQoSCarPbs=h3cCBQoSCarPbs, h3cCBQoSPriorityMapCfgInfoEntry=h3cCBQoSPriorityMapCfgInfoEntry, h3cCBQoSMirrorCfgInfoEntry=h3cCBQoSMirrorCfgInfoEntry, h3cCBQoSFrPvcWredRunInfoEntry=h3cCBQoSFrPvcWredRunInfoEntry, h3cCBQoSClassBehaviorStatus=h3cCBQoSClassBehaviorStatus, h3cCBQoSNestCustomerDot1pValue=h3cCBQoSNestCustomerDot1pValue, PYSNMP_MODULE_ID=h3cCBQos2, h3cCBQoSAtmPvcApplyPolicyName=h3cCBQoSAtmPvcApplyPolicyName, ApplyObjectType=ApplyObjectType, h3cCBQoSAccountRowStatus=h3cCBQoSAccountRowStatus, h3cCBQosClassifierMatchRuleNextIndex=h3cCBQosClassifierMatchRuleNextIndex, h3cCBQoSAtmPvcWredRunInfoTable=h3cCBQoSAtmPvcWredRunInfoTable, h3cCBQoSIfQueueMatchedBytes=h3cCBQoSIfQueueMatchedBytes, h3cCBQoSIfQueueEnqueuedPackets=h3cCBQoSIfQueueEnqueuedPackets, h3cCBQoSClassifierLayer=h3cCBQoSClassifierLayer, h3cCBQoSFrClassApplyPolicyDirection=h3cCBQoSFrClassApplyPolicyDirection, h3cCBQoSAtmPvcWredTailDiscardedPackets=h3cCBQoSAtmPvcWredTailDiscardedPackets, h3cCBQoSIfCarRedBytes=h3cCBQoSIfCarRedBytes, h3cCBQoSWredCfgInfoEntry=h3cCBQoSWredCfgInfoEntry, h3cCBQoSNatMainNumber=h3cCBQoSNatMainNumber, h3cCBQoSPriorityMapGroupIndex=h3cCBQoSPriorityMapGroupIndex, h3cCBQoSPriorityMapAuto=h3cCBQoSPriorityMapAuto, h3cCBQoSRedirectRowStatus=h3cCBQoSRedirectRowStatus, h3cCBQoSMirrorType=h3cCBQoSMirrorType, h3cCBQoSWredClassHighLimit=h3cCBQoSWredClassHighLimit, h3cCBQoSNestPolicyName=h3cCBQoSNestPolicyName, h3cCBQoSAtmPvcQueueMatchedBytes=h3cCBQoSAtmPvcQueueMatchedBytes, h3cCBQoSIfStaticsObjects=h3cCBQoSIfStaticsObjects, h3cCBQoSBehaviorIndex=h3cCBQoSBehaviorIndex, h3cCBQoSNestPolicyRowStatus=h3cCBQoSNestPolicyRowStatus)
