#
# PySNMP MIB module CISCO-TRUSTSEC-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TRUSTSEC-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:58:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CtsAcsAuthorityIdentity, = mibBuilder.importSymbols("CISCO-TRUSTSEC-TC-MIB", "CtsAcsAuthorityIdentity")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Bits, IpAddress, Integer32, Counter64, Gauge32, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Bits", "IpAddress", "Integer32", "Counter64", "Gauge32", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "TimeTicks", "iso")
TruthValue, TextualConvention, DisplayString, StorageType, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "StorageType", "RowStatus")
ciscoTrustSecServerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 741))
ciscoTrustSecServerMIB.setRevisions(('2011-12-07 00:00', '2010-06-01 00:00',))
if mibBuilder.loadTexts: ciscoTrustSecServerMIB.setLastUpdated('201112070000Z')
if mibBuilder.loadTexts: ciscoTrustSecServerMIB.setOrganization('Cisco Systems, Inc.')
ciscoTrustSecServerMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 0))
ciscoTrustSecServerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1))
ciscoTrustSecServerMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 2))
ctsvGlobalServerConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1))
ctsvServerTestConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2))
ctsvProvisionedServerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3))
ctsvDownloadServerListObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 4))
ctsvDownloadServerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5))
ctsvNotificationControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 6))
ctsvNotificationOnlyInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 7))
ctsvAuthorizationList = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvAuthorizationList.setStatus('current')
ctsvServerDeadTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvServerDeadTime.setStatus('current')
ctsvServerLoadBalanceMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("leastOutstanding", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvServerLoadBalanceMethod.setStatus('current')
ctsvServerLoadBalanceBatchSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvServerLoadBalanceBatchSize.setStatus('current')
ctsvUseSameProvisionedServer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvUseSameProvisionedServer.setStatus('current')
ctsvAllServerTestEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvAllServerTestEnabled.setStatus('current')
ctsvAllServerTestDeadTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvAllServerTestDeadTime.setStatus('current')
ctsvAllServerTestInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 8), Unsigned32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvAllServerTestInterval.setStatus('current')
ctsvServerKeyWrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvServerKeyWrapEnabled.setStatus('current')
ctsvServerTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1), )
if mibBuilder.loadTexts: ctsvServerTestConfigTable.setStatus('current')
ctsvServerTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestAddrType"), (0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestAddr"))
if mibBuilder.loadTexts: ctsvServerTestConfigEntry.setStatus('current')
ctsvServerTestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ctsvServerTestAddrType.setStatus('current')
ctsvServerTestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsvServerTestAddr.setStatus('current')
ctsvServerTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsvServerTestEnabled.setStatus('current')
ctsvServerTestDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsvServerTestDeadTime.setStatus('current')
ctsvServerTestInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 5), Unsigned32()).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsvServerTestInterval.setStatus('current')
ctsvServerTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 6), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsvServerTestStorageType.setStatus('current')
ctsvServerTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsvServerTestRowStatus.setStatus('current')
ctsvProvisionedServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1), )
if mibBuilder.loadTexts: ctsvProvisionedServerTable.setStatus('current')
ctsvProvisionedServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerAddrType"), (0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerAddr"))
if mibBuilder.loadTexts: ctsvProvisionedServerEntry.setStatus('current')
ctsvProvisionedServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ctsvProvisionedServerAddrType.setStatus('current')
ctsvProvisionedServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsvProvisionedServerAddr.setStatus('current')
ctsvProvisionedServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 3), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerPort.setStatus('current')
ctsvProvisionedServerAuthorityId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 4), CtsAcsAuthorityIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerAuthorityId.setStatus('current')
ctsvProvisionedServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alive", 1), ("dead", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerStatus.setStatus('current')
ctsvProvisionedServerTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerTestEnabled.setStatus('current')
ctsvProvisionedServerTestInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 7), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerTestInterval.setStatus('current')
ctsvProvisionedServerTestDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerTestDeadTime.setStatus('current')
ctsvProvisionedServerKeyWrapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 3, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvProvisionedServerKeyWrapEnabled.setStatus('current')
ctsvDownloadServerListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 4, 1), )
if mibBuilder.loadTexts: ctsvDownloadServerListTable.setStatus('current')
ctsvDownloadServerListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 4, 1, 1), ).setIndexNames((1, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerListName"))
if mibBuilder.loadTexts: ctsvDownloadServerListEntry.setStatus('current')
ctsvDownloadServerListName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 4, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: ctsvDownloadServerListName.setStatus('current')
ctsvDownloadServerListGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerListGenNum.setStatus('current')
ctsvDownloadServerListServerCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerListServerCount.setStatus('current')
ctsvDownloadServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1), )
if mibBuilder.loadTexts: ctsvDownloadServerTable.setStatus('current')
ctsvDownloadServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerListName"), (0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerAddrType"), (0, "CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerAddr"))
if mibBuilder.loadTexts: ctsvDownloadServerEntry.setStatus('current')
ctsvDownloadServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: ctsvDownloadServerAddrType.setStatus('current')
ctsvDownloadServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsvDownloadServerAddr.setStatus('current')
ctsvDownloadServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 3), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerPort.setStatus('current')
ctsvDownloadServerProvisioned = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerProvisioned.setStatus('current')
ctsvDownloadServerAuthorityId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 5), CtsAcsAuthorityIdentity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerAuthorityId.setStatus('current')
ctsvDownloadServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alive", 1), ("dead", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerStatus.setStatus('current')
ctsvDownloadServerTestEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerTestEnabled.setStatus('current')
ctsvDownloadServerTestInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 8), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerTestInterval.setStatus('current')
ctsvDownloadServerTestDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerTestDeadTime.setStatus('current')
ctsvDownloadServerKeyWrapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 5, 1, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsvDownloadServerKeyWrapEnabled.setStatus('current')
ctsvNoRadiusServerNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 6, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvNoRadiusServerNotifEnable.setStatus('current')
ctsvNoProvisionSecretNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 6, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsvNoProvisionSecretNotifEnable.setStatus('current')
ctsvServerNotifMsg = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 7, 1), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsvServerNotifMsg.setStatus('current')
ctsvServerNoProvisionSecretAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 7, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsvServerNoProvisionSecretAddrType.setStatus('current')
ctsvServerNoProvisionSecretAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 741, 1, 7, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsvServerNoProvisionSecretAddr.setStatus('current')
ctsvNoRadiusServerNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 741, 0, 1)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerNotifMsg"))
if mibBuilder.loadTexts: ctsvNoRadiusServerNotif.setStatus('current')
ctsvNoProvisionSecretNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 741, 0, 2)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerNoProvisionSecretAddrType"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerNoProvisionSecretAddr"))
if mibBuilder.loadTexts: ctsvNoProvisionSecretNotif.setStatus('current')
ciscoTrustSecServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 1))
ciscoTrustSecServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2))
ciscoTrustSecServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 1, 1)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBServerConfigGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBGlobalServerTestGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBServerTestGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBProvisionedServerGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBDownloadServerListGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBDownloadServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecServerMIBCompliance = ciscoTrustSecServerMIBCompliance.setStatus('deprecated')
ciscoTrustSecServerMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 1, 2)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBServerConfigGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBGlobalServerTestGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBServerTestGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBProvisionedServerGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBDownloadServerListGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecMIBDownloadServerGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecServerMIBKeyWrapGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecServerMIBNotifsCtrlGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecServerMIBNotifsOnlyInfoGroup"), ("CISCO-TRUSTSEC-SERVER-MIB", "ciscoTrustSecServerMIBNotifsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecServerMIBCompliance2 = ciscoTrustSecServerMIBCompliance2.setStatus('current')
ciscoTrustSecMIBServerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 1)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvAuthorizationList"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerDeadTime"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerLoadBalanceMethod"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerLoadBalanceBatchSize"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvUseSameProvisionedServer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBServerConfigGroup = ciscoTrustSecMIBServerConfigGroup.setStatus('current')
ciscoTrustSecMIBGlobalServerTestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 2)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvAllServerTestEnabled"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvAllServerTestDeadTime"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvAllServerTestInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBGlobalServerTestGroup = ciscoTrustSecMIBGlobalServerTestGroup.setStatus('current')
ciscoTrustSecMIBServerTestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 3)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestEnabled"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestDeadTime"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestInterval"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestStorageType"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerTestRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBServerTestGroup = ciscoTrustSecMIBServerTestGroup.setStatus('current')
ciscoTrustSecMIBProvisionedServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 4)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerPort"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerAuthorityId"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerStatus"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerTestEnabled"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerTestInterval"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerTestDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBProvisionedServerGroup = ciscoTrustSecMIBProvisionedServerGroup.setStatus('current')
ciscoTrustSecMIBDownloadServerListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 5)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerListGenNum"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerListServerCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBDownloadServerListGroup = ciscoTrustSecMIBDownloadServerListGroup.setStatus('current')
ciscoTrustSecMIBDownloadServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 6)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerPort"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerProvisioned"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerAuthorityId"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerStatus"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerTestEnabled"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerTestInterval"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerTestDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecMIBDownloadServerGroup = ciscoTrustSecMIBDownloadServerGroup.setStatus('current')
ciscoTrustSecServerMIBKeyWrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 7)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerKeyWrapEnabled"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvProvisionedServerKeyWrapEnabled"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvDownloadServerKeyWrapEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecServerMIBKeyWrapGroup = ciscoTrustSecServerMIBKeyWrapGroup.setStatus('current')
ciscoTrustSecServerMIBNotifsCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 8)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvNoRadiusServerNotifEnable"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvNoProvisionSecretNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecServerMIBNotifsCtrlGroup = ciscoTrustSecServerMIBNotifsCtrlGroup.setStatus('current')
ciscoTrustSecServerMIBNotifsOnlyInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 9)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerNotifMsg"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerNoProvisionSecretAddrType"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvServerNoProvisionSecretAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecServerMIBNotifsOnlyInfoGroup = ciscoTrustSecServerMIBNotifsOnlyInfoGroup.setStatus('current')
ciscoTrustSecServerMIBNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 741, 2, 2, 10)).setObjects(("CISCO-TRUSTSEC-SERVER-MIB", "ctsvNoRadiusServerNotif"), ("CISCO-TRUSTSEC-SERVER-MIB", "ctsvNoProvisionSecretNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecServerMIBNotifsGroup = ciscoTrustSecServerMIBNotifsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-TRUSTSEC-SERVER-MIB", ciscoTrustSecMIBGlobalServerTestGroup=ciscoTrustSecMIBGlobalServerTestGroup, ctsvDownloadServerPort=ctsvDownloadServerPort, ctsvNotificationOnlyInfoObjects=ctsvNotificationOnlyInfoObjects, ctsvServerTestEnabled=ctsvServerTestEnabled, ctsvDownloadServerAddrType=ctsvDownloadServerAddrType, PYSNMP_MODULE_ID=ciscoTrustSecServerMIB, ciscoTrustSecServerMIBNotifsGroup=ciscoTrustSecServerMIBNotifsGroup, ctsvAuthorizationList=ctsvAuthorizationList, ctsvDownloadServerKeyWrapEnabled=ctsvDownloadServerKeyWrapEnabled, ctsvAllServerTestDeadTime=ctsvAllServerTestDeadTime, ctsvServerTestAddr=ctsvServerTestAddr, ctsvDownloadServerListServerCount=ctsvDownloadServerListServerCount, ciscoTrustSecServerMIBNotifsCtrlGroup=ciscoTrustSecServerMIBNotifsCtrlGroup, ctsvNoRadiusServerNotifEnable=ctsvNoRadiusServerNotifEnable, ciscoTrustSecMIBDownloadServerListGroup=ciscoTrustSecMIBDownloadServerListGroup, ciscoTrustSecServerMIBGroups=ciscoTrustSecServerMIBGroups, ctsvProvisionedServerAddrType=ctsvProvisionedServerAddrType, ctsvServerTestInterval=ctsvServerTestInterval, ctsvServerNotifMsg=ctsvServerNotifMsg, ctsvDownloadServerEntry=ctsvDownloadServerEntry, ciscoTrustSecServerMIBNotifs=ciscoTrustSecServerMIBNotifs, ctsvServerTestConfigEntry=ctsvServerTestConfigEntry, ctsvDownloadServerAddr=ctsvDownloadServerAddr, ctsvProvisionedServerStatus=ctsvProvisionedServerStatus, ctsvServerKeyWrapEnabled=ctsvServerKeyWrapEnabled, ctsvServerNoProvisionSecretAddr=ctsvServerNoProvisionSecretAddr, ctsvDownloadServerListTable=ctsvDownloadServerListTable, ctsvServerDeadTime=ctsvServerDeadTime, ctsvNotificationControlObjects=ctsvNotificationControlObjects, ctsvGlobalServerConfigObjects=ctsvGlobalServerConfigObjects, ctsvProvisionedServerTable=ctsvProvisionedServerTable, ciscoTrustSecServerMIB=ciscoTrustSecServerMIB, ctsvNoProvisionSecretNotifEnable=ctsvNoProvisionSecretNotifEnable, ctsvDownloadServerProvisioned=ctsvDownloadServerProvisioned, ciscoTrustSecServerMIBNotifsOnlyInfoGroup=ciscoTrustSecServerMIBNotifsOnlyInfoGroup, ctsvDownloadServerAuthorityId=ctsvDownloadServerAuthorityId, ctsvAllServerTestInterval=ctsvAllServerTestInterval, ctsvProvisionedServerTestDeadTime=ctsvProvisionedServerTestDeadTime, ciscoTrustSecMIBDownloadServerGroup=ciscoTrustSecMIBDownloadServerGroup, ctsvDownloadServerTestEnabled=ctsvDownloadServerTestEnabled, ctsvProvisionedServerTestEnabled=ctsvProvisionedServerTestEnabled, ctsvDownloadServerTestInterval=ctsvDownloadServerTestInterval, ctsvServerTestRowStatus=ctsvServerTestRowStatus, ctsvServerLoadBalanceBatchSize=ctsvServerLoadBalanceBatchSize, ctsvProvisionedServerEntry=ctsvProvisionedServerEntry, ctsvDownloadServerListObjects=ctsvDownloadServerListObjects, ctsvServerNoProvisionSecretAddrType=ctsvServerNoProvisionSecretAddrType, ctsvAllServerTestEnabled=ctsvAllServerTestEnabled, ctsvNoProvisionSecretNotif=ctsvNoProvisionSecretNotif, ctsvProvisionedServerObjects=ctsvProvisionedServerObjects, ciscoTrustSecMIBServerTestGroup=ciscoTrustSecMIBServerTestGroup, ctsvDownloadServerListGenNum=ctsvDownloadServerListGenNum, ctsvDownloadServerListEntry=ctsvDownloadServerListEntry, ctsvServerTestStorageType=ctsvServerTestStorageType, ctsvDownloadServerStatus=ctsvDownloadServerStatus, ctsvServerTestDeadTime=ctsvServerTestDeadTime, ctsvServerTestConfigObjects=ctsvServerTestConfigObjects, ctsvProvisionedServerAddr=ctsvProvisionedServerAddr, ciscoTrustSecServerMIBKeyWrapGroup=ciscoTrustSecServerMIBKeyWrapGroup, ciscoTrustSecServerMIBObjects=ciscoTrustSecServerMIBObjects, ctsvServerTestConfigTable=ctsvServerTestConfigTable, ciscoTrustSecServerMIBCompliances=ciscoTrustSecServerMIBCompliances, ctsvServerTestAddrType=ctsvServerTestAddrType, ctsvProvisionedServerTestInterval=ctsvProvisionedServerTestInterval, ctsvDownloadServerListName=ctsvDownloadServerListName, ciscoTrustSecMIBProvisionedServerGroup=ciscoTrustSecMIBProvisionedServerGroup, ctsvProvisionedServerAuthorityId=ctsvProvisionedServerAuthorityId, ctsvUseSameProvisionedServer=ctsvUseSameProvisionedServer, ctsvServerLoadBalanceMethod=ctsvServerLoadBalanceMethod, ciscoTrustSecServerMIBCompliance=ciscoTrustSecServerMIBCompliance, ctsvDownloadServerObjects=ctsvDownloadServerObjects, ctsvDownloadServerTable=ctsvDownloadServerTable, ctsvDownloadServerTestDeadTime=ctsvDownloadServerTestDeadTime, ciscoTrustSecMIBServerConfigGroup=ciscoTrustSecMIBServerConfigGroup, ctsvProvisionedServerPort=ctsvProvisionedServerPort, ciscoTrustSecServerMIBConform=ciscoTrustSecServerMIBConform, ctsvNoRadiusServerNotif=ctsvNoRadiusServerNotif, ciscoTrustSecServerMIBCompliance2=ciscoTrustSecServerMIBCompliance2, ctsvProvisionedServerKeyWrapEnabled=ctsvProvisionedServerKeyWrapEnabled)
