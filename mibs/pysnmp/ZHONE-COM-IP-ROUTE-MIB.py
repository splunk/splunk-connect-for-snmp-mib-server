#
# PySNMP MIB module ZHONE-COM-IP-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-COM-IP-ROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:40:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Bits, Integer32, Gauge32, ObjectIdentity, Counter64, NotificationType, ModuleIdentity, MibIdentifier, iso, Unsigned32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "Integer32", "Gauge32", "ObjectIdentity", "Counter64", "NotificationType", "ModuleIdentity", "MibIdentifier", "iso", "Unsigned32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rdEntry, rdIndex = mibBuilder.importSymbols("ZHONE-COM-IP-RD-MIB", "rdEntry", "rdIndex")
zhoneIp, zhoneModules = mibBuilder.importSymbols("Zhone", "zhoneIp", "zhoneModules")
comIpRoute = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 57))
comIpRoute.setRevisions(('2000-09-11 16:33',))
if mibBuilder.loadTexts: comIpRoute.setLastUpdated('200009111700Z')
if mibBuilder.loadTexts: comIpRoute.setOrganization('Zhone Technologies, Inc.')
route = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7))
if mibBuilder.loadTexts: route.setStatus('current')
zhoneRouteInfoTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 1), )
if mibBuilder.loadTexts: zhoneRouteInfoTable.setStatus('current')
zhoneRouteInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 1, 1), )
rdEntry.registerAugmentions(("ZHONE-COM-IP-ROUTE-MIB", "zhoneRouteInfoEntry"))
zhoneRouteInfoEntry.setIndexNames(*rdEntry.getIndexNames())
if mibBuilder.loadTexts: zhoneRouteInfoEntry.setStatus('current')
zhIpCidrRouteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpCidrRouteNumber.setStatus('current')
zhoneIpCidrRouteTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3), )
if mibBuilder.loadTexts: zhoneIpCidrRouteTable.setStatus('current')
zhoneIpCidrRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1), ).setIndexNames((0, "ZHONE-COM-IP-RD-MIB", "rdIndex"), (0, "ZHONE-COM-IP-ROUTE-MIB", "zhIpCidrRouteDest"), (0, "ZHONE-COM-IP-ROUTE-MIB", "zhIpCidrRouteMask"), (0, "ZHONE-COM-IP-ROUTE-MIB", "zhIpCidrRouteNextHop"))
if mibBuilder.loadTexts: zhoneIpCidrRouteEntry.setStatus('current')
zhIpCidrRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: zhIpCidrRouteDest.setStatus('current')
zhIpCidrRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: zhIpCidrRouteMask.setStatus('current')
zhIpCidrRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 3), IpAddress())
if mibBuilder.loadTexts: zhIpCidrRouteNextHop.setStatus('current')
zhIpCidrRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteIfIndex.setStatus('current')
zhIpCidrRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteType.setStatus('current')
zhIpCidrRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 9, 13, 14, 15))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("rip", 8), ("isIs", 9), ("ospf", 13), ("bgp", 14), ("idpr", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpCidrRouteProto.setStatus('current')
zhIpCidrRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 7), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zhIpCidrRouteAge.setStatus('current')
zhIpCidrRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 8), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteInfo.setStatus('current')
zhIpCidrRouteNextHopAS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteNextHopAS.setStatus('current')
zhIpCidrRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 10), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteMetric1.setStatus('current')
zhIpCidrRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 11), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteMetric2.setStatus('current')
zhIpCidrRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 12), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteMetric3.setStatus('current')
zhIpCidrRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 13), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteMetric4.setStatus('current')
zhIpCidrRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 7, 3, 1, 14), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhIpCidrRouteMetric5.setStatus('current')
mibBuilder.exportSymbols("ZHONE-COM-IP-ROUTE-MIB", zhIpCidrRouteProto=zhIpCidrRouteProto, zhIpCidrRouteMask=zhIpCidrRouteMask, zhoneIpCidrRouteTable=zhoneIpCidrRouteTable, zhIpCidrRouteAge=zhIpCidrRouteAge, zhIpCidrRouteMetric2=zhIpCidrRouteMetric2, zhIpCidrRouteType=zhIpCidrRouteType, comIpRoute=comIpRoute, zhIpCidrRouteInfo=zhIpCidrRouteInfo, zhIpCidrRouteNextHop=zhIpCidrRouteNextHop, zhIpCidrRouteMetric5=zhIpCidrRouteMetric5, zhIpCidrRouteDest=zhIpCidrRouteDest, zhIpCidrRouteMetric3=zhIpCidrRouteMetric3, zhIpCidrRouteNumber=zhIpCidrRouteNumber, zhIpCidrRouteMetric1=zhIpCidrRouteMetric1, zhoneIpCidrRouteEntry=zhoneIpCidrRouteEntry, zhIpCidrRouteMetric4=zhIpCidrRouteMetric4, PYSNMP_MODULE_ID=comIpRoute, zhIpCidrRouteNextHopAS=zhIpCidrRouteNextHopAS, zhoneRouteInfoTable=zhoneRouteInfoTable, route=route, zhIpCidrRouteIfIndex=zhIpCidrRouteIfIndex, zhoneRouteInfoEntry=zhoneRouteInfoEntry)
