#
# PySNMP MIB module ELTEX-BRIDGE-ERPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-BRIDGE-ERPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:45:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
eltexBridgeExtMIBObjects, = mibBuilder.importSymbols("ELTEX-BRIDGE-EXT-MIB", "eltexBridgeExtMIBObjects")
VlanIdOrNone, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, Bits, Integer32, Counter64, NotificationType, Gauge32, ObjectIdentity, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "Bits", "Integer32", "Counter64", "NotificationType", "Gauge32", "ObjectIdentity", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "MacAddress", "RowStatus")
eltexErpsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1))
if mibBuilder.loadTexts: eltexErpsMIB.setLastUpdated('1304220000Z')
if mibBuilder.loadTexts: eltexErpsMIB.setOrganization('Eltex Ltd.')
eltexErpsCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1))
eltexErpsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 2))
eltexErpsMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3))
eltexErpsNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4))
class EltexErpsEnabledState(TextualConvention, Integer32):
    reference = 'ITU-T G.8032'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class EltexErpsMgmtRAPSPortState(TextualConvention, Integer32):
    reference = 'ITU-T G.8032'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("fowarding", 1), ("blocking", 2), ("signal-fail", 3), ("manual-switch", 4), ("forced-switch", 5))

class EltexErpsMgmtRAPSPortId(TextualConvention, Integer32):
    reference = 'ITU-T G.8032'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("west", 2), ("east", 3))

eltexErpsAdminState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1, 1), EltexErpsEnabledState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsAdminState.setStatus('current')
eltexErpsLogState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1, 2), EltexErpsEnabledState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsLogState.setStatus('current')
eltexErpsTrapState = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1, 3), EltexErpsEnabledState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsTrapState.setStatus('current')
eltexErpsPendingAction = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("copyPendingActive", 1), ("copyActivePending", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsPendingAction.setStatus('current')
eltexErpsPendingActionVlan = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsPendingActionVlan.setStatus('current')
eltexErpsGetConfigId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("pending", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsGetConfigId.setStatus('current')
eltexErpsMgmtRAPSVlanTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1), )
if mibBuilder.loadTexts: eltexErpsMgmtRAPSVlanTable.setStatus('current')
eltexErpsMgmtRAPSVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1), ).setIndexNames((0, "ELTEX-BRIDGE-ERPS-MIB", "eltexErpsMgmtRAPSVlanId"))
if mibBuilder.loadTexts: eltexErpsMgmtRAPSVlanEntry.setStatus('current')
eltexErpsMgmtRAPSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSVlanId.setStatus('current')
eltexErpsMgmtRAPSWestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSWestPort.setStatus('current')
eltexErpsMgmtRAPSWestPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 3), EltexErpsMgmtRAPSPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSWestPortState.setStatus('current')
eltexErpsMgmtRAPSEastPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSEastPort.setStatus('current')
eltexErpsMgmtRAPSEastPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 5), EltexErpsMgmtRAPSPortState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSEastPortState.setStatus('current')
eltexErpsMgmtRAPSRPLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 6), EltexErpsMgmtRAPSPortId().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRPLPort.setStatus('current')
eltexErpsMgmtRAPSRPLOwnerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 7), EltexErpsEnabledState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRPLOwnerAdminState.setStatus('current')
eltexErpsMgmtRAPSRingMEL = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRingMEL.setStatus('current')
eltexErpsMgmtRAPSHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSHoldOffTime.setStatus('current')
eltexErpsMgmtRAPSGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSGuardTime.setStatus('current')
eltexErpsMgmtRAPSWTRTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSWTRTime.setStatus('current')
eltexErpsMgmtRAPSRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("init", 1), ("idle", 2), ("protection", 3), ("manual-switch", 4), ("forced-switch", 5), ("pending", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRingState.setStatus('current')
eltexErpsMgmtRAPSRingAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 13), EltexErpsEnabledState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRingAdminState.setStatus('current')
eltexErpsMgmtRAPSRPLOwnerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRPLOwnerOperStatus.setStatus('current')
eltexErpsMgmtRAPSProtectionVlanRangeList1to1024 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSProtectionVlanRangeList1to1024.setStatus('current')
eltexErpsMgmtRAPSProtectionVlanRangeList1025to2048 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSProtectionVlanRangeList1025to2048.setStatus('current')
eltexErpsMgmtRAPSProtectionVlanRangeList2049to3072 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSProtectionVlanRangeList2049to3072.setStatus('current')
eltexErpsMgmtRAPSProtectionVlanRangeList3073to4094 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSProtectionVlanRangeList3073to4094.setStatus('current')
eltexErpsMgmtRAPSRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 19), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRevertive.setStatus('current')
eltexErpsMgmtRAPSProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSProtocolVersion.setStatus('current')
eltexErpsMgmtRAPSPortForcedSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 21), EltexErpsMgmtRAPSPortId().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSPortForcedSwitch.setStatus('current')
eltexErpsMgmtRAPSPortManualSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 22), EltexErpsMgmtRAPSPortId().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSPortManualSwitch.setStatus('current')
eltexErpsMgmtRAPSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 1, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltexErpsMgmtRAPSRowStatus.setStatus('current')
eltexErpsMgmtSubRingCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 2), )
if mibBuilder.loadTexts: eltexErpsMgmtSubRingCtrlTable.setStatus('current')
eltexErpsMgmtSubRingCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 2, 1), ).setIndexNames((0, "ELTEX-BRIDGE-ERPS-MIB", "eltexErpsMgmtSubRingCtrlRAPSVlanId"), (0, "ELTEX-BRIDGE-ERPS-MIB", "eltexErpsMgmtSubRingCtrlSubRingRAPSVlanId"))
if mibBuilder.loadTexts: eltexErpsMgmtSubRingCtrlEntry.setStatus('current')
eltexErpsMgmtSubRingCtrlRAPSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: eltexErpsMgmtSubRingCtrlRAPSVlanId.setStatus('current')
eltexErpsMgmtSubRingCtrlSubRingRAPSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: eltexErpsMgmtSubRingCtrlSubRingRAPSVlanId.setStatus('current')
eltexErpsMgmtSubRingCtrlTCPropagationState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 2, 1, 3), EltexErpsEnabledState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltexErpsMgmtSubRingCtrlTCPropagationState.setStatus('current')
eltexErpsMgmtSubRingCtrlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltexErpsMgmtSubRingCtrlRowStatus.setStatus('current')
eltexErpsNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4, 0))
eltexErpsSFDetectedTrap = NotificationType((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4, 0, 1)).setObjects(("ELTEX-BRIDGE-ERPS-MIB", "eltexErpsNodeId"))
if mibBuilder.loadTexts: eltexErpsSFDetectedTrap.setStatus('current')
eltexErpsSFClearedTrap = NotificationType((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4, 0, 2)).setObjects(("ELTEX-BRIDGE-ERPS-MIB", "eltexErpsNodeId"))
if mibBuilder.loadTexts: eltexErpsSFClearedTrap.setStatus('current')
eltexErpsRPLOwnerConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4, 0, 3)).setObjects(("ELTEX-BRIDGE-ERPS-MIB", "eltexErpsNodeId"))
if mibBuilder.loadTexts: eltexErpsRPLOwnerConflictTrap.setStatus('current')
eltexErpsNotificationBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4, 2))
eltexErpsNodeId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 35, 1, 1, 4, 2, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: eltexErpsNodeId.setStatus('current')
mibBuilder.exportSymbols("ELTEX-BRIDGE-ERPS-MIB", eltexErpsPendingAction=eltexErpsPendingAction, eltexErpsRPLOwnerConflictTrap=eltexErpsRPLOwnerConflictTrap, eltexErpsMgmtRAPSProtocolVersion=eltexErpsMgmtRAPSProtocolVersion, eltexErpsNodeId=eltexErpsNodeId, eltexErpsMgmtRAPSVlanId=eltexErpsMgmtRAPSVlanId, eltexErpsMgmtRAPSRingMEL=eltexErpsMgmtRAPSRingMEL, eltexErpsMgmtRAPSWestPort=eltexErpsMgmtRAPSWestPort, eltexErpsMgmtRAPSProtectionVlanRangeList1to1024=eltexErpsMgmtRAPSProtectionVlanRangeList1to1024, eltexErpsCtrl=eltexErpsCtrl, eltexErpsMgmtRAPSEastPortState=eltexErpsMgmtRAPSEastPortState, eltexErpsMgmtRAPSRingAdminState=eltexErpsMgmtRAPSRingAdminState, eltexErpsMIB=eltexErpsMIB, eltexErpsMgmtSubRingCtrlEntry=eltexErpsMgmtSubRingCtrlEntry, eltexErpsMgmtRAPSVlanTable=eltexErpsMgmtRAPSVlanTable, eltexErpsMgmtRAPSVlanEntry=eltexErpsMgmtRAPSVlanEntry, eltexErpsMgmtRAPSWestPortState=eltexErpsMgmtRAPSWestPortState, eltexErpsTrapState=eltexErpsTrapState, eltexErpsMgmtRAPSProtectionVlanRangeList2049to3072=eltexErpsMgmtRAPSProtectionVlanRangeList2049to3072, EltexErpsMgmtRAPSPortId=EltexErpsMgmtRAPSPortId, eltexErpsMgmtRAPSPortForcedSwitch=eltexErpsMgmtRAPSPortForcedSwitch, PYSNMP_MODULE_ID=eltexErpsMIB, eltexErpsNotificationBindings=eltexErpsNotificationBindings, eltexErpsMgmtRAPSRevertive=eltexErpsMgmtRAPSRevertive, eltexErpsMgmtSubRingCtrlTable=eltexErpsMgmtSubRingCtrlTable, eltexErpsSFClearedTrap=eltexErpsSFClearedTrap, eltexErpsMgmtRAPSRingState=eltexErpsMgmtRAPSRingState, eltexErpsMgmtRAPSProtectionVlanRangeList1025to2048=eltexErpsMgmtRAPSProtectionVlanRangeList1025to2048, eltexErpsMgmtRAPSPortManualSwitch=eltexErpsMgmtRAPSPortManualSwitch, eltexErpsMgmtRAPSEastPort=eltexErpsMgmtRAPSEastPort, eltexErpsMgmtRAPSWTRTime=eltexErpsMgmtRAPSWTRTime, eltexErpsGetConfigId=eltexErpsGetConfigId, eltexErpsMgmt=eltexErpsMgmt, eltexErpsMgmtRAPSProtectionVlanRangeList3073to4094=eltexErpsMgmtRAPSProtectionVlanRangeList3073to4094, eltexErpsMgmtRAPSRPLOwnerOperStatus=eltexErpsMgmtRAPSRPLOwnerOperStatus, eltexErpsLogState=eltexErpsLogState, eltexErpsPendingActionVlan=eltexErpsPendingActionVlan, eltexErpsMgmtRAPSRowStatus=eltexErpsMgmtRAPSRowStatus, eltexErpsSFDetectedTrap=eltexErpsSFDetectedTrap, EltexErpsEnabledState=EltexErpsEnabledState, eltexErpsAdminState=eltexErpsAdminState, eltexErpsInfo=eltexErpsInfo, eltexErpsMgmtSubRingCtrlTCPropagationState=eltexErpsMgmtSubRingCtrlTCPropagationState, eltexErpsNotify=eltexErpsNotify, eltexErpsMgmtRAPSHoldOffTime=eltexErpsMgmtRAPSHoldOffTime, eltexErpsMgmtRAPSRPLPort=eltexErpsMgmtRAPSRPLPort, EltexErpsMgmtRAPSPortState=EltexErpsMgmtRAPSPortState, eltexErpsMgmtSubRingCtrlRAPSVlanId=eltexErpsMgmtSubRingCtrlRAPSVlanId, eltexErpsMgmtSubRingCtrlSubRingRAPSVlanId=eltexErpsMgmtSubRingCtrlSubRingRAPSVlanId, eltexErpsMgmtSubRingCtrlRowStatus=eltexErpsMgmtSubRingCtrlRowStatus, eltexErpsMgmtRAPSGuardTime=eltexErpsMgmtRAPSGuardTime, eltexErpsNotifyPrefix=eltexErpsNotifyPrefix, eltexErpsMgmtRAPSRPLOwnerAdminState=eltexErpsMgmtRAPSRPLOwnerAdminState)
