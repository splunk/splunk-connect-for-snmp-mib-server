#
# PySNMP MIB module SDSL-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SDSL-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
nncExtensions, = mibBuilder.importSymbols("NNCGNI0001-SMI", "nncExtensions")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, iso, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, ObjectIdentity, ModuleIdentity, IpAddress, Gauge32, NotificationType, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "ObjectIdentity", "ModuleIdentity", "IpAddress", "Gauge32", "NotificationType", "Integer32", "Unsigned32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
nncSdslStatistics = ModuleIdentity((1, 3, 6, 1, 4, 1, 123, 3, 64))
if mibBuilder.loadTexts: nncSdslStatistics.setLastUpdated('9809301200Z')
if mibBuilder.loadTexts: nncSdslStatistics.setOrganization('Newbridge Networks Corporation')
nncSdslStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 123, 3, 64, 1))
nncSdslLineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 1), )
if mibBuilder.loadTexts: nncSdslLineStatusTable.setStatus('current')
nncSdslLineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncSdslLineStatusEntry.setStatus('current')
nncSdslLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslLineStatus.setStatus('current')
nncSdslNearEndRawTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2), )
if mibBuilder.loadTexts: nncSdslNearEndRawTable.setStatus('current')
nncSdslNearEndRawEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncSdslNearEndRawEntry.setStatus('current')
nncSdslNearEndRawLOS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndRawLOS.setStatus('current')
nncSdslNearEndRawLowNM = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndRawLowNM.setStatus('current')
nncSdslNearEndRawLPR = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndRawLPR.setStatus('current')
nncSdslNearEndRawLOCD = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndRawLOCD.setStatus('current')
nncSdslNearEndRawCRCError = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndRawCRCError.setStatus('current')
nncSdslNearEndCurr15MinTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3), )
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinTable.setStatus('current')
nncSdslNearEndCurr15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinEntry.setStatus('current')
nncSdslNearEndCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinTimeElapsed.setStatus('current')
nncSdslNearEndCurr15MinLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinLOSS.setStatus('current')
nncSdslNearEndCurr15MinLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinLOSWS.setStatus('current')
nncSdslNearEndCurr15MinLowNMS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinLowNMS.setStatus('current')
nncSdslNearEndCurr15MinLPRS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinLPRS.setStatus('current')
nncSdslNearEndCurr15MinErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr15MinErrS.setStatus('current')
nncSdslNearEndCurr1DayTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4), )
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayTable.setStatus('current')
nncSdslNearEndCurr1DayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayEntry.setStatus('current')
nncSdslNearEndCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1, 1), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayTimeElapsed.setStatus('current')
nncSdslNearEndCurr1DayLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayLOSS.setStatus('current')
nncSdslNearEndCurr1DayLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayLOSWS.setStatus('current')
nncSdslNearEndCurr1DayLowNMS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayLowNMS.setStatus('current')
nncSdslNearEndCurr1DayLPRS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayLPRS.setStatus('current')
nncSdslNearEndCurr1DayErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndCurr1DayErrS.setStatus('current')
nncSdslNearEndPrev1DayTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5), )
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayTable.setStatus('current')
nncSdslNearEndPrev1DayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayEntry.setStatus('current')
nncSdslNearEndPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 1), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayMoniSecs.setStatus('current')
nncSdslNearEndPrev1DayLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayLOSS.setStatus('current')
nncSdslNearEndPrev1DayLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayLOSWS.setStatus('current')
nncSdslNearEndPrev1DayLowNMS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayLowNMS.setStatus('current')
nncSdslNearEndPrev1DayLPRS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayLPRS.setStatus('current')
nncSdslNearEndPrev1DayErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayErrS.setStatus('current')
nncSdslNearEndPrev1DayValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndPrev1DayValidData.setStatus('current')
nncSdslFarEndAllTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6), )
if mibBuilder.loadTexts: nncSdslFarEndAllTable.setStatus('current')
nncSdslFarEndAllEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: nncSdslFarEndAllEntry.setStatus('current')
nncSdslFarEndRawLOCD = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndRawLOCD.setStatus('current')
nncSdslFarEndCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndCurr15MinTimeElapsed.setStatus('current')
nncSdslFarEndCurr15MinErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndCurr15MinErrS.setStatus('current')
nncSdslFarEndCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 4), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndCurr1DayTimeElapsed.setStatus('current')
nncSdslFarEndCurr1DayErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndCurr1DayErrS.setStatus('current')
nncSdslFarEndPrev1DayMoniSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 6), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndPrev1DayMoniSecs.setStatus('current')
nncSdslFarEndPrev1DayErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndPrev1DayErrS.setStatus('current')
nncSdslFarEndPrev1DayValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 6, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndPrev1DayValidData.setStatus('current')
nncSdslNearEndIntTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7), )
if mibBuilder.loadTexts: nncSdslNearEndIntTable.setStatus('current')
nncSdslNearEndIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SDSL-STATS-MIB", "nncSdslNearEndIntNumber"))
if mibBuilder.loadTexts: nncSdslNearEndIntEntry.setStatus('current')
nncSdslNearEndIntNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: nncSdslNearEndIntNumber.setStatus('current')
nncSdslNearEndIntLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndIntLOSS.setStatus('current')
nncSdslNearEndIntLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndIntLOSWS.setStatus('current')
nncSdslNearEndIntLowNMS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndIntLowNMS.setStatus('current')
nncSdslNearEndIntLPRS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndIntLPRS.setStatus('current')
nncSdslNearEndIntErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndIntErrS.setStatus('current')
nncSdslNearEndIntValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 7, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslNearEndIntValidData.setStatus('current')
nncSdslFarEndIntTable = MibTable((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 8), )
if mibBuilder.loadTexts: nncSdslFarEndIntTable.setStatus('current')
nncSdslFarEndIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "SDSL-STATS-MIB", "nncSdslFarEndIntNumber"))
if mibBuilder.loadTexts: nncSdslFarEndIntEntry.setStatus('current')
nncSdslFarEndIntNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: nncSdslFarEndIntNumber.setStatus('current')
nncSdslFarEndIntErrS = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndIntErrS.setStatus('current')
nncSdslFarEndIntValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 123, 3, 64, 1, 8, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nncSdslFarEndIntValidData.setStatus('current')
mibBuilder.exportSymbols("SDSL-STATS-MIB", nncSdslNearEndIntErrS=nncSdslNearEndIntErrS, nncSdslFarEndCurr15MinTimeElapsed=nncSdslFarEndCurr15MinTimeElapsed, nncSdslNearEndRawLowNM=nncSdslNearEndRawLowNM, nncSdslNearEndCurr1DayLOSWS=nncSdslNearEndCurr1DayLOSWS, nncSdslNearEndCurr1DayLPRS=nncSdslNearEndCurr1DayLPRS, nncSdslNearEndCurr15MinLOSS=nncSdslNearEndCurr15MinLOSS, nncSdslNearEndRawLOCD=nncSdslNearEndRawLOCD, nncSdslNearEndCurr15MinLowNMS=nncSdslNearEndCurr15MinLowNMS, nncSdslNearEndCurr1DayLOSS=nncSdslNearEndCurr1DayLOSS, nncSdslNearEndPrev1DayLOSWS=nncSdslNearEndPrev1DayLOSWS, nncSdslFarEndCurr1DayTimeElapsed=nncSdslFarEndCurr1DayTimeElapsed, nncSdslFarEndIntTable=nncSdslFarEndIntTable, nncSdslFarEndIntNumber=nncSdslFarEndIntNumber, nncSdslFarEndIntErrS=nncSdslFarEndIntErrS, nncSdslNearEndCurr15MinLOSWS=nncSdslNearEndCurr15MinLOSWS, nncSdslNearEndPrev1DayErrS=nncSdslNearEndPrev1DayErrS, nncSdslFarEndCurr15MinErrS=nncSdslFarEndCurr15MinErrS, nncSdslNearEndRawLPR=nncSdslNearEndRawLPR, nncSdslNearEndRawTable=nncSdslNearEndRawTable, nncSdslFarEndIntValidData=nncSdslFarEndIntValidData, nncSdslNearEndPrev1DayTable=nncSdslNearEndPrev1DayTable, nncSdslNearEndPrev1DayValidData=nncSdslNearEndPrev1DayValidData, nncSdslFarEndPrev1DayMoniSecs=nncSdslFarEndPrev1DayMoniSecs, nncSdslFarEndPrev1DayErrS=nncSdslFarEndPrev1DayErrS, nncSdslNearEndCurr15MinLPRS=nncSdslNearEndCurr15MinLPRS, nncSdslNearEndCurr15MinTable=nncSdslNearEndCurr15MinTable, nncSdslStatisticsObjects=nncSdslStatisticsObjects, nncSdslFarEndIntEntry=nncSdslFarEndIntEntry, nncSdslFarEndRawLOCD=nncSdslFarEndRawLOCD, nncSdslFarEndPrev1DayValidData=nncSdslFarEndPrev1DayValidData, nncSdslNearEndPrev1DayLowNMS=nncSdslNearEndPrev1DayLowNMS, nncSdslNearEndIntValidData=nncSdslNearEndIntValidData, nncSdslNearEndRawEntry=nncSdslNearEndRawEntry, nncSdslNearEndCurr15MinErrS=nncSdslNearEndCurr15MinErrS, nncSdslNearEndCurr1DayEntry=nncSdslNearEndCurr1DayEntry, nncSdslNearEndCurr1DayTimeElapsed=nncSdslNearEndCurr1DayTimeElapsed, nncSdslLineStatusEntry=nncSdslLineStatusEntry, nncSdslNearEndPrev1DayLPRS=nncSdslNearEndPrev1DayLPRS, nncSdslNearEndIntTable=nncSdslNearEndIntTable, nncSdslNearEndIntLOSWS=nncSdslNearEndIntLOSWS, nncSdslNearEndCurr1DayLowNMS=nncSdslNearEndCurr1DayLowNMS, nncSdslNearEndIntNumber=nncSdslNearEndIntNumber, nncSdslNearEndCurr15MinTimeElapsed=nncSdslNearEndCurr15MinTimeElapsed, nncSdslNearEndCurr1DayTable=nncSdslNearEndCurr1DayTable, nncSdslFarEndCurr1DayErrS=nncSdslFarEndCurr1DayErrS, nncSdslNearEndRawCRCError=nncSdslNearEndRawCRCError, nncSdslNearEndIntLowNMS=nncSdslNearEndIntLowNMS, nncSdslNearEndCurr1DayErrS=nncSdslNearEndCurr1DayErrS, nncSdslStatistics=nncSdslStatistics, nncSdslNearEndPrev1DayMoniSecs=nncSdslNearEndPrev1DayMoniSecs, nncSdslLineStatus=nncSdslLineStatus, nncSdslFarEndAllTable=nncSdslFarEndAllTable, nncSdslFarEndAllEntry=nncSdslFarEndAllEntry, nncSdslLineStatusTable=nncSdslLineStatusTable, nncSdslNearEndIntEntry=nncSdslNearEndIntEntry, nncSdslNearEndIntLOSS=nncSdslNearEndIntLOSS, nncSdslNearEndIntLPRS=nncSdslNearEndIntLPRS, nncSdslNearEndRawLOS=nncSdslNearEndRawLOS, nncSdslNearEndPrev1DayLOSS=nncSdslNearEndPrev1DayLOSS, nncSdslNearEndCurr15MinEntry=nncSdslNearEndCurr15MinEntry, nncSdslNearEndPrev1DayEntry=nncSdslNearEndPrev1DayEntry, PYSNMP_MODULE_ID=nncSdslStatistics)
