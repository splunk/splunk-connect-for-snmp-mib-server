#
# PySNMP MIB module AGENTX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AGENTX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:00:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, NotificationType, Integer32, iso, Unsigned32, Counter64, Gauge32, ModuleIdentity, TimeTicks, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "NotificationType", "Integer32", "iso", "Unsigned32", "Counter64", "Gauge32", "ModuleIdentity", "TimeTicks", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "ObjectIdentity")
TimeStamp, TextualConvention, TruthValue, DisplayString, TDomain = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "TruthValue", "DisplayString", "TDomain")
agentxMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 74))
agentxMIB.setRevisions(('2000-01-10 00:00',))
if mibBuilder.loadTexts: agentxMIB.setLastUpdated('200001100000Z')
if mibBuilder.loadTexts: agentxMIB.setOrganization('AgentX Working Group')
class AgentxTAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

agentxObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 1))
agentxGeneral = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 1, 1))
agentxConnection = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 1, 2))
agentxSession = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 1, 3))
agentxRegistration = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 1, 4))
agentxDefaultTimeout = MibScalar((1, 3, 6, 1, 2, 1, 74, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxDefaultTimeout.setStatus('current')
agentxMasterAgentXVer = MibScalar((1, 3, 6, 1, 2, 1, 74, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxMasterAgentXVer.setStatus('current')
agentxConnTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 74, 1, 2, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxConnTableLastChange.setStatus('current')
agentxConnectionTable = MibTable((1, 3, 6, 1, 2, 1, 74, 1, 2, 2), )
if mibBuilder.loadTexts: agentxConnectionTable.setStatus('current')
agentxConnectionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 74, 1, 2, 2, 1), ).setIndexNames((0, "AGENTX-MIB", "agentxConnIndex"))
if mibBuilder.loadTexts: agentxConnectionEntry.setStatus('current')
agentxConnIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: agentxConnIndex.setStatus('current')
agentxConnOpenTime = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 2, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxConnOpenTime.setStatus('current')
agentxConnTransportDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 2, 2, 1, 3), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxConnTransportDomain.setStatus('current')
agentxConnTransportAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 2, 2, 1, 4), AgentxTAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxConnTransportAddress.setStatus('current')
agentxSessionTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 74, 1, 3, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxSessionTableLastChange.setStatus('current')
agentxSessionTable = MibTable((1, 3, 6, 1, 2, 1, 74, 1, 3, 2), )
if mibBuilder.loadTexts: agentxSessionTable.setStatus('current')
agentxSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1), ).setIndexNames((0, "AGENTX-MIB", "agentxConnIndex"), (0, "AGENTX-MIB", "agentxSessionIndex"))
if mibBuilder.loadTexts: agentxSessionEntry.setStatus('current')
agentxSessionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: agentxSessionIndex.setStatus('current')
agentxSessionObjectID = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxSessionObjectID.setStatus('current')
agentxSessionDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxSessionDescr.setStatus('current')
agentxSessionAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentxSessionAdminStatus.setStatus('current')
agentxSessionOpenTime = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxSessionOpenTime.setStatus('current')
agentxSessionAgentXVer = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxSessionAgentXVer.setStatus('current')
agentxSessionTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxSessionTimeout.setStatus('current')
agentxRegistrationTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 74, 1, 4, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegistrationTableLastChange.setStatus('current')
agentxRegistrationTable = MibTable((1, 3, 6, 1, 2, 1, 74, 1, 4, 2), )
if mibBuilder.loadTexts: agentxRegistrationTable.setStatus('current')
agentxRegistrationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1), ).setIndexNames((0, "AGENTX-MIB", "agentxConnIndex"), (0, "AGENTX-MIB", "agentxSessionIndex"), (0, "AGENTX-MIB", "agentxRegIndex"))
if mibBuilder.loadTexts: agentxRegistrationEntry.setStatus('current')
agentxRegIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: agentxRegIndex.setStatus('current')
agentxRegContext = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegContext.setStatus('current')
agentxRegStart = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegStart.setStatus('current')
agentxRegRangeSubId = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegRangeSubId.setStatus('current')
agentxRegUpperBound = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegUpperBound.setStatus('current')
agentxRegPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegPriority.setStatus('current')
agentxRegTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegTimeout.setStatus('current')
agentxRegInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 74, 1, 4, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentxRegInstance.setStatus('current')
agentxConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 2))
agentxMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 2, 1))
agentxMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 74, 2, 2))
agentxMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 74, 2, 2, 1)).setObjects(("AGENTX-MIB", "agentxMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    agentxMIBCompliance = agentxMIBCompliance.setStatus('current')
agentxMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 74, 2, 1, 1)).setObjects(("AGENTX-MIB", "agentxDefaultTimeout"), ("AGENTX-MIB", "agentxMasterAgentXVer"), ("AGENTX-MIB", "agentxConnTableLastChange"), ("AGENTX-MIB", "agentxConnOpenTime"), ("AGENTX-MIB", "agentxConnTransportDomain"), ("AGENTX-MIB", "agentxConnTransportAddress"), ("AGENTX-MIB", "agentxSessionTableLastChange"), ("AGENTX-MIB", "agentxSessionTimeout"), ("AGENTX-MIB", "agentxSessionObjectID"), ("AGENTX-MIB", "agentxSessionDescr"), ("AGENTX-MIB", "agentxSessionAdminStatus"), ("AGENTX-MIB", "agentxSessionOpenTime"), ("AGENTX-MIB", "agentxSessionAgentXVer"), ("AGENTX-MIB", "agentxRegistrationTableLastChange"), ("AGENTX-MIB", "agentxRegContext"), ("AGENTX-MIB", "agentxRegStart"), ("AGENTX-MIB", "agentxRegRangeSubId"), ("AGENTX-MIB", "agentxRegUpperBound"), ("AGENTX-MIB", "agentxRegPriority"), ("AGENTX-MIB", "agentxRegTimeout"), ("AGENTX-MIB", "agentxRegInstance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    agentxMIBGroup = agentxMIBGroup.setStatus('current')
mibBuilder.exportSymbols("AGENTX-MIB", agentxRegRangeSubId=agentxRegRangeSubId, agentxSessionAdminStatus=agentxSessionAdminStatus, agentxSessionTimeout=agentxSessionTimeout, agentxRegistration=agentxRegistration, agentxSessionDescr=agentxSessionDescr, agentxMIB=agentxMIB, agentxSessionTableLastChange=agentxSessionTableLastChange, agentxMasterAgentXVer=agentxMasterAgentXVer, agentxMIBGroups=agentxMIBGroups, agentxSessionEntry=agentxSessionEntry, agentxRegUpperBound=agentxRegUpperBound, agentxRegistrationTable=agentxRegistrationTable, agentxGeneral=agentxGeneral, agentxSessionIndex=agentxSessionIndex, agentxConnectionTable=agentxConnectionTable, agentxConnTableLastChange=agentxConnTableLastChange, agentxRegTimeout=agentxRegTimeout, agentxConnectionEntry=agentxConnectionEntry, agentxSession=agentxSession, agentxRegContext=agentxRegContext, agentxRegInstance=agentxRegInstance, agentxConnIndex=agentxConnIndex, agentxObjects=agentxObjects, agentxSessionAgentXVer=agentxSessionAgentXVer, agentxRegistrationTableLastChange=agentxRegistrationTableLastChange, agentxMIBCompliances=agentxMIBCompliances, agentxSessionObjectID=agentxSessionObjectID, agentxRegistrationEntry=agentxRegistrationEntry, agentxConnTransportAddress=agentxConnTransportAddress, agentxMIBGroup=agentxMIBGroup, agentxConnTransportDomain=agentxConnTransportDomain, agentxRegStart=agentxRegStart, agentxRegPriority=agentxRegPriority, agentxConformance=agentxConformance, agentxSessionTable=agentxSessionTable, agentxConnOpenTime=agentxConnOpenTime, agentxConnection=agentxConnection, agentxSessionOpenTime=agentxSessionOpenTime, PYSNMP_MODULE_ID=agentxMIB, agentxDefaultTimeout=agentxDefaultTimeout, agentxMIBCompliance=agentxMIBCompliance, agentxRegIndex=agentxRegIndex, AgentxTAddress=AgentxTAddress)
