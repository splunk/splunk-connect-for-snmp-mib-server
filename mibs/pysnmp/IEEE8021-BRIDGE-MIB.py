#
# PySNMP MIB module IEEE8021-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021-BRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:40:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
IEEE8021BridgePortNumberOrZero, IEEE8021PriorityCodePoint, IEEE8021PriorityValue, ieee802dot1mibs, IEEE8021PbbComponentIdentifier, IEEE8021PbbComponentIdentifierOrZero, IEEE8021BridgePortType, IEEE8021BridgePortNumber = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021BridgePortNumberOrZero", "IEEE8021PriorityCodePoint", "IEEE8021PriorityValue", "ieee802dot1mibs", "IEEE8021PbbComponentIdentifier", "IEEE8021PbbComponentIdentifierOrZero", "IEEE8021BridgePortType", "IEEE8021BridgePortNumber")
InterfaceIndexOrZero, ifIndex, ifGeneralInformationGroup = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex", "ifGeneralInformationGroup")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
systemGroup, = mibBuilder.importSymbols("SNMPv2-MIB", "systemGroup")
iso, Unsigned32, Gauge32, Counter64, Integer32, Counter32, NotificationType, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "Gauge32", "Counter64", "Integer32", "Counter32", "NotificationType", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "TimeTicks", "IpAddress")
MacAddress, RowStatus, TimeInterval, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TimeInterval", "TextualConvention", "DisplayString", "TruthValue")
ieee8021BridgeMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 2))
ieee8021BridgeMib.setRevisions(('2014-12-15 00:00', '2012-08-10 00:00', '2012-02-15 00:00', '2011-04-06 00:00', '2011-02-27 00:00', '2008-10-15 00:00',))
if mibBuilder.loadTexts: ieee8021BridgeMib.setLastUpdated('201412150000Z')
if mibBuilder.loadTexts: ieee8021BridgeMib.setOrganization('IEEE 802.1 Working Group')
ieee8021BridgeNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 0))
ieee8021BridgeObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1))
ieee8021BridgeConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 2))
ieee8021BridgeBase = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 1))
ieee8021BridgeTp = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 2))
ieee8021BridgePriority = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 3))
ieee8021BridgeMrp = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 4))
ieee8021BridgeMmrp = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 5))
ieee8021BridgeInternalLan = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 6))
ieee8021BridgeDot1d = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 1, 7))
ieee8021BridgeBaseTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1), )
if mibBuilder.loadTexts: ieee8021BridgeBaseTable.setStatus('current')
ieee8021BridgeBaseEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentId"))
if mibBuilder.loadTexts: ieee8021BridgeBaseEntry.setStatus('current')
ieee8021BridgeBaseComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeBaseComponentId.setStatus('current')
ieee8021BridgeBaseBridgeAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeBaseBridgeAddress.setStatus('current')
ieee8021BridgeBaseNumPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 3), Integer32()).setUnits('ports').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBaseNumPorts.setStatus('current')
ieee8021BridgeBaseComponentType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("iComponent", 1), ("bComponent", 2), ("cVlanComponent", 3), ("sVlanComponent", 4), ("dBridgeComponent", 5), ("erComponent", 6), ("tComponent", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeBaseComponentType.setStatus('current')
ieee8021BridgeBaseDeviceCapabilities = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("dot1dExtendedFilteringServices", 0), ("dot1dTrafficClasses", 1), ("dot1qStaticEntryIndividualPort", 2), ("dot1qIVLCapable", 3), ("dot1qSVLCapable", 4), ("dot1qHybridCapable", 5), ("dot1qConfigurablePvidTagging", 6), ("dot1dLocalVlanCapable", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeBaseDeviceCapabilities.setStatus('current')
ieee8021BridgeBaseTrafficClassesEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeBaseTrafficClassesEnabled.setStatus('current')
ieee8021BridgeBaseMmrpEnabledStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeBaseMmrpEnabledStatus.setStatus('current')
ieee8021BridgeBaseRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeBaseRowStatus.setStatus('current')
ieee8021BridgeBasePortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4), )
if mibBuilder.loadTexts: ieee8021BridgeBasePortTable.setStatus('current')
ieee8021BridgeBasePortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"))
if mibBuilder.loadTexts: ieee8021BridgeBasePortEntry.setStatus('current')
ieee8021BridgeBasePortComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeBasePortComponentId.setStatus('current')
ieee8021BridgeBasePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeBasePort.setStatus('current')
ieee8021BridgeBasePortIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeBasePortIfIndex.setStatus('current')
ieee8021BridgeBasePortDelayExceededDiscards = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 4), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortDelayExceededDiscards.setStatus('current')
ieee8021BridgeBasePortMtuExceededDiscards = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 5), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortMtuExceededDiscards.setStatus('current')
ieee8021BridgeBasePortCapabilities = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 6), Bits().clone(namedValues=NamedValues(("dot1qDot1qTagging", 0), ("dot1qConfigurableAcceptableFrameTypes", 1), ("dot1qIngressFiltering", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortCapabilities.setStatus('current')
ieee8021BridgeBasePortTypeCapabilities = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 7), Bits().clone(namedValues=NamedValues(("customerVlanPort", 0), ("providerNetworkPort", 1), ("customerNetworkPort", 2), ("customerEdgePort", 3), ("customerBackbonePort", 4), ("virtualInstancePort", 5), ("dBridgePort", 6), ("remoteCustomerAccessPort", 7), ("stationFacingBridgePort", 8), ("uplinkAccessPort", 9), ("uplinkRelayPort", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortTypeCapabilities.setStatus('current')
ieee8021BridgeBasePortType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 8), IEEE8021BridgePortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortType.setStatus('current')
ieee8021BridgeBasePortExternal = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortExternal.setStatus('current')
ieee8021BridgeBasePortAdminPointToPoint = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))).clone('forceFalse')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeBasePortAdminPointToPoint.setStatus('current')
ieee8021BridgeBasePortOperPointToPoint = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortOperPointToPoint.setStatus('current')
ieee8021BridgeBasePortName = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 4, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBasePortName.setStatus('current')
ieee8021BridgeBaseIfToPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 5), )
if mibBuilder.loadTexts: ieee8021BridgeBaseIfToPortTable.setStatus('current')
ieee8021BridgeBaseIfToPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ieee8021BridgeBaseIfToPortEntry.setStatus('current')
ieee8021BridgeBaseIfIndexComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 5, 1, 1), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBaseIfIndexComponentId.setStatus('current')
ieee8021BridgeBaseIfIndexPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 5, 1, 2), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeBaseIfIndexPort.setStatus('current')
ieee8021BridgePhyPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6), )
if mibBuilder.loadTexts: ieee8021BridgePhyPortTable.setStatus('current')
ieee8021BridgePhyPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPort"))
if mibBuilder.loadTexts: ieee8021BridgePhyPortEntry.setStatus('current')
ieee8021BridgePhyPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6, 1, 1), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgePhyPort.setStatus('current')
ieee8021BridgePhyPortIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePhyPortIfIndex.setStatus('current')
ieee8021BridgePhyMacAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePhyMacAddress.setStatus('current')
ieee8021BridgePhyPortToComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6, 1, 4), IEEE8021PbbComponentIdentifierOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePhyPortToComponentId.setStatus('current')
ieee8021BridgePhyPortToInternalPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 1, 6, 1, 5), IEEE8021BridgePortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePhyPortToInternalPort.setStatus('current')
ieee8021BridgeTpPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: ieee8021BridgeTpPortTable.setStatus('current')
ieee8021BridgeTpPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPort"))
if mibBuilder.loadTexts: ieee8021BridgeTpPortEntry.setStatus('current')
ieee8021BridgeTpPortComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeTpPortComponentId.setStatus('current')
ieee8021BridgeTpPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeTpPort.setStatus('current')
ieee8021BridgeTpPortMaxInfo = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1, 3), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeTpPortMaxInfo.setStatus('current')
ieee8021BridgeTpPortInFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1, 4), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeTpPortInFrames.setStatus('current')
ieee8021BridgeTpPortOutFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1, 5), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeTpPortOutFrames.setStatus('current')
ieee8021BridgeTpPortInDiscards = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 2, 1, 1, 6), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeTpPortInDiscards.setStatus('current')
ieee8021BridgePortPriorityTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1), )
if mibBuilder.loadTexts: ieee8021BridgePortPriorityTable.setStatus('current')
ieee8021BridgePortPriorityEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1), )
ieee8021BridgeBasePortEntry.registerAugmentions(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortPriorityEntry"))
ieee8021BridgePortPriorityEntry.setIndexNames(*ieee8021BridgeBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021BridgePortPriorityEntry.setStatus('current')
ieee8021BridgePortDefaultUserPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1, 1), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortDefaultUserPriority.setStatus('current')
ieee8021BridgePortNumTrafficClasses = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortNumTrafficClasses.setStatus('current')
ieee8021BridgePortPriorityCodePointSelection = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1, 3), IEEE8021PriorityCodePoint()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortPriorityCodePointSelection.setStatus('current')
ieee8021BridgePortUseDEI = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortUseDEI.setStatus('current')
ieee8021BridgePortRequireDropEncoding = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortRequireDropEncoding.setStatus('current')
ieee8021BridgePortServiceAccessPrioritySelection = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortServiceAccessPrioritySelection.setStatus('current')
ieee8021BridgeUserPriorityRegenTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: ieee8021BridgeUserPriorityRegenTable.setStatus('current')
ieee8021BridgeUserPriorityRegenEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeUserPriority"))
if mibBuilder.loadTexts: ieee8021BridgeUserPriorityRegenEntry.setStatus('current')
ieee8021BridgeUserPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 2, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021BridgeUserPriority.setStatus('current')
ieee8021BridgeRegenUserPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 2, 1, 2), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeRegenUserPriority.setStatus('current')
ieee8021BridgeTrafficClassTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 3), )
if mibBuilder.loadTexts: ieee8021BridgeTrafficClassTable.setStatus('current')
ieee8021BridgeTrafficClassEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 3, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeTrafficClassPriority"))
if mibBuilder.loadTexts: ieee8021BridgeTrafficClassEntry.setStatus('current')
ieee8021BridgeTrafficClassPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 3, 1, 1), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021BridgeTrafficClassPriority.setStatus('current')
ieee8021BridgeTrafficClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeTrafficClass.setStatus('current')
ieee8021BridgePortOutboundAccessPriorityTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 4), )
if mibBuilder.loadTexts: ieee8021BridgePortOutboundAccessPriorityTable.setStatus('current')
ieee8021BridgePortOutboundAccessPriorityEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 4, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeRegenUserPriority"))
if mibBuilder.loadTexts: ieee8021BridgePortOutboundAccessPriorityEntry.setStatus('current')
ieee8021BridgePortOutboundAccessPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 4, 1, 1), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePortOutboundAccessPriority.setStatus('current')
ieee8021BridgePortDecodingTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5), )
if mibBuilder.loadTexts: ieee8021BridgePortDecodingTable.setStatus('current')
ieee8021BridgePortDecodingEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingPortNum"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingPriorityCodePointRow"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingPriorityCodePoint"))
if mibBuilder.loadTexts: ieee8021BridgePortDecodingEntry.setStatus('current')
ieee8021BridgePortDecodingComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgePortDecodingComponentId.setStatus('current')
ieee8021BridgePortDecodingPortNum = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgePortDecodingPortNum.setStatus('current')
ieee8021BridgePortDecodingPriorityCodePointRow = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1, 3), IEEE8021PriorityCodePoint())
if mibBuilder.loadTexts: ieee8021BridgePortDecodingPriorityCodePointRow.setStatus('current')
ieee8021BridgePortDecodingPriorityCodePoint = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: ieee8021BridgePortDecodingPriorityCodePoint.setStatus('current')
ieee8021BridgePortDecodingPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1, 5), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortDecodingPriority.setStatus('current')
ieee8021BridgePortDecodingDropEligible = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 5, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortDecodingDropEligible.setStatus('current')
ieee8021BridgePortEncodingTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6), )
if mibBuilder.loadTexts: ieee8021BridgePortEncodingTable.setStatus('current')
ieee8021BridgePortEncodingEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingPortNum"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingPriorityCodePointRow"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingPriorityCodePoint"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingDropEligible"))
if mibBuilder.loadTexts: ieee8021BridgePortEncodingEntry.setStatus('current')
ieee8021BridgePortEncodingComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgePortEncodingComponentId.setStatus('current')
ieee8021BridgePortEncodingPortNum = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgePortEncodingPortNum.setStatus('current')
ieee8021BridgePortEncodingPriorityCodePointRow = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1, 3), IEEE8021PriorityCodePoint())
if mibBuilder.loadTexts: ieee8021BridgePortEncodingPriorityCodePointRow.setStatus('current')
ieee8021BridgePortEncodingPriorityCodePoint = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: ieee8021BridgePortEncodingPriorityCodePoint.setStatus('current')
ieee8021BridgePortEncodingDropEligible = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1, 5), TruthValue())
if mibBuilder.loadTexts: ieee8021BridgePortEncodingDropEligible.setStatus('current')
ieee8021BridgePortEncodingPriority = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 6, 1, 6), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortEncodingPriority.setStatus('current')
ieee8021BridgeServiceAccessPriorityTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 7), )
if mibBuilder.loadTexts: ieee8021BridgeServiceAccessPriorityTable.setStatus('current')
ieee8021BridgeServiceAccessPriorityEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 7, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeServiceAccessPriorityComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeServiceAccessPriorityPortNum"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeServiceAccessPriorityReceived"))
if mibBuilder.loadTexts: ieee8021BridgeServiceAccessPriorityEntry.setStatus('current')
ieee8021BridgeServiceAccessPriorityComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 7, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeServiceAccessPriorityComponentId.setStatus('current')
ieee8021BridgeServiceAccessPriorityPortNum = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 7, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeServiceAccessPriorityPortNum.setStatus('current')
ieee8021BridgeServiceAccessPriorityReceived = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 7, 1, 3), IEEE8021PriorityValue())
if mibBuilder.loadTexts: ieee8021BridgeServiceAccessPriorityReceived.setStatus('current')
ieee8021BridgeServiceAccessPriorityValue = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 3, 7, 1, 4), IEEE8021PriorityValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeServiceAccessPriorityValue.setStatus('current')
ieee8021BridgePortMrpTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 4, 1), )
if mibBuilder.loadTexts: ieee8021BridgePortMrpTable.setStatus('current')
ieee8021BridgePortMrpEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 4, 1, 1), )
ieee8021BridgeBasePortEntry.registerAugmentions(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMrpEntry"))
ieee8021BridgePortMrpEntry.setIndexNames(*ieee8021BridgeBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021BridgePortMrpEntry.setStatus('current')
ieee8021BridgePortMrpJoinTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 4, 1, 1, 1), TimeInterval().clone(20)).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortMrpJoinTime.setStatus('current')
ieee8021BridgePortMrpLeaveTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 4, 1, 1, 2), TimeInterval().clone(60)).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortMrpLeaveTime.setStatus('current')
ieee8021BridgePortMrpLeaveAllTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 4, 1, 1, 3), TimeInterval().clone(1000)).setUnits('centi-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortMrpLeaveAllTime.setStatus('current')
ieee8021BridgePortMmrpTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 5, 1), )
if mibBuilder.loadTexts: ieee8021BridgePortMmrpTable.setStatus('current')
ieee8021BridgePortMmrpEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 5, 1, 1), )
ieee8021BridgeBasePortEntry.registerAugmentions(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMmrpEntry"))
ieee8021BridgePortMmrpEntry.setIndexNames(*ieee8021BridgeBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021BridgePortMmrpEntry.setStatus('current')
ieee8021BridgePortMmrpEnabledStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 5, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortMmrpEnabledStatus.setStatus('current')
ieee8021BridgePortMmrpFailedRegistrations = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 5, 1, 1, 2), Counter64()).setUnits('failed MMRP registrations').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePortMmrpFailedRegistrations.setStatus('current')
ieee8021BridgePortMmrpLastPduOrigin = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 5, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgePortMmrpLastPduOrigin.setStatus('current')
ieee8021BridgePortRestrictedGroupRegistration = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 5, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgePortRestrictedGroupRegistration.setStatus('current')
ieee8021BridgeILanIfTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 6, 1), )
if mibBuilder.loadTexts: ieee8021BridgeILanIfTable.setStatus('current')
ieee8021BridgeILanIfEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ieee8021BridgeILanIfEntry.setStatus('current')
ieee8021BridgeILanIfRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 6, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeILanIfRowStatus.setStatus('current')
ieee8021BridgeDot1dPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 2, 1, 7, 1), )
if mibBuilder.loadTexts: ieee8021BridgeDot1dPortTable.setStatus('current')
ieee8021BridgeDot1dPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 2, 1, 7, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"))
if mibBuilder.loadTexts: ieee8021BridgeDot1dPortEntry.setStatus('current')
ieee8021BridgeDot1dPortRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 2, 1, 7, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeDot1dPortRowStatus.setStatus('current')
ieee8021BridgeCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 2, 1))
ieee8021BridgeGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 2, 2, 2))
ieee8021BridgeBaseBridgeGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 1)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseBridgeAddress"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseNumPorts"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeBaseBridgeGroup = ieee8021BridgeBaseBridgeGroup.setStatus('current')
ieee8021BridgeBasePortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 2)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortIfIndex"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortDelayExceededDiscards"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortMtuExceededDiscards"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortType"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortExternal"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortAdminPointToPoint"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortOperPointToPoint"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeBasePortGroup = ieee8021BridgeBasePortGroup.setStatus('current')
ieee8021BridgeCapGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 3)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseDeviceCapabilities"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortCapabilities"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortTypeCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeCapGroup = ieee8021BridgeCapGroup.setStatus('current')
ieee8021BridgeDeviceMmrpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 4)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseMmrpEnabledStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeDeviceMmrpGroup = ieee8021BridgeDeviceMmrpGroup.setStatus('current')
ieee8021BridgeTpPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 6)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortMaxInfo"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortInFrames"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortOutFrames"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortInDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeTpPortGroup = ieee8021BridgeTpPortGroup.setStatus('current')
ieee8021BridgeDevicePriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 7)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseTrafficClassesEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeDevicePriorityGroup = ieee8021BridgeDevicePriorityGroup.setStatus('current')
ieee8021BridgeDefaultPriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 8)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDefaultUserPriority"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortPriorityCodePointSelection"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortUseDEI"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortRequireDropEncoding"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortServiceAccessPrioritySelection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeDefaultPriorityGroup = ieee8021BridgeDefaultPriorityGroup.setStatus('current')
ieee8021BridgeRegenPriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 9)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeRegenUserPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeRegenPriorityGroup = ieee8021BridgeRegenPriorityGroup.setStatus('current')
ieee8021BridgePriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 10)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortNumTrafficClasses"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTrafficClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePriorityGroup = ieee8021BridgePriorityGroup.setStatus('current')
ieee8021BridgeAccessPriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 11)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortOutboundAccessPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeAccessPriorityGroup = ieee8021BridgeAccessPriorityGroup.setStatus('current')
ieee8021BridgePortMrpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 12)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMrpJoinTime"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMrpLeaveTime"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMrpLeaveAllTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePortMrpGroup = ieee8021BridgePortMrpGroup.setStatus('current')
ieee8021BridgePortMmrpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 13)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMmrpEnabledStatus"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMmrpFailedRegistrations"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMmrpLastPduOrigin"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortRestrictedGroupRegistration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePortMmrpGroup = ieee8021BridgePortMmrpGroup.setStatus('deprecated')
ieee8021BridgePortDecodingGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 14)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingPriority"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingDropEligible"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePortDecodingGroup = ieee8021BridgePortDecodingGroup.setStatus('current')
ieee8021BridgePortEncodingGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 15)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePortEncodingGroup = ieee8021BridgePortEncodingGroup.setStatus('current')
ieee8021BridgeServiceAccessPriorityGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 16)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeServiceAccessPriorityValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeServiceAccessPriorityGroup = ieee8021BridgeServiceAccessPriorityGroup.setStatus('current')
ieee8021BridgeInternalLANGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 17)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeILanIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeInternalLANGroup = ieee8021BridgeInternalLANGroup.setStatus('current')
ieee8021BridgeCreatableBaseBridgeGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 18)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeCreatableBaseBridgeGroup = ieee8021BridgeCreatableBaseBridgeGroup.setStatus('current')
ieee8021BridgeDot1dDynamicPortCreationGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 19)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeDot1dPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeDot1dDynamicPortCreationGroup = ieee8021BridgeDot1dDynamicPortCreationGroup.setStatus('current')
ieee8021BridgeBaseIfToPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 20)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseIfIndexComponentId"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseIfIndexPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeBaseIfToPortGroup = ieee8021BridgeBaseIfToPortGroup.setStatus('current')
ieee8021BridgePhyPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 2, 2, 2, 21)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPortIfIndex"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyMacAddress"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPortToComponentId"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPortToInternalPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePhyPortGroup = ieee8021BridgePhyPortGroup.setStatus('current')
ieee8021BridgeCompliance1 = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 2, 2, 1, 3)).setObjects(("SNMPv2-MIB", "systemGroup"), ("IF-MIB", "ifGeneralInformationGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseBridgeGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeCreatableBaseBridgeGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeInternalLANGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeDot1dDynamicPortCreationGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseIfToPortGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeCompliance1 = ieee8021BridgeCompliance1.setStatus('current')
ieee8021BridgeCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 2, 2, 1, 1)).setObjects(("SNMPv2-MIB", "systemGroup"), ("IF-MIB", "ifGeneralInformationGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseBridgeGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeCreatableBaseBridgeGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeTpPortGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeInternalLANGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeDot1dDynamicPortCreationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeCompliance = ieee8021BridgeCompliance.setStatus('current')
ieee8021BridgePriorityAndMulticastFilteringCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 2, 2, 1, 2)).setObjects(("IEEE8021-BRIDGE-MIB", "ieee8021BridgeCapGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeDeviceMmrpGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeDevicePriorityGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeDefaultPriorityGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeRegenPriorityGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePriorityGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeAccessPriorityGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMrpGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortMmrpGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortDecodingGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgePortEncodingGroup"), ("IEEE8021-BRIDGE-MIB", "ieee8021BridgeServiceAccessPriorityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgePriorityAndMulticastFilteringCompliance = ieee8021BridgePriorityAndMulticastFilteringCompliance.setStatus('deprecated')
mibBuilder.exportSymbols("IEEE8021-BRIDGE-MIB", ieee8021BridgeNotifications=ieee8021BridgeNotifications, ieee8021BridgeServiceAccessPriorityPortNum=ieee8021BridgeServiceAccessPriorityPortNum, ieee8021BridgePortDecodingGroup=ieee8021BridgePortDecodingGroup, ieee8021BridgeConformance=ieee8021BridgeConformance, ieee8021BridgeILanIfEntry=ieee8021BridgeILanIfEntry, ieee8021BridgePortMmrpLastPduOrigin=ieee8021BridgePortMmrpLastPduOrigin, ieee8021BridgeServiceAccessPriorityReceived=ieee8021BridgeServiceAccessPriorityReceived, ieee8021BridgeGroups=ieee8021BridgeGroups, ieee8021BridgeRegenPriorityGroup=ieee8021BridgeRegenPriorityGroup, ieee8021BridgeBasePortAdminPointToPoint=ieee8021BridgeBasePortAdminPointToPoint, ieee8021BridgePortMrpEntry=ieee8021BridgePortMrpEntry, ieee8021BridgePortPriorityTable=ieee8021BridgePortPriorityTable, ieee8021BridgePortMmrpEntry=ieee8021BridgePortMmrpEntry, ieee8021BridgeInternalLan=ieee8021BridgeInternalLan, ieee8021BridgePhyPortEntry=ieee8021BridgePhyPortEntry, ieee8021BridgeDefaultPriorityGroup=ieee8021BridgeDefaultPriorityGroup, ieee8021BridgePortEncodingGroup=ieee8021BridgePortEncodingGroup, ieee8021BridgePortServiceAccessPrioritySelection=ieee8021BridgePortServiceAccessPrioritySelection, ieee8021BridgePortDecodingPriority=ieee8021BridgePortDecodingPriority, ieee8021BridgeServiceAccessPriorityTable=ieee8021BridgeServiceAccessPriorityTable, ieee8021BridgeBasePortName=ieee8021BridgeBasePortName, PYSNMP_MODULE_ID=ieee8021BridgeMib, ieee8021BridgeTrafficClass=ieee8021BridgeTrafficClass, ieee8021BridgePortEncodingTable=ieee8021BridgePortEncodingTable, ieee8021BridgeTrafficClassTable=ieee8021BridgeTrafficClassTable, ieee8021BridgeILanIfTable=ieee8021BridgeILanIfTable, ieee8021BridgeTpPortOutFrames=ieee8021BridgeTpPortOutFrames, ieee8021BridgeBasePortDelayExceededDiscards=ieee8021BridgeBasePortDelayExceededDiscards, ieee8021BridgePriority=ieee8021BridgePriority, ieee8021BridgePortDecodingTable=ieee8021BridgePortDecodingTable, ieee8021BridgeBasePortEntry=ieee8021BridgeBasePortEntry, ieee8021BridgePortDecodingDropEligible=ieee8021BridgePortDecodingDropEligible, ieee8021BridgePortPriorityEntry=ieee8021BridgePortPriorityEntry, ieee8021BridgeBasePortMtuExceededDiscards=ieee8021BridgeBasePortMtuExceededDiscards, ieee8021BridgeBase=ieee8021BridgeBase, ieee8021BridgePhyPort=ieee8021BridgePhyPort, ieee8021BridgePortMmrpGroup=ieee8021BridgePortMmrpGroup, ieee8021BridgeTrafficClassEntry=ieee8021BridgeTrafficClassEntry, ieee8021BridgePortMrpTable=ieee8021BridgePortMrpTable, ieee8021BridgePortMrpLeaveTime=ieee8021BridgePortMrpLeaveTime, ieee8021BridgeTpPortMaxInfo=ieee8021BridgeTpPortMaxInfo, ieee8021BridgePortEncodingComponentId=ieee8021BridgePortEncodingComponentId, ieee8021BridgeTpPortEntry=ieee8021BridgeTpPortEntry, ieee8021BridgeTpPortComponentId=ieee8021BridgeTpPortComponentId, ieee8021BridgePortEncodingPriority=ieee8021BridgePortEncodingPriority, ieee8021BridgePortDecodingPriorityCodePoint=ieee8021BridgePortDecodingPriorityCodePoint, ieee8021BridgeBasePortTable=ieee8021BridgeBasePortTable, ieee8021BridgePortMrpJoinTime=ieee8021BridgePortMrpJoinTime, ieee8021BridgePortMmrpFailedRegistrations=ieee8021BridgePortMmrpFailedRegistrations, ieee8021BridgePriorityGroup=ieee8021BridgePriorityGroup, ieee8021BridgeAccessPriorityGroup=ieee8021BridgeAccessPriorityGroup, ieee8021BridgeRegenUserPriority=ieee8021BridgeRegenUserPriority, ieee8021BridgePhyPortToComponentId=ieee8021BridgePhyPortToComponentId, ieee8021BridgeMmrp=ieee8021BridgeMmrp, ieee8021BridgePortRequireDropEncoding=ieee8021BridgePortRequireDropEncoding, ieee8021BridgeCompliances=ieee8021BridgeCompliances, ieee8021BridgeTrafficClassPriority=ieee8021BridgeTrafficClassPriority, ieee8021BridgeObjects=ieee8021BridgeObjects, ieee8021BridgeTpPortGroup=ieee8021BridgeTpPortGroup, ieee8021BridgeBaseIfToPortTable=ieee8021BridgeBaseIfToPortTable, ieee8021BridgeUserPriorityRegenTable=ieee8021BridgeUserPriorityRegenTable, ieee8021BridgePortMmrpTable=ieee8021BridgePortMmrpTable, ieee8021BridgePortEncodingPortNum=ieee8021BridgePortEncodingPortNum, ieee8021BridgeTpPort=ieee8021BridgeTpPort, ieee8021BridgeBaseMmrpEnabledStatus=ieee8021BridgeBaseMmrpEnabledStatus, ieee8021BridgeILanIfRowStatus=ieee8021BridgeILanIfRowStatus, ieee8021BridgePortPriorityCodePointSelection=ieee8021BridgePortPriorityCodePointSelection, ieee8021BridgeDot1d=ieee8021BridgeDot1d, ieee8021BridgePortMrpLeaveAllTime=ieee8021BridgePortMrpLeaveAllTime, ieee8021BridgePortDecodingEntry=ieee8021BridgePortDecodingEntry, ieee8021BridgeMib=ieee8021BridgeMib, ieee8021BridgeBasePortGroup=ieee8021BridgeBasePortGroup, ieee8021BridgeDot1dPortEntry=ieee8021BridgeDot1dPortEntry, ieee8021BridgeDeviceMmrpGroup=ieee8021BridgeDeviceMmrpGroup, ieee8021BridgeBaseEntry=ieee8021BridgeBaseEntry, ieee8021BridgeCapGroup=ieee8021BridgeCapGroup, ieee8021BridgeUserPriorityRegenEntry=ieee8021BridgeUserPriorityRegenEntry, ieee8021BridgeDot1dPortRowStatus=ieee8021BridgeDot1dPortRowStatus, ieee8021BridgeCompliance=ieee8021BridgeCompliance, ieee8021BridgePortDecodingPortNum=ieee8021BridgePortDecodingPortNum, ieee8021BridgePortDecodingPriorityCodePointRow=ieee8021BridgePortDecodingPriorityCodePointRow, ieee8021BridgeBaseNumPorts=ieee8021BridgeBaseNumPorts, ieee8021BridgeBasePortIfIndex=ieee8021BridgeBasePortIfIndex, ieee8021BridgeBasePortOperPointToPoint=ieee8021BridgeBasePortOperPointToPoint, ieee8021BridgeBaseIfToPortEntry=ieee8021BridgeBaseIfToPortEntry, ieee8021BridgePhyPortTable=ieee8021BridgePhyPortTable, ieee8021BridgeBaseIfIndexPort=ieee8021BridgeBaseIfIndexPort, ieee8021BridgeTpPortInFrames=ieee8021BridgeTpPortInFrames, ieee8021BridgeServiceAccessPriorityGroup=ieee8021BridgeServiceAccessPriorityGroup, ieee8021BridgePhyPortToInternalPort=ieee8021BridgePhyPortToInternalPort, ieee8021BridgeBaseBridgeAddress=ieee8021BridgeBaseBridgeAddress, ieee8021BridgeBasePort=ieee8021BridgeBasePort, ieee8021BridgePortEncodingPriorityCodePointRow=ieee8021BridgePortEncodingPriorityCodePointRow, ieee8021BridgePortEncodingDropEligible=ieee8021BridgePortEncodingDropEligible, ieee8021BridgePortEncodingPriorityCodePoint=ieee8021BridgePortEncodingPriorityCodePoint, ieee8021BridgePortNumTrafficClasses=ieee8021BridgePortNumTrafficClasses, ieee8021BridgeBasePortTypeCapabilities=ieee8021BridgeBasePortTypeCapabilities, ieee8021BridgeDevicePriorityGroup=ieee8021BridgeDevicePriorityGroup, ieee8021BridgeServiceAccessPriorityValue=ieee8021BridgeServiceAccessPriorityValue, ieee8021BridgePortOutboundAccessPriorityTable=ieee8021BridgePortOutboundAccessPriorityTable, ieee8021BridgePhyMacAddress=ieee8021BridgePhyMacAddress, ieee8021BridgePortUseDEI=ieee8021BridgePortUseDEI, ieee8021BridgeInternalLANGroup=ieee8021BridgeInternalLANGroup, ieee8021BridgePortOutboundAccessPriorityEntry=ieee8021BridgePortOutboundAccessPriorityEntry, ieee8021BridgeBaseTable=ieee8021BridgeBaseTable, ieee8021BridgeBasePortCapabilities=ieee8021BridgeBasePortCapabilities, ieee8021BridgePhyPortIfIndex=ieee8021BridgePhyPortIfIndex, ieee8021BridgeServiceAccessPriorityEntry=ieee8021BridgeServiceAccessPriorityEntry, ieee8021BridgeCompliance1=ieee8021BridgeCompliance1, ieee8021BridgePortDefaultUserPriority=ieee8021BridgePortDefaultUserPriority, ieee8021BridgePriorityAndMulticastFilteringCompliance=ieee8021BridgePriorityAndMulticastFilteringCompliance, ieee8021BridgeServiceAccessPriorityComponentId=ieee8021BridgeServiceAccessPriorityComponentId, ieee8021BridgePortDecodingComponentId=ieee8021BridgePortDecodingComponentId, ieee8021BridgeBaseRowStatus=ieee8021BridgeBaseRowStatus, ieee8021BridgeBaseComponentId=ieee8021BridgeBaseComponentId, ieee8021BridgePortEncodingEntry=ieee8021BridgePortEncodingEntry, ieee8021BridgeTpPortTable=ieee8021BridgeTpPortTable, ieee8021BridgePortMrpGroup=ieee8021BridgePortMrpGroup, ieee8021BridgeBaseTrafficClassesEnabled=ieee8021BridgeBaseTrafficClassesEnabled, ieee8021BridgeDot1dDynamicPortCreationGroup=ieee8021BridgeDot1dDynamicPortCreationGroup, ieee8021BridgePortMmrpEnabledStatus=ieee8021BridgePortMmrpEnabledStatus, ieee8021BridgeBaseIfIndexComponentId=ieee8021BridgeBaseIfIndexComponentId, ieee8021BridgeDot1dPortTable=ieee8021BridgeDot1dPortTable, ieee8021BridgeBaseDeviceCapabilities=ieee8021BridgeBaseDeviceCapabilities, ieee8021BridgeBaseIfToPortGroup=ieee8021BridgeBaseIfToPortGroup, ieee8021BridgePhyPortGroup=ieee8021BridgePhyPortGroup, ieee8021BridgePortOutboundAccessPriority=ieee8021BridgePortOutboundAccessPriority, ieee8021BridgeBasePortType=ieee8021BridgeBasePortType, ieee8021BridgeBasePortExternal=ieee8021BridgeBasePortExternal, ieee8021BridgeTpPortInDiscards=ieee8021BridgeTpPortInDiscards, ieee8021BridgeBaseComponentType=ieee8021BridgeBaseComponentType, ieee8021BridgePortRestrictedGroupRegistration=ieee8021BridgePortRestrictedGroupRegistration, ieee8021BridgeCreatableBaseBridgeGroup=ieee8021BridgeCreatableBaseBridgeGroup, ieee8021BridgeBasePortComponentId=ieee8021BridgeBasePortComponentId, ieee8021BridgeBaseBridgeGroup=ieee8021BridgeBaseBridgeGroup, ieee8021BridgeTp=ieee8021BridgeTp, ieee8021BridgeMrp=ieee8021BridgeMrp, ieee8021BridgeUserPriority=ieee8021BridgeUserPriority)
