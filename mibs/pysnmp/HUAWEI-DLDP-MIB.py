#
# PySNMP MIB module HUAWEI-DLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-DLDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:32:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, ModuleIdentity, Counter64, iso, Counter32, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, MibIdentifier, Integer32, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "Counter64", "iso", "Counter32", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "MibIdentifier", "Integer32", "TimeTicks", "ObjectIdentity")
DisplayString, MacAddress, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "RowStatus", "TruthValue", "TextualConvention")
hwDldpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173))
if mibBuilder.loadTexts: hwDldpMIB.setLastUpdated('200807151430Z')
if mibBuilder.loadTexts: hwDldpMIB.setOrganization('Huawei Technologies co.,Ltd.')
class PortIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 575)

hwDldpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1))
hwDldpPortTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 2))
hwDldpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 3))
hwDldpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4))
hwDldpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1))
hwDldpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2))
hwDldpEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpEnable.setStatus('current')
hwDldpUnidirectionalShutdown = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpUnidirectionalShutdown.setStatus('current')
hwDldpWorkMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("enhance", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpWorkMode.setStatus('current')
hwDldpAdvertInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpAdvertInterval.setStatus('current')
hwDelayDownTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDelayDownTimer.setStatus('current')
hwDldpAuthenMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("md5", 2), ("simple", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpAuthenMode.setStatus('current')
hwDldpMd5Password = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpMd5Password.setStatus('current')
hwDldpSimplePassword = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDldpSimplePassword.setStatus('current')
hwDldpPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9), )
if mibBuilder.loadTexts: hwDldpPortTable.setStatus('current')
hwDldpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1), ).setIndexNames((0, "HUAWEI-DLDP-MIB", "hwDldpPortIndex"))
if mibBuilder.loadTexts: hwDldpPortEntry.setStatus('current')
hwDldpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1, 1), PortIndex())
if mibBuilder.loadTexts: hwDldpPortIndex.setStatus('current')
hwDldpPortStateReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDldpPortStateReset.setStatus('current')
hwDldpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("initial", 1), ("inactive", 2), ("active", 3), ("advertisement", 4), ("probe", 5), ("disable", 6), ("delayDown", 7), ("loop", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortState.setStatus('current')
hwDldpPortLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortLinkState.setStatus('current')
hwDldpResetStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDldpResetStatistics.setStatus('current')
hwDldpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDldpRowStatus.setStatus('current')
hwDldpNeighbourTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10), )
if mibBuilder.loadTexts: hwDldpNeighbourTable.setStatus('current')
hwDldpNeighbourEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10, 1), ).setIndexNames((0, "HUAWEI-DLDP-MIB", "hwDldpPortIndex"), (0, "HUAWEI-DLDP-MIB", "hwDldpNeighbourMacAddr"), (0, "HUAWEI-DLDP-MIB", "hwDldpNeighbourPortIndex"))
if mibBuilder.loadTexts: hwDldpNeighbourEntry.setStatus('current')
hwDldpNeighbourMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwDldpNeighbourMacAddr.setStatus('current')
hwDldpNeighbourPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwDldpNeighbourPortIndex.setStatus('current')
hwDldpNeighbourPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpNeighbourPortName.setStatus('current')
hwDldpNeighbourState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("oneWay", 2), ("twoWay", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpNeighbourState.setStatus('current')
hwDldpNeighbourAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpNeighbourAgeTime.setStatus('current')
hwDldpPortStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1), )
if mibBuilder.loadTexts: hwDldpPortStatisticsTable.setStatus('current')
hwDldpPortStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-DLDP-MIB", "hwDldpPortIndex"))
if mibBuilder.loadTexts: hwDldpPortStatisticsEntry.setStatus('current')
hwDldpPortStatisticsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortStatisticsTx.setStatus('current')
hwDldpPortStatisticsRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortStatisticsRxTotal.setStatus('current')
hwDldpPortStatisticsRxError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortStatisticsRxError.setStatus('current')
hwDldpPortStatisticsRxLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortStatisticsRxLoop.setStatus('current')
hwDldpPortStatisticsRxValid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortStatisticsRxValid.setStatus('current')
hwDldpPortStatisticsRxAuthenFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDldpPortStatisticsRxAuthenFail.setStatus('current')
hwDldpTrapInterfaceIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 2, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDldpTrapInterfaceIndex.setStatus('current')
hwDldpTrapIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDldpTrapIfName.setStatus('current')
hwDldpTrapFaultReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDldpTrapFaultReason.setStatus('current')
hwDldpUnidirectionalLink = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 3, 1)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpTrapInterfaceIndex"), ("HUAWEI-DLDP-MIB", "hwDldpTrapIfName"), ("HUAWEI-DLDP-MIB", "hwDldpTrapFaultReason"))
if mibBuilder.loadTexts: hwDldpUnidirectionalLink.setStatus('current')
hwDldpLinkResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 3, 2)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpTrapInterfaceIndex"), ("HUAWEI-DLDP-MIB", "hwDldpTrapIfName"))
if mibBuilder.loadTexts: hwDldpLinkResume.setStatus('current')
hwDldpLoopDetect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 3, 3)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpTrapInterfaceIndex"), ("HUAWEI-DLDP-MIB", "hwDldpTrapIfName"))
if mibBuilder.loadTexts: hwDldpLoopDetect.setStatus('current')
hwDldpLoopResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 3, 4)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpTrapInterfaceIndex"), ("HUAWEI-DLDP-MIB", "hwDldpTrapIfName"))
if mibBuilder.loadTexts: hwDldpLoopResume.setStatus('current')
hwDldpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 1))
hwDldpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 2))
hwDldpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 1, 1)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpConfigGroup"), ("HUAWEI-DLDP-MIB", "hwDldpStatisticsGroup"), ("HUAWEI-DLDP-MIB", "hwDldpPortGroup"), ("HUAWEI-DLDP-MIB", "hwDldpPortTrapGroup"), ("HUAWEI-DLDP-MIB", "hwDldpTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDldpCompliance = hwDldpCompliance.setStatus('current')
hwDldpConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 2, 1)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpEnable"), ("HUAWEI-DLDP-MIB", "hwDldpUnidirectionalShutdown"), ("HUAWEI-DLDP-MIB", "hwDldpWorkMode"), ("HUAWEI-DLDP-MIB", "hwDldpAdvertInterval"), ("HUAWEI-DLDP-MIB", "hwDelayDownTimer"), ("HUAWEI-DLDP-MIB", "hwDldpAuthenMode"), ("HUAWEI-DLDP-MIB", "hwDldpMd5Password"), ("HUAWEI-DLDP-MIB", "hwDldpSimplePassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDldpConfigGroup = hwDldpConfigGroup.setStatus('current')
hwDldpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 2, 2)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpPortStatisticsTx"), ("HUAWEI-DLDP-MIB", "hwDldpPortStatisticsRxTotal"), ("HUAWEI-DLDP-MIB", "hwDldpPortStatisticsRxError"), ("HUAWEI-DLDP-MIB", "hwDldpPortStatisticsRxLoop"), ("HUAWEI-DLDP-MIB", "hwDldpPortStatisticsRxValid"), ("HUAWEI-DLDP-MIB", "hwDldpPortStatisticsRxAuthenFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDldpStatisticsGroup = hwDldpStatisticsGroup.setStatus('current')
hwDldpPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 2, 3)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpPortStateReset"), ("HUAWEI-DLDP-MIB", "hwDldpPortState"), ("HUAWEI-DLDP-MIB", "hwDldpPortLinkState"), ("HUAWEI-DLDP-MIB", "hwDldpResetStatistics"), ("HUAWEI-DLDP-MIB", "hwDldpRowStatus"), ("HUAWEI-DLDP-MIB", "hwDldpNeighbourPortName"), ("HUAWEI-DLDP-MIB", "hwDldpNeighbourState"), ("HUAWEI-DLDP-MIB", "hwDldpNeighbourAgeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDldpPortGroup = hwDldpPortGroup.setStatus('current')
hwDldpPortTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 2, 4)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpTrapInterfaceIndex"), ("HUAWEI-DLDP-MIB", "hwDldpTrapIfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDldpPortTrapGroup = hwDldpPortTrapGroup.setStatus('current')
hwDldpTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 173, 4, 2, 5)).setObjects(("HUAWEI-DLDP-MIB", "hwDldpUnidirectionalLink"), ("HUAWEI-DLDP-MIB", "hwDldpLinkResume"), ("HUAWEI-DLDP-MIB", "hwDldpLoopDetect"), ("HUAWEI-DLDP-MIB", "hwDldpLoopResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDldpTrapGroup = hwDldpTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-DLDP-MIB", hwDldpNeighbourTable=hwDldpNeighbourTable, hwDldpTrapGroup=hwDldpTrapGroup, hwDldpMIB=hwDldpMIB, hwDldpNeighbourPortIndex=hwDldpNeighbourPortIndex, hwDldpEnable=hwDldpEnable, hwDldpConfiguration=hwDldpConfiguration, hwDldpConfigGroup=hwDldpConfigGroup, hwDldpPortStatisticsTx=hwDldpPortStatisticsTx, hwDldpPortStatisticsRxLoop=hwDldpPortStatisticsRxLoop, hwDldpTrapFaultReason=hwDldpTrapFaultReason, hwDldpCompliance=hwDldpCompliance, hwDldpLoopResume=hwDldpLoopResume, PYSNMP_MODULE_ID=hwDldpMIB, hwDldpObjects=hwDldpObjects, hwDldpUnidirectionalLink=hwDldpUnidirectionalLink, hwDldpPortStateReset=hwDldpPortStateReset, hwDldpCompliances=hwDldpCompliances, hwDldpPortTable=hwDldpPortTable, hwDldpPortStatisticsRxTotal=hwDldpPortStatisticsRxTotal, hwDldpSimplePassword=hwDldpSimplePassword, hwDldpNeighbourEntry=hwDldpNeighbourEntry, hwDldpTrapIfName=hwDldpTrapIfName, hwDldpAuthenMode=hwDldpAuthenMode, hwDldpPortLinkState=hwDldpPortLinkState, hwDldpConformance=hwDldpConformance, hwDldpNeighbourPortName=hwDldpNeighbourPortName, hwDldpPortIndex=hwDldpPortIndex, hwDldpPortState=hwDldpPortState, hwDldpTraps=hwDldpTraps, hwDldpWorkMode=hwDldpWorkMode, hwDldpAdvertInterval=hwDldpAdvertInterval, hwDldpPortStatisticsRxValid=hwDldpPortStatisticsRxValid, hwDldpStatistics=hwDldpStatistics, hwDldpPortStatisticsEntry=hwDldpPortStatisticsEntry, hwDldpLoopDetect=hwDldpLoopDetect, hwDldpNeighbourAgeTime=hwDldpNeighbourAgeTime, hwDldpResetStatistics=hwDldpResetStatistics, hwDldpPortGroup=hwDldpPortGroup, hwDldpGroups=hwDldpGroups, hwDldpStatisticsGroup=hwDldpStatisticsGroup, hwDldpMd5Password=hwDldpMd5Password, hwDldpPortStatisticsRxAuthenFail=hwDldpPortStatisticsRxAuthenFail, hwDldpPortTrapGroup=hwDldpPortTrapGroup, hwDelayDownTimer=hwDelayDownTimer, hwDldpRowStatus=hwDldpRowStatus, hwDldpTrapInterfaceIndex=hwDldpTrapInterfaceIndex, hwDldpPortStatisticsRxError=hwDldpPortStatisticsRxError, hwDldpUnidirectionalShutdown=hwDldpUnidirectionalShutdown, hwDldpPortEntry=hwDldpPortEntry, hwDldpNeighbourMacAddr=hwDldpNeighbourMacAddr, PortIndex=PortIndex, hwDldpLinkResume=hwDldpLinkResume, hwDldpPortTrapObjects=hwDldpPortTrapObjects, hwDldpPortStatisticsTable=hwDldpPortStatisticsTable, hwDldpNeighbourState=hwDldpNeighbourState)
