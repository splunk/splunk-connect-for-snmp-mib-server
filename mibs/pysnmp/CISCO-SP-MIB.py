#
# PySNMP MIB module CISCO-SP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:56:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "InterfaceIndexOrZero")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, Integer32, MibIdentifier, Unsigned32, Counter64, Gauge32, iso, Bits, ModuleIdentity, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "Integer32", "MibIdentifier", "Unsigned32", "Counter64", "Gauge32", "iso", "Bits", "ModuleIdentity", "TimeTicks", "Counter32")
TimeStamp, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "DisplayString", "TextualConvention")
ciscoSpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 73))
ciscoSpMIB.setRevisions(('2006-01-16 00:00', '2001-06-07 00:00',))
if mibBuilder.loadTexts: ciscoSpMIB.setLastUpdated('200601160000Z')
if mibBuilder.loadTexts: ciscoSpMIB.setOrganization('Cisco Systems, Inc.')
ciscoSpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1))
cSpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1))
cSpLinkset = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2))
cSpLink = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3))
cSpRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4))
cSpAccessControlList = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5))
cSpAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6))
cSpNotificationsEnable = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 7))
class CSpPointCode(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 16777216)

class CSpSs7Variant(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ansi", 1), ("itu", 2))

class CSpLinkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("serial", 2), ("sctpIp", 3))

class CSpLinkSLC(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 15)

class CSpLinksetId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 19)

class CSpAclAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("accept", 1), ("discard", 2))

class CSpOsiState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("inactive", 2), ("inhibited", 3), ("uninhibited", 4), ("shut", 5), ("noshut", 6))

class CSpAclId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 2999)

class CSpRouteTableName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 19)

class CSpAclSi(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 15)

class CSpRouteStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("available", 1), ("restricted", 2), ("unavailable", 3))

cSpSs7Variant = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 1), CSpSs7Variant()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpSs7Variant.setStatus('current')
cSpPointCode = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 2), CSpPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpPointCode.setStatus('current')
cSpMtp2T01 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 3), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T01.setStatus('current')
cSpMtp2T02 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 4), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T02.setStatus('current')
cSpMtp2T03 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 5), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T03.setStatus('current')
cSpMtp2T4N = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 6), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T4N.setStatus('current')
cSpMtp2T4E = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 7), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T4E.setStatus('current')
cSpMtp2T05 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 8), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T05.setStatus('current')
cSpMtp2T06 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 9), Unsigned32()).setUnits('milli-seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T06.setStatus('current')
cSpMtp2T07 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 10), Unsigned32()).setUnits('milli-seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T07.setStatus('current')
cSpMtp2T08 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp2T08.setStatus('current')
cSpMtp3T01 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T01.setStatus('current')
cSpMtp3T02 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T02.setStatus('current')
cSpMtp3T03 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T03.setStatus('current')
cSpMtp3T04 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T04.setStatus('current')
cSpMtp3T05 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T05.setStatus('current')
cSpMtp3T06 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T06.setStatus('current')
cSpMtp3T07 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T07.setStatus('current')
cSpMtp3T08 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T08.setStatus('current')
cSpMtp3T10 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T10.setStatus('current')
cSpMtp3T11 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T11.setStatus('current')
cSpMtp3T12 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T12.setStatus('current')
cSpMtp3T13 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T13.setStatus('current')
cSpMtp3T14 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T14.setStatus('current')
cSpMtp3T15 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T15.setStatus('current')
cSpMtp3T16 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T16.setStatus('current')
cSpMtp3T17 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T17.setStatus('current')
cSpMtp3T18 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T18.setStatus('current')
cSpMtp3T19 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T19.setStatus('current')
cSpMtp3T20 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T20.setStatus('current')
cSpMtp3T21 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T21.setStatus('current')
cSpMtp3T22 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T22.setStatus('current')
cSpMtp3T23 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T23.setStatus('current')
cSpMtp3T24 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T24.setStatus('current')
cSpMtp3T25 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 35), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T25.setStatus('current')
cSpMtp3T26 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 36), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T26.setStatus('current')
cSpMtp3T27 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 37), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T27.setStatus('current')
cSpMtp3T28 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 38), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T28.setStatus('current')
cSpMtp3T29 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 39), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T29.setStatus('current')
cSpMtp3T30 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 40), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T30.setStatus('current')
cSpMtp3T31 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 41), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T31.setStatus('current')
cSpMtp3T32 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 42), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T32.setStatus('current')
cSpMtp3T33 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 43), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T33.setStatus('current')
cSpMtp3T34 = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 1, 44), Unsigned32()).setUnits('seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpMtp3T34.setStatus('current')
cSpLinksetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1), )
if mibBuilder.loadTexts: cSpLinksetTable.setStatus('current')
cSpLinksetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SP-MIB", "cSpLinksetName"))
if mibBuilder.loadTexts: cSpLinksetTableEntry.setStatus('current')
cSpLinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 1), CSpLinksetId())
if mibBuilder.loadTexts: cSpLinksetName.setStatus('current')
cSpLinksetAdjacentPointCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 2), CSpPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetAdjacentPointCode.setStatus('current')
cSpLinksetState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 3), CSpOsiState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetState.setStatus('current')
cSpLinksetInboundAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 4), CSpAclId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetInboundAcl.setStatus('current')
cSpLinksetOutboundAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 5), CSpAclId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetOutboundAcl.setStatus('current')
cSpLinksetSnmmRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 6), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSnmmRouteTableName.setStatus('current')
cSpLinksetSntmRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 7), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSntmRouteTableName.setStatus('current')
cSpLinksetSpare2RouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 8), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSpare2RouteTableName.setStatus('current')
cSpLinksetSccpRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 9), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSccpRouteTableName.setStatus('current')
cSpLinksetTupRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 10), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetTupRouteTableName.setStatus('current')
cSpLinksetIsupRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 11), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetIsupRouteTableName.setStatus('current')
cSpLinksetDupcRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 12), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetDupcRouteTableName.setStatus('current')
cSpLinksetDupfRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 13), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetDupfRouteTableName.setStatus('current')
cSpLinksetMtupRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 14), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtupRouteTableName.setStatus('current')
cSpLinksetBisupRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 15), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetBisupRouteTableName.setStatus('current')
cSpLinksetSisupRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 16), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSisupRouteTableName.setStatus('current')
cSpLinksetSpare11RouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 17), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSpare11RouteTableName.setStatus('current')
cSpLinksetSpare12RouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 18), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSpare12RouteTableName.setStatus('current')
cSpLinksetSpare13RouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 19), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSpare13RouteTableName.setStatus('current')
cSpLinksetSpare14RouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 20), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSpare14RouteTableName.setStatus('current')
cSpLinksetSpare15RouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 21), CSpRouteTableName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetSpare15RouteTableName.setStatus('current')
cSpLinksetAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 22), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetAccountingEnabled.setStatus('current')
cSpLinksetNumLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetNumLinks.setStatus('current')
cSpLinksetPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 24), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetPacketsSent.setStatus('current')
cSpLinksetHCPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 25), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetHCPacketsSent.setStatus('current')
cSpLinksetPacketsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 26), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetPacketsRcvd.setStatus('current')
cSpLinksetHCPacketsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 27), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetHCPacketsRcvd.setStatus('current')
cSpLinksetBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 28), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetBytesSent.setStatus('current')
cSpLinksetHCBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 29), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetHCBytesSent.setStatus('current')
cSpLinksetBytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 30), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetBytesRcvd.setStatus('current')
cSpLinksetHCBytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetHCBytesRcvd.setStatus('current')
cSpLinksetDurationInService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 32), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetDurationInService.setStatus('current')
cSpLinksetDurationOutService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 33), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetDurationOutService.setStatus('current')
cSpLinksetMtp2T01 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 34), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T01.setStatus('current')
cSpLinksetMtp2T02 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 35), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T02.setStatus('current')
cSpLinksetMtp2T03 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 36), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T03.setStatus('current')
cSpLinksetMtp2T4N = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 37), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T4N.setStatus('current')
cSpLinksetMtp2T4E = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 38), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T4E.setStatus('current')
cSpLinksetMtp2T05 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 39), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T05.setStatus('current')
cSpLinksetMtp2T06 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 40), Unsigned32()).setUnits('100 milli-seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T06.setStatus('current')
cSpLinksetMtp2T07 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 41), Unsigned32()).setUnits('100 milli-seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T07.setStatus('current')
cSpLinksetMtp2T08 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp2T08.setStatus('current')
cSpLinksetMtp3T01 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T01.setStatus('current')
cSpLinksetMtp3T02 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T02.setStatus('current')
cSpLinksetMtp3T03 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T03.setStatus('current')
cSpLinksetMtp3T04 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T04.setStatus('current')
cSpLinksetMtp3T05 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T05.setStatus('current')
cSpLinksetMtp3T06 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T06.setStatus('current')
cSpLinksetMtp3T07 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T07.setStatus('current')
cSpLinksetMtp3T08 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T08.setStatus('current')
cSpLinksetMtp3T10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T10.setStatus('current')
cSpLinksetMtp3T11 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T11.setStatus('current')
cSpLinksetMtp3T12 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T12.setStatus('current')
cSpLinksetMtp3T13 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T13.setStatus('current')
cSpLinksetMtp3T14 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 55), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T14.setStatus('current')
cSpLinksetMtp3T15 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 56), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T15.setStatus('current')
cSpLinksetMtp3T16 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 57), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T16.setStatus('current')
cSpLinksetMtp3T17 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 58), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T17.setStatus('current')
cSpLinksetMtp3T18 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 59), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T18.setStatus('current')
cSpLinksetMtp3T19 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 60), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T19.setStatus('current')
cSpLinksetMtp3T20 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 61), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T20.setStatus('current')
cSpLinksetMtp3T21 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T21.setStatus('current')
cSpLinksetMtp3T22 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T22.setStatus('current')
cSpLinksetMtp3T23 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T23.setStatus('current')
cSpLinksetMtp3T24 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 65), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T24.setStatus('current')
cSpLinksetMtp3T25 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 66), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T25.setStatus('current')
cSpLinksetMtp3T26 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 67), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T26.setStatus('current')
cSpLinksetMtp3T27 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 68), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T27.setStatus('current')
cSpLinksetMtp3T28 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 69), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T28.setStatus('current')
cSpLinksetMtp3T29 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 70), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T29.setStatus('current')
cSpLinksetMtp3T30 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 71), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T30.setStatus('current')
cSpLinksetMtp3T31 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 72), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T31.setStatus('current')
cSpLinksetMtp3T32 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 73), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T32.setStatus('current')
cSpLinksetMtp3T33 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 74), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T33.setStatus('current')
cSpLinksetMtp3T34 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 2, 1, 1, 75), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinksetMtp3T34.setStatus('current')
cSpLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1), )
if mibBuilder.loadTexts: cSpLinkTable.setStatus('current')
cSpLinkTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-SP-MIB", "cSpLinksetName"), (0, "CISCO-SP-MIB", "cSpLinkSlc"))
if mibBuilder.loadTexts: cSpLinkTableEntry.setStatus('current')
cSpLinkSlc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 1), CSpLinkSLC())
if mibBuilder.loadTexts: cSpLinkSlc.setStatus('current')
cSpLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 2), CSpOsiState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkState.setStatus('current')
cSpLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 3), CSpLinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkType.setStatus('current')
cSpLinkifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkifIndex.setStatus('current')
cSpLinkSctpAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkSctpAssociation.setStatus('current')
cSpLinkMtp3PacketsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3PacketsRcvd.setStatus('current')
cSpLinkMtp3PacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3PacketsSent.setStatus('current')
cSpLinkHCMtp3PacketsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 8), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkHCMtp3PacketsRcvd.setStatus('current')
cSpLinkHCMtp3PacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkHCMtp3PacketsSent.setStatus('current')
cSpLinkMtp3BytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 10), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3BytesRcvd.setStatus('current')
cSpLinkMtp3BytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3BytesSent.setStatus('current')
cSpLinkHCMtp3BytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 12), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkHCMtp3BytesRcvd.setStatus('current')
cSpLinkHCMtp3BytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 13), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkHCMtp3BytesSent.setStatus('current')
cSpLinkMtp2T01 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 14), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T01.setStatus('current')
cSpLinkMtp2T02 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 15), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T02.setStatus('current')
cSpLinkMtp2T03 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 16), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T03.setStatus('current')
cSpLinkMtp2T4N = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 17), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T4N.setStatus('current')
cSpLinkMtp2T4E = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 18), Unsigned32()).setUnits('100 milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T4E.setStatus('current')
cSpLinkMtp2T05 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 19), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T05.setStatus('current')
cSpLinkMtp2T06 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 20), Unsigned32()).setUnits('100 milli-seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T06.setStatus('current')
cSpLinkMtp2T07 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 21), Unsigned32()).setUnits('100 milli-seconds.').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T07.setStatus('current')
cSpLinkMtp2T08 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp2T08.setStatus('current')
cSpLinkMtp3T01 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T01.setStatus('current')
cSpLinkMtp3T02 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T02.setStatus('current')
cSpLinkMtp3T03 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T03.setStatus('current')
cSpLinkMtp3T04 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T04.setStatus('current')
cSpLinkMtp3T05 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T05.setStatus('current')
cSpLinkMtp3T06 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T06.setStatus('current')
cSpLinkMtp3T07 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T07.setStatus('current')
cSpLinkMtp3T08 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T08.setStatus('current')
cSpLinkMtp3T10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T10.setStatus('current')
cSpLinkMtp3T11 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T11.setStatus('current')
cSpLinkMtp3T12 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T12.setStatus('current')
cSpLinkMtp3T13 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T13.setStatus('current')
cSpLinkMtp3T14 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T14.setStatus('current')
cSpLinkMtp3T15 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T15.setStatus('current')
cSpLinkMtp3T16 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T16.setStatus('current')
cSpLinkMtp3T17 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T17.setStatus('current')
cSpLinkMtp3T18 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 39), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T18.setStatus('current')
cSpLinkMtp3T19 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 40), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T19.setStatus('current')
cSpLinkMtp3T20 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T20.setStatus('current')
cSpLinkMtp3T21 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T21.setStatus('current')
cSpLinkMtp3T22 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T22.setStatus('current')
cSpLinkMtp3T23 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 44), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T23.setStatus('current')
cSpLinkMtp3T24 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T24.setStatus('current')
cSpLinkMtp3T25 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 46), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T25.setStatus('current')
cSpLinkMtp3T26 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 47), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T26.setStatus('current')
cSpLinkMtp3T27 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 48), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T27.setStatus('current')
cSpLinkMtp3T28 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 49), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T28.setStatus('current')
cSpLinkMtp3T29 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 50), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T29.setStatus('current')
cSpLinkMtp3T30 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 51), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T30.setStatus('current')
cSpLinkMtp3T31 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 52), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T31.setStatus('current')
cSpLinkMtp3T32 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 53), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T32.setStatus('current')
cSpLinkMtp3T33 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 54), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T33.setStatus('current')
cSpLinkMtp3T34 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 55), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3T34.setStatus('current')
cSpLinkXmitQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkXmitQueueDepth.setStatus('current')
cSpLinkXmitQueueDepthHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 57), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSpLinkXmitQueueDepthHigh.setStatus('current')
cSpLinkXmitQueueDepthHighReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 58), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkXmitQueueDepthHighReset.setStatus('current')
cSpLinkCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 59), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionState.setStatus('current')
cSpLinkCongestionAbate1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 60), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionAbate1.setStatus('current')
cSpLinkCongestionAbate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 61), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionAbate2.setStatus('current')
cSpLinkCongestionAbate3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionAbate3.setStatus('current')
cSpLinkCongestionOnset1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 63), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionOnset1.setStatus('current')
cSpLinkCongestionOnset2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 64), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionOnset2.setStatus('current')
cSpLinkCongestionOnset3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 65), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkCongestionOnset3.setStatus('current')
cSpLinkSigLinkTest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 66), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkSigLinkTest.setStatus('current')
cSpLinkQ752T1E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 67), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E1.setStatus('current')
cSpLinkQ752T1E2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E2.setStatus('current')
cSpLinkQ752T1E3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E3.setStatus('current')
cSpLinkQ752T1E4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E4.setStatus('current')
cSpLinkQ752T1E5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E5.setStatus('current')
cSpLinkQ752T1E6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E6.setStatus('current')
cSpLinkQ752T1E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E7.setStatus('current')
cSpLinkQ752T1E8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E8.setStatus('current')
cSpLinkQ752T1E9 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E9.setStatus('current')
cSpLinkQ752T1E10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E10.setStatus('current')
cSpLinkQ752T1E11 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T1E11.setStatus('current')
cSpLinkQ752T2E1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 78), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E1.setStatus('current')
cSpLinkQ752T2E5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 79), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E5.setStatus('current')
cSpLinkQ752T2E6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 80), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E6.setStatus('current')
cSpLinkQ752T2E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 81), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E7.setStatus('current')
cSpLinkQ752T2E9 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 82), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E9.setStatus('current')
cSpLinkQ752T2E10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E10.setStatus('current')
cSpLinkQ752T2E15 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 84), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E15.setStatus('current')
cSpLinkQ752T2E16 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E16.setStatus('current')
cSpLinkQ752T2E18 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T2E18.setStatus('current')
cSpLinkMtp3PacketsRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 87), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3PacketsRetrans.setStatus('current')
cSpLinkMtp3BytesRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 88), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkMtp3BytesRetrans.setStatus('current')
cSpLinkQ752T3E6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 89), Counter32()).setUnits('events').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E6.setStatus('current')
cSpLinkQ752T3E7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 90), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E7.setStatus('current')
cSpLinkQ752T3E10L1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 91), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E10L1.setStatus('current')
cSpLinkQ752T3E10L2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 92), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E10L2.setStatus('current')
cSpLinkQ752T3E10L3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 93), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E10L3.setStatus('current')
cSpLinkQ752T3E11L1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 94), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E11L1.setStatus('current')
cSpLinkQ752T3E11L2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 95), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E11L2.setStatus('current')
cSpLinkQ752T3E11L3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 3, 1, 1, 96), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpLinkQ752T3E11L3.setStatus('current')
cSpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1), )
if mibBuilder.loadTexts: cSpRouteTable.setStatus('current')
cSpRouteTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-SP-MIB", "cSpRouteTableName"), (0, "CISCO-SP-MIB", "cSpRouteDpc"), (0, "CISCO-SP-MIB", "cSpRouteDestLsCost"), (0, "CISCO-SP-MIB", "cSpRouteDestLinkset"), (0, "CISCO-SP-MIB", "cSpRouteMask"))
if mibBuilder.loadTexts: cSpRouteTableEntry.setStatus('current')
cSpRouteTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1, 1), CSpRouteTableName())
if mibBuilder.loadTexts: cSpRouteTableName.setStatus('current')
cSpRouteDpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1, 2), CSpPointCode())
if mibBuilder.loadTexts: cSpRouteDpc.setStatus('current')
cSpRouteDestLsCost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)))
if mibBuilder.loadTexts: cSpRouteDestLsCost.setStatus('current')
cSpRouteDestLinkset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1, 4), CSpLinksetId())
if mibBuilder.loadTexts: cSpRouteDestLinkset.setStatus('current')
cSpRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1, 5), Unsigned32())
if mibBuilder.loadTexts: cSpRouteMask.setStatus('current')
cSpRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 4, 1, 1, 6), CSpRouteStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpRouteStatus.setStatus('current')
cSpAclTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1), )
if mibBuilder.loadTexts: cSpAclTable.setStatus('current')
cSpAclTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SP-MIB", "cSpAclId"), (0, "CISCO-SP-MIB", "cSpAclEntryNumber"))
if mibBuilder.loadTexts: cSpAclTableEntry.setStatus('current')
cSpAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 1), CSpAclId())
if mibBuilder.loadTexts: cSpAclId.setStatus('current')
cSpAclEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cSpAclEntryNumber.setStatus('current')
cSpAclType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dpc", 1), ("opc", 2), ("pattern", 3), ("sio", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclType.setStatus('current')
cSpAclDpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 4), CSpPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclDpc.setStatus('current')
cSpAclDpcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclDpcMask.setStatus('current')
cSpAclOpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 6), CSpPointCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclOpc.setStatus('current')
cSpAclOpcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclOpcMask.setStatus('current')
cSpAclSi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 8), CSpAclSi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclSi.setStatus('current')
cSpAclPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclPattern.setStatus('current')
cSpAclOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclOffset.setStatus('current')
cSpAclAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 5, 1, 1, 11), CSpAclAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAclAction.setStatus('current')
cSpAccountingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1), )
if mibBuilder.loadTexts: cSpAccountingTable.setStatus('current')
cSpAccountingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-SP-MIB", "cSpAccTableId"), (0, "CISCO-SP-MIB", "cSpLinksetName"), (0, "CISCO-SP-MIB", "cSpAccDpc"), (0, "CISCO-SP-MIB", "cSpAccOpc"))
if mibBuilder.loadTexts: cSpAccountingTableEntry.setStatus('current')
cSpAccTableId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passed", 1), ("violation", 2))))
if mibBuilder.loadTexts: cSpAccTableId.setStatus('current')
cSpAccDpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 2), CSpPointCode())
if mibBuilder.loadTexts: cSpAccDpc.setStatus('current')
cSpAccOpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 3), CSpPointCode())
if mibBuilder.loadTexts: cSpAccOpc.setStatus('current')
cSpAccRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccRcvdPackets.setStatus('current')
cSpAccHCRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCRcvdPackets.setStatus('current')
cSpAccSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSentPackets.setStatus('current')
cSpAccHCSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 7), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSentPackets.setStatus('current')
cSpAccRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccRcvdBytes.setStatus('current')
cSpAccHCRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCRcvdBytes.setStatus('current')
cSpAccSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 10), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSentBytes.setStatus('current')
cSpAccHCSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 11), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSentBytes.setStatus('current')
cSpAccSnmmRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSnmmRcvdPackets.setStatus('current')
cSpAccHCSnmmRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSnmmRcvdPackets.setStatus('current')
cSpAccSnmmRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 14), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSnmmRcvdBytes.setStatus('current')
cSpAccHCSnmmRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSnmmRcvdBytes.setStatus('current')
cSpAccSnmmSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSnmmSentPackets.setStatus('current')
cSpAccHCSnmmSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSnmmSentPackets.setStatus('current')
cSpAccSnmmSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 18), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSnmmSentBytes.setStatus('current')
cSpAccHCSnmmSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSnmmSentBytes.setStatus('current')
cSpAccSntmRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSntmRcvdPackets.setStatus('current')
cSpAccHCSntmRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 21), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSntmRcvdPackets.setStatus('current')
cSpAccSntmRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 22), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSntmRcvdBytes.setStatus('current')
cSpAccHCSntmRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 23), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSntmRcvdBytes.setStatus('current')
cSpAccSntmSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 24), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSntmSentPackets.setStatus('current')
cSpAccHCSntmSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 25), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSntmSentPackets.setStatus('current')
cSpAccSntmSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 26), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSntmSentBytes.setStatus('current')
cSpAccHCSntmSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 27), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSntmSentBytes.setStatus('current')
cSpAccSpare2RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 28), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare2RcvdPackets.setStatus('current')
cSpAccHCSpare2RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare2RcvdPackets.setStatus('current')
cSpAccSpare2RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 30), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare2RcvdBytes.setStatus('current')
cSpAccHCSpare2RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare2RcvdBytes.setStatus('current')
cSpAccSpare2SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 32), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare2SentPackets.setStatus('current')
cSpAccHCSpare2SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 33), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare2SentPackets.setStatus('current')
cSpAccSpare2SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 34), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare2SentBytes.setStatus('current')
cSpAccHCSpare2SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 35), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare2SentBytes.setStatus('current')
cSpAccSccpRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 36), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSccpRcvdPackets.setStatus('current')
cSpAccHCSccpRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 37), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSccpRcvdPackets.setStatus('current')
cSpAccSccpRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 38), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSccpRcvdBytes.setStatus('current')
cSpAccHCSccpRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 39), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSccpRcvdBytes.setStatus('current')
cSpAccSccpSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 40), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSccpSentPackets.setStatus('current')
cSpAccHCSccpSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 41), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSccpSentPackets.setStatus('current')
cSpAccSccpSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 42), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSccpSentBytes.setStatus('current')
cSpAccHCSccpSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 43), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSccpSentBytes.setStatus('current')
cSpAccTupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 44), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccTupRcvdPackets.setStatus('current')
cSpAccHCTupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 45), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCTupRcvdPackets.setStatus('current')
cSpAccTupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 46), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccTupRcvdBytes.setStatus('current')
cSpAccHCTupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 47), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCTupRcvdBytes.setStatus('current')
cSpAccTupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 48), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccTupSentPackets.setStatus('current')
cSpAccHCTupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 49), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCTupSentPackets.setStatus('current')
cSpAccTupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 50), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccTupSentBytes.setStatus('current')
cSpAccHCTupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 51), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCTupSentBytes.setStatus('current')
cSpAccIsupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 52), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccIsupRcvdPackets.setStatus('current')
cSpAccHCIsupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 53), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCIsupRcvdPackets.setStatus('current')
cSpAccIsupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 54), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccIsupRcvdBytes.setStatus('current')
cSpAccHCIsupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 55), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCIsupRcvdBytes.setStatus('current')
cSpAccIsupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 56), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccIsupSentPackets.setStatus('current')
cSpAccHCIsupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 57), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCIsupSentPackets.setStatus('current')
cSpAccIsupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 58), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccIsupSentBytes.setStatus('current')
cSpAccHCIsupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 59), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCIsupSentBytes.setStatus('current')
cSpAccDupcRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 60), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupcRcvdPackets.setStatus('current')
cSpAccHCDupcRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 61), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupcRcvdPackets.setStatus('current')
cSpAccDupcRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 62), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupcRcvdBytes.setStatus('current')
cSpAccHCDupcRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 63), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupcRcvdBytes.setStatus('current')
cSpAccDupcSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 64), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupcSentPackets.setStatus('current')
cSpAccHCDupcSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 65), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupcSentPackets.setStatus('current')
cSpAccDupcSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 66), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupcSentBytes.setStatus('current')
cSpAccHCDupcSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 67), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupcSentBytes.setStatus('current')
cSpAccDupfRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 68), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupfRcvdPackets.setStatus('current')
cSpAccHCDupfRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 69), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupfRcvdPackets.setStatus('current')
cSpAccDupfRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 70), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupfRcvdBytes.setStatus('current')
cSpAccHCDupfRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 71), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupfRcvdBytes.setStatus('current')
cSpAccDupfSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 72), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupfSentPackets.setStatus('current')
cSpAccHCDupfSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 73), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupfSentPackets.setStatus('current')
cSpAccDupfSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 74), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccDupfSentBytes.setStatus('current')
cSpAccHCDupfSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 75), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCDupfSentBytes.setStatus('current')
cSpAccMtupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 76), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccMtupRcvdPackets.setStatus('current')
cSpAccHCMtupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 77), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCMtupRcvdPackets.setStatus('current')
cSpAccMtupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 78), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccMtupRcvdBytes.setStatus('current')
cSpAccHCMtupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 79), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCMtupRcvdBytes.setStatus('current')
cSpAccMtupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 80), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccMtupSentPackets.setStatus('current')
cSpAccHCMtupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 81), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCMtupSentPackets.setStatus('current')
cSpAccMtupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 82), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccMtupSentBytes.setStatus('current')
cSpAccHCMtupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 83), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCMtupSentBytes.setStatus('current')
cSpAccBisupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 84), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccBisupRcvdPackets.setStatus('current')
cSpAccHCBisupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 85), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCBisupRcvdPackets.setStatus('current')
cSpAccBisupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 86), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccBisupRcvdBytes.setStatus('current')
cSpAccHCBisupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 87), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCBisupRcvdBytes.setStatus('current')
cSpAccBisupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 88), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccBisupSentPackets.setStatus('current')
cSpAccHCBisupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 89), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCBisupSentPackets.setStatus('current')
cSpAccBisupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 90), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccBisupSentBytes.setStatus('current')
cSpAccHCBisupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 91), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCBisupSentBytes.setStatus('current')
cSpAccSisupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 92), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSisupRcvdPackets.setStatus('current')
cSpAccHCSisupRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 93), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSisupRcvdPackets.setStatus('current')
cSpAccSisupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 94), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSisupRcvdBytes.setStatus('current')
cSpAccHCSisupRcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 95), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSisupRcvdBytes.setStatus('current')
cSpAccSisupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 96), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSisupSentPackets.setStatus('current')
cSpAccHCSisupSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 97), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSisupSentPackets.setStatus('current')
cSpAccSisupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 98), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSisupSentBytes.setStatus('current')
cSpAccHCSisupSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 99), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSisupSentBytes.setStatus('current')
cSpAccSpare11RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 100), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare11RcvdPackets.setStatus('current')
cSpAccHCSpare11RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 101), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare11RcvdPackets.setStatus('current')
cSpAccSpare11RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 102), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare11RcvdBytes.setStatus('current')
cSpAccHCSpare11RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 103), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare11RcvdBytes.setStatus('current')
cSpAccSpare11SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 104), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare11SentPackets.setStatus('current')
cSpAccHCSpare11SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 105), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare11SentPackets.setStatus('current')
cSpAccSpare11SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 106), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare11SentBytes.setStatus('current')
cSpAccHCSpare11SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 107), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare11SentBytes.setStatus('current')
cSpAccSpare12RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 108), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare12RcvdPackets.setStatus('current')
cSpAccHCSpare12RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 109), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare12RcvdPackets.setStatus('current')
cSpAccSpare12RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 110), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare12RcvdBytes.setStatus('current')
cSpAccHCSpare12RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 111), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare12RcvdBytes.setStatus('current')
cSpAccSpare12SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 112), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare12SentPackets.setStatus('current')
cSpAccHCSpare12SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 113), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare12SentPackets.setStatus('current')
cSpAccSpare12SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 114), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare12SentBytes.setStatus('current')
cSpAccHCSpare12SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 115), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare12SentBytes.setStatus('current')
cSpAccSpare13RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 116), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare13RcvdPackets.setStatus('current')
cSpAccHCSpare13RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 117), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare13RcvdPackets.setStatus('current')
cSpAccSpare13RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 118), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare13RcvdBytes.setStatus('current')
cSpAccHCSpare13RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 119), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare13RcvdBytes.setStatus('current')
cSpAccSpare13SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 120), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare13SentPackets.setStatus('current')
cSpAccHCSpare13SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 121), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare13SentPackets.setStatus('current')
cSpAccSpare13SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 122), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare13SentBytes.setStatus('current')
cSpAccHCSpare13SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 123), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare13SentBytes.setStatus('current')
cSpAccSpare14RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 124), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare14RcvdPackets.setStatus('current')
cSpAccHCSpare14RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 125), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare14RcvdPackets.setStatus('current')
cSpAccSpare14RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 126), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare14RcvdBytes.setStatus('current')
cSpAccHCSpare14RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 127), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare14RcvdBytes.setStatus('current')
cSpAccSpare14SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 128), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare14SentPackets.setStatus('current')
cSpAccHCSpare14SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 129), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare14SentPackets.setStatus('current')
cSpAccSpare14SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 130), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare14SentBytes.setStatus('current')
cSpAccHCSpare14SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 131), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare14SentBytes.setStatus('current')
cSpAccSpare15RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 132), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare15RcvdPackets.setStatus('current')
cSpAccHCSpare15RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 133), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare15RcvdPackets.setStatus('current')
cSpAccSpare15RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 134), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare15RcvdBytes.setStatus('current')
cSpAccHCSpare15RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 135), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare15RcvdBytes.setStatus('current')
cSpAccSpare15SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 136), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare15SentPackets.setStatus('current')
cSpAccHCSpare15SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 137), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare15SentPackets.setStatus('current')
cSpAccSpare15SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 138), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccSpare15SentBytes.setStatus('current')
cSpAccHCSpare15SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 6, 1, 1, 139), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cSpAccHCSpare15SentBytes.setStatus('current')
cSpLsStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 7, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSpLsStateChangeNotifEnabled.setStatus('current')
cSpLnkStateChangeNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 73, 1, 7, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSpLnkStateChangeNotifEnabled.setStatus('current')
ciscoSpMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 2))
ciscoSpMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 2, 0))
ciscoSpLinksetStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 73, 2, 0, 1)).setObjects(("CISCO-SP-MIB", "cSpLinksetState"))
if mibBuilder.loadTexts: ciscoSpLinksetStateChange.setStatus('current')
ciscoSpLinkStateChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 73, 2, 0, 2)).setObjects(("CISCO-SP-MIB", "cSpLinkState"))
if mibBuilder.loadTexts: ciscoSpLinkStateChange.setStatus('current')
ciscoSpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 3))
ciscoSpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 1))
ciscoSpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2))
ciscoSpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 1, 1)).setObjects(("CISCO-SP-MIB", "ciscoSpSwitchGroup"), ("CISCO-SP-MIB", "ciscoSpLinksetGroup"), ("CISCO-SP-MIB", "ciscoSpLinkGroup"), ("CISCO-SP-MIB", "ciscoSpRouteGroup"), ("CISCO-SP-MIB", "ciscoSpAccessListGroup"), ("CISCO-SP-MIB", "ciscoSpAccountingGroup"), ("CISCO-SP-MIB", "ciscoSpNotificationsEnableGroup"), ("CISCO-SP-MIB", "ciscoSpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpMIBCompliance = ciscoSpMIBCompliance.setStatus('current')
ciscoSpSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 1)).setObjects(("CISCO-SP-MIB", "cSpPointCode"), ("CISCO-SP-MIB", "cSpSs7Variant"), ("CISCO-SP-MIB", "cSpMtp2T01"), ("CISCO-SP-MIB", "cSpMtp2T02"), ("CISCO-SP-MIB", "cSpMtp2T03"), ("CISCO-SP-MIB", "cSpMtp2T4N"), ("CISCO-SP-MIB", "cSpMtp2T4E"), ("CISCO-SP-MIB", "cSpMtp2T05"), ("CISCO-SP-MIB", "cSpMtp2T06"), ("CISCO-SP-MIB", "cSpMtp2T07"), ("CISCO-SP-MIB", "cSpMtp2T08"), ("CISCO-SP-MIB", "cSpMtp3T01"), ("CISCO-SP-MIB", "cSpMtp3T02"), ("CISCO-SP-MIB", "cSpMtp3T03"), ("CISCO-SP-MIB", "cSpMtp3T04"), ("CISCO-SP-MIB", "cSpMtp3T05"), ("CISCO-SP-MIB", "cSpMtp3T06"), ("CISCO-SP-MIB", "cSpMtp3T07"), ("CISCO-SP-MIB", "cSpMtp3T08"), ("CISCO-SP-MIB", "cSpMtp3T10"), ("CISCO-SP-MIB", "cSpMtp3T11"), ("CISCO-SP-MIB", "cSpMtp3T12"), ("CISCO-SP-MIB", "cSpMtp3T13"), ("CISCO-SP-MIB", "cSpMtp3T14"), ("CISCO-SP-MIB", "cSpMtp3T15"), ("CISCO-SP-MIB", "cSpMtp3T16"), ("CISCO-SP-MIB", "cSpMtp3T17"), ("CISCO-SP-MIB", "cSpMtp3T18"), ("CISCO-SP-MIB", "cSpMtp3T19"), ("CISCO-SP-MIB", "cSpMtp3T20"), ("CISCO-SP-MIB", "cSpMtp3T21"), ("CISCO-SP-MIB", "cSpMtp3T22"), ("CISCO-SP-MIB", "cSpMtp3T23"), ("CISCO-SP-MIB", "cSpMtp3T24"), ("CISCO-SP-MIB", "cSpMtp3T25"), ("CISCO-SP-MIB", "cSpMtp3T26"), ("CISCO-SP-MIB", "cSpMtp3T27"), ("CISCO-SP-MIB", "cSpMtp3T28"), ("CISCO-SP-MIB", "cSpMtp3T29"), ("CISCO-SP-MIB", "cSpMtp3T30"), ("CISCO-SP-MIB", "cSpMtp3T31"), ("CISCO-SP-MIB", "cSpMtp3T32"), ("CISCO-SP-MIB", "cSpMtp3T33"), ("CISCO-SP-MIB", "cSpMtp3T34"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpSwitchGroup = ciscoSpSwitchGroup.setStatus('current')
ciscoSpLinksetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 2)).setObjects(("CISCO-SP-MIB", "cSpLinksetAdjacentPointCode"), ("CISCO-SP-MIB", "cSpLinksetState"), ("CISCO-SP-MIB", "cSpLinksetInboundAcl"), ("CISCO-SP-MIB", "cSpLinksetOutboundAcl"), ("CISCO-SP-MIB", "cSpLinksetSnmmRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSntmRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSpare2RouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSccpRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetTupRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetIsupRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetDupcRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetDupfRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetMtupRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetBisupRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSisupRouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSpare11RouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSpare12RouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSpare13RouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSpare14RouteTableName"), ("CISCO-SP-MIB", "cSpLinksetSpare15RouteTableName"), ("CISCO-SP-MIB", "cSpLinksetAccountingEnabled"), ("CISCO-SP-MIB", "cSpLinksetNumLinks"), ("CISCO-SP-MIB", "cSpLinksetPacketsSent"), ("CISCO-SP-MIB", "cSpLinksetHCPacketsSent"), ("CISCO-SP-MIB", "cSpLinksetPacketsRcvd"), ("CISCO-SP-MIB", "cSpLinksetHCPacketsRcvd"), ("CISCO-SP-MIB", "cSpLinksetBytesSent"), ("CISCO-SP-MIB", "cSpLinksetHCBytesSent"), ("CISCO-SP-MIB", "cSpLinksetBytesRcvd"), ("CISCO-SP-MIB", "cSpLinksetHCBytesRcvd"), ("CISCO-SP-MIB", "cSpLinksetDurationInService"), ("CISCO-SP-MIB", "cSpLinksetDurationOutService"), ("CISCO-SP-MIB", "cSpLinksetMtp2T01"), ("CISCO-SP-MIB", "cSpLinksetMtp2T02"), ("CISCO-SP-MIB", "cSpLinksetMtp2T03"), ("CISCO-SP-MIB", "cSpLinksetMtp2T4N"), ("CISCO-SP-MIB", "cSpLinksetMtp2T4E"), ("CISCO-SP-MIB", "cSpLinksetMtp2T05"), ("CISCO-SP-MIB", "cSpLinksetMtp2T06"), ("CISCO-SP-MIB", "cSpLinksetMtp2T07"), ("CISCO-SP-MIB", "cSpLinksetMtp2T08"), ("CISCO-SP-MIB", "cSpLinksetMtp3T01"), ("CISCO-SP-MIB", "cSpLinksetMtp3T02"), ("CISCO-SP-MIB", "cSpLinksetMtp3T03"), ("CISCO-SP-MIB", "cSpLinksetMtp3T04"), ("CISCO-SP-MIB", "cSpLinksetMtp3T05"), ("CISCO-SP-MIB", "cSpLinksetMtp3T06"), ("CISCO-SP-MIB", "cSpLinksetMtp3T07"), ("CISCO-SP-MIB", "cSpLinksetMtp3T08"), ("CISCO-SP-MIB", "cSpLinksetMtp3T10"), ("CISCO-SP-MIB", "cSpLinksetMtp3T11"), ("CISCO-SP-MIB", "cSpLinksetMtp3T12"), ("CISCO-SP-MIB", "cSpLinksetMtp3T13"), ("CISCO-SP-MIB", "cSpLinksetMtp3T14"), ("CISCO-SP-MIB", "cSpLinksetMtp3T15"), ("CISCO-SP-MIB", "cSpLinksetMtp3T16"), ("CISCO-SP-MIB", "cSpLinksetMtp3T17"), ("CISCO-SP-MIB", "cSpLinksetMtp3T18"), ("CISCO-SP-MIB", "cSpLinksetMtp3T19"), ("CISCO-SP-MIB", "cSpLinksetMtp3T20"), ("CISCO-SP-MIB", "cSpLinksetMtp3T21"), ("CISCO-SP-MIB", "cSpLinksetMtp3T22"), ("CISCO-SP-MIB", "cSpLinksetMtp3T23"), ("CISCO-SP-MIB", "cSpLinksetMtp3T24"), ("CISCO-SP-MIB", "cSpLinksetMtp3T25"), ("CISCO-SP-MIB", "cSpLinksetMtp3T26"), ("CISCO-SP-MIB", "cSpLinksetMtp3T27"), ("CISCO-SP-MIB", "cSpLinksetMtp3T28"), ("CISCO-SP-MIB", "cSpLinksetMtp3T29"), ("CISCO-SP-MIB", "cSpLinksetMtp3T30"), ("CISCO-SP-MIB", "cSpLinksetMtp3T31"), ("CISCO-SP-MIB", "cSpLinksetMtp3T32"), ("CISCO-SP-MIB", "cSpLinksetMtp3T33"), ("CISCO-SP-MIB", "cSpLinksetMtp3T34"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpLinksetGroup = ciscoSpLinksetGroup.setStatus('current')
ciscoSpLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 3)).setObjects(("CISCO-SP-MIB", "cSpLinkState"), ("CISCO-SP-MIB", "cSpLinkType"), ("CISCO-SP-MIB", "cSpLinkifIndex"), ("CISCO-SP-MIB", "cSpLinkSctpAssociation"), ("CISCO-SP-MIB", "cSpLinkMtp3PacketsRcvd"), ("CISCO-SP-MIB", "cSpLinkMtp3PacketsSent"), ("CISCO-SP-MIB", "cSpLinkHCMtp3PacketsRcvd"), ("CISCO-SP-MIB", "cSpLinkHCMtp3PacketsSent"), ("CISCO-SP-MIB", "cSpLinkMtp3BytesRcvd"), ("CISCO-SP-MIB", "cSpLinkMtp3BytesSent"), ("CISCO-SP-MIB", "cSpLinkHCMtp3BytesRcvd"), ("CISCO-SP-MIB", "cSpLinkHCMtp3BytesSent"), ("CISCO-SP-MIB", "cSpLinkMtp2T01"), ("CISCO-SP-MIB", "cSpLinkMtp2T02"), ("CISCO-SP-MIB", "cSpLinkMtp2T03"), ("CISCO-SP-MIB", "cSpLinkMtp2T4N"), ("CISCO-SP-MIB", "cSpLinkMtp2T4E"), ("CISCO-SP-MIB", "cSpLinkMtp2T05"), ("CISCO-SP-MIB", "cSpLinkMtp2T06"), ("CISCO-SP-MIB", "cSpLinkMtp2T07"), ("CISCO-SP-MIB", "cSpLinkMtp2T08"), ("CISCO-SP-MIB", "cSpLinkMtp3T01"), ("CISCO-SP-MIB", "cSpLinkMtp3T02"), ("CISCO-SP-MIB", "cSpLinkMtp3T03"), ("CISCO-SP-MIB", "cSpLinkMtp3T04"), ("CISCO-SP-MIB", "cSpLinkMtp3T05"), ("CISCO-SP-MIB", "cSpLinkMtp3T06"), ("CISCO-SP-MIB", "cSpLinkMtp3T07"), ("CISCO-SP-MIB", "cSpLinkMtp3T08"), ("CISCO-SP-MIB", "cSpLinkMtp3T10"), ("CISCO-SP-MIB", "cSpLinkMtp3T11"), ("CISCO-SP-MIB", "cSpLinkMtp3T12"), ("CISCO-SP-MIB", "cSpLinkMtp3T13"), ("CISCO-SP-MIB", "cSpLinkMtp3T14"), ("CISCO-SP-MIB", "cSpLinkMtp3T15"), ("CISCO-SP-MIB", "cSpLinkMtp3T16"), ("CISCO-SP-MIB", "cSpLinkMtp3T17"), ("CISCO-SP-MIB", "cSpLinkMtp3T18"), ("CISCO-SP-MIB", "cSpLinkMtp3T19"), ("CISCO-SP-MIB", "cSpLinkMtp3T20"), ("CISCO-SP-MIB", "cSpLinkMtp3T21"), ("CISCO-SP-MIB", "cSpLinkMtp3T22"), ("CISCO-SP-MIB", "cSpLinkMtp3T23"), ("CISCO-SP-MIB", "cSpLinkMtp3T24"), ("CISCO-SP-MIB", "cSpLinkMtp3T25"), ("CISCO-SP-MIB", "cSpLinkMtp3T26"), ("CISCO-SP-MIB", "cSpLinkMtp3T27"), ("CISCO-SP-MIB", "cSpLinkMtp3T28"), ("CISCO-SP-MIB", "cSpLinkMtp3T29"), ("CISCO-SP-MIB", "cSpLinkMtp3T30"), ("CISCO-SP-MIB", "cSpLinkMtp3T31"), ("CISCO-SP-MIB", "cSpLinkMtp3T32"), ("CISCO-SP-MIB", "cSpLinkMtp3T33"), ("CISCO-SP-MIB", "cSpLinkMtp3T34"), ("CISCO-SP-MIB", "cSpLinkXmitQueueDepth"), ("CISCO-SP-MIB", "cSpLinkXmitQueueDepthHigh"), ("CISCO-SP-MIB", "cSpLinkXmitQueueDepthHighReset"), ("CISCO-SP-MIB", "cSpLinkCongestionState"), ("CISCO-SP-MIB", "cSpLinkCongestionAbate1"), ("CISCO-SP-MIB", "cSpLinkCongestionAbate2"), ("CISCO-SP-MIB", "cSpLinkCongestionAbate3"), ("CISCO-SP-MIB", "cSpLinkCongestionOnset1"), ("CISCO-SP-MIB", "cSpLinkCongestionOnset2"), ("CISCO-SP-MIB", "cSpLinkCongestionOnset3"), ("CISCO-SP-MIB", "cSpLinkSigLinkTest"), ("CISCO-SP-MIB", "cSpLinkQ752T1E1"), ("CISCO-SP-MIB", "cSpLinkQ752T1E2"), ("CISCO-SP-MIB", "cSpLinkQ752T1E3"), ("CISCO-SP-MIB", "cSpLinkQ752T1E4"), ("CISCO-SP-MIB", "cSpLinkQ752T1E5"), ("CISCO-SP-MIB", "cSpLinkQ752T1E6"), ("CISCO-SP-MIB", "cSpLinkQ752T1E7"), ("CISCO-SP-MIB", "cSpLinkQ752T1E8"), ("CISCO-SP-MIB", "cSpLinkQ752T1E9"), ("CISCO-SP-MIB", "cSpLinkQ752T1E10"), ("CISCO-SP-MIB", "cSpLinkQ752T1E11"), ("CISCO-SP-MIB", "cSpLinkQ752T2E1"), ("CISCO-SP-MIB", "cSpLinkQ752T2E5"), ("CISCO-SP-MIB", "cSpLinkQ752T2E6"), ("CISCO-SP-MIB", "cSpLinkQ752T2E7"), ("CISCO-SP-MIB", "cSpLinkQ752T2E9"), ("CISCO-SP-MIB", "cSpLinkQ752T2E10"), ("CISCO-SP-MIB", "cSpLinkQ752T2E15"), ("CISCO-SP-MIB", "cSpLinkQ752T2E16"), ("CISCO-SP-MIB", "cSpLinkQ752T2E18"), ("CISCO-SP-MIB", "cSpLinkMtp3PacketsRetrans"), ("CISCO-SP-MIB", "cSpLinkMtp3BytesRetrans"), ("CISCO-SP-MIB", "cSpLinkQ752T3E6"), ("CISCO-SP-MIB", "cSpLinkQ752T3E7"), ("CISCO-SP-MIB", "cSpLinkQ752T3E10L1"), ("CISCO-SP-MIB", "cSpLinkQ752T3E10L2"), ("CISCO-SP-MIB", "cSpLinkQ752T3E10L3"), ("CISCO-SP-MIB", "cSpLinkQ752T3E11L1"), ("CISCO-SP-MIB", "cSpLinkQ752T3E11L2"), ("CISCO-SP-MIB", "cSpLinkQ752T3E11L3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpLinkGroup = ciscoSpLinkGroup.setStatus('current')
ciscoSpRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 4)).setObjects(("CISCO-SP-MIB", "cSpRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpRouteGroup = ciscoSpRouteGroup.setStatus('current')
ciscoSpAccessListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 5)).setObjects(("CISCO-SP-MIB", "cSpAclType"), ("CISCO-SP-MIB", "cSpAclDpc"), ("CISCO-SP-MIB", "cSpAclDpcMask"), ("CISCO-SP-MIB", "cSpAclOpc"), ("CISCO-SP-MIB", "cSpAclOpcMask"), ("CISCO-SP-MIB", "cSpAclSi"), ("CISCO-SP-MIB", "cSpAclPattern"), ("CISCO-SP-MIB", "cSpAclOffset"), ("CISCO-SP-MIB", "cSpAclAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpAccessListGroup = ciscoSpAccessListGroup.setStatus('current')
ciscoSpAccountingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 6)).setObjects(("CISCO-SP-MIB", "cSpAccRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCRcvdPackets"), ("CISCO-SP-MIB", "cSpAccSentPackets"), ("CISCO-SP-MIB", "cSpAccHCSentPackets"), ("CISCO-SP-MIB", "cSpAccRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCRcvdBytes"), ("CISCO-SP-MIB", "cSpAccSentBytes"), ("CISCO-SP-MIB", "cSpAccHCSentBytes"), ("CISCO-SP-MIB", "cSpAccSnmmRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSnmmRcvdPackets"), ("CISCO-SP-MIB", "cSpAccSnmmRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSnmmRcvdBytes"), ("CISCO-SP-MIB", "cSpAccSnmmSentPackets"), ("CISCO-SP-MIB", "cSpAccHCSnmmSentPackets"), ("CISCO-SP-MIB", "cSpAccSnmmSentBytes"), ("CISCO-SP-MIB", "cSpAccHCSnmmSentBytes"), ("CISCO-SP-MIB", "cSpAccSntmRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSntmRcvdPackets"), ("CISCO-SP-MIB", "cSpAccSntmRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSntmRcvdBytes"), ("CISCO-SP-MIB", "cSpAccSntmSentPackets"), ("CISCO-SP-MIB", "cSpAccHCSntmSentPackets"), ("CISCO-SP-MIB", "cSpAccSntmSentBytes"), ("CISCO-SP-MIB", "cSpAccHCSntmSentBytes"), ("CISCO-SP-MIB", "cSpAccSpare2RcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare2RcvdPackets"), ("CISCO-SP-MIB", "cSpAccSpare2RcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare2RcvdBytes"), ("CISCO-SP-MIB", "cSpAccSpare2SentPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare2SentPackets"), ("CISCO-SP-MIB", "cSpAccSpare2SentBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare2SentBytes"), ("CISCO-SP-MIB", "cSpAccSccpRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSccpRcvdPackets"), ("CISCO-SP-MIB", "cSpAccSccpRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSccpRcvdBytes"), ("CISCO-SP-MIB", "cSpAccSccpSentPackets"), ("CISCO-SP-MIB", "cSpAccHCSccpSentPackets"), ("CISCO-SP-MIB", "cSpAccSccpSentBytes"), ("CISCO-SP-MIB", "cSpAccHCSccpSentBytes"), ("CISCO-SP-MIB", "cSpAccTupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCTupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccTupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCTupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccTupSentPackets"), ("CISCO-SP-MIB", "cSpAccHCTupSentPackets"), ("CISCO-SP-MIB", "cSpAccTupSentBytes"), ("CISCO-SP-MIB", "cSpAccHCTupSentBytes"), ("CISCO-SP-MIB", "cSpAccIsupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCIsupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccIsupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCIsupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccIsupSentPackets"), ("CISCO-SP-MIB", "cSpAccHCIsupSentPackets"), ("CISCO-SP-MIB", "cSpAccIsupSentBytes"), ("CISCO-SP-MIB", "cSpAccHCIsupSentBytes"), ("CISCO-SP-MIB", "cSpAccDupcRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCDupcRcvdPackets"), ("CISCO-SP-MIB", "cSpAccDupcRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCDupcRcvdBytes"), ("CISCO-SP-MIB", "cSpAccDupcSentPackets"), ("CISCO-SP-MIB", "cSpAccHCDupcSentPackets"), ("CISCO-SP-MIB", "cSpAccDupcSentBytes"), ("CISCO-SP-MIB", "cSpAccHCDupcSentBytes"), ("CISCO-SP-MIB", "cSpAccDupfRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCDupfRcvdPackets"), ("CISCO-SP-MIB", "cSpAccDupfRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCDupfRcvdBytes"), ("CISCO-SP-MIB", "cSpAccDupfSentPackets"), ("CISCO-SP-MIB", "cSpAccHCDupfSentPackets"), ("CISCO-SP-MIB", "cSpAccDupfSentBytes"), ("CISCO-SP-MIB", "cSpAccHCDupfSentBytes"), ("CISCO-SP-MIB", "cSpAccMtupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCMtupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccMtupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCMtupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccMtupSentPackets"), ("CISCO-SP-MIB", "cSpAccHCMtupSentPackets"), ("CISCO-SP-MIB", "cSpAccMtupSentBytes"), ("CISCO-SP-MIB", "cSpAccHCMtupSentBytes"), ("CISCO-SP-MIB", "cSpAccBisupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCBisupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccBisupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCBisupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccBisupSentPackets"), ("CISCO-SP-MIB", "cSpAccHCBisupSentPackets"), ("CISCO-SP-MIB", "cSpAccBisupSentBytes"), ("CISCO-SP-MIB", "cSpAccHCBisupSentBytes"), ("CISCO-SP-MIB", "cSpAccSisupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSisupRcvdPackets"), ("CISCO-SP-MIB", "cSpAccSisupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSisupRcvdBytes"), ("CISCO-SP-MIB", "cSpAccSisupSentPackets"), ("CISCO-SP-MIB", "cSpAccHCSisupSentPackets"), ("CISCO-SP-MIB", "cSpAccSisupSentBytes"), ("CISCO-SP-MIB", "cSpAccHCSisupSentBytes"), ("CISCO-SP-MIB", "cSpAccSpare11RcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare11RcvdPackets"), ("CISCO-SP-MIB", "cSpAccSpare11RcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare11RcvdBytes"), ("CISCO-SP-MIB", "cSpAccSpare11SentPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare11SentPackets"), ("CISCO-SP-MIB", "cSpAccSpare11SentBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare11SentBytes"), ("CISCO-SP-MIB", "cSpAccSpare12RcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare12RcvdPackets"), ("CISCO-SP-MIB", "cSpAccSpare12RcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare12RcvdBytes"), ("CISCO-SP-MIB", "cSpAccSpare12SentPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare12SentPackets"), ("CISCO-SP-MIB", "cSpAccSpare12SentBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare12SentBytes"), ("CISCO-SP-MIB", "cSpAccSpare13RcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare13RcvdPackets"), ("CISCO-SP-MIB", "cSpAccSpare13RcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare13RcvdBytes"), ("CISCO-SP-MIB", "cSpAccSpare13SentPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare13SentPackets"), ("CISCO-SP-MIB", "cSpAccSpare13SentBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare13SentBytes"), ("CISCO-SP-MIB", "cSpAccSpare14RcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare14RcvdPackets"), ("CISCO-SP-MIB", "cSpAccSpare14RcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare14RcvdBytes"), ("CISCO-SP-MIB", "cSpAccSpare14SentPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare14SentPackets"), ("CISCO-SP-MIB", "cSpAccSpare14SentBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare14SentBytes"), ("CISCO-SP-MIB", "cSpAccSpare15RcvdPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare15RcvdPackets"), ("CISCO-SP-MIB", "cSpAccSpare15RcvdBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare15RcvdBytes"), ("CISCO-SP-MIB", "cSpAccSpare15SentPackets"), ("CISCO-SP-MIB", "cSpAccHCSpare15SentPackets"), ("CISCO-SP-MIB", "cSpAccSpare15SentBytes"), ("CISCO-SP-MIB", "cSpAccHCSpare15SentBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpAccountingGroup = ciscoSpAccountingGroup.setStatus('current')
ciscoSpNotificationsEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 7)).setObjects(("CISCO-SP-MIB", "cSpLsStateChangeNotifEnabled"), ("CISCO-SP-MIB", "cSpLnkStateChangeNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpNotificationsEnableGroup = ciscoSpNotificationsEnableGroup.setStatus('current')
ciscoSpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 73, 3, 2, 8)).setObjects(("CISCO-SP-MIB", "ciscoSpLinksetStateChange"), ("CISCO-SP-MIB", "ciscoSpLinkStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSpNotificationsGroup = ciscoSpNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SP-MIB", cSpAccHCSpare11SentPackets=cSpAccHCSpare11SentPackets, cSpAccSisupRcvdBytes=cSpAccSisupRcvdBytes, cSpAccHCSentBytes=cSpAccHCSentBytes, cSpMtp3T14=cSpMtp3T14, cSpLinksetOutboundAcl=cSpLinksetOutboundAcl, cSpLinkMtp3T25=cSpLinkMtp3T25, cSpMtp3T06=cSpMtp3T06, cSpLinkTableEntry=cSpLinkTableEntry, cSpLinkMtp3T07=cSpLinkMtp3T07, cSpMtp3T08=cSpMtp3T08, cSpAccDupcRcvdBytes=cSpAccDupcRcvdBytes, cSpLinkXmitQueueDepthHighReset=cSpLinkXmitQueueDepthHighReset, cSpAccHCMtupSentBytes=cSpAccHCMtupSentBytes, cSpAccessControlList=cSpAccessControlList, cSpLinkifIndex=cSpLinkifIndex, cSpAccHCRcvdPackets=cSpAccHCRcvdPackets, cSpRouteMask=cSpRouteMask, cSpMtp2T02=cSpMtp2T02, cSpAccSccpSentPackets=cSpAccSccpSentPackets, cSpMtp2T01=cSpMtp2T01, cSpAclSi=cSpAclSi, cSpAccDpc=cSpAccDpc, cSpAccSisupSentBytes=cSpAccSisupSentBytes, cSpLinksetMtp3T19=cSpLinksetMtp3T19, cSpLinksetSpare13RouteTableName=cSpLinksetSpare13RouteTableName, cSpLinksetMtp3T08=cSpLinksetMtp3T08, cSpAccSpare15SentPackets=cSpAccSpare15SentPackets, cSpAccDupfRcvdBytes=cSpAccDupfRcvdBytes, cSpAccMtupRcvdPackets=cSpAccMtupRcvdPackets, cSpLinksetMtp2T08=cSpLinksetMtp2T08, cSpLinksetMtp3T20=cSpLinksetMtp3T20, cSpAccSisupRcvdPackets=cSpAccSisupRcvdPackets, CSpLinkType=CSpLinkType, cSpLinksetSnmmRouteTableName=cSpLinksetSnmmRouteTableName, cSpLinkMtp2T03=cSpLinkMtp2T03, cSpLinkMtp3T20=cSpLinkMtp3T20, cSpLinkQ752T2E6=cSpLinkQ752T2E6, cSpMtp3T04=cSpMtp3T04, cSpAccIsupSentBytes=cSpAccIsupSentBytes, cSpAccSpare14SentBytes=cSpAccSpare14SentBytes, cSpAccHCMtupRcvdBytes=cSpAccHCMtupRcvdBytes, ciscoSpMIBCompliances=ciscoSpMIBCompliances, cSpAccHCSpare14SentPackets=cSpAccHCSpare14SentPackets, cSpLinkQ752T2E5=cSpLinkQ752T2E5, cSpAccSccpRcvdPackets=cSpAccSccpRcvdPackets, cSpLinkQ752T2E16=cSpLinkQ752T2E16, cSpAccSpare12SentBytes=cSpAccSpare12SentBytes, cSpLinkQ752T1E4=cSpLinkQ752T1E4, cSpRouteDestLinkset=cSpRouteDestLinkset, cSpAccHCDupcSentPackets=cSpAccHCDupcSentPackets, ciscoSpMIBCompliance=ciscoSpMIBCompliance, cSpLinksetSpare2RouteTableName=cSpLinksetSpare2RouteTableName, CSpRouteTableName=CSpRouteTableName, cSpLinksetMtp3T10=cSpLinksetMtp3T10, cSpMtp2T08=cSpMtp2T08, cSpLinksetMtp3T24=cSpLinksetMtp3T24, cSpMtp2T4E=cSpMtp2T4E, cSpAccHCSpare12SentPackets=cSpAccHCSpare12SentPackets, cSpLinkMtp3T10=cSpLinkMtp3T10, ciscoSpLinkStateChange=ciscoSpLinkStateChange, cSpAccHCSccpSentPackets=cSpAccHCSccpSentPackets, cSpAccHCSpare2RcvdBytes=cSpAccHCSpare2RcvdBytes, ciscoSpMIBObjects=ciscoSpMIBObjects, cSpLinkMtp3BytesSent=cSpLinkMtp3BytesSent, cSpLinksetMtp3T26=cSpLinksetMtp3T26, cSpAccHCSpare2SentBytes=cSpAccHCSpare2SentBytes, ciscoSpLinkGroup=ciscoSpLinkGroup, cSpLinksetTupRouteTableName=cSpLinksetTupRouteTableName, cSpLinksetBisupRouteTableName=cSpLinksetBisupRouteTableName, cSpLinkMtp3PacketsRetrans=cSpLinkMtp3PacketsRetrans, cSpLinksetDupfRouteTableName=cSpLinksetDupfRouteTableName, cSpAccHCSpare13RcvdBytes=cSpAccHCSpare13RcvdBytes, cSpLinkMtp3T03=cSpLinkMtp3T03, cSpLinksetMtp2T4N=cSpLinksetMtp2T4N, cSpLinkCongestionOnset3=cSpLinkCongestionOnset3, cSpLinkMtp3T19=cSpLinkMtp3T19, cSpAccHCSisupRcvdBytes=cSpAccHCSisupRcvdBytes, cSpLinkMtp3T05=cSpLinkMtp3T05, cSpNotificationsEnable=cSpNotificationsEnable, cSpAccSntmSentBytes=cSpAccSntmSentBytes, cSpAccHCSisupSentBytes=cSpAccHCSisupSentBytes, cSpAccDupfRcvdPackets=cSpAccDupfRcvdPackets, cSpAccHCDupfRcvdBytes=cSpAccHCDupfRcvdBytes, cSpRouteDpc=cSpRouteDpc, cSpAccBisupRcvdBytes=cSpAccBisupRcvdBytes, cSpLinkCongestionOnset2=cSpLinkCongestionOnset2, cSpLinksetSpare12RouteTableName=cSpLinksetSpare12RouteTableName, cSpAccDupfSentPackets=cSpAccDupfSentPackets, cSpLinksetMtp3T32=cSpLinksetMtp3T32, cSpAccSnmmRcvdPackets=cSpAccSnmmRcvdPackets, cSpLinkXmitQueueDepth=cSpLinkXmitQueueDepth, cSpAccSnmmSentBytes=cSpAccSnmmSentBytes, cSpAccBisupSentPackets=cSpAccBisupSentPackets, cSpMtp3T29=cSpMtp3T29, ciscoSpNotificationsGroup=ciscoSpNotificationsGroup, cSpMtp3T12=cSpMtp3T12, cSpRouteDestLsCost=cSpRouteDestLsCost, cSpAccSentBytes=cSpAccSentBytes, cSpAccHCSntmRcvdPackets=cSpAccHCSntmRcvdPackets, cSpRouteTable=cSpRouteTable, cSpMtp3T24=cSpMtp3T24, cSpAccSpare12RcvdPackets=cSpAccSpare12RcvdPackets, cSpLinksetPacketsRcvd=cSpLinksetPacketsRcvd, cSpAccHCSpare15SentPackets=cSpAccHCSpare15SentPackets, cSpLinkMtp3T04=cSpLinkMtp3T04, cSpLnkStateChangeNotifEnabled=cSpLnkStateChangeNotifEnabled, cSpMtp2T4N=cSpMtp2T4N, cSpMtp3T11=cSpMtp3T11, cSpAccHCDupfSentPackets=cSpAccHCDupfSentPackets, cSpMtp3T07=cSpMtp3T07, cSpAccMtupRcvdBytes=cSpAccMtupRcvdBytes, cSpLinksetMtp3T31=cSpLinksetMtp3T31, cSpAccSisupSentPackets=cSpAccSisupSentPackets, cSpLinkQ752T1E3=cSpLinkQ752T1E3, cSpLinkQ752T2E15=cSpLinkQ752T2E15, cSpLinkMtp3T23=cSpLinkMtp3T23, cSpLinksetAdjacentPointCode=cSpLinksetAdjacentPointCode, cSpLinkQ752T2E10=cSpLinkQ752T2E10, cSpLinksetDurationInService=cSpLinksetDurationInService, cSpAclAction=cSpAclAction, cSpLinksetDupcRouteTableName=cSpLinksetDupcRouteTableName, cSpAccTupRcvdBytes=cSpAccTupRcvdBytes, cSpLinksetMtp3T30=cSpLinksetMtp3T30, cSpLinkMtp2T4N=cSpLinkMtp2T4N, cSpAccSntmRcvdBytes=cSpAccSntmRcvdBytes, cSpPointCode=cSpPointCode, cSpLinkQ752T1E5=cSpLinkQ752T1E5, cSpLinkQ752T1E6=cSpLinkQ752T1E6, cSpMtp3T18=cSpMtp3T18, cSpMtp3T13=cSpMtp3T13, CSpAclSi=CSpAclSi, cSpMtp2T03=cSpMtp2T03, cSpAccTupRcvdPackets=cSpAccTupRcvdPackets, cSpAccMtupSentPackets=cSpAccMtupSentPackets, cSpMtp3T34=cSpMtp3T34, cSpAccSntmSentPackets=cSpAccSntmSentPackets, cSpLinkQ752T2E7=cSpLinkQ752T2E7, cSpAccountingTable=cSpAccountingTable, cSpMtp3T16=cSpMtp3T16, cSpAccSpare11SentBytes=cSpAccSpare11SentBytes, cSpLinksetMtp3T25=cSpLinksetMtp3T25, cSpAccHCSccpRcvdBytes=cSpAccHCSccpRcvdBytes, cSpAccHCSpare15RcvdBytes=cSpAccHCSpare15RcvdBytes, cSpAccHCSpare12SentBytes=cSpAccHCSpare12SentBytes, cSpRouteStatus=cSpRouteStatus, cSpLinksetMtp3T27=cSpLinksetMtp3T27, cSpLinkState=cSpLinkState, cSpLinksetHCPacketsSent=cSpLinksetHCPacketsSent, cSpAccSnmmSentPackets=cSpAccSnmmSentPackets, cSpRouteTableName=cSpRouteTableName, cSpLinkMtp3T15=cSpLinkMtp3T15, ciscoSpLinksetStateChange=ciscoSpLinksetStateChange, cSpLinksetHCBytesRcvd=cSpLinksetHCBytesRcvd, cSpLinksetMtp3T18=cSpLinksetMtp3T18, cSpAccHCDupcRcvdPackets=cSpAccHCDupcRcvdPackets, cSpRoute=cSpRoute, cSpAccHCIsupSentPackets=cSpAccHCIsupSentPackets, cSpLinkQ752T1E10=cSpLinkQ752T1E10, cSpMtp3T10=cSpMtp3T10, cSpAccHCSpare11RcvdPackets=cSpAccHCSpare11RcvdPackets, cSpLinksetMtp2T05=cSpLinksetMtp2T05, cSpAccHCSpare14SentBytes=cSpAccHCSpare14SentBytes, cSpAccHCSpare13SentPackets=cSpAccHCSpare13SentPackets, cSpScalars=cSpScalars, ciscoSpAccessListGroup=ciscoSpAccessListGroup, cSpLinkMtp3T11=cSpLinkMtp3T11, cSpLinkMtp3T32=cSpLinkMtp3T32, cSpLinkQ752T3E7=cSpLinkQ752T3E7, cSpLinkMtp2T4E=cSpLinkMtp2T4E, ciscoSpMIBGroups=ciscoSpMIBGroups, cSpAccHCSpare14RcvdBytes=cSpAccHCSpare14RcvdBytes, cSpAccHCRcvdBytes=cSpAccHCRcvdBytes, cSpMtp2T05=cSpMtp2T05, cSpAccDupfSentBytes=cSpAccDupfSentBytes, cSpLinksetMtp2T06=cSpLinksetMtp2T06, cSpLinkMtp3PacketsSent=cSpLinkMtp3PacketsSent, cSpLinkQ752T3E10L3=cSpLinkQ752T3E10L3, cSpAccSpare11SentPackets=cSpAccSpare11SentPackets, cSpAccHCSnmmRcvdBytes=cSpAccHCSnmmRcvdBytes, cSpLinkMtp3T02=cSpLinkMtp3T02, cSpSs7Variant=cSpSs7Variant, cSpLinkQ752T1E7=cSpLinkQ752T1E7, cSpLinksetMtp3T01=cSpLinksetMtp3T01, cSpAccOpc=cSpAccOpc, cSpLinkType=cSpLinkType, cSpLinkMtp3T27=cSpLinkMtp3T27, cSpMtp3T03=cSpMtp3T03, cSpLinksetMtp3T13=cSpLinksetMtp3T13, cSpLinksetName=cSpLinksetName, cSpLinkXmitQueueDepthHigh=cSpLinkXmitQueueDepthHigh, cSpAccHCIsupRcvdPackets=cSpAccHCIsupRcvdPackets, cSpLinksetMtupRouteTableName=cSpLinksetMtupRouteTableName, cSpAccHCIsupRcvdBytes=cSpAccHCIsupRcvdBytes, cSpLinksetMtp3T14=cSpLinksetMtp3T14, cSpLinkMtp3T22=cSpLinkMtp3T22, cSpLinksetMtp2T03=cSpLinksetMtp2T03, cSpAccSpare12RcvdBytes=cSpAccSpare12RcvdBytes, cSpMtp3T33=cSpMtp3T33, cSpLinkQ752T3E10L2=cSpLinkQ752T3E10L2, cSpLinkQ752T3E11L2=cSpLinkQ752T3E11L2, cSpLinksetMtp3T02=cSpLinksetMtp3T02, ciscoSpSwitchGroup=ciscoSpSwitchGroup, cSpAccHCBisupRcvdPackets=cSpAccHCBisupRcvdPackets, cSpLinksetHCBytesSent=cSpLinksetHCBytesSent, cSpAccIsupRcvdBytes=cSpAccIsupRcvdBytes, CSpOsiState=CSpOsiState, cSpAccRcvdBytes=cSpAccRcvdBytes, ciscoSpMIBNotifications=ciscoSpMIBNotifications, cSpLinkMtp3T29=cSpLinkMtp3T29, cSpAccSpare11RcvdBytes=cSpAccSpare11RcvdBytes, cSpLinkCongestionAbate2=cSpLinkCongestionAbate2, cSpLinksetIsupRouteTableName=cSpLinksetIsupRouteTableName, cSpLinkMtp3PacketsRcvd=cSpLinkMtp3PacketsRcvd, cSpLinkMtp3T01=cSpLinkMtp3T01, cSpMtp3T19=cSpMtp3T19, cSpLinkQ752T3E11L1=cSpLinkQ752T3E11L1, cSpLinkSctpAssociation=cSpLinkSctpAssociation, cSpLinksetMtp3T22=cSpLinksetMtp3T22, cSpAclEntryNumber=cSpAclEntryNumber, cSpAccSpare12SentPackets=cSpAccSpare12SentPackets, cSpLinkQ752T2E9=cSpLinkQ752T2E9, cSpMtp3T31=cSpMtp3T31, cSpLinkMtp3BytesRcvd=cSpLinkMtp3BytesRcvd, cSpLinkQ752T1E2=cSpLinkQ752T1E2, cSpLinkCongestionAbate3=cSpLinkCongestionAbate3, cSpLinksetMtp3T15=cSpLinksetMtp3T15, cSpAccSpare13RcvdPackets=cSpAccSpare13RcvdPackets, cSpLinkMtp3T18=cSpLinkMtp3T18, cSpLinksetMtp3T29=cSpLinksetMtp3T29, cSpLinkMtp3T26=cSpLinkMtp3T26, cSpAccHCTupRcvdPackets=cSpAccHCTupRcvdPackets, cSpLinksetTable=cSpLinksetTable, cSpAccHCSccpSentBytes=cSpAccHCSccpSentBytes, cSpAccSpare2SentPackets=cSpAccSpare2SentPackets, cSpMtp3T21=cSpMtp3T21, cSpAccHCSnmmRcvdPackets=cSpAccHCSnmmRcvdPackets, cSpAccSntmRcvdPackets=cSpAccSntmRcvdPackets, cSpLinksetBytesSent=cSpLinksetBytesSent, cSpLinksetSccpRouteTableName=cSpLinksetSccpRouteTableName, cSpAclId=cSpAclId, cSpAccHCBisupSentBytes=cSpAccHCBisupSentBytes, cSpAccHCSpare12RcvdBytes=cSpAccHCSpare12RcvdBytes, cSpAccHCSpare13RcvdPackets=cSpAccHCSpare13RcvdPackets, cSpMtp3T05=cSpMtp3T05, cSpLinkMtp3T12=cSpLinkMtp3T12, cSpAccHCDupcSentBytes=cSpAccHCDupcSentBytes, cSpAccHCTupSentPackets=cSpAccHCTupSentPackets, cSpLinksetSntmRouteTableName=cSpLinksetSntmRouteTableName, cSpLinkQ752T1E1=cSpLinkQ752T1E1, cSpAccTupSentBytes=cSpAccTupSentBytes, cSpLinksetBytesRcvd=cSpLinksetBytesRcvd, cSpLinkMtp3T34=cSpLinkMtp3T34, cSpAccBisupRcvdPackets=cSpAccBisupRcvdPackets, cSpLinkset=cSpLinkset)
mibBuilder.exportSymbols("CISCO-SP-MIB", cSpAccHCSpare14RcvdPackets=cSpAccHCSpare14RcvdPackets, CSpLinkSLC=CSpLinkSLC, cSpAccHCDupfRcvdPackets=cSpAccHCDupfRcvdPackets, cSpLinksetInboundAcl=cSpLinksetInboundAcl, cSpLinksetMtp3T11=cSpLinksetMtp3T11, ciscoSpNotificationsEnableGroup=ciscoSpNotificationsEnableGroup, cSpLinkMtp2T05=cSpLinkMtp2T05, cSpAccSpare15SentBytes=cSpAccSpare15SentBytes, cSpLinkCongestionAbate1=cSpLinkCongestionAbate1, cSpLinkMtp2T07=cSpLinkMtp2T07, cSpLinksetMtp3T07=cSpLinksetMtp3T07, cSpLinkQ752T3E6=cSpLinkQ752T3E6, cSpAccHCSpare15SentBytes=cSpAccHCSpare15SentBytes, cSpAccHCSpare11SentBytes=cSpAccHCSpare11SentBytes, cSpAccHCMtupSentPackets=cSpAccHCMtupSentPackets, cSpAccHCDupfSentBytes=cSpAccHCDupfSentBytes, cSpAccountingTableEntry=cSpAccountingTableEntry, cSpMtp3T28=cSpMtp3T28, cSpAccDupcRcvdPackets=cSpAccDupcRcvdPackets, cSpAclOpc=cSpAclOpc, cSpLinksetTableEntry=cSpLinksetTableEntry, cSpLinkMtp2T02=cSpLinkMtp2T02, cSpMtp3T25=cSpMtp3T25, cSpLinkQ752T3E11L3=cSpLinkQ752T3E11L3, ciscoSpMIB=ciscoSpMIB, cSpLinksetState=cSpLinksetState, cSpLinkQ752T1E9=cSpLinkQ752T1E9, cSpAccSpare14SentPackets=cSpAccSpare14SentPackets, cSpLinkQ752T3E10L1=cSpLinkQ752T3E10L1, cSpAccHCSpare12RcvdPackets=cSpAccHCSpare12RcvdPackets, cSpLinkCongestionOnset1=cSpLinkCongestionOnset1, cSpMtp3T27=cSpMtp3T27, ciscoSpMIBNotificationPrefix=ciscoSpMIBNotificationPrefix, cSpAclType=cSpAclType, cSpLinkTable=cSpLinkTable, cSpLinksetMtp3T05=cSpLinksetMtp3T05, cSpLinkSigLinkTest=cSpLinkSigLinkTest, cSpLinkMtp3T24=cSpLinkMtp3T24, cSpLinkQ752T1E11=cSpLinkQ752T1E11, cSpLinksetMtp3T21=cSpLinksetMtp3T21, cSpAccHCIsupSentBytes=cSpAccHCIsupSentBytes, cSpAccHCTupRcvdBytes=cSpAccHCTupRcvdBytes, cSpLinksetMtp2T07=cSpLinksetMtp2T07, cSpLinkMtp3T08=cSpLinkMtp3T08, cSpLinkHCMtp3BytesRcvd=cSpLinkHCMtp3BytesRcvd, cSpAccBisupSentBytes=cSpAccBisupSentBytes, cSpLinksetHCPacketsRcvd=cSpLinksetHCPacketsRcvd, cSpLinkMtp2T06=cSpLinkMtp2T06, cSpLinkMtp3T33=cSpLinkMtp3T33, cSpAccHCSpare13SentBytes=cSpAccHCSpare13SentBytes, cSpAclTableEntry=cSpAclTableEntry, cSpAccRcvdPackets=cSpAccRcvdPackets, cSpAccHCSisupSentPackets=cSpAccHCSisupSentPackets, CSpAclId=CSpAclId, cSpAccSentPackets=cSpAccSentPackets, cSpAclOpcMask=cSpAclOpcMask, cSpAccSpare2RcvdPackets=cSpAccSpare2RcvdPackets, cSpLinkQ752T2E18=cSpLinkQ752T2E18, cSpMtp3T23=cSpMtp3T23, cSpLinkMtp3T28=cSpLinkMtp3T28, cSpAccHCSisupRcvdPackets=cSpAccHCSisupRcvdPackets, cSpAccTableId=cSpAccTableId, cSpLinksetSpare11RouteTableName=cSpLinksetSpare11RouteTableName, cSpRouteTableEntry=cSpRouteTableEntry, cSpLinkMtp3T21=cSpLinkMtp3T21, cSpLinkMtp3T16=cSpLinkMtp3T16, PYSNMP_MODULE_ID=ciscoSpMIB, cSpAccIsupRcvdPackets=cSpAccIsupRcvdPackets, cSpLinksetMtp3T34=cSpLinksetMtp3T34, cSpAclPattern=cSpAclPattern, cSpAccSnmmRcvdBytes=cSpAccSnmmRcvdBytes, cSpAclDpcMask=cSpAclDpcMask, cSpAccHCBisupSentPackets=cSpAccHCBisupSentPackets, cSpLinkMtp2T08=cSpLinkMtp2T08, cSpLinksetMtp3T33=cSpLinksetMtp3T33, cSpAccHCSntmSentBytes=cSpAccHCSntmSentBytes, cSpAccSpare15RcvdPackets=cSpAccSpare15RcvdPackets, cSpLinkMtp3T14=cSpLinkMtp3T14, cSpLinksetMtp3T17=cSpLinksetMtp3T17, cSpLinksetMtp3T03=cSpLinksetMtp3T03, cSpAccDupcSentPackets=cSpAccDupcSentPackets, CSpAclAction=CSpAclAction, cSpLinksetMtp3T06=cSpLinksetMtp3T06, cSpLinksetSpare15RouteTableName=cSpLinksetSpare15RouteTableName, cSpLinksetMtp3T16=cSpLinksetMtp3T16, cSpLinkMtp3T17=cSpLinkMtp3T17, cSpLinkMtp3T30=cSpLinkMtp3T30, cSpAccSpare15RcvdBytes=cSpAccSpare15RcvdBytes, cSpLinkMtp3T13=cSpLinkMtp3T13, cSpAclTable=cSpAclTable, cSpLsStateChangeNotifEnabled=cSpLsStateChangeNotifEnabled, CSpPointCode=CSpPointCode, cSpLinkHCMtp3PacketsRcvd=cSpLinkHCMtp3PacketsRcvd, CSpLinksetId=CSpLinksetId, cSpMtp3T30=cSpMtp3T30, cSpLinksetNumLinks=cSpLinksetNumLinks, cSpAccHCSentPackets=cSpAccHCSentPackets, cSpLinkMtp2T01=cSpLinkMtp2T01, cSpLinkMtp3T31=cSpLinkMtp3T31, cSpAccSpare14RcvdPackets=cSpAccSpare14RcvdPackets, cSpMtp3T02=cSpMtp3T02, cSpLinkQ752T2E1=cSpLinkQ752T2E1, cSpMtp3T32=cSpMtp3T32, ciscoSpLinksetGroup=ciscoSpLinksetGroup, cSpAccHCMtupRcvdPackets=cSpAccHCMtupRcvdPackets, cSpLinkMtp3BytesRetrans=cSpLinkMtp3BytesRetrans, cSpAccMtupSentBytes=cSpAccMtupSentBytes, cSpAccSpare14RcvdBytes=cSpAccSpare14RcvdBytes, cSpAccHCSnmmSentPackets=cSpAccHCSnmmSentPackets, cSpAccHCSnmmSentBytes=cSpAccHCSnmmSentBytes, cSpLinksetMtp2T4E=cSpLinksetMtp2T4E, CSpRouteStatus=CSpRouteStatus, cSpLinkMtp3T06=cSpLinkMtp3T06, cSpLinksetSisupRouteTableName=cSpLinksetSisupRouteTableName, cSpLinksetMtp3T28=cSpLinksetMtp3T28, cSpAccHCSpare11RcvdBytes=cSpAccHCSpare11RcvdBytes, cSpMtp3T15=cSpMtp3T15, cSpMtp3T01=cSpMtp3T01, cSpAccSpare2SentBytes=cSpAccSpare2SentBytes, cSpAccSpare2RcvdBytes=cSpAccSpare2RcvdBytes, cSpAccSpare13RcvdBytes=cSpAccSpare13RcvdBytes, cSpAclOffset=cSpAclOffset, cSpLinksetSpare14RouteTableName=cSpLinksetSpare14RouteTableName, cSpAccIsupSentPackets=cSpAccIsupSentPackets, cSpLink=cSpLink, cSpLinksetPacketsSent=cSpLinksetPacketsSent, cSpAccHCTupSentBytes=cSpAccHCTupSentBytes, cSpAccHCSpare15RcvdPackets=cSpAccHCSpare15RcvdPackets, cSpLinksetAccountingEnabled=cSpLinksetAccountingEnabled, cSpLinksetDurationOutService=cSpLinksetDurationOutService, cSpMtp3T20=cSpMtp3T20, cSpAccounting=cSpAccounting, cSpAccSpare13SentPackets=cSpAccSpare13SentPackets, ciscoSpMIBConformance=ciscoSpMIBConformance, cSpAccSpare11RcvdPackets=cSpAccSpare11RcvdPackets, cSpLinkSlc=cSpLinkSlc, cSpAccHCDupcRcvdBytes=cSpAccHCDupcRcvdBytes, cSpMtp3T17=cSpMtp3T17, cSpLinksetMtp3T12=cSpLinksetMtp3T12, cSpLinkHCMtp3PacketsSent=cSpLinkHCMtp3PacketsSent, cSpAccSpare13SentBytes=cSpAccSpare13SentBytes, cSpAccHCSpare2SentPackets=cSpAccHCSpare2SentPackets, cSpAccSccpRcvdBytes=cSpAccSccpRcvdBytes, cSpAccHCSccpRcvdPackets=cSpAccHCSccpRcvdPackets, CSpSs7Variant=CSpSs7Variant, cSpMtp3T26=cSpMtp3T26, cSpAccHCBisupRcvdBytes=cSpAccHCBisupRcvdBytes, cSpAccDupcSentBytes=cSpAccDupcSentBytes, cSpAccHCSntmSentPackets=cSpAccHCSntmSentPackets, cSpLinksetMtp3T23=cSpLinksetMtp3T23, cSpAccSccpSentBytes=cSpAccSccpSentBytes, cSpAccHCSpare2RcvdPackets=cSpAccHCSpare2RcvdPackets, cSpLinkHCMtp3BytesSent=cSpLinkHCMtp3BytesSent, cSpAccHCSntmRcvdBytes=cSpAccHCSntmRcvdBytes, cSpAclDpc=cSpAclDpc, cSpLinksetMtp2T02=cSpLinksetMtp2T02, cSpLinksetMtp3T04=cSpLinksetMtp3T04, cSpMtp2T06=cSpMtp2T06, cSpMtp2T07=cSpMtp2T07, cSpLinkQ752T1E8=cSpLinkQ752T1E8, ciscoSpRouteGroup=ciscoSpRouteGroup, cSpLinkCongestionState=cSpLinkCongestionState, ciscoSpAccountingGroup=ciscoSpAccountingGroup, cSpLinksetMtp2T01=cSpLinksetMtp2T01, cSpMtp3T22=cSpMtp3T22, cSpAccTupSentPackets=cSpAccTupSentPackets)
