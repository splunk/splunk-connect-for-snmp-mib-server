#
# PySNMP MIB module BAS-CLUSTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAS-CLUSTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:17:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
BasInterfaceId, BasChassisId, BasLogicalPortId, basCluster, BasSlotId = mibBuilder.importSymbols("BAS-MIB", "BasInterfaceId", "BasChassisId", "BasLogicalPortId", "basCluster", "BasSlotId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Bits, ObjectIdentity, Integer32, NotificationType, MibIdentifier, Counter32, IpAddress, iso, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "ObjectIdentity", "Integer32", "NotificationType", "MibIdentifier", "Counter32", "IpAddress", "iso", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
basClusterMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1))
if mibBuilder.loadTexts: basClusterMib.setLastUpdated('9911181828Z')
if mibBuilder.loadTexts: basClusterMib.setOrganization('Broadband Access Systems')
basClusterConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1))
basClChTable = MibTable((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1), )
if mibBuilder.loadTexts: basClChTable.setStatus('current')
basClChEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1), ).setIndexNames((0, "BAS-CLUSTER-MIB", "basClChLocalChassis"), (0, "BAS-CLUSTER-MIB", "basClChLocalSlot"), (0, "BAS-CLUSTER-MIB", "basClChLocalIf"), (0, "BAS-CLUSTER-MIB", "basClChLocalLPort"), (0, "BAS-CLUSTER-MIB", "basClChRemoteChassis"))
if mibBuilder.loadTexts: basClChEntry.setStatus('current')
basClChLocalChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 1), BasChassisId())
if mibBuilder.loadTexts: basClChLocalChassis.setStatus('current')
basClChLocalSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 2), BasSlotId())
if mibBuilder.loadTexts: basClChLocalSlot.setStatus('current')
basClChLocalIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 3), BasInterfaceId())
if mibBuilder.loadTexts: basClChLocalIf.setStatus('current')
basClChLocalLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 4), BasLogicalPortId())
if mibBuilder.loadTexts: basClChLocalLPort.setStatus('current')
basClChRemoteChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 5), BasChassisId())
if mibBuilder.loadTexts: basClChRemoteChassis.setStatus('current')
basClChLocalNextSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basClChLocalNextSlot.setStatus('current')
basClChLocalNextIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 7), BasInterfaceId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basClChLocalNextIf.setStatus('current')
basClChLocalNextLPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 8), BasLogicalPortId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basClChLocalNextLPort.setStatus('current')
basClChTargetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basClChTargetStatus.setStatus('current')
basClChArpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 3493, 2, 18, 1, 1, 1, 1, 10), Bits().clone(namedValues=NamedValues(("clear", 0), ("waiting", 1), ("doNotQueue", 2), ("doNotTimeout", 3), ("cmtsWaiting", 4), ("cmtsOk", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: basClChArpFlags.setStatus('current')
mibBuilder.exportSymbols("BAS-CLUSTER-MIB", basClChTable=basClChTable, basClChLocalNextSlot=basClChLocalNextSlot, basClChLocalSlot=basClChLocalSlot, basClusterMib=basClusterMib, basClChLocalNextIf=basClChLocalNextIf, basClChEntry=basClChEntry, basClChTargetStatus=basClChTargetStatus, basClChLocalIf=basClChLocalIf, PYSNMP_MODULE_ID=basClusterMib, basClChRemoteChassis=basClChRemoteChassis, basClusterConfig=basClusterConfig, basClChLocalNextLPort=basClChLocalNextLPort, basClChLocalLPort=basClChLocalLPort, basClChLocalChassis=basClChLocalChassis, basClChArpFlags=basClChArpFlags)
