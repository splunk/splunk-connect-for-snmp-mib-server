#
# PySNMP MIB module Nortel-Magellan-Passport-BaseRoutingMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-BaseRoutingMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
RowStatus, Unsigned32, Gauge32, RowPointer, StorageType, Counter32, Integer32, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowStatus", "Unsigned32", "Gauge32", "RowPointer", "StorageType", "Counter32", "Integer32", "DisplayString")
FixedPoint1, NonReplicated, DigitString, AsciiStringIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "FixedPoint1", "NonReplicated", "DigitString", "AsciiStringIndex")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibIdentifier, Unsigned32, Bits, NotificationType, ModuleIdentity, Counter64, Gauge32, iso, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Unsigned32", "Bits", "NotificationType", "ModuleIdentity", "Counter64", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
baseRoutingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18))
rtg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40))
rtgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 1), )
if mibBuilder.loadTexts: rtgRowStatusTable.setStatus('mandatory')
rtgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"))
if mibBuilder.loadTexts: rtgRowStatusEntry.setStatus('mandatory')
rtgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgRowStatus.setStatus('mandatory')
rtgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgComponentName.setStatus('mandatory')
rtgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgStorageType.setStatus('mandatory')
rtgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: rtgIndex.setStatus('mandatory')
rtgProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 12), )
if mibBuilder.loadTexts: rtgProvTable.setStatus('mandatory')
rtgProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"))
if mibBuilder.loadTexts: rtgProvEntry.setStatus('mandatory')
rtgTandemTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("allowed", 0), ("denied", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgTandemTraffic.setStatus('mandatory')
rtgSplittingRegionIdsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 407), )
if mibBuilder.loadTexts: rtgSplittingRegionIdsTable.setStatus('mandatory')
rtgSplittingRegionIdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 407, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgSplittingRegionIdsValue"))
if mibBuilder.loadTexts: rtgSplittingRegionIdsEntry.setStatus('mandatory')
rtgSplittingRegionIdsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 407, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtgSplittingRegionIdsValue.setStatus('mandatory')
rtgSplittingRegionIdsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 407, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: rtgSplittingRegionIdsRowStatus.setStatus('mandatory')
rtgTop = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5))
rtgTopRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 1), )
if mibBuilder.loadTexts: rtgTopRowStatusTable.setStatus('mandatory')
rtgTopRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"))
if mibBuilder.loadTexts: rtgTopRowStatusEntry.setStatus('mandatory')
rtgTopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopRowStatus.setStatus('mandatory')
rtgTopComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopComponentName.setStatus('mandatory')
rtgTopStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopStorageType.setStatus('mandatory')
rtgTopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: rtgTopIndex.setStatus('mandatory')
rtgTopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 11), )
if mibBuilder.loadTexts: rtgTopStatsTable.setStatus('mandatory')
rtgTopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"))
if mibBuilder.loadTexts: rtgTopStatsEntry.setStatus('mandatory')
rtgTopControlPktRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopControlPktRx.setStatus('mandatory')
rtgTopControlBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopControlBytesRx.setStatus('mandatory')
rtgTopControlPktTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopControlPktTx.setStatus('mandatory')
rtgTopControlBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopControlBytesTx.setStatus('mandatory')
rtgTopNode = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2))
rtgTopNodeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 1), )
if mibBuilder.loadTexts: rtgTopNodeRowStatusTable.setStatus('mandatory')
rtgTopNodeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"))
if mibBuilder.loadTexts: rtgTopNodeRowStatusEntry.setStatus('mandatory')
rtgTopNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeRowStatus.setStatus('mandatory')
rtgTopNodeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeComponentName.setStatus('mandatory')
rtgTopNodeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeStorageType.setStatus('mandatory')
rtgTopNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: rtgTopNodeIndex.setStatus('mandatory')
rtgTopNodeOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 10), )
if mibBuilder.loadTexts: rtgTopNodeOperTable.setStatus('mandatory')
rtgTopNodeOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"))
if mibBuilder.loadTexts: rtgTopNodeOperEntry.setStatus('mandatory')
rtgTopNodeNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeNodeId.setStatus('mandatory')
rtgTopNodeLg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2))
rtgTopNodeLgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 1), )
if mibBuilder.loadTexts: rtgTopNodeLgRowStatusTable.setStatus('mandatory')
rtgTopNodeLgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgIndex"))
if mibBuilder.loadTexts: rtgTopNodeLgRowStatusEntry.setStatus('mandatory')
rtgTopNodeLgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgRowStatus.setStatus('mandatory')
rtgTopNodeLgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgComponentName.setStatus('mandatory')
rtgTopNodeLgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgStorageType.setStatus('mandatory')
rtgTopNodeLgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: rtgTopNodeLgIndex.setStatus('mandatory')
rtgTopNodeLgOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 10), )
if mibBuilder.loadTexts: rtgTopNodeLgOperTable.setStatus('mandatory')
rtgTopNodeLgOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgIndex"))
if mibBuilder.loadTexts: rtgTopNodeLgOperEntry.setStatus('mandatory')
rtgTopNodeLgDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgDelayMetric.setStatus('mandatory')
rtgTopNodeLgTputMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTputMetric.setStatus('mandatory')
rtgTopNodeLgLnnTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 235), )
if mibBuilder.loadTexts: rtgTopNodeLgLnnTable.setStatus('mandatory')
rtgTopNodeLgLnnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 235, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgLnnValue"))
if mibBuilder.loadTexts: rtgTopNodeLgLnnEntry.setStatus('mandatory')
rtgTopNodeLgLnnValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 235, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgLnnValue.setStatus('mandatory')
rtgTopNodeLgTrkObj = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2))
rtgTopNodeLgTrkObjRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 1), )
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjRowStatusTable.setStatus('mandatory')
rtgTopNodeLgTrkObjRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgTrkObjIndex"))
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjRowStatusEntry.setStatus('mandatory')
rtgTopNodeLgTrkObjRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjRowStatus.setStatus('mandatory')
rtgTopNodeLgTrkObjComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjComponentName.setStatus('mandatory')
rtgTopNodeLgTrkObjStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjStorageType.setStatus('mandatory')
rtgTopNodeLgTrkObjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjIndex.setStatus('mandatory')
rtgTopNodeLgTrkObjOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10), )
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjOperTable.setStatus('mandatory')
rtgTopNodeLgTrkObjOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgTrkObjIndex"))
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjOperEntry.setStatus('mandatory')
rtgTopNodeLgTrkObjMaxReservableBwOut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjMaxReservableBwOut.setStatus('mandatory')
rtgTopNodeLgTrkObjTrunkCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjTrunkCost.setStatus('mandatory')
rtgTopNodeLgTrkObjTrunkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjTrunkDelay.setStatus('mandatory')
rtgTopNodeLgTrkObjTrunkSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjTrunkSecurity.setStatus('mandatory')
rtgTopNodeLgTrkObjSupportedTrafficTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjSupportedTrafficTypes.setStatus('mandatory')
rtgTopNodeLgTrkObjTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("terrestrial", 0), ("satellite", 1), ("trunkType1", 2), ("trunkType2", 3), ("trunkType3", 4), ("trunkType4", 5), ("trunkType5", 6), ("trunkType6", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjTrunkType.setStatus('mandatory')
rtgTopNodeLgTrkObjCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjCustomerParameter.setStatus('mandatory')
rtgTopNodeLgTrkObjFarEndTrmLkInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjFarEndTrmLkInstance.setStatus('mandatory')
rtgTopNodeLgTrkObjUnresTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 234), )
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjUnresTable.setStatus('mandatory')
rtgTopNodeLgTrkObjUnresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 234, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgTrkObjIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgTrkObjUnresSetupPriorityIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "rtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex"))
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjUnresEntry.setStatus('mandatory')
rtgTopNodeLgTrkObjUnresSetupPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 234, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("bwPartOver255", 0))))
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjUnresSetupPriorityIndex.setStatus('mandatory')
rtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 234, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex.setStatus('mandatory')
rtgTopNodeLgTrkObjUnresValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 40, 5, 2, 2, 2, 234, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtgTopNodeLgTrkObjUnresValue.setStatus('mandatory')
trm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41))
trmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 1), )
if mibBuilder.loadTexts: trmRowStatusTable.setStatus('mandatory')
trmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"))
if mibBuilder.loadTexts: trmRowStatusEntry.setStatus('mandatory')
trmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmRowStatus.setStatus('mandatory')
trmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmComponentName.setStatus('mandatory')
trmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmStorageType.setStatus('mandatory')
trmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: trmIndex.setStatus('mandatory')
trmLk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2))
trmLkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 1), )
if mibBuilder.loadTexts: trmLkRowStatusTable.setStatus('mandatory')
trmLkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLkIndex"))
if mibBuilder.loadTexts: trmLkRowStatusEntry.setStatus('mandatory')
trmLkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkRowStatus.setStatus('mandatory')
trmLkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkComponentName.setStatus('mandatory')
trmLkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkStorageType.setStatus('mandatory')
trmLkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: trmLkIndex.setStatus('mandatory')
trmLkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10), )
if mibBuilder.loadTexts: trmLkOperTable.setStatus('mandatory')
trmLkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLkIndex"))
if mibBuilder.loadTexts: trmLkOperEntry.setStatus('mandatory')
trmLkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("joining", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkStatus.setStatus('mandatory')
trmLkThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 640000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkThroughput.setStatus('mandatory')
trmLkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkDelay.setStatus('obsolete')
trmLkMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkMaxTxUnit.setStatus('mandatory')
trmLkLinkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkLinkComponentName.setStatus('mandatory')
trmLkDelayUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 10, 1, 6), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(10, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkDelayUsec.setStatus('mandatory')
trmLkFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 11), )
if mibBuilder.loadTexts: trmLkFwdStatsTable.setStatus('mandatory')
trmLkFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLkIndex"))
if mibBuilder.loadTexts: trmLkFwdStatsEntry.setStatus('mandatory')
trmLkFciSet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkFciSet.setStatus('mandatory')
trmLkOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkOverflowAttempts.setStatus('mandatory')
trmLkPathOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkPathOverflowAttempts.setStatus('mandatory')
trmLkDiscardCongestedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 280), )
if mibBuilder.loadTexts: trmLkDiscardCongestedTable.setStatus('mandatory')
trmLkDiscardCongestedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 280, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLkIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLkDiscardCongestedIndex"))
if mibBuilder.loadTexts: trmLkDiscardCongestedEntry.setStatus('mandatory')
trmLkDiscardCongestedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 280, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discardPriority1", 0), ("discardPriority2", 1), ("discardPriority3", 2))))
if mibBuilder.loadTexts: trmLkDiscardCongestedIndex.setStatus('mandatory')
trmLkDiscardCongestedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 2, 280, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLkDiscardCongestedValue.setStatus('mandatory')
trmLg = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3))
trmLgRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 1), )
if mibBuilder.loadTexts: trmLgRowStatusTable.setStatus('mandatory')
trmLgRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"))
if mibBuilder.loadTexts: trmLgRowStatusEntry.setStatus('mandatory')
trmLgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgRowStatus.setStatus('mandatory')
trmLgComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgComponentName.setStatus('mandatory')
trmLgStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgStorageType.setStatus('mandatory')
trmLgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 12)))
if mibBuilder.loadTexts: trmLgIndex.setStatus('mandatory')
trmLgLk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2))
trmLgLkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 1), )
if mibBuilder.loadTexts: trmLgLkRowStatusTable.setStatus('mandatory')
trmLgLkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLkIndex"))
if mibBuilder.loadTexts: trmLgLkRowStatusEntry.setStatus('mandatory')
trmLgLkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkRowStatus.setStatus('mandatory')
trmLgLkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkComponentName.setStatus('mandatory')
trmLgLkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkStorageType.setStatus('mandatory')
trmLgLkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: trmLgLkIndex.setStatus('mandatory')
trmLgLkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10), )
if mibBuilder.loadTexts: trmLgLkOperTable.setStatus('mandatory')
trmLgLkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLkIndex"))
if mibBuilder.loadTexts: trmLgLkOperEntry.setStatus('mandatory')
trmLgLkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("joining", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkStatus.setStatus('mandatory')
trmLgLkThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 640000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkThroughput.setStatus('mandatory')
trmLgLkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkDelay.setStatus('obsolete')
trmLgLkMaxTxUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkMaxTxUnit.setStatus('mandatory')
trmLgLkLinkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkLinkComponentName.setStatus('mandatory')
trmLgLkDelayUsec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 10, 1, 6), FixedPoint1().subtype(subtypeSpec=ValueRangeConstraint(10, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkDelayUsec.setStatus('mandatory')
trmLgLkFwdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 11), )
if mibBuilder.loadTexts: trmLgLkFwdStatsTable.setStatus('mandatory')
trmLgLkFwdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLkIndex"))
if mibBuilder.loadTexts: trmLgLkFwdStatsEntry.setStatus('mandatory')
trmLgLkFciSet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkFciSet.setStatus('mandatory')
trmLgLkOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkOverflowAttempts.setStatus('mandatory')
trmLgLkPathOverflowAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkPathOverflowAttempts.setStatus('mandatory')
trmLgLkDiscardCongestedTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 280), )
if mibBuilder.loadTexts: trmLgLkDiscardCongestedTable.setStatus('mandatory')
trmLgLkDiscardCongestedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 280, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLkIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLkDiscardCongestedIndex"))
if mibBuilder.loadTexts: trmLgLkDiscardCongestedEntry.setStatus('mandatory')
trmLgLkDiscardCongestedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 280, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discardPriority1", 0), ("discardPriority2", 1), ("discardPriority3", 2))))
if mibBuilder.loadTexts: trmLgLkDiscardCongestedIndex.setStatus('mandatory')
trmLgLkDiscardCongestedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 2, 280, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLkDiscardCongestedValue.setStatus('mandatory')
trmLgLNN = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3))
trmLgLNNRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 1), )
if mibBuilder.loadTexts: trmLgLNNRowStatusTable.setStatus('mandatory')
trmLgLNNRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLNNIndex"))
if mibBuilder.loadTexts: trmLgLNNRowStatusEntry.setStatus('mandatory')
trmLgLNNRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLNNRowStatus.setStatus('mandatory')
trmLgLNNComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLNNComponentName.setStatus('mandatory')
trmLgLNNStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLNNStorageType.setStatus('mandatory')
trmLgLNNIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047)))
if mibBuilder.loadTexts: trmLgLNNIndex.setStatus('mandatory')
trmLgLNNOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 10), )
if mibBuilder.loadTexts: trmLgLNNOperTable.setStatus('mandatory')
trmLgLNNOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "trmLgLNNIndex"))
if mibBuilder.loadTexts: trmLgLNNOperEntry.setStatus('mandatory')
trmLgLNNLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("trunk", 0), ("internalGateway", 1), ("externalGateway", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLNNLinkType.setStatus('mandatory')
trmLgLNNAddressPlanComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 41, 3, 3, 10, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trmLgLNNAddressPlanComponentName.setStatus('mandatory')
npi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43))
npiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 1), )
if mibBuilder.loadTexts: npiRowStatusTable.setStatus('mandatory')
npiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "npiIndex"))
if mibBuilder.loadTexts: npiRowStatusEntry.setStatus('mandatory')
npiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiRowStatus.setStatus('mandatory')
npiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiComponentName.setStatus('mandatory')
npiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiStorageType.setStatus('mandatory')
npiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))))
if mibBuilder.loadTexts: npiIndex.setStatus('mandatory')
npiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 10), )
if mibBuilder.loadTexts: npiStatsTable.setStatus('mandatory')
npiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "npiIndex"))
if mibBuilder.loadTexts: npiStatsEntry.setStatus('mandatory')
npiTotalDnas = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiTotalDnas.setStatus('mandatory')
npiDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2))
npiDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 1), )
if mibBuilder.loadTexts: npiDnaRowStatusTable.setStatus('mandatory')
npiDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "npiIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "npiDnaIndex"))
if mibBuilder.loadTexts: npiDnaRowStatusEntry.setStatus('mandatory')
npiDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiDnaRowStatus.setStatus('mandatory')
npiDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiDnaComponentName.setStatus('mandatory')
npiDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiDnaStorageType.setStatus('mandatory')
npiDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 1, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: npiDnaIndex.setStatus('mandatory')
npiDnaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 10), )
if mibBuilder.loadTexts: npiDnaInfoTable.setStatus('mandatory')
npiDnaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-BaseRoutingMIB", "npiIndex"), (0, "Nortel-Magellan-Passport-BaseRoutingMIB", "npiDnaIndex"))
if mibBuilder.loadTexts: npiDnaInfoEntry.setStatus('mandatory')
npiDnaDestinationName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 43, 2, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npiDnaDestinationName.setStatus('mandatory')
baseRoutingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 1))
baseRoutingGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 1, 5))
baseRoutingGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 1, 5, 1))
baseRoutingGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 1, 5, 1, 2))
baseRoutingCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 3))
baseRoutingCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 3, 5))
baseRoutingCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 3, 5, 1))
baseRoutingCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 18, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BaseRoutingMIB", rtgTopNodeLgIndex=rtgTopNodeLgIndex, rtgTopNodeLgRowStatus=rtgTopNodeLgRowStatus, rtgIndex=rtgIndex, trmLgLkFwdStatsTable=trmLgLkFwdStatsTable, npiDnaInfoTable=npiDnaInfoTable, trmRowStatusEntry=trmRowStatusEntry, trmLgLkDiscardCongestedTable=trmLgLkDiscardCongestedTable, npiDna=npiDna, trmLkComponentName=trmLkComponentName, rtgTopNodeLgTrkObjFarEndTrmLkInstance=rtgTopNodeLgTrkObjFarEndTrmLkInstance, trmLgLkRowStatusEntry=trmLgLkRowStatusEntry, rtgTopStatsTable=rtgTopStatsTable, trmLkLinkComponentName=trmLkLinkComponentName, trmLgLNNRowStatus=trmLgLNNRowStatus, rtgTopNodeIndex=rtgTopNodeIndex, trmLgLkDelayUsec=trmLgLkDelayUsec, trmLgLkRowStatusTable=trmLgLkRowStatusTable, npiRowStatusTable=npiRowStatusTable, trmLkDiscardCongestedTable=trmLkDiscardCongestedTable, trmLgLNNAddressPlanComponentName=trmLgLNNAddressPlanComponentName, rtgTopNodeStorageType=rtgTopNodeStorageType, rtgTopControlBytesRx=rtgTopControlBytesRx, trmLkPathOverflowAttempts=trmLkPathOverflowAttempts, baseRoutingCapabilities=baseRoutingCapabilities, trmRowStatus=trmRowStatus, trmLkRowStatus=trmLkRowStatus, baseRoutingMIB=baseRoutingMIB, rtgTopNodeLgTrkObjOperTable=rtgTopNodeLgTrkObjOperTable, trmLgLkThroughput=trmLgLkThroughput, npiTotalDnas=npiTotalDnas, rtgTopNodeLgStorageType=rtgTopNodeLgStorageType, rtgRowStatusEntry=rtgRowStatusEntry, rtgProvTable=rtgProvTable, rtgSplittingRegionIdsTable=rtgSplittingRegionIdsTable, npiDnaComponentName=npiDnaComponentName, rtgTopNodeLgTputMetric=rtgTopNodeLgTputMetric, npi=npi, trmLgRowStatus=trmLgRowStatus, rtgTopNodeLgTrkObjCustomerParameter=rtgTopNodeLgTrkObjCustomerParameter, trmLkThroughput=trmLkThroughput, rtgTopNodeLgRowStatusEntry=rtgTopNodeLgRowStatusEntry, rtgTopControlPktTx=rtgTopControlPktTx, rtgTopComponentName=rtgTopComponentName, trmLgComponentName=trmLgComponentName, trmLgLkMaxTxUnit=trmLgLkMaxTxUnit, rtgTopNodeLgTrkObjUnresSetupPriorityIndex=rtgTopNodeLgTrkObjUnresSetupPriorityIndex, baseRoutingGroupBE00=baseRoutingGroupBE00, rtgTopNodeLgTrkObjIndex=rtgTopNodeLgTrkObjIndex, trmComponentName=trmComponentName, rtgTopStatsEntry=rtgTopStatsEntry, baseRoutingGroupBE=baseRoutingGroupBE, trmStorageType=trmStorageType, rtgTopRowStatusEntry=rtgTopRowStatusEntry, rtgTopNodeLgTrkObjSupportedTrafficTypes=rtgTopNodeLgTrkObjSupportedTrafficTypes, rtgStorageType=rtgStorageType, rtgTopNode=rtgTopNode, npiDnaRowStatusEntry=npiDnaRowStatusEntry, rtgTopNodeLgOperEntry=rtgTopNodeLgOperEntry, npiStorageType=npiStorageType, rtgTopNodeLgTrkObjTrunkDelay=rtgTopNodeLgTrkObjTrunkDelay, rtgTopNodeLgTrkObjRowStatus=rtgTopNodeLgTrkObjRowStatus, rtgTopNodeOperEntry=rtgTopNodeOperEntry, rtgTopNodeLgTrkObjUnresTable=rtgTopNodeLgTrkObjUnresTable, trmLkStatus=trmLkStatus, trmLkDiscardCongestedEntry=trmLkDiscardCongestedEntry, trm=trm, trmLkDiscardCongestedValue=trmLkDiscardCongestedValue, trmIndex=trmIndex, rtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex=rtgTopNodeLgTrkObjUnresUnreservedBwPartsIndex, trmLkRowStatusEntry=trmLkRowStatusEntry, rtgTopNodeLgTrkObjTrunkType=rtgTopNodeLgTrkObjTrunkType, trmLgLNNIndex=trmLgLNNIndex, trmLgLkStatus=trmLgLkStatus, rtgTopNodeLgLnnTable=rtgTopNodeLgLnnTable, rtgTopNodeLgLnnEntry=rtgTopNodeLgLnnEntry, npiStatsEntry=npiStatsEntry, trmLgLkOverflowAttempts=trmLgLkOverflowAttempts, trmLgLNN=trmLgLNN, trmLgIndex=trmLgIndex, trmLgLkPathOverflowAttempts=trmLgLkPathOverflowAttempts, trmRowStatusTable=trmRowStatusTable, npiComponentName=npiComponentName, trmLkRowStatusTable=trmLkRowStatusTable, rtgTopNodeRowStatusEntry=rtgTopNodeRowStatusEntry, rtgTopStorageType=rtgTopStorageType, trmLgLNNRowStatusTable=trmLgLNNRowStatusTable, trmLgLNNRowStatusEntry=trmLgLNNRowStatusEntry, baseRoutingGroup=baseRoutingGroup, trmLkDiscardCongestedIndex=trmLkDiscardCongestedIndex, trmLkOverflowAttempts=trmLkOverflowAttempts, baseRoutingGroupBE00A=baseRoutingGroupBE00A, npiDnaStorageType=npiDnaStorageType, rtgComponentName=rtgComponentName, rtgTopNodeComponentName=rtgTopNodeComponentName, trmLgLkStorageType=trmLgLkStorageType, npiRowStatus=npiRowStatus, trmLk=trmLk, trmLgLkFciSet=trmLgLkFciSet, rtgTop=rtgTop, rtgTopNodeLgTrkObjMaxReservableBwOut=rtgTopNodeLgTrkObjMaxReservableBwOut, trmLgLkDiscardCongestedValue=trmLgLkDiscardCongestedValue, npiRowStatusEntry=npiRowStatusEntry, trmLkFwdStatsTable=trmLkFwdStatsTable, rtgTopNodeLgTrkObjUnresValue=rtgTopNodeLgTrkObjUnresValue, trmLgLNNOperTable=trmLgLNNOperTable, trmLgRowStatusEntry=trmLgRowStatusEntry, trmLgLkLinkComponentName=trmLgLkLinkComponentName, npiDnaRowStatusTable=npiDnaRowStatusTable, rtgTopNodeLgRowStatusTable=rtgTopNodeLgRowStatusTable, rtgTopNodeLgTrkObj=rtgTopNodeLgTrkObj, trmLkStorageType=trmLkStorageType, trmLgLk=trmLgLk, npiIndex=npiIndex, trmLgStorageType=trmLgStorageType, npiDnaIndex=npiDnaIndex, rtg=rtg, rtgTopIndex=rtgTopIndex, rtgTopNodeLg=rtgTopNodeLg, rtgTopNodeLgDelayMetric=rtgTopNodeLgDelayMetric, rtgTopRowStatus=rtgTopRowStatus, rtgRowStatusTable=rtgRowStatusTable, rtgTopNodeLgOperTable=rtgTopNodeLgOperTable, rtgTopNodeLgTrkObjStorageType=rtgTopNodeLgTrkObjStorageType, trmLkFwdStatsEntry=trmLkFwdStatsEntry, trmLgLkIndex=trmLgLkIndex, baseRoutingCapabilitiesBE00A=baseRoutingCapabilitiesBE00A, npiDnaRowStatus=npiDnaRowStatus, rtgTopNodeLgComponentName=rtgTopNodeLgComponentName, trmLgLNNStorageType=trmLgLNNStorageType, rtgTandemTraffic=rtgTandemTraffic, rtgTopNodeOperTable=rtgTopNodeOperTable, npiDnaInfoEntry=npiDnaInfoEntry, rtgRowStatus=rtgRowStatus, trmLkFciSet=trmLkFciSet, trmLgLNNComponentName=trmLgLNNComponentName, rtgTopNodeLgTrkObjComponentName=rtgTopNodeLgTrkObjComponentName, trmLkOperTable=trmLkOperTable, rtgTopNodeRowStatus=rtgTopNodeRowStatus, rtgSplittingRegionIdsEntry=rtgSplittingRegionIdsEntry, npiStatsTable=npiStatsTable, trmLgLkOperTable=trmLgLkOperTable, trmLkIndex=trmLkIndex, trmLkOperEntry=trmLkOperEntry, trmLgLkOperEntry=trmLgLkOperEntry, rtgTopNodeNodeId=rtgTopNodeNodeId, trmLkDelay=trmLkDelay, rtgTopNodeLgTrkObjTrunkCost=rtgTopNodeLgTrkObjTrunkCost, trmLkMaxTxUnit=trmLkMaxTxUnit, trmLgLkDiscardCongestedEntry=trmLgLkDiscardCongestedEntry, trmLgLkDiscardCongestedIndex=trmLgLkDiscardCongestedIndex, rtgTopRowStatusTable=rtgTopRowStatusTable, rtgSplittingRegionIdsRowStatus=rtgSplittingRegionIdsRowStatus, trmLkDelayUsec=trmLkDelayUsec, trmLgLkDelay=trmLgLkDelay, rtgTopNodeLgTrkObjOperEntry=rtgTopNodeLgTrkObjOperEntry, trmLg=trmLg, rtgProvEntry=rtgProvEntry, rtgTopNodeLgTrkObjUnresEntry=rtgTopNodeLgTrkObjUnresEntry, rtgTopNodeLgTrkObjTrunkSecurity=rtgTopNodeLgTrkObjTrunkSecurity, trmLgLNNOperEntry=trmLgLNNOperEntry, npiDnaDestinationName=npiDnaDestinationName, baseRoutingCapabilitiesBE00=baseRoutingCapabilitiesBE00, rtgTopNodeRowStatusTable=rtgTopNodeRowStatusTable, baseRoutingCapabilitiesBE=baseRoutingCapabilitiesBE, trmLgLkComponentName=trmLgLkComponentName, trmLgLkRowStatus=trmLgLkRowStatus, rtgTopControlBytesTx=rtgTopControlBytesTx, trmLgRowStatusTable=trmLgRowStatusTable, rtgTopNodeLgLnnValue=rtgTopNodeLgLnnValue, rtgTopNodeLgTrkObjRowStatusTable=rtgTopNodeLgTrkObjRowStatusTable, trmLgLkFwdStatsEntry=trmLgLkFwdStatsEntry, rtgSplittingRegionIdsValue=rtgSplittingRegionIdsValue, rtgTopNodeLgTrkObjRowStatusEntry=rtgTopNodeLgTrkObjRowStatusEntry, trmLgLNNLinkType=trmLgLNNLinkType, rtgTopControlPktRx=rtgTopControlPktRx)
