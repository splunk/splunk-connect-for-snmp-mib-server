#
# PySNMP MIB module CISCO-RMON-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-RMON-CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:54:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
Dscp, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "Dscp")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
portCopyEntry, = mibBuilder.importSymbols("SMON-MIB", "portCopyEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Gauge32, ObjectIdentity, Unsigned32, Integer32, Counter64, NotificationType, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "ObjectIdentity", "Unsigned32", "Integer32", "Counter64", "NotificationType", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "TimeTicks", "Bits")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
ciscoRmonConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 103))
ciscoRmonConfigMIB.setRevisions(('2010-08-03 00:00', '2008-05-02 00:00', '2008-04-04 00:00', '2006-02-21 00:00', '2005-09-28 12:10', '2005-05-02 00:00', '2005-01-24 00:00', '2004-02-04 00:00', '2004-02-03 00:00', '2003-04-29 00:00', '2002-10-08 00:00', '2001-04-01 00:00', '2001-02-22 00:00', '1998-12-01 00:00',))
if mibBuilder.loadTexts: ciscoRmonConfigMIB.setLastUpdated('201008030000Z')
if mibBuilder.loadTexts: ciscoRmonConfigMIB.setOrganization('Cisco Systems, Inc.')
ciscoRmonConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1))
ciscoRmonConfigNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 2))
ciscoRmonConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 3))
ciscoRmon2ConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 1))
ciscoSmonConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2))
ciscoSampleConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 3))
ciscoAlarmConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 4))
ciscoSpanTxReplicationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 5))
ciscoSpanCapacityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6))
class SpanTxReplicationMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("centralized", 1), ("distributed", 2))

rmonTimeFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stopAfterOne", 1), ("stopAfterAll", 2))).clone('stopAfterAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rmonTimeFilterMode.setStatus('current')
portCopyXTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1), )
if mibBuilder.loadTexts: portCopyXTable.setStatus('current')
portCopyXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1), )
portCopyEntry.registerAugmentions(("CISCO-RMON-CONFIG-MIB", "portCopyXEntry"))
portCopyXEntry.setIndexNames(*portCopyEntry.getIndexNames())
if mibBuilder.loadTexts: portCopyXEntry.setStatus('current')
portCopyLoVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyLoVlanMask.setStatus('current')
portCopyHiVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyHiVlanMask.setStatus('current')
portCopyDestLoVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyDestLoVlanMask.setStatus('current')
portCopyDestHiVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyDestHiVlanMask.setStatus('current')
portCopyOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 5), Bits().clone(namedValues=NamedValues(("inpkts", 0), ("learningDisable", 1), ("dot1q", 2), ("isl", 3), ("multicast", 4), ("unicastDisable", 5), ("broadcastDisable", 6), ("goodDisable", 7), ("badDisable", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyOption.setStatus('current')
portCopySessionNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopySessionNo.setStatus('current')
portCopySessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notSpecified", 1), ("local", 2), ("remoteSource", 3), ("remoteDestination", 4), ("localTx", 5))).clone('notSpecified')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopySessionType.setStatus('current')
portCopyRemoveSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyRemoveSrc.setStatus('current')
portCopyReflectorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 9), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyReflectorPort.setStatus('current')
portCopyInpktVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portCopyInpktVlan.setStatus('current')
portCopyMaxIngressSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portCopyMaxIngressSessions.setStatus('current')
portCopyMaxEgressSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portCopyMaxEgressSessions.setStatus('current')
crcSpanSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 4), )
if mibBuilder.loadTexts: crcSpanSessionTable.setStatus('current')
crcSpanSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-RMON-CONFIG-MIB", "crcSpanSessionNo"))
if mibBuilder.loadTexts: crcSpanSessionEntry.setStatus('current')
crcSpanSessionNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: crcSpanSessionNo.setStatus('current')
crcSpanSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("erspan", 3), ("service", 4), ("other", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanSessionType.setStatus('current')
crcSpanSessionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 4, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crcSpanSessionEnabled.setStatus('current')
crcSpanSessionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 4, 1, 4), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crcSpanSessionDescr.setStatus('current')
crcERSpanSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5), )
if mibBuilder.loadTexts: crcERSpanSessionTable.setStatus('current')
crcERSpanSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-RMON-CONFIG-MIB", "crcERSpanSessionNo"))
if mibBuilder.loadTexts: crcERSpanSessionEntry.setStatus('current')
crcERSpanSessionNo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: crcERSpanSessionNo.setStatus('current')
crcERSpanSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eRSpanSource", 1), ("eRSpanDestination", 2))).clone('eRSpanSource')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanSessionType.setStatus('current')
crcERSpanSessionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 3), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanSessionDescr.setStatus('current')
crcERSpanEncapID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanEncapID.setStatus('current')
crcERSpanIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 5), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanIpType.setStatus('current')
crcERSpanIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanIp.setStatus('current')
crcSrcERSpanIpTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanIpTTL.setStatus('current')
crcSrcERSpanDscpOrPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dscp", 1), ("precedence", 2))).clone('dscp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanDscpOrPrec.setStatus('current')
crcSrcERSpanIpPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanIpPrec.setStatus('current')
crcSrcERSpanIpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 10), Dscp()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanIpDscp.setStatus('current')
crcERSpanIpVRF = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 11), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanIpVRF.setStatus('current')
crcSrcERSpanLoVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanLoVlanMask.setStatus('current')
crcSrcERSpanHiVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanHiVlanMask.setStatus('current')
crcSrcERSpanOrigIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 14), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanOrigIpType.setStatus('current')
crcSrcERSpanOrigIp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 15), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSrcERSpanOrigIp.setStatus('current')
crcDstERSpanOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 16), Bits().clone(namedValues=NamedValues(("inpkts", 0), ("learningDisable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcDstERSpanOption.setStatus('deprecated')
crcERSpanSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 5, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanSessionRowStatus.setStatus('current')
crcERSpanIFTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 6), )
if mibBuilder.loadTexts: crcERSpanIFTable.setStatus('current')
crcERSpanIFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-RMON-CONFIG-MIB", "crcERSpanSessionNo"), (0, "CISCO-RMON-CONFIG-MIB", "crcERSpanIFIndex"))
if mibBuilder.loadTexts: crcERSpanIFEntry.setStatus('current')
crcERSpanIFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: crcERSpanIFIndex.setStatus('current')
crcERSpanIFDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("copyRxOnly", 1), ("copyTxOnly", 2), ("copyBoth", 3))).clone('copyBoth')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanIFDirection.setStatus('current')
crcERSpanIFRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanIFRowStatus.setStatus('current')
crcERSpanIFOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 6, 1, 4), Bits().clone(namedValues=NamedValues(("inpkts", 0), ("learningDisable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcERSpanIFOption.setStatus('current')
crcSpanDstPermitListEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crcSpanDstPermitListEnabled.setStatus('current')
crcSpanDstPermitListTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 8), )
if mibBuilder.loadTexts: crcSpanDstPermitListTable.setStatus('current')
crcSpanDstPermitListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: crcSpanDstPermitListEntry.setStatus('current')
crcSpanDstPermitListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 2, 8, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crcSpanDstPermitListRowStatus.setStatus('current')
crcSpanEgressReplicationMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 5, 1), SpanTxReplicationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crcSpanEgressReplicationMode.setStatus('current')
crcSpanSessionEgressModeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 5, 2), )
if mibBuilder.loadTexts: crcSpanSessionEgressModeTable.setStatus('current')
crcSpanSessionEgressModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-RMON-CONFIG-MIB", "crcSpanSessionNo"))
if mibBuilder.loadTexts: crcSpanSessionEgressModeEntry.setStatus('current')
crcSpanEgressReplicationOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 5, 2, 1, 1), SpanTxReplicationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanEgressReplicationOperMode.setStatus('current')
crcSpanCapacityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 1), )
if mibBuilder.loadTexts: crcSpanCapacityTable.setStatus('current')
crcSpanCapacityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-RMON-CONFIG-MIB", "crcSpanCapacityType"))
if mibBuilder.loadTexts: crcSpanCapacityEntry.setStatus('current')
crcSpanCapacityType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("allSrc", 1), ("allDst", 2), ("localSrc", 3), ("localTx", 4), ("rspanSrc", 5), ("rspanDst", 6), ("erspanSrc", 7), ("erspanDst", 8), ("serviceModule", 9), ("oamLoopback", 10), ("capture", 11), ("reflector", 12))))
if mibBuilder.loadTexts: crcSpanCapacityType.setStatus('current')
crcSpanCapacityShared = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("source", 2), ("destination", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanCapacityShared.setStatus('current')
crcSpanMaxSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanMaxSession.setStatus('current')
crcSpanUsedSession = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanUsedSession.setStatus('current')
crcSpanSharedSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanSharedSource.setStatus('current')
crcSpanSharedDestination = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 6, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crcSpanSharedDestination.setStatus('current')
rmonSampleConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 3, 1), )
if mibBuilder.loadTexts: rmonSampleConfigTable.setStatus('current')
rmonSampleConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rmonSampleConfigEntry.setStatus('current')
rmonSamplingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 3, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rmonSamplingEnabled.setStatus('current')
rmonMaxAlarms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 4, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rmonMaxAlarms.setStatus('current')
rmonAlarmEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 4, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rmonAlarmEnable.setStatus('current')
rmonConfiguredAlarms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 4, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rmonConfiguredAlarms.setStatus('current')
rmonConfiguredHcAlarms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 103, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rmonConfiguredHcAlarms.setStatus('current')
ciscoRmonConfigCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1))
ciscoRmonConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2))
ciscoRmonConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 1)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigCompliance = ciscoRmonConfigCompliance.setStatus('deprecated')
ciscoRmonConfigComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 2)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions3Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev1 = ciscoRmonConfigComplianceRev1.setStatus('deprecated')
ciscoRmonConfigComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 3)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions3Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev2 = ciscoRmonConfigComplianceRev2.setStatus('deprecated')
ciscoRmonConfigComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 4)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev3 = ciscoRmonConfigComplianceRev3.setStatus('deprecated')
ciscoRmonConfigComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 5)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev4 = ciscoRmonConfigComplianceRev4.setStatus('deprecated')
ciscoRmonConfigComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 6)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev5 = ciscoRmonConfigComplianceRev5.setStatus('deprecated')
ciscoRmonConfigComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 7)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions9Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev6 = ciscoRmonConfigComplianceRev6.setStatus('deprecated')
ciscoRmonConfigComplianceRev7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 8)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroupRev1"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions9Group"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFOptionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev7 = ciscoRmonConfigComplianceRev7.setStatus('deprecated')
ciscoRmonConfigComplianceRev8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 9)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroupRev1"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions9Group"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFOptionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanEgressReplicationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev8 = ciscoRmonConfigComplianceRev8.setStatus('deprecated')
ciscoRmonConfigComplianceRev9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 10)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroupRev1"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions9Group"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFOptionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanEgressReplicationGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanCapacityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev9 = ciscoRmonConfigComplianceRev9.setStatus('deprecated')
ciscoRmonConfigComplianceRev10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 1, 11)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmon2ExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensionsGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions2Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions4Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions5Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions6Group"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions7Group"), ("CISCO-RMON-CONFIG-MIB", "rmonSampleConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmConfigGroup"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmCapacityGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions8Group"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionGroupRev1"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListGroup"), ("CISCO-RMON-CONFIG-MIB", "smonExtensions9Group"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFOptionGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanEgressReplicationGroup"), ("CISCO-RMON-CONFIG-MIB", "crcSpanCapacityGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmonConfigComplianceRev10 = ciscoRmonConfigComplianceRev10.setStatus('current')
rmon2ExtensionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 1)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmonTimeFilterMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon2ExtensionsGroup = rmon2ExtensionsGroup.setStatus('current')
smonExtensionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 2)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopyLoVlanMask"), ("CISCO-RMON-CONFIG-MIB", "portCopyHiVlanMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensionsGroup = smonExtensionsGroup.setStatus('current')
rmonSampleConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 3)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmonSamplingEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonSampleConfigGroup = rmonSampleConfigGroup.setStatus('current')
smonExtensions2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 4)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopyDestLoVlanMask"), ("CISCO-RMON-CONFIG-MIB", "portCopyDestHiVlanMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions2Group = smonExtensions2Group.setStatus('current')
smonExtensions3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 5)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopyOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions3Group = smonExtensions3Group.setStatus('deprecated')
smonExtensions4Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 6)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopySessionNo"), ("CISCO-RMON-CONFIG-MIB", "portCopyRemoveSrc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions4Group = smonExtensions4Group.setStatus('current')
smonExtensions5Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 7)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopySessionType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions5Group = smonExtensions5Group.setStatus('current')
smonExtensions6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 8)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopyMaxIngressSessions"), ("CISCO-RMON-CONFIG-MIB", "portCopyMaxEgressSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions6Group = smonExtensions6Group.setStatus('current')
smonExtensions7Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 9)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopySessionType"), ("CISCO-RMON-CONFIG-MIB", "portCopyReflectorPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions7Group = smonExtensions7Group.setStatus('current')
rmonAlarmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 10)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmonMaxAlarms"), ("CISCO-RMON-CONFIG-MIB", "rmonAlarmEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonAlarmConfigGroup = rmonAlarmConfigGroup.setStatus('current')
smonExtensions8Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 11)).setObjects(("CISCO-RMON-CONFIG-MIB", "portCopyOption"), ("CISCO-RMON-CONFIG-MIB", "portCopyInpktVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions8Group = smonExtensions8Group.setStatus('current')
crcSpanSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 12)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcSpanSessionType"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSessionEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcSpanSessionGroup = crcSpanSessionGroup.setStatus('current')
crcERSpanSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 13)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionType"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionDescr"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanEncapID"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIpType"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIp"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanIpTTL"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanDscpOrPrec"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanIpPrec"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanIpDscp"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIpVRF"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanLoVlanMask"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanHiVlanMask"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanOrigIpType"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanOrigIp"), ("CISCO-RMON-CONFIG-MIB", "crcDstERSpanOption"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcERSpanSessionGroup = crcERSpanSessionGroup.setStatus('deprecated')
crcERSpanIFGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 14)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcERSpanIFDirection"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIFRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcERSpanIFGroup = crcERSpanIFGroup.setStatus('current')
crcSpanDstPermitListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 15)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListEnabled"), ("CISCO-RMON-CONFIG-MIB", "crcSpanDstPermitListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcSpanDstPermitListGroup = crcSpanDstPermitListGroup.setStatus('current')
smonExtensions9Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 16)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcSpanSessionDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smonExtensions9Group = smonExtensions9Group.setStatus('current')
crcERSpanIFOptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 17)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcERSpanIFOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcERSpanIFOptionGroup = crcERSpanIFOptionGroup.setStatus('current')
crcERSpanSessionGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 18)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionType"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionDescr"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanEncapID"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIpType"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIp"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanIpTTL"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanDscpOrPrec"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanIpPrec"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanIpDscp"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanIpVRF"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanLoVlanMask"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanHiVlanMask"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanOrigIpType"), ("CISCO-RMON-CONFIG-MIB", "crcSrcERSpanOrigIp"), ("CISCO-RMON-CONFIG-MIB", "crcERSpanSessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcERSpanSessionGroupRev1 = crcERSpanSessionGroupRev1.setStatus('current')
crcSpanEgressReplicationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 19)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcSpanEgressReplicationMode"), ("CISCO-RMON-CONFIG-MIB", "crcSpanEgressReplicationOperMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcSpanEgressReplicationGroup = crcSpanEgressReplicationGroup.setStatus('current')
crcSpanCapacityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 20)).setObjects(("CISCO-RMON-CONFIG-MIB", "crcSpanCapacityShared"), ("CISCO-RMON-CONFIG-MIB", "crcSpanMaxSession"), ("CISCO-RMON-CONFIG-MIB", "crcSpanUsedSession"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSharedSource"), ("CISCO-RMON-CONFIG-MIB", "crcSpanSharedDestination"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crcSpanCapacityGroup = crcSpanCapacityGroup.setStatus('current')
rmonAlarmCapacityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 103, 3, 2, 21)).setObjects(("CISCO-RMON-CONFIG-MIB", "rmonConfiguredAlarms"), ("CISCO-RMON-CONFIG-MIB", "rmonConfiguredHcAlarms"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmonAlarmCapacityGroup = rmonAlarmCapacityGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-RMON-CONFIG-MIB", rmonSampleConfigTable=rmonSampleConfigTable, rmonAlarmConfigGroup=rmonAlarmConfigGroup, crcERSpanSessionRowStatus=crcERSpanSessionRowStatus, crcERSpanSessionEntry=crcERSpanSessionEntry, crcSrcERSpanHiVlanMask=crcSrcERSpanHiVlanMask, crcSpanSessionEgressModeEntry=crcSpanSessionEgressModeEntry, crcERSpanIFEntry=crcERSpanIFEntry, crcERSpanIFOption=crcERSpanIFOption, ciscoRmonConfigComplianceRev6=ciscoRmonConfigComplianceRev6, rmonAlarmEnable=rmonAlarmEnable, crcERSpanSessionGroupRev1=crcERSpanSessionGroupRev1, crcSpanDstPermitListEntry=crcSpanDstPermitListEntry, crcSpanCapacityGroup=crcSpanCapacityGroup, ciscoSpanCapacityObjects=ciscoSpanCapacityObjects, ciscoSampleConfigObjects=ciscoSampleConfigObjects, crcSrcERSpanDscpOrPrec=crcSrcERSpanDscpOrPrec, crcSpanDstPermitListTable=crcSpanDstPermitListTable, portCopyRemoveSrc=portCopyRemoveSrc, smonExtensions5Group=smonExtensions5Group, ciscoRmonConfigComplianceRev7=ciscoRmonConfigComplianceRev7, ciscoRmonConfigCompliances=ciscoRmonConfigCompliances, portCopyReflectorPort=portCopyReflectorPort, crcSpanSessionTable=crcSpanSessionTable, PYSNMP_MODULE_ID=ciscoRmonConfigMIB, crcSrcERSpanOrigIpType=crcSrcERSpanOrigIpType, crcSpanSessionType=crcSpanSessionType, smonExtensionsGroup=smonExtensionsGroup, crcSpanSharedDestination=crcSpanSharedDestination, crcSrcERSpanIpTTL=crcSrcERSpanIpTTL, crcSpanDstPermitListEnabled=crcSpanDstPermitListEnabled, crcSpanEgressReplicationOperMode=crcSpanEgressReplicationOperMode, crcSpanSessionDescr=crcSpanSessionDescr, rmonSampleConfigGroup=rmonSampleConfigGroup, smonExtensions8Group=smonExtensions8Group, ciscoRmonConfigComplianceRev1=ciscoRmonConfigComplianceRev1, crcERSpanIp=crcERSpanIp, ciscoRmonConfigCompliance=ciscoRmonConfigCompliance, ciscoSpanTxReplicationObjects=ciscoSpanTxReplicationObjects, smonExtensions4Group=smonExtensions4Group, portCopyOption=portCopyOption, ciscoRmonConfigComplianceRev5=ciscoRmonConfigComplianceRev5, crcSpanMaxSession=crcSpanMaxSession, SpanTxReplicationMode=SpanTxReplicationMode, crcERSpanSessionDescr=crcERSpanSessionDescr, portCopyXTable=portCopyXTable, crcERSpanIFGroup=crcERSpanIFGroup, portCopyHiVlanMask=portCopyHiVlanMask, crcERSpanIFTable=crcERSpanIFTable, crcERSpanIFDirection=crcERSpanIFDirection, ciscoRmonConfigConformance=ciscoRmonConfigConformance, crcERSpanSessionGroup=crcERSpanSessionGroup, crcSrcERSpanIpPrec=crcSrcERSpanIpPrec, ciscoSmonConfigObjects=ciscoSmonConfigObjects, crcSpanEgressReplicationGroup=crcSpanEgressReplicationGroup, ciscoRmon2ConfigObjects=ciscoRmon2ConfigObjects, crcSpanCapacityType=crcSpanCapacityType, portCopySessionType=portCopySessionType, crcERSpanSessionTable=crcERSpanSessionTable, smonExtensions6Group=smonExtensions6Group, ciscoRmonConfigComplianceRev8=ciscoRmonConfigComplianceRev8, smonExtensions2Group=smonExtensions2Group, crcERSpanSessionType=crcERSpanSessionType, crcSrcERSpanOrigIp=crcSrcERSpanOrigIp, crcSpanSessionEntry=crcSpanSessionEntry, crcSpanEgressReplicationMode=crcSpanEgressReplicationMode, crcSrcERSpanLoVlanMask=crcSrcERSpanLoVlanMask, smonExtensions3Group=smonExtensions3Group, ciscoRmonConfigObjects=ciscoRmonConfigObjects, crcDstERSpanOption=crcDstERSpanOption, rmonConfiguredHcAlarms=rmonConfiguredHcAlarms, rmonMaxAlarms=rmonMaxAlarms, ciscoRmonConfigMIB=ciscoRmonConfigMIB, crcERSpanIpVRF=crcERSpanIpVRF, crcERSpanIFIndex=crcERSpanIFIndex, ciscoRmonConfigComplianceRev9=ciscoRmonConfigComplianceRev9, portCopyMaxEgressSessions=portCopyMaxEgressSessions, rmonAlarmCapacityGroup=rmonAlarmCapacityGroup, rmonSampleConfigEntry=rmonSampleConfigEntry, crcERSpanIFRowStatus=crcERSpanIFRowStatus, portCopySessionNo=portCopySessionNo, crcSpanDstPermitListRowStatus=crcSpanDstPermitListRowStatus, crcSpanSessionNo=crcSpanSessionNo, portCopyDestLoVlanMask=portCopyDestLoVlanMask, rmonSamplingEnabled=rmonSamplingEnabled, rmonTimeFilterMode=rmonTimeFilterMode, crcSpanCapacityShared=crcSpanCapacityShared, crcERSpanIFOptionGroup=crcERSpanIFOptionGroup, smonExtensions7Group=smonExtensions7Group, crcERSpanEncapID=crcERSpanEncapID, crcSpanCapacityEntry=crcSpanCapacityEntry, ciscoRmonConfigComplianceRev4=ciscoRmonConfigComplianceRev4, ciscoRmonConfigComplianceRev3=ciscoRmonConfigComplianceRev3, ciscoRmonConfigNotifications=ciscoRmonConfigNotifications, ciscoRmonConfigGroups=ciscoRmonConfigGroups, crcSpanSessionEgressModeTable=crcSpanSessionEgressModeTable, crcSpanDstPermitListGroup=crcSpanDstPermitListGroup, portCopyMaxIngressSessions=portCopyMaxIngressSessions, crcSpanSharedSource=crcSpanSharedSource, rmonConfiguredAlarms=rmonConfiguredAlarms, crcERSpanSessionNo=crcERSpanSessionNo, portCopyInpktVlan=portCopyInpktVlan, crcSrcERSpanIpDscp=crcSrcERSpanIpDscp, portCopyXEntry=portCopyXEntry, crcERSpanIpType=crcERSpanIpType, ciscoRmonConfigComplianceRev2=ciscoRmonConfigComplianceRev2, smonExtensions9Group=smonExtensions9Group, portCopyLoVlanMask=portCopyLoVlanMask, rmon2ExtensionsGroup=rmon2ExtensionsGroup, crcSpanSessionEnabled=crcSpanSessionEnabled, crcSpanSessionGroup=crcSpanSessionGroup, crcSpanUsedSession=crcSpanUsedSession, portCopyDestHiVlanMask=portCopyDestHiVlanMask, crcSpanCapacityTable=crcSpanCapacityTable, ciscoAlarmConfigObjects=ciscoAlarmConfigObjects, ciscoRmonConfigComplianceRev10=ciscoRmonConfigComplianceRev10)
