#
# PySNMP MIB module ALVARION-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionNotificationEnable, AlvarionAuthenticationMode, AlvarionProfileIndexOrZero = mibBuilder.importSymbols("ALVARION-TC", "AlvarionNotificationEnable", "AlvarionAuthenticationMode", "AlvarionProfileIndexOrZero")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ifInErrors, ifInUcastPkts, ifOutErrors, ifOutUcastPkts = mibBuilder.importSymbols("IF-MIB", "ifInErrors", "ifInUcastPkts", "ifOutErrors", "ifOutUcastPkts")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, NotificationType, ObjectIdentity, MibIdentifier, Gauge32, TimeTicks, ModuleIdentity, Counter32, Unsigned32, Bits, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "NotificationType", "ObjectIdentity", "MibIdentifier", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter32", "Unsigned32", "Bits", "Counter64", "Integer32")
MacAddress, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "DisplayString", "TextualConvention")
alvarionSystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6))
if mibBuilder.loadTexts: alvarionSystemMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionSystemMIB.setOrganization('Alvarion Ltd.')
alvarionSystemMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1))
systemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1))
systemTime = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2))
adminAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3))
heartbeat = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 4))
systemProductName = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemProductName.setStatus('current')
systemFirmwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFirmwareRevision.setStatus('current')
systemBootRevision = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemBootRevision.setStatus('current')
systemHardwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHardwareRevision.setStatus('current')
systemSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSerialNumber.setStatus('current')
systemConfigurationVersion = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemConfigurationVersion.setStatus('current')
systemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUpTime.setStatus('current')
systemMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: systemMacAddress.setStatus('current')
systemWanPortIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 9), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: systemWanPortIpAddress.setStatus('current')
systemProductFlavor = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemProductFlavor.setStatus('current')
systemDeviceIdentification = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemDeviceIdentification.setStatus('current')
systemTimeUpdateMode = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("sntpUdp", 2), ("tp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTimeUpdateMode.setStatus('current')
systemTimeLostWhenRebooting = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTimeLostWhenRebooting.setStatus('current')
systemTimeDSTOn = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTimeDSTOn.setStatus('current')
systemDate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemDate.setStatus('current')
systemTimeOfDay = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTimeOfDay.setStatus('current')
systemTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTimeZone.setStatus('current')
systemTimeServerTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 7), )
if mibBuilder.loadTexts: systemTimeServerTable.setStatus('current')
systemTimeServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 7, 1), ).setIndexNames((0, "ALVARION-SYSTEM-MIB", "systemTimeServerIndex"))
if mibBuilder.loadTexts: systemTimeServerEntry.setStatus('current')
systemTimeServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: systemTimeServerIndex.setStatus('current')
systemTimeServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTimeServerAddress.setStatus('current')
systemTimeServerNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 2, 8), AlvarionNotificationEnable()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTimeServerNotificationEnabled.setStatus('current')
adminAccessAuthenMode = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 1), AlvarionAuthenticationMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessAuthenMode.setStatus('current')
adminAccessAuthenProfileIndex = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 2), AlvarionProfileIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessAuthenProfileIndex.setStatus('current')
adminAccessMaxLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessMaxLoginAttempts.setStatus('current')
adminAccessLockOutPeriod = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessLockOutPeriod.setStatus('current')
adminAccessLoginNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 5), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessLoginNotificationEnabled.setStatus('current')
adminAccessAuthFailureNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 6), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessAuthFailureNotificationEnabled.setStatus('current')
adminAccessInfo = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: adminAccessInfo.setStatus('current')
adminAccessProfileTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 8), )
if mibBuilder.loadTexts: adminAccessProfileTable.setStatus('current')
adminAccessProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 8, 1), ).setIndexNames((0, "ALVARION-SYSTEM-MIB", "adminAccessProfileIndex"))
if mibBuilder.loadTexts: adminAccessProfileEntry.setStatus('current')
adminAccessProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: adminAccessProfileIndex.setStatus('current')
adminAccessUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 253))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminAccessUserName.setStatus('current')
adminAccessAdministrativeRights = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminAccessAdministrativeRights.setStatus('current')
adminAccessLogoutNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 3, 9), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminAccessLogoutNotificationEnabled.setStatus('current')
heartbeatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 31536000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: heartbeatPeriod.setStatus('current')
heartbeatNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 1, 4, 2), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: heartbeatNotificationEnabled.setStatus('current')
alvarionSystemMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2))
alvarionSystemMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0))
adminAccessAuthFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0, 1)).setObjects(("ALVARION-SYSTEM-MIB", "adminAccessInfo"))
if mibBuilder.loadTexts: adminAccessAuthFailureNotification.setStatus('current')
adminAccessLoginNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0, 2))
if mibBuilder.loadTexts: adminAccessLoginNotification.setStatus('current')
systemColdStart = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0, 3)).setObjects(("ALVARION-SYSTEM-MIB", "systemProductName"), ("ALVARION-SYSTEM-MIB", "systemFirmwareRevision"), ("ALVARION-SYSTEM-MIB", "systemConfigurationVersion"), ("ALVARION-SYSTEM-MIB", "systemSerialNumber"))
if mibBuilder.loadTexts: systemColdStart.setStatus('current')
systemHeartbeatNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0, 4)).setObjects(("ALVARION-SYSTEM-MIB", "systemSerialNumber"), ("ALVARION-SYSTEM-MIB", "systemMacAddress"), ("ALVARION-SYSTEM-MIB", "systemWanPortIpAddress"), ("ALVARION-SYSTEM-MIB", "systemUpTime"), ("IF-MIB", "ifOutUcastPkts"), ("IF-MIB", "ifInUcastPkts"), ("IF-MIB", "ifOutErrors"), ("IF-MIB", "ifInErrors"), ("IF-MIB", "ifOutUcastPkts"), ("IF-MIB", "ifInUcastPkts"), ("IF-MIB", "ifOutErrors"), ("IF-MIB", "ifInErrors"), ("IF-MIB", "ifOutUcastPkts"), ("IF-MIB", "ifInUcastPkts"), ("IF-MIB", "ifOutErrors"), ("IF-MIB", "ifInErrors"))
if mibBuilder.loadTexts: systemHeartbeatNotification.setStatus('current')
adminAccessLogoutNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0, 5)).setObjects(("ALVARION-SYSTEM-MIB", "adminAccessInfo"))
if mibBuilder.loadTexts: adminAccessLogoutNotification.setStatus('current')
timeServerFailure = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 2, 0, 6)).setObjects(("ALVARION-SYSTEM-MIB", "systemTimeServerAddress"))
if mibBuilder.loadTexts: timeServerFailure.setStatus('current')
alvarionSystemMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3))
alvarionSystemMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 1))
alvarionSystemMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 2))
alvarionSystemMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 1, 1)).setObjects(("ALVARION-SYSTEM-MIB", "alvarionSystemMIBGroup"), ("ALVARION-SYSTEM-MIB", "alvarionSystemNotificationGroup"), ("ALVARION-SYSTEM-MIB", "alvarionAdminAccessProfileGroup"), ("ALVARION-SYSTEM-MIB", "alvarionAdminAccessNotificationGroup"), ("ALVARION-SYSTEM-MIB", "alvarionTimeNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionSystemMIBCompliance = alvarionSystemMIBCompliance.setStatus('current')
alvarionSystemMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 2, 1)).setObjects(("ALVARION-SYSTEM-MIB", "systemProductName"), ("ALVARION-SYSTEM-MIB", "systemFirmwareRevision"), ("ALVARION-SYSTEM-MIB", "systemBootRevision"), ("ALVARION-SYSTEM-MIB", "systemHardwareRevision"), ("ALVARION-SYSTEM-MIB", "systemSerialNumber"), ("ALVARION-SYSTEM-MIB", "systemConfigurationVersion"), ("ALVARION-SYSTEM-MIB", "systemUpTime"), ("ALVARION-SYSTEM-MIB", "systemMacAddress"), ("ALVARION-SYSTEM-MIB", "systemWanPortIpAddress"), ("ALVARION-SYSTEM-MIB", "systemProductFlavor"), ("ALVARION-SYSTEM-MIB", "systemDeviceIdentification"), ("ALVARION-SYSTEM-MIB", "systemTimeUpdateMode"), ("ALVARION-SYSTEM-MIB", "systemTimeLostWhenRebooting"), ("ALVARION-SYSTEM-MIB", "systemTimeDSTOn"), ("ALVARION-SYSTEM-MIB", "systemDate"), ("ALVARION-SYSTEM-MIB", "systemTimeOfDay"), ("ALVARION-SYSTEM-MIB", "systemTimeZone"), ("ALVARION-SYSTEM-MIB", "systemTimeServerAddress"), ("ALVARION-SYSTEM-MIB", "systemTimeServerNotificationEnabled"), ("ALVARION-SYSTEM-MIB", "heartbeatPeriod"), ("ALVARION-SYSTEM-MIB", "heartbeatNotificationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionSystemMIBGroup = alvarionSystemMIBGroup.setStatus('current')
alvarionAdminAccessProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 2, 2)).setObjects(("ALVARION-SYSTEM-MIB", "adminAccessAuthenMode"), ("ALVARION-SYSTEM-MIB", "adminAccessMaxLoginAttempts"), ("ALVARION-SYSTEM-MIB", "adminAccessLockOutPeriod"), ("ALVARION-SYSTEM-MIB", "adminAccessLoginNotificationEnabled"), ("ALVARION-SYSTEM-MIB", "adminAccessAuthFailureNotificationEnabled"), ("ALVARION-SYSTEM-MIB", "adminAccessAuthenProfileIndex"), ("ALVARION-SYSTEM-MIB", "adminAccessInfo"), ("ALVARION-SYSTEM-MIB", "adminAccessUserName"), ("ALVARION-SYSTEM-MIB", "adminAccessAdministrativeRights"), ("ALVARION-SYSTEM-MIB", "adminAccessLogoutNotificationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionAdminAccessProfileGroup = alvarionAdminAccessProfileGroup.setStatus('current')
alvarionSystemNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 2, 3)).setObjects(("ALVARION-SYSTEM-MIB", "systemColdStart"), ("ALVARION-SYSTEM-MIB", "systemHeartbeatNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionSystemNotificationGroup = alvarionSystemNotificationGroup.setStatus('current')
alvarionAdminAccessNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 2, 4)).setObjects(("ALVARION-SYSTEM-MIB", "adminAccessAuthFailureNotification"), ("ALVARION-SYSTEM-MIB", "adminAccessLoginNotification"), ("ALVARION-SYSTEM-MIB", "adminAccessLogoutNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionAdminAccessNotificationGroup = alvarionAdminAccessNotificationGroup.setStatus('current')
alvarionTimeNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 6, 3, 2, 5)).setObjects(("ALVARION-SYSTEM-MIB", "timeServerFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionTimeNotificationGroup = alvarionTimeNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ALVARION-SYSTEM-MIB", alvarionSystemMIB=alvarionSystemMIB, systemUpTime=systemUpTime, heartbeatPeriod=heartbeatPeriod, adminAccess=adminAccess, adminAccessAuthFailureNotificationEnabled=adminAccessAuthFailureNotificationEnabled, systemConfigurationVersion=systemConfigurationVersion, systemTimeServerIndex=systemTimeServerIndex, alvarionSystemMIBConformance=alvarionSystemMIBConformance, systemDate=systemDate, systemSerialNumber=systemSerialNumber, systemMacAddress=systemMacAddress, timeServerFailure=timeServerFailure, alvarionSystemMIBObjects=alvarionSystemMIBObjects, alvarionAdminAccessNotificationGroup=alvarionAdminAccessNotificationGroup, PYSNMP_MODULE_ID=alvarionSystemMIB, adminAccessInfo=adminAccessInfo, systemHeartbeatNotification=systemHeartbeatNotification, heartbeat=heartbeat, adminAccessLoginNotificationEnabled=adminAccessLoginNotificationEnabled, systemTimeServerTable=systemTimeServerTable, adminAccessLogoutNotification=adminAccessLogoutNotification, adminAccessAuthFailureNotification=adminAccessAuthFailureNotification, systemTimeServerAddress=systemTimeServerAddress, adminAccessAuthenMode=adminAccessAuthenMode, systemTimeServerNotificationEnabled=systemTimeServerNotificationEnabled, heartbeatNotificationEnabled=heartbeatNotificationEnabled, systemProductFlavor=systemProductFlavor, systemInfo=systemInfo, systemHardwareRevision=systemHardwareRevision, alvarionSystemMIBNotificationPrefix=alvarionSystemMIBNotificationPrefix, alvarionSystemMIBNotifications=alvarionSystemMIBNotifications, alvarionSystemMIBCompliances=alvarionSystemMIBCompliances, alvarionAdminAccessProfileGroup=alvarionAdminAccessProfileGroup, alvarionTimeNotificationGroup=alvarionTimeNotificationGroup, systemTimeServerEntry=systemTimeServerEntry, systemTimeZone=systemTimeZone, systemProductName=systemProductName, systemTime=systemTime, systemFirmwareRevision=systemFirmwareRevision, adminAccessMaxLoginAttempts=adminAccessMaxLoginAttempts, systemWanPortIpAddress=systemWanPortIpAddress, systemTimeUpdateMode=systemTimeUpdateMode, adminAccessProfileTable=adminAccessProfileTable, systemTimeOfDay=systemTimeOfDay, systemDeviceIdentification=systemDeviceIdentification, alvarionSystemNotificationGroup=alvarionSystemNotificationGroup, adminAccessProfileIndex=adminAccessProfileIndex, adminAccessLockOutPeriod=adminAccessLockOutPeriod, alvarionSystemMIBGroup=alvarionSystemMIBGroup, adminAccessLoginNotification=adminAccessLoginNotification, systemTimeLostWhenRebooting=systemTimeLostWhenRebooting, adminAccessLogoutNotificationEnabled=adminAccessLogoutNotificationEnabled, alvarionSystemMIBCompliance=alvarionSystemMIBCompliance, alvarionSystemMIBGroups=alvarionSystemMIBGroups, adminAccessUserName=adminAccessUserName, systemColdStart=systemColdStart, systemTimeDSTOn=systemTimeDSTOn, adminAccessAuthenProfileIndex=adminAccessAuthenProfileIndex, adminAccessAdministrativeRights=adminAccessAdministrativeRights, adminAccessProfileEntry=adminAccessProfileEntry, systemBootRevision=systemBootRevision)
