#
# PySNMP MIB module RDN-CHANNEL-BONDING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RDN-CHANNEL-BONDING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
docsIfCmtsCmStatusIndex, = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsCmStatusIndex")
IfDirection, ChSetId = mibBuilder.importSymbols("DOCS-IF3-MIB", "IfDirection", "ChSetId")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddressIPv6, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6")
riverdelta, = mibBuilder.importSymbols("RDN-MIB", "riverdelta")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter64, Unsigned32, Gauge32, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ObjectIdentity, IpAddress, Integer32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "Unsigned32", "Gauge32", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ObjectIdentity", "IpAddress", "Integer32", "iso", "NotificationType")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
rdnChannelBondingMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4981, 9))
rdnChannelBondingMib.setRevisions(('2011-07-20 00:00', '2011-05-17 00:00', '2011-05-02 00:00', '2008-08-08 00:00', '2007-02-26 00:00',))
if mibBuilder.loadTexts: rdnChannelBondingMib.setLastUpdated('201107200000Z')
if mibBuilder.loadTexts: rdnChannelBondingMib.setOrganization('Motorola')
class ChSetListStr(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 176)

rdnBondingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 9, 5), )
if mibBuilder.loadTexts: rdnBondingGroupTable.setStatus('current')
rdnBondingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 9, 5, 1), ).setIndexNames((0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupMacIfIndex"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupDir"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupId"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupChanIndex"))
if mibBuilder.loadTexts: rdnBondingGroupEntry.setStatus('current')
rdnBondingGroupMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: rdnBondingGroupMacIfIndex.setStatus('current')
rdnBondingGroupDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 5, 1, 2), IfDirection())
if mibBuilder.loadTexts: rdnBondingGroupDir.setStatus('current')
rdnBondingGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: rdnBondingGroupId.setStatus('current')
rdnBondingGroupChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: rdnBondingGroupChanIndex.setStatus('current')
rdnBondingGroupChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnBondingGroupChanId.setStatus('current')
rdnBondingGroupStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 9, 6), )
if mibBuilder.loadTexts: rdnBondingGroupStatsTable.setStatus('current')
rdnBondingGroupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 9, 6, 1), ).setIndexNames((0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupMacIfIndex"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupDir"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupId"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupChanIndex"))
if mibBuilder.loadTexts: rdnBondingGroupStatsEntry.setStatus('current')
rdnBondingGroupStatsChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnBondingGroupStatsChanId.setStatus('current')
rdnBondingGroupStatsOctetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnBondingGroupStatsOctetCount.setStatus('current')
rdnBondingGroupStatsPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnBondingGroupStatsPacketCount.setStatus('current')
rdnBondingGroupCmTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 9, 7), )
if mibBuilder.loadTexts: rdnBondingGroupCmTable.setStatus('current')
rdnBondingGroupCmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 9, 7, 1), ).setIndexNames((0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupMacIfIndex"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupDir"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnBondingGroupId"))
if mibBuilder.loadTexts: rdnBondingGroupCmEntry.setStatus('current')
rdnBondingGroupCmRegisteredModems = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnBondingGroupCmRegisteredModems.setStatus('current')
rdnCmtsCmPartialServiceTable = MibTable((1, 3, 6, 1, 4, 1, 4981, 9, 8), )
if mibBuilder.loadTexts: rdnCmtsCmPartialServiceTable.setStatus('current')
rdnCmtsCmPartialServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"), (0, "RDN-CHANNEL-BONDING-MIB", "rdnCmtsCmPSDir"))
if mibBuilder.loadTexts: rdnCmtsCmPartialServiceEntry.setStatus('current')
rdnCmtsCmPSDir = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 1), IfDirection())
if mibBuilder.loadTexts: rdnCmtsCmPSDir.setStatus('current')
rdnCmtsCmPSMacDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSMacDomainIfIndex.setStatus('current')
rdnCmtsCmPSMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSMacAddress.setStatus('current')
rdnCmtsCmPSAssignedChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 4), ChSetId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSAssignedChSetId.setStatus('current')
rdnCmtsCmPSActiveChSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 5), ChSetId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSActiveChSetId.setStatus('current')
rdnCmtsCmPSAssignedChSetList = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 6), ChSetListStr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSAssignedChSetList.setStatus('current')
rdnCmtsCmPSNonActiveChList = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 7), ChSetListStr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSNonActiveChList.setStatus('current')
rdnCmtsCmPSIpv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSIpv4Addr.setStatus('current')
rdnCmtsCmPSIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4981, 9, 8, 1, 9), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rdnCmtsCmPSIpv6Addr.setStatus('current')
mibBuilder.exportSymbols("RDN-CHANNEL-BONDING-MIB", rdnCmtsCmPSMacAddress=rdnCmtsCmPSMacAddress, rdnCmtsCmPSAssignedChSetList=rdnCmtsCmPSAssignedChSetList, rdnCmtsCmPSMacDomainIfIndex=rdnCmtsCmPSMacDomainIfIndex, rdnBondingGroupCmRegisteredModems=rdnBondingGroupCmRegisteredModems, rdnBondingGroupDir=rdnBondingGroupDir, rdnBondingGroupCmTable=rdnBondingGroupCmTable, rdnBondingGroupMacIfIndex=rdnBondingGroupMacIfIndex, rdnBondingGroupTable=rdnBondingGroupTable, PYSNMP_MODULE_ID=rdnChannelBondingMib, rdnBondingGroupChanId=rdnBondingGroupChanId, ChSetListStr=ChSetListStr, rdnBondingGroupId=rdnBondingGroupId, rdnCmtsCmPSNonActiveChList=rdnCmtsCmPSNonActiveChList, rdnBondingGroupStatsTable=rdnBondingGroupStatsTable, rdnCmtsCmPSDir=rdnCmtsCmPSDir, rdnBondingGroupStatsChanId=rdnBondingGroupStatsChanId, rdnCmtsCmPSAssignedChSetId=rdnCmtsCmPSAssignedChSetId, rdnBondingGroupStatsPacketCount=rdnBondingGroupStatsPacketCount, rdnCmtsCmPartialServiceTable=rdnCmtsCmPartialServiceTable, rdnBondingGroupStatsEntry=rdnBondingGroupStatsEntry, rdnBondingGroupStatsOctetCount=rdnBondingGroupStatsOctetCount, rdnCmtsCmPSIpv4Addr=rdnCmtsCmPSIpv4Addr, rdnCmtsCmPSActiveChSetId=rdnCmtsCmPSActiveChSetId, rdnCmtsCmPSIpv6Addr=rdnCmtsCmPSIpv6Addr, rdnBondingGroupEntry=rdnBondingGroupEntry, rdnBondingGroupChanIndex=rdnBondingGroupChanIndex, rdnChannelBondingMib=rdnChannelBondingMib, rdnCmtsCmPartialServiceEntry=rdnCmtsCmPartialServiceEntry, rdnBondingGroupCmEntry=rdnBondingGroupCmEntry)
