#
# PySNMP MIB module BETTER-NETWORKS-ETHERNETBOX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BETTER-NETWORKS-ETHERNETBOX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:20:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, ModuleIdentity, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, MibIdentifier, NotificationType, ObjectIdentity, Integer32, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "ModuleIdentity", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "MibIdentifier", "NotificationType", "ObjectIdentity", "Integer32", "iso", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
betternetworks = MibIdentifier((1, 3, 6, 1, 4, 1, 14848))
ethernetbox = MibIdentifier((1, 3, 6, 1, 4, 1, 14848, 2))
ethernetboxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14848, 2, 1))
misc = MibIdentifier((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1))
class DisplayString(OctetString):
    pass

version = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('mandatory')
location = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: location.setStatus('mandatory')
tempunit = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempunit.setStatus('mandatory')
refreshinterval = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: refreshinterval.setStatus('mandatory')
numbersensors = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: numbersensors.setStatus('mandatory')
address = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: address.setStatus('mandatory')
uptime = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uptime.setStatus('mandatory')
sensorTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2), )
if mibBuilder.loadTexts: sensorTable.setStatus('mandatory')
sensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "sensorindex"))
if mibBuilder.loadTexts: sensorEntry.setStatus('mandatory')
sensorindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorindex.setStatus('mandatory')
name = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: name.setStatus('mandatory')
sensortype = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sensortype.setStatus('mandatory')
valueint = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valueint.setStatus('mandatory')
valueint10 = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valueint10.setStatus('mandatory')
valuestr = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valuestr.setStatus('mandatory')
valid = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valid.setStatus('mandatory')
lowlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lowlimit.setStatus('mandatory')
highlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: highlimit.setStatus('mandatory')
hysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hysteresis.setStatus('mandatory')
status = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('mandatory')
inputTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3), )
if mibBuilder.loadTexts: inputTable.setStatus('mandatory')
inputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "inputindex"))
if mibBuilder.loadTexts: inputEntry.setStatus('mandatory')
inputindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputindex.setStatus('mandatory')
inputstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputstatus.setStatus('mandatory')
outputTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4), )
if mibBuilder.loadTexts: outputTable.setStatus('mandatory')
outputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "outputindex"))
if mibBuilder.loadTexts: outputEntry.setStatus('mandatory')
outputindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputindex.setStatus('mandatory')
outputstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outputstatus.setStatus('mandatory')
analogTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5), )
if mibBuilder.loadTexts: analogTable.setStatus('mandatory')
analogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "analogindex"))
if mibBuilder.loadTexts: analogEntry.setStatus('mandatory')
analogindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogindex.setStatus('mandatory')
analogname = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogname.setStatus('mandatory')
analogvalueint = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogvalueint.setStatus('mandatory')
analogvalueint10 = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogvalueint10.setStatus('mandatory')
analogvaluestr = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogvaluestr.setStatus('mandatory')
sensorstatusChangeToLow = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,1))
sensorstatusChangeToNormal = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,2))
sensorstatusChangeToHigh = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,3))
inputlineChangeToLow = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,4))
inputlineChangeToHigh = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,5))
ethernetboxPowerUp = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,100))
ethernetboxConfigSaved = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,101))
ethernetboxNotificationInputLineChangeToLow = NotificationType((1, 3, 6, 1, 4, 1, 14848, 4)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputindex"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "name"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "sensortype"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputstatus"))
if mibBuilder.loadTexts: ethernetboxNotificationInputLineChangeToLow.setStatus('current')
ethernetboxNotificationInputLineChangeToHigh = NotificationType((1, 3, 6, 1, 4, 1, 14848, 5)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputindex"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "name"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "sensortype"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputstatus"))
if mibBuilder.loadTexts: ethernetboxNotificationInputLineChangeToHigh.setStatus('current')
ethernetboxNotificationPowerUp = NotificationType((1, 3, 6, 1, 4, 1, 14848, 100)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"))
if mibBuilder.loadTexts: ethernetboxNotificationPowerUp.setStatus('current')
ethernetboxNotificationConfigSaved = NotificationType((1, 3, 6, 1, 4, 1, 14848, 101)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"))
if mibBuilder.loadTexts: ethernetboxNotificationConfigSaved.setStatus('current')
mibBuilder.exportSymbols("BETTER-NETWORKS-ETHERNETBOX-MIB", sensorTable=sensorTable, numbersensors=numbersensors, status=status, analogvalueint10=analogvalueint10, valueint=valueint, ethernetboxNotificationInputLineChangeToLow=ethernetboxNotificationInputLineChangeToLow, inputlineChangeToLow=inputlineChangeToLow, analogTable=analogTable, outputEntry=outputEntry, sensorstatusChangeToLow=sensorstatusChangeToLow, DisplayString=DisplayString, sensorEntry=sensorEntry, private=private, outputTable=outputTable, inputEntry=inputEntry, location=location, analogname=analogname, sensorstatusChangeToNormal=sensorstatusChangeToNormal, ethernetbox=ethernetbox, ethernetboxNotificationInputLineChangeToHigh=ethernetboxNotificationInputLineChangeToHigh, outputstatus=outputstatus, org=org, uptime=uptime, misc=misc, highlimit=highlimit, sensorindex=sensorindex, tempunit=tempunit, inputlineChangeToHigh=inputlineChangeToHigh, ethernetboxNotificationConfigSaved=ethernetboxNotificationConfigSaved, version=version, dod=dod, ethernetboxConfigSaved=ethernetboxConfigSaved, internet=internet, ethernetboxPowerUp=ethernetboxPowerUp, ethernetboxObjects=ethernetboxObjects, lowlimit=lowlimit, refreshinterval=refreshinterval, name=name, sensorstatusChangeToHigh=sensorstatusChangeToHigh, hysteresis=hysteresis, inputstatus=inputstatus, betternetworks=betternetworks, valueint10=valueint10, inputindex=inputindex, analogEntry=analogEntry, enterprises=enterprises, outputindex=outputindex, sensortype=sensortype, inputTable=inputTable, address=address, ethernetboxNotificationPowerUp=ethernetboxNotificationPowerUp, analogvaluestr=analogvaluestr, analogvalueint=analogvalueint, valid=valid, analogindex=analogindex, valuestr=valuestr)
