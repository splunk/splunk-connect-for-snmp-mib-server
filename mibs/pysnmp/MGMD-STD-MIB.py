#
# PySNMP MIB module MGMD-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MGMD-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:19:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, iso, Bits, Counter64, NotificationType, IpAddress, MibIdentifier, Integer32, ObjectIdentity, Counter32, mib_2 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "iso", "Bits", "Counter64", "NotificationType", "IpAddress", "MibIdentifier", "Integer32", "ObjectIdentity", "Counter32", "mib-2")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
mgmdStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 82))
if mibBuilder.loadTexts: mgmdStdMIB.setLastUpdated('200505170000Z')
if mibBuilder.loadTexts: mgmdStdMIB.setOrganization('Netgear Inc')
mgmdMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 82, 1))
mgmdHostInterfaceTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 3), )
if mibBuilder.loadTexts: mgmdHostInterfaceTable.setStatus('current')
mgmdHostInterfaceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 3, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdHostInterfaceIfIndex"), (0, "MGMD-STD-MIB", "mgmdHostInterfaceQuerierType"))
if mibBuilder.loadTexts: mgmdHostInterfaceEntry.setStatus('current')
mgmdHostInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: mgmdHostInterfaceIfIndex.setStatus('current')
mgmdHostInterfaceQuerierType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 2), InetAddressType())
if mibBuilder.loadTexts: mgmdHostInterfaceQuerierType.setStatus('current')
mgmdHostInterfaceQuerier = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostInterfaceQuerier.setStatus('current')
mgmdHostInterfaceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdHostInterfaceStatus.setStatus('current')
mgmdHostInterfaceVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdHostInterfaceVersion.setStatus('current')
mgmdHostInterfaceVersion1QuerierTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostInterfaceVersion1QuerierTimer.setStatus('current')
mgmdHostInterfaceVersion2QuerierTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostInterfaceVersion2QuerierTimer.setStatus('current')
mgmdRouterInterfaceTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 4), )
if mibBuilder.loadTexts: mgmdRouterInterfaceTable.setStatus('current')
mgmdRouterInterfaceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 4, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdRouterInterfaceIfIndex"), (0, "MGMD-STD-MIB", "mgmdRouterInterfaceQuerierType"))
if mibBuilder.loadTexts: mgmdRouterInterfaceEntry.setStatus('current')
mgmdRouterInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: mgmdRouterInterfaceIfIndex.setStatus('current')
mgmdRouterInterfaceQuerierType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 2), InetAddressType())
if mibBuilder.loadTexts: mgmdRouterInterfaceQuerierType.setStatus('current')
mgmdRouterInterfaceQuerier = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceQuerier.setStatus('current')
mgmdRouterInterfaceQueryInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 4), Unsigned32().clone(125)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdRouterInterfaceQueryInterval.setStatus('current')
mgmdRouterInterfaceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdRouterInterfaceStatus.setStatus('current')
mgmdRouterInterfaceVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdRouterInterfaceVersion.setStatus('current')
mgmdRouterInterfaceQueryMaxResponseTime = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(100)).setUnits('tenths of seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdRouterInterfaceQueryMaxResponseTime.setStatus('current')
mgmdRouterInterfaceQuerierUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceQuerierUpTime.setStatus('current')
mgmdRouterInterfaceQuerierExpiryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceQuerierExpiryTime.setStatus('current')
mgmdRouterInterfaceWrongVersionQueries = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceWrongVersionQueries.setStatus('current')
mgmdRouterInterfaceJoins = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceJoins.setStatus('current')
mgmdRouterInterfaceProxyIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 12), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceProxyIfIndex.setStatus('current')
mgmdRouterInterfaceGroups = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterInterfaceGroups.setStatus('current')
mgmdRouterInterfaceRobustness = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdRouterInterfaceRobustness.setStatus('current')
mgmdRouterInterfaceLastMembQueryIntvl = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setUnits('tenths of seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgmdRouterInterfaceLastMembQueryIntvl.setStatus('current')
mgmdHostCacheTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 5), )
if mibBuilder.loadTexts: mgmdHostCacheTable.setStatus('current')
mgmdHostCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 5, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdHostCacheAddressType"), (0, "MGMD-STD-MIB", "mgmdHostCacheAddress"), (0, "MGMD-STD-MIB", "mgmdHostCacheIfIndex"))
if mibBuilder.loadTexts: mgmdHostCacheEntry.setStatus('current')
mgmdHostCacheAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mgmdHostCacheAddressType.setStatus('current')
mgmdHostCacheAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: mgmdHostCacheAddress.setStatus('current')
mgmdHostCacheIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: mgmdHostCacheIfIndex.setStatus('current')
mgmdHostCacheUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostCacheUpTime.setStatus('current')
mgmdHostCacheLastReporter = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostCacheLastReporter.setStatus('current')
mgmdHostCacheSourceFilterMode = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostCacheSourceFilterMode.setStatus('current')
mgmdRouterCacheTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 6), )
if mibBuilder.loadTexts: mgmdRouterCacheTable.setStatus('current')
mgmdRouterCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 6, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdRouterCacheAddressType"), (0, "MGMD-STD-MIB", "mgmdRouterCacheAddress"), (0, "MGMD-STD-MIB", "mgmdRouterCacheIfIndex"))
if mibBuilder.loadTexts: mgmdRouterCacheEntry.setStatus('current')
mgmdRouterCacheAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mgmdRouterCacheAddressType.setStatus('current')
mgmdRouterCacheAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: mgmdRouterCacheAddress.setStatus('current')
mgmdRouterCacheIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: mgmdRouterCacheIfIndex.setStatus('current')
mgmdRouterCacheLastReporter = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterCacheLastReporter.setStatus('current')
mgmdRouterCacheUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterCacheUpTime.setStatus('current')
mgmdRouterCacheExpiryTime = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterCacheExpiryTime.setStatus('current')
mgmdRouterCacheVersion1HostTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterCacheVersion1HostTimer.setStatus('current')
mgmdRouterCacheVersion2HostTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterCacheVersion2HostTimer.setStatus('current')
mgmdRouterCacheSourceFilterMode = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterCacheSourceFilterMode.setStatus('current')
mgmdInverseHostCacheTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 7), )
if mibBuilder.loadTexts: mgmdInverseHostCacheTable.setStatus('current')
mgmdInverseHostCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 7, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdInverseHostCacheIfIndex"), (0, "MGMD-STD-MIB", "mgmdInverseHostCacheAddressType"), (0, "MGMD-STD-MIB", "mgmdInverseHostCacheAddress"))
if mibBuilder.loadTexts: mgmdInverseHostCacheEntry.setStatus('current')
mgmdInverseHostCacheIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: mgmdInverseHostCacheIfIndex.setStatus('current')
mgmdInverseHostCacheAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: mgmdInverseHostCacheAddressType.setStatus('current')
mgmdInverseHostCacheAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 7, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdInverseHostCacheAddress.setStatus('current')
mgmdInverseRouterCacheTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 8), )
if mibBuilder.loadTexts: mgmdInverseRouterCacheTable.setStatus('current')
mgmdInverseRouterCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 8, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdInverseRouterCacheIfIndex"), (0, "MGMD-STD-MIB", "mgmdInverseRouterCacheAddressType"), (0, "MGMD-STD-MIB", "mgmdInverseRouterCacheAddress"))
if mibBuilder.loadTexts: mgmdInverseRouterCacheEntry.setStatus('current')
mgmdInverseRouterCacheIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 8, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: mgmdInverseRouterCacheIfIndex.setStatus('current')
mgmdInverseRouterCacheAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 8, 1, 2), InetAddressType())
if mibBuilder.loadTexts: mgmdInverseRouterCacheAddressType.setStatus('current')
mgmdInverseRouterCacheAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 8, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdInverseRouterCacheAddress.setStatus('current')
mgmdHostSrcListTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 9), )
if mibBuilder.loadTexts: mgmdHostSrcListTable.setStatus('current')
mgmdHostSrcListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 9, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdHostSrcListAddressType"), (0, "MGMD-STD-MIB", "mgmdHostSrcListAddress"), (0, "MGMD-STD-MIB", "mgmdHostSrcListIfIndex"), (0, "MGMD-STD-MIB", "mgmdHostSrcListHostAddress"))
if mibBuilder.loadTexts: mgmdHostSrcListEntry.setStatus('current')
mgmdHostSrcListAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mgmdHostSrcListAddressType.setStatus('current')
mgmdHostSrcListAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: mgmdHostSrcListAddress.setStatus('current')
mgmdHostSrcListIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: mgmdHostSrcListIfIndex.setStatus('current')
mgmdHostSrcListHostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 9, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdHostSrcListHostAddress.setStatus('current')
mgmdRouterSrcListTable = MibTable((1, 3, 6, 1, 2, 1, 82, 1, 10), )
if mibBuilder.loadTexts: mgmdRouterSrcListTable.setStatus('current')
mgmdRouterSrcListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 82, 1, 10, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdRouterSrcListAddressType"), (0, "MGMD-STD-MIB", "mgmdRouterSrcListAddress"), (0, "MGMD-STD-MIB", "mgmdRouterSrcListIfIndex"), (0, "MGMD-STD-MIB", "mgmdRouterSrcListHostAddress"))
if mibBuilder.loadTexts: mgmdRouterSrcListEntry.setStatus('current')
mgmdRouterSrcListAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mgmdRouterSrcListAddressType.setStatus('current')
mgmdRouterSrcListAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: mgmdRouterSrcListAddress.setStatus('current')
mgmdRouterSrcListIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: mgmdRouterSrcListIfIndex.setStatus('current')
mgmdRouterSrcListHostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 82, 1, 10, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgmdRouterSrcListHostAddress.setStatus('current')
mgmdMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 82, 2))
mgmdMIBCompliance = MibIdentifier((1, 3, 6, 1, 2, 1, 82, 2, 3))
mgmdMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 82, 2, 4))
mgmdIgmpV1HostMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 1)).setObjects(("MGMD-STD-MIB", "mgmdHostBaseMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdIgmpV1HostMIBCompliance = mgmdIgmpV1HostMIBCompliance.setStatus('current')
mgmdIgmpV1RouterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 2)).setObjects(("MGMD-STD-MIB", "mgmdRouterBaseMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdIgmpV1RouterMIBCompliance = mgmdIgmpV1RouterMIBCompliance.setStatus('current')
mgmdIgmpV2HostMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 3)).setObjects(("MGMD-STD-MIB", "mgmdHostBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2IgmpHostMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdIgmpV2HostMIBCompliance = mgmdIgmpV2HostMIBCompliance.setStatus('current')
mgmdIgmpV2RouterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 4)).setObjects(("MGMD-STD-MIB", "mgmdRouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2RouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2IgmpRouterMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdIgmpV2RouterMIBCompliance = mgmdIgmpV2RouterMIBCompliance.setStatus('current')
mgmdMldV1HostMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 5)).setObjects(("MGMD-STD-MIB", "mgmdHostBaseMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdMldV1HostMIBCompliance = mgmdMldV1HostMIBCompliance.setStatus('current')
mgmdMldV1RouterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 6)).setObjects(("MGMD-STD-MIB", "mgmdRouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2RouterBaseMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdMldV1RouterMIBCompliance = mgmdMldV1RouterMIBCompliance.setStatus('current')
mgmdIgmpV3HostMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 7)).setObjects(("MGMD-STD-MIB", "mgmdHostBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2IgmpHostMIBGroup"), ("MGMD-STD-MIB", "mgmdV3HostMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdIgmpV3HostMIBCompliance = mgmdIgmpV3HostMIBCompliance.setStatus('current')
mgmdIgmpV3RouterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 8)).setObjects(("MGMD-STD-MIB", "mgmdRouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2RouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2IgmpRouterMIBGroup"), ("MGMD-STD-MIB", "mgmdV3RouterMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdIgmpV3RouterMIBCompliance = mgmdIgmpV3RouterMIBCompliance.setStatus('current')
mgmdMldV2HostMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 9)).setObjects(("MGMD-STD-MIB", "mgmdHostBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV3HostMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdMldV2HostMIBCompliance = mgmdMldV2HostMIBCompliance.setStatus('current')
mgmdMldV2RouterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 82, 2, 3, 10)).setObjects(("MGMD-STD-MIB", "mgmdRouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV2RouterBaseMIBGroup"), ("MGMD-STD-MIB", "mgmdV3RouterMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdMldV2RouterMIBCompliance = mgmdMldV2RouterMIBCompliance.setStatus('current')
mgmdHostBaseMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 1)).setObjects(("MGMD-STD-MIB", "mgmdHostInterfaceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdHostBaseMIBGroup = mgmdHostBaseMIBGroup.setStatus('current')
mgmdRouterBaseMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 2)).setObjects(("MGMD-STD-MIB", "mgmdRouterInterfaceStatus"), ("MGMD-STD-MIB", "mgmdRouterCacheUpTime"), ("MGMD-STD-MIB", "mgmdRouterCacheExpiryTime"), ("MGMD-STD-MIB", "mgmdRouterInterfaceJoins"), ("MGMD-STD-MIB", "mgmdRouterInterfaceGroups"), ("MGMD-STD-MIB", "mgmdRouterCacheLastReporter"), ("MGMD-STD-MIB", "mgmdRouterInterfaceQuerierUpTime"), ("MGMD-STD-MIB", "mgmdRouterInterfaceQuerierExpiryTime"), ("MGMD-STD-MIB", "mgmdRouterInterfaceQueryInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdRouterBaseMIBGroup = mgmdRouterBaseMIBGroup.setStatus('current')
mgmdV2IgmpHostMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 3)).setObjects(("MGMD-STD-MIB", "mgmdHostInterfaceVersion"), ("MGMD-STD-MIB", "mgmdHostInterfaceVersion1QuerierTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV2IgmpHostMIBGroup = mgmdV2IgmpHostMIBGroup.setStatus('current')
mgmdHostOptMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 4)).setObjects(("MGMD-STD-MIB", "mgmdHostCacheLastReporter"), ("MGMD-STD-MIB", "mgmdHostCacheUpTime"), ("MGMD-STD-MIB", "mgmdHostInterfaceQuerier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdHostOptMIBGroup = mgmdHostOptMIBGroup.setStatus('current')
mgmdV2HostOptMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 5)).setObjects(("MGMD-STD-MIB", "mgmdInverseHostCacheAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV2HostOptMIBGroup = mgmdV2HostOptMIBGroup.setStatus('current')
mgmdV2RouterBaseMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 6)).setObjects(("MGMD-STD-MIB", "mgmdRouterInterfaceVersion"), ("MGMD-STD-MIB", "mgmdRouterInterfaceQuerier"), ("MGMD-STD-MIB", "mgmdRouterInterfaceQueryMaxResponseTime"), ("MGMD-STD-MIB", "mgmdRouterInterfaceRobustness"), ("MGMD-STD-MIB", "mgmdRouterInterfaceWrongVersionQueries"), ("MGMD-STD-MIB", "mgmdRouterInterfaceLastMembQueryIntvl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV2RouterBaseMIBGroup = mgmdV2RouterBaseMIBGroup.setStatus('current')
mgmdV2IgmpRouterMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 7)).setObjects(("MGMD-STD-MIB", "mgmdRouterCacheVersion1HostTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV2IgmpRouterMIBGroup = mgmdV2IgmpRouterMIBGroup.setStatus('current')
mgmdV2ProxyMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 8)).setObjects(("MGMD-STD-MIB", "mgmdRouterInterfaceProxyIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV2ProxyMIBGroup = mgmdV2ProxyMIBGroup.setStatus('current')
mgmdV2RouterOptMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 9)).setObjects(("MGMD-STD-MIB", "mgmdInverseRouterCacheAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV2RouterOptMIBGroup = mgmdV2RouterOptMIBGroup.setStatus('current')
mgmdV3HostMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 10)).setObjects(("MGMD-STD-MIB", "mgmdHostInterfaceVersion2QuerierTimer"), ("MGMD-STD-MIB", "mgmdHostCacheSourceFilterMode"), ("MGMD-STD-MIB", "mgmdHostSrcListHostAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV3HostMIBGroup = mgmdV3HostMIBGroup.setStatus('current')
mgmdV3RouterMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 82, 2, 4, 11)).setObjects(("MGMD-STD-MIB", "mgmdRouterCacheSourceFilterMode"), ("MGMD-STD-MIB", "mgmdRouterCacheVersion2HostTimer"), ("MGMD-STD-MIB", "mgmdRouterSrcListHostAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgmdV3RouterMIBGroup = mgmdV3RouterMIBGroup.setStatus('current')
mibBuilder.exportSymbols("MGMD-STD-MIB", mgmdRouterSrcListIfIndex=mgmdRouterSrcListIfIndex, mgmdRouterCacheIfIndex=mgmdRouterCacheIfIndex, mgmdIgmpV1HostMIBCompliance=mgmdIgmpV1HostMIBCompliance, mgmdInverseRouterCacheEntry=mgmdInverseRouterCacheEntry, mgmdV2ProxyMIBGroup=mgmdV2ProxyMIBGroup, mgmdHostCacheAddress=mgmdHostCacheAddress, mgmdRouterInterfaceVersion=mgmdRouterInterfaceVersion, mgmdRouterInterfaceQuerierUpTime=mgmdRouterInterfaceQuerierUpTime, mgmdMIBCompliance=mgmdMIBCompliance, mgmdHostSrcListTable=mgmdHostSrcListTable, mgmdV2RouterBaseMIBGroup=mgmdV2RouterBaseMIBGroup, mgmdRouterInterfaceTable=mgmdRouterInterfaceTable, mgmdMldV1HostMIBCompliance=mgmdMldV1HostMIBCompliance, mgmdRouterCacheEntry=mgmdRouterCacheEntry, mgmdRouterInterfaceQuerier=mgmdRouterInterfaceQuerier, mgmdRouterCacheAddress=mgmdRouterCacheAddress, mgmdHostCacheEntry=mgmdHostCacheEntry, mgmdRouterInterfaceGroups=mgmdRouterInterfaceGroups, mgmdRouterInterfaceLastMembQueryIntvl=mgmdRouterInterfaceLastMembQueryIntvl, mgmdRouterSrcListAddress=mgmdRouterSrcListAddress, mgmdIgmpV3RouterMIBCompliance=mgmdIgmpV3RouterMIBCompliance, mgmdRouterBaseMIBGroup=mgmdRouterBaseMIBGroup, mgmdRouterCacheSourceFilterMode=mgmdRouterCacheSourceFilterMode, mgmdRouterInterfaceStatus=mgmdRouterInterfaceStatus, mgmdMIBObjects=mgmdMIBObjects, mgmdInverseHostCacheIfIndex=mgmdInverseHostCacheIfIndex, mgmdMIBGroups=mgmdMIBGroups, mgmdInverseHostCacheTable=mgmdInverseHostCacheTable, mgmdInverseHostCacheAddressType=mgmdInverseHostCacheAddressType, mgmdHostSrcListEntry=mgmdHostSrcListEntry, mgmdIgmpV3HostMIBCompliance=mgmdIgmpV3HostMIBCompliance, mgmdHostInterfaceVersion1QuerierTimer=mgmdHostInterfaceVersion1QuerierTimer, mgmdRouterSrcListEntry=mgmdRouterSrcListEntry, mgmdIgmpV2RouterMIBCompliance=mgmdIgmpV2RouterMIBCompliance, mgmdRouterInterfaceQuerierType=mgmdRouterInterfaceQuerierType, mgmdHostOptMIBGroup=mgmdHostOptMIBGroup, mgmdIgmpV1RouterMIBCompliance=mgmdIgmpV1RouterMIBCompliance, PYSNMP_MODULE_ID=mgmdStdMIB, mgmdRouterCacheLastReporter=mgmdRouterCacheLastReporter, mgmdHostInterfaceQuerierType=mgmdHostInterfaceQuerierType, mgmdRouterInterfaceIfIndex=mgmdRouterInterfaceIfIndex, mgmdInverseRouterCacheTable=mgmdInverseRouterCacheTable, mgmdRouterSrcListTable=mgmdRouterSrcListTable, mgmdV2IgmpHostMIBGroup=mgmdV2IgmpHostMIBGroup, mgmdRouterInterfaceRobustness=mgmdRouterInterfaceRobustness, mgmdHostInterfaceIfIndex=mgmdHostInterfaceIfIndex, mgmdRouterInterfaceProxyIfIndex=mgmdRouterInterfaceProxyIfIndex, mgmdInverseHostCacheAddress=mgmdInverseHostCacheAddress, mgmdMIBConformance=mgmdMIBConformance, mgmdHostCacheTable=mgmdHostCacheTable, mgmdMldV1RouterMIBCompliance=mgmdMldV1RouterMIBCompliance, mgmdHostSrcListAddressType=mgmdHostSrcListAddressType, mgmdMldV2RouterMIBCompliance=mgmdMldV2RouterMIBCompliance, mgmdRouterCacheTable=mgmdRouterCacheTable, mgmdRouterInterfaceWrongVersionQueries=mgmdRouterInterfaceWrongVersionQueries, mgmdRouterSrcListHostAddress=mgmdRouterSrcListHostAddress, mgmdHostBaseMIBGroup=mgmdHostBaseMIBGroup, mgmdHostInterfaceStatus=mgmdHostInterfaceStatus, mgmdV3RouterMIBGroup=mgmdV3RouterMIBGroup, mgmdHostCacheIfIndex=mgmdHostCacheIfIndex, mgmdRouterCacheExpiryTime=mgmdRouterCacheExpiryTime, mgmdRouterInterfaceQuerierExpiryTime=mgmdRouterInterfaceQuerierExpiryTime, mgmdRouterInterfaceEntry=mgmdRouterInterfaceEntry, mgmdRouterCacheAddressType=mgmdRouterCacheAddressType, mgmdStdMIB=mgmdStdMIB, mgmdHostInterfaceQuerier=mgmdHostInterfaceQuerier, mgmdHostInterfaceEntry=mgmdHostInterfaceEntry, mgmdInverseRouterCacheIfIndex=mgmdInverseRouterCacheIfIndex, mgmdInverseRouterCacheAddress=mgmdInverseRouterCacheAddress, mgmdMldV2HostMIBCompliance=mgmdMldV2HostMIBCompliance, mgmdHostCacheUpTime=mgmdHostCacheUpTime, mgmdRouterCacheVersion2HostTimer=mgmdRouterCacheVersion2HostTimer, mgmdV2HostOptMIBGroup=mgmdV2HostOptMIBGroup, mgmdV2RouterOptMIBGroup=mgmdV2RouterOptMIBGroup, mgmdRouterInterfaceJoins=mgmdRouterInterfaceJoins, mgmdHostInterfaceTable=mgmdHostInterfaceTable, mgmdHostCacheLastReporter=mgmdHostCacheLastReporter, mgmdHostSrcListAddress=mgmdHostSrcListAddress, mgmdV3HostMIBGroup=mgmdV3HostMIBGroup, mgmdInverseRouterCacheAddressType=mgmdInverseRouterCacheAddressType, mgmdInverseHostCacheEntry=mgmdInverseHostCacheEntry, mgmdHostCacheAddressType=mgmdHostCacheAddressType, mgmdRouterCacheVersion1HostTimer=mgmdRouterCacheVersion1HostTimer, mgmdRouterSrcListAddressType=mgmdRouterSrcListAddressType, mgmdRouterInterfaceQueryInterval=mgmdRouterInterfaceQueryInterval, mgmdHostCacheSourceFilterMode=mgmdHostCacheSourceFilterMode, mgmdHostInterfaceVersion=mgmdHostInterfaceVersion, mgmdIgmpV2HostMIBCompliance=mgmdIgmpV2HostMIBCompliance, mgmdRouterCacheUpTime=mgmdRouterCacheUpTime, mgmdHostSrcListHostAddress=mgmdHostSrcListHostAddress, mgmdRouterInterfaceQueryMaxResponseTime=mgmdRouterInterfaceQueryMaxResponseTime, mgmdV2IgmpRouterMIBGroup=mgmdV2IgmpRouterMIBGroup, mgmdHostInterfaceVersion2QuerierTimer=mgmdHostInterfaceVersion2QuerierTimer, mgmdHostSrcListIfIndex=mgmdHostSrcListIfIndex)
