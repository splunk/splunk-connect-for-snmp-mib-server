#
# PySNMP MIB module OPTIX-SONET-ALM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPTIX-SONET-ALM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
optixCommonSonet, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixCommonSonet")
LocationType, AlarmEventType, DirectionType, AlmDataSrvEffType, AlmDataNtfcnCdeType, MOD2Type = mibBuilder.importSymbols("OPTIX-SONET-TC-MIB", "LocationType", "AlarmEventType", "DirectionType", "AlmDataSrvEffType", "AlmDataNtfcnCdeType", "MOD2Type")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Bits, Counter32, Unsigned32, Counter64, ModuleIdentity, NotificationType, ObjectIdentity, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Counter32", "Unsigned32", "Counter64", "ModuleIdentity", "NotificationType", "ObjectIdentity", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Gauge32")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
optixSonetAlarm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10))
optixSonetAlarm.setRevisions(('2006-02-25 00:00',))
if mibBuilder.loadTexts: optixSonetAlarm.setLastUpdated('200602250000Z')
if mibBuilder.loadTexts: optixSonetAlarm.setOrganization('Huawei Technologies co.,Ltd.')
almData = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10))
almDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10), )
if mibBuilder.loadTexts: almDataTable.setStatus('current')
almDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1), ).setIndexNames((0, "OPTIX-SONET-ALM-MIB", "almDataMOD2"), (0, "OPTIX-SONET-ALM-MIB", "almDataSlot"), (0, "OPTIX-SONET-ALM-MIB", "almDataPort"), (0, "OPTIX-SONET-ALM-MIB", "almDataPath"), (0, "OPTIX-SONET-ALM-MIB", "almDataVT"), (0, "OPTIX-SONET-ALM-MIB", "almDataNtfcnCde"), (0, "OPTIX-SONET-ALM-MIB", "almDataName"), (0, "OPTIX-SONET-ALM-MIB", "almDataSrvEff"), (0, "OPTIX-SONET-ALM-MIB", "almDataLocation"), (0, "OPTIX-SONET-ALM-MIB", "almDataDirection"))
if mibBuilder.loadTexts: almDataEntry.setStatus('current')
almDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataMOD2.setStatus('current')
almDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataSlot.setStatus('current')
almDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataPort.setStatus('current')
almDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataPath.setStatus('current')
almDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataVT.setStatus('current')
almDataNtfcnCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 6), AlmDataNtfcnCdeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataNtfcnCde.setStatus('current')
almDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 7), AlarmEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataName.setStatus('current')
almDataSrvEff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 8), AlmDataSrvEffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataSrvEff.setStatus('current')
almDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 9), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataLocation.setStatus('current')
almDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 10), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataDirection.setStatus('current')
almDataDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataDateTime.setStatus('current')
almDataDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataDesc.setStatus('current')
almDataAiddet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 10, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almDataAiddet.setStatus('current')
condDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20), )
if mibBuilder.loadTexts: condDataTable.setStatus('current')
condDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1), ).setIndexNames((0, "OPTIX-SONET-ALM-MIB", "condDataMOD2"), (0, "OPTIX-SONET-ALM-MIB", "condDataSlot"), (0, "OPTIX-SONET-ALM-MIB", "condDataPort"), (0, "OPTIX-SONET-ALM-MIB", "condDataPath"), (0, "OPTIX-SONET-ALM-MIB", "condDataVT"), (0, "OPTIX-SONET-ALM-MIB", "condDataName"), (0, "OPTIX-SONET-ALM-MIB", "condDataLocation"), (0, "OPTIX-SONET-ALM-MIB", "condDataDirection"))
if mibBuilder.loadTexts: condDataEntry.setStatus('current')
condDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataMOD2.setStatus('current')
condDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataSlot.setStatus('current')
condDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataPort.setStatus('current')
condDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataPath.setStatus('current')
condDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataVT.setStatus('current')
condDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 6), AlarmEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataName.setStatus('current')
condDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 7), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataLocation.setStatus('current')
condDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 8), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataDirection.setStatus('current')
condDataNtfcnCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 9), AlmDataNtfcnCdeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataNtfcnCde.setStatus('current')
condDataSrvEff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 10), AlmDataSrvEffType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataSrvEff.setStatus('current')
condDataDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataDateTime.setStatus('current')
condDataDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 20, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: condDataDesc.setStatus('current')
almEnvDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30), )
if mibBuilder.loadTexts: almEnvDataTable.setStatus('current')
almEnvDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1), ).setIndexNames((0, "OPTIX-SONET-ALM-MIB", "almEnvDataAid"), (0, "OPTIX-SONET-ALM-MIB", "almEnvDataNtfcnCde"), (0, "OPTIX-SONET-ALM-MIB", "almEnvDataName"))
if mibBuilder.loadTexts: almEnvDataEntry.setStatus('current')
almEnvDataAid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataAid.setStatus('current')
almEnvDataNtfcnCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 2), AlmDataNtfcnCdeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataNtfcnCde.setStatus('current')
almEnvDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 3), AlarmEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataName.setStatus('current')
almEnvDataDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataDateTime.setStatus('current')
almEnvDataCondDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 10, 30, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: almEnvDataCondDesc.setStatus('current')
almSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11))
almSummaryCritical = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSummaryCritical.setStatus('current')
almSummaryMajor = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSummaryMajor.setStatus('current')
almSummaryMinor = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 11, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: almSummaryMinor.setStatus('current')
optixSonetAlarmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20))
optixSonetAlarmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 1))
optixSonetAlarmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 1, 1)).setObjects(("OPTIX-SONET-ALM-MIB", "almDataMOD2"), ("OPTIX-SONET-ALM-MIB", "almDataSlot"), ("OPTIX-SONET-ALM-MIB", "almDataPort"), ("OPTIX-SONET-ALM-MIB", "almDataPath"), ("OPTIX-SONET-ALM-MIB", "almDataVT"), ("OPTIX-SONET-ALM-MIB", "almDataNtfcnCde"), ("OPTIX-SONET-ALM-MIB", "almDataName"), ("OPTIX-SONET-ALM-MIB", "almDataSrvEff"), ("OPTIX-SONET-ALM-MIB", "almDataLocation"), ("OPTIX-SONET-ALM-MIB", "almDataDirection"), ("OPTIX-SONET-ALM-MIB", "almDataDateTime"), ("OPTIX-SONET-ALM-MIB", "almDataDesc"), ("OPTIX-SONET-ALM-MIB", "almDataAiddet"), ("OPTIX-SONET-ALM-MIB", "condDataMOD2"), ("OPTIX-SONET-ALM-MIB", "condDataSlot"), ("OPTIX-SONET-ALM-MIB", "condDataPort"), ("OPTIX-SONET-ALM-MIB", "condDataPath"), ("OPTIX-SONET-ALM-MIB", "condDataVT"), ("OPTIX-SONET-ALM-MIB", "condDataName"), ("OPTIX-SONET-ALM-MIB", "condDataLocation"), ("OPTIX-SONET-ALM-MIB", "condDataDirection"), ("OPTIX-SONET-ALM-MIB", "condDataNtfcnCde"), ("OPTIX-SONET-ALM-MIB", "condDataSrvEff"), ("OPTIX-SONET-ALM-MIB", "condDataDateTime"), ("OPTIX-SONET-ALM-MIB", "condDataDesc"), ("OPTIX-SONET-ALM-MIB", "almEnvDataAid"), ("OPTIX-SONET-ALM-MIB", "almEnvDataNtfcnCde"), ("OPTIX-SONET-ALM-MIB", "almEnvDataName"), ("OPTIX-SONET-ALM-MIB", "almEnvDataDateTime"), ("OPTIX-SONET-ALM-MIB", "almEnvDataCondDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    optixSonetAlarmObjectGroup = optixSonetAlarmObjectGroup.setStatus('current')
optixSonetAlarmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 2))
optixSonetAlarmBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 10, 20, 2, 1)).setObjects(("OPTIX-SONET-ALM-MIB", "optixSonetAlarmObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    optixSonetAlarmBasicCompliance = optixSonetAlarmBasicCompliance.setStatus('current')
mibBuilder.exportSymbols("OPTIX-SONET-ALM-MIB", almEnvDataEntry=almEnvDataEntry, condDataSlot=condDataSlot, almEnvDataAid=almEnvDataAid, PYSNMP_MODULE_ID=optixSonetAlarm, condDataNtfcnCde=condDataNtfcnCde, almDataEntry=almDataEntry, almEnvDataTable=almEnvDataTable, almSummaryMinor=almSummaryMinor, condDataVT=condDataVT, condDataEntry=condDataEntry, almEnvDataNtfcnCde=almEnvDataNtfcnCde, almEnvDataDateTime=almEnvDataDateTime, condDataPort=condDataPort, condDataDateTime=condDataDateTime, almDataVT=almDataVT, almDataNtfcnCde=almDataNtfcnCde, almDataTable=almDataTable, optixSonetAlarm=optixSonetAlarm, almDataSrvEff=almDataSrvEff, almDataLocation=almDataLocation, almEnvDataCondDesc=almEnvDataCondDesc, condDataDirection=condDataDirection, almSummaryCritical=almSummaryCritical, condDataMOD2=condDataMOD2, optixSonetAlarmBasicCompliance=optixSonetAlarmBasicCompliance, almSummary=almSummary, almDataPath=almDataPath, condDataDesc=condDataDesc, condDataName=condDataName, almDataPort=almDataPort, optixSonetAlarmConformance=optixSonetAlarmConformance, almDataSlot=almDataSlot, almDataDesc=almDataDesc, almDataMOD2=almDataMOD2, almDataAiddet=almDataAiddet, condDataPath=condDataPath, optixSonetAlarmGroups=optixSonetAlarmGroups, almData=almData, condDataTable=condDataTable, almDataName=almDataName, optixSonetAlarmObjectGroup=optixSonetAlarmObjectGroup, optixSonetAlarmCompliances=optixSonetAlarmCompliances, almDataDateTime=almDataDateTime, condDataSrvEff=condDataSrvEff, almEnvDataName=almEnvDataName, almSummaryMajor=almSummaryMajor, condDataLocation=condDataLocation, almDataDirection=almDataDirection)
