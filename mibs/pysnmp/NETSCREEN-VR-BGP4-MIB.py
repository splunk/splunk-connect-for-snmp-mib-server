#
# PySNMP MIB module NETSCREEN-VR-BGP4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VR-BGP4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
netscreenVR, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVR")
netscreenTrapDesc, netscreenTrapType = mibBuilder.importSymbols("NETSCREEN-TRAP-MIB", "netscreenTrapDesc", "netscreenTrapType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter32, Unsigned32, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter64, Gauge32, iso, ModuleIdentity, Bits, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Unsigned32", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter64", "Gauge32", "iso", "ModuleIdentity", "Bits", "NotificationType", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nsVrBgp = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 18, 6))
if mibBuilder.loadTexts: nsVrBgp.setLastUpdated('200506202022Z')
if mibBuilder.loadTexts: nsVrBgp.setOrganization('Juniper Networks, Inc.')
nsVrBgpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 6, 1), )
if mibBuilder.loadTexts: nsVrBgpInfoTable.setStatus('current')
nsVrBgpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 6, 1, 1), ).setIndexNames((0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgpInfoVRID"))
if mibBuilder.loadTexts: nsVrBgpInfoEntry.setStatus('current')
nsVrBgpInfoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpInfoVersion.setStatus('current')
nsVrBgpInfoLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpInfoLocalAs.setStatus('current')
nsVrBgpInfoIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpInfoIdentifier.setStatus('current')
nsVrBgpInfoVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpInfoVRID.setStatus('current')
nsVrBgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3), )
if mibBuilder.loadTexts: nsVrBgpPeerTable.setStatus('current')
nsVrBgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1), ).setIndexNames((0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgpPeerVRID"), (0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgpPeerRemoteAddr"))
if mibBuilder.loadTexts: nsVrBgpPeerEntry.setStatus('current')
nsVrBgpPeerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerIdentifier.setStatus('current')
nsVrBgpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerState.setStatus('current')
nsVrBgpPeerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stop", 1), ("start", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerAdminStatus.setStatus('current')
nsVrBgpPeerNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerNegotiatedVersion.setStatus('current')
nsVrBgpPeerLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerLocalAddr.setStatus('current')
nsVrBgpPeerLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerLocalPort.setStatus('current')
nsVrBgpPeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerRemoteAddr.setStatus('current')
nsVrBgpPeerRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerRemotePort.setStatus('current')
nsVrBgpPeerRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerRemoteAs.setStatus('current')
nsVrBgpPeerInUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerInUpdates.setStatus('current')
nsVrBgpPeerOutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerOutUpdates.setStatus('current')
nsVrBgpPeerInTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerInTotalMessages.setStatus('current')
nsVrBgpPeerOutTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerOutTotalMessages.setStatus('current')
nsVrBgpPeerLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerLastError.setStatus('current')
nsVrBgpPeerFsmEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerFsmEstablishedTransitions.setStatus('current')
nsVrBgpPeerFsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerFsmEstablishedTime.setStatus('current')
nsVrBgpPeerConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerConnectRetryInterval.setStatus('current')
nsVrBgpPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerHoldTime.setStatus('current')
nsVrBgpPeerKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerKeepAlive.setStatus('current')
nsVrBgpPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerHoldTimeConfigured.setStatus('current')
nsVrBgpPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerKeepAliveConfigured.setStatus('current')
nsVrBgpPeerMinASOriginationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerMinASOriginationInterval.setStatus('current')
nsVrBgpPeerMinRouteAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerMinRouteAdvertisementInterval.setStatus('current')
nsVrBgpPeerInUpdateElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerInUpdateElapsedTime.setStatus('current')
nsVrBgpPeerVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgpPeerVRID.setStatus('current')
nsVrBgp4PathAttrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6), )
if mibBuilder.loadTexts: nsVrBgp4PathAttrTable.setStatus('current')
nsVrBgp4PathAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1), ).setIndexNames((0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgp4PathAttrVRID"), (0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgp4PathAttrIpAddrPrefix"), (0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgp4PathAttrIpAddrPrefixLen"), (0, "NETSCREEN-VR-BGP4-MIB", "nsVrBgp4PathAttrPeer"))
if mibBuilder.loadTexts: nsVrBgp4PathAttrEntry.setStatus('current')
nsVrBgp4PathAttrPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrPeer.setStatus('current')
nsVrBgp4PathAttrIpAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrIpAddrPrefixLen.setStatus('current')
nsVrBgp4PathAttrIpAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrIpAddrPrefix.setStatus('current')
nsVrBgp4PathAttrOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrOrigin.setStatus('current')
nsVrBgp4PathAttrASPathSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrASPathSegment.setStatus('current')
nsVrBgp4PathAttrNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrNextHop.setStatus('current')
nsVrBgp4PathAttrMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrMultiExitDisc.setStatus('current')
nsVrBgp4PathAttrLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrLocalPref.setStatus('current')
nsVrBgp4PathAttrAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRrouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrAtomicAggregate.setStatus('current')
nsVrBgp4PathAttrAggregatorAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrAggregatorAS.setStatus('current')
nsVrBgp4PathAttrAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrAggregatorAddr.setStatus('current')
nsVrBgp4PathAttrCalcLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrCalcLocalPref.setStatus('current')
nsVrBgp4PathAttrBest = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrBest.setStatus('current')
nsVrBgp4PathAttrUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrUnknown.setStatus('current')
nsVrBgp4PathAttrVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 6, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrBgp4PathAttrVRID.setStatus('current')
nsVrBgpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 18, 6, 7))
nsVrBgpEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3224, 18, 6, 7, 1)).setObjects(("NETSCREEN-VR-BGP4-MIB", "nsVrBgp4PathAttrVRID"), ("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ("NETSCREEN-VR-BGP4-MIB", "nsVrBgpPeerIdentifier"), ("NETSCREEN-VR-BGP4-MIB", "nsVrBgpPeerLastError"), ("NETSCREEN-VR-BGP4-MIB", "nsVrBgpPeerState"))
if mibBuilder.loadTexts: nsVrBgpEstablished.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-VR-BGP4-MIB", nsVrBgpPeerHoldTimeConfigured=nsVrBgpPeerHoldTimeConfigured, nsVrBgpInfoLocalAs=nsVrBgpInfoLocalAs, nsVrBgpPeerIdentifier=nsVrBgpPeerIdentifier, nsVrBgp4PathAttrTable=nsVrBgp4PathAttrTable, nsVrBgpInfoTable=nsVrBgpInfoTable, nsVrBgpPeerKeepAliveConfigured=nsVrBgpPeerKeepAliveConfigured, nsVrBgpPeerRemoteAs=nsVrBgpPeerRemoteAs, nsVrBgpPeerNegotiatedVersion=nsVrBgpPeerNegotiatedVersion, nsVrBgpPeerVRID=nsVrBgpPeerVRID, nsVrBgpPeerMinASOriginationInterval=nsVrBgpPeerMinASOriginationInterval, nsVrBgp4PathAttrASPathSegment=nsVrBgp4PathAttrASPathSegment, nsVrBgp4PathAttrEntry=nsVrBgp4PathAttrEntry, nsVrBgpPeerFsmEstablishedTransitions=nsVrBgpPeerFsmEstablishedTransitions, nsVrBgp4PathAttrOrigin=nsVrBgp4PathAttrOrigin, nsVrBgpTraps=nsVrBgpTraps, nsVrBgp4PathAttrAggregatorAddr=nsVrBgp4PathAttrAggregatorAddr, nsVrBgp4PathAttrVRID=nsVrBgp4PathAttrVRID, nsVrBgpInfoVRID=nsVrBgpInfoVRID, nsVrBgp4PathAttrNextHop=nsVrBgp4PathAttrNextHop, nsVrBgp4PathAttrBest=nsVrBgp4PathAttrBest, nsVrBgpPeerRemotePort=nsVrBgpPeerRemotePort, nsVrBgpPeerLocalAddr=nsVrBgpPeerLocalAddr, nsVrBgpPeerLocalPort=nsVrBgpPeerLocalPort, nsVrBgpPeerLastError=nsVrBgpPeerLastError, nsVrBgpPeerRemoteAddr=nsVrBgpPeerRemoteAddr, nsVrBgp4PathAttrMultiExitDisc=nsVrBgp4PathAttrMultiExitDisc, nsVrBgpPeerInTotalMessages=nsVrBgpPeerInTotalMessages, nsVrBgp4PathAttrAtomicAggregate=nsVrBgp4PathAttrAtomicAggregate, nsVrBgpEstablished=nsVrBgpEstablished, nsVrBgpPeerConnectRetryInterval=nsVrBgpPeerConnectRetryInterval, nsVrBgpPeerEntry=nsVrBgpPeerEntry, nsVrBgpPeerOutTotalMessages=nsVrBgpPeerOutTotalMessages, nsVrBgpPeerAdminStatus=nsVrBgpPeerAdminStatus, nsVrBgp4PathAttrLocalPref=nsVrBgp4PathAttrLocalPref, nsVrBgp4PathAttrPeer=nsVrBgp4PathAttrPeer, nsVrBgp4PathAttrCalcLocalPref=nsVrBgp4PathAttrCalcLocalPref, nsVrBgpPeerTable=nsVrBgpPeerTable, nsVrBgp4PathAttrIpAddrPrefix=nsVrBgp4PathAttrIpAddrPrefix, nsVrBgpPeerFsmEstablishedTime=nsVrBgpPeerFsmEstablishedTime, nsVrBgpPeerInUpdates=nsVrBgpPeerInUpdates, nsVrBgpInfoEntry=nsVrBgpInfoEntry, nsVrBgpPeerInUpdateElapsedTime=nsVrBgpPeerInUpdateElapsedTime, PYSNMP_MODULE_ID=nsVrBgp, nsVrBgpPeerKeepAlive=nsVrBgpPeerKeepAlive, nsVrBgpInfoVersion=nsVrBgpInfoVersion, nsVrBgp4PathAttrAggregatorAS=nsVrBgp4PathAttrAggregatorAS, nsVrBgpPeerHoldTime=nsVrBgpPeerHoldTime, nsVrBgp4PathAttrIpAddrPrefixLen=nsVrBgp4PathAttrIpAddrPrefixLen, nsVrBgp4PathAttrUnknown=nsVrBgp4PathAttrUnknown, nsVrBgp=nsVrBgp, nsVrBgpInfoIdentifier=nsVrBgpInfoIdentifier, nsVrBgpPeerOutUpdates=nsVrBgpPeerOutUpdates, nsVrBgpPeerMinRouteAdvertisementInterval=nsVrBgpPeerMinRouteAdvertisementInterval, nsVrBgpPeerState=nsVrBgpPeerState)
