#
# PySNMP MIB module HPN-ICF-FLASH-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FLASH-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, Counter64, Integer32, ObjectIdentity, IpAddress, Bits, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Counter64", "Integer32", "ObjectIdentity", "IpAddress", "Bits", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "iso", "NotificationType")
TruthValue, RowStatus, TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString", "TimeStamp")
hpnicfFlash = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5))
hpnicfFlash.setRevisions(('2013-05-23 00:00',))
if mibBuilder.loadTexts: hpnicfFlash.setLastUpdated('201305230000Z')
if mibBuilder.loadTexts: hpnicfFlash.setOrganization('')
class HpnicfFlashOperationStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))
    namedValues = NamedValues(("opInProgress", 1), ("opSuccess", 2), ("opInvalid", 3), ("opInvalidProtocol", 4), ("opInvalidSourceName", 5), ("opInvalidDestName", 6), ("opInvalidServerAddress", 7), ("opDeviceBusy", 8), ("opDeviceOpenError", 9), ("opDeviceError", 10), ("opDeviceNotProgrammable", 11), ("opDeviceFull", 12), ("opFileOpenError", 13), ("opFileTransferError", 14), ("opFileChecksumError", 15), ("opNoMemory", 16), ("opAuthFail", 17), ("opTimeout", 18), ("opUnknownFailure", 19), ("opDeleteFileOpenError", 20), ("opDeleteInvalidDevice", 21), ("opDeleteInvalidFunction", 22), ("opDeleteOperationError", 23), ("opDeleteInvalidFileName", 24), ("opDeleteDeviceBusy", 25), ("opDeleteParaError", 26), ("opDeleteInvalidPath", 27), ("opDeleteFileNotExistInSlave", 28), ("opDeleteFileFailedInSlave", 29), ("opSlaveFull", 30), ("opCopyToSlaveFailure", 31))

class HpnicfFlashPartitionUpgradeMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unknown", 1), ("rxbootFLH", 2), ("direct", 3))

class HpnicfFlashPartitionStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("readOnly", 1), ("runFromFlash", 2), ("readWrite", 3))

hpnicfFlashManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1))
hpnicfFlashDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1))
hpnicfFlhSupportNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhSupportNum.setStatus('current')
hpnicfFlashTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfFlashTable.setStatus('current')
hpnicfFlashEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhIndex"))
if mibBuilder.loadTexts: hpnicfFlashEntry.setStatus('current')
hpnicfFlhIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhIndex.setStatus('current')
hpnicfFlhSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 2), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhSize.setStatus('deprecated')
hpnicfFlhPos = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 3), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPos.setStatus('current')
hpnicfFlhName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhName.setStatus('current')
hpnicfFlhChipNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipNum.setStatus('current')
hpnicfFlhDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhDescr.setStatus('current')
hpnicfFlhInitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhInitTime.setStatus('current')
hpnicfFlhRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhRemovable.setStatus('current')
hpnicfFlhPartitionBool = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFlhPartitionBool.setStatus('current')
hpnicfFlhMinPartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 12), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhMinPartitionSize.setStatus('current')
hpnicfFlhMaxPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhMaxPartitions.setStatus('current')
hpnicfFlhPartitionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartitionNum.setStatus('current')
hpnicfFlhKbyteSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 15), Integer32()).setUnits('kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhKbyteSize.setStatus('current')
hpnicfFlhHCSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 2, 1, 16), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhHCSize.setStatus('current')
hpnicfFlashChips = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3))
hpnicfFlhChipTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfFlhChipTable.setStatus('current')
hpnicfFlhChipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhIndex"), (0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipSerialNo"))
if mibBuilder.loadTexts: hpnicfFlhChipEntry.setStatus('current')
hpnicfFlhChipSerialNo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfFlhChipSerialNo.setStatus('current')
hpnicfFlhChipID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipID.setStatus('current')
hpnicfFlhChipDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipDescr.setStatus('current')
hpnicfFlhChipWriteTimesLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipWriteTimesLimit.setStatus('current')
hpnicfFlhChipWriteTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipWriteTimes.setStatus('current')
hpnicfFlhChipEraseTimesLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipEraseTimesLimit.setStatus('current')
hpnicfFlhChipEraseTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhChipEraseTimes.setStatus('current')
hpnicfFlashPartitions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4))
hpnicfFlhPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1), )
if mibBuilder.loadTexts: hpnicfFlhPartitionTable.setStatus('current')
hpnicfFlhPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhIndex"), (0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartIndex"))
if mibBuilder.loadTexts: hpnicfFlhPartitionEntry.setStatus('current')
hpnicfFlhPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: hpnicfFlhPartIndex.setStatus('current')
hpnicfFlhPartFirstChip = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartFirstChip.setStatus('current')
hpnicfFlhPartLastChip = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartLastChip.setStatus('current')
hpnicfFlhPartSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 4), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartSpace.setStatus('deprecated')
hpnicfFlhPartSpaceFree = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 5), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartSpaceFree.setStatus('deprecated')
hpnicfFlhPartFileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartFileNum.setStatus('current')
hpnicfFlhPartChecksumMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("simpleChecksum", 1), ("undefined", 2), ("simpleCRC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartChecksumMethod.setStatus('current')
hpnicfFlhPartStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 8), HpnicfFlashPartitionStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartStatus.setStatus('current')
hpnicfFlhPartUpgradeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 9), HpnicfFlashPartitionUpgradeMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartUpgradeMode.setStatus('current')
hpnicfFlhPartName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartName.setStatus('current')
hpnicfFlhPartRequireErase = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartRequireErase.setStatus('current')
hpnicfFlhPartFileNameLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartFileNameLen.setStatus('current')
hpnicfFlhPartBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartBootable.setStatus('current')
hpnicfFlhPartPathForGlobalOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFlhPartPathForGlobalOpt.setStatus('current')
hpnicfFlhPartHCSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 15), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartHCSpace.setStatus('current')
hpnicfFlhPartHCSpaceFree = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 1, 1, 16), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhPartHCSpaceFree.setStatus('current')
hpnicfFlhFiles = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2))
hpnicfFlhFileTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1), )
if mibBuilder.loadTexts: hpnicfFlhFileTable.setStatus('current')
hpnicfFlhFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhIndex"), (0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartIndex"), (0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhFileIndex"))
if mibBuilder.loadTexts: hpnicfFlhFileEntry.setStatus('current')
hpnicfFlhFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfFlhFileIndex.setStatus('current')
hpnicfFlhFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhFileName.setStatus('current')
hpnicfFlhFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhFileSize.setStatus('deprecated')
hpnicfFlhFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deleted", 1), ("invalidChecksum", 2), ("valid", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhFileStatus.setStatus('current')
hpnicfFlhFileChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhFileChecksum.setStatus('current')
hpnicfFlhFileHCSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 1, 4, 2, 1, 1, 6), CounterBasedGauge64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhFileHCSize.setStatus('current')
hpnicfFlashOperate = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2))
hpnicfFlhOpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfFlhOpTable.setStatus('current')
hpnicfFlhOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperIndex"))
if mibBuilder.loadTexts: hpnicfFlhOpEntry.setStatus('current')
hpnicfFlhOperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfFlhOperIndex.setStatus('current')
hpnicfFlhOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("net2FlashWithErase", 1), ("net2FlashWithoutErase", 2), ("flash2Net", 3), ("delete", 4), ("rename", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperType.setStatus('current')
hpnicfFlhOperProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2), ("clusterftp", 3), ("clustertftp", 4))).clone('ftp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperProtocol.setStatus('current')
hpnicfFlhOperServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 4), IpAddress().clone(hexValue="FFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperServerAddress.setStatus('deprecated')
hpnicfFlhOperServerUser = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperServerUser.setStatus('current')
hpnicfFlhOperPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperPassword.setStatus('current')
hpnicfFlhOperSourceFile = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperSourceFile.setStatus('current')
hpnicfFlhOperDestinationFile = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperDestinationFile.setStatus('current')
hpnicfFlhOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 9), HpnicfFlashOperationStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhOperStatus.setStatus('current')
hpnicfFlhOperEndNotification = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperEndNotification.setStatus('current')
hpnicfFlhOperProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhOperProgress.setStatus('current')
hpnicfFlhOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperRowStatus.setStatus('current')
hpnicfFlhOperServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperServerPort.setStatus('current')
hpnicfFlhOperFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFlhOperFailReason.setStatus('current')
hpnicfFlhOperSrvAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 15), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperSrvAddrType.setStatus('current')
hpnicfFlhOperSrvAddrRev = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 16), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperSrvAddrRev.setStatus('current')
hpnicfFlhOperSrvVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 2, 1, 1, 17), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFlhOperSrvVPNName.setStatus('current')
hpnicfFlashNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 3))
hpnicfFlhOperNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 1, 3, 1)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperStatus"))
if mibBuilder.loadTexts: hpnicfFlhOperNotification.setStatus('current')
hpnicfFlashMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2))
hpnicfFlhMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 1))
hpnicfFlhMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 1, 1)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhGroup"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartitionGroup"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhFileGroup"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperationGroup"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhNotificationGroup"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhMIBCompliance = hpnicfFlhMIBCompliance.setStatus('current')
hpnicfFlashMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2))
hpnicfFlhGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2, 1)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhSupportNum"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhSize"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPos"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhName"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipNum"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhDescr"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhInitTime"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhRemovable"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartitionBool"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhMinPartitionSize"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhMaxPartitions"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartitionNum"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhIndex"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhKbyteSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhGroup = hpnicfFlhGroup.setStatus('current')
hpnicfFlhChipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2, 3)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipID"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipDescr"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipWriteTimesLimit"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipWriteTimes"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipEraseTimesLimit"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhChipEraseTimes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhChipGroup = hpnicfFlhChipGroup.setStatus('current')
hpnicfFlhPartitionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2, 4)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartFirstChip"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartLastChip"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartSpace"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartSpaceFree"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartFileNum"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartChecksumMethod"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartStatus"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartUpgradeMode"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartName"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartRequireErase"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartFileNameLen"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartBootable"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhPartPathForGlobalOpt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhPartitionGroup = hpnicfFlhPartitionGroup.setStatus('current')
hpnicfFlhFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2, 5)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhFileName"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhFileSize"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhFileStatus"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhFileChecksum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhFileGroup = hpnicfFlhFileGroup.setStatus('current')
hpnicfFlhOperationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2, 6)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperType"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperProtocol"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperServerAddress"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperServerUser"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperPassword"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperSourceFile"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperDestinationFile"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperStatus"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperEndNotification"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperProgress"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperRowStatus"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperServerPort"), ("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperFailReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhOperationGroup = hpnicfFlhOperationGroup.setStatus('current')
hpnicfFlhNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 5, 2, 2, 7)).setObjects(("HPN-ICF-FLASH-MAN-MIB", "hpnicfFlhOperNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfFlhNotificationGroup = hpnicfFlhNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-FLASH-MAN-MIB", HpnicfFlashPartitionUpgradeMode=HpnicfFlashPartitionUpgradeMode, hpnicfFlhChipTable=hpnicfFlhChipTable, hpnicfFlhFileHCSize=hpnicfFlhFileHCSize, hpnicfFlhChipDescr=hpnicfFlhChipDescr, hpnicfFlhOperSrvAddrType=hpnicfFlhOperSrvAddrType, hpnicfFlashOperate=hpnicfFlashOperate, hpnicfFlhPartStatus=hpnicfFlhPartStatus, hpnicfFlhPartitionBool=hpnicfFlhPartitionBool, hpnicfFlhOperSrvAddrRev=hpnicfFlhOperSrvAddrRev, hpnicfFlashMIBConformance=hpnicfFlashMIBConformance, hpnicfFlhDescr=hpnicfFlhDescr, hpnicfFlhFileName=hpnicfFlhFileName, hpnicfFlhHCSize=hpnicfFlhHCSize, hpnicfFlhOperSrvVPNName=hpnicfFlhOperSrvVPNName, hpnicfFlhPartFileNum=hpnicfFlhPartFileNum, hpnicfFlhMIBCompliances=hpnicfFlhMIBCompliances, hpnicfFlhSize=hpnicfFlhSize, hpnicfFlhPartHCSpace=hpnicfFlhPartHCSpace, hpnicfFlhOperType=hpnicfFlhOperType, hpnicfFlhPartitionEntry=hpnicfFlhPartitionEntry, hpnicfFlhOperProtocol=hpnicfFlhOperProtocol, hpnicfFlhFileStatus=hpnicfFlhFileStatus, hpnicfFlhPartRequireErase=hpnicfFlhPartRequireErase, hpnicfFlashDevice=hpnicfFlashDevice, hpnicfFlhOperRowStatus=hpnicfFlhOperRowStatus, hpnicfFlhOperationGroup=hpnicfFlhOperationGroup, hpnicfFlhPartitionNum=hpnicfFlhPartitionNum, hpnicfFlhFileIndex=hpnicfFlhFileIndex, hpnicfFlhChipID=hpnicfFlhChipID, hpnicfFlhOperServerUser=hpnicfFlhOperServerUser, hpnicfFlhOperDestinationFile=hpnicfFlhOperDestinationFile, hpnicfFlhOperIndex=hpnicfFlhOperIndex, hpnicfFlhChipWriteTimesLimit=hpnicfFlhChipWriteTimesLimit, hpnicfFlhNotificationGroup=hpnicfFlhNotificationGroup, hpnicfFlhOperEndNotification=hpnicfFlhOperEndNotification, hpnicfFlhSupportNum=hpnicfFlhSupportNum, hpnicfFlhPartChecksumMethod=hpnicfFlhPartChecksumMethod, hpnicfFlhPos=hpnicfFlhPos, hpnicfFlhOperSourceFile=hpnicfFlhOperSourceFile, hpnicfFlhPartFirstChip=hpnicfFlhPartFirstChip, hpnicfFlhFileGroup=hpnicfFlhFileGroup, hpnicfFlhOperFailReason=hpnicfFlhOperFailReason, hpnicfFlhFileEntry=hpnicfFlhFileEntry, hpnicfFlhChipNum=hpnicfFlhChipNum, hpnicfFlhPartSpace=hpnicfFlhPartSpace, hpnicfFlashTable=hpnicfFlashTable, hpnicfFlhMinPartitionSize=hpnicfFlhMinPartitionSize, hpnicfFlhFiles=hpnicfFlhFiles, HpnicfFlashPartitionStatus=HpnicfFlashPartitionStatus, hpnicfFlhPartIndex=hpnicfFlhPartIndex, hpnicfFlhInitTime=hpnicfFlhInitTime, hpnicfFlhPartitionTable=hpnicfFlhPartitionTable, hpnicfFlhOpTable=hpnicfFlhOpTable, hpnicfFlhOperNotification=hpnicfFlhOperNotification, hpnicfFlhChipWriteTimes=hpnicfFlhChipWriteTimes, hpnicfFlhFileTable=hpnicfFlhFileTable, hpnicfFlash=hpnicfFlash, PYSNMP_MODULE_ID=hpnicfFlash, hpnicfFlhChipEraseTimes=hpnicfFlhChipEraseTimes, hpnicfFlashMIBGroups=hpnicfFlashMIBGroups, hpnicfFlhMaxPartitions=hpnicfFlhMaxPartitions, hpnicfFlhChipSerialNo=hpnicfFlhChipSerialNo, hpnicfFlashChips=hpnicfFlashChips, hpnicfFlhPartName=hpnicfFlhPartName, hpnicfFlhOperServerAddress=hpnicfFlhOperServerAddress, hpnicfFlhChipEntry=hpnicfFlhChipEntry, hpnicfFlhName=hpnicfFlhName, hpnicfFlhPartSpaceFree=hpnicfFlhPartSpaceFree, hpnicfFlhOperProgress=hpnicfFlhOperProgress, hpnicfFlashEntry=hpnicfFlashEntry, hpnicfFlhPartPathForGlobalOpt=hpnicfFlhPartPathForGlobalOpt, hpnicfFlhOperPassword=hpnicfFlhOperPassword, hpnicfFlashManMIBObjects=hpnicfFlashManMIBObjects, hpnicfFlhPartUpgradeMode=hpnicfFlhPartUpgradeMode, hpnicfFlashPartitions=hpnicfFlashPartitions, hpnicfFlhIndex=hpnicfFlhIndex, hpnicfFlashNotification=hpnicfFlashNotification, hpnicfFlhOperServerPort=hpnicfFlhOperServerPort, hpnicfFlhChipEraseTimesLimit=hpnicfFlhChipEraseTimesLimit, hpnicfFlhOperStatus=hpnicfFlhOperStatus, hpnicfFlhOpEntry=hpnicfFlhOpEntry, hpnicfFlhGroup=hpnicfFlhGroup, hpnicfFlhPartHCSpaceFree=hpnicfFlhPartHCSpaceFree, hpnicfFlhRemovable=hpnicfFlhRemovable, hpnicfFlhPartLastChip=hpnicfFlhPartLastChip, hpnicfFlhChipGroup=hpnicfFlhChipGroup, hpnicfFlhKbyteSize=hpnicfFlhKbyteSize, hpnicfFlhFileSize=hpnicfFlhFileSize, hpnicfFlhPartitionGroup=hpnicfFlhPartitionGroup, hpnicfFlhPartBootable=hpnicfFlhPartBootable, HpnicfFlashOperationStatus=HpnicfFlashOperationStatus, hpnicfFlhMIBCompliance=hpnicfFlhMIBCompliance, hpnicfFlhFileChecksum=hpnicfFlhFileChecksum, hpnicfFlhPartFileNameLen=hpnicfFlhPartFileNameLen)
