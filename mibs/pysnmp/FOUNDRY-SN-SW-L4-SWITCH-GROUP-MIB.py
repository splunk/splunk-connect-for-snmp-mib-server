#
# PySNMP MIB module FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
DisplayString, = mibBuilder.importSymbols("FOUNDRY-SN-AGENT-MIB", "DisplayString")
switch, = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "switch")
PhysAddress, = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "PhysAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibIdentifier, ModuleIdentity, Integer32, Bits, TimeTicks, Gauge32, ObjectIdentity, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "ModuleIdentity", "Integer32", "Bits", "TimeTicks", "Gauge32", "ObjectIdentity", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snL4 = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4))
snL4.setRevisions(('2010-06-02 00:00', '2009-09-30 00:00',))
if mibBuilder.loadTexts: snL4.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: snL4.setOrganization('Brocade Communications Systems, Inc.')
class L4RowSts(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5))

class L4Status(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1))

class L4ServerName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class L4Flag(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

class L4DeleteState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("done", 0), ("waitunbind", 1), ("waitdelete", 2))

class WebCacheState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1), ("failed", 2), ("testing", 3), ("suspect", 4), ("shutdown", 5), ("active", 6))

snL4Gen = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1))
snL4VirtualServer = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2))
snL4RealServer = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3))
snL4VirtualServerPort = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4))
snL4RealServerPort = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5))
snL4Bind = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6))
snL4VirtualServerStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7))
snL4RealServerStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8))
snL4VirtualServerPortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9))
snL4RealServerPortStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10))
snL4Policy = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11))
snL4PolicyPortAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 12))
snL4Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13))
snL4WebCache = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14))
snL4WebCacheGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15))
snL4WebCacheTrafficStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16))
snL4WebUncachedTrafficStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17))
snL4WebCachePort = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18))
snL4RealServerCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19))
snL4RealServerPortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20))
snL4VirtualServerCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21))
snL4VirtualServerPortCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22))
snL4RealServerStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23))
snL4RealServerPortStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24))
snL4VirtualServerStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25))
snL4VirtualServerPortStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26))
snL4GslbSiteRemoteServerIrons = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 27))
snL4History = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28))
snL4MaxSessionLimit = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4MaxSessionLimit.setStatus('current')
snL4TcpSynLimit = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4TcpSynLimit.setStatus('current')
snL4slbGlobalSDAType = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("leastconnection", 1), ("roundrobin", 2), ("weighted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4slbGlobalSDAType.setStatus('current')
snL4slbTotalConnections = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbTotalConnections.setStatus('current')
snL4slbLimitExceeds = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbLimitExceeds.setStatus('current')
snL4slbForwardTraffic = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbForwardTraffic.setStatus('current')
snL4slbReverseTraffic = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbReverseTraffic.setStatus('current')
snL4slbDrops = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbDrops.setStatus('current')
snL4slbDangling = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbDangling.setStatus('current')
snL4slbDisableCount = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbDisableCount.setStatus('current')
snL4slbAged = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbAged.setStatus('current')
snL4slbFinished = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4slbFinished.setStatus('current')
snL4FreeSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4FreeSessionCount.setStatus('current')
snL4BackupInterface = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 26))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BackupInterface.setStatus('current')
snL4BackupMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 15), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BackupMacAddr.setStatus('current')
snL4Active = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 16), L4Flag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4Active.setStatus('current')
snL4Redundancy = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4Redundancy.setStatus('current')
snL4Backup = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 18), L4Flag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4Backup.setStatus('current')
snL4BecomeActive = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4BecomeActive.setStatus('current')
snL4BecomeStandBy = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4BecomeStandBy.setStatus('current')
snL4BackupState = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("slbSyncComplete", 0), ("slbSyncReqMap", 1), ("slbSyncreqMac", 2), ("slbSyncreqServers", 3), ("slbSyncReqL4", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4BackupState.setStatus('current')
snL4NoPDUSent = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4NoPDUSent.setStatus('current')
snL4NoPDUCount = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4NoPDUCount.setStatus('current')
snL4NoPortMap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4NoPortMap.setStatus('current')
snL4unsuccessfulConn = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4unsuccessfulConn.setStatus('current')
snL4PingInterval = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PingInterval.setStatus('current')
snL4PingRetry = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PingRetry.setStatus('current')
snL4TcpAge = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4TcpAge.setStatus('current')
snL4UdpAge = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4UdpAge.setStatus('current')
snL4EnableMaxSessionLimitReachedTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableMaxSessionLimitReachedTrap.setStatus('current')
snL4EnableTcpSynLimitReachedTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableTcpSynLimitReachedTrap.setStatus('current')
snL4EnableRealServerUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableRealServerUpTrap.setStatus('current')
snL4EnableRealServerDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableRealServerDownTrap.setStatus('current')
snL4EnableRealServerPortUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableRealServerPortUpTrap.setStatus('current')
snL4EnableRealServerPortDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableRealServerPortDownTrap.setStatus('current')
snL4EnableRealServerMaxConnLimitReachedTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableRealServerMaxConnLimitReachedTrap.setStatus('current')
snL4EnableBecomeStandbyTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableBecomeStandbyTrap.setStatus('current')
snL4EnableBecomeActiveTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableBecomeActiveTrap.setStatus('current')
snL4slbRouterInterfacePortMask = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4slbRouterInterfacePortMask.setStatus('deprecated')
snL4MaxNumWebCacheGroup = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4MaxNumWebCacheGroup.setStatus('current')
snL4MaxNumWebCachePerGroup = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4MaxNumWebCachePerGroup.setStatus('current')
snL4WebCacheStateful = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 42), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheStateful.setStatus('current')
snL4EnableGslbHealthCheckIpUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbHealthCheckIpUpTrap.setStatus('current')
snL4EnableGslbHealthCheckIpDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbHealthCheckIpDownTrap.setStatus('current')
snL4EnableGslbHealthCheckIpPortUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbHealthCheckIpPortUpTrap.setStatus('current')
snL4EnableGslbHealthCheckIpPortDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbHealthCheckIpPortDownTrap.setStatus('current')
snL4EnableGslbRemoteGslbSiDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbRemoteGslbSiDownTrap.setStatus('current')
snL4EnableGslbRemoteGslbSiUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbRemoteGslbSiUpTrap.setStatus('current')
snL4EnableGslbRemoteSiDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbRemoteSiDownTrap.setStatus('current')
snL4EnableGslbRemoteSiUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4EnableGslbRemoteSiUpTrap.setStatus('current')
snL4slbRouterInterfacePortList = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 1, 51), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4slbRouterInterfacePortList.setStatus('current')
snL4VirtualServerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1), )
if mibBuilder.loadTexts: snL4VirtualServerTable.setStatus('current')
snL4VirtualServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerIndex"))
if mibBuilder.loadTexts: snL4VirtualServerEntry.setStatus('current')
snL4VirtualServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerIndex.setStatus('current')
snL4VirtualServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerName.setStatus('current')
snL4VirtualServerVirtualIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerVirtualIP.setStatus('current')
snL4VirtualServerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 4), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerAdminStatus.setStatus('current')
snL4VirtualServerSDAType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("leastconnection", 1), ("roundrobin", 2), ("weighted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerSDAType.setStatus('current')
snL4VirtualServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 6), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerRowStatus.setStatus('current')
snL4VirtualServerDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 2, 1, 1, 7), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerDeleteState.setStatus('current')
snL4RealServerTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1), )
if mibBuilder.loadTexts: snL4RealServerTable.setStatus('current')
snL4RealServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerIndex"))
if mibBuilder.loadTexts: snL4RealServerEntry.setStatus('current')
snL4RealServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerIndex.setStatus('current')
snL4RealServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerName.setStatus('current')
snL4RealServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerIP.setStatus('current')
snL4RealServerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 4), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerAdminStatus.setStatus('current')
snL4RealServerMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerMaxConnections.setStatus('current')
snL4RealServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerWeight.setStatus('current')
snL4RealServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 7), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerRowStatus.setStatus('current')
snL4RealServerDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 3, 1, 1, 8), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerDeleteState.setStatus('current')
snL4VirtualServerPortTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1), )
if mibBuilder.loadTexts: snL4VirtualServerPortTable.setStatus('current')
snL4VirtualServerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortIndex"))
if mibBuilder.loadTexts: snL4VirtualServerPortEntry.setStatus('current')
snL4VirtualServerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortIndex.setStatus('current')
snL4VirtualServerPortServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortServerName.setStatus('current')
snL4VirtualServerPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortPort.setStatus('current')
snL4VirtualServerPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 4), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortAdminStatus.setStatus('current')
snL4VirtualServerPortSticky = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortSticky.setStatus('current')
snL4VirtualServerPortConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortConcurrent.setStatus('current')
snL4VirtualServerPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 7), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortRowStatus.setStatus('current')
snL4VirtualServerPortDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 4, 1, 1, 8), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortDeleteState.setStatus('current')
snL4RealServerPortTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1), )
if mibBuilder.loadTexts: snL4RealServerPortTable.setStatus('current')
snL4RealServerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortIndex"))
if mibBuilder.loadTexts: snL4RealServerPortEntry.setStatus('current')
snL4RealServerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortIndex.setStatus('current')
snL4RealServerPortServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortServerName.setStatus('current')
snL4RealServerPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortPort.setStatus('current')
snL4RealServerPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1, 4), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortAdminStatus.setStatus('current')
snL4RealServerPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1, 5), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortRowStatus.setStatus('current')
snL4RealServerPortDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 5, 1, 1, 6), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortDeleteState.setStatus('current')
snL4BindTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1), )
if mibBuilder.loadTexts: snL4BindTable.setStatus('current')
snL4BindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4BindIndex"))
if mibBuilder.loadTexts: snL4BindEntry.setStatus('current')
snL4BindIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4BindIndex.setStatus('current')
snL4BindVirtualServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BindVirtualServerName.setStatus('current')
snL4BindVirtualPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BindVirtualPortNumber.setStatus('current')
snL4BindRealServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1, 4), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BindRealServerName.setStatus('current')
snL4BindRealPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BindRealPortNumber.setStatus('current')
snL4BindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4BindRowStatus.setStatus('current')
snL4VirtualServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1), )
if mibBuilder.loadTexts: snL4VirtualServerStatusTable.setStatus('current')
snL4VirtualServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerStatusIndex"))
if mibBuilder.loadTexts: snL4VirtualServerStatusEntry.setStatus('current')
snL4VirtualServerStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatusIndex.setStatus('current')
snL4VirtualServerStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1, 1, 2), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatusName.setStatus('current')
snL4VirtualServerStatusReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatusReceivePkts.setStatus('current')
snL4VirtualServerStatusTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatusTransmitPkts.setStatus('current')
snL4VirtualServerStatusTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatusTotalConnections.setStatus('current')
snL4RealServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1), )
if mibBuilder.loadTexts: snL4RealServerStatusTable.setStatus('current')
snL4RealServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerStatusIndex"))
if mibBuilder.loadTexts: snL4RealServerStatusEntry.setStatus('current')
snL4RealServerStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusIndex.setStatus('current')
snL4RealServerStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 2), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusName.setStatus('current')
snL4RealServerStatusRealIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusRealIP.setStatus('current')
snL4RealServerStatusReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusReceivePkts.setStatus('current')
snL4RealServerStatusTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusTransmitPkts.setStatus('current')
snL4RealServerStatusCurConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusCurConnections.setStatus('current')
snL4RealServerStatusTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusTotalConnections.setStatus('current')
snL4RealServerStatusAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusAge.setStatus('current')
snL4RealServerStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("serverdisabled", 0), ("serverenabled", 1), ("serverfailed", 2), ("servertesting", 3), ("serversuspect", 4), ("servershutdown", 5), ("serveractive", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusState.setStatus('current')
snL4RealServerStatusReassignments = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusReassignments.setStatus('current')
snL4RealServerStatusReassignmentLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusReassignmentLimit.setStatus('current')
snL4RealServerStatusFailedPortExists = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusFailedPortExists.setStatus('current')
snL4RealServerStatusFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusFailTime.setStatus('current')
snL4RealServerStatusPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 8, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatusPeakConnections.setStatus('current')
snL4VirtualServerPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1), )
if mibBuilder.loadTexts: snL4VirtualServerPortStatusTable.setStatus('current')
snL4VirtualServerPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortStatusIndex"))
if mibBuilder.loadTexts: snL4VirtualServerPortStatusEntry.setStatus('current')
snL4VirtualServerPortStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatusIndex.setStatus('current')
snL4VirtualServerPortStatusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatusPort.setStatus('current')
snL4VirtualServerPortStatusServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1, 3), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatusServerName.setStatus('current')
snL4VirtualServerPortStatusCurrentConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatusCurrentConnection.setStatus('current')
snL4VirtualServerPortStatusTotalConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatusTotalConnection.setStatus('current')
snL4VirtualServerPortStatusPeakConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 9, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatusPeakConnection.setStatus('current')
snL4RealServerPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1), )
if mibBuilder.loadTexts: snL4RealServerPortStatusTable.setStatus('current')
snL4RealServerPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortStatusIndex"))
if mibBuilder.loadTexts: snL4RealServerPortStatusEntry.setStatus('current')
snL4RealServerPortStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusIndex.setStatus('current')
snL4RealServerPortStatusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusPort.setStatus('current')
snL4RealServerPortStatusServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 3), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusServerName.setStatus('current')
snL4RealServerPortStatusReassignCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusReassignCount.setStatus('current')
snL4RealServerPortStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("failed", 2), ("testing", 3), ("suspect", 4), ("shutdown", 5), ("active", 6), ("unbound", 7), ("awaitUnbind", 8), ("awaitDelete", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusState.setStatus('current')
snL4RealServerPortStatusFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusFailTime.setStatus('current')
snL4RealServerPortStatusCurrentConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusCurrentConnection.setStatus('current')
snL4RealServerPortStatusTotalConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusTotalConnection.setStatus('current')
snL4RealServerPortStatusRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusRxPkts.setStatus('current')
snL4RealServerPortStatusTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusTxPkts.setStatus('current')
snL4RealServerPortStatusRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusRxBytes.setStatus('current')
snL4RealServerPortStatusTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusTxBytes.setStatus('current')
snL4RealServerPortStatusPeakConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 10, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatusPeakConnection.setStatus('current')
snL4PolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1), )
if mibBuilder.loadTexts: snL4PolicyTable.setStatus('current')
snL4PolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4PolicyId"))
if mibBuilder.loadTexts: snL4PolicyEntry.setStatus('current')
snL4PolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4PolicyId.setStatus('current')
snL4PolicyPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("level0", 0), ("level1", 1), ("level2", 2), ("level3", 3), ("level4", 4), ("level5", 5), ("level6", 6), ("level7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyPriority.setStatus('current')
snL4PolicyScope = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("global", 0), ("local", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyScope.setStatus('current')
snL4PolicyProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("udp", 0), ("tcp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyProtocol.setStatus('current')
snL4PolicyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyPort.setStatus('current')
snL4PolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyRowStatus.setStatus('current')
snL4PolicyPortAccessTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 12, 1), )
if mibBuilder.loadTexts: snL4PolicyPortAccessTable.setStatus('current')
snL4PolicyPortAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 12, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4PolicyPortAccessPort"))
if mibBuilder.loadTexts: snL4PolicyPortAccessEntry.setStatus('current')
snL4PolicyPortAccessPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4PolicyPortAccessPort.setStatus('current')
snL4PolicyPortAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 12, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyPortAccessList.setStatus('current')
snL4PolicyPortAccessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4PolicyPortAccessRowStatus.setStatus('current')
snL4TrapRealServerIP = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4TrapRealServerIP.setStatus('current')
snL4TrapRealServerName = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13, 2), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4TrapRealServerName.setStatus('current')
snL4TrapRealServerPort = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4TrapRealServerPort.setStatus('current')
snL4TrapRealServerCurConnections = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4TrapRealServerCurConnections.setStatus('current')
snL4TrapLinkName = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13, 5), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4TrapLinkName.setStatus('current')
snL4LinkVirtualInterface = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 13, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4LinkVirtualInterface.setStatus('current')
snL4WebCacheTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1), )
if mibBuilder.loadTexts: snL4WebCacheTable.setStatus('current')
snL4WebCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebCacheIP"))
if mibBuilder.loadTexts: snL4WebCacheEntry.setStatus('current')
snL4WebCacheIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheIP.setStatus('current')
snL4WebCacheName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheName.setStatus('current')
snL4WebCacheAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 3), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheAdminStatus.setStatus('current')
snL4WebCacheMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheMaxConnections.setStatus('current')
snL4WebCacheWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheWeight.setStatus('current')
snL4WebCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 6), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheRowStatus.setStatus('current')
snL4WebCacheDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 14, 1, 1, 7), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheDeleteState.setStatus('current')
snL4WebCacheGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1), )
if mibBuilder.loadTexts: snL4WebCacheGroupTable.setStatus('current')
snL4WebCacheGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebCacheGroupId"))
if mibBuilder.loadTexts: snL4WebCacheGroupEntry.setStatus('current')
snL4WebCacheGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheGroupId.setStatus('current')
snL4WebCacheGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheGroupName.setStatus('current')
snL4WebCacheGroupWebCacheIpList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheGroupWebCacheIpList.setStatus('current')
snL4WebCacheGroupDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheGroupDestMask.setStatus('current')
snL4WebCacheGroupSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheGroupSrcMask.setStatus('current')
snL4WebCacheGroupAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheGroupAdminStatus.setStatus('current')
snL4WebCacheGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 15, 1, 1, 7), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCacheGroupRowStatus.setStatus('current')
snL4WebCacheTrafficStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1), )
if mibBuilder.loadTexts: snL4WebCacheTrafficStatsTable.setStatus('current')
snL4WebCacheTrafficStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebCacheTrafficIp"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebCacheTrafficPort"))
if mibBuilder.loadTexts: snL4WebCacheTrafficStatsEntry.setStatus('current')
snL4WebCacheTrafficIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheTrafficIp.setStatus('current')
snL4WebCacheTrafficPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheTrafficPort.setStatus('current')
snL4WebCacheCurrConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheCurrConnections.setStatus('current')
snL4WebCacheTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheTotalConnections.setStatus('current')
snL4WebCacheTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheTxPkts.setStatus('current')
snL4WebCacheRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheRxPkts.setStatus('current')
snL4WebCacheTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheTxOctets.setStatus('current')
snL4WebCacheRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCacheRxOctets.setStatus('current')
snL4WebCachePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 16, 1, 1, 9), WebCacheState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCachePortState.setStatus('current')
snL4WebUncachedTrafficStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1), )
if mibBuilder.loadTexts: snL4WebUncachedTrafficStatsTable.setStatus('current')
snL4WebUncachedTrafficStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebServerPort"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebClientPort"))
if mibBuilder.loadTexts: snL4WebUncachedTrafficStatsEntry.setStatus('current')
snL4WebServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebServerPort.setStatus('current')
snL4WebClientPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebClientPort.setStatus('current')
snL4WebUncachedTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebUncachedTxPkts.setStatus('current')
snL4WebUncachedRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebUncachedRxPkts.setStatus('current')
snL4WebUncachedTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebUncachedTxOctets.setStatus('current')
snL4WebUncachedRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebUncachedRxOctets.setStatus('current')
snL4WebServerPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebServerPortName.setStatus('current')
snL4WebClientPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 17, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebClientPortName.setStatus('current')
snL4WebCachePortTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1), )
if mibBuilder.loadTexts: snL4WebCachePortTable.setStatus('current')
snL4WebCachePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebCachePortServerIp"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4WebCachePortPort"))
if mibBuilder.loadTexts: snL4WebCachePortEntry.setStatus('current')
snL4WebCachePortServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCachePortServerIp.setStatus('current')
snL4WebCachePortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCachePortPort.setStatus('current')
snL4WebCachePortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1, 1, 3), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCachePortAdminStatus.setStatus('current')
snL4WebCachePortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1, 1, 4), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4WebCachePortRowStatus.setStatus('current')
snL4WebCachePortDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 18, 1, 1, 5), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4WebCachePortDeleteState.setStatus('current')
snL4RealServerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1), )
if mibBuilder.loadTexts: snL4RealServerCfgTable.setStatus('current')
snL4RealServerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerCfgIP"))
if mibBuilder.loadTexts: snL4RealServerCfgEntry.setStatus('current')
snL4RealServerCfgIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerCfgIP.setStatus('current')
snL4RealServerCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerCfgName.setStatus('current')
snL4RealServerCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 3), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerCfgAdminStatus.setStatus('current')
snL4RealServerCfgMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerCfgMaxConnections.setStatus('current')
snL4RealServerCfgWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerCfgWeight.setStatus('current')
snL4RealServerCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 6), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerCfgRowStatus.setStatus('current')
snL4RealServerCfgDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 19, 1, 1, 7), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerCfgDeleteState.setStatus('current')
snL4RealServerPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1), )
if mibBuilder.loadTexts: snL4RealServerPortCfgTable.setStatus('current')
snL4RealServerPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortCfgIP"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortCfgPort"))
if mibBuilder.loadTexts: snL4RealServerPortCfgEntry.setStatus('current')
snL4RealServerPortCfgIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortCfgIP.setStatus('current')
snL4RealServerPortCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortCfgPort.setStatus('current')
snL4RealServerPortCfgServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1, 2), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortCfgServerName.setStatus('current')
snL4RealServerPortCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1, 4), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortCfgAdminStatus.setStatus('current')
snL4RealServerPortCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1, 5), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortCfgRowStatus.setStatus('current')
snL4RealServerPortCfgDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 20, 1, 1, 6), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortCfgDeleteState.setStatus('current')
snL4VirtualServerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1), )
if mibBuilder.loadTexts: snL4VirtualServerCfgTable.setStatus('current')
snL4VirtualServerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerCfgVirtualIP"))
if mibBuilder.loadTexts: snL4VirtualServerCfgEntry.setStatus('current')
snL4VirtualServerCfgVirtualIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerCfgVirtualIP.setStatus('current')
snL4VirtualServerCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1, 2), L4ServerName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerCfgName.setStatus('current')
snL4VirtualServerCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1, 3), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerCfgAdminStatus.setStatus('current')
snL4VirtualServerCfgSDAType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("leastconnection", 1), ("roundrobin", 2), ("weighted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerCfgSDAType.setStatus('current')
snL4VirtualServerCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1, 5), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerCfgRowStatus.setStatus('current')
snL4VirtualServerCfgDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 21, 1, 1, 6), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerCfgDeleteState.setStatus('current')
snL4VirtualServerPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1), )
if mibBuilder.loadTexts: snL4VirtualServerPortCfgTable.setStatus('current')
snL4VirtualServerPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortCfgIP"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortCfgPort"))
if mibBuilder.loadTexts: snL4VirtualServerPortCfgEntry.setStatus('current')
snL4VirtualServerPortCfgIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgIP.setStatus('current')
snL4VirtualServerPortCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgPort.setStatus('current')
snL4VirtualServerPortCfgServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 3), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgServerName.setStatus('current')
snL4VirtualServerPortCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 4), L4Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgAdminStatus.setStatus('current')
snL4VirtualServerPortCfgSticky = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgSticky.setStatus('current')
snL4VirtualServerPortCfgConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgConcurrent.setStatus('current')
snL4VirtualServerPortCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 7), L4RowSts()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgRowStatus.setStatus('current')
snL4VirtualServerPortCfgDeleteState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 22, 1, 1, 8), L4DeleteState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortCfgDeleteState.setStatus('current')
snL4VirtualServerStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1), )
if mibBuilder.loadTexts: snL4VirtualServerStatisticTable.setStatus('current')
snL4VirtualServerStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerStatisticIP"))
if mibBuilder.loadTexts: snL4VirtualServerStatisticEntry.setStatus('current')
snL4VirtualServerStatisticIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticIP.setStatus('current')
snL4VirtualServerStatisticName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 2), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticName.setStatus('current')
snL4VirtualServerStatisticReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticReceivePkts.setStatus('current')
snL4VirtualServerStatisticTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticTransmitPkts.setStatus('current')
snL4VirtualServerStatisticTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticTotalConnections.setStatus('current')
snL4VirtualServerStatisticReceiveBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticReceiveBytes.setStatus('current')
snL4VirtualServerStatisticTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticTransmitBytes.setStatus('current')
snL4VirtualServerStatisticSymmetricState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricState.setStatus('current')
snL4VirtualServerStatisticSymmetricPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricPriority.setStatus('current')
snL4VirtualServerStatisticSymmetricKeep = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricKeep.setStatus('current')
snL4VirtualServerStatisticSymmetricActivates = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricActivates.setStatus('current')
snL4VirtualServerStatisticSymmetricInactives = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricInactives.setStatus('current')
snL4VirtualServerStatisticSymmetricBestStandbyMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 13), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricBestStandbyMacAddr.setStatus('current')
snL4VirtualServerStatisticSymmetricActiveMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 25, 1, 1, 14), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerStatisticSymmetricActiveMacAddr.setStatus('current')
snL4RealServerStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1), )
if mibBuilder.loadTexts: snL4RealServerStatisticTable.setStatus('current')
snL4RealServerStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerStatisticRealIP"))
if mibBuilder.loadTexts: snL4RealServerStatisticEntry.setStatus('current')
snL4RealServerStatisticRealIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticRealIP.setStatus('current')
snL4RealServerStatisticName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 2), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticName.setStatus('current')
snL4RealServerStatisticReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticReceivePkts.setStatus('current')
snL4RealServerStatisticTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticTransmitPkts.setStatus('current')
snL4RealServerStatisticCurConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticCurConnections.setStatus('current')
snL4RealServerStatisticTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticTotalConnections.setStatus('current')
snL4RealServerStatisticAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticAge.setStatus('current')
snL4RealServerStatisticState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("serverdisabled", 0), ("serverenabled", 1), ("serverfailed", 2), ("servertesting", 3), ("serversuspect", 4), ("servershutdown", 5), ("serveractive", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticState.setStatus('current')
snL4RealServerStatisticReassignments = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticReassignments.setStatus('current')
snL4RealServerStatisticReassignmentLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticReassignmentLimit.setStatus('current')
snL4RealServerStatisticFailedPortExists = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticFailedPortExists.setStatus('current')
snL4RealServerStatisticFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticFailTime.setStatus('current')
snL4RealServerStatisticPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 23, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerStatisticPeakConnections.setStatus('current')
snL4VirtualServerPortStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1), )
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticTable.setStatus('current')
snL4VirtualServerPortStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortStatisticIP"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortStatisticPort"))
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticEntry.setStatus('current')
snL4VirtualServerPortStatisticIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticIP.setStatus('current')
snL4VirtualServerPortStatisticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticPort.setStatus('current')
snL4VirtualServerPortStatisticServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1, 3), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticServerName.setStatus('current')
snL4VirtualServerPortStatisticCurrentConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticCurrentConnection.setStatus('current')
snL4VirtualServerPortStatisticTotalConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticTotalConnection.setStatus('current')
snL4VirtualServerPortStatisticPeakConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 26, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortStatisticPeakConnection.setStatus('current')
snL4RealServerPortStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1), )
if mibBuilder.loadTexts: snL4RealServerPortStatisticTable.setStatus('current')
snL4RealServerPortStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortStatisticIP"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortStatisticPort"))
if mibBuilder.loadTexts: snL4RealServerPortStatisticEntry.setStatus('current')
snL4RealServerPortStatisticIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticIP.setStatus('current')
snL4RealServerPortStatisticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticPort.setStatus('current')
snL4RealServerPortStatisticServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 3), L4ServerName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticServerName.setStatus('current')
snL4RealServerPortStatisticReassignCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticReassignCount.setStatus('current')
snL4RealServerPortStatisticState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("failed", 2), ("testing", 3), ("suspect", 4), ("shutdown", 5), ("active", 6), ("unbound", 7), ("awaitUnbind", 8), ("awaitDelete", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticState.setStatus('current')
snL4RealServerPortStatisticFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticFailTime.setStatus('current')
snL4RealServerPortStatisticCurrentConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticCurrentConnection.setStatus('current')
snL4RealServerPortStatisticTotalConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticTotalConnection.setStatus('current')
snL4RealServerPortStatisticRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticRxPkts.setStatus('current')
snL4RealServerPortStatisticTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticTxPkts.setStatus('current')
snL4RealServerPortStatisticRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticRxBytes.setStatus('current')
snL4RealServerPortStatisticTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticTxBytes.setStatus('current')
snL4RealServerPortStatisticPeakConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 24, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortStatisticPeakConnection.setStatus('current')
snL4GslbSiteRemoteServerIronTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 27, 1), )
if mibBuilder.loadTexts: snL4GslbSiteRemoteServerIronTable.setStatus('current')
snL4GslbSiteRemoteServerIronEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 27, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4GslbSiteRemoteServerIronIP"))
if mibBuilder.loadTexts: snL4GslbSiteRemoteServerIronEntry.setStatus('current')
snL4GslbSiteRemoteServerIronIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 27, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4GslbSiteRemoteServerIronIP.setStatus('current')
snL4GslbSiteRemoteServerIronPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4GslbSiteRemoteServerIronPreference.setStatus('current')
snL4RealServerHistoryControlTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1), )
if mibBuilder.loadTexts: snL4RealServerHistoryControlTable.setStatus('current')
snL4RealServerHistoryControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerHistoryControlIndex"))
if mibBuilder.loadTexts: snL4RealServerHistoryControlEntry.setStatus('current')
snL4RealServerHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryControlIndex.setStatus('current')
snL4RealServerHistoryControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerHistoryControlDataSource.setStatus('current')
snL4RealServerHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerHistoryControlBucketsRequested.setStatus('current')
snL4RealServerHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryControlBucketsGranted.setStatus('current')
snL4RealServerHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerHistoryControlInterval.setStatus('current')
snL4RealServerHistoryControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerHistoryControlOwner.setStatus('current')
snL4RealServerHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerHistoryControlStatus.setStatus('current')
snL4RealServerHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2), )
if mibBuilder.loadTexts: snL4RealServerHistoryTable.setStatus('current')
snL4RealServerHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerHistoryIndex"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerHistorySampleIndex"))
if mibBuilder.loadTexts: snL4RealServerHistoryEntry.setStatus('current')
snL4RealServerHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryIndex.setStatus('current')
snL4RealServerHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistorySampleIndex.setStatus('current')
snL4RealServerHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryIntervalStart.setStatus('current')
snL4RealServerHistoryReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryReceivePkts.setStatus('current')
snL4RealServerHistoryTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryTransmitPkts.setStatus('current')
snL4RealServerHistoryTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryTotalConnections.setStatus('current')
snL4RealServerHistoryCurConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryCurConnections.setStatus('current')
snL4RealServerHistoryPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryPeakConnections.setStatus('current')
snL4RealServerHistoryReassignments = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerHistoryReassignments.setStatus('current')
snL4RealServerPortHistoryControlTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3), )
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlTable.setStatus('current')
snL4RealServerPortHistoryControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortHistoryControlIndex"))
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlEntry.setStatus('current')
snL4RealServerPortHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlIndex.setStatus('current')
snL4RealServerPortHistoryControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlDataSource.setStatus('current')
snL4RealServerPortHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlBucketsRequested.setStatus('current')
snL4RealServerPortHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlBucketsGranted.setStatus('current')
snL4RealServerPortHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlInterval.setStatus('current')
snL4RealServerPortHistoryControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlOwner.setStatus('current')
snL4RealServerPortHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4RealServerPortHistoryControlStatus.setStatus('current')
snL4RealServerPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4), )
if mibBuilder.loadTexts: snL4RealServerPortHistoryTable.setStatus('current')
snL4RealServerPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortHistoryIndex"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4RealServerPortHistorySampleIndex"))
if mibBuilder.loadTexts: snL4RealServerPortHistoryEntry.setStatus('current')
snL4RealServerPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryIndex.setStatus('current')
snL4RealServerPortHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistorySampleIndex.setStatus('current')
snL4RealServerPortHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryIntervalStart.setStatus('current')
snL4RealServerPortHistoryReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryReceivePkts.setStatus('current')
snL4RealServerPortHistoryTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryTransmitPkts.setStatus('current')
snL4RealServerPortHistoryTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryTotalConnections.setStatus('current')
snL4RealServerPortHistoryCurConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryCurConnections.setStatus('current')
snL4RealServerPortHistoryPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryPeakConnections.setStatus('current')
snL4RealServerPortHistoryResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4RealServerPortHistoryResponseTime.setStatus('current')
snL4VirtualServerHistoryControlTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5), )
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlTable.setStatus('current')
snL4VirtualServerHistoryControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerHistoryControlIndex"))
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlEntry.setStatus('current')
snL4VirtualServerHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlIndex.setStatus('current')
snL4VirtualServerHistoryControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlDataSource.setStatus('current')
snL4VirtualServerHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlBucketsRequested.setStatus('current')
snL4VirtualServerHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlBucketsGranted.setStatus('current')
snL4VirtualServerHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlInterval.setStatus('current')
snL4VirtualServerHistoryControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlOwner.setStatus('current')
snL4VirtualServerHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerHistoryControlStatus.setStatus('current')
snL4VirtualServerHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6), )
if mibBuilder.loadTexts: snL4VirtualServerHistoryTable.setStatus('current')
snL4VirtualServerHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerHistoryIndex"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerHistorySampleIndex"))
if mibBuilder.loadTexts: snL4VirtualServerHistoryEntry.setStatus('current')
snL4VirtualServerHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryIndex.setStatus('current')
snL4VirtualServerHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistorySampleIndex.setStatus('current')
snL4VirtualServerHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryIntervalStart.setStatus('current')
snL4VirtualServerHistoryReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryReceivePkts.setStatus('current')
snL4VirtualServerHistoryTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryTransmitPkts.setStatus('current')
snL4VirtualServerHistoryTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryTotalConnections.setStatus('current')
snL4VirtualServerHistoryCurConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryCurConnections.setStatus('current')
snL4VirtualServerHistoryPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerHistoryPeakConnections.setStatus('current')
snL4VirtualServerPortHistoryControlTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7), )
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlTable.setStatus('current')
snL4VirtualServerPortHistoryControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortHistoryControlIndex"))
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlEntry.setStatus('current')
snL4VirtualServerPortHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlIndex.setStatus('current')
snL4VirtualServerPortHistoryControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlDataSource.setStatus('current')
snL4VirtualServerPortHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlBucketsRequested.setStatus('current')
snL4VirtualServerPortHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlBucketsGranted.setStatus('current')
snL4VirtualServerPortHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlInterval.setStatus('current')
snL4VirtualServerPortHistoryControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlOwner.setStatus('current')
snL4VirtualServerPortHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryControlStatus.setStatus('current')
snL4VirtualServerPortHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8), )
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryTable.setStatus('current')
snL4VirtualServerPortHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1), ).setIndexNames((0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortHistoryIndex"), (0, "FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", "snL4VirtualServerPortHistorySampleIndex"))
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryEntry.setStatus('current')
snL4VirtualServerPortHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryIndex.setStatus('current')
snL4VirtualServerPortHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistorySampleIndex.setStatus('current')
snL4VirtualServerPortHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryIntervalStart.setStatus('current')
snL4VirtualServerPortHistoryReceivePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryReceivePkts.setStatus('current')
snL4VirtualServerPortHistoryTransmitPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryTransmitPkts.setStatus('current')
snL4VirtualServerPortHistoryTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryTotalConnections.setStatus('current')
snL4VirtualServerPortHistoryCurConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryCurConnections.setStatus('current')
snL4VirtualServerPortHistoryPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 4, 28, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snL4VirtualServerPortHistoryPeakConnections.setStatus('current')
mibBuilder.exportSymbols("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", snL4slbDangling=snL4slbDangling, snL4RealServerStatusEntry=snL4RealServerStatusEntry, snL4RealServerStatisticReassignments=snL4RealServerStatisticReassignments, snL4WebCacheRxPkts=snL4WebCacheRxPkts, snL4WebCacheRxOctets=snL4WebCacheRxOctets, snL4VirtualServerPortIndex=snL4VirtualServerPortIndex, snL4slbDisableCount=snL4slbDisableCount, snL4VirtualServerStatisticSymmetricBestStandbyMacAddr=snL4VirtualServerStatisticSymmetricBestStandbyMacAddr, snL4WebCacheTrafficPort=snL4WebCacheTrafficPort, snL4VirtualServerPortHistoryControlEntry=snL4VirtualServerPortHistoryControlEntry, snL4VirtualServerStatusName=snL4VirtualServerStatusName, snL4RealServerHistoryReceivePkts=snL4RealServerHistoryReceivePkts, snL4WebCacheTotalConnections=snL4WebCacheTotalConnections, snL4RealServerHistorySampleIndex=snL4RealServerHistorySampleIndex, snL4VirtualServerIndex=snL4VirtualServerIndex, snL4FreeSessionCount=snL4FreeSessionCount, snL4RealServerStatusIndex=snL4RealServerStatusIndex, snL4RealServerPortStatusRxBytes=snL4RealServerPortStatusRxBytes, snL4VirtualServerAdminStatus=snL4VirtualServerAdminStatus, L4DeleteState=L4DeleteState, snL4PolicyPriority=snL4PolicyPriority, snL4WebUncachedTxPkts=snL4WebUncachedTxPkts, snL4WebCache=snL4WebCache, snL4slbDrops=snL4slbDrops, snL4RealServerPortStatisticReassignCount=snL4RealServerPortStatisticReassignCount, snL4VirtualServerStatisticSymmetricPriority=snL4VirtualServerStatisticSymmetricPriority, snL4MaxSessionLimit=snL4MaxSessionLimit, snL4VirtualServerPortEntry=snL4VirtualServerPortEntry, snL4VirtualServerStatisticTotalConnections=snL4VirtualServerStatisticTotalConnections, snL4VirtualServerPortStatusPeakConnection=snL4VirtualServerPortStatusPeakConnection, snL4VirtualServerStatisticSymmetricActiveMacAddr=snL4VirtualServerStatisticSymmetricActiveMacAddr, snL4VirtualServerPortStatusTable=snL4VirtualServerPortStatusTable, snL4VirtualServerPortStatisticTotalConnection=snL4VirtualServerPortStatisticTotalConnection, snL4VirtualServerPortHistoryTransmitPkts=snL4VirtualServerPortHistoryTransmitPkts, snL4WebCacheGroupWebCacheIpList=snL4WebCacheGroupWebCacheIpList, snL4slbRouterInterfacePortList=snL4slbRouterInterfacePortList, snL4RealServerHistoryTable=snL4RealServerHistoryTable, snL4WebClientPort=snL4WebClientPort, snL4RealServerPortHistoryControlStatus=snL4RealServerPortHistoryControlStatus, snL4TrapLinkName=snL4TrapLinkName, snL4RealServerStatusRealIP=snL4RealServerStatusRealIP, snL4RealServerPortHistoryEntry=snL4RealServerPortHistoryEntry, snL4RealServerPortStatisticPort=snL4RealServerPortStatisticPort, snL4BindTable=snL4BindTable, snL4VirtualServerPortHistoryCurConnections=snL4VirtualServerPortHistoryCurConnections, snL4RealServerPortHistoryIntervalStart=snL4RealServerPortHistoryIntervalStart, snL4VirtualServerHistoryControlDataSource=snL4VirtualServerHistoryControlDataSource, snL4RealServerHistoryControlInterval=snL4RealServerHistoryControlInterval, snL4WebCacheGroupAdminStatus=snL4WebCacheGroupAdminStatus, snL4VirtualServerCfgAdminStatus=snL4VirtualServerCfgAdminStatus, snL4RealServerPortCfgEntry=snL4RealServerPortCfgEntry, snL4RealServerPortStatisticRxPkts=snL4RealServerPortStatisticRxPkts, snL4VirtualServerPortHistoryControlDataSource=snL4VirtualServerPortHistoryControlDataSource, L4Status=L4Status, snL4VirtualServerHistoryIndex=snL4VirtualServerHistoryIndex, snL4VirtualServerPortCfgServerName=snL4VirtualServerPortCfgServerName, snL4WebCacheCurrConnections=snL4WebCacheCurrConnections, snL4RealServerPortHistoryControlEntry=snL4RealServerPortHistoryControlEntry, snL4RealServerCfgWeight=snL4RealServerCfgWeight, snL4VirtualServerPortSticky=snL4VirtualServerPortSticky, snL4VirtualServerPortHistoryControlInterval=snL4VirtualServerPortHistoryControlInterval, snL4PolicyPortAccess=snL4PolicyPortAccess, snL4WebCacheAdminStatus=snL4WebCacheAdminStatus, snL4RealServerPortIndex=snL4RealServerPortIndex, snL4VirtualServerStatisticIP=snL4VirtualServerStatisticIP, snL4VirtualServerPortStatisticTable=snL4VirtualServerPortStatisticTable, snL4WebCacheRowStatus=snL4WebCacheRowStatus, snL4RealServerPortStatisticTable=snL4RealServerPortStatisticTable, snL4VirtualServerHistorySampleIndex=snL4VirtualServerHistorySampleIndex, snL4VirtualServerHistoryTable=snL4VirtualServerHistoryTable, snL4RealServerPortRowStatus=snL4RealServerPortRowStatus, snL4RealServerStatusReceivePkts=snL4RealServerStatusReceivePkts, snL4RealServerPortStatusReassignCount=snL4RealServerPortStatusReassignCount, snL4PolicyId=snL4PolicyId, snL4slbForwardTraffic=snL4slbForwardTraffic, snL4GslbSiteRemoteServerIronEntry=snL4GslbSiteRemoteServerIronEntry, snL4VirtualServerPortHistoryEntry=snL4VirtualServerPortHistoryEntry, snL4VirtualServerPortHistoryReceivePkts=snL4VirtualServerPortHistoryReceivePkts, snL4PingRetry=snL4PingRetry, snL4WebCachePortServerIp=snL4WebCachePortServerIp, snL4WebCacheTrafficStatsEntry=snL4WebCacheTrafficStatsEntry, snL4RealServerStatisticTransmitPkts=snL4RealServerStatisticTransmitPkts, snL4BackupState=snL4BackupState, snL4BecomeActive=snL4BecomeActive, snL4WebUncachedTxOctets=snL4WebUncachedTxOctets, snL4TrapRealServerCurConnections=snL4TrapRealServerCurConnections, snL4RealServerPortStatusPort=snL4RealServerPortStatusPort, snL4VirtualServerStatisticName=snL4VirtualServerStatisticName, snL4RealServerCfgIP=snL4RealServerCfgIP, snL4BecomeStandBy=snL4BecomeStandBy, snL4EnableRealServerPortDownTrap=snL4EnableRealServerPortDownTrap, snL4slbLimitExceeds=snL4slbLimitExceeds, snL4RealServerPortHistorySampleIndex=snL4RealServerPortHistorySampleIndex, snL4VirtualServerRowStatus=snL4VirtualServerRowStatus, PYSNMP_MODULE_ID=snL4, snL4VirtualServerStatisticSymmetricState=snL4VirtualServerStatisticSymmetricState, snL4BackupInterface=snL4BackupInterface, snL4WebCacheGroupRowStatus=snL4WebCacheGroupRowStatus, L4Flag=L4Flag, snL4VirtualServerPortConcurrent=snL4VirtualServerPortConcurrent, snL4RealServerPortHistoryCurConnections=snL4RealServerPortHistoryCurConnections, snL4WebCacheGroupDestMask=snL4WebCacheGroupDestMask, snL4VirtualServerPortStatisticPeakConnection=snL4VirtualServerPortStatisticPeakConnection, snL4RealServerPortStatisticTxPkts=snL4RealServerPortStatisticTxPkts, snL4RealServerPortServerName=snL4RealServerPortServerName, snL4VirtualServerPortHistoryControlOwner=snL4VirtualServerPortHistoryControlOwner, snL4EnableMaxSessionLimitReachedTrap=snL4EnableMaxSessionLimitReachedTrap, snL4VirtualServerPortCfg=snL4VirtualServerPortCfg, snL4RealServerPortCfg=snL4RealServerPortCfg, snL4RealServerPortCfgAdminStatus=snL4RealServerPortCfgAdminStatus, snL4RealServerStatisticTable=snL4RealServerStatisticTable, snL4VirtualServerStatusTotalConnections=snL4VirtualServerStatusTotalConnections, snL4VirtualServerPortStatusServerName=snL4VirtualServerPortStatusServerName, snL4TrapRealServerPort=snL4TrapRealServerPort, snL4RealServerHistoryTotalConnections=snL4RealServerHistoryTotalConnections, snL4RealServerWeight=snL4RealServerWeight, snL4RealServerHistoryControlBucketsGranted=snL4RealServerHistoryControlBucketsGranted, snL4EnableGslbHealthCheckIpPortDownTrap=snL4EnableGslbHealthCheckIpPortDownTrap, snL4VirtualServerPortHistoryControlTable=snL4VirtualServerPortHistoryControlTable, snL4RealServerPortTable=snL4RealServerPortTable, snL4RealServerAdminStatus=snL4RealServerAdminStatus, snL4RealServerHistoryReassignments=snL4RealServerHistoryReassignments, snL4RealServerPortHistoryTransmitPkts=snL4RealServerPortHistoryTransmitPkts, snL4RealServerCfgDeleteState=snL4RealServerCfgDeleteState, snL4MaxNumWebCachePerGroup=snL4MaxNumWebCachePerGroup, snL4VirtualServerHistoryControlBucketsRequested=snL4VirtualServerHistoryControlBucketsRequested, snL4VirtualServerStatusIndex=snL4VirtualServerStatusIndex, snL4RealServerPortCfgPort=snL4RealServerPortCfgPort, snL4TrapRealServerName=snL4TrapRealServerName, snL4VirtualServerEntry=snL4VirtualServerEntry, snL4RealServerPortHistoryPeakConnections=snL4RealServerPortHistoryPeakConnections, snL4VirtualServerCfgRowStatus=snL4VirtualServerCfgRowStatus, snL4RealServerPortStatusTotalConnection=snL4RealServerPortStatusTotalConnection, snL4VirtualServerPortHistoryControlBucketsRequested=snL4VirtualServerPortHistoryControlBucketsRequested, snL4RealServerHistoryControlIndex=snL4RealServerHistoryControlIndex, snL4VirtualServerCfgName=snL4VirtualServerCfgName, snL4slbGlobalSDAType=snL4slbGlobalSDAType, snL4NoPDUSent=snL4NoPDUSent, snL4EnableRealServerDownTrap=snL4EnableRealServerDownTrap, snL4VirtualServerPortStatus=snL4VirtualServerPortStatus, snL4WebCacheStateful=snL4WebCacheStateful, snL4VirtualServerStatusEntry=snL4VirtualServerStatusEntry, snL4RealServerPortStatisticTxBytes=snL4RealServerPortStatisticTxBytes, snL4VirtualServerPortStatisticPort=snL4VirtualServerPortStatisticPort, snL4RealServerCfgName=snL4RealServerCfgName, snL4VirtualServerStatusReceivePkts=snL4VirtualServerStatusReceivePkts, snL4VirtualServerPortStatusEntry=snL4VirtualServerPortStatusEntry, snL4RealServerStatusAge=snL4RealServerStatusAge, snL4RealServerPortStatusEntry=snL4RealServerPortStatusEntry, snL4VirtualServerPortHistoryIntervalStart=snL4VirtualServerPortHistoryIntervalStart, snL4RealServerStatisticTotalConnections=snL4RealServerStatisticTotalConnections, snL4EnableGslbHealthCheckIpDownTrap=snL4EnableGslbHealthCheckIpDownTrap, snL4VirtualServerPortStatusPort=snL4VirtualServerPortStatusPort, snL4WebCacheGroupId=snL4WebCacheGroupId, snL4RealServerRowStatus=snL4RealServerRowStatus, snL4VirtualServerPortStatusIndex=snL4VirtualServerPortStatusIndex, snL4UdpAge=snL4UdpAge, snL4WebCacheTable=snL4WebCacheTable, snL4WebUncachedRxOctets=snL4WebUncachedRxOctets, L4RowSts=L4RowSts, snL4RealServerStatusTotalConnections=snL4RealServerStatusTotalConnections, snL4EnableTcpSynLimitReachedTrap=snL4EnableTcpSynLimitReachedTrap, snL4WebCacheGroupTable=snL4WebCacheGroupTable, snL4Backup=snL4Backup, snL4VirtualServerPortCfgIP=snL4VirtualServerPortCfgIP, snL4WebServerPort=snL4WebServerPort, snL4RealServerPortStatusIndex=snL4RealServerPortStatusIndex, snL4RealServerStatistic=snL4RealServerStatistic, snL4EnableRealServerUpTrap=snL4EnableRealServerUpTrap, snL4RealServerStatisticName=snL4RealServerStatisticName, snL4RealServerPortCfgTable=snL4RealServerPortCfgTable, snL4RealServerHistoryTransmitPkts=snL4RealServerHistoryTransmitPkts, snL4VirtualServerPortCfgRowStatus=snL4VirtualServerPortCfgRowStatus, snL4RealServerHistoryControlDataSource=snL4RealServerHistoryControlDataSource, snL4WebClientPortName=snL4WebClientPortName, snL4RealServerStatisticReceivePkts=snL4RealServerStatisticReceivePkts, snL4Active=snL4Active, snL4VirtualServerHistoryControlBucketsGranted=snL4VirtualServerHistoryControlBucketsGranted, snL4EnableGslbRemoteGslbSiUpTrap=snL4EnableGslbRemoteGslbSiUpTrap, snL4WebServerPortName=snL4WebServerPortName, snL4WebCacheMaxConnections=snL4WebCacheMaxConnections, snL4VirtualServerStatisticTransmitBytes=snL4VirtualServerStatisticTransmitBytes, snL4=snL4, snL4WebUncachedTrafficStats=snL4WebUncachedTrafficStats, snL4VirtualServerHistoryControlInterval=snL4VirtualServerHistoryControlInterval, snL4RealServerPortEntry=snL4RealServerPortEntry, snL4RealServerTable=snL4RealServerTable, snL4RealServerPortCfgServerName=snL4RealServerPortCfgServerName, snL4RealServerHistoryEntry=snL4RealServerHistoryEntry, snL4PingInterval=snL4PingInterval, snL4WebUncachedTrafficStatsTable=snL4WebUncachedTrafficStatsTable, snL4RealServerPortStatisticRxBytes=snL4RealServerPortStatisticRxBytes, snL4RealServerStatusTable=snL4RealServerStatusTable, snL4VirtualServerVirtualIP=snL4VirtualServerVirtualIP, snL4RealServerName=snL4RealServerName, snL4WebCacheDeleteState=snL4WebCacheDeleteState, snL4RealServerStatisticRealIP=snL4RealServerStatisticRealIP, snL4EnableGslbHealthCheckIpPortUpTrap=snL4EnableGslbHealthCheckIpPortUpTrap, snL4WebCacheGroupEntry=snL4WebCacheGroupEntry, snL4VirtualServerPortHistoryTotalConnections=snL4VirtualServerPortHistoryTotalConnections, snL4VirtualServerPortHistoryIndex=snL4VirtualServerPortHistoryIndex, snL4VirtualServerStatus=snL4VirtualServerStatus, snL4RealServerPortCfgRowStatus=snL4RealServerPortCfgRowStatus, snL4RealServerIndex=snL4RealServerIndex, snL4VirtualServerHistoryReceivePkts=snL4VirtualServerHistoryReceivePkts, snL4BindIndex=snL4BindIndex, snL4RealServerHistoryControlTable=snL4RealServerHistoryControlTable, snL4RealServerHistoryCurConnections=snL4RealServerHistoryCurConnections, snL4VirtualServerName=snL4VirtualServerName, snL4EnableGslbRemoteGslbSiDownTrap=snL4EnableGslbRemoteGslbSiDownTrap, snL4VirtualServerHistoryCurConnections=snL4VirtualServerHistoryCurConnections, snL4WebCachePortDeleteState=snL4WebCachePortDeleteState, snL4RealServerPortStatus=snL4RealServerPortStatus, snL4VirtualServerPortAdminStatus=snL4VirtualServerPortAdminStatus, snL4TcpAge=snL4TcpAge, snL4PolicyPort=snL4PolicyPort, snL4RealServerPortStatusState=snL4RealServerPortStatusState, snL4PolicyPortAccessEntry=snL4PolicyPortAccessEntry, snL4VirtualServerStatusTable=snL4VirtualServerStatusTable, snL4RealServerPortHistoryTotalConnections=snL4RealServerPortHistoryTotalConnections, snL4VirtualServerPortStatistic=snL4VirtualServerPortStatistic, snL4RealServerStatisticFailTime=snL4RealServerStatisticFailTime, snL4WebCachePortRowStatus=snL4WebCachePortRowStatus, snL4WebCacheTrafficStatsTable=snL4WebCacheTrafficStatsTable, snL4WebCacheGroup=snL4WebCacheGroup, snL4RealServerPortHistoryControlBucketsRequested=snL4RealServerPortHistoryControlBucketsRequested, snL4VirtualServerPortCfgAdminStatus=snL4VirtualServerPortCfgAdminStatus, snL4VirtualServerCfgEntry=snL4VirtualServerCfgEntry, snL4GslbSiteRemoteServerIrons=snL4GslbSiteRemoteServerIrons, snL4RealServerHistoryControlStatus=snL4RealServerHistoryControlStatus, snL4RealServerCfgEntry=snL4RealServerCfgEntry, snL4VirtualServerStatisticReceivePkts=snL4VirtualServerStatisticReceivePkts, snL4NoPortMap=snL4NoPortMap, snL4VirtualServerStatisticSymmetricKeep=snL4VirtualServerStatisticSymmetricKeep, snL4RealServerStatisticAge=snL4RealServerStatisticAge, snL4WebCachePort=snL4WebCachePort, snL4VirtualServerStatisticTable=snL4VirtualServerStatisticTable, snL4RealServerPortHistoryControlTable=snL4RealServerPortHistoryControlTable, snL4EnableBecomeStandbyTrap=snL4EnableBecomeStandbyTrap, snL4VirtualServerHistoryEntry=snL4VirtualServerHistoryEntry, snL4RealServerPortStatisticEntry=snL4RealServerPortStatisticEntry, snL4EnableRealServerMaxConnLimitReachedTrap=snL4EnableRealServerMaxConnLimitReachedTrap, snL4EnableGslbRemoteSiUpTrap=snL4EnableGslbRemoteSiUpTrap, snL4slbTotalConnections=snL4slbTotalConnections, snL4VirtualServerStatisticTransmitPkts=snL4VirtualServerStatisticTransmitPkts, snL4GslbSiteRemoteServerIronPreference=snL4GslbSiteRemoteServerIronPreference, snL4RealServerStatusName=snL4RealServerStatusName, snL4VirtualServerPortRowStatus=snL4VirtualServerPortRowStatus, snL4RealServerPortStatusPeakConnection=snL4RealServerPortStatusPeakConnection, snL4RealServerPortStatisticTotalConnection=snL4RealServerPortStatisticTotalConnection, snL4VirtualServerCfg=snL4VirtualServerCfg, snL4RealServerStatisticEntry=snL4RealServerStatisticEntry, snL4RealServerCfgTable=snL4RealServerCfgTable, snL4VirtualServerCfgDeleteState=snL4VirtualServerCfgDeleteState)
mibBuilder.exportSymbols("FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB", WebCacheState=WebCacheState, snL4Gen=snL4Gen, snL4BindEntry=snL4BindEntry, snL4WebUncachedTrafficStatsEntry=snL4WebUncachedTrafficStatsEntry, snL4slbRouterInterfacePortMask=snL4slbRouterInterfacePortMask, snL4WebCacheGroupName=snL4WebCacheGroupName, snL4WebCacheName=snL4WebCacheName, snL4RealServerPortHistoryControlBucketsGranted=snL4RealServerPortHistoryControlBucketsGranted, snL4GslbSiteRemoteServerIronIP=snL4GslbSiteRemoteServerIronIP, snL4RealServerPortHistoryResponseTime=snL4RealServerPortHistoryResponseTime, snL4VirtualServerDeleteState=snL4VirtualServerDeleteState, snL4RealServerPortStatusTable=snL4RealServerPortStatusTable, snL4BindRealServerName=snL4BindRealServerName, snL4BackupMacAddr=snL4BackupMacAddr, snL4VirtualServerPortTable=snL4VirtualServerPortTable, snL4VirtualServerPortStatisticIP=snL4VirtualServerPortStatisticIP, snL4VirtualServerPortCfgSticky=snL4VirtualServerPortCfgSticky, snL4RealServerPortStatisticState=snL4RealServerPortStatisticState, snL4RealServerStatusFailTime=snL4RealServerStatusFailTime, snL4unsuccessfulConn=snL4unsuccessfulConn, snL4RealServerHistoryPeakConnections=snL4RealServerHistoryPeakConnections, snL4PolicyScope=snL4PolicyScope, snL4RealServerStatus=snL4RealServerStatus, snL4RealServerStatisticFailedPortExists=snL4RealServerStatisticFailedPortExists, snL4RealServerStatusReassignmentLimit=snL4RealServerStatusReassignmentLimit, snL4VirtualServerHistoryPeakConnections=snL4VirtualServerHistoryPeakConnections, snL4RealServerStatusReassignments=snL4RealServerStatusReassignments, snL4RealServerHistoryControlEntry=snL4RealServerHistoryControlEntry, snL4RealServerPortHistoryIndex=snL4RealServerPortHistoryIndex, snL4RealServerPortStatusTxPkts=snL4RealServerPortStatusTxPkts, snL4WebCacheTrafficStats=snL4WebCacheTrafficStats, snL4VirtualServerPortCfgTable=snL4VirtualServerPortCfgTable, snL4WebCachePortState=snL4WebCachePortState, snL4VirtualServerStatusTransmitPkts=snL4VirtualServerStatusTransmitPkts, snL4VirtualServerPortHistorySampleIndex=snL4VirtualServerPortHistorySampleIndex, snL4VirtualServerCfgSDAType=snL4VirtualServerCfgSDAType, snL4RealServerPortHistoryControlInterval=snL4RealServerPortHistoryControlInterval, snL4VirtualServerPortServerName=snL4VirtualServerPortServerName, snL4VirtualServerHistoryControlTable=snL4VirtualServerHistoryControlTable, snL4LinkVirtualInterface=snL4LinkVirtualInterface, snL4RealServerMaxConnections=snL4RealServerMaxConnections, snL4Policy=snL4Policy, snL4RealServerStatisticState=snL4RealServerStatisticState, snL4Redundancy=snL4Redundancy, snL4VirtualServerCfgTable=snL4VirtualServerCfgTable, snL4RealServerCfgMaxConnections=snL4RealServerCfgMaxConnections, snL4VirtualServerPortCfgPort=snL4VirtualServerPortCfgPort, snL4RealServerPortStatusFailTime=snL4RealServerPortStatusFailTime, snL4RealServerPortCfgIP=snL4RealServerPortCfgIP, snL4BindRealPortNumber=snL4BindRealPortNumber, snL4RealServerHistoryControlOwner=snL4RealServerHistoryControlOwner, snL4RealServerCfgAdminStatus=snL4RealServerCfgAdminStatus, snL4RealServerStatusPeakConnections=snL4RealServerStatusPeakConnections, snL4BindVirtualServerName=snL4BindVirtualServerName, snL4RealServerPortPort=snL4RealServerPortPort, snL4GslbSiteRemoteServerIronTable=snL4GslbSiteRemoteServerIronTable, snL4RealServerHistoryControlBucketsRequested=snL4RealServerHistoryControlBucketsRequested, snL4RealServerPortStatistic=snL4RealServerPortStatistic, snL4WebCacheEntry=snL4WebCacheEntry, snL4RealServerPortStatisticPeakConnection=snL4RealServerPortStatisticPeakConnection, snL4RealServerPortHistoryControlDataSource=snL4RealServerPortHistoryControlDataSource, snL4VirtualServerPortStatisticServerName=snL4VirtualServerPortStatisticServerName, snL4VirtualServerSDAType=snL4VirtualServerSDAType, snL4VirtualServerPortStatisticCurrentConnection=snL4VirtualServerPortStatisticCurrentConnection, snL4VirtualServerHistoryControlIndex=snL4VirtualServerHistoryControlIndex, snL4PolicyPortAccessTable=snL4PolicyPortAccessTable, snL4WebUncachedRxPkts=snL4WebUncachedRxPkts, snL4RealServerPortStatusCurrentConnection=snL4RealServerPortStatusCurrentConnection, snL4RealServerPortDeleteState=snL4RealServerPortDeleteState, snL4RealServerPortStatusTxBytes=snL4RealServerPortStatusTxBytes, snL4RealServerStatusCurConnections=snL4RealServerStatusCurConnections, snL4WebCacheTxOctets=snL4WebCacheTxOctets, snL4MaxNumWebCacheGroup=snL4MaxNumWebCacheGroup, snL4VirtualServerPortCfgEntry=snL4VirtualServerPortCfgEntry, snL4RealServerEntry=snL4RealServerEntry, snL4WebCachePortTable=snL4WebCachePortTable, snL4VirtualServerPortHistoryTable=snL4VirtualServerPortHistoryTable, snL4RealServerPortStatisticServerName=snL4RealServerPortStatisticServerName, snL4Bind=snL4Bind, snL4RealServerPortHistoryReceivePkts=snL4RealServerPortHistoryReceivePkts, snL4VirtualServerHistoryControlEntry=snL4VirtualServerHistoryControlEntry, snL4RealServerPortStatisticFailTime=snL4RealServerPortStatisticFailTime, snL4Trap=snL4Trap, snL4PolicyRowStatus=snL4PolicyRowStatus, snL4VirtualServerPortStatisticEntry=snL4VirtualServerPortStatisticEntry, snL4VirtualServerStatisticEntry=snL4VirtualServerStatisticEntry, snL4EnableGslbRemoteSiDownTrap=snL4EnableGslbRemoteSiDownTrap, snL4RealServer=snL4RealServer, snL4RealServerPortCfgDeleteState=snL4RealServerPortCfgDeleteState, snL4RealServerStatisticReassignmentLimit=snL4RealServerStatisticReassignmentLimit, snL4RealServerPortAdminStatus=snL4RealServerPortAdminStatus, snL4WebCacheTxPkts=snL4WebCacheTxPkts, snL4VirtualServerCfgVirtualIP=snL4VirtualServerCfgVirtualIP, snL4PolicyPortAccessPort=snL4PolicyPortAccessPort, snL4PolicyPortAccessRowStatus=snL4PolicyPortAccessRowStatus, snL4VirtualServerHistoryControlStatus=snL4VirtualServerHistoryControlStatus, snL4VirtualServerHistoryIntervalStart=snL4VirtualServerHistoryIntervalStart, snL4VirtualServer=snL4VirtualServer, snL4RealServerPortHistoryControlOwner=snL4RealServerPortHistoryControlOwner, snL4VirtualServerStatisticSymmetricInactives=snL4VirtualServerStatisticSymmetricInactives, snL4TrapRealServerIP=snL4TrapRealServerIP, snL4VirtualServerPortStatusTotalConnection=snL4VirtualServerPortStatusTotalConnection, snL4VirtualServerStatistic=snL4VirtualServerStatistic, snL4slbFinished=snL4slbFinished, snL4VirtualServerPortStatusCurrentConnection=snL4VirtualServerPortStatusCurrentConnection, snL4VirtualServerPortHistoryControlBucketsGranted=snL4VirtualServerPortHistoryControlBucketsGranted, snL4EnableRealServerPortUpTrap=snL4EnableRealServerPortUpTrap, snL4VirtualServerPortCfgDeleteState=snL4VirtualServerPortCfgDeleteState, snL4VirtualServerPortHistoryPeakConnections=snL4VirtualServerPortHistoryPeakConnections, snL4VirtualServerPortHistoryControlStatus=snL4VirtualServerPortHistoryControlStatus, snL4WebCachePortAdminStatus=snL4WebCachePortAdminStatus, snL4RealServerPortHistoryControlIndex=snL4RealServerPortHistoryControlIndex, snL4slbReverseTraffic=snL4slbReverseTraffic, snL4RealServerStatisticPeakConnections=snL4RealServerStatisticPeakConnections, snL4VirtualServerHistoryControlOwner=snL4VirtualServerHistoryControlOwner, snL4PolicyTable=snL4PolicyTable, snL4PolicyEntry=snL4PolicyEntry, snL4RealServerDeleteState=snL4RealServerDeleteState, snL4EnableBecomeActiveTrap=snL4EnableBecomeActiveTrap, snL4WebCachePortEntry=snL4WebCachePortEntry, snL4History=snL4History, snL4VirtualServerHistoryTransmitPkts=snL4VirtualServerHistoryTransmitPkts, snL4RealServerPortStatisticIP=snL4RealServerPortStatisticIP, snL4RealServerPort=snL4RealServerPort, snL4RealServerPortHistoryTable=snL4RealServerPortHistoryTable, snL4VirtualServerPort=snL4VirtualServerPort, snL4VirtualServerStatisticSymmetricActivates=snL4VirtualServerStatisticSymmetricActivates, snL4RealServerHistoryIntervalStart=snL4RealServerHistoryIntervalStart, snL4slbAged=snL4slbAged, snL4NoPDUCount=snL4NoPDUCount, snL4EnableGslbHealthCheckIpUpTrap=snL4EnableGslbHealthCheckIpUpTrap, snL4RealServerCfg=snL4RealServerCfg, snL4RealServerPortStatusRxPkts=snL4RealServerPortStatusRxPkts, snL4PolicyPortAccessList=snL4PolicyPortAccessList, snL4RealServerStatusState=snL4RealServerStatusState, snL4WebCacheWeight=snL4WebCacheWeight, snL4RealServerStatusFailedPortExists=snL4RealServerStatusFailedPortExists, snL4WebCachePortPort=snL4WebCachePortPort, snL4VirtualServerTable=snL4VirtualServerTable, snL4VirtualServerPortHistoryControlIndex=snL4VirtualServerPortHistoryControlIndex, snL4VirtualServerPortCfgConcurrent=snL4VirtualServerPortCfgConcurrent, snL4VirtualServerHistoryTotalConnections=snL4VirtualServerHistoryTotalConnections, snL4VirtualServerPortPort=snL4VirtualServerPortPort, snL4PolicyProtocol=snL4PolicyProtocol, snL4RealServerHistoryIndex=snL4RealServerHistoryIndex, snL4RealServerIP=snL4RealServerIP, snL4VirtualServerStatisticReceiveBytes=snL4VirtualServerStatisticReceiveBytes, snL4BindVirtualPortNumber=snL4BindVirtualPortNumber, L4ServerName=L4ServerName, snL4RealServerStatisticCurConnections=snL4RealServerStatisticCurConnections, snL4WebCacheTrafficIp=snL4WebCacheTrafficIp, snL4VirtualServerPortDeleteState=snL4VirtualServerPortDeleteState, snL4BindRowStatus=snL4BindRowStatus, snL4RealServerPortStatusServerName=snL4RealServerPortStatusServerName, snL4RealServerCfgRowStatus=snL4RealServerCfgRowStatus, snL4TcpSynLimit=snL4TcpSynLimit, snL4RealServerPortStatisticCurrentConnection=snL4RealServerPortStatisticCurrentConnection, snL4WebCacheGroupSrcMask=snL4WebCacheGroupSrcMask, snL4WebCacheIP=snL4WebCacheIP, snL4RealServerStatusTransmitPkts=snL4RealServerStatusTransmitPkts)
