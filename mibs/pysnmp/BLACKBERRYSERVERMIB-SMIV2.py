#
# PySNMP MIB module BLACKBERRYSERVERMIB-SMIV2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BLACKBERRYSERVERMIB-SMIV2
# Produced by pysmi-0.3.4 at Mon Apr 29 17:22:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibIdentifier, Gauge32, iso, ModuleIdentity, ObjectIdentity, NotificationType, Integer32, IpAddress, Bits, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Gauge32", "iso", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Integer32", "IpAddress", "Bits", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
blackBerryServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 3530, 5))
blackBerryServer.setRevisions(('2005-08-18 16:30',))
if mibBuilder.loadTexts: blackBerryServer.setLastUpdated('200508181630Z')
if mibBuilder.loadTexts: blackBerryServer.setOrganization('Research In Motion')
rim = MibIdentifier((1, 3, 6, 1, 4, 1, 3530))
version = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('current')
besTotMsgsPending = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsPending.setStatus('current')
besTotMsgsSent = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsSent.setStatus('current')
besTotMsgsRecvd = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsRecvd.setStatus('current')
besTotMsgsXpired = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsXpired.setStatus('current')
besTotMsgsFiltered = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsFiltered.setStatus('current')
besTotMsgsSentPerMin = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsSentPerMin.setStatus('current')
besTotMsgsRecvdPerMin = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besTotMsgsRecvdPerMin.setStatus('current')
besNumServerInfoAvailable = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besNumServerInfoAvailable.setStatus('current')
besConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3530, 5, 20), )
if mibBuilder.loadTexts: besConfigTable.setStatus('current')
besConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1), ).setIndexNames((0, "BLACKBERRYSERVERMIB-SMIV2", "besConfigServerInstance"))
if mibBuilder.loadTexts: besConfigEntry.setStatus('current')
besConfigServerInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigServerInstance.setStatus('current')
besConfigServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigServerName.setStatus('current')
besConfigVersionString = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigVersionString.setStatus('current')
besConfigReleaseMaj = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigReleaseMaj.setStatus('current')
besConfigReleaseMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigReleaseMin.setStatus('current')
besConfigReleaseServicePack = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigReleaseServicePack.setStatus('current')
besConfigReleaseBuild = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigReleaseBuild.setStatus('current')
besConfigLicenceTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigLicenceTotal.setStatus('obsolete')
besConfigLicenceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigLicenceUsed.setStatus('current')
besConfigLicenceRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigLicenceRemaining.setStatus('obsolete')
besConfigServerUID = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigServerUID.setStatus('current')
besConfigSystemAttendant = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigSystemAttendant.setStatus('current')
besConfigSRPHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigSRPHost.setStatus('current')
besConfigSRPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigSRPPort.setStatus('current')
besConfigAutoBCCEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigAutoBCCEnabled.setStatus('current')
besConfigAutoBCCAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 61), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigAutoBCCAddress.setStatus('current')
besConfigForceSaveInSentEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigForceSaveInSentEnabled.setStatus('current')
besConfigWirelessEmailRecoEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigWirelessEmailRecoEnabled.setStatus('current')
besConfigLastModified = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 20, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besConfigLastModified.setStatus('current')
besSysHealthTable = MibTable((1, 3, 6, 1, 4, 1, 3530, 5, 25), )
if mibBuilder.loadTexts: besSysHealthTable.setStatus('current')
besSysHealthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1), ).setIndexNames((0, "BLACKBERRYSERVERMIB-SMIV2", "besSysHealthServerInstance"))
if mibBuilder.loadTexts: besSysHealthEntry.setStatus('current')
besSysHealthServerInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthServerInstance.setStatus('current')
besSysHealthSrpConnectedState = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpConnectedState.setStatus('current')
besSysHealthSrpLastConnectDate = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpLastConnectDate.setStatus('current')
besSysHealthSrpReconnectSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpReconnectSuccess.setStatus('current')
besSysHealthSrpReconnectsFail = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpReconnectsFail.setStatus('current')
besSysHealthSrpTotalSecNotConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpTotalSecNotConnected.setStatus('current')
besSysHealthSrpLastErrorText = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpLastErrorText.setStatus('current')
besSysHealthSrpLastErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpLastErrorTime.setStatus('current')
besSysHealthMsgTotalProc = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgTotalProc.setStatus('current')
besSysHealthMsgToHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgToHandheld.setStatus('current')
besSysHealthMsgFromHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgFromHandheld.setStatus('current')
besSysHealthMsgFilteredByUser = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgFilteredByUser.setStatus('current')
besSysHealthMsgFilteredByGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgFilteredByGlobal.setStatus('current')
besSysHealthMsgPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgPending.setStatus('current')
besSysHealthMsgExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgExpired.setStatus('current')
besSysHealthMsgErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgErrors.setStatus('current')
besSysHealthMsgMoreRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMsgMoreRequests.setStatus('current')
besSysHealthCalUsersOTACEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthCalUsersOTACEnabled.setStatus('current')
besSysHealthCalEventToHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthCalEventToHandheld.setStatus('current')
besSysHealthCalEventFromHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthCalEventFromHandheld.setStatus('current')
besSysHealthWERUsersEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthWERUsersEnabled.setStatus('current')
besSysHealthWERRequestsToHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthWERRequestsToHandheld.setStatus('current')
besSysHealthWERRequestsFromHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthWERRequestsFromHandheld.setStatus('current')
besSysHealthMdsDeviceConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsDeviceConnections.setStatus('current')
besSysHealthMdsPushConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsPushConnections.setStatus('current')
besSysHealthMdsTotalBytesFromDevices = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsTotalBytesFromDevices.setStatus('current')
besSysHealthMdsMaxPacketSizeFromDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsMaxPacketSizeFromDevice.setStatus('current')
besSysHealthMdsAvgPacketSizeFromDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsAvgPacketSizeFromDevice.setStatus('current')
besSysHealthMdsTotalBytesToDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsTotalBytesToDevice.setStatus('current')
besSysHealthMdsMaxPacketSizeToDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsMaxPacketSizeToDevice.setStatus('current')
besSysHealthMdsAvgPacketSizeToDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsAvgPacketSizeToDevice.setStatus('current')
besSysHealthMdsRefusedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsRefusedPackets.setStatus('current')
besSysHealthMdsInvalidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsInvalidPackets.setStatus('current')
besSysHealthMdsConnectionSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsConnectionSuccess.setStatus('current')
besSysHealthMdsConnectionFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsConnectionFailure.setStatus('current')
besSysHealthMdsConnectionTruncated = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthMdsConnectionTruncated.setStatus('current')
besSysHealthV1MsgsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 202), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1MsgsPending.setStatus('current')
besSysHealthV1TotalMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 203), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1TotalMsgsSent.setStatus('current')
besSysHealthV1TotalMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 204), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1TotalMsgsReceived.setStatus('current')
besSysHealthV1TotalMsgsExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 205), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1TotalMsgsExpired.setStatus('current')
besSysHealthV1TotalMsgsFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 206), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1TotalMsgsFiltered.setStatus('current')
besSysHealthV1MsgsSentPerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 207), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1MsgsSentPerMin.setStatus('current')
besSysHealthV1MsgsRecvdPerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 208), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1MsgsRecvdPerMin.setStatus('current')
besSysHealthV1SRPConnectState = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 209), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthV1SRPConnectState.setStatus('current')
besSysHealthSrpLastErrorTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthSrpLastErrorTimeSec.setStatus('current')
besSysHealthFailedUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 25, 1, 302), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besSysHealthFailedUsers.setStatus('current')
besMailServerHealthTable = MibTable((1, 3, 6, 1, 4, 1, 3530, 5, 26), )
if mibBuilder.loadTexts: besMailServerHealthTable.setStatus('current')
besMailServerHealthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1), ).setIndexNames((0, "BLACKBERRYSERVERMIB-SMIV2", "besMailServerHealthServerInstance"), (0, "BLACKBERRYSERVERMIB-SMIV2", "besMailServerHealthServerId"))
if mibBuilder.loadTexts: besMailServerHealthEntry.setStatus('current')
besMailServerHealthServerInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besMailServerHealthServerInstance.setStatus('current')
besMailServerHealthServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besMailServerHealthServerId.setStatus('current')
besMailServerHealthServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besMailServerHealthServerName.setStatus('current')
besMailServerHealthTotalUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besMailServerHealthTotalUsers.setStatus('current')
besMailServerHealthAvgResponceTime10min = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besMailServerHealthAvgResponceTime10min.setStatus('current')
besMailServerHealthFailedConn10min = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 26, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besMailServerHealthFailedConn10min.setStatus('current')
besUserHealthTable = MibTable((1, 3, 6, 1, 4, 1, 3530, 5, 30), )
if mibBuilder.loadTexts: besUserHealthTable.setStatus('current')
besUserHealthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1), ).setIndexNames((0, "BLACKBERRYSERVERMIB-SMIV2", "besUserHealthServerInstance"), (0, "BLACKBERRYSERVERMIB-SMIV2", "besUserHealthUserId"))
if mibBuilder.loadTexts: besUserHealthEntry.setStatus('current')
besUserHealthServerInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthServerInstance.setStatus('current')
besUserHealthUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthUserId.setStatus('current')
besUserHealthUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthUserName.setStatus('current')
besUserHealthLastErrorText = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastErrorText.setStatus('current')
besUserHealthLastErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastErrorTime.setStatus('current')
besUserHealthDeviceNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthDeviceNetwork.setStatus('current')
besUserHealthDevicePIN = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthDevicePIN.setStatus('current')
besUserHealthDeviceInCradle = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthDeviceInCradle.setStatus('current')
besUserHealthNumRedirectedFolders = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthNumRedirectedFolders.setStatus('current')
besUserHealthSaveInSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthSaveInSent.setStatus('current')
besUserHealthRedirectEnabledOnDesktop = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthRedirectEnabledOnDesktop.setStatus('current')
besUserHealthDisableWhileInCradle = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthDisableWhileInCradle.setStatus('current')
besUserHealthFullyConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthFullyConfigured.setStatus('current')
besUserHealthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthEnabled.setStatus('current')
besUserHealthMsgTotalProc = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgTotalProc.setStatus('current')
besUserHealthMsgToHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgToHandheld.setStatus('current')
besUserHealthMsgFromHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgFromHandheld.setStatus('current')
besUserHealthMsgFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgFiltered.setStatus('current')
besUserHealthMsgPending = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgPending.setStatus('current')
besUserHealthMsgExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgExpired.setStatus('current')
besUserHealthMsgErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgErrors.setStatus('current')
besUserHealthMsgMoreRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgMoreRequests.setStatus('current')
besUserHealthMsgForwardedFromDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgForwardedFromDevice.setStatus('current')
besUserHealthMsgRepliedToWithText = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMsgRepliedToWithText.setStatus('current')
besUserHealthLastTimeInCradle = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 60), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastTimeInCradle.setStatus('current')
besUserHealthLastInteractionWithDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 61), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastInteractionWithDevice.setStatus('current')
besUserHealthLastMessageForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 62), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastMessageForwarded.setStatus('current')
besUserHealthLastKeyDateGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 63), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastKeyDateGenerated.setStatus('current')
besUserHealthAvgKBForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthAvgKBForwarded.setStatus('current')
besUserHealthAvgKBReplyWithText = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthAvgKBReplyWithText.setStatus('current')
besUserHealthAvgLatencyInSecLast10Msg = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthAvgLatencyInSecLast10Msg.setStatus('current')
besUserHealthCalOTAEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthCalOTAEnabled.setStatus('current')
besUserHealthCalEventToHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthCalEventToHandheld.setStatus('current')
besUserHealthCalEventFromHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthCalEventFromHandheld.setStatus('current')
besUserHealthWirelessEmailRecoEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthWirelessEmailRecoEnabled.setStatus('current')
besUserHealthWERRequestsToHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthWERRequestsToHandheld.setStatus('current')
besUserHealthWERRequestsFromHandheld = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthWERRequestsFromHandheld.setStatus('current')
besUserHealthLastErrorTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastErrorTimeSec.setStatus('current')
besUserHealthSMTP = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 302), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthSMTP.setStatus('current')
besUserHealthLastTimeInCradleSec = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 303), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthLastTimeInCradleSec.setStatus('current')
besUserHealthMailServer = MibTableColumn((1, 3, 6, 1, 4, 1, 3530, 5, 30, 1, 304), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: besUserHealthMailServer.setStatus('current')
besTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 9))
besSRPConnectEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 1))
if mibBuilder.loadTexts: besSRPConnectEvent.setStatus('current')
besHungThreadEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 3))
if mibBuilder.loadTexts: besHungThreadEvent.setStatus('current')
besMailServerDownEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 5))
if mibBuilder.loadTexts: besMailServerDownEvent.setStatus('current')
besMDStoBESConnectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 7))
if mibBuilder.loadTexts: besMDStoBESConnectionEvent.setStatus('current')
besMDSStartStopEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 11))
if mibBuilder.loadTexts: besMDSStartStopEvent.setStatus('current')
besMDStoDBConnectionEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 13))
if mibBuilder.loadTexts: besMDStoDBConnectionEvent.setStatus('current')
besCriticalEvent = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 9, 21))
if mibBuilder.loadTexts: besCriticalEvent.setStatus('current')
blackBerryServerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 10))
besSRPConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3001))
if mibBuilder.loadTexts: besSRPConnectionEstablished.setStatus('obsolete')
besSRPConnectionDropped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3002))
if mibBuilder.loadTexts: besSRPConnectionDropped.setStatus('obsolete')
besMailServerUp = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3005))
if mibBuilder.loadTexts: besMailServerUp.setStatus('current')
besMailServerDown = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3006))
if mibBuilder.loadTexts: besMailServerDown.setStatus('current')
besMDStoBESConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3007))
if mibBuilder.loadTexts: besMDStoBESConnectionEstablished.setStatus('current')
besMDStoBESConnectionDropped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3008))
if mibBuilder.loadTexts: besMDStoBESConnectionDropped.setStatus('current')
mdsStarted = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3011))
if mibBuilder.loadTexts: mdsStarted.setStatus('current')
mdsStopped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3012))
if mibBuilder.loadTexts: mdsStopped.setStatus('current')
mdsDBConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3013))
if mibBuilder.loadTexts: mdsDBConnectionEstablished.setStatus('current')
mdsDBConnectionDropped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3014))
if mibBuilder.loadTexts: mdsDBConnectionDropped.setStatus('current')
besMailAgentStarted = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3015))
if mibBuilder.loadTexts: besMailAgentStarted.setStatus('current')
besMailAgentStopped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3016))
if mibBuilder.loadTexts: besMailAgentStopped.setStatus('current')
besFailedUsers = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 10, 3017))
if mibBuilder.loadTexts: besFailedUsers.setStatus('current')
blackBerryDispatcher = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 50))
dispConfigVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1))
dispHealthVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2))
dispTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10))
dispConfigServerName = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigServerName.setStatus('current')
dispConfigServerId = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigServerId.setStatus('current')
dispConfigVersionString = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigVersionString.setStatus('current')
dispConfigReleaseMaj = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigReleaseMaj.setStatus('current')
dispConfigReleaseMin = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigReleaseMin.setStatus('current')
dispConfigReleaseServicePack = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigReleaseServicePack.setStatus('current')
dispConfigReleaseBuild = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigReleaseBuild.setStatus('current')
dispConfigSRPId = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigSRPId.setStatus('current')
dispConfigSRPHost = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigSRPHost.setStatus('current')
dispConfigSRPPort = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigSRPPort.setStatus('current')
dispConfigBIPPPort = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigBIPPPort.setStatus('current')
dispConfigHRT = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigHRT.setStatus('current')
dispConfigDBConnectingString = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigDBConnectingString.setStatus('current')
dispConfigMaxNumberOfAgents = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigMaxNumberOfAgents.setStatus('current')
dispConfigActualNumberOfAgents = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigActualNumberOfAgents.setStatus('current')
dispConfigExternalServicesAllowed = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigExternalServicesAllowed.setStatus('current')
dispConfigExternalServicesPort = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigExternalServicesPort.setStatus('current')
dispConfigEnabledEncryptionAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigEnabledEncryptionAlgorithm.setStatus('current')
dispConfigLicenceTotal = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigLicenceTotal.setStatus('current')
dispConfigLicenceRemaining = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigLicenceRemaining.setStatus('current')
dispConfigLicenceUsed = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigLicenceUsed.setStatus('current')
dispConfigLastModified = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispConfigLastModified.setStatus('current')
dispSysHealthSRPConnectedState = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPConnectedState.setStatus('current')
dispSysHealthSRPLastConnectDate = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPLastConnectDate.setStatus('current')
dispSysHealthSRPReconnectSuccess = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPReconnectSuccess.setStatus('current')
dispSysHealthSRPReconnectsFail = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPReconnectsFail.setStatus('current')
dispSysHealthSRPTotalSecNotConnected = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPTotalSecNotConnected.setStatus('current')
dispSysHealthSRPLastErrorText = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPLastErrorText.setStatus('current')
dispSysHealthSRPLastErrorTime = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 50, 2, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dispSysHealthSRPLastErrorTime.setStatus('current')
dispSRPConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10, 3101))
if mibBuilder.loadTexts: dispSRPConnectionEstablished.setStatus('current')
dispSRPConnectionDropped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10, 3102))
if mibBuilder.loadTexts: dispSRPConnectionDropped.setStatus('current')
dispStarted = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10, 3103))
if mibBuilder.loadTexts: dispStarted.setStatus('current')
dispStopped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10, 3104))
if mibBuilder.loadTexts: dispStopped.setStatus('current')
dispDBConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10, 3105))
if mibBuilder.loadTexts: dispDBConnectionEstablished.setStatus('current')
dispDBConnectionDropped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 50, 10, 3106))
if mibBuilder.loadTexts: dispDBConnectionDropped.setStatus('current')
blackBerryRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 55))
routConfigVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1))
routHealthVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 55, 2))
routTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3530, 5, 55, 10))
routConfigServerName = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigServerName.setStatus('current')
routConfigVersionString = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigVersionString.setStatus('current')
routConfigReleaseMaj = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigReleaseMaj.setStatus('current')
routConfigReleaseMin = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigReleaseMin.setStatus('current')
routConfigReleaseServicePack = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigReleaseServicePack.setStatus('current')
routConfigReleaseBuild = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigReleaseBuild.setStatus('current')
routConfigSRPHost = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigSRPHost.setStatus('current')
routConfigSRPPort = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigSRPPort.setStatus('current')
routConfigServicePort = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigServicePort.setStatus('current')
routConfigDevicePort = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigDevicePort.setStatus('current')
routConfigMaxServiceConnections = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigMaxServiceConnections.setStatus('current')
routConfigMaxDeviceConnections = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigMaxDeviceConnections.setStatus('current')
routConfigAllowRemoteServices = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigAllowRemoteServices.setStatus('current')
routConfigLastModified = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 1, 301), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routConfigLastModified.setStatus('current')
routSysHealthServicesConnected = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routSysHealthServicesConnected.setStatus('current')
routSysHealthDevicesConnected = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routSysHealthDevicesConnected.setStatus('current')
routSysHealthLastConfigCheck = MibScalar((1, 3, 6, 1, 4, 1, 3530, 5, 55, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: routSysHealthLastConfigCheck.setStatus('current')
routSRPConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 55, 10, 3201))
if mibBuilder.loadTexts: routSRPConnectionEstablished.setStatus('current')
routSRPConnectionDropped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 55, 10, 3202))
if mibBuilder.loadTexts: routSRPConnectionDropped.setStatus('current')
routStarted = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 55, 10, 3203))
if mibBuilder.loadTexts: routStarted.setStatus('current')
routStopped = NotificationType((1, 3, 6, 1, 4, 1, 3530, 5, 55, 10, 3204))
if mibBuilder.loadTexts: routStopped.setStatus('current')
mibBuilder.exportSymbols("BLACKBERRYSERVERMIB-SMIV2", dispDBConnectionDropped=dispDBConnectionDropped, besTotMsgsPending=besTotMsgsPending, besMailServerDownEvent=besMailServerDownEvent, routConfigSRPHost=routConfigSRPHost, besSysHealthWERRequestsToHandheld=besSysHealthWERRequestsToHandheld, besUserHealthWERRequestsToHandheld=besUserHealthWERRequestsToHandheld, besUserHealthSaveInSent=besUserHealthSaveInSent, blackBerryDispatcher=blackBerryDispatcher, besSysHealthSrpLastConnectDate=besSysHealthSrpLastConnectDate, besSysHealthMdsDeviceConnections=besSysHealthMdsDeviceConnections, dispConfigLicenceRemaining=dispConfigLicenceRemaining, besMailServerHealthTotalUsers=besMailServerHealthTotalUsers, besSysHealthMdsInvalidPackets=besSysHealthMdsInvalidPackets, besNumServerInfoAvailable=besNumServerInfoAvailable, besSysHealthMsgMoreRequests=besSysHealthMsgMoreRequests, besSysHealthMsgTotalProc=besSysHealthMsgTotalProc, besUserHealthLastTimeInCradleSec=besUserHealthLastTimeInCradleSec, besSysHealthMdsConnectionTruncated=besSysHealthMdsConnectionTruncated, besUserHealthLastInteractionWithDevice=besUserHealthLastInteractionWithDevice, dispSysHealthSRPLastConnectDate=dispSysHealthSRPLastConnectDate, routTrapVariables=routTrapVariables, besTotMsgsXpired=besTotMsgsXpired, besSysHealthSrpReconnectsFail=besSysHealthSrpReconnectsFail, besUserHealthLastErrorTimeSec=besUserHealthLastErrorTimeSec, dispStarted=dispStarted, besSysHealthV1MsgsSentPerMin=besSysHealthV1MsgsSentPerMin, besMailServerHealthServerInstance=besMailServerHealthServerInstance, besSysHealthWERUsersEnabled=besSysHealthWERUsersEnabled, mdsDBConnectionEstablished=mdsDBConnectionEstablished, dispStopped=dispStopped, rim=rim, dispSysHealthSRPReconnectsFail=dispSysHealthSRPReconnectsFail, besSysHealthSrpLastErrorText=besSysHealthSrpLastErrorText, besUserHealthWERRequestsFromHandheld=besUserHealthWERRequestsFromHandheld, dispConfigReleaseMaj=dispConfigReleaseMaj, besTotMsgsRecvdPerMin=besTotMsgsRecvdPerMin, dispConfigSRPId=dispConfigSRPId, besSRPConnectionDropped=besSRPConnectionDropped, besUserHealthEnabled=besUserHealthEnabled, dispConfigHRT=dispConfigHRT, besConfigServerInstance=besConfigServerInstance, routSRPConnectionEstablished=routSRPConnectionEstablished, routConfigServicePort=routConfigServicePort, besTotMsgsSentPerMin=besTotMsgsSentPerMin, besSysHealthSrpReconnectSuccess=besSysHealthSrpReconnectSuccess, besMailAgentStopped=besMailAgentStopped, besUserHealthCalEventFromHandheld=besUserHealthCalEventFromHandheld, routStopped=routStopped, besTotMsgsRecvd=besTotMsgsRecvd, blackBerryServerTraps=blackBerryServerTraps, besUserHealthEntry=besUserHealthEntry, dispConfigExternalServicesPort=dispConfigExternalServicesPort, besSysHealthMdsConnectionFailure=besSysHealthMdsConnectionFailure, besSysHealthMdsMaxPacketSizeFromDevice=besSysHealthMdsMaxPacketSizeFromDevice, besSysHealthCalEventFromHandheld=besSysHealthCalEventFromHandheld, besMailServerHealthServerId=besMailServerHealthServerId, dispConfigReleaseServicePack=dispConfigReleaseServicePack, besUserHealthLastMessageForwarded=besUserHealthLastMessageForwarded, besSysHealthMdsConnectionSuccess=besSysHealthMdsConnectionSuccess, dispSysHealthSRPReconnectSuccess=dispSysHealthSRPReconnectSuccess, besConfigSRPPort=besConfigSRPPort, besMDSStartStopEvent=besMDSStartStopEvent, routConfigMaxDeviceConnections=routConfigMaxDeviceConnections, besSysHealthV1TotalMsgsExpired=besSysHealthV1TotalMsgsExpired, blackBerryServer=blackBerryServer, besSysHealthMdsTotalBytesToDevice=besSysHealthMdsTotalBytesToDevice, blackBerryRouter=blackBerryRouter, besSysHealthMsgFilteredByUser=besSysHealthMsgFilteredByUser, routStarted=routStarted, besSysHealthServerInstance=besSysHealthServerInstance, besUserHealthLastErrorTime=besUserHealthLastErrorTime, dispSRPConnectionDropped=dispSRPConnectionDropped, besSysHealthMsgErrors=besSysHealthMsgErrors, besSysHealthFailedUsers=besSysHealthFailedUsers, besUserHealthCalOTAEnabled=besUserHealthCalOTAEnabled, besConfigWirelessEmailRecoEnabled=besConfigWirelessEmailRecoEnabled, besUserHealthMsgMoreRequests=besUserHealthMsgMoreRequests, besUserHealthWirelessEmailRecoEnabled=besUserHealthWirelessEmailRecoEnabled, besTotMsgsFiltered=besTotMsgsFiltered, besSysHealthV1SRPConnectState=besSysHealthV1SRPConnectState, dispConfigReleaseBuild=dispConfigReleaseBuild, dispSysHealthSRPTotalSecNotConnected=dispSysHealthSRPTotalSecNotConnected, mdsDBConnectionDropped=mdsDBConnectionDropped, besConfigSystemAttendant=besConfigSystemAttendant, besSysHealthMsgFromHandheld=besSysHealthMsgFromHandheld, besSysHealthMdsAvgPacketSizeToDevice=besSysHealthMdsAvgPacketSizeToDevice, routConfigVersionString=routConfigVersionString, besUserHealthLastErrorText=besUserHealthLastErrorText, besSysHealthMdsRefusedPackets=besSysHealthMdsRefusedPackets, dispSysHealthSRPLastErrorTime=dispSysHealthSRPLastErrorTime, besUserHealthMsgPending=besUserHealthMsgPending, dispConfigSRPPort=dispConfigSRPPort, dispConfigVersionString=dispConfigVersionString, routSysHealthServicesConnected=routSysHealthServicesConnected, besSysHealthTable=besSysHealthTable, besMailServerHealthTable=besMailServerHealthTable, besSysHealthV1MsgsRecvdPerMin=besSysHealthV1MsgsRecvdPerMin, besUserHealthCalEventToHandheld=besUserHealthCalEventToHandheld, besUserHealthMailServer=besUserHealthMailServer, routConfigReleaseBuild=routConfigReleaseBuild, besUserHealthAvgLatencyInSecLast10Msg=besUserHealthAvgLatencyInSecLast10Msg, besMDStoDBConnectionEvent=besMDStoDBConnectionEvent, besConfigLicenceTotal=besConfigLicenceTotal, besMailServerHealthAvgResponceTime10min=besMailServerHealthAvgResponceTime10min, besMailServerUp=besMailServerUp, mdsStarted=mdsStarted, routSysHealthDevicesConnected=routSysHealthDevicesConnected, besUserHealthLastKeyDateGenerated=besUserHealthLastKeyDateGenerated, besConfigSRPHost=besConfigSRPHost, besConfigVersionString=besConfigVersionString, besConfigAutoBCCAddress=besConfigAutoBCCAddress, besUserHealthServerInstance=besUserHealthServerInstance, besMDStoBESConnectionDropped=besMDStoBESConnectionDropped, besUserHealthMsgRepliedToWithText=besUserHealthMsgRepliedToWithText, besSysHealthSrpLastErrorTime=besSysHealthSrpLastErrorTime, besMailServerHealthEntry=besMailServerHealthEntry, besUserHealthLastTimeInCradle=besUserHealthLastTimeInCradle, besUserHealthUserId=besUserHealthUserId, besUserHealthAvgKBReplyWithText=besUserHealthAvgKBReplyWithText, routConfigServerName=routConfigServerName, besUserHealthDisableWhileInCradle=besUserHealthDisableWhileInCradle, dispConfigEnabledEncryptionAlgorithm=dispConfigEnabledEncryptionAlgorithm, routConfigMaxServiceConnections=routConfigMaxServiceConnections, besSysHealthMsgExpired=besSysHealthMsgExpired, dispTrapVariables=dispTrapVariables, routConfigReleaseMaj=routConfigReleaseMaj, besSysHealthMdsMaxPacketSizeToDevice=besSysHealthMdsMaxPacketSizeToDevice, besUserHealthFullyConfigured=besUserHealthFullyConfigured, besSRPConnectEvent=besSRPConnectEvent, besUserHealthMsgFromHandheld=besUserHealthMsgFromHandheld, dispSRPConnectionEstablished=dispSRPConnectionEstablished, dispConfigLicenceTotal=dispConfigLicenceTotal, routConfigReleaseMin=routConfigReleaseMin, besSysHealthSrpLastErrorTimeSec=besSysHealthSrpLastErrorTimeSec, besMailServerDown=besMailServerDown, besSysHealthSrpConnectedState=besSysHealthSrpConnectedState, besConfigReleaseBuild=besConfigReleaseBuild, besSysHealthMdsAvgPacketSizeFromDevice=besSysHealthMdsAvgPacketSizeFromDevice, routConfigVariables=routConfigVariables, besConfigLastModified=besConfigLastModified, routConfigSRPPort=routConfigSRPPort, besUserHealthMsgTotalProc=besUserHealthMsgTotalProc, besSysHealthMsgToHandheld=besSysHealthMsgToHandheld, dispConfigBIPPPort=dispConfigBIPPPort, besConfigReleaseServicePack=besConfigReleaseServicePack, dispConfigMaxNumberOfAgents=dispConfigMaxNumberOfAgents, besUserHealthAvgKBForwarded=besUserHealthAvgKBForwarded, besMDStoBESConnectionEvent=besMDStoBESConnectionEvent, besConfigAutoBCCEnabled=besConfigAutoBCCEnabled, routConfigDevicePort=routConfigDevicePort, version=version, besTotMsgsSent=besTotMsgsSent, besConfigForceSaveInSentEnabled=besConfigForceSaveInSentEnabled, besSysHealthEntry=besSysHealthEntry, besHungThreadEvent=besHungThreadEvent, mdsStopped=mdsStopped, routSRPConnectionDropped=routSRPConnectionDropped, besUserHealthMsgToHandheld=besUserHealthMsgToHandheld, besSysHealthMsgPending=besSysHealthMsgPending, dispConfigServerId=dispConfigServerId, PYSNMP_MODULE_ID=blackBerryServer, besConfigServerName=besConfigServerName, besSysHealthWERRequestsFromHandheld=besSysHealthWERRequestsFromHandheld, besConfigServerUID=besConfigServerUID, besTrapVariables=besTrapVariables, dispHealthVariables=dispHealthVariables, besConfigEntry=besConfigEntry, dispConfigVariables=dispConfigVariables, besSysHealthV1TotalMsgsSent=besSysHealthV1TotalMsgsSent, dispConfigLastModified=dispConfigLastModified, besFailedUsers=besFailedUsers, dispConfigReleaseMin=dispConfigReleaseMin, besMDStoBESConnectionEstablished=besMDStoBESConnectionEstablished, besUserHealthTable=besUserHealthTable, besUserHealthRedirectEnabledOnDesktop=besUserHealthRedirectEnabledOnDesktop, routSysHealthLastConfigCheck=routSysHealthLastConfigCheck, besSRPConnectionEstablished=besSRPConnectionEstablished, besSysHealthV1TotalMsgsFiltered=besSysHealthV1TotalMsgsFiltered, besUserHealthDeviceInCradle=besUserHealthDeviceInCradle, besSysHealthMdsTotalBytesFromDevices=besSysHealthMdsTotalBytesFromDevices, besUserHealthUserName=besUserHealthUserName, dispConfigDBConnectingString=dispConfigDBConnectingString, routConfigReleaseServicePack=routConfigReleaseServicePack, besSysHealthV1MsgsPending=besSysHealthV1MsgsPending, dispConfigExternalServicesAllowed=dispConfigExternalServicesAllowed, besUserHealthDeviceNetwork=besUserHealthDeviceNetwork, besUserHealthMsgForwardedFromDevice=besUserHealthMsgForwardedFromDevice, dispSysHealthSRPConnectedState=dispSysHealthSRPConnectedState, routHealthVariables=routHealthVariables, besSysHealthCalEventToHandheld=besSysHealthCalEventToHandheld, besCriticalEvent=besCriticalEvent, besMailServerHealthFailedConn10min=besMailServerHealthFailedConn10min, dispConfigLicenceUsed=dispConfigLicenceUsed, besUserHealthMsgExpired=besUserHealthMsgExpired, routConfigLastModified=routConfigLastModified, besUserHealthDevicePIN=besUserHealthDevicePIN, besSysHealthMdsPushConnections=besSysHealthMdsPushConnections, besMailAgentStarted=besMailAgentStarted, dispConfigActualNumberOfAgents=dispConfigActualNumberOfAgents, dispConfigSRPHost=dispConfigSRPHost, dispConfigServerName=dispConfigServerName, besSysHealthMsgFilteredByGlobal=besSysHealthMsgFilteredByGlobal, dispDBConnectionEstablished=dispDBConnectionEstablished, besUserHealthMsgFiltered=besUserHealthMsgFiltered, besSysHealthSrpTotalSecNotConnected=besSysHealthSrpTotalSecNotConnected, besConfigLicenceUsed=besConfigLicenceUsed, besUserHealthNumRedirectedFolders=besUserHealthNumRedirectedFolders, besConfigReleaseMin=besConfigReleaseMin, besConfigLicenceRemaining=besConfigLicenceRemaining, besSysHealthV1TotalMsgsReceived=besSysHealthV1TotalMsgsReceived, besConfigReleaseMaj=besConfigReleaseMaj, besMailServerHealthServerName=besMailServerHealthServerName, besUserHealthSMTP=besUserHealthSMTP, routConfigAllowRemoteServices=routConfigAllowRemoteServices, besSysHealthCalUsersOTACEnabled=besSysHealthCalUsersOTACEnabled, dispSysHealthSRPLastErrorText=dispSysHealthSRPLastErrorText, besUserHealthMsgErrors=besUserHealthMsgErrors, besConfigTable=besConfigTable)
