#
# PySNMP MIB module Wellfleet-SMDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-SMDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, MibIdentifier, TimeTicks, Unsigned32, ModuleIdentity, Integer32, iso, Counter64, Bits, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "MibIdentifier", "TimeTicks", "Unsigned32", "ModuleIdentity", "Integer32", "iso", "Counter64", "Bits", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfWanGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfWanGroup")
wfSmdsCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3), )
if mibBuilder.loadTexts: wfSmdsCircuitTable.setStatus('mandatory')
wfSmdsCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1), ).setIndexNames((0, "Wellfleet-SMDS-MIB", "wfSmdsCircuitID"))
if mibBuilder.loadTexts: wfSmdsCircuitEntry.setStatus('mandatory')
wfSmdsCircuitDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDelete.setStatus('mandatory')
wfSmdsCircuitDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisable.setStatus('mandatory')
wfSmdsCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitState.setStatus('mandatory')
wfSmdsCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitID.setStatus('mandatory')
wfSmdsCircuitIndivAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitIndivAddr.setStatus('mandatory')
wfSmdsCircuitGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitGroupAddr.setStatus('mandatory')
wfSmdsCircuitArpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitArpAddr.setStatus('mandatory')
wfSmdsCircuitDisableHrtbtPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisableHrtbtPoll.setStatus('mandatory')
wfSmdsCircuitHrtbtPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitHrtbtPollInterval.setStatus('mandatory')
wfSmdsCircuitHrtbtPollDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitHrtbtPollDownCount.setStatus('mandatory')
wfSmdsCircuitDisableNetMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisableNetMgmt.setStatus('mandatory')
wfSmdsCircuitSipL3ReceivedIndividualDAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3ReceivedIndividualDAs.setStatus('mandatory')
wfSmdsCircuitSipL3ReceivedGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3ReceivedGAs.setStatus('mandatory')
wfSmdsCircuitSipL3SentIndividualDAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3SentIndividualDAs.setStatus('mandatory')
wfSmdsCircuitSipL3SentGAs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3SentGAs.setStatus('mandatory')
wfSmdsCircuitSipL3VersionSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("version", 1))).clone('version')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitSipL3VersionSupport.setStatus('mandatory')
wfSmdsCircuitDisableAddrVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSmdsCircuitDisableAddrVerify.setStatus('mandatory')
wfSmdsCircuitAddrVerifyDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSmdsCircuitAddrVerifyDiscards.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-SMDS-MIB", wfSmdsCircuitDisableAddrVerify=wfSmdsCircuitDisableAddrVerify, wfSmdsCircuitArpAddr=wfSmdsCircuitArpAddr, wfSmdsCircuitSipL3VersionSupport=wfSmdsCircuitSipL3VersionSupport, wfSmdsCircuitSipL3SentIndividualDAs=wfSmdsCircuitSipL3SentIndividualDAs, wfSmdsCircuitState=wfSmdsCircuitState, wfSmdsCircuitDisable=wfSmdsCircuitDisable, wfSmdsCircuitDelete=wfSmdsCircuitDelete, wfSmdsCircuitTable=wfSmdsCircuitTable, wfSmdsCircuitID=wfSmdsCircuitID, wfSmdsCircuitIndivAddr=wfSmdsCircuitIndivAddr, wfSmdsCircuitDisableNetMgmt=wfSmdsCircuitDisableNetMgmt, wfSmdsCircuitSipL3ReceivedGAs=wfSmdsCircuitSipL3ReceivedGAs, wfSmdsCircuitHrtbtPollInterval=wfSmdsCircuitHrtbtPollInterval, wfSmdsCircuitEntry=wfSmdsCircuitEntry, wfSmdsCircuitHrtbtPollDownCount=wfSmdsCircuitHrtbtPollDownCount, wfSmdsCircuitSipL3SentGAs=wfSmdsCircuitSipL3SentGAs, wfSmdsCircuitGroupAddr=wfSmdsCircuitGroupAddr, wfSmdsCircuitDisableHrtbtPoll=wfSmdsCircuitDisableHrtbtPoll, wfSmdsCircuitAddrVerifyDiscards=wfSmdsCircuitAddrVerifyDiscards, wfSmdsCircuitSipL3ReceivedIndividualDAs=wfSmdsCircuitSipL3ReceivedIndividualDAs)
