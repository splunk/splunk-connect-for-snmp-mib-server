#
# PySNMP MIB module XYLAN-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter32, ModuleIdentity, MibIdentifier, Gauge32, Integer32, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "ModuleIdentity", "MibIdentifier", "Gauge32", "Integer32", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanIpxArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanIpxArch")
xylanIpxRoutingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 1))
xylanIpxFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 2))
xylanIpxWatchdogSpoofGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 3))
xylanIpxSerialFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 4))
xylanSpxKeepaliveSpoofGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 5))
xylanIpxType20Group = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 6))
xylanIpxTimerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 7))
xylanIpxDefRouteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 8))
xylanIpxExtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 6, 9))
xylanIpxStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1), )
if mibBuilder.loadTexts: xylanIpxStaticRouteTable.setStatus('mandatory')
xylanIpxStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxStaticRouteNetNum"))
if mibBuilder.loadTexts: xylanIpxStaticRouteEntry.setStatus('mandatory')
xylanIpxStaticRouteNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxStaticRouteNetNum.setStatus('mandatory')
xylanIpxStaticRouteAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxStaticRouteAdminState.setStatus('mandatory')
xylanIpxStaticRouteNextHopNet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxStaticRouteNextHopNet.setStatus('mandatory')
xylanIpxStaticRouteNextHopNode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxStaticRouteNextHopNode.setStatus('mandatory')
xylanIpxStaticRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpxStaticRouteTicks.setStatus('mandatory')
xylanIpxStaticRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpxStaticRouteHopCount.setStatus('mandatory')
xylanIpxRipSapFilterTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1), )
if mibBuilder.loadTexts: xylanIpxRipSapFilterTable.setStatus('mandatory')
xylanIpxRipSapFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxRipSapFilterNum"))
if mibBuilder.loadTexts: xylanIpxRipSapFilterEntry.setStatus('mandatory')
xylanIpxRipSapFilterNum = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanIpxRipSapFilterNum.setStatus('mandatory')
xylanIpxRipSapFilterAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterAdminState.setStatus('mandatory')
xylanIpxRipSapFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sap-output", 1), ("sap-input", 2), ("gns-output", 3), ("rip-output", 4), ("rip-input", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterType.setStatus('mandatory')
xylanIpxRipSapFilterNet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterNet.setStatus('mandatory')
xylanIpxRipSapFilterNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterNetMask.setStatus('mandatory')
xylanIpxRipSapFilterNode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterNode.setStatus('mandatory')
xylanIpxRipSapFilterNodeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterNodeMask.setStatus('mandatory')
xylanIpxRipSapFilterSvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterSvcType.setStatus('mandatory')
xylanIpxRipSapFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("block", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterMode.setStatus('mandatory')
xylanIpxRipSapFilterGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterGroupId.setStatus('mandatory')
xylanIpxRipSapFilterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterVlanId.setStatus('mandatory')
xylanIpxRipSapFilterWanType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("not-used", 1), ("frame-relay", 2), ("ppp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterWanType.setStatus('mandatory')
xylanIpxRipSapFilterSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterSlot.setStatus('mandatory')
xylanIpxRipSapFilterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterPort.setStatus('mandatory')
xylanIpxRipSapFilterVc = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterVc.setStatus('mandatory')
xylanIpxRipSapFilterPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 2, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxRipSapFilterPeerId.setStatus('mandatory')
xylanIpxWatchdogSpoofTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 3, 1), )
if mibBuilder.loadTexts: xylanIpxWatchdogSpoofTable.setStatus('mandatory')
xylanIpxWatchdogSpoofEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 3, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxWatchdogSpoofGroupId"))
if mibBuilder.loadTexts: xylanIpxWatchdogSpoofEntry.setStatus('mandatory')
xylanIpxWatchdogSpoofGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxWatchdogSpoofGroupId.setStatus('mandatory')
xylanIpxWatchdogSpoofMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxWatchdogSpoofMode.setStatus('mandatory')
xylanIpxSerialFilterTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 4, 1), )
if mibBuilder.loadTexts: xylanIpxSerialFilterTable.setStatus('mandatory')
xylanIpxSerialFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 4, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxSerialFilterGroupId"))
if mibBuilder.loadTexts: xylanIpxSerialFilterEntry.setStatus('mandatory')
xylanIpxSerialFilterGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxSerialFilterGroupId.setStatus('mandatory')
xylanIpxSerialFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxSerialFilterMode.setStatus('mandatory')
xylanSpxKeepaliveSpoofTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 5, 1), )
if mibBuilder.loadTexts: xylanSpxKeepaliveSpoofTable.setStatus('mandatory')
xylanSpxKeepaliveSpoofEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 5, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanSpxKeepaliveSpoofGroupId"))
if mibBuilder.loadTexts: xylanSpxKeepaliveSpoofEntry.setStatus('mandatory')
xylanSpxKeepaliveSpoofGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanSpxKeepaliveSpoofGroupId.setStatus('mandatory')
xylanSpxKeepaliveSpoofMode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanSpxKeepaliveSpoofMode.setStatus('mandatory')
xylanIpxType20Table = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 6, 1), )
if mibBuilder.loadTexts: xylanIpxType20Table.setStatus('mandatory')
xylanIpxType20Entry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 6, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxType20VlanId"))
if mibBuilder.loadTexts: xylanIpxType20Entry.setStatus('mandatory')
xylanIpxType20VlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxType20VlanId.setStatus('mandatory')
xylanIpxType20Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxType20Mode.setStatus('mandatory')
xylanIpxTimerTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 7, 1), )
if mibBuilder.loadTexts: xylanIpxTimerTable.setStatus('mandatory')
xylanIpxTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 7, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxTimerVlanId"))
if mibBuilder.loadTexts: xylanIpxTimerEntry.setStatus('mandatory')
xylanIpxTimerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxTimerVlanId.setStatus('mandatory')
xylanIpxTimerSap = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxTimerSap.setStatus('mandatory')
xylanIpxTimerRip = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxTimerRip.setStatus('mandatory')
xylanIpxDefRouteTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 6, 8, 1), )
if mibBuilder.loadTexts: xylanIpxDefRouteTable.setStatus('mandatory')
xylanIpxDefRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 6, 8, 1, 1), ).setIndexNames((0, "XYLAN-IPX-MIB", "xylanIpxDefRouteNum"))
if mibBuilder.loadTexts: xylanIpxDefRouteEntry.setStatus('mandatory')
xylanIpxDefRouteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 8, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxDefRouteNum.setStatus('mandatory')
xylanIpxDefRouteNet = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 8, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxDefRouteNet.setStatus('mandatory')
xylanIpxDefRouteNode = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 6, 8, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxDefRouteNode.setStatus('mandatory')
xylanIpxExtMsg = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 6, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanIpxExtMsg.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-IPX-MIB", xylanIpxRipSapFilterPort=xylanIpxRipSapFilterPort, xylanIpxRipSapFilterAdminState=xylanIpxRipSapFilterAdminState, xylanIpxWatchdogSpoofMode=xylanIpxWatchdogSpoofMode, xylanSpxKeepaliveSpoofMode=xylanSpxKeepaliveSpoofMode, xylanIpxTimerSap=xylanIpxTimerSap, xylanIpxWatchdogSpoofGroup=xylanIpxWatchdogSpoofGroup, xylanIpxStaticRouteTable=xylanIpxStaticRouteTable, xylanIpxRipSapFilterSlot=xylanIpxRipSapFilterSlot, xylanIpxStaticRouteTicks=xylanIpxStaticRouteTicks, xylanIpxRipSapFilterNode=xylanIpxRipSapFilterNode, xylanIpxRipSapFilterVlanId=xylanIpxRipSapFilterVlanId, xylanIpxStaticRouteHopCount=xylanIpxStaticRouteHopCount, xylanIpxWatchdogSpoofTable=xylanIpxWatchdogSpoofTable, xylanIpxStaticRouteEntry=xylanIpxStaticRouteEntry, xylanIpxDefRouteEntry=xylanIpxDefRouteEntry, xylanIpxRipSapFilterPeerId=xylanIpxRipSapFilterPeerId, xylanIpxTimerGroup=xylanIpxTimerGroup, xylanSpxKeepaliveSpoofGroup=xylanSpxKeepaliveSpoofGroup, xylanIpxStaticRouteNetNum=xylanIpxStaticRouteNetNum, xylanIpxRipSapFilterNum=xylanIpxRipSapFilterNum, xylanIpxSerialFilterGroup=xylanIpxSerialFilterGroup, xylanIpxRipSapFilterWanType=xylanIpxRipSapFilterWanType, xylanIpxRipSapFilterSvcType=xylanIpxRipSapFilterSvcType, xylanSpxKeepaliveSpoofGroupId=xylanSpxKeepaliveSpoofGroupId, xylanIpxRipSapFilterEntry=xylanIpxRipSapFilterEntry, xylanIpxRipSapFilterNet=xylanIpxRipSapFilterNet, xylanIpxRipSapFilterTable=xylanIpxRipSapFilterTable, xylanIpxRipSapFilterNodeMask=xylanIpxRipSapFilterNodeMask, xylanIpxRipSapFilterNetMask=xylanIpxRipSapFilterNetMask, xylanIpxRipSapFilterVc=xylanIpxRipSapFilterVc, xylanIpxStaticRouteNextHopNet=xylanIpxStaticRouteNextHopNet, xylanIpxFilterGroup=xylanIpxFilterGroup, xylanSpxKeepaliveSpoofEntry=xylanSpxKeepaliveSpoofEntry, xylanIpxDefRouteTable=xylanIpxDefRouteTable, xylanIpxStaticRouteNextHopNode=xylanIpxStaticRouteNextHopNode, xylanIpxTimerEntry=xylanIpxTimerEntry, xylanIpxTimerRip=xylanIpxTimerRip, xylanIpxRoutingGroup=xylanIpxRoutingGroup, xylanIpxStaticRouteAdminState=xylanIpxStaticRouteAdminState, xylanIpxWatchdogSpoofEntry=xylanIpxWatchdogSpoofEntry, xylanIpxType20Table=xylanIpxType20Table, xylanIpxRipSapFilterType=xylanIpxRipSapFilterType, xylanIpxType20VlanId=xylanIpxType20VlanId, xylanIpxType20Mode=xylanIpxType20Mode, xylanIpxTimerTable=xylanIpxTimerTable, xylanIpxTimerVlanId=xylanIpxTimerVlanId, xylanIpxSerialFilterEntry=xylanIpxSerialFilterEntry, xylanIpxDefRouteNode=xylanIpxDefRouteNode, xylanIpxSerialFilterTable=xylanIpxSerialFilterTable, xylanIpxType20Entry=xylanIpxType20Entry, xylanIpxExtMsg=xylanIpxExtMsg, xylanIpxExtGroup=xylanIpxExtGroup, xylanIpxSerialFilterGroupId=xylanIpxSerialFilterGroupId, xylanIpxSerialFilterMode=xylanIpxSerialFilterMode, xylanIpxRipSapFilterGroupId=xylanIpxRipSapFilterGroupId, xylanSpxKeepaliveSpoofTable=xylanSpxKeepaliveSpoofTable, xylanIpxWatchdogSpoofGroupId=xylanIpxWatchdogSpoofGroupId, xylanIpxDefRouteNum=xylanIpxDefRouteNum, xylanIpxDefRouteNet=xylanIpxDefRouteNet, xylanIpxType20Group=xylanIpxType20Group, xylanIpxDefRouteGroup=xylanIpxDefRouteGroup, xylanIpxRipSapFilterMode=xylanIpxRipSapFilterMode)
