#
# PySNMP MIB module Wellfleet-AT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-AT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, ModuleIdentity, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Integer32, Unsigned32, IpAddress, Counter64, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Integer32", "Unsigned32", "IpAddress", "Counter64", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfAppletalkGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfAppletalkGroup")
wfAppleBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1))
wfAppleBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDelete.setStatus('mandatory')
wfAppleBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDisable.setStatus('mandatory')
wfAppleBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseState.setStatus('mandatory')
wfAppleBaseDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDebugLevel.setStatus('mandatory')
wfAppleBaseDdpQueLen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2147483647)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseDdpQueLen.setStatus('mandatory')
wfAppleBaseHomedPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseHomedPort.setStatus('mandatory')
wfAppleBaseTotalNets = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseTotalNets.setStatus('mandatory')
wfAppleBaseTotalZones = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseTotalZones.setStatus('mandatory')
wfAppleBaseTotalZoneNames = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseTotalZoneNames.setStatus('mandatory')
wfAppleBaseTotalAarpEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleBaseTotalAarpEntries.setStatus('mandatory')
wfAppleBaseEstimatedNets = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseEstimatedNets.setStatus('mandatory')
wfAppleBaseEstimatedHosts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleBaseEstimatedHosts.setStatus('mandatory')
wfAppleMacIPBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('deleted')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleMacIPBaseDelete.setStatus('mandatory')
wfAppleMacIPBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleMacIPBaseDisable.setStatus('mandatory')
wfAppleMacIPBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleMacIPBaseState.setStatus('mandatory')
wfAppleMacIPZone = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleMacIPZone.setStatus('mandatory')
wfMacIPAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 17), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPAddress1.setStatus('mandatory')
wfMacIPLowerIpAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPLowerIpAddress1.setStatus('mandatory')
wfMacIPUpperIpAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPUpperIpAddress1.setStatus('mandatory')
wfMacIPAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPAddress2.setStatus('mandatory')
wfMacIPLowerIpAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPLowerIpAddress2.setStatus('mandatory')
wfMacIPUpperIpAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPUpperIpAddress2.setStatus('mandatory')
wfMacIPAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPAddress3.setStatus('mandatory')
wfMacIPLowerIpAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPLowerIpAddress3.setStatus('mandatory')
wfMacIPUpperIpAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMacIPUpperIpAddress3.setStatus('mandatory')
wfAppleMacIPAddressTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleMacIPAddressTimeOut.setStatus('mandatory')
wfAppleMacIPServerRequests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleMacIPServerRequests.setStatus('mandatory')
wfAppleMacIPServerResponces = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleMacIPServerResponces.setStatus('mandatory')
wfAppleRtmpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2), )
if mibBuilder.loadTexts: wfAppleRtmpTable.setStatus('mandatory')
wfAppleRtmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfAppleRtmpNetStart"), (0, "Wellfleet-AT-MIB", "wfAppleRtmpNetEnd"))
if mibBuilder.loadTexts: wfAppleRtmpEntry.setStatus('mandatory')
wfAppleRtmpNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNetStart.setStatus('mandatory')
wfAppleRtmpNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNetEnd.setStatus('mandatory')
wfAppleRtmpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpPort.setStatus('mandatory')
wfAppleRtmpHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpHops.setStatus('mandatory')
wfAppleRtmpNextHopNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNextHopNet.setStatus('mandatory')
wfAppleRtmpNextHopNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpNextHopNode.setStatus('mandatory')
wfAppleRtmpState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("good", 1), ("suspect", 2), ("goingbad", 3), ("bad", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpState.setStatus('mandatory')
wfAppleRtmpProto = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rtmp", 1), ("aurp", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpProto.setStatus('mandatory')
wfAppleRtmpAurpNextHopIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 2, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleRtmpAurpNextHopIpAddress.setStatus('mandatory')
wfApplePortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3), )
if mibBuilder.loadTexts: wfApplePortTable.setStatus('mandatory')
wfApplePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfApplePortCircuit"))
if mibBuilder.loadTexts: wfApplePortEntry.setStatus('mandatory')
wfApplePortDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortDelete.setStatus('mandatory')
wfApplePortDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortDisable.setStatus('mandatory')
wfApplePortCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCircuit.setStatus('mandatory')
wfApplePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortState.setStatus('mandatory')
wfApplePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortType.setStatus('mandatory')
wfApplePortCksumDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortCksumDisable.setStatus('mandatory')
wfApplePortTrEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortTrEndStation.setStatus('mandatory')
wfApplePortGniForever = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortGniForever.setStatus('obsolete')
wfApplePortAarpFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortAarpFlush.setStatus('mandatory')
wfApplePortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortMacAddress.setStatus('mandatory')
wfApplePortNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNodeId.setStatus('mandatory')
wfApplePortNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNetwork.setStatus('mandatory')
wfApplePortNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNetStart.setStatus('mandatory')
wfApplePortNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortNetEnd.setStatus('mandatory')
wfApplePortDfltZone = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortDfltZone.setStatus('mandatory')
wfApplePortCurMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurMacAddress.setStatus('mandatory')
wfApplePortCurNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNodeId.setStatus('mandatory')
wfApplePortCurNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNetwork.setStatus('mandatory')
wfApplePortCurNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNetStart.setStatus('mandatory')
wfApplePortCurNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurNetEnd.setStatus('mandatory')
wfApplePortCurDfltZone = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortCurDfltZone.setStatus('mandatory')
wfApplePortAarpProbeRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpProbeRxs.setStatus('mandatory')
wfApplePortAarpProbeTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpProbeTxs.setStatus('mandatory')
wfApplePortAarpReqRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpReqRxs.setStatus('mandatory')
wfApplePortAarpReqTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpReqTxs.setStatus('mandatory')
wfApplePortAarpRspRxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpRspRxs.setStatus('mandatory')
wfApplePortAarpRspTxs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortAarpRspTxs.setStatus('mandatory')
wfApplePortDdpOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpOutRequests.setStatus('mandatory')
wfApplePortDdpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpInReceives.setStatus('mandatory')
wfApplePortDdpInLocalDatagrams = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpInLocalDatagrams.setStatus('mandatory')
wfApplePortDdpNoProtocolHandlers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpNoProtocolHandlers.setStatus('mandatory')
wfApplePortDdpTooShortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpTooShortErrors.setStatus('mandatory')
wfApplePortDdpTooLongErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpTooLongErrors.setStatus('mandatory')
wfApplePortDdpChecksumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpChecksumErrors.setStatus('mandatory')
wfApplePortDdpForwRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpForwRequests.setStatus('mandatory')
wfApplePortDdpOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpOutNoRoutes.setStatus('mandatory')
wfApplePortDdpBroadcastErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpBroadcastErrors.setStatus('mandatory')
wfApplePortDdpHopCountErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortDdpHopCountErrors.setStatus('mandatory')
wfApplePortRtmpInDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpInDataPkts.setStatus('mandatory')
wfApplePortRtmpOutDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpOutDataPkts.setStatus('mandatory')
wfApplePortRtmpInRequestPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpInRequestPkts.setStatus('mandatory')
wfApplePortRtmpNextIREqualChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpNextIREqualChanges.setStatus('mandatory')
wfApplePortRtmpNextIRLessChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpNextIRLessChanges.setStatus('mandatory')
wfApplePortRtmpRouteDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpRouteDeletes.setStatus('mandatory')
wfApplePortRtmpNetworkMismatchErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpNetworkMismatchErrors.setStatus('mandatory')
wfApplePortRtmpRoutingTableOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortRtmpRoutingTableOverflows.setStatus('mandatory')
wfApplePortZipInZipQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInZipQueries.setStatus('mandatory')
wfApplePortZipInZipReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInZipReplies.setStatus('mandatory')
wfApplePortZipOutZipReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutZipReplies.setStatus('mandatory')
wfApplePortZipInZipExtendedReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInZipExtendedReplies.setStatus('mandatory')
wfApplePortZipOutZipExtendedReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutZipExtendedReplies.setStatus('mandatory')
wfApplePortZipInGetZoneLists = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetZoneLists.setStatus('mandatory')
wfApplePortZipOutGetZoneListReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetZoneListReplies.setStatus('mandatory')
wfApplePortZipInGetLocalZones = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetLocalZones.setStatus('mandatory')
wfApplePortZipOutGetLocalZoneReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetLocalZoneReplies.setStatus('mandatory')
wfApplePortZipInGetMyZones = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetMyZones.setStatus('obsolete')
wfApplePortZipOutGetMyZoneReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetMyZoneReplies.setStatus('obsolete')
wfApplePortZipZoneConflictErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipZoneConflictErrors.setStatus('mandatory')
wfApplePortZipInGetNetInfos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetNetInfos.setStatus('mandatory')
wfApplePortZipOutGetNetInfoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetNetInfoReplies.setStatus('mandatory')
wfApplePortZipZoneOutInvalids = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipZoneOutInvalids.setStatus('mandatory')
wfApplePortZipAddressInvalids = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipAddressInvalids.setStatus('mandatory')
wfApplePortZipOutGetNetInfos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutGetNetInfos.setStatus('mandatory')
wfApplePortZipInGetNetInfoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInGetNetInfoReplies.setStatus('mandatory')
wfApplePortZipOutZipQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipOutZipQueries.setStatus('mandatory')
wfApplePortZipInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortZipInErrors.setStatus('mandatory')
wfApplePortNbpInLookUpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInLookUpRequests.setStatus('mandatory')
wfApplePortNbpInLookUpReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInLookUpReplies.setStatus('mandatory')
wfApplePortNbpInBroadcastRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInBroadcastRequests.setStatus('mandatory')
wfApplePortNbpInForwardRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInForwardRequests.setStatus('mandatory')
wfApplePortNbpOutLookUpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutLookUpRequests.setStatus('mandatory')
wfApplePortNbpOutLookUpReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutLookUpReplies.setStatus('mandatory')
wfApplePortNbpOutBroadcastRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutBroadcastRequests.setStatus('mandatory')
wfApplePortNbpOutForwardRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpOutForwardRequests.setStatus('mandatory')
wfApplePortNbpRegistrationFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpRegistrationFailures.setStatus('mandatory')
wfApplePortNbpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortNbpInErrors.setStatus('mandatory')
wfApplePortEchoRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortEchoRequests.setStatus('mandatory')
wfApplePortEchoReplies = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfApplePortEchoReplies.setStatus('mandatory')
wfApplePortInterfaceCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15))).clone(namedValues=NamedValues(("cost", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortInterfaceCost.setStatus('mandatory')
wfApplePortWanBroadcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 80), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortWanBroadcastAddress.setStatus('mandatory')
wfApplePortWanSplitHorizonDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortWanSplitHorizonDisable.setStatus('mandatory')
wfApplePortZoneFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2), ("partallow", 3), ("partdeny", 4))).clone('deny')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortZoneFilterType.setStatus('mandatory')
wfApplePortMacIPDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 3, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfApplePortMacIPDisable.setStatus('mandatory')
wfAppleLclZoneTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4), )
if mibBuilder.loadTexts: wfAppleLclZoneTable.setStatus('mandatory')
wfAppleLclZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfAppleLclZonePortCircuit"), (0, "Wellfleet-AT-MIB", "wfAppleLclZoneIndex"))
if mibBuilder.loadTexts: wfAppleLclZoneEntry.setStatus('mandatory')
wfAppleLclZoneDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleLclZoneDelete.setStatus('mandatory')
wfAppleLclZonePortCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleLclZonePortCircuit.setStatus('mandatory')
wfAppleLclZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleLclZoneIndex.setStatus('mandatory')
wfAppleLclZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleLclZoneName.setStatus('mandatory')
wfAppleAarpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5), )
if mibBuilder.loadTexts: wfAppleAarpTable.setStatus('mandatory')
wfAppleAarpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfAppleAarpNet"), (0, "Wellfleet-AT-MIB", "wfAppleAarpNode"), (0, "Wellfleet-AT-MIB", "wfAppleAarpIfIndex"))
if mibBuilder.loadTexts: wfAppleAarpEntry.setStatus('mandatory')
wfAppleAarpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpIfIndex.setStatus('mandatory')
wfAppleAarpNet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpNet.setStatus('mandatory')
wfAppleAarpNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpNode.setStatus('mandatory')
wfAppleAarpPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAarpPhysAddress.setStatus('mandatory')
wfAppleZipTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6), )
if mibBuilder.loadTexts: wfAppleZipTable.setStatus('mandatory')
wfAppleZipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfAppleZipZoneNetStart"), (0, "Wellfleet-AT-MIB", "wfAppleZipIndex"))
if mibBuilder.loadTexts: wfAppleZipEntry.setStatus('mandatory')
wfAppleZipZoneNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneNetStart.setStatus('mandatory')
wfAppleZipZoneNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneNetEnd.setStatus('mandatory')
wfAppleZipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipIndex.setStatus('mandatory')
wfAppleZipZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneName.setStatus('mandatory')
wfAppleZipZoneState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZipZoneState.setStatus('mandatory')
wfAppleZoneFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7), )
if mibBuilder.loadTexts: wfAppleZoneFilterTable.setStatus('mandatory')
wfAppleZoneFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfAppleZoneFilterIndex"))
if mibBuilder.loadTexts: wfAppleZoneFilterEntry.setStatus('mandatory')
wfAppleZoneFilterDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleZoneFilterDelete.setStatus('mandatory')
wfAppleZoneFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleZoneFilterCircuit.setStatus('mandatory')
wfAppleZoneFilterIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleZoneFilterIpAddress.setStatus('mandatory')
wfAppleZoneFilterCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtmp", 1), ("aurp", 2))).clone('rtmp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleZoneFilterCircuitType.setStatus('mandatory')
wfAppleZoneFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleZoneFilterIndex.setStatus('mandatory')
wfAppleZoneFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 7, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleZoneFilterName.setStatus('mandatory')
wfAppleAurpBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8))
wfAppleAurpBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpBaseDelete.setStatus('mandatory')
wfAppleAurpBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpBaseDisable.setStatus('mandatory')
wfAppleAurpBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpBaseState.setStatus('mandatory')
wfAppleAurpBaseDomain = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpBaseDomain.setStatus('mandatory')
wfAppleAurpBaseIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpBaseIpAddress.setStatus('mandatory')
wfAppleAurpBasePromiscuous = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notpromisc", 1), ("promisc", 2))).clone('notpromisc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpBasePromiscuous.setStatus('mandatory')
wfAppleAurpBaseInAcceptedOpenReqs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpBaseInAcceptedOpenReqs.setStatus('mandatory')
wfAppleAurpBaseInRejectedOpenReqs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpBaseInRejectedOpenReqs.setStatus('mandatory')
wfAppleAurpBaseInRouterDowns = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpBaseInRouterDowns.setStatus('mandatory')
wfAppleAurpBaseInPktsNoPeers = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpBaseInPktsNoPeers.setStatus('mandatory')
wfAppleAurpBaseInInvalidVerions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 8, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpBaseInInvalidVerions.setStatus('mandatory')
wfAppleAurpTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9), )
if mibBuilder.loadTexts: wfAppleAurpTable.setStatus('mandatory')
wfAppleAurpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1), ).setIndexNames((0, "Wellfleet-AT-MIB", "wfAppleAurpEntryIpAddress"))
if mibBuilder.loadTexts: wfAppleAurpEntry.setStatus('mandatory')
wfAppleAurpEntryDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryDelete.setStatus('mandatory')
wfAppleAurpEntryDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryDisable.setStatus('mandatory')
wfAppleAurpEntryState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryState.setStatus('mandatory')
wfAppleAurpEntryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryIpAddress.setStatus('mandatory')
wfAppleAurpEntryZoneFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2), ("partallow", 3), ("partdeny", 4))).clone('deny')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryZoneFilterType.setStatus('mandatory')
wfAppleAurpEntryTimeoutCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryTimeoutCommand.setStatus('mandatory')
wfAppleAurpEntryRetryCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryRetryCommand.setStatus('mandatory')
wfAppleAurpEntryUpdateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 604800)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryUpdateRate.setStatus('mandatory')
wfAppleAurpEntryLhfTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 31536000)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryLhfTimeout.setStatus('mandatory')
wfAppleAurpEntryHopCountReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryHopCountReduction.setStatus('mandatory')
wfAppleAurpEntryInterfaceCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryInterfaceCost.setStatus('mandatory')
wfAppleAurpEntrySuiFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(30720))).clone(namedValues=NamedValues(("all", 30720))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntrySuiFlags.setStatus('mandatory')
wfAppleAurpEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryType.setStatus('mandatory')
wfAppleAurpEntryPeerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryPeerDomainId.setStatus('mandatory')
wfAppleAurpEntryPeerUpdateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryPeerUpdateRate.setStatus('mandatory')
wfAppleAurpEntryPeerEnvironment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryPeerEnvironment.setStatus('mandatory')
wfAppleAurpEntryPeerSuiFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryPeerSuiFlags.setStatus('mandatory')
wfAppleAurpEntryCliConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryCliConnId.setStatus('mandatory')
wfAppleAurpEntrySrvConnId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntrySrvConnId.setStatus('mandatory')
wfAppleAurpEntryCliSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryCliSeqNum.setStatus('mandatory')
wfAppleAurpEntrySrvSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntrySrvSeqNum.setStatus('mandatory')
wfAppleAurpEntryCommandRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryCommandRetries.setStatus('mandatory')
wfAppleAurpEntryInDelayedDuplicates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInDelayedDuplicates.setStatus('mandatory')
wfAppleAurpEntryInInvalidConnIds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInInvalidConnIds.setStatus('mandatory')
wfAppleAurpEntryInInvalidCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInInvalidCommands.setStatus('mandatory')
wfAppleAurpEntryInInvalidSubCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInInvalidSubCodes.setStatus('mandatory')
wfAppleAurpEntryInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInPkts.setStatus('mandatory')
wfAppleAurpEntryOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutPkts.setStatus('mandatory')
wfAppleAurpEntryInDdpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInDdpPkts.setStatus('mandatory')
wfAppleAurpEntryOutDdpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutDdpPkts.setStatus('mandatory')
wfAppleAurpEntryOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutNoRoutes.setStatus('mandatory')
wfAppleAurpEntryHopCountErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryHopCountErrors.setStatus('mandatory')
wfAppleAurpEntryHopCountAdjustments = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryHopCountAdjustments.setStatus('mandatory')
wfAppleAurpEntryInAurpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInAurpPkts.setStatus('mandatory')
wfAppleAurpEntryOutAurpPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutAurpPkts.setStatus('mandatory')
wfAppleAurpEntryInOpenRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInOpenRequests.setStatus('mandatory')
wfAppleAurpEntryOutOpenRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutOpenRequests.setStatus('mandatory')
wfAppleAurpEntryInOpenResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInOpenResponses.setStatus('mandatory')
wfAppleAurpEntryOutOpenResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutOpenResponses.setStatus('mandatory')
wfAppleAurpEntryInRiRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInRiRequests.setStatus('mandatory')
wfAppleAurpEntryOutRiRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutRiRequests.setStatus('mandatory')
wfAppleAurpEntryInRiResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInRiResponses.setStatus('mandatory')
wfAppleAurpEntryOutRiResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutRiResponses.setStatus('mandatory')
wfAppleAurpEntryInRiAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInRiAcks.setStatus('mandatory')
wfAppleAurpEntryOutRiAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutRiAcks.setStatus('mandatory')
wfAppleAurpEntryInRiUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInRiUpdates.setStatus('mandatory')
wfAppleAurpEntryOutRiUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutRiUpdates.setStatus('mandatory')
wfAppleAurpEntryInUpdateNullEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateNullEvents.setStatus('mandatory')
wfAppleAurpEntryOutUpdateNullEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateNullEvents.setStatus('mandatory')
wfAppleAurpEntryInUpdateNetAdds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateNetAdds.setStatus('mandatory')
wfAppleAurpEntryOutUpdateNetAdds = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateNetAdds.setStatus('mandatory')
wfAppleAurpEntryInUpdateNetDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateNetDeletes.setStatus('mandatory')
wfAppleAurpEntryOutUpdateNetDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateNetDeletes.setStatus('mandatory')
wfAppleAurpEntryInUpdateNetRouteChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateNetRouteChanges.setStatus('mandatory')
wfAppleAurpEntryOutUpdateNetRouteChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateNetRouteChanges.setStatus('mandatory')
wfAppleAurpEntryInUpdateNetDistanceChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateNetDistanceChanges.setStatus('mandatory')
wfAppleAurpEntryOutUpdateNetDistanceChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateNetDistanceChanges.setStatus('mandatory')
wfAppleAurpEntryInUpdateZoneChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateZoneChanges.setStatus('mandatory')
wfAppleAurpEntryOutUpdateZoneChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateZoneChanges.setStatus('mandatory')
wfAppleAurpEntryInUpdateInvalidEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInUpdateInvalidEvents.setStatus('mandatory')
wfAppleAurpEntryOutUpdateInvalidEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutUpdateInvalidEvents.setStatus('mandatory')
wfAppleAurpEntryInZiRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInZiRequests.setStatus('mandatory')
wfAppleAurpEntryOutZiRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutZiRequests.setStatus('mandatory')
wfAppleAurpEntryInZiResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInZiResponses.setStatus('mandatory')
wfAppleAurpEntryOutZiResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutZiResponses.setStatus('mandatory')
wfAppleAurpEntryInGdzlRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInGdzlRequests.setStatus('mandatory')
wfAppleAurpEntryOutGdzlRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutGdzlRequests.setStatus('mandatory')
wfAppleAurpEntryInGdzlResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInGdzlResponses.setStatus('mandatory')
wfAppleAurpEntryOutGdzlResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutGdzlResponses.setStatus('mandatory')
wfAppleAurpEntryInGznRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInGznRequests.setStatus('mandatory')
wfAppleAurpEntryOutGznRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutGznRequests.setStatus('mandatory')
wfAppleAurpEntryInGznResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInGznResponses.setStatus('mandatory')
wfAppleAurpEntryOutGznResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutGznResponses.setStatus('mandatory')
wfAppleAurpEntryInTickles = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInTickles.setStatus('mandatory')
wfAppleAurpEntryOutTickles = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutTickles.setStatus('mandatory')
wfAppleAurpEntryInTickleAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInTickleAcks.setStatus('mandatory')
wfAppleAurpEntryOutTickleAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutTickleAcks.setStatus('mandatory')
wfAppleAurpEntryInRouterDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryInRouterDowns.setStatus('mandatory')
wfAppleAurpEntryOutRouterDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAurpEntryOutRouterDowns.setStatus('mandatory')
wfAppleAurpEntryZoneFiltDfltZone = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 9, 1, 80), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAppleAurpEntryZoneFiltDfltZone.setStatus('mandatory')
wfAppleAggrStats = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10))
wfAppleAggrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInPkts.setStatus('mandatory')
wfAppleAggrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrOutPkts.setStatus('mandatory')
wfAppleAggrFwdDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrFwdDatagrams.setStatus('mandatory')
wfAppleAggrInXsumErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInXsumErrs.setStatus('mandatory')
wfAppleAggrInHopCountErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInHopCountErrs.setStatus('mandatory')
wfAppleAggrInTooShorts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInTooShorts.setStatus('mandatory')
wfAppleAggrInTooLongs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInTooLongs.setStatus('mandatory')
wfAppleAggrOutNoRoutes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrOutNoRoutes.setStatus('mandatory')
wfAppleAggrInLocalDests = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInLocalDests.setStatus('mandatory')
wfAppleAggrInRtmps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrInRtmps.setStatus('mandatory')
wfAppleAggrOutRtmps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 4, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAppleAggrOutRtmps.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-AT-MIB", wfAppleZipZoneNetStart=wfAppleZipZoneNetStart, wfAppleAurpEntryOutRiAcks=wfAppleAurpEntryOutRiAcks, wfAppleBaseEstimatedHosts=wfAppleBaseEstimatedHosts, wfApplePortAarpRspTxs=wfApplePortAarpRspTxs, wfAppleAurpBaseDomain=wfAppleAurpBaseDomain, wfAppleAurpEntryInRiUpdates=wfAppleAurpEntryInRiUpdates, wfAppleAurpEntryOutGznRequests=wfAppleAurpEntryOutGznRequests, wfAppleZoneFilterCircuitType=wfAppleZoneFilterCircuitType, wfApplePortZipInZipQueries=wfApplePortZipInZipQueries, wfApplePortNodeId=wfApplePortNodeId, wfApplePortAarpProbeTxs=wfApplePortAarpProbeTxs, wfAppleAurpEntryInUpdateNullEvents=wfAppleAurpEntryInUpdateNullEvents, wfAppleAurpEntryOutUpdateInvalidEvents=wfAppleAurpEntryOutUpdateInvalidEvents, wfApplePortWanBroadcastAddress=wfApplePortWanBroadcastAddress, wfAppleAurpBasePromiscuous=wfAppleAurpBasePromiscuous, wfApplePortEntry=wfApplePortEntry, wfApplePortNetStart=wfApplePortNetStart, wfAppleAurpEntryLhfTimeout=wfAppleAurpEntryLhfTimeout, wfAppleAurpEntryPeerUpdateRate=wfAppleAurpEntryPeerUpdateRate, wfAppleAarpNet=wfAppleAarpNet, wfAppleAurpEntryRetryCommand=wfAppleAurpEntryRetryCommand, wfAppleAurpEntryInDdpPkts=wfAppleAurpEntryInDdpPkts, wfAppleAurpEntryState=wfAppleAurpEntryState, wfAppleAggrInTooLongs=wfAppleAggrInTooLongs, wfMacIPLowerIpAddress2=wfMacIPLowerIpAddress2, wfAppleAurpEntryInTickleAcks=wfAppleAurpEntryInTickleAcks, wfApplePortZipInGetNetInfos=wfApplePortZipInGetNetInfos, wfAppleBaseState=wfAppleBaseState, wfAppleAggrInRtmps=wfAppleAggrInRtmps, wfAppleAurpBaseDelete=wfAppleAurpBaseDelete, wfAppleLclZoneIndex=wfAppleLclZoneIndex, wfApplePortAarpReqTxs=wfApplePortAarpReqTxs, wfAppleZoneFilterEntry=wfAppleZoneFilterEntry, wfApplePortDdpForwRequests=wfApplePortDdpForwRequests, wfAppleAurpEntry=wfAppleAurpEntry, wfApplePortInterfaceCost=wfApplePortInterfaceCost, wfAppleBaseTotalZones=wfAppleBaseTotalZones, wfAppleAurpEntryInUpdateInvalidEvents=wfAppleAurpEntryInUpdateInvalidEvents, wfApplePortCircuit=wfApplePortCircuit, wfAppleMacIPBaseDelete=wfAppleMacIPBaseDelete, wfAppleAurpEntryOutOpenRequests=wfAppleAurpEntryOutOpenRequests, wfAppleAggrOutNoRoutes=wfAppleAggrOutNoRoutes, wfAppleZoneFilterTable=wfAppleZoneFilterTable, wfApplePortGniForever=wfApplePortGniForever, wfApplePortNbpInBroadcastRequests=wfApplePortNbpInBroadcastRequests, wfAppleAurpEntryOutUpdateNullEvents=wfAppleAurpEntryOutUpdateNullEvents, wfApplePortZipOutGetNetInfos=wfApplePortZipOutGetNetInfos, wfAppleLclZoneTable=wfAppleLclZoneTable, wfMacIPAddress2=wfMacIPAddress2, wfAppleAurpEntryInInvalidCommands=wfAppleAurpEntryInInvalidCommands, wfAppleAurpEntryInAurpPkts=wfAppleAurpEntryInAurpPkts, wfAppleAurpEntryOutOpenResponses=wfAppleAurpEntryOutOpenResponses, wfAppleAurpEntryInGdzlResponses=wfAppleAurpEntryInGdzlResponses, wfApplePortDdpOutNoRoutes=wfApplePortDdpOutNoRoutes, wfAppleZipEntry=wfAppleZipEntry, wfAppleAurpBaseInRejectedOpenReqs=wfAppleAurpBaseInRejectedOpenReqs, wfApplePortDdpInLocalDatagrams=wfApplePortDdpInLocalDatagrams, wfApplePortCurNetEnd=wfApplePortCurNetEnd, wfAppleLclZoneName=wfAppleLclZoneName, wfAppleAurpBaseInInvalidVerions=wfAppleAurpBaseInInvalidVerions, wfAppleAurpEntryOutRiRequests=wfAppleAurpEntryOutRiRequests, wfAppleAggrOutRtmps=wfAppleAggrOutRtmps, wfApplePortDdpBroadcastErrors=wfApplePortDdpBroadcastErrors, wfAppleAurpBaseInRouterDowns=wfAppleAurpBaseInRouterDowns, wfAppleAurpBaseInPktsNoPeers=wfAppleAurpBaseInPktsNoPeers, wfApplePortZipAddressInvalids=wfApplePortZipAddressInvalids, wfAppleAurpEntryInGznResponses=wfAppleAurpEntryInGznResponses, wfApplePortRtmpRouteDeletes=wfApplePortRtmpRouteDeletes, wfAppleZipIndex=wfAppleZipIndex, wfApplePortDelete=wfApplePortDelete, wfAppleAurpEntryInRiResponses=wfAppleAurpEntryInRiResponses, wfApplePortTrEndStation=wfApplePortTrEndStation, wfAppleAurpEntryOutUpdateZoneChanges=wfAppleAurpEntryOutUpdateZoneChanges, wfAppleAurpEntryInGdzlRequests=wfAppleAurpEntryInGdzlRequests, wfApplePortDdpTooLongErrors=wfApplePortDdpTooLongErrors, wfAppleAarpNode=wfAppleAarpNode, wfAppleRtmpHops=wfAppleRtmpHops, wfAppleBaseTotalAarpEntries=wfAppleBaseTotalAarpEntries, wfApplePortRtmpInDataPkts=wfApplePortRtmpInDataPkts, wfAppleAurpBaseInAcceptedOpenReqs=wfAppleAurpBaseInAcceptedOpenReqs, wfAppleAurpEntryHopCountReduction=wfAppleAurpEntryHopCountReduction, wfApplePortDdpOutRequests=wfApplePortDdpOutRequests, wfApplePortNbpInLookUpRequests=wfApplePortNbpInLookUpRequests, wfAppleAurpEntryOutUpdateNetAdds=wfAppleAurpEntryOutUpdateNetAdds, wfApplePortZipOutZipReplies=wfApplePortZipOutZipReplies, wfAppleAurpEntryOutPkts=wfAppleAurpEntryOutPkts, wfApplePortZipInGetZoneLists=wfApplePortZipInGetZoneLists, wfAppleAurpEntryCliSeqNum=wfAppleAurpEntryCliSeqNum, wfAppleAurpEntryPeerDomainId=wfAppleAurpEntryPeerDomainId, wfAppleAurpEntryHopCountAdjustments=wfAppleAurpEntryHopCountAdjustments, wfApplePortRtmpNextIREqualChanges=wfApplePortRtmpNextIREqualChanges, wfAppleAurpEntryOutRiResponses=wfAppleAurpEntryOutRiResponses, wfAppleAarpEntry=wfAppleAarpEntry, wfApplePortRtmpNetworkMismatchErrors=wfApplePortRtmpNetworkMismatchErrors, wfAppleAurpEntryInUpdateZoneChanges=wfAppleAurpEntryInUpdateZoneChanges, wfApplePortZipInGetLocalZones=wfApplePortZipInGetLocalZones, wfAppleMacIPBaseDisable=wfAppleMacIPBaseDisable, wfAppleAurpBaseIpAddress=wfAppleAurpBaseIpAddress, wfAppleAurpEntryDisable=wfAppleAurpEntryDisable, wfAppleAurpEntryInOpenRequests=wfAppleAurpEntryInOpenRequests, wfApplePortState=wfApplePortState, wfMacIPAddress1=wfMacIPAddress1, wfAppleAggrStats=wfAppleAggrStats, wfMacIPUpperIpAddress3=wfMacIPUpperIpAddress3, wfApplePortRtmpRoutingTableOverflows=wfApplePortRtmpRoutingTableOverflows, wfAppleAurpEntryInRiAcks=wfAppleAurpEntryInRiAcks, wfAppleAurpEntryOutZiResponses=wfAppleAurpEntryOutZiResponses, wfApplePortAarpReqRxs=wfApplePortAarpReqRxs, wfApplePortCurNodeId=wfApplePortCurNodeId, wfApplePortDdpChecksumErrors=wfApplePortDdpChecksumErrors, wfAppleZipZoneName=wfAppleZipZoneName, wfApplePortEchoReplies=wfApplePortEchoReplies, wfMacIPAddress3=wfMacIPAddress3, wfApplePortMacAddress=wfApplePortMacAddress, wfAppleZoneFilterDelete=wfAppleZoneFilterDelete, wfApplePortRtmpInRequestPkts=wfApplePortRtmpInRequestPkts, wfApplePortNbpOutForwardRequests=wfApplePortNbpOutForwardRequests, wfAppleAurpEntryPeerSuiFlags=wfAppleAurpEntryPeerSuiFlags, wfAppleZoneFilterIpAddress=wfAppleZoneFilterIpAddress, wfAppleAurpEntryOutZiRequests=wfAppleAurpEntryOutZiRequests, wfAppleLclZoneDelete=wfAppleLclZoneDelete, wfAppleAurpEntryInUpdateNetAdds=wfAppleAurpEntryInUpdateNetAdds, wfAppleMacIPServerResponces=wfAppleMacIPServerResponces, wfApplePortCurNetStart=wfApplePortCurNetStart, wfApplePortZipOutZipExtendedReplies=wfApplePortZipOutZipExtendedReplies, wfApplePortCksumDisable=wfApplePortCksumDisable, wfAppleRtmpPort=wfAppleRtmpPort, wfAppleRtmpNetEnd=wfAppleRtmpNetEnd, wfApplePortNbpOutBroadcastRequests=wfApplePortNbpOutBroadcastRequests, wfAppleAurpEntryZoneFiltDfltZone=wfAppleAurpEntryZoneFiltDfltZone, wfAppleBaseTotalNets=wfAppleBaseTotalNets, wfAppleAurpEntryCliConnId=wfAppleAurpEntryCliConnId, wfAppleZoneFilterName=wfAppleZoneFilterName, wfAppleAurpEntrySrvSeqNum=wfAppleAurpEntrySrvSeqNum, wfAppleAurpEntryInInvalidConnIds=wfAppleAurpEntryInInvalidConnIds, wfApplePortDisable=wfApplePortDisable, wfApplePortZipOutZipQueries=wfApplePortZipOutZipQueries, wfApplePortType=wfApplePortType, wfApplePortNbpInLookUpReplies=wfApplePortNbpInLookUpReplies, wfApplePortWanSplitHorizonDisable=wfApplePortWanSplitHorizonDisable, wfAppleRtmpTable=wfAppleRtmpTable, wfAppleAurpBaseDisable=wfAppleAurpBaseDisable, wfAppleAurpEntryCommandRetries=wfAppleAurpEntryCommandRetries, wfAppleRtmpNetStart=wfAppleRtmpNetStart, wfApplePortZipZoneConflictErrors=wfApplePortZipZoneConflictErrors, wfAppleAurpEntryOutRiUpdates=wfAppleAurpEntryOutRiUpdates, wfApplePortEchoRequests=wfApplePortEchoRequests, wfAppleAurpEntryOutRouterDowns=wfAppleAurpEntryOutRouterDowns, wfApplePortAarpProbeRxs=wfApplePortAarpProbeRxs, wfAppleBaseDebugLevel=wfAppleBaseDebugLevel, wfAppleBaseDdpQueLen=wfAppleBaseDdpQueLen, wfAppleMacIPZone=wfAppleMacIPZone, wfApplePortTable=wfApplePortTable, wfMacIPLowerIpAddress1=wfMacIPLowerIpAddress1, wfAppleRtmpEntry=wfAppleRtmpEntry, wfAppleAurpEntryOutAurpPkts=wfAppleAurpEntryOutAurpPkts, wfAppleLclZonePortCircuit=wfAppleLclZonePortCircuit, wfAppleBaseDelete=wfAppleBaseDelete, wfApplePortZipZoneOutInvalids=wfApplePortZipZoneOutInvalids, wfAppleRtmpProto=wfAppleRtmpProto, wfApplePortZipInZipExtendedReplies=wfApplePortZipInZipExtendedReplies, wfApplePortMacIPDisable=wfApplePortMacIPDisable, wfAppleAurpEntryOutTickles=wfAppleAurpEntryOutTickles, wfAppleRtmpAurpNextHopIpAddress=wfAppleRtmpAurpNextHopIpAddress, wfAppleAurpEntryInZiResponses=wfAppleAurpEntryInZiResponses, wfApplePortDdpNoProtocolHandlers=wfApplePortDdpNoProtocolHandlers, wfMacIPUpperIpAddress1=wfMacIPUpperIpAddress1, wfAppleZipZoneNetEnd=wfAppleZipZoneNetEnd, wfAppleMacIPAddressTimeOut=wfAppleMacIPAddressTimeOut, wfAppleAurpEntryInDelayedDuplicates=wfAppleAurpEntryInDelayedDuplicates, wfAppleAggrInPkts=wfAppleAggrInPkts, wfAppleAurpBase=wfAppleAurpBase, wfAppleAurpEntryInZiRequests=wfAppleAurpEntryInZiRequests, wfApplePortNbpInForwardRequests=wfApplePortNbpInForwardRequests, wfApplePortNbpInErrors=wfApplePortNbpInErrors, wfAppleZoneFilterCircuit=wfAppleZoneFilterCircuit, wfAppleAurpEntryPeerEnvironment=wfAppleAurpEntryPeerEnvironment, wfAppleLclZoneEntry=wfAppleLclZoneEntry, wfAppleAurpEntryInTickles=wfAppleAurpEntryInTickles, wfAppleAurpEntryInUpdateNetDeletes=wfAppleAurpEntryInUpdateNetDeletes, wfAppleAurpEntryOutNoRoutes=wfAppleAurpEntryOutNoRoutes, wfApplePortDdpInReceives=wfApplePortDdpInReceives, wfAppleZoneFilterIndex=wfAppleZoneFilterIndex, wfAppleBaseHomedPort=wfAppleBaseHomedPort, wfApplePortZoneFilterType=wfApplePortZoneFilterType, wfAppleBaseTotalZoneNames=wfAppleBaseTotalZoneNames, wfApplePortCurMacAddress=wfApplePortCurMacAddress, wfAppleAurpEntryIpAddress=wfAppleAurpEntryIpAddress, wfAppleAggrInTooShorts=wfAppleAggrInTooShorts, wfApplePortZipInZipReplies=wfApplePortZipInZipReplies, wfApplePortZipOutGetLocalZoneReplies=wfApplePortZipOutGetLocalZoneReplies, wfMacIPUpperIpAddress2=wfMacIPUpperIpAddress2, wfAppleAurpEntryInUpdateNetRouteChanges=wfAppleAurpEntryInUpdateNetRouteChanges, wfAppleAggrInHopCountErrs=wfAppleAggrInHopCountErrs, wfAppleZipTable=wfAppleZipTable, wfAppleAurpEntryInPkts=wfAppleAurpEntryInPkts, wfAppleAurpBaseState=wfAppleAurpBaseState, wfApplePortNetwork=wfApplePortNetwork, wfApplePortZipInErrors=wfApplePortZipInErrors, wfAppleBase=wfAppleBase, wfApplePortAarpRspRxs=wfApplePortAarpRspRxs, wfAppleAurpEntryOutDdpPkts=wfAppleAurpEntryOutDdpPkts, wfMacIPLowerIpAddress3=wfMacIPLowerIpAddress3, wfAppleAurpTable=wfAppleAurpTable, wfAppleAurpEntryInRiRequests=wfAppleAurpEntryInRiRequests, wfAppleAggrInXsumErrs=wfAppleAggrInXsumErrs, wfApplePortCurNetwork=wfApplePortCurNetwork, wfApplePortZipOutGetZoneListReplies=wfApplePortZipOutGetZoneListReplies, wfApplePortZipOutGetMyZoneReplies=wfApplePortZipOutGetMyZoneReplies, wfAppleRtmpNextHopNet=wfAppleRtmpNextHopNet, wfAppleAggrInLocalDests=wfAppleAggrInLocalDests, wfApplePortNetEnd=wfApplePortNetEnd, wfAppleBaseEstimatedNets=wfAppleBaseEstimatedNets, wfAppleAurpEntryInterfaceCost=wfAppleAurpEntryInterfaceCost, wfAppleAurpEntryInOpenResponses=wfAppleAurpEntryInOpenResponses, wfAppleAurpEntryOutGdzlRequests=wfAppleAurpEntryOutGdzlRequests, wfAppleAurpEntryOutUpdateNetDistanceChanges=wfAppleAurpEntryOutUpdateNetDistanceChanges, wfAppleAurpEntryHopCountErrors=wfAppleAurpEntryHopCountErrors, wfAppleAurpEntrySrvConnId=wfAppleAurpEntrySrvConnId, wfAppleAarpTable=wfAppleAarpTable, wfAppleAggrOutPkts=wfAppleAggrOutPkts, wfAppleAurpEntryType=wfAppleAurpEntryType, wfAppleAurpEntryDelete=wfAppleAurpEntryDelete, wfApplePortRtmpNextIRLessChanges=wfApplePortRtmpNextIRLessChanges, wfApplePortRtmpOutDataPkts=wfApplePortRtmpOutDataPkts, wfAppleAarpPhysAddress=wfAppleAarpPhysAddress, wfAppleAurpEntryInUpdateNetDistanceChanges=wfAppleAurpEntryInUpdateNetDistanceChanges, wfApplePortDfltZone=wfApplePortDfltZone, wfAppleRtmpState=wfAppleRtmpState, wfAppleAurpEntryUpdateRate=wfAppleAurpEntryUpdateRate, wfAppleRtmpNextHopNode=wfAppleRtmpNextHopNode, wfApplePortZipInGetMyZones=wfApplePortZipInGetMyZones, wfAppleAurpEntryInGznRequests=wfAppleAurpEntryInGznRequests, wfApplePortZipOutGetNetInfoReplies=wfApplePortZipOutGetNetInfoReplies, wfApplePortCurDfltZone=wfApplePortCurDfltZone, wfAppleAurpEntryOutUpdateNetDeletes=wfAppleAurpEntryOutUpdateNetDeletes, wfAppleAurpEntryOutGdzlResponses=wfAppleAurpEntryOutGdzlResponses, wfAppleZipZoneState=wfAppleZipZoneState, wfApplePortAarpFlush=wfApplePortAarpFlush, wfApplePortDdpTooShortErrors=wfApplePortDdpTooShortErrors, wfApplePortZipInGetNetInfoReplies=wfApplePortZipInGetNetInfoReplies, wfAppleAurpEntryTimeoutCommand=wfAppleAurpEntryTimeoutCommand, wfAppleAurpEntryInInvalidSubCodes=wfAppleAurpEntryInInvalidSubCodes, wfAppleAurpEntryOutGznResponses=wfAppleAurpEntryOutGznResponses, wfApplePortNbpOutLookUpReplies=wfApplePortNbpOutLookUpReplies, wfAppleBaseDisable=wfAppleBaseDisable, wfAppleMacIPBaseState=wfAppleMacIPBaseState, wfAppleAurpEntryOutUpdateNetRouteChanges=wfAppleAurpEntryOutUpdateNetRouteChanges, wfAppleAurpEntryInRouterDowns=wfAppleAurpEntryInRouterDowns, wfAppleAarpIfIndex=wfAppleAarpIfIndex, wfAppleAurpEntryZoneFilterType=wfAppleAurpEntryZoneFilterType, wfApplePortDdpHopCountErrors=wfApplePortDdpHopCountErrors, wfAppleAurpEntrySuiFlags=wfAppleAurpEntrySuiFlags, wfApplePortNbpOutLookUpRequests=wfApplePortNbpOutLookUpRequests)
mibBuilder.exportSymbols("Wellfleet-AT-MIB", wfAppleAurpEntryOutTickleAcks=wfAppleAurpEntryOutTickleAcks, wfAppleMacIPServerRequests=wfAppleMacIPServerRequests, wfAppleAggrFwdDatagrams=wfAppleAggrFwdDatagrams, wfApplePortNbpRegistrationFailures=wfApplePortNbpRegistrationFailures)
