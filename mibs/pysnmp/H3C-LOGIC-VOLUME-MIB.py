#
# PySNMP MIB module H3C-LOGIC-VOLUME-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-LOGIC-VOLUME-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:09:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
H3cRaidIDType, H3cStorageActionType, H3cLvIDType, H3cStorageEnableState, h3cStorageRef, H3cStorageLedStateType, H3cWwpnListType, H3cSessionIDType = mibBuilder.importSymbols("H3C-STORAGE-REF-MIB", "H3cRaidIDType", "H3cStorageActionType", "H3cLvIDType", "H3cStorageEnableState", "h3cStorageRef", "H3cStorageLedStateType", "H3cWwpnListType", "H3cSessionIDType")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, NotificationType, ObjectIdentity, ModuleIdentity, Counter32, MibIdentifier, iso, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Counter32", "MibIdentifier", "iso", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "Integer32", "TimeTicks")
TextualConvention, DateAndTime, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString", "RowStatus", "TruthValue")
h3cLogicVolume = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5))
if mibBuilder.loadTexts: h3cLogicVolume.setLastUpdated('200709041452Z')
if mibBuilder.loadTexts: h3cLogicVolume.setOrganization('H3C Technologies Co., Ltd.')
h3cLvMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1))
h3cLogicResourceCapacityObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 1))
h3cLvCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvCount.setStatus('current')
h3cLvMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 1, 2), Integer32()).setUnits('TB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvMaxSize.setStatus('current')
h3cTargetCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTargetCount.setStatus('current')
h3cInitiatorCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cInitiatorCount.setStatus('current')
h3cSanClientCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSanClientCount.setStatus('current')
h3cLogicVolumeResource = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2))
h3cLvCreateIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 1), H3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvCreateIndex.setStatus('current')
h3cLvTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2), )
if mibBuilder.loadTexts: h3cLvTable.setStatus('current')
h3cLvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cLvIndex"))
if mibBuilder.loadTexts: h3cLvEntry.setStatus('current')
h3cLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 1), H3cLvIDType())
if mibBuilder.loadTexts: h3cLvIndex.setStatus('current')
h3cLvName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvName.setStatus('current')
h3cLvTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 3), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvTotalSize.setStatus('current')
h3cLvCreateRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 4), H3cRaidIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvCreateRaidUuid.setStatus('current')
h3cLvCreateRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvCreateRaidSize.setStatus('current')
h3cLvSedInquiryStringKeep = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvSedInquiryStringKeep.setStatus('current')
h3cLvSedRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 7), H3cRaidIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvSedRaidUuid.setStatus('current')
h3cLvState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("usable", 1), ("unusable", 2), ("conflict", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvState.setStatus('current')
h3cLvAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use", 1), ("unused", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvAssigned.setStatus('current')
h3cLvType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("virtual", 1), ("direct", 2), ("serviceEnabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvType.setStatus('current')
h3cLvExtendTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvExtendTimes.setStatus('current')
h3cLvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 2, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvRowStatus.setStatus('current')
h3cLvExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 3), )
if mibBuilder.loadTexts: h3cLvExtTable.setStatus('current')
h3cLvExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 3, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cLvIndex"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cLvRaidUuid"))
if mibBuilder.loadTexts: h3cLvExtEntry.setStatus('current')
h3cLvRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 3, 1, 1), H3cRaidIDType())
if mibBuilder.loadTexts: h3cLvRaidUuid.setStatus('current')
h3cLvExtSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvExtSize.setStatus('current')
h3cLvRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 3, 1, 3), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cLvRaidSize.setStatus('current')
h3cLvExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cLvExtRowStatus.setStatus('current')
h3cTargetResource = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4))
h3cTargetCreateIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTargetCreateIndex.setStatus('current')
h3cTargetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 2), )
if mibBuilder.loadTexts: h3cTargetTable.setStatus('current')
h3cTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 2, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetId"))
if mibBuilder.loadTexts: h3cTargetEntry.setStatus('current')
h3cTargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cTargetId.setStatus('current')
h3cTargetName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 223))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTargetName.setStatus('current')
h3cTargetMinLun = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTargetMinLun.setStatus('current')
h3cTargetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 4, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTargetRowStatus.setStatus('current')
h3cTargetAddressTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 5), )
if mibBuilder.loadTexts: h3cTargetAddressTable.setStatus('current')
h3cTargetAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 5, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetId"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetIpAddrType"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetIpAddress"))
if mibBuilder.loadTexts: h3cTargetAddressEntry.setStatus('current')
h3cTargetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 5, 1, 1), InetAddress())
if mibBuilder.loadTexts: h3cTargetIpAddress.setStatus('current')
h3cTargetIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 5, 1, 2), InetAddressType())
if mibBuilder.loadTexts: h3cTargetIpAddrType.setStatus('current')
h3cTargetIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTargetIpRowStatus.setStatus('current')
h3cTargetLvAssignTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 6), )
if mibBuilder.loadTexts: h3cTargetLvAssignTable.setStatus('current')
h3cTargetLvAssignEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 6, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetId"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cLvIndex"))
if mibBuilder.loadTexts: h3cTargetLvAssignEntry.setStatus('current')
h3cTargetLvLun = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTargetLvLun.setStatus('current')
h3cTargetLvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTargetLvRowStatus.setStatus('current')
h3cInitiatorResource = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7))
h3cInitiatorCreateIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cInitiatorCreateIndex.setStatus('current')
h3cInitiatorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7, 2), )
if mibBuilder.loadTexts: h3cInitiatorTable.setStatus('current')
h3cInitiatorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7, 2, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cSanClientId"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cInitiatorId"))
if mibBuilder.loadTexts: h3cInitiatorEntry.setStatus('current')
h3cInitiatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cInitiatorId.setStatus('current')
h3cInitiatorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 223))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cInitiatorName.setStatus('current')
h3cInitiatorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 7, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cInitiatorRowStatus.setStatus('current')
h3cTargetInitiatorAssociateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8), )
if mibBuilder.loadTexts: h3cTargetInitiatorAssociateTable.setStatus('current')
h3cTargetInitiatorAssociateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetId"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cInitiatorId"))
if mibBuilder.loadTexts: h3cTargetInitiatorAssociateEntry.setStatus('current')
h3cTIAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("read", 1), ("write", 2), ("nonexclusive", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTIAccessMode.setStatus('current')
h3cTIChap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8, 1, 2), H3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTIChap.setStatus('current')
h3cTIUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTIUserName.setStatus('current')
h3cTIPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTIPassword.setStatus('current')
h3cTIRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cTIRowStatus.setStatus('current')
h3cTISessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 9), )
if mibBuilder.loadTexts: h3cTISessionTable.setStatus('current')
h3cTISessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 9, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cTargetId"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cTISessionId"))
if mibBuilder.loadTexts: h3cTISessionEntry.setStatus('current')
h3cTISessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 9, 1, 1), H3cSessionIDType())
if mibBuilder.loadTexts: h3cTISessionId.setStatus('current')
h3cTISessionConnectionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTISessionConnectionCount.setStatus('current')
h3cTISessionInitiatorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 223))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cTISessionInitiatorName.setStatus('current')
h3cSanClientResource = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10))
h3cSanClientCreateIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cSanClientCreateIndex.setStatus('current')
h3cSanClientTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2), )
if mibBuilder.loadTexts: h3cSanClientTable.setStatus('current')
h3cSanClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cSanClientId"))
if mibBuilder.loadTexts: h3cSanClientEntry.setStatus('current')
h3cSanClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cSanClientId.setStatus('current')
h3cSanClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSanClientName.setStatus('current')
h3cSanClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("iscsi", 1), ("fc", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSanClientType.setStatus('current')
h3cFcInitiatorWwpnList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1, 4), H3cWwpnListType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFcInitiatorWwpnList.setStatus('current')
h3cFcAccessMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("read", 1), ("write", 2), ("nonexclusive", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFcAccessMode.setStatus('current')
h3cSanClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 10, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cSanClientRowStatus.setStatus('current')
h3cFcLogicResourceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 11), )
if mibBuilder.loadTexts: h3cFcLogicResourceTable.setStatus('current')
h3cFcLogicResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 11, 1), ).setIndexNames((0, "H3C-LOGIC-VOLUME-MIB", "h3cSanClientId"), (0, "H3C-LOGIC-VOLUME-MIB", "h3cLvIndex"))
if mibBuilder.loadTexts: h3cFcLogicResourceEntry.setStatus('current')
h3cFcLvLun = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cFcLvLun.setStatus('current')
h3cFcTargetWwpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 11, 1, 2), H3cWwpnListType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFcTargetWwpnName.setStatus('current')
h3cFcInitiatorWwpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 11, 1, 3), H3cWwpnListType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFcInitiatorWwpnName.setStatus('current')
h3cFcLvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 10, 5, 1, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFcLvRowStatus.setStatus('current')
mibBuilder.exportSymbols("H3C-LOGIC-VOLUME-MIB", h3cTargetIpRowStatus=h3cTargetIpRowStatus, h3cInitiatorCount=h3cInitiatorCount, h3cLvRaidUuid=h3cLvRaidUuid, PYSNMP_MODULE_ID=h3cLogicVolume, h3cSanClientRowStatus=h3cSanClientRowStatus, h3cLvSedInquiryStringKeep=h3cLvSedInquiryStringKeep, h3cTargetCreateIndex=h3cTargetCreateIndex, h3cTargetIpAddress=h3cTargetIpAddress, h3cLogicVolumeResource=h3cLogicVolumeResource, h3cSanClientType=h3cSanClientType, h3cTIRowStatus=h3cTIRowStatus, h3cTISessionInitiatorName=h3cTISessionInitiatorName, h3cLvExtendTimes=h3cLvExtendTimes, h3cTargetId=h3cTargetId, h3cTargetRowStatus=h3cTargetRowStatus, h3cLvType=h3cLvType, h3cLvIndex=h3cLvIndex, h3cInitiatorRowStatus=h3cInitiatorRowStatus, h3cTargetCount=h3cTargetCount, h3cLvState=h3cLvState, h3cSanClientCount=h3cSanClientCount, h3cTIAccessMode=h3cTIAccessMode, h3cLvMibObjects=h3cLvMibObjects, h3cTISessionTable=h3cTISessionTable, h3cTargetAddressTable=h3cTargetAddressTable, h3cTargetLvAssignTable=h3cTargetLvAssignTable, h3cLogicResourceCapacityObject=h3cLogicResourceCapacityObject, h3cInitiatorTable=h3cInitiatorTable, h3cTargetIpAddrType=h3cTargetIpAddrType, h3cLvTable=h3cLvTable, h3cInitiatorEntry=h3cInitiatorEntry, h3cFcLvRowStatus=h3cFcLvRowStatus, h3cFcLvLun=h3cFcLvLun, h3cSanClientName=h3cSanClientName, h3cTargetInitiatorAssociateTable=h3cTargetInitiatorAssociateTable, h3cTISessionConnectionCount=h3cTISessionConnectionCount, h3cTargetAddressEntry=h3cTargetAddressEntry, h3cFcInitiatorWwpnName=h3cFcInitiatorWwpnName, h3cLvExtSize=h3cLvExtSize, h3cFcLogicResourceEntry=h3cFcLogicResourceEntry, h3cLvCreateRaidSize=h3cLvCreateRaidSize, h3cInitiatorName=h3cInitiatorName, h3cTIPassword=h3cTIPassword, h3cSanClientCreateIndex=h3cSanClientCreateIndex, h3cTargetInitiatorAssociateEntry=h3cTargetInitiatorAssociateEntry, h3cInitiatorId=h3cInitiatorId, h3cTISessionEntry=h3cTISessionEntry, h3cInitiatorCreateIndex=h3cInitiatorCreateIndex, h3cTargetResource=h3cTargetResource, h3cSanClientEntry=h3cSanClientEntry, h3cLogicVolume=h3cLogicVolume, h3cTIUserName=h3cTIUserName, h3cLvCount=h3cLvCount, h3cInitiatorResource=h3cInitiatorResource, h3cFcTargetWwpnName=h3cFcTargetWwpnName, h3cSanClientTable=h3cSanClientTable, h3cLvCreateIndex=h3cLvCreateIndex, h3cLvRaidSize=h3cLvRaidSize, h3cLvExtEntry=h3cLvExtEntry, h3cTargetLvAssignEntry=h3cTargetLvAssignEntry, h3cFcInitiatorWwpnList=h3cFcInitiatorWwpnList, h3cLvAssigned=h3cLvAssigned, h3cTIChap=h3cTIChap, h3cSanClientId=h3cSanClientId, h3cLvExtRowStatus=h3cLvExtRowStatus, h3cLvSedRaidUuid=h3cLvSedRaidUuid, h3cTargetTable=h3cTargetTable, h3cLvEntry=h3cLvEntry, h3cLvExtTable=h3cLvExtTable, h3cLvRowStatus=h3cLvRowStatus, h3cTISessionId=h3cTISessionId, h3cLvMaxSize=h3cLvMaxSize, h3cTargetMinLun=h3cTargetMinLun, h3cTargetName=h3cTargetName, h3cFcAccessMode=h3cFcAccessMode, h3cSanClientResource=h3cSanClientResource, h3cFcLogicResourceTable=h3cFcLogicResourceTable, h3cLvCreateRaidUuid=h3cLvCreateRaidUuid, h3cTargetLvLun=h3cTargetLvLun, h3cTargetLvRowStatus=h3cTargetLvRowStatus, h3cTargetEntry=h3cTargetEntry, h3cLvTotalSize=h3cLvTotalSize, h3cLvName=h3cLvName)
