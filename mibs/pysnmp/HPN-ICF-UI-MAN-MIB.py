#
# PySNMP MIB module HPN-ICF-UI-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-UI-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Integer32, iso, IpAddress, Gauge32, MibIdentifier, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Bits, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "iso", "IpAddress", "Gauge32", "MibIdentifier", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Bits", "Counter32", "ModuleIdentity")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hpnicfUIMgt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2))
if mibBuilder.loadTexts: hpnicfUIMgt.setLastUpdated('200404081405Z')
if mibBuilder.loadTexts: hpnicfUIMgt.setOrganization('')
hpnicfUIMgtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1))
hpnicfUIBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1))
hpnicfUIScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 1))
hpnicfUITrapBindObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 2))
hpnicfTerminalUserName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfTerminalUserName.setStatus('current')
hpnicfTerminalSource = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfTerminalSource.setStatus('current')
hpnicfTerminalUserAuthFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("exceedRetries", 1), ("authTimeout", 2), ("otherReason", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfTerminalUserAuthFailureReason.setStatus('current')
hpnicfUINotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 3))
hpnicfUINotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 3, 0))
hpnicfLogIn = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 3, 0, 1)).setObjects(("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalUserName"), ("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalSource"))
if mibBuilder.loadTexts: hpnicfLogIn.setStatus('current')
hpnicfLogOut = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 3, 0, 2)).setObjects(("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalUserName"), ("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalSource"))
if mibBuilder.loadTexts: hpnicfLogOut.setStatus('current')
hpnicfLogInAuthenFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 1, 3, 0, 3)).setObjects(("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalUserName"), ("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalSource"), ("HPN-ICF-UI-MAN-MIB", "hpnicfTerminalUserAuthFailureReason"))
if mibBuilder.loadTexts: hpnicfLogInAuthenFailure.setStatus('current')
hpnicfVtyMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2))
hpnicfVtyAccTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfVtyAccTable.setStatus('current')
hpnicfVtyAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-UI-MAN-MIB", "hpnicfVtyAccUserIndex"), (0, "HPN-ICF-UI-MAN-MIB", "hpnicfVtyAccConnway"))
if mibBuilder.loadTexts: hpnicfVtyAccEntry.setStatus('current')
hpnicfVtyAccUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfVtyAccUserIndex.setStatus('current')
hpnicfVtyAccConnway = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 12))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("linkinbound", 3), ("acl6inbound", 11), ("acl6outbound", 12))))
if mibBuilder.loadTexts: hpnicfVtyAccConnway.setStatus('current')
hpnicfVtyAccAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVtyAccAclNum.setStatus('current')
hpnicfVtyAccEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVtyAccEntryRowStatus.setStatus('current')
hpnicfConStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 3))
hpnicfConStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfConStatusTable.setStatus('current')
hpnicfConStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-UI-MAN-MIB", "hpnicfConUserIndex"))
if mibBuilder.loadTexts: hpnicfConStatusEntry.setStatus('current')
hpnicfConUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfConUserIndex.setStatus('current')
hpnicfConReAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfConReAuth.setStatus('current')
hpnicfUIMgtMIBConformance18 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 2))
hpnicfUIMgtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 2, 1))
hpnicfUIMgtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 2, 1, 1)).setObjects(("HPN-ICF-UI-MAN-MIB", "hpnicfUIMgtBasicGroup"), ("HPN-ICF-UI-MAN-MIB", "hpnicfConStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfUIMgtMIBCompliance = hpnicfUIMgtMIBCompliance.setStatus('current')
hpnicfUIMgtManMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 2, 2))
hpnicfUIMgtBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 2, 2, 1)).setObjects(("HPN-ICF-UI-MAN-MIB", "hpnicfVtyAccAclNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfUIMgtBasicGroup = hpnicfUIMgtBasicGroup.setStatus('current')
hpnicfConStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 2, 2, 2, 2)).setObjects(("HPN-ICF-UI-MAN-MIB", "hpnicfConReAuth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfConStatusGroup = hpnicfConStatusGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-UI-MAN-MIB", hpnicfVtyAccEntryRowStatus=hpnicfVtyAccEntryRowStatus, hpnicfConStatusTable=hpnicfConStatusTable, hpnicfVtyAccConnway=hpnicfVtyAccConnway, hpnicfUIMgtManMIBGroups=hpnicfUIMgtManMIBGroups, hpnicfUIBasicInfo=hpnicfUIBasicInfo, hpnicfVtyAccUserIndex=hpnicfVtyAccUserIndex, hpnicfUIMgtMIBCompliance=hpnicfUIMgtMIBCompliance, hpnicfConStatusGroup=hpnicfConStatusGroup, hpnicfConStatusEntry=hpnicfConStatusEntry, hpnicfLogOut=hpnicfLogOut, hpnicfUIMgtBasicGroup=hpnicfUIMgtBasicGroup, hpnicfUIScalarObjects=hpnicfUIScalarObjects, hpnicfUITrapBindObjects=hpnicfUITrapBindObjects, PYSNMP_MODULE_ID=hpnicfUIMgt, hpnicfLogInAuthenFailure=hpnicfLogInAuthenFailure, hpnicfVtyAccTable=hpnicfVtyAccTable, hpnicfTerminalUserName=hpnicfTerminalUserName, hpnicfTerminalUserAuthFailureReason=hpnicfTerminalUserAuthFailureReason, hpnicfTerminalSource=hpnicfTerminalSource, hpnicfConReAuth=hpnicfConReAuth, hpnicfConStatus=hpnicfConStatus, hpnicfVtyAccEntry=hpnicfVtyAccEntry, hpnicfUIMgt=hpnicfUIMgt, hpnicfUINotifications=hpnicfUINotifications, hpnicfUINotificationsPrefix=hpnicfUINotificationsPrefix, hpnicfUIMgtMIBConformance18=hpnicfUIMgtMIBConformance18, hpnicfLogIn=hpnicfLogIn, hpnicfConUserIndex=hpnicfConUserIndex, hpnicfUIMgtObjects=hpnicfUIMgtObjects, hpnicfUIMgtMIBCompliances=hpnicfUIMgtMIBCompliances, hpnicfVtyAccAclNum=hpnicfVtyAccAclNum, hpnicfVtyMan=hpnicfVtyMan)
