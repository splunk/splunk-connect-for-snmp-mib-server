#
# PySNMP MIB module RBN-BIND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBN-BIND-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:44:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
rbnMgmt, = mibBuilder.importSymbols("RBN-SMI", "rbnMgmt")
RbnSlot, RbnPort, RbnCircuitHandle = mibBuilder.importSymbols("RBN-TC", "RbnSlot", "RbnPort", "RbnCircuitHandle")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Counter64, Gauge32, Counter32, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, Unsigned32, iso, Bits, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Gauge32", "Counter32", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "Unsigned32", "iso", "Bits", "IpAddress", "ModuleIdentity")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
rbnBindMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2352, 2, 17))
rbnBindMib.setRevisions(('2003-10-13 17:00', '2003-03-07 17:00', '2002-11-13 00:00', '2002-07-25 17:00', '2002-01-07 17:00',))
if mibBuilder.loadTexts: rbnBindMib.setLastUpdated('200310131700Z')
if mibBuilder.loadTexts: rbnBindMib.setOrganization('Redback Networks, Inc.')
rbnBindMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1))
rbnBindMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2))
rbnBindMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 17, 3))
class RbnBindType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("unbound", 1), ("authBind", 2), ("bypassBind", 3), ("interfaceBind", 4), ("subscriberBind", 5), ("l2tptunnelBind", 6), ("sessionBind", 7), ("dot1qBind", 8), ("multiIntfBind", 9), ("multiSubBind", 10), ("multiClipsBind", 11))

rbnBindTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1), )
if mibBuilder.loadTexts: rbnBindTable.setStatus('current')
rbnBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1), ).setIndexNames((0, "RBN-BIND-MIB", "rbnBindCircuit"))
if mibBuilder.loadTexts: rbnBindEntry.setStatus('current')
rbnBindCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 1), RbnCircuitHandle())
if mibBuilder.loadTexts: rbnBindCircuit.setStatus('current')
rbnBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 2), RbnBindType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindType.setStatus('current')
rbnBindName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 192))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindName.setStatus('current')
rbnBindPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindPassword.setStatus('current')
rbnBindContext = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindContext.setStatus('current')
rbnBindAuthContext = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAuthContext.setStatus('current')
rbnBindServiceGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindServiceGrp.setStatus('current')
rbnBindAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAcl.setStatus('current')
rbnBindAuthChap = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAuthChap.setStatus('current')
rbnBindAuthPap = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAuthPap.setStatus('current')
rbnBindAuthWait = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAuthWait.setStatus('current')
rbnBindAuthPapFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAuthPapFirst.setStatus('current')
rbnBindMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindMaxSessions.setStatus('current')
rbnBindPvcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 14), RbnSlot()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindPvcSlot.setStatus('current')
rbnBindPvcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 15), RbnPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindPvcPort.setStatus('current')
rbnBindVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindVpn.setStatus('current')
rbnBindAuthDhcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 17, 1, 1, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rbnBindAuthDhcp.setStatus('current')
rbnBindCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2, 1))
rbnBindGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2, 2))
rbnBindCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2, 1, 1)).setObjects(("RBN-BIND-MIB", "rbnBindConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnBindCompliance = rbnBindCompliance.setStatus('deprecated')
rbnBindCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2, 1, 2)).setObjects(("RBN-BIND-MIB", "rbnBindConfigGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnBindCompliance2 = rbnBindCompliance2.setStatus('current')
rbnBindConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2, 2, 1)).setObjects(("RBN-BIND-MIB", "rbnBindType"), ("RBN-BIND-MIB", "rbnBindName"), ("RBN-BIND-MIB", "rbnBindContext"), ("RBN-BIND-MIB", "rbnBindPassword"), ("RBN-BIND-MIB", "rbnBindAuthContext"), ("RBN-BIND-MIB", "rbnBindServiceGrp"), ("RBN-BIND-MIB", "rbnBindAcl"), ("RBN-BIND-MIB", "rbnBindAuthChap"), ("RBN-BIND-MIB", "rbnBindAuthPap"), ("RBN-BIND-MIB", "rbnBindAuthWait"), ("RBN-BIND-MIB", "rbnBindAuthPapFirst"), ("RBN-BIND-MIB", "rbnBindMaxSessions"), ("RBN-BIND-MIB", "rbnBindPvcSlot"), ("RBN-BIND-MIB", "rbnBindPvcPort"), ("RBN-BIND-MIB", "rbnBindVpn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnBindConfigGroup = rbnBindConfigGroup.setStatus('deprecated')
rbnBindConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 17, 2, 2, 2)).setObjects(("RBN-BIND-MIB", "rbnBindType"), ("RBN-BIND-MIB", "rbnBindName"), ("RBN-BIND-MIB", "rbnBindContext"), ("RBN-BIND-MIB", "rbnBindPassword"), ("RBN-BIND-MIB", "rbnBindAuthContext"), ("RBN-BIND-MIB", "rbnBindServiceGrp"), ("RBN-BIND-MIB", "rbnBindAcl"), ("RBN-BIND-MIB", "rbnBindAuthChap"), ("RBN-BIND-MIB", "rbnBindAuthPap"), ("RBN-BIND-MIB", "rbnBindAuthWait"), ("RBN-BIND-MIB", "rbnBindAuthPapFirst"), ("RBN-BIND-MIB", "rbnBindMaxSessions"), ("RBN-BIND-MIB", "rbnBindPvcSlot"), ("RBN-BIND-MIB", "rbnBindPvcPort"), ("RBN-BIND-MIB", "rbnBindVpn"), ("RBN-BIND-MIB", "rbnBindAuthDhcp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnBindConfigGroup2 = rbnBindConfigGroup2.setStatus('current')
mibBuilder.exportSymbols("RBN-BIND-MIB", rbnBindType=rbnBindType, rbnBindEntry=rbnBindEntry, rbnBindName=rbnBindName, rbnBindAuthWait=rbnBindAuthWait, rbnBindMIBObjects=rbnBindMIBObjects, rbnBindConfigGroup2=rbnBindConfigGroup2, rbnBindPassword=rbnBindPassword, rbnBindVpn=rbnBindVpn, rbnBindMaxSessions=rbnBindMaxSessions, rbnBindPvcSlot=rbnBindPvcSlot, rbnBindAuthContext=rbnBindAuthContext, rbnBindAuthPap=rbnBindAuthPap, rbnBindServiceGrp=rbnBindServiceGrp, rbnBindAcl=rbnBindAcl, rbnBindMIBNotifications=rbnBindMIBNotifications, rbnBindMIBConformance=rbnBindMIBConformance, rbnBindAuthPapFirst=rbnBindAuthPapFirst, rbnBindAuthChap=rbnBindAuthChap, rbnBindMib=rbnBindMib, RbnBindType=RbnBindType, rbnBindContext=rbnBindContext, rbnBindCompliance=rbnBindCompliance, rbnBindConfigGroup=rbnBindConfigGroup, PYSNMP_MODULE_ID=rbnBindMib, rbnBindAuthDhcp=rbnBindAuthDhcp, rbnBindCompliance2=rbnBindCompliance2, rbnBindCompliances=rbnBindCompliances, rbnBindGroups=rbnBindGroups, rbnBindCircuit=rbnBindCircuit, rbnBindTable=rbnBindTable, rbnBindPvcPort=rbnBindPvcPort)
