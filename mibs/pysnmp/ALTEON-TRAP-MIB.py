#
# PySNMP MIB module ALTEON-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTEON-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:05:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
slbCurCfgRealServerName, slbCurCfgVirtServiceRealPort, altswitchTraps, fltCurCfgIndx, slbCurCfgRealServerIpAddr, ipCurCfgGwIndex, slbCurCfgRealServerIndex, fltCurCfgPortIndx, ipCurCfgGwAddr = mibBuilder.importSymbols("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName", "slbCurCfgVirtServiceRealPort", "altswitchTraps", "fltCurCfgIndx", "slbCurCfgRealServerIpAddr", "ipCurCfgGwIndex", "slbCurCfgRealServerIndex", "fltCurCfgPortIndx", "ipCurCfgGwAddr")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysLocation, sysContact, sysName = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation", "sysContact", "sysName")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, NotificationType, MibIdentifier, Bits, ObjectIdentity, Unsigned32, Counter64, Integer32, Counter32, iso, ModuleIdentity, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "NotificationType", "MibIdentifier", "Bits", "ObjectIdentity", "Unsigned32", "Counter64", "Integer32", "Counter32", "iso", "ModuleIdentity", "IpAddress", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
altSwPrimaryPowerSuppylFailure = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,1))
altSwRedunPowerSuppylFailure = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,2))
altSwDefGwUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,3)).setObjects(("ALTEON-PRIVATE-MIBS", "ipCurCfgGwIndex"), ("ALTEON-PRIVATE-MIBS", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwDefGwDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,4)).setObjects(("ALTEON-PRIVATE-MIBS", "ipCurCfgGwIndex"), ("ALTEON-PRIVATE-MIBS", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwDefGwInService = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,5)).setObjects(("ALTEON-PRIVATE-MIBS", "ipCurCfgGwIndex"), ("ALTEON-PRIVATE-MIBS", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwDefGwNotInService = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,6)).setObjects(("ALTEON-PRIVATE-MIBS", "ipCurCfgGwIndex"), ("ALTEON-PRIVATE-MIBS", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbRealServerUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,7)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbRealServerDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,8)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbRealServerMaxConnReached = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,9)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbBkupRealServerAct = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,10)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbBkupRealServerDeact = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,11)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbBkupRealServerActOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,12)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbBkupRealServerDeactOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,13)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbFailoverStandby = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,14))
altSwSlbFailoverActive = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,15))
altSwSlbFailoverSwitchUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,16))
altSwSlbFailoverSwitchDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,17))
altSwfltFilterFired = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,18)).setObjects(("ALTEON-PRIVATE-MIBS", "fltCurCfgIndx"), ("ALTEON-PRIVATE-MIBS", "fltCurCfgPortIndx"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbRealServerServiceUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,19)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgVirtServiceRealPort"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
altSwSlbRealServerServiceDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 1, 13) + (0,20)).setObjects(("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIndex"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerIpAddr"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgRealServerName"), ("ALTEON-PRIVATE-MIBS", "slbCurCfgVirtServiceRealPort"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
mibBuilder.exportSymbols("ALTEON-TRAP-MIB", altSwSlbFailoverActive=altSwSlbFailoverActive, altSwSlbRealServerServiceDown=altSwSlbRealServerServiceDown, altSwfltFilterFired=altSwfltFilterFired, altSwSlbFailoverStandby=altSwSlbFailoverStandby, altSwDefGwUp=altSwDefGwUp, altSwRedunPowerSuppylFailure=altSwRedunPowerSuppylFailure, altSwDefGwDown=altSwDefGwDown, altSwDefGwNotInService=altSwDefGwNotInService, altSwSlbRealServerServiceUp=altSwSlbRealServerServiceUp, altSwSlbBkupRealServerDeactOverflow=altSwSlbBkupRealServerDeactOverflow, altSwDefGwInService=altSwDefGwInService, altSwSlbFailoverSwitchDown=altSwSlbFailoverSwitchDown, altSwSlbRealServerMaxConnReached=altSwSlbRealServerMaxConnReached, altSwSlbBkupRealServerDeact=altSwSlbBkupRealServerDeact, altSwSlbRealServerDown=altSwSlbRealServerDown, altSwSlbFailoverSwitchUp=altSwSlbFailoverSwitchUp, altSwSlbBkupRealServerActOverflow=altSwSlbBkupRealServerActOverflow, altSwSlbBkupRealServerAct=altSwSlbBkupRealServerAct, altSwSlbRealServerUp=altSwSlbRealServerUp, altSwPrimaryPowerSuppylFailure=altSwPrimaryPowerSuppylFailure)
