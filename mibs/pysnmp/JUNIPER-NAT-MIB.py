#
# PySNMP MIB module JUNIPER-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressIPv4, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressIPv4", "InetAddressType")
jnxSvcsMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxSvcsMibRoot")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, TimeTicks, ObjectIdentity, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Bits, Counter64, ModuleIdentity, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "TimeTicks", "ObjectIdentity", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Bits", "Counter64", "ModuleIdentity", "Gauge32", "Counter32")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
jnxNatMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1))
jnxNatMIB.setRevisions(('2010-07-12 20:22',))
if mibBuilder.loadTexts: jnxNatMIB.setLastUpdated('201007122022Z')
if mibBuilder.loadTexts: jnxNatMIB.setOrganization('Juniper Networks, Inc.')
jnxNatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 0))
jnxNatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1))
jnxNatTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 2))
jnxSrcNatStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1), )
if mibBuilder.loadTexts: jnxSrcNatStatsTable.setStatus('current')
jnxSrcNatStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1), ).setIndexNames((0, "JUNIPER-NAT-MIB", "jnxNatSrcPoolName"))
if mibBuilder.loadTexts: jnxSrcNatStatsEntry.setStatus('current')
jnxNatSrcPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: jnxNatSrcPoolName.setStatus('current')
jnxNatSrcXlatedAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcXlatedAddrType.setStatus('current')
jnxNatSrcPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("static", 1), ("dynamic-napt", 2), ("dynamic-nat", 3), ("basic-nat44", 11), ("dynamic-nat44", 12), ("napt-44", 13), ("dnat-44", 14), ("stateful-nat64", 15), ("stateless-nat64", 16), ("basic-nat-pt", 17), ("napt-pt", 18), ("basic-nat66", 19), ("stateless-nat66", 20), ("napt-66", 21), ("twice-napt-44", 22), ("twice-basic-nat-44", 23), ("twice-dynamic-nat-44", 24), ("det-napt44", 25), ("sd-napt44", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcPoolType.setStatus('current')
jnxNatSrcNumPortAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcNumPortAvail.setStatus('current')
jnxNatSrcNumPortInuse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcNumPortInuse.setStatus('current')
jnxNatSrcNumAddressAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcNumAddressAvail.setStatus('current')
jnxNatSrcNumAddressInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcNumAddressInUse.setStatus('current')
jnxNatSrcNumSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatSrcNumSessions.setStatus('current')
jnxNatRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 2), )
if mibBuilder.loadTexts: jnxNatRuleTable.setStatus('current')
jnxNatRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 2, 1), ).setIndexNames((0, "JUNIPER-NAT-MIB", "jnxNatRuleName"))
if mibBuilder.loadTexts: jnxNatRuleEntry.setStatus('current')
jnxNatRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)))
if mibBuilder.loadTexts: jnxNatRuleName.setStatus('current')
jnxNatRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("static-source", 1), ("static-destination", 2), ("dynamic-source", 3), ("napt", 4), ("basic-nat44", 11), ("dynamic-nat44", 12), ("napt-44", 13), ("dnat-44", 14), ("stateful-nat64", 15), ("stateless-nat64", 16), ("basic-nat-pt", 17), ("napt-pt", 18), ("basic-nat66", 19), ("stateless-nat66", 20), ("napt-66", 21), ("twice-napt-44", 22), ("twice-basic-nat-44", 23), ("twice-dynamic-nat-44", 24), ("det-napt44", 25), ("sd-napt44", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatRuleType.setStatus('current')
jnxNatRuleTransHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatRuleTransHits.setStatus('current')
jnxNatPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 3), )
if mibBuilder.loadTexts: jnxNatPoolTable.setStatus('current')
jnxNatPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 3, 1), ).setIndexNames((0, "JUNIPER-NAT-MIB", "jnxNatPoolName"))
if mibBuilder.loadTexts: jnxNatPoolEntry.setStatus('current')
jnxNatPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: jnxNatPoolName.setStatus('current')
jnxNatPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("static-source", 1), ("static-destination", 2), ("dynamic-source", 3), ("napt", 4), ("basic-nat44", 11), ("dynamic-nat44", 12), ("napt-44", 13), ("dnat-44", 14), ("stateful-nat64", 15), ("stateless-nat64", 16), ("basic-nat-pt", 17), ("napt-pt", 18), ("basic-nat66", 19), ("stateless-nat66", 20), ("napt-66", 21), ("twice-napt-44", 22), ("twice-basic-nat-44", 23), ("twice-dynamic-nat-44", 24), ("det-napt44", 25), ("sd-napt44", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatPoolType.setStatus('current')
jnxNatPoolTransHits = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxNatPoolTransHits.setStatus('current')
jnxNatAddrPoolUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxNatAddrPoolUtil.setStatus('current')
jnxNatTrapSrcPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxNatTrapSrcPoolName.setStatus('current')
jnxNatAddrPoolThresholdStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 59, 1, 0, 1)).setObjects(("JUNIPER-NAT-MIB", "jnxNatTrapSrcPoolName"), ("JUNIPER-NAT-MIB", "jnxNatAddrPoolUtil"))
if mibBuilder.loadTexts: jnxNatAddrPoolThresholdStatus.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-NAT-MIB", jnxNatRuleName=jnxNatRuleName, jnxNatPoolType=jnxNatPoolType, jnxSrcNatStatsEntry=jnxSrcNatStatsEntry, jnxNatPoolEntry=jnxNatPoolEntry, jnxNatAddrPoolThresholdStatus=jnxNatAddrPoolThresholdStatus, jnxNatPoolName=jnxNatPoolName, jnxNatSrcNumSessions=jnxNatSrcNumSessions, jnxNatRuleTransHits=jnxNatRuleTransHits, jnxNatPoolTable=jnxNatPoolTable, jnxNatSrcPoolType=jnxNatSrcPoolType, jnxNatPoolTransHits=jnxNatPoolTransHits, jnxNatRuleEntry=jnxNatRuleEntry, jnxNatTrapSrcPoolName=jnxNatTrapSrcPoolName, jnxNatMIB=jnxNatMIB, jnxSrcNatStatsTable=jnxSrcNatStatsTable, jnxNatRuleTable=jnxNatRuleTable, jnxNatNotifications=jnxNatNotifications, jnxNatSrcNumAddressAvail=jnxNatSrcNumAddressAvail, PYSNMP_MODULE_ID=jnxNatMIB, jnxNatSrcXlatedAddrType=jnxNatSrcXlatedAddrType, jnxNatSrcNumAddressInUse=jnxNatSrcNumAddressInUse, jnxNatSrcNumPortAvail=jnxNatSrcNumPortAvail, jnxNatSrcNumPortInuse=jnxNatSrcNumPortInuse, jnxNatAddrPoolUtil=jnxNatAddrPoolUtil, jnxNatRuleType=jnxNatRuleType, jnxNatSrcPoolName=jnxNatSrcPoolName, jnxNatTrapVars=jnxNatTrapVars, jnxNatObjects=jnxNatObjects)
