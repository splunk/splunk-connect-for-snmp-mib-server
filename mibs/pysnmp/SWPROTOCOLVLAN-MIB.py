#
# PySNMP MIB module SWPROTOCOLVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SWPROTOCOLVLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:06:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
dot1vProtocolPortEntry, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1vProtocolPortEntry")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, ModuleIdentity, TimeTicks, ObjectIdentity, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, MibIdentifier, Counter32, IpAddress, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "MibIdentifier", "Counter32", "IpAddress", "Counter64", "iso")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
swProtocolVLANMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 16))
if mibBuilder.loadTexts: swProtocolVLANMIB.setLastUpdated('0710260000Z')
if mibBuilder.loadTexts: swProtocolVLANMIB.setOrganization('D-Link Corp.')
class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swProtocolVLANCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 16, 1))
swProtocolVLANTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1), )
if mibBuilder.loadTexts: swProtocolVLANTable.setStatus('obsolete')
swProtocolVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1), ).setIndexNames((0, "SWPROTOCOLVLAN-MIB", "swProtocolVLANIndex"))
if mibBuilder.loadTexts: swProtocolVLANEntry.setStatus('obsolete')
swProtocolVLANIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANIndex.setStatus('obsolete')
swProtocolVLANName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANName.setStatus('obsolete')
swProtocolVLANProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("dot1q-vlan", 1), ("protocol-ip", 2), ("protocol-ipx803dot3", 3), ("protocol-ipx802dot2", 4), ("protocol-ipxSnap", 5), ("protocol-ipxEthernet2", 6), ("protocol-appleTalk", 7), ("protocol-decLat", 8), ("protocol-dexOther", 9), ("protocol-sna802dot2", 10), ("protocol-snaEthernet2", 11), ("protocol-netBios", 12), ("protocol-xns", 13), ("protocol-vines", 14), ("protocol-ipV6", 15), ("protocol-userDefined", 16), ("protocol-rarp", 17)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANProtocolType.setStatus('obsolete')
swProtocolVLANAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANAdvertisement.setStatus('obsolete')
swProtocolVLANUserDefinedProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANUserDefinedProtocol.setStatus('obsolete')
swProtocolVLANencap = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("llc", 2), ("snap", 3), ("all", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANencap.setStatus('obsolete')
swProtocolVLANRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swProtocolVLANRowStatus.setStatus('obsolete')
swdot1vProtocolPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 2), )
if mibBuilder.loadTexts: swdot1vProtocolPortTable.setStatus('current')
swdot1vProtocolPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 2, 1), )
dot1vProtocolPortEntry.registerAugmentions(("SWPROTOCOLVLAN-MIB", "swdot1vProtocolPortEntry"))
swdot1vProtocolPortEntry.setIndexNames(*dot1vProtocolPortEntry.getIndexNames())
if mibBuilder.loadTexts: swdot1vProtocolPortEntry.setStatus('current')
swdot1vProtocolPortGroupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 16, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swdot1vProtocolPortGroupPriority.setStatus('current')
mibBuilder.exportSymbols("SWPROTOCOLVLAN-MIB", swdot1vProtocolPortEntry=swdot1vProtocolPortEntry, swProtocolVLANAdvertisement=swProtocolVLANAdvertisement, swProtocolVLANencap=swProtocolVLANencap, PYSNMP_MODULE_ID=swProtocolVLANMIB, swProtocolVLANEntry=swProtocolVLANEntry, swProtocolVLANName=swProtocolVLANName, swProtocolVLANRowStatus=swProtocolVLANRowStatus, swdot1vProtocolPortGroupPriority=swdot1vProtocolPortGroupPriority, swProtocolVLANCtrl=swProtocolVLANCtrl, swProtocolVLANIndex=swProtocolVLANIndex, swProtocolVLANUserDefinedProtocol=swProtocolVLANUserDefinedProtocol, swProtocolVLANProtocolType=swProtocolVLANProtocolType, swProtocolVLANTable=swProtocolVLANTable, swProtocolVLANMIB=swProtocolVLANMIB, swdot1vProtocolPortTable=swdot1vProtocolPortTable, PortList=PortList)
