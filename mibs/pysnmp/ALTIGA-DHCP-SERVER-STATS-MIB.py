#
# PySNMP MIB module ALTIGA-DHCP-SERVER-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-DHCP-SERVER-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:05:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alDhcpServerMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alDhcpServerMibModule")
alStatsDhcpServer, alDhcpServerGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alStatsDhcpServer", "alDhcpServerGroup")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, Counter64, Integer32, Bits, NotificationType, TimeTicks, IpAddress, Unsigned32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "Integer32", "Bits", "NotificationType", "TimeTicks", "IpAddress", "Unsigned32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "Counter32")
DisplayString, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "MacAddress")
altigaDhcpServerStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2))
altigaDhcpServerStatsMibModule.setRevisions(('2002-09-05 13:00', '2002-07-10 00:00',))
if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setLastUpdated('200209051300Z')
if mibBuilder.loadTexts: altigaDhcpServerStatsMibModule.setOrganization('Cisco Systems, Inc.')
alStatsDhcpServerGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1))
alDhcpServerStatsActiveLeases = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsActiveLeases.setStatus('current')
alDhcpServerStatsMaximumLeases = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsMaximumLeases.setStatus('current')
alDhcpServerStatsDiscoversRcvd = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsDiscoversRcvd.setStatus('current')
alDhcpServerStatsOffersSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsOffersSent.setStatus('current')
alDhcpServerStatsAcksSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsAcksSent.setStatus('current')
alDhcpServerStatsNaksSent = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsNaksSent.setStatus('current')
alDhcpServerStatsReqTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsReqTimeouts.setStatus('current')
alDhcpServerStatsSessTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2), )
if mibBuilder.loadTexts: alDhcpServerStatsSessTable.setStatus('current')
alDhcpServerStatsSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1), ).setIndexNames((0, "ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessId"))
if mibBuilder.loadTexts: alDhcpServerStatsSessEntry.setStatus('current')
alDhcpServerStatsSessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alDhcpServerStatsSessRowStatus.setStatus('current')
alDhcpServerStatsSessId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessId.setStatus('current')
alDhcpServerStatsSessIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessIpAddr.setStatus('current')
alDhcpServerStatsSessLeaseExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessLeaseExpire.setStatus('current')
alDhcpServerStatsSessMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessMacAddr.setStatus('current')
alDhcpServerStatsSessHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 37, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alDhcpServerStatsSessHostName.setStatus('current')
altigaDhcpServerStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2, 1))
altigaDhcpServerStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2, 1, 1))
altigaDhcpServerStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 42, 2, 1, 1, 1)).setObjects(("ALTIGA-DHCP-SERVER-STATS-MIB", "altigaDhcpServerStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaDhcpServerStatsMibCompliance = altigaDhcpServerStatsMibCompliance.setStatus('current')
altigaDhcpServerStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 37, 2)).setObjects(("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsActiveLeases"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsMaximumLeases"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsDiscoversRcvd"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsOffersSent"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsAcksSent"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsNaksSent"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsReqTimeouts"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessRowStatus"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessId"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessIpAddr"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessLeaseExpire"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessMacAddr"), ("ALTIGA-DHCP-SERVER-STATS-MIB", "alDhcpServerStatsSessHostName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaDhcpServerStatsGroup = altigaDhcpServerStatsGroup.setStatus('current')
mibBuilder.exportSymbols("ALTIGA-DHCP-SERVER-STATS-MIB", altigaDhcpServerStatsGroup=altigaDhcpServerStatsGroup, altigaDhcpServerStatsMibCompliance=altigaDhcpServerStatsMibCompliance, alDhcpServerStatsSessId=alDhcpServerStatsSessId, alDhcpServerStatsDiscoversRcvd=alDhcpServerStatsDiscoversRcvd, alDhcpServerStatsAcksSent=alDhcpServerStatsAcksSent, alDhcpServerStatsSessTable=alDhcpServerStatsSessTable, alDhcpServerStatsSessIpAddr=alDhcpServerStatsSessIpAddr, alDhcpServerStatsSessLeaseExpire=alDhcpServerStatsSessLeaseExpire, altigaDhcpServerStatsMibConformance=altigaDhcpServerStatsMibConformance, alDhcpServerStatsMaximumLeases=alDhcpServerStatsMaximumLeases, alDhcpServerStatsNaksSent=alDhcpServerStatsNaksSent, altigaDhcpServerStatsMibCompliances=altigaDhcpServerStatsMibCompliances, alStatsDhcpServerGlobal=alStatsDhcpServerGlobal, alDhcpServerStatsSessMacAddr=alDhcpServerStatsSessMacAddr, alDhcpServerStatsReqTimeouts=alDhcpServerStatsReqTimeouts, alDhcpServerStatsSessRowStatus=alDhcpServerStatsSessRowStatus, PYSNMP_MODULE_ID=altigaDhcpServerStatsMibModule, alDhcpServerStatsSessEntry=alDhcpServerStatsSessEntry, alDhcpServerStatsOffersSent=alDhcpServerStatsOffersSent, altigaDhcpServerStatsMibModule=altigaDhcpServerStatsMibModule, alDhcpServerStatsActiveLeases=alDhcpServerStatsActiveLeases, alDhcpServerStatsSessHostName=alDhcpServerStatsSessHostName)
