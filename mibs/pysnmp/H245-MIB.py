#
# PySNMP MIB module H245-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H245-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:07:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
mmH245Root, MmH323EndpointType, MmTAddressTag = mibBuilder.importSymbols("MULTI-MEDIA-MIB-TC", "mmH245Root", "MmH323EndpointType", "MmTAddressTag")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, Unsigned32, IpAddress, MibIdentifier, TimeTicks, Counter64, NotificationType, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "Unsigned32", "IpAddress", "MibIdentifier", "TimeTicks", "Counter64", "NotificationType", "ObjectIdentity", "Counter32")
TextualConvention, TruthValue, DisplayString, TAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "TAddress")
h245 = ModuleIdentity((0, 0, 8, 341, 1, 3, 1))
if mibBuilder.loadTexts: h245.setLastUpdated('9812202253Z')
if mibBuilder.loadTexts: h245.setOrganization('ITU-T')
h245Configuration = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 1))
h245ControlChannel = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 2))
h245CapExchange = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 3))
h245LogChannels = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 4))
h245Conference = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 5))
h245Misc = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 6))
h245MIBConformance = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 7))
h245ConfigurationTable = MibTable((0, 0, 8, 341, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: h245ConfigurationTable.setStatus('current')
h245ConfigurationTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h245ConfigurationTableEntry.setStatus('current')
h245ConfigT101Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT101Timer.setStatus('current')
h245ConfigT102Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT102Timer.setStatus('current')
h245ConfigT103Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT103Timer.setStatus('current')
h245ConfigT104Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT104Timer.setStatus('current')
h245ConfigT105Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT105Timer.setStatus('current')
h245ConfigT106Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT106Timer.setStatus('current')
h245ConfigT107Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT107Timer.setStatus('current')
h245ConfigT108Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT108Timer.setStatus('current')
h245ConfigT109Timer = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigT109Timer.setStatus('current')
h245ConfigN100Counter = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h245ConfigN100Counter.setStatus('current')
h245ControlChannelStatsTable = MibTable((0, 0, 8, 341, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: h245ControlChannelStatsTable.setStatus('current')
h245ControlChannelStatsTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h245ControlChannelStatsTableEntry.setStatus('current')
h245ControlChannelNumberOfListenPorts = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelNumberOfListenPorts.setStatus('current')
h245ControlChannelMaxConnections = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMaxConnections.setStatus('current')
h245ControlChannelNumberOfListenFails = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelNumberOfListenFails.setStatus('current')
h245ControlChannelNumberOfActiveConnections = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelNumberOfActiveConnections.setStatus('current')
h245ControlChannelMasterSlaveMaxRetries = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveMaxRetries.setStatus('current')
h245ControlChannelConnectionAttemptsFail = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelConnectionAttemptsFail.setStatus('current')
h245ControlChanneMasterSlavelDeterminations = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChanneMasterSlavelDeterminations.setStatus('current')
h245ControlChannelMasterSlaveAcks = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveAcks.setStatus('current')
h245ControlChannelMasterSlaveRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveRejects.setStatus('current')
h245ControlChannelMasterSlaveT106Rejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveT106Rejects.setStatus('current')
h245ControlChannelMasterSlaveMSDRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveMSDRejects.setStatus('current')
h245ControlChannelNumberOfMasterSlaveInconsistentFieldRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelNumberOfMasterSlaveInconsistentFieldRejects.setStatus('current')
h245ControlChannelMasterSlaveMaxCounterRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveMaxCounterRejects.setStatus('current')
h245ControlChannelMasterSlaveReleases = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveReleases.setStatus('current')
h245ControlChannelNumberOfTunnels = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelNumberOfTunnels.setStatus('current')
h245ControlChannelMasterSlaveTable = MibTable((0, 0, 8, 341, 1, 3, 1, 2, 2), )
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveTable.setStatus('current')
h245ControlChannelMasterSlaveTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245ControlChannelSrcAddressTag"), (0, "H245-MIB", "h245ControlChannelSrcTransporTAddress"), (0, "H245-MIB", "h245ControlChannelDesTAddressTag"), (0, "H245-MIB", "h245ControlChannelDestTransporTAddress"))
if mibBuilder.loadTexts: h245ControlChannelMasterSlaveTableEntry.setStatus('current')
h245ControlChannelSrcAddressTag = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 1), MmTAddressTag())
if mibBuilder.loadTexts: h245ControlChannelSrcAddressTag.setStatus('current')
h245ControlChannelSrcTransporTAddress = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 2), TAddress())
if mibBuilder.loadTexts: h245ControlChannelSrcTransporTAddress.setStatus('current')
h245ControlChannelDesTAddressTag = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 3), MmTAddressTag())
if mibBuilder.loadTexts: h245ControlChannelDesTAddressTag.setStatus('current')
h245ControlChannelDestTransporTAddress = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 4), TAddress())
if mibBuilder.loadTexts: h245ControlChannelDestTransporTAddress.setStatus('current')
h245ControlChannelIndex = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelIndex.setStatus('current')
h245ControlChannelMSDState = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("outgoingWaitingResponse", 1), ("incomingWaitingResponse", 2), ("idle", 3), ("master", 4), ("slave", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelMSDState.setStatus('current')
h245ControlChannelTerminalType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 7), MmH323EndpointType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelTerminalType.setStatus('current')
h245ControlChannelNumberOfMSDRetries = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelNumberOfMSDRetries.setStatus('current')
h245ControlChannelIsTunneling = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 2, 2, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ControlChannelIsTunneling.setStatus('current')
h245CapExchangeStatsTable = MibTable((0, 0, 8, 341, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: h245CapExchangeStatsTable.setStatus('current')
h245CapExchangeStatsTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h245CapExchangeStatsTableEntry.setStatus('current')
h245CapExchangeSets = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeSets.setStatus('current')
h245CapExchangeAcks = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeAcks.setStatus('current')
h245CapExchangeRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeRejects.setStatus('current')
h245CapExchangeRejectUnspecified = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeRejectUnspecified.setStatus('current')
h245CapExchangeRejectUndefinedTableEntryUsed = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeRejectUndefinedTableEntryUsed.setStatus('current')
h245CapExchangeRejectDescriptorCapacityExceeded = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeRejectDescriptorCapacityExceeded.setStatus('current')
h245CapExchangeRejectTableEntryCapacityExeeded = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeRejectTableEntryCapacityExeeded.setStatus('current')
h245CapExchangeReleases = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeReleases.setStatus('current')
h245CapExchangeCapabilityTable = MibTable((0, 0, 8, 341, 1, 3, 1, 3, 2), )
if mibBuilder.loadTexts: h245CapExchangeCapabilityTable.setStatus('current')
h245CapExchangeCapabilityTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245ControlChannelIndex"), (0, "H245-MIB", "h245CapExchangeDirection"))
if mibBuilder.loadTexts: h245CapExchangeCapabilityTableEntry.setStatus('current')
h245CapExchangeDirection = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2))))
if mibBuilder.loadTexts: h245CapExchangeDirection.setStatus('current')
h245CapExchangeState = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sent", 1), ("acked", 2), ("reject", 3), ("release", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeState.setStatus('current')
h245CapExchangeProtocolId = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeProtocolId.setStatus('current')
h245CapExchangeRejectCause = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unspecified", 1), ("undefinedTableEntryUsed", 2), ("descriptorCapacityExceeded", 3), ("tableEntryCapacityExceeded", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeRejectCause.setStatus('current')
h245CapExchangeMultiplexCapability = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeMultiplexCapability.setStatus('current')
h245CapExchangeCapability = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeCapability.setStatus('current')
h245CapExchangeCapabilityDescriptors = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 3, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245CapExchangeCapabilityDescriptors.setStatus('current')
h245LogChannelsChannelTable = MibTable((0, 0, 8, 341, 1, 3, 1, 4, 1), )
if mibBuilder.loadTexts: h245LogChannelsChannelTable.setStatus('current')
h245LogChannelsChannelTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245ControlChannelIndex"), (0, "H245-MIB", "h245LogChannelsChannelNumber"), (0, "H245-MIB", "h245LogChannelsChannelDirection"))
if mibBuilder.loadTexts: h245LogChannelsChannelTableEntry.setStatus('current')
h245LogChannelsChannelNumber = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h245LogChannelsChannelNumber.setStatus('current')
h245LogChannelsChannelDirection = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("receive", 1), ("transmit", 2))))
if mibBuilder.loadTexts: h245LogChannelsChannelDirection.setStatus('current')
h245LogChannelsIndex = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsIndex.setStatus('current')
h245LogChannelsChannelState = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("awaitingEstablishment", 1), ("established", 2), ("awaitingRelease", 3), ("awaitingConfirmation", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsChannelState.setStatus('current')
h245LogChannelsMediaTableType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("nonStandard", 1), ("videoNonStandard", 2), ("h261VideoCapability", 3), ("h262VideoCapability", 4), ("h263VideoCapability", 5), ("is11172VideoCapability", 6), ("audioNonStandard", 7), ("g711Alaw64k", 8), ("g711Alaw56k", 9), ("g711Ulaw64k", 10), ("g711Ulaw56k", 11), ("g722-64k", 12), ("g722-56k", 13), ("g722-48k", 14), ("g7231", 15), ("g728", 16), ("g729", 17), ("g729AnnexA", 18), ("is11172AudioCapability", 19), ("is13818AudioCapability", 20), ("g729wAnnexB", 21), ("g729AnnexAwAnnexB", 22), ("g7231AnnexCCapability", 23), ("gsmFullRate", 24), ("gsmHalfRate", 25), ("gsmEnhancedFullRate", 26), ("dataNonStandard", 27), ("t120", 28), ("dsm-cc", 29), ("userData", 30), ("t84", 31), ("t434", 32), ("h224", 33), ("nlpid", 34), ("dsvdControl", 35), ("h222DataPartitioning", 36), ("t30fax", 37), ("t140", 38), ("h233EncryptionCapability", 39), ("conferenceCapability", 40), ("h235SecurityCapability", 41), ("maxPendingReplacementFor", 42), ("userInputCapability", 43), ("h225", 44), ("h222", 45), ("h223", 46), ("v76", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsMediaTableType.setStatus('current')
h245LogChannelsH225Table = MibTable((0, 0, 8, 341, 1, 3, 1, 4, 2), )
if mibBuilder.loadTexts: h245LogChannelsH225Table.setStatus('current')
h245LogChannelsH225TableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245LogChannelsIndex"))
if mibBuilder.loadTexts: h245LogChannelsH225TableEntry.setStatus('current')
h245LogChannelsSessionId = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsSessionId.setStatus('current')
h245LogChannelsAssociateSessionId = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsAssociateSessionId.setStatus('current')
h245LogChannelsMediaChannel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 3), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsMediaChannel.setStatus('current')
h245LogChannelsMediaGuaranteedDelivery = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsMediaGuaranteedDelivery.setStatus('current')
h245LogChannelsMediaControlChannel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 5), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsMediaControlChannel.setStatus('current')
h245LogChannelsMediaControlGuaranteedDelivery = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsMediaControlGuaranteedDelivery.setStatus('current')
h245LogChannelsSilenceSuppression = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsSilenceSuppression.setStatus('current')
h245LogChannelsDestination = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsDestination.setStatus('current')
h245LogChannelsDynamicRTPPayloadType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsDynamicRTPPayloadType.setStatus('current')
h245LogChannelsH261aVideoPacketization = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsH261aVideoPacketization.setStatus('current')
h245LogChannelsRTPPayloadDescriptor = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsRTPPayloadDescriptor.setStatus('current')
h245LogChannelsRTPPayloadType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsRTPPayloadType.setStatus('current')
h245LogChannelsTransportCapability = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsTransportCapability.setStatus('current')
h245LogChannelsRedundancyEncoding = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsRedundancyEncoding.setStatus('current')
h245LogChannelsSrcTerminalLabel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChannelsSrcTerminalLabel.setStatus('current')
h245LogChannelOpenLogicalChannelTable = MibTable((0, 0, 8, 341, 1, 3, 1, 4, 3), )
if mibBuilder.loadTexts: h245LogChannelOpenLogicalChannelTable.setStatus('current')
h245LogChannelOpenLogicalChannelTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 4, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h245LogChannelOpenLogicalChannelTableEntry.setStatus('current')
h245LogChanOpenLogChanTotalRequests = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanTotalRequests.setStatus('current')
h245LogChanOpenLogChanAcks = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanAcks.setStatus('current')
h245LogChanOpenLogChanConfirms = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanConfirms.setStatus('current')
h245LogChanOpenLogChanRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejects.setStatus('current')
h245LogChanOpenLogChanRejectUnspecified = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectUnspecified.setStatus('current')
h245LogChanOpenLogChanRejectUnsuitableReverseParameters = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectUnsuitableReverseParameters.setStatus('current')
h245LogChanOpenLogChanRejectDataTypeNotSupported = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectDataTypeNotSupported.setStatus('current')
h245LogChanOpenLogChanRejectDataTypeNotAvailable = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectDataTypeNotAvailable.setStatus('current')
h245LogChanOpenLogChanRejectUnknownDataType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectUnknownDataType.setStatus('current')
h245LogChanOpenLogChanRejectDataTypeALCombinationNotSupported = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectDataTypeALCombinationNotSupported.setStatus('current')
h245LogChanOpenLogChanRejectMulticastChannelNotAllowed = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectMulticastChannelNotAllowed.setStatus('current')
h245LogChanOpenLogChanRejectInsuffientBandwdith = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectInsuffientBandwdith.setStatus('current')
h245LogChanOpenLogChanRejectSeparateStackEstablishmentFailed = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectSeparateStackEstablishmentFailed.setStatus('current')
h245LogChanOpenLogChanRejectInvalidSessionID = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectInvalidSessionID.setStatus('current')
h245LogChanOpenLogChanRejectMasterSlaveConflict = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectMasterSlaveConflict.setStatus('current')
h245LogChanOpenLogChanRejectWaitForCommunicationMode = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectWaitForCommunicationMode.setStatus('current')
h245LogChanOpenLogChanRejectInvalidDependentChannel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanOpenLogChanRejectInvalidDependentChannel.setStatus('current')
h245LogChansOpenLogChanRejectReplacementForRejected = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChansOpenLogChanRejectReplacementForRejected.setStatus('current')
h245LogChannelCloseLogicalChannelTable = MibTable((0, 0, 8, 341, 1, 3, 1, 4, 4), )
if mibBuilder.loadTexts: h245LogChannelCloseLogicalChannelTable.setStatus('current')
h245LogChannelCloseLogicalChannelTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 4, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h245LogChannelCloseLogicalChannelTableEntry.setStatus('current')
h245LogChanCloseLogChannels = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanCloseLogChannels.setStatus('current')
h245LogChanCloseLogChanAcks = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanCloseLogChanAcks.setStatus('current')
h245LogChanCloseLogChanRequests = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanCloseLogChanRequests.setStatus('current')
h245LogChanCloseLogChanRequestsAcks = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanCloseLogChanRequestsAcks.setStatus('current')
h245LogChanCloseLogChanRequestRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanCloseLogChanRequestRejects.setStatus('current')
h245LogChanCloseLogChanRequestReleases = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 4, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245LogChanCloseLogChanRequestReleases.setStatus('current')
h245MiscRoundTripDelayTable = MibTable((0, 0, 8, 341, 1, 3, 1, 6, 1), )
if mibBuilder.loadTexts: h245MiscRoundTripDelayTable.setStatus('current')
h245MiscRoundTripDelayTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245ControlChannelIndex"))
if mibBuilder.loadTexts: h245MiscRoundTripDelayTableEntry.setStatus('current')
h245MiscRTDState = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("waiting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscRTDState.setStatus('current')
h245MiscT105TimerExpired = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscT105TimerExpired.setStatus('current')
h245MiscLastRTDRequestSent = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscLastRTDRequestSent.setStatus('current')
h245MiscLastRTDRequestRcvd = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscLastRTDRequestRcvd.setStatus('current')
h245MiscLastRTDResponseSent = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscLastRTDResponseSent.setStatus('current')
h245MiscLastRTDResponseRcvd = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscLastRTDResponseRcvd.setStatus('current')
h245MiscMaintenanceLoopTable = MibTable((0, 0, 8, 341, 1, 3, 1, 6, 2), )
if mibBuilder.loadTexts: h245MiscMaintenanceLoopTable.setStatus('current')
h245MiscMaintenanceLoopTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245ControlChannelIndex"), (0, "H245-MIB", "h245MiscMaintenanceLoopDirection"))
if mibBuilder.loadTexts: h245MiscMaintenanceLoopTableEntry.setStatus('current')
h245MiscMaintenanceLoopDirection = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2))))
if mibBuilder.loadTexts: h245MiscMaintenanceLoopDirection.setStatus('current')
h245MiscMLState = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notLooped", 1), ("waiting", 2), ("looped", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscMLState.setStatus('current')
h245MiscNumberOfRequests = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscNumberOfRequests.setStatus('current')
h245MiscNumberOfAcks = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscNumberOfAcks.setStatus('current')
h245MiscLastMLRequestOrAckType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("looped", 1), ("notLooped", 2), ("awaitingResponse", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscLastMLRequestOrAckType.setStatus('current')
h245MiscMLMediaOrLogicalChannelLoopRejectChannelNumber = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscMLMediaOrLogicalChannelLoopRejectChannelNumber.setStatus('current')
h245MiscNumberOfRejects = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscNumberOfRejects.setStatus('current')
h245MiscLastRejectType = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("system-loop", 1), ("media-loop", 2), ("log-channel-loop", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscLastRejectType.setStatus('current')
h245MiscErrorCode = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("can-not-perform-loop", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245MiscErrorCode.setStatus('current')
h245ConferenceTerminalTable = MibTable((0, 0, 8, 341, 1, 3, 1, 5, 1), )
if mibBuilder.loadTexts: h245ConferenceTerminalTable.setStatus('current')
h245ConferenceTerminalTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H245-MIB", "h245ConferenceConferenceId"), (0, "H245-MIB", "h245ConferenceTerminalLabel"))
if mibBuilder.loadTexts: h245ConferenceTerminalTableEntry.setStatus('current')
h245ConferenceConferenceId = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h245ConferenceConferenceId.setStatus('current')
h245ConferenceTerminalLabel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2))
if mibBuilder.loadTexts: h245ConferenceTerminalLabel.setStatus('current')
h245ConferenceControlChannelIndex = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceControlChannelIndex.setStatus('current')
h245ConferenceBroadcaster = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceBroadcaster.setStatus('current')
h245ConferenceConferenceChair = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceConferenceChair.setStatus('current')
h245ConferenceMultipoint = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceMultipoint.setStatus('current')
h245ConferenceStatsTable = MibTable((0, 0, 8, 341, 1, 3, 1, 5, 2), )
if mibBuilder.loadTexts: h245ConferenceStatsTable.setStatus('current')
h245ConferenceStatsTableEntry = MibTableRow((0, 0, 8, 341, 1, 3, 1, 5, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h245ConferenceStatsTableEntry.setStatus('current')
h245ConferenceBroadcastMyLogicalChannel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceBroadcastMyLogicalChannel.setStatus('current')
h245ConferenceCancelBroadcastMyLogicalChannel = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceCancelBroadcastMyLogicalChannel.setStatus('current')
h245ConferenceSendThisSource = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceSendThisSource.setStatus('current')
h245ConferenceCancelSendThisSource = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceCancelSendThisSource.setStatus('current')
h245ConferenceDropConference = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceDropConference.setStatus('current')
h245ConferenceEqualiseDelay = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceEqualiseDelay.setStatus('current')
h245ConferenceZeroDelay = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceZeroDelay.setStatus('current')
h245ConferenceMultipointModeCommand = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceMultipointModeCommand.setStatus('current')
h245ConferenceCancelMultipointModeCommand = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceCancelMultipointModeCommand.setStatus('current')
h245ConferenceVideoFreezePicture = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceVideoFreezePicture.setStatus('current')
h245ConferenceVideoFastUpdatePicture = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceVideoFastUpdatePicture.setStatus('current')
h245ConferenceVideoFastUpdateGOB = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceVideoFastUpdateGOB.setStatus('current')
h245ConferenceVideoTemporalSpatialTradeOff = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceVideoTemporalSpatialTradeOff.setStatus('current')
h245ConferenceVideoSendSyncEveryGOB = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceVideoSendSyncEveryGOB.setStatus('current')
h245ConferenceVideoFastUpdateMB = MibTableColumn((0, 0, 8, 341, 1, 3, 1, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h245ConferenceVideoFastUpdateMB.setStatus('current')
h245MIBGroups = MibIdentifier((0, 0, 8, 341, 1, 3, 1, 7, 1))
h245ConfigurationGroup = ObjectGroup((0, 0, 8, 341, 1, 3, 1, 7, 1, 1)).setObjects(("H245-MIB", "h245ConfigT101Timer"), ("H245-MIB", "h245ConfigT102Timer"), ("H245-MIB", "h245ConfigT103Timer"), ("H245-MIB", "h245ConfigT104Timer"), ("H245-MIB", "h245ConfigT105Timer"), ("H245-MIB", "h245ConfigT106Timer"), ("H245-MIB", "h245ConfigT107Timer"), ("H245-MIB", "h245ConfigT108Timer"), ("H245-MIB", "h245ConfigT109Timer"), ("H245-MIB", "h245ConfigN100Counter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245ConfigurationGroup = h245ConfigurationGroup.setStatus('current')
h245ControlChannelGroup = ObjectGroup((0, 0, 8, 341, 1, 3, 1, 7, 1, 2)).setObjects(("H245-MIB", "h245ControlChannelNumberOfListenPorts"), ("H245-MIB", "h245ControlChannelMaxConnections"), ("H245-MIB", "h245ControlChannelNumberOfListenFails"), ("H245-MIB", "h245ControlChannelNumberOfActiveConnections"), ("H245-MIB", "h245ControlChannelMasterSlaveMaxRetries"), ("H245-MIB", "h245ControlChannelConnectionAttemptsFail"), ("H245-MIB", "h245ControlChanneMasterSlavelDeterminations"), ("H245-MIB", "h245ControlChannelMasterSlaveAcks"), ("H245-MIB", "h245ControlChannelMasterSlaveRejects"), ("H245-MIB", "h245ControlChannelMasterSlaveT106Rejects"), ("H245-MIB", "h245ControlChannelMasterSlaveMSDRejects"), ("H245-MIB", "h245ControlChannelNumberOfMasterSlaveInconsistentFieldRejects"), ("H245-MIB", "h245ControlChannelMasterSlaveMaxCounterRejects"), ("H245-MIB", "h245ControlChannelMasterSlaveReleases"), ("H245-MIB", "h245ControlChannelNumberOfTunnels"), ("H245-MIB", "h245ControlChannelIndex"), ("H245-MIB", "h245ControlChannelMSDState"), ("H245-MIB", "h245ControlChannelTerminalType"), ("H245-MIB", "h245ControlChannelNumberOfMSDRetries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245ControlChannelGroup = h245ControlChannelGroup.setStatus('current')
h245CapExchangeGroup = ObjectGroup((0, 0, 8, 341, 1, 3, 1, 7, 1, 3)).setObjects(("H245-MIB", "h245CapExchangeSets"), ("H245-MIB", "h245CapExchangeAcks"), ("H245-MIB", "h245CapExchangeRejects"), ("H245-MIB", "h245CapExchangeRejectUnspecified"), ("H245-MIB", "h245CapExchangeRejectUndefinedTableEntryUsed"), ("H245-MIB", "h245CapExchangeRejectDescriptorCapacityExceeded"), ("H245-MIB", "h245CapExchangeRejectTableEntryCapacityExeeded"), ("H245-MIB", "h245CapExchangeReleases"), ("H245-MIB", "h245CapExchangeState"), ("H245-MIB", "h245CapExchangeProtocolId"), ("H245-MIB", "h245CapExchangeRejectCause"), ("H245-MIB", "h245CapExchangeMultiplexCapability"), ("H245-MIB", "h245CapExchangeCapability"), ("H245-MIB", "h245CapExchangeCapabilityDescriptors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245CapExchangeGroup = h245CapExchangeGroup.setStatus('current')
h245LogChannelsGroup = ObjectGroup((0, 0, 8, 341, 1, 3, 1, 7, 1, 4)).setObjects(("H245-MIB", "h245LogChannelsIndex"), ("H245-MIB", "h245LogChannelsChannelState"), ("H245-MIB", "h245LogChannelsMediaTableType"), ("H245-MIB", "h245LogChannelsSessionId"), ("H245-MIB", "h245LogChannelsAssociateSessionId"), ("H245-MIB", "h245LogChannelsMediaChannel"), ("H245-MIB", "h245LogChannelsMediaGuaranteedDelivery"), ("H245-MIB", "h245LogChannelsMediaControlChannel"), ("H245-MIB", "h245LogChannelsMediaControlGuaranteedDelivery"), ("H245-MIB", "h245LogChannelsSilenceSuppression"), ("H245-MIB", "h245LogChannelsDestination"), ("H245-MIB", "h245LogChannelsDynamicRTPPayloadType"), ("H245-MIB", "h245LogChannelsH261aVideoPacketization"), ("H245-MIB", "h245LogChannelsRTPPayloadDescriptor"), ("H245-MIB", "h245LogChannelsRTPPayloadType"), ("H245-MIB", "h245LogChannelsTransportCapability"), ("H245-MIB", "h245LogChannelsRedundancyEncoding"), ("H245-MIB", "h245LogChannelsSrcTerminalLabel"), ("H245-MIB", "h245LogChanOpenLogChanTotalRequests"), ("H245-MIB", "h245LogChanOpenLogChanAcks"), ("H245-MIB", "h245LogChanOpenLogChanConfirms"), ("H245-MIB", "h245LogChanOpenLogChanRejects"), ("H245-MIB", "h245LogChanOpenLogChanRejectUnspecified"), ("H245-MIB", "h245LogChanOpenLogChanRejectUnsuitableReverseParameters"), ("H245-MIB", "h245LogChanOpenLogChanRejectDataTypeNotSupported"), ("H245-MIB", "h245LogChanOpenLogChanRejectDataTypeNotAvailable"), ("H245-MIB", "h245LogChanOpenLogChanRejectUnknownDataType"), ("H245-MIB", "h245LogChanOpenLogChanRejectDataTypeALCombinationNotSupported"), ("H245-MIB", "h245LogChanOpenLogChanRejectMulticastChannelNotAllowed"), ("H245-MIB", "h245LogChanOpenLogChanRejectInsuffientBandwdith"), ("H245-MIB", "h245LogChanOpenLogChanRejectSeparateStackEstablishmentFailed"), ("H245-MIB", "h245LogChanOpenLogChanRejectInvalidSessionID"), ("H245-MIB", "h245LogChanOpenLogChanRejectMasterSlaveConflict"), ("H245-MIB", "h245LogChanOpenLogChanRejectWaitForCommunicationMode"), ("H245-MIB", "h245LogChanOpenLogChanRejectInvalidDependentChannel"), ("H245-MIB", "h245LogChansOpenLogChanRejectReplacementForRejected"), ("H245-MIB", "h245LogChanCloseLogChannels"), ("H245-MIB", "h245LogChanCloseLogChanAcks"), ("H245-MIB", "h245LogChanCloseLogChanRequests"), ("H245-MIB", "h245LogChanCloseLogChanRequestsAcks"), ("H245-MIB", "h245LogChanCloseLogChanRequestRejects"), ("H245-MIB", "h245LogChanCloseLogChanRequestReleases"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245LogChannelsGroup = h245LogChannelsGroup.setStatus('current')
h245ConferenceGroup = ObjectGroup((0, 0, 8, 341, 1, 3, 1, 7, 1, 5)).setObjects(("H245-MIB", "h245ConferenceControlChannelIndex"), ("H245-MIB", "h245ConferenceBroadcaster"), ("H245-MIB", "h245ConferenceConferenceChair"), ("H245-MIB", "h245ConferenceMultipoint"), ("H245-MIB", "h245ConferenceBroadcastMyLogicalChannel"), ("H245-MIB", "h245ConferenceCancelBroadcastMyLogicalChannel"), ("H245-MIB", "h245ConferenceSendThisSource"), ("H245-MIB", "h245ConferenceCancelSendThisSource"), ("H245-MIB", "h245ConferenceDropConference"), ("H245-MIB", "h245ConferenceEqualiseDelay"), ("H245-MIB", "h245ConferenceZeroDelay"), ("H245-MIB", "h245ConferenceMultipointModeCommand"), ("H245-MIB", "h245ConferenceCancelMultipointModeCommand"), ("H245-MIB", "h245ConferenceVideoFreezePicture"), ("H245-MIB", "h245ConferenceVideoFastUpdatePicture"), ("H245-MIB", "h245ConferenceVideoFastUpdateGOB"), ("H245-MIB", "h245ConferenceVideoTemporalSpatialTradeOff"), ("H245-MIB", "h245ConferenceVideoSendSyncEveryGOB"), ("H245-MIB", "h245ConferenceVideoFastUpdateMB"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245ConferenceGroup = h245ConferenceGroup.setStatus('current')
h245MiscGroup = ObjectGroup((0, 0, 8, 341, 1, 3, 1, 7, 1, 6)).setObjects(("H245-MIB", "h245MiscRTDState"), ("H245-MIB", "h245MiscT105TimerExpired"), ("H245-MIB", "h245MiscLastRTDRequestSent"), ("H245-MIB", "h245MiscLastRTDRequestRcvd"), ("H245-MIB", "h245MiscLastRTDResponseSent"), ("H245-MIB", "h245MiscLastRTDResponseRcvd"), ("H245-MIB", "h245MiscMLState"), ("H245-MIB", "h245MiscNumberOfRequests"), ("H245-MIB", "h245MiscNumberOfAcks"), ("H245-MIB", "h245MiscLastMLRequestOrAckType"), ("H245-MIB", "h245MiscMLMediaOrLogicalChannelLoopRejectChannelNumber"), ("H245-MIB", "h245MiscNumberOfRejects"), ("H245-MIB", "h245MiscLastRejectType"), ("H245-MIB", "h245MiscErrorCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245MiscGroup = h245MiscGroup.setStatus('current')
h245MIBCompliance = ModuleCompliance((0, 0, 8, 341, 1, 3, 1, 7, 2)).setObjects(("H245-MIB", "h245ConfigurationGroup"), ("H245-MIB", "h245ControlChannelGroup"), ("H245-MIB", "h245CapExchangeGroup"), ("H245-MIB", "h245LogChannelsGroup"), ("H245-MIB", "h245ConferenceGroup"), ("H245-MIB", "h245MiscGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h245MIBCompliance = h245MIBCompliance.setStatus('current')
mibBuilder.exportSymbols("H245-MIB", h245LogChannelsChannelState=h245LogChannelsChannelState, h245ConfigT109Timer=h245ConfigT109Timer, h245LogChannelOpenLogicalChannelTableEntry=h245LogChannelOpenLogicalChannelTableEntry, h245ControlChannelMasterSlaveReleases=h245ControlChannelMasterSlaveReleases, h245CapExchangeStatsTable=h245CapExchangeStatsTable, h245ConferenceVideoSendSyncEveryGOB=h245ConferenceVideoSendSyncEveryGOB, h245MiscT105TimerExpired=h245MiscT105TimerExpired, h245ControlChannelStatsTable=h245ControlChannelStatsTable, h245LogChannelsDynamicRTPPayloadType=h245LogChannelsDynamicRTPPayloadType, h245MiscErrorCode=h245MiscErrorCode, h245ConferenceConferenceId=h245ConferenceConferenceId, h245ConferenceEqualiseDelay=h245ConferenceEqualiseDelay, h245ConferenceStatsTable=h245ConferenceStatsTable, h245LogChannelsChannelDirection=h245LogChannelsChannelDirection, h245ConfigurationTableEntry=h245ConfigurationTableEntry, h245ConferenceControlChannelIndex=h245ConferenceControlChannelIndex, h245MiscMaintenanceLoopTable=h245MiscMaintenanceLoopTable, h245LogChanCloseLogChanAcks=h245LogChanCloseLogChanAcks, h245ConferenceDropConference=h245ConferenceDropConference, h245LogChanOpenLogChanRejectInvalidSessionID=h245LogChanOpenLogChanRejectInvalidSessionID, h245MiscRoundTripDelayTableEntry=h245MiscRoundTripDelayTableEntry, h245ConfigN100Counter=h245ConfigN100Counter, h245CapExchangeStatsTableEntry=h245CapExchangeStatsTableEntry, h245MiscMaintenanceLoopDirection=h245MiscMaintenanceLoopDirection, h245ConfigurationGroup=h245ConfigurationGroup, h245ConferenceBroadcastMyLogicalChannel=h245ConferenceBroadcastMyLogicalChannel, h245ControlChannelConnectionAttemptsFail=h245ControlChannelConnectionAttemptsFail, PYSNMP_MODULE_ID=h245, h245CapExchangeCapabilityDescriptors=h245CapExchangeCapabilityDescriptors, h245MiscMaintenanceLoopTableEntry=h245MiscMaintenanceLoopTableEntry, h245ConfigT106Timer=h245ConfigT106Timer, h245LogChannelsH225TableEntry=h245LogChannelsH225TableEntry, h245LogChannelsGroup=h245LogChannelsGroup, h245ConferenceVideoFastUpdateGOB=h245ConferenceVideoFastUpdateGOB, h245ControlChannelNumberOfActiveConnections=h245ControlChannelNumberOfActiveConnections, h245MiscLastRTDResponseRcvd=h245MiscLastRTDResponseRcvd, h245ControlChannelNumberOfTunnels=h245ControlChannelNumberOfTunnels, h245Conference=h245Conference, h245CapExchangeAcks=h245CapExchangeAcks, h245LogChansOpenLogChanRejectReplacementForRejected=h245LogChansOpenLogChanRejectReplacementForRejected, h245LogChannelsH225Table=h245LogChannelsH225Table, h245LogChanCloseLogChanRequestRejects=h245LogChanCloseLogChanRequestRejects, h245LogChanOpenLogChanRejectInsuffientBandwdith=h245LogChanOpenLogChanRejectInsuffientBandwdith, h245ControlChannelNumberOfListenFails=h245ControlChannelNumberOfListenFails, h245CapExchange=h245CapExchange, h245ConfigT108Timer=h245ConfigT108Timer, h245CapExchangeGroup=h245CapExchangeGroup, h245CapExchangeRejectUndefinedTableEntryUsed=h245CapExchangeRejectUndefinedTableEntryUsed, h245CapExchangeRejectTableEntryCapacityExeeded=h245CapExchangeRejectTableEntryCapacityExeeded, h245ConfigT101Timer=h245ConfigT101Timer, h245LogChannelsSilenceSuppression=h245LogChannelsSilenceSuppression, h245MiscRoundTripDelayTable=h245MiscRoundTripDelayTable, h245LogChanOpenLogChanRejectDataTypeNotSupported=h245LogChanOpenLogChanRejectDataTypeNotSupported, h245ConferenceCancelSendThisSource=h245ConferenceCancelSendThisSource, h245CapExchangeRejectDescriptorCapacityExceeded=h245CapExchangeRejectDescriptorCapacityExceeded, h245LogChannelsIndex=h245LogChannelsIndex, h245ControlChannelSrcAddressTag=h245ControlChannelSrcAddressTag, h245ControlChannelMasterSlaveT106Rejects=h245ControlChannelMasterSlaveT106Rejects, h245CapExchangeDirection=h245CapExchangeDirection, h245LogChannels=h245LogChannels, h245ControlChannelMasterSlaveMaxRetries=h245ControlChannelMasterSlaveMaxRetries, h245CapExchangeCapabilityTableEntry=h245CapExchangeCapabilityTableEntry, h245MiscNumberOfRejects=h245MiscNumberOfRejects, h245MiscLastRejectType=h245MiscLastRejectType, h245LogChanCloseLogChanRequestReleases=h245LogChanCloseLogChanRequestReleases, h245ControlChannelNumberOfListenPorts=h245ControlChannelNumberOfListenPorts, h245ControlChannelMaxConnections=h245ControlChannelMaxConnections, h245CapExchangeState=h245CapExchangeState, h245ControlChannelMasterSlaveAcks=h245ControlChannelMasterSlaveAcks, h245CapExchangeRejectCause=h245CapExchangeRejectCause, h245LogChannelsRTPPayloadDescriptor=h245LogChannelsRTPPayloadDescriptor, h245LogChanOpenLogChanRejectMulticastChannelNotAllowed=h245LogChanOpenLogChanRejectMulticastChannelNotAllowed, h245MiscMLMediaOrLogicalChannelLoopRejectChannelNumber=h245MiscMLMediaOrLogicalChannelLoopRejectChannelNumber, h245ConferenceVideoFreezePicture=h245ConferenceVideoFreezePicture, h245ConfigT107Timer=h245ConfigT107Timer, h245LogChannelsAssociateSessionId=h245LogChannelsAssociateSessionId, h245MiscRTDState=h245MiscRTDState, h245MiscMLState=h245MiscMLState, h245ConferenceTerminalTable=h245ConferenceTerminalTable, h245MiscGroup=h245MiscGroup, h245Misc=h245Misc, h245LogChanOpenLogChanRejects=h245LogChanOpenLogChanRejects, h245LogChannelsDestination=h245LogChannelsDestination, h245MIBCompliance=h245MIBCompliance, h245LogChanOpenLogChanRejectUnsuitableReverseParameters=h245LogChanOpenLogChanRejectUnsuitableReverseParameters, h245LogChanOpenLogChanRejectSeparateStackEstablishmentFailed=h245LogChanOpenLogChanRejectSeparateStackEstablishmentFailed, h245ConferenceCancelBroadcastMyLogicalChannel=h245ConferenceCancelBroadcastMyLogicalChannel, h245ControlChannelNumberOfMSDRetries=h245ControlChannelNumberOfMSDRetries, h245MiscLastRTDRequestSent=h245MiscLastRTDRequestSent, h245MiscLastRTDRequestRcvd=h245MiscLastRTDRequestRcvd, h245MIBConformance=h245MIBConformance, h245MiscLastRTDResponseSent=h245MiscLastRTDResponseSent, h245LogChannelsSrcTerminalLabel=h245LogChannelsSrcTerminalLabel, h245LogChanOpenLogChanTotalRequests=h245LogChanOpenLogChanTotalRequests, h245MiscNumberOfRequests=h245MiscNumberOfRequests, h245ConferenceCancelMultipointModeCommand=h245ConferenceCancelMultipointModeCommand, h245ConferenceVideoFastUpdatePicture=h245ConferenceVideoFastUpdatePicture, h245LogChanOpenLogChanAcks=h245LogChanOpenLogChanAcks, h245ConfigT102Timer=h245ConfigT102Timer, h245ControlChannelSrcTransporTAddress=h245ControlChannelSrcTransporTAddress, h245CapExchangeRejectUnspecified=h245CapExchangeRejectUnspecified, h245CapExchangeSets=h245CapExchangeSets, h245LogChanOpenLogChanRejectDataTypeNotAvailable=h245LogChanOpenLogChanRejectDataTypeNotAvailable, h245ConferenceVideoTemporalSpatialTradeOff=h245ConferenceVideoTemporalSpatialTradeOff, h245LogChannelsRedundancyEncoding=h245LogChannelsRedundancyEncoding, h245CapExchangeCapabilityTable=h245CapExchangeCapabilityTable, h245=h245, h245ConfigT103Timer=h245ConfigT103Timer, h245LogChanOpenLogChanRejectMasterSlaveConflict=h245LogChanOpenLogChanRejectMasterSlaveConflict, h245LogChannelCloseLogicalChannelTable=h245LogChannelCloseLogicalChannelTable, h245LogChannelsRTPPayloadType=h245LogChannelsRTPPayloadType, h245ControlChannelNumberOfMasterSlaveInconsistentFieldRejects=h245ControlChannelNumberOfMasterSlaveInconsistentFieldRejects, h245LogChanCloseLogChanRequestsAcks=h245LogChanCloseLogChanRequestsAcks, h245ControlChannelIndex=h245ControlChannelIndex, h245ConferenceZeroDelay=h245ConferenceZeroDelay, h245MiscNumberOfAcks=h245MiscNumberOfAcks, h245LogChannelsMediaControlChannel=h245LogChannelsMediaControlChannel, h245CapExchangeReleases=h245CapExchangeReleases, h245ControlChannelMasterSlaveMSDRejects=h245ControlChannelMasterSlaveMSDRejects, h245ConfigurationTable=h245ConfigurationTable, h245LogChannelsH261aVideoPacketization=h245LogChannelsH261aVideoPacketization, h245ConferenceGroup=h245ConferenceGroup, h245LogChanOpenLogChanConfirms=h245LogChanOpenLogChanConfirms, h245ControlChannelDestTransporTAddress=h245ControlChannelDestTransporTAddress, h245LogChannelOpenLogicalChannelTable=h245LogChannelOpenLogicalChannelTable, h245ControlChannelMSDState=h245ControlChannelMSDState, h245ConfigT105Timer=h245ConfigT105Timer, h245MiscLastMLRequestOrAckType=h245MiscLastMLRequestOrAckType, h245LogChanCloseLogChannels=h245LogChanCloseLogChannels, h245LogChanOpenLogChanRejectUnspecified=h245LogChanOpenLogChanRejectUnspecified, h245LogChannelsMediaChannel=h245LogChannelsMediaChannel, h245LogChannelsSessionId=h245LogChannelsSessionId, h245LogChanOpenLogChanRejectWaitForCommunicationMode=h245LogChanOpenLogChanRejectWaitForCommunicationMode, h245ControlChanneMasterSlavelDeterminations=h245ControlChanneMasterSlavelDeterminations, h245LogChanOpenLogChanRejectUnknownDataType=h245LogChanOpenLogChanRejectUnknownDataType, h245ConferenceMultipoint=h245ConferenceMultipoint, h245CapExchangeProtocolId=h245CapExchangeProtocolId, h245ConferenceTerminalLabel=h245ConferenceTerminalLabel, h245ConferenceTerminalTableEntry=h245ConferenceTerminalTableEntry, h245ConferenceSendThisSource=h245ConferenceSendThisSource, h245LogChannelsChannelTableEntry=h245LogChannelsChannelTableEntry, h245CapExchangeCapability=h245CapExchangeCapability, h245ConferenceVideoFastUpdateMB=h245ConferenceVideoFastUpdateMB, h245ConferenceConferenceChair=h245ConferenceConferenceChair, h245ControlChannelMasterSlaveTableEntry=h245ControlChannelMasterSlaveTableEntry, h245CapExchangeRejects=h245CapExchangeRejects, h245CapExchangeMultiplexCapability=h245CapExchangeMultiplexCapability, h245MIBGroups=h245MIBGroups, h245ControlChannelGroup=h245ControlChannelGroup, h245ControlChannelStatsTableEntry=h245ControlChannelStatsTableEntry, h245ConferenceBroadcaster=h245ConferenceBroadcaster, h245LogChannelsMediaGuaranteedDelivery=h245LogChannelsMediaGuaranteedDelivery, h245ControlChannel=h245ControlChannel, h245LogChannelsChannelNumber=h245LogChannelsChannelNumber, h245LogChanOpenLogChanRejectDataTypeALCombinationNotSupported=h245LogChanOpenLogChanRejectDataTypeALCombinationNotSupported, h245ControlChannelMasterSlaveMaxCounterRejects=h245ControlChannelMasterSlaveMaxCounterRejects, h245LogChannelsMediaTableType=h245LogChannelsMediaTableType, h245LogChanOpenLogChanRejectInvalidDependentChannel=h245LogChanOpenLogChanRejectInvalidDependentChannel, h245ControlChannelMasterSlaveTable=h245ControlChannelMasterSlaveTable, h245ConfigT104Timer=h245ConfigT104Timer, h245LogChannelCloseLogicalChannelTableEntry=h245LogChannelCloseLogicalChannelTableEntry, h245LogChanCloseLogChanRequests=h245LogChanCloseLogChanRequests, h245Configuration=h245Configuration, h245ConferenceMultipointModeCommand=h245ConferenceMultipointModeCommand, h245LogChannelsChannelTable=h245LogChannelsChannelTable, h245LogChannelsTransportCapability=h245LogChannelsTransportCapability, h245ControlChannelTerminalType=h245ControlChannelTerminalType, h245LogChannelsMediaControlGuaranteedDelivery=h245LogChannelsMediaControlGuaranteedDelivery, h245ConferenceStatsTableEntry=h245ConferenceStatsTableEntry, h245ControlChannelIsTunneling=h245ControlChannelIsTunneling, h245ControlChannelDesTAddressTag=h245ControlChannelDesTAddressTag, h245ControlChannelMasterSlaveRejects=h245ControlChannelMasterSlaveRejects)
