#
# PySNMP MIB module Unisphere-Data-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-AAA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:23:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, ModuleIdentity, Bits, ObjectIdentity, Counter64, IpAddress, Counter32, Unsigned32, MibIdentifier, Integer32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "IpAddress", "Counter32", "Unsigned32", "MibIdentifier", "Integer32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdName, = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdName")
usdAaaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20))
usdAaaMIB.setRevisions(('2002-08-02 12:50', '2002-08-01 19:50', '2001-10-05 13:25', '2001-10-03 19:05', '2001-03-01 17:03', '2001-02-12 19:54', '2000-05-18 00:00', '1999-06-01 00:00',))
if mibBuilder.loadTexts: usdAaaMIB.setLastUpdated('200208021250Z')
if mibBuilder.loadTexts: usdAaaMIB.setOrganization('Unisphere Networks, Inc.')
class UsdAaaDomainName(TextualConvention, OctetString):
    reference = 'RFC 854: NVT ASCII character set. See SNMPv2-TC.DisplayString DESCRIPTION for a summary.'
    status = 'current'
    displayHint = '63a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 63)

class UsdAaaAuthenticationMethods(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5))
    namedValues = NamedValues(("protocolRadius", 1), ("protocolNone", 4), ("protocolLine", 5))

class UsdAaaAccountingMethods(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4))
    namedValues = NamedValues(("protocolRadius", 1), ("protocolNone", 4))

class UsdAddressAssignType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("radius", 1), ("localPool", 2), ("dhcp", 3), ("user", 4))

class UsdSubscriberState(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("pending", 0), ("established", 1), ("deleting", 2), ("tunneling", 3), ("tunnelAcct", 4), ("terminated", 5))

class UsdSubscriberClientType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("ppp", 0), ("login", 1), ("ip", 2), ("config", 3), ("tunnel", 4), ("other", 5))

class UsdSubscriberLocationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("unknown", 0), ("slotPort", 1))

class UsdSubscriberLocationValue(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 16)

usdAaaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1))
usdAaaAssignment = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1))
usdAaaAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 2))
usdAaaAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3))
usdAaaAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4))
usdAaaStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5))
usdAaaTimeout = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 6))
usdAaaTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7))
usdAaaSubscribers = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8))
usdAaaCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 9))
usdAaaAssignGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1))
usdAaaAssignBrasLicense = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAssignBrasLicense.setStatus('current')
usdAaaAssignBrasLicensedUsers = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaAssignBrasLicensedUsers.setStatus('current')
usdAaaAssignDomainDelimiters = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAssignDomainDelimiters.setStatus('current')
usdAaaAssignRealmDelimiters = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAssignRealmDelimiters.setStatus('current')
usdAaaAssignDomainParseOrder = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("domainFirst", 1), ("realmFirst", 2))).clone('realmFirst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAssignDomainParseOrder.setStatus('current')
usdAaaAssignSubscriberLimit = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000))).setUnits('users').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAssignSubscriberLimit.setStatus('current')
usdAaaAssignDomain = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2))
usdAaaAssignDomainTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1), )
if mibBuilder.loadTexts: usdAaaAssignDomainTable.setStatus('current')
usdAaaAssignDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1), ).setIndexNames((1, "Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"))
if mibBuilder.loadTexts: usdAaaAssignDomainEntry.setStatus('current')
usdAaaAssignDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 1), UsdAaaDomainName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaAssignDomainName.setStatus('current')
usdAaaAssignDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainRowStatus.setStatus('current')
usdAaaAssignDomainRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 3), UsdName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainRouterName.setStatus('current')
usdAaaAssignDomainLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 32000)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainLoopback.setStatus('current')
usdAaaAssignDomainIpHint = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainIpHint.setStatus('current')
usdAaaAssignDomainAtmServiceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("ubr", 1), ("ubrPcr", 2), ("nrtVbr", 3), ("cbr", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainAtmServiceLevel.setStatus('current')
usdAaaAssignDomainAtmPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainAtmPcr.setStatus('current')
usdAaaAssignDomainAtmScr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainAtmScr.setStatus('current')
usdAaaAssignDomainAtmMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('cells').setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainAtmMbs.setStatus('current')
usdAaaAssignDomainOverrideUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainOverrideUserName.setStatus('current')
usdAaaAssignDomainOverridePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainOverridePassword.setStatus('current')
usdAaaAssignDomainStripDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainStripDomain.setStatus('current')
usdAaaAssignDomainTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2), )
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelTable.setStatus('current')
usdAaaAssignDomainTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1), ).setIndexNames((0, "Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelName"), (0, "Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelTag"))
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelEntry.setStatus('current')
usdAaaAssignDomainTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 1), UsdAaaDomainName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelName.setStatus('current')
usdAaaAssignDomainTunnelTag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelTag.setStatus('current')
usdAaaAssignDomainTunnelPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelPreference.setStatus('current')
usdAaaAssignDomainTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tunnelL2tp", 1), ("tunnelUnknown", 2), ("tunnelL2f", 3))).clone('tunnelL2tp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelType.setStatus('current')
usdAaaAssignDomainTunnelMedium = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tunnelMediumIPv4", 1), ("tunnelMediumUnknown", 2))).clone('tunnelMediumIPv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelMedium.setStatus('current')
usdAaaAssignDomainTunnelAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelAddress.setStatus('current')
usdAaaAssignDomainTunnelPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelPassword.setStatus('current')
usdAaaAssignDomainTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelId.setStatus('current')
usdAaaAssignDomainTunnelHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelHostName.setStatus('current')
usdAaaAssignDomainTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelRowStatus.setStatus('current')
usdAaaAssignDomainTunnelServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelServerName.setStatus('current')
usdAaaAssignDomainTunnelClientAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 1, 2, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdAaaAssignDomainTunnelClientAddress.setStatus('current')
usdAaaAuthGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 2, 1))
usdAaaAuthMethods = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAuthMethods.setStatus('current')
usdAaaAcctGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3, 1))
usdAaaAcctInterval = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(600, 86400), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAcctInterval.setStatus('current')
usdAaaAcctDupServerRouterName = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3, 1, 2), UsdName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAcctDupServerRouterName.setStatus('current')
usdAaaAcctMethods = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAcctMethods.setStatus('current')
usdAaaAcctSendStopOnAaaDeny = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAcctSendStopOnAaaDeny.setStatus('current')
usdAaaAcctSendStopOnAaaReject = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAcctSendStopOnAaaReject.setStatus('current')
usdAaaAddrGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 1))
usdAaaAddrPoolDefault = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("local", 1), ("dhcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAddrPoolDefault.setStatus('current')
usdAaaDupAddrCheck = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaDupAddrCheck.setStatus('current')
usdAaaAddrNameServer = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2))
usdAaaAddrDns = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2, 1))
usdAaaAddrWins = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2, 2))
usdAaaAddrDnsPrimary = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAddrDnsPrimary.setStatus('current')
usdAaaAddrDnsSecondary = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAddrDnsSecondary.setStatus('current')
usdAaaAddrWinsPrimary = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAddrWinsPrimary.setStatus('current')
usdAaaAddrWinsSecondary = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 4, 2, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaAddrWinsSecondary.setStatus('current')
usdAaaTimeoutGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 6, 1))
usdAaaIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(300, 7200), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaIdleTimeout.setStatus('current')
usdAaaSessionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 1814400), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaSessionTimeout.setStatus('current')
usdAaaTunnelGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1))
usdAaaTunnelClientName = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaTunnelClientName.setStatus('current')
usdAaaTunnelPassword = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaTunnelPassword.setStatus('current')
usdAaaTunnelNasPortMethod = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("ciscoAvp", 1))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaTunnelNasPortMethod.setStatus('current')
usdAaaTunnelIgnoreNasPort = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaTunnelIgnoreNasPort.setStatus('current')
usdAaaTunnelIgnoreNasPortType = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaTunnelIgnoreNasPortType.setStatus('current')
usdAaaTunnelAssignmentIdFormat = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("assignmentId", 0), ("clientServerId", 1))).clone('assignmentId')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaTunnelAssignmentIdFormat.setStatus('current')
usdAaaIncomingInitiateRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingInitiateRequests.setStatus('current')
usdAaaIncomingTerminateRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingTerminateRequests.setStatus('current')
usdAaaOutgoingTunnelGrantResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingTunnelGrantResponses.setStatus('current')
usdAaaOutgoingGrantResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingGrantResponses.setStatus('current')
usdAaaOutgoingDenyResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingDenyResponses.setStatus('current')
usdAaaOutgoingErrorResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingErrorResponses.setStatus('current')
usdAaaOutgoingAuthRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingAuthRequests.setStatus('current')
usdAaaIncomingAuthResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingAuthResponses.setStatus('current')
usdAaaOutgoingReAuthRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingReAuthRequests.setStatus('current')
usdAaaIncomingReAuthResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingReAuthResponses.setStatus('current')
usdAaaOutgoingAcctRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingAcctRequests.setStatus('current')
usdAaaIncomingAcctResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingAcctResponses.setStatus('current')
usdAaaOutgoingDupAcctRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingDupAcctRequests.setStatus('current')
usdAaaIncomingDupAcctResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingDupAcctResponses.setStatus('current')
usdAaaOutgoingAddrRequests = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaOutgoingAddrRequests.setStatus('current')
usdAaaIncomingAddrResponses = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 5, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaIncomingAddrResponses.setStatus('current')
usdAaaSubscriberMaxCount = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberMaxCount.setStatus('current')
usdAaaSubscriberPeakCount = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberPeakCount.setStatus('current')
usdAaaSubscriberCount = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberCount.setStatus('current')
usdAaaSubscriberTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4), )
if mibBuilder.loadTexts: usdAaaSubscriberTable.setStatus('current')
usdAaaSubscriberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1), ).setIndexNames((0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberHandle"))
if mibBuilder.loadTexts: usdAaaSubscriberEntry.setStatus('current')
usdAaaSubscriberHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: usdAaaSubscriberHandle.setStatus('current')
usdAaaSubscriberUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberUserName.setStatus('current')
usdAaaSubscriberRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 3), UsdName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberRouterName.setStatus('current')
usdAaaSubscriberRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberRouterIndex.setStatus('current')
usdAaaSubscriberLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberLoginTime.setStatus('current')
usdAaaSubscriberIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberIpAddress.setStatus('current')
usdAaaSubscriberIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberIpAddressMask.setStatus('current')
usdAaaSubscriberAddrAssignType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 8), UsdAddressAssignType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberAddrAssignType.setStatus('current')
usdAaaSubscriberInterfaceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberInterfaceId.setStatus('current')
usdAaaSubscriberState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 10), UsdSubscriberState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberState.setStatus('current')
usdAaaSubscriberClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 11), UsdSubscriberClientType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberClientType.setStatus('current')
usdAaaSubscriberIngressPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberIngressPolicyName.setStatus('current')
usdAaaSubscriberEgressPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberEgressPolicyName.setStatus('current')
usdAaaSubscriberQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberQosProfileName.setStatus('current')
usdAaaSubscriberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 4, 1, 15), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdAaaSubscriberRowStatus.setStatus('current')
usdAaaSubscriberRouterSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 5), )
if mibBuilder.loadTexts: usdAaaSubscriberRouterSummaryTable.setStatus('current')
usdAaaSubscriberRouterSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 5, 1), ).setIndexNames((0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterSummaryRouterIndex"))
if mibBuilder.loadTexts: usdAaaSubscriberRouterSummaryEntry.setStatus('current')
usdAaaSubscriberRouterSummaryRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: usdAaaSubscriberRouterSummaryRouterIndex.setStatus('current')
usdAaaSubscriberRouterSummaryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberRouterSummaryCount.setStatus('current')
usdAaaSubscriberRouterTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 6), )
if mibBuilder.loadTexts: usdAaaSubscriberRouterTable.setStatus('current')
usdAaaSubscriberRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 6, 1), ).setIndexNames((0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterRouterIndex"), (0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterHandle"))
if mibBuilder.loadTexts: usdAaaSubscriberRouterEntry.setStatus('current')
usdAaaSubscriberRouterRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: usdAaaSubscriberRouterRouterIndex.setStatus('current')
usdAaaSubscriberRouterHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: usdAaaSubscriberRouterHandle.setStatus('current')
usdAaaSubscriberRouterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 6, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberRouterRowStatus.setStatus('current')
usdAaaSubscriberLocationType = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 7), UsdSubscriberLocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberLocationType.setStatus('current')
usdAaaSubscriberLocationSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 8), )
if mibBuilder.loadTexts: usdAaaSubscriberLocationSummaryTable.setStatus('current')
usdAaaSubscriberLocationSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 8, 1), ).setIndexNames((0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationSummaryLocationIndex"))
if mibBuilder.loadTexts: usdAaaSubscriberLocationSummaryEntry.setStatus('current')
usdAaaSubscriberLocationSummaryLocationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 8, 1, 1), UsdSubscriberLocationValue())
if mibBuilder.loadTexts: usdAaaSubscriberLocationSummaryLocationIndex.setStatus('current')
usdAaaSubscriberLocationSummaryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberLocationSummaryCount.setStatus('current')
usdAaaSubscriberLocationTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 9), )
if mibBuilder.loadTexts: usdAaaSubscriberLocationTable.setStatus('current')
usdAaaSubscriberLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 9, 1), ).setIndexNames((0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationLocationIndex"), (0, "Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationHandle"))
if mibBuilder.loadTexts: usdAaaSubscriberLocationEntry.setStatus('current')
usdAaaSubscriberLocationLocationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 9, 1, 1), UsdSubscriberLocationValue())
if mibBuilder.loadTexts: usdAaaSubscriberLocationLocationIndex.setStatus('current')
usdAaaSubscriberLocationHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: usdAaaSubscriberLocationHandle.setStatus('current')
usdAaaSubscriberLocationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 9, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberLocationRowStatus.setStatus('current')
usdAaaSubscriberPseudoPeakCount = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberPseudoPeakCount.setStatus('current')
usdAaaSubscriberPseudoCount = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 8, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaSubscriberPseudoCount.setStatus('current')
usdAaaAccountingCapability = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 9, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaAccountingCapability.setStatus('current')
usdAaaAddressAssignmentCapability = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 9, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaAddressAssignmentCapability.setStatus('current')
usdAaaBrasCapability = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 9, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaBrasCapability.setStatus('current')
usdAaaTunnelingCapability = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 1, 9, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdAaaTunnelingCapability.setStatus('current')
usdAaaMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4))
usdAaaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1))
usdAaaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2))
usdAaaCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 1)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance = usdAaaCompliance.setStatus('obsolete')
usdAaaCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 2)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance2 = usdAaaCompliance2.setStatus('obsolete')
usdAaaCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 3)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaBasicGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAuthenticationGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAccountingGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance3 = usdAaaCompliance3.setStatus('obsolete')
usdAaaCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 4)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaBasicGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasGroup2"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAuthenticationGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAccountingGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance4 = usdAaaCompliance4.setStatus('obsolete')
usdAaaCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 5)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaBasicGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasGroup3"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAuthenticationGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAccountingGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance5 = usdAaaCompliance5.setStatus('obsolete')
usdAaaCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 6)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaBasicGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaCapabilitiesGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasGroup3"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAuthenticationGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAccountingGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance6 = usdAaaCompliance6.setStatus('obsolete')
usdAaaCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 7)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaBasicGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaCapabilitiesGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasGroup3"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberGroup2"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAuthenticationGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAccountingGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance7 = usdAaaCompliance7.setStatus('obsolete')
usdAaaCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 1, 8)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaBasicGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaCapabilitiesGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasGroup4"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberGroup3"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAuthenticationGroup"), ("Unisphere-Data-AAA-MIB", "usdAaaAccountingGroup2"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCompliance8 = usdAaaCompliance8.setStatus('current')
usdAaaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 1)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicense"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicensedUsers"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainLoopback"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctInterval"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctDupServerRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrPoolDefault"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrDnsPrimary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrDnsSecondary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrWinsPrimary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrWinsSecondary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaGroup = usdAaaGroup.setStatus('obsolete')
usdAaaGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 2)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicense"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicensedUsers"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainLoopback"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainIpHint"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmServiceLevel"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmPcr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmScr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmMbs"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverrideUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverridePassword"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctInterval"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctDupServerRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrPoolDefault"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrDnsPrimary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrDnsSecondary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrWinsPrimary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrWinsSecondary"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingInitiateRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingTerminateRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingTunnelGrantResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingGrantResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingDenyResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingErrorResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAuthRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAuthResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingReAuthRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingReAuthResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAcctRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAcctResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingDupAcctRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingDupAcctResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAddrRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAddrResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelTag"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelPreference"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelType"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelMedium"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelAddress"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelPassword"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelId"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelHostName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaGroup2 = usdAaaGroup2.setStatus('obsolete')
usdAaaBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 3)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaIncomingInitiateRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingTerminateRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingGrantResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingDenyResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingErrorResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaBasicGroup = usdAaaBasicGroup.setStatus('current')
usdAaaBrasGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 4)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicense"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicensedUsers"), ("Unisphere-Data-AAA-MIB", "usdAaaIdleTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaSessionTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainLoopback"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainIpHint"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmServiceLevel"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmPcr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmScr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmMbs"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverrideUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverridePassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaBrasGroup = usdAaaBrasGroup.setStatus('obsolete')
usdAaaTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 5)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelTag"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelPreference"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelType"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelMedium"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelAddress"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelPassword"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelId"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelHostName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelServerName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelClientAddress"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainTunnelRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingTunnelGrantResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaTunnelGroup = usdAaaTunnelGroup.setStatus('current')
usdAaaAuthenticationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 6)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAuthMethods"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAuthRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAuthResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingReAuthRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingReAuthResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaAuthenticationGroup = usdAaaAuthenticationGroup.setStatus('current')
usdAaaAccountingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 7)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAcctInterval"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctDupServerRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctMethods"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAcctRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAcctResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingDupAcctRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingDupAcctResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaAccountingGroup = usdAaaAccountingGroup.setStatus('obsolete')
usdAaaAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 8)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAddrPoolDefault"), ("Unisphere-Data-AAA-MIB", "usdAaaDupAddrCheck"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrDnsPrimary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrDnsSecondary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrWinsPrimary"), ("Unisphere-Data-AAA-MIB", "usdAaaAddrWinsSecondary"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAddrRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAddrResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaAddressGroup = usdAaaAddressGroup.setStatus('current')
usdAaaBrasGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 9)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicense"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicensedUsers"), ("Unisphere-Data-AAA-MIB", "usdAaaIdleTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaSessionTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainLoopback"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainIpHint"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmServiceLevel"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmPcr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmScr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmMbs"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverrideUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverridePassword"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainStripDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaBrasGroup2 = usdAaaBrasGroup2.setStatus('obsolete')
usdAaaBrasGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 10)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicense"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicensedUsers"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainDelimiters"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignRealmDelimiters"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainParseOrder"), ("Unisphere-Data-AAA-MIB", "usdAaaIdleTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaSessionTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelClientName"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelPassword"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelNasPortMethod"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainLoopback"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainIpHint"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmServiceLevel"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmPcr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmScr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmMbs"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverrideUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverridePassword"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainStripDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaBrasGroup3 = usdAaaBrasGroup3.setStatus('obsolete')
usdAaaSubscriberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 11)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaSubscriberMaxCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberPeakCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterIndex"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLoginTime"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIpAddress"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIpAddressMask"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberAddrAssignType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberInterfaceId"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberState"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberClientType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIngressPolicyName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberEgressPolicyName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberQosProfileName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterSummaryCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaSubscriberGroup = usdAaaSubscriberGroup.setStatus('obsolete')
usdAaaCapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 12)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAccountingCapability"), ("Unisphere-Data-AAA-MIB", "usdAaaAddressAssignmentCapability"), ("Unisphere-Data-AAA-MIB", "usdAaaBrasCapability"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelingCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaCapabilitiesGroup = usdAaaCapabilitiesGroup.setStatus('current')
usdAaaSubscriberGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 13)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaSubscriberMaxCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberPeakCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterIndex"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLoginTime"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIpAddress"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIpAddressMask"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberAddrAssignType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberInterfaceId"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberState"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberClientType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIngressPolicyName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberEgressPolicyName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberQosProfileName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterSummaryCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationSummaryCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaSubscriberGroup2 = usdAaaSubscriberGroup2.setStatus('obsolete')
usdAaaAccountingGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 14)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAcctInterval"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctDupServerRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctMethods"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctSendStopOnAaaDeny"), ("Unisphere-Data-AAA-MIB", "usdAaaAcctSendStopOnAaaReject"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingAcctRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingAcctResponses"), ("Unisphere-Data-AAA-MIB", "usdAaaOutgoingDupAcctRequests"), ("Unisphere-Data-AAA-MIB", "usdAaaIncomingDupAcctResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaAccountingGroup2 = usdAaaAccountingGroup2.setStatus('current')
usdAaaBrasGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 15)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicense"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignBrasLicensedUsers"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainDelimiters"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignRealmDelimiters"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainParseOrder"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignSubscriberLimit"), ("Unisphere-Data-AAA-MIB", "usdAaaIdleTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaSessionTimeout"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelClientName"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelPassword"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelNasPortMethod"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelIgnoreNasPort"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelIgnoreNasPortType"), ("Unisphere-Data-AAA-MIB", "usdAaaTunnelAssignmentIdFormat"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainLoopback"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainIpHint"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmServiceLevel"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmPcr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmScr"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainAtmMbs"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverrideUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainOverridePassword"), ("Unisphere-Data-AAA-MIB", "usdAaaAssignDomainStripDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaBrasGroup4 = usdAaaBrasGroup4.setStatus('current')
usdAaaSubscriberGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 20, 4, 2, 16)).setObjects(("Unisphere-Data-AAA-MIB", "usdAaaSubscriberMaxCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberPeakCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberUserName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterIndex"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLoginTime"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIpAddress"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIpAddressMask"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberAddrAssignType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberInterfaceId"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberState"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberClientType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberIngressPolicyName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberEgressPolicyName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberQosProfileName"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterSummaryCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberRouterRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationType"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationSummaryCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberLocationRowStatus"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberPseudoPeakCount"), ("Unisphere-Data-AAA-MIB", "usdAaaSubscriberPseudoCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdAaaSubscriberGroup3 = usdAaaSubscriberGroup3.setStatus('current')
mibBuilder.exportSymbols("Unisphere-Data-AAA-MIB", usdAaaSubscriberLocationSummaryEntry=usdAaaSubscriberLocationSummaryEntry, usdAaaAssignBrasLicensedUsers=usdAaaAssignBrasLicensedUsers, usdAaaAssignDomainTunnelPassword=usdAaaAssignDomainTunnelPassword, usdAaaMIBConformance=usdAaaMIBConformance, usdAaaIncomingAddrResponses=usdAaaIncomingAddrResponses, usdAaaIncomingReAuthResponses=usdAaaIncomingReAuthResponses, usdAaaAssignDomainTunnelServerName=usdAaaAssignDomainTunnelServerName, usdAaaSubscriberIpAddress=usdAaaSubscriberIpAddress, usdAaaAuthentication=usdAaaAuthentication, usdAaaTunnelIgnoreNasPortType=usdAaaTunnelIgnoreNasPortType, usdAaaBrasGroup3=usdAaaBrasGroup3, usdAaaTunnelNasPortMethod=usdAaaTunnelNasPortMethod, usdAaaAcctInterval=usdAaaAcctInterval, usdAaaSubscriberRouterEntry=usdAaaSubscriberRouterEntry, usdAaaIncomingTerminateRequests=usdAaaIncomingTerminateRequests, usdAaaIncomingAuthResponses=usdAaaIncomingAuthResponses, usdAaaMIBGroups=usdAaaMIBGroups, usdAaaAssignDomainTunnelId=usdAaaAssignDomainTunnelId, usdAaaAcctSendStopOnAaaReject=usdAaaAcctSendStopOnAaaReject, usdAaaAddressAssignmentCapability=usdAaaAddressAssignmentCapability, usdAaaAddrDns=usdAaaAddrDns, usdAaaAddrWins=usdAaaAddrWins, UsdSubscriberState=UsdSubscriberState, UsdAaaDomainName=UsdAaaDomainName, usdAaaTunnelClientName=usdAaaTunnelClientName, usdAaaAssignDomainParseOrder=usdAaaAssignDomainParseOrder, usdAaaAddrPoolDefault=usdAaaAddrPoolDefault, usdAaaCompliance5=usdAaaCompliance5, usdAaaAuthenticationGroup=usdAaaAuthenticationGroup, usdAaaCompliance6=usdAaaCompliance6, usdAaaOutgoingAuthRequests=usdAaaOutgoingAuthRequests, usdAaaSubscriberIngressPolicyName=usdAaaSubscriberIngressPolicyName, usdAaaSubscriberRouterSummaryEntry=usdAaaSubscriberRouterSummaryEntry, usdAaaAuthMethods=usdAaaAuthMethods, usdAaaAccountingCapability=usdAaaAccountingCapability, usdAaaAssignSubscriberLimit=usdAaaAssignSubscriberLimit, usdAaaTunnelingCapability=usdAaaTunnelingCapability, usdAaaAddressGroup=usdAaaAddressGroup, usdAaaSubscriberRouterName=usdAaaSubscriberRouterName, usdAaaAssignDomainLoopback=usdAaaAssignDomainLoopback, usdAaaSubscriberCount=usdAaaSubscriberCount, usdAaaSubscriberRouterHandle=usdAaaSubscriberRouterHandle, PYSNMP_MODULE_ID=usdAaaMIB, usdAaaAssignDomainName=usdAaaAssignDomainName, usdAaaAssignDomainStripDomain=usdAaaAssignDomainStripDomain, usdAaaSubscriberQosProfileName=usdAaaSubscriberQosProfileName, usdAaaAssignDomainTable=usdAaaAssignDomainTable, usdAaaSubscriberUserName=usdAaaSubscriberUserName, usdAaaAssignDomain=usdAaaAssignDomain, usdAaaAddrWinsPrimary=usdAaaAddrWinsPrimary, usdAaaSubscriberPseudoCount=usdAaaSubscriberPseudoCount, usdAaaSubscriberTable=usdAaaSubscriberTable, usdAaaSubscriberHandle=usdAaaSubscriberHandle, usdAaaSubscriberPseudoPeakCount=usdAaaSubscriberPseudoPeakCount, usdAaaTunnelGroup=usdAaaTunnelGroup, usdAaaAcctDupServerRouterName=usdAaaAcctDupServerRouterName, usdAaaSubscriberLoginTime=usdAaaSubscriberLoginTime, usdAaaSubscriberClientType=usdAaaSubscriberClientType, usdAaaOutgoingDenyResponses=usdAaaOutgoingDenyResponses, usdAaaAssignDomainTunnelClientAddress=usdAaaAssignDomainTunnelClientAddress, usdAaaAssignDomainAtmScr=usdAaaAssignDomainAtmScr, usdAaaAddrGeneral=usdAaaAddrGeneral, usdAaaAddrDnsSecondary=usdAaaAddrDnsSecondary, usdAaaTunnel=usdAaaTunnel, usdAaaOutgoingDupAcctRequests=usdAaaOutgoingDupAcctRequests, usdAaaAuthGeneral=usdAaaAuthGeneral, usdAaaTunnelPassword=usdAaaTunnelPassword, usdAaaAssignRealmDelimiters=usdAaaAssignRealmDelimiters, usdAaaSubscriberGroup3=usdAaaSubscriberGroup3, usdAaaDupAddrCheck=usdAaaDupAddrCheck, usdAaaAssignDomainOverrideUserName=usdAaaAssignDomainOverrideUserName, usdAaaAssignDomainTunnelPreference=usdAaaAssignDomainTunnelPreference, usdAaaAssignDomainDelimiters=usdAaaAssignDomainDelimiters, usdAaaSubscriberEntry=usdAaaSubscriberEntry, usdAaaSubscriberRouterTable=usdAaaSubscriberRouterTable, usdAaaTunnelIgnoreNasPort=usdAaaTunnelIgnoreNasPort, usdAaaSubscriberRouterRowStatus=usdAaaSubscriberRouterRowStatus, UsdSubscriberClientType=UsdSubscriberClientType, usdAaaAssignDomainAtmMbs=usdAaaAssignDomainAtmMbs, usdAaaAddrNameServer=usdAaaAddrNameServer, usdAaaSubscriberGroup=usdAaaSubscriberGroup, usdAaaAssignDomainTunnelRowStatus=usdAaaAssignDomainTunnelRowStatus, usdAaaSubscriberLocationHandle=usdAaaSubscriberLocationHandle, usdAaaSubscriberLocationRowStatus=usdAaaSubscriberLocationRowStatus, usdAaaCompliance3=usdAaaCompliance3, usdAaaSubscriberIpAddressMask=usdAaaSubscriberIpAddressMask, usdAaaSubscriberLocationType=usdAaaSubscriberLocationType, UsdAaaAuthenticationMethods=UsdAaaAuthenticationMethods, usdAaaSubscriberLocationSummaryLocationIndex=usdAaaSubscriberLocationSummaryLocationIndex, usdAaaAssignDomainEntry=usdAaaAssignDomainEntry, usdAaaSubscriberInterfaceId=usdAaaSubscriberInterfaceId, usdAaaAssignDomainTunnelMedium=usdAaaAssignDomainTunnelMedium, usdAaaSubscriberMaxCount=usdAaaSubscriberMaxCount, usdAaaOutgoingAddrRequests=usdAaaOutgoingAddrRequests, usdAaaStatistics=usdAaaStatistics, usdAaaOutgoingTunnelGrantResponses=usdAaaOutgoingTunnelGrantResponses, usdAaaIncomingAcctResponses=usdAaaIncomingAcctResponses, UsdSubscriberLocationType=UsdSubscriberLocationType, usdAaaObjects=usdAaaObjects, usdAaaCompliance=usdAaaCompliance, usdAaaIdleTimeout=usdAaaIdleTimeout, usdAaaBasicGroup=usdAaaBasicGroup, usdAaaTimeoutGeneral=usdAaaTimeoutGeneral, usdAaaGroup2=usdAaaGroup2, usdAaaAssignDomainTunnelTable=usdAaaAssignDomainTunnelTable, usdAaaSessionTimeout=usdAaaSessionTimeout, usdAaaSubscriberLocationSummaryCount=usdAaaSubscriberLocationSummaryCount, usdAaaMIB=usdAaaMIB, usdAaaAssignDomainTunnelHostName=usdAaaAssignDomainTunnelHostName, usdAaaAddrDnsPrimary=usdAaaAddrDnsPrimary, usdAaaAssignDomainTunnelEntry=usdAaaAssignDomainTunnelEntry, UsdSubscriberLocationValue=UsdSubscriberLocationValue, usdAaaCompliance7=usdAaaCompliance7, usdAaaSubscriberAddrAssignType=usdAaaSubscriberAddrAssignType, usdAaaAssignDomainAtmServiceLevel=usdAaaAssignDomainAtmServiceLevel, usdAaaSubscriberState=usdAaaSubscriberState, usdAaaAccountingGroup2=usdAaaAccountingGroup2, usdAaaAssignDomainTunnelAddress=usdAaaAssignDomainTunnelAddress, usdAaaSubscriberRowStatus=usdAaaSubscriberRowStatus, usdAaaOutgoingGrantResponses=usdAaaOutgoingGrantResponses, usdAaaCapabilitiesGroup=usdAaaCapabilitiesGroup, usdAaaTunnelGeneral=usdAaaTunnelGeneral, usdAaaSubscriberLocationSummaryTable=usdAaaSubscriberLocationSummaryTable, usdAaaSubscriberRouterSummaryRouterIndex=usdAaaSubscriberRouterSummaryRouterIndex, usdAaaAcctSendStopOnAaaDeny=usdAaaAcctSendStopOnAaaDeny, usdAaaAddrWinsSecondary=usdAaaAddrWinsSecondary, usdAaaTunnelAssignmentIdFormat=usdAaaTunnelAssignmentIdFormat, usdAaaCompliance8=usdAaaCompliance8, usdAaaAccounting=usdAaaAccounting, usdAaaOutgoingErrorResponses=usdAaaOutgoingErrorResponses, usdAaaSubscriberLocationTable=usdAaaSubscriberLocationTable, usdAaaSubscriberGroup2=usdAaaSubscriberGroup2, usdAaaAssignBrasLicense=usdAaaAssignBrasLicense, usdAaaAssignGeneral=usdAaaAssignGeneral, usdAaaBrasGroup=usdAaaBrasGroup, usdAaaSubscriberRouterIndex=usdAaaSubscriberRouterIndex, usdAaaTimeout=usdAaaTimeout, usdAaaCompliance4=usdAaaCompliance4, usdAaaIncomingDupAcctResponses=usdAaaIncomingDupAcctResponses, usdAaaSubscriberRouterSummaryTable=usdAaaSubscriberRouterSummaryTable, usdAaaSubscriberEgressPolicyName=usdAaaSubscriberEgressPolicyName, usdAaaSubscriberPeakCount=usdAaaSubscriberPeakCount, usdAaaOutgoingReAuthRequests=usdAaaOutgoingReAuthRequests, usdAaaAssignDomainTunnelTag=usdAaaAssignDomainTunnelTag, usdAaaSubscriberRouterRouterIndex=usdAaaSubscriberRouterRouterIndex, usdAaaCompliance2=usdAaaCompliance2, usdAaaSubscriberLocationEntry=usdAaaSubscriberLocationEntry, usdAaaAddress=usdAaaAddress, usdAaaBrasGroup2=usdAaaBrasGroup2, usdAaaAssignDomainOverridePassword=usdAaaAssignDomainOverridePassword, usdAaaAssignDomainRouterName=usdAaaAssignDomainRouterName, UsdAaaAccountingMethods=UsdAaaAccountingMethods, usdAaaAcctMethods=usdAaaAcctMethods, usdAaaSubscriberLocationLocationIndex=usdAaaSubscriberLocationLocationIndex, usdAaaAssignDomainAtmPcr=usdAaaAssignDomainAtmPcr, usdAaaAccountingGroup=usdAaaAccountingGroup, usdAaaAssignment=usdAaaAssignment, usdAaaOutgoingAcctRequests=usdAaaOutgoingAcctRequests, usdAaaSubscribers=usdAaaSubscribers, usdAaaBrasGroup4=usdAaaBrasGroup4, usdAaaSubscriberRouterSummaryCount=usdAaaSubscriberRouterSummaryCount, usdAaaGroup=usdAaaGroup, usdAaaCapabilities=usdAaaCapabilities, usdAaaAssignDomainRowStatus=usdAaaAssignDomainRowStatus, usdAaaBrasCapability=usdAaaBrasCapability, UsdAddressAssignType=UsdAddressAssignType, usdAaaAcctGeneral=usdAaaAcctGeneral, usdAaaAssignDomainIpHint=usdAaaAssignDomainIpHint, usdAaaIncomingInitiateRequests=usdAaaIncomingInitiateRequests, usdAaaMIBCompliances=usdAaaMIBCompliances, usdAaaAssignDomainTunnelName=usdAaaAssignDomainTunnelName, usdAaaAssignDomainTunnelType=usdAaaAssignDomainTunnelType)
