#
# PySNMP MIB module CPQCMC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQCMC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
compaq, = mibBuilder.importSymbols("CPQHOST-MIB", "compaq")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysLocation, sysName, sysDescr, sysContact = mibBuilder.importSymbols("SNMPv2-MIB", "sysLocation", "sysName", "sysDescr", "sysContact")
Bits, Counter64, Integer32, MibIdentifier, iso, NotificationType, Unsigned32, Counter32, NotificationType, ModuleIdentity, TimeTicks, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "MibIdentifier", "iso", "NotificationType", "Unsigned32", "Counter32", "NotificationType", "ModuleIdentity", "TimeTicks", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpqCmc = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153))
cpqCmcMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 1))
cpqCmcComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2))
cpqCmcInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 1))
cpqCmcOsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 1, 1))
cpqCmcDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2))
cpqCmcSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2))
cpqCmcSetupConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1))
cpqCmcSetupGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1))
cpqCmcSetupEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2))
cpqCmcSetupTemp1 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1))
cpqCmcSetupTemp2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2))
cpqCmcSetupFan1 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 3))
cpqCmcSetupFan2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 4))
cpqCmcSetupVoltage = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 5))
cpqCmcSetupHumidity = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 6))
cpqCmcSetupInput1 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7))
cpqCmcSetupInput2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8))
cpqCmcSetupInput3 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9))
cpqCmcSetupInput4 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10))
cpqCmcSetupLock1 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11))
cpqCmcSetupLock2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12))
cpqCmcSetupSmoke = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 13))
cpqCmcSetupShock = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 14))
cpqCmcSetupAux1 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15))
cpqCmcSetupAux2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16))
cpqCmcSetupAlarm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 17))
cpqCmcSetupAlarm2 = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 18))
cpqCmcSetupClock = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 3))
cpqCmcSetupThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2))
cpqCmcTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3))
cpqCmcValues = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 3))
cpqCmcStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4))
cpqCmcControl = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5))
cpqCmcLog = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6))
cpqCmcMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcMibRevMajor.setStatus('mandatory')
cpqCmcMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcMibRevMinor.setStatus('mandatory')
cpqCmcMibCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcMibCondition.setStatus('mandatory')
cpqCmcOsCommonPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcOsCommonPollFreq.setStatus('mandatory')
cpqCmcDeviceCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("overloadDC", 3), ("fuseDC", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcDeviceCondition.setStatus('mandatory')
cpqCmcsetLanguage = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("english", 2), ("french", 3), ("italian", 4), ("german", 5), ("spanish", 6), ("dutch", 7), ("japanese", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcsetLanguage.setStatus('mandatory')
cpqCmcsetTempUnit = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("celsius", 2), ("fahrenheit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcsetTempUnit.setStatus('mandatory')
cpqCmcsetAudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("enableSilence", 2), ("disableSilence", 3), ("off", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcsetAudibleAlarm.setStatus('mandatory')
cpqCmcPassword = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcPassword.setStatus('mandatory')
cpqCmcPasswordOption = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcPasswordOption.setStatus('mandatory')
cpqCmcquitRelay1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcquitRelay1.setStatus('mandatory')
cpqCmcquitRelay2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcquitRelay2.setStatus('mandatory')
cpqCmclogicRelay1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("closeAtAlarm", 2), ("openAtAlarm", 3), ("closeAtEPO", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmclogicRelay1.setStatus('mandatory')
cpqCmclogicRelay2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("closeAtAlarm", 2), ("openAtAlarm", 3), ("closeAtEPO", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmclogicRelay2.setStatus('mandatory')
cpqCmcSetupTemp1Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1Avail.setStatus('mandatory')
cpqCmcSetupTemp1RelaysWarn = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1RelaysWarn.setStatus('mandatory')
cpqCmcSetupTemp1RelaysMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1RelaysMax.setStatus('mandatory')
cpqCmcSetupTemp1RelaysMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1RelaysMin.setStatus('mandatory')
cpqCmcSetupTemp1AudibleAlarmWarn = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1AudibleAlarmWarn.setStatus('mandatory')
cpqCmcSetupTemp1AudibleAlarmMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1AudibleAlarmMax.setStatus('mandatory')
cpqCmcSetupTemp1AudibleAlarmMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp1AudibleAlarmMin.setStatus('mandatory')
cpqCmcSetupTemp2Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2Avail.setStatus('mandatory')
cpqCmcSetupTemp2RelaysWarn = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2RelaysWarn.setStatus('mandatory')
cpqCmcSetupTemp2RelaysMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2RelaysMax.setStatus('mandatory')
cpqCmcSetupTemp2RelaysMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2RelaysMin.setStatus('mandatory')
cpqCmcSetupTemp2AudibleAlarmWarn = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2AudibleAlarmWarn.setStatus('mandatory')
cpqCmcSetupTemp2AudibleAlarmMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2AudibleAlarmMax.setStatus('mandatory')
cpqCmcSetupTemp2AudibleAlarmMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTemp2AudibleAlarmMin.setStatus('mandatory')
cpqCmcSetupFan1Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupFan1Avail.setStatus('mandatory')
cpqCmcSetupFan1Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupFan1Relays.setStatus('mandatory')
cpqCmcSetupFan1AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupFan1AudibleAlarm.setStatus('mandatory')
cpqCmcSetupFan2Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupFan2Avail.setStatus('mandatory')
cpqCmcSetupFan2Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupFan2Relays.setStatus('mandatory')
cpqCmcSetupFan2AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupFan2AudibleAlarm.setStatus('mandatory')
cpqCmcSetupVoltageAvail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupVoltageAvail.setStatus('mandatory')
cpqCmcSetupVoltageRelaysMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupVoltageRelaysMax.setStatus('mandatory')
cpqCmcSetupVoltageRelaysMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupVoltageRelaysMin.setStatus('mandatory')
cpqCmcSetupVoltageAudibleAlarmMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupVoltageAudibleAlarmMax.setStatus('mandatory')
cpqCmcSetupVoltageAudibleAlarmMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupVoltageAudibleAlarmMin.setStatus('mandatory')
cpqCmcSetupHumidityAvail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupHumidityAvail.setStatus('mandatory')
cpqCmcSetupHumidityRelaysMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupHumidityRelaysMax.setStatus('mandatory')
cpqCmcSetupHumidityRelaysMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupHumidityRelaysMin.setStatus('mandatory')
cpqCmcSetupHumidityAudibleAlarmMax = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupHumidityAudibleAlarmMax.setStatus('mandatory')
cpqCmcSetupHumidityAudibleAlarmMin = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupHumidityAudibleAlarmMin.setStatus('mandatory')
cpqCmcSetupInput1Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1Avail.setStatus('mandatory')
cpqCmcSetupInput1Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1Relays.setStatus('mandatory')
cpqCmcSetupInput1AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1AudibleAlarm.setStatus('mandatory')
cpqCmcSetupInput1FansOff = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("both", 2), ("fan1", 3), ("fan2", 4), ("noFan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1FansOff.setStatus('mandatory')
cpqCmcSetupInput1ShockSensor = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1ShockSensor.setStatus('mandatory')
cpqCmcSetupInput1Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1Description.setStatus('mandatory')
cpqCmcSetupInput1Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("lock1", 3), ("lock2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput1Lock.setStatus('mandatory')
cpqCmcSetupInput2Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2Avail.setStatus('mandatory')
cpqCmcSetupInput2Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2Relays.setStatus('mandatory')
cpqCmcSetupInput2AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2AudibleAlarm.setStatus('mandatory')
cpqCmcSetupInput2FansOff = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("both", 2), ("fan1", 3), ("fan2", 4), ("noFan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2FansOff.setStatus('mandatory')
cpqCmcSetupInput2ShockSensor = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2ShockSensor.setStatus('mandatory')
cpqCmcSetupInput2Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2Description.setStatus('mandatory')
cpqCmcSetupInput2Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("lock1", 3), ("lock2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput2Lock.setStatus('mandatory')
cpqCmcSetupInput3Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3Avail.setStatus('mandatory')
cpqCmcSetupInput3Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3Relays.setStatus('mandatory')
cpqCmcSetupInput3AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3AudibleAlarm.setStatus('mandatory')
cpqCmcSetupInput3FansOff = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("both", 2), ("fan1", 3), ("fan2", 4), ("noFan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3FansOff.setStatus('mandatory')
cpqCmcSetupInput3ShockSensor = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3ShockSensor.setStatus('mandatory')
cpqCmcSetupInput3Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3Description.setStatus('mandatory')
cpqCmcSetupInput3Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 9, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("lock1", 3), ("lock2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput3Lock.setStatus('mandatory')
cpqCmcSetupInput4Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4Avail.setStatus('mandatory')
cpqCmcSetupInput4Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4Relays.setStatus('mandatory')
cpqCmcSetupInput4AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4AudibleAlarm.setStatus('mandatory')
cpqCmcSetupInput4FansOff = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("both", 2), ("fan1", 3), ("fan2", 4), ("noFan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4FansOff.setStatus('mandatory')
cpqCmcSetupInput4ShockSensor = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4ShockSensor.setStatus('mandatory')
cpqCmcSetupInput4Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4Description.setStatus('mandatory')
cpqCmcSetupInput4Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("lock1", 3), ("lock2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupInput4Lock.setStatus('mandatory')
cpqCmcSetupLock1Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1Avail.setStatus('mandatory')
cpqCmcSetupLock1Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1Relays.setStatus('mandatory')
cpqCmcSetupLock1RelaysDevice = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1RelaysDevice.setStatus('mandatory')
cpqCmcSetupLock1AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1AudibleAlarm.setStatus('mandatory')
cpqCmcSetupLock1AudibleAlarmDevice = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1AudibleAlarmDevice.setStatus('mandatory')
cpqCmcSetupLock1Time = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1Time.setStatus('mandatory')
cpqCmcSetupLock1PwrFailUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1PwrFailUnlock.setStatus('mandatory')
cpqCmcSetupLock1BattLowUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1BattLowUnlock.setStatus('mandatory')
cpqCmcSetupLock1NetFailUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1NetFailUnlock.setStatus('mandatory')
cpqCmcSetupLock1LifeFailUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 11, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock1LifeFailUnlock.setStatus('mandatory')
cpqCmcSetupLock2Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2Avail.setStatus('mandatory')
cpqCmcSetupLock2Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2Relays.setStatus('mandatory')
cpqCmcSetupLock2RelaysDevice = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2RelaysDevice.setStatus('mandatory')
cpqCmcSetupLock2AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2AudibleAlarm.setStatus('mandatory')
cpqCmcSetupLock2AudibleAlarmDevice = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2AudibleAlarmDevice.setStatus('mandatory')
cpqCmcSetupLock2Time = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2Time.setStatus('mandatory')
cpqCmcSetupLock2PwrFailUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2PwrFailUnlock.setStatus('mandatory')
cpqCmcSetupLock2BattLowUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2BattLowUnlock.setStatus('mandatory')
cpqCmcSetupLock2NetFailUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2NetFailUnlock.setStatus('mandatory')
cpqCmcSetupLock2LifeFailUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 12, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("auto", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupLock2LifeFailUnlock.setStatus('mandatory')
cpqCmcSetupSmokeAvail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupSmokeAvail.setStatus('mandatory')
cpqCmcSetupSmokeRelays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupSmokeRelays.setStatus('mandatory')
cpqCmcSetupSmokeAudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupSmokeAudibleAlarm.setStatus('mandatory')
cpqCmcSetupSmokeFansOff = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("both", 2), ("fan1", 3), ("fan2", 4), ("noFan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupSmokeFansOff.setStatus('mandatory')
cpqCmcSetupSmokeUnlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("both", 2), ("lock1", 3), ("lock2", 4), ("noLock", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupSmokeUnlock.setStatus('mandatory')
cpqCmcSetupShockAvail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupShockAvail.setStatus('mandatory')
cpqCmcSetupShockRelays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupShockRelays.setStatus('mandatory')
cpqCmcSetupShockAudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupShockAudibleAlarm.setStatus('mandatory')
cpqCmcSetupShockSensitivity = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 14, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupShockSensitivity.setStatus('mandatory')
cpqCmcSetupAux1Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux1Avail.setStatus('mandatory')
cpqCmcSetupAux1Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux1Relays.setStatus('mandatory')
cpqCmcSetupAux1AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux1AudibleAlarm.setStatus('mandatory')
cpqCmcSetupAux1InputType = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("normOpen", 2), ("normClosed", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux1InputType.setStatus('mandatory')
cpqCmcSetupAux1Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux1Description.setStatus('mandatory')
cpqCmcSetupAux1Unlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("noLock", 2), ("lock1", 3), ("lock2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux1Unlock.setStatus('mandatory')
cpqCmcSetupAux2Avail = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("notAvailable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux2Avail.setStatus('mandatory')
cpqCmcSetupAux2Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux2Relays.setStatus('mandatory')
cpqCmcSetupAux2AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux2AudibleAlarm.setStatus('mandatory')
cpqCmcSetupAux2InputType = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("normOpen", 2), ("normClosed", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux2InputType.setStatus('mandatory')
cpqCmcSetupAux2Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux2Description.setStatus('mandatory')
cpqCmcSetupAux2Unlock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("noLock", 2), ("lock1", 3), ("lock2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAux2Unlock.setStatus('mandatory')
cpqCmcSetupAlarm1Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAlarm1Relays.setStatus('mandatory')
cpqCmcSetupAlarm1AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAlarm1AudibleAlarm.setStatus('mandatory')
cpqCmcSetupAlarm1Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 17, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAlarm1Description.setStatus('mandatory')
cpqCmcSetupAlarm2Relays = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("relay1", 3), ("relay2", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAlarm2Relays.setStatus('mandatory')
cpqCmcSetupAlarm2AudibleAlarm = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAlarm2AudibleAlarm.setStatus('mandatory')
cpqCmcSetupAlarm2Description = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 2, 18, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupAlarm2Description.setStatus('mandatory')
cpqCmcSetupDate = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupDate.setStatus('mandatory')
cpqCmcSetupTime = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetupTime.setStatus('mandatory')
cpqCmcThresholdMaxTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMaxTemp1.setStatus('mandatory')
cpqCmcThresholdWarningTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdWarningTemp1.setStatus('mandatory')
cpqCmcThresholdMinTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMinTemp1.setStatus('mandatory')
cpqCmcThresholdMaxTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMaxTemp2.setStatus('mandatory')
cpqCmcThresholdWarningTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdWarningTemp2.setStatus('mandatory')
cpqCmcThresholdMinTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMinTemp2.setStatus('mandatory')
cpqCmcThresholdFan1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdFan1.setStatus('mandatory')
cpqCmcThresholdFan1Hysteresis = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdFan1Hysteresis.setStatus('mandatory')
cpqCmcThresholdFan2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdFan2.setStatus('mandatory')
cpqCmcThresholdFan2Hysteresis = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdFan2Hysteresis.setStatus('mandatory')
cpqCmcThresholdMaxVoltage = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMaxVoltage.setStatus('mandatory')
cpqCmcThresholdMinVoltage = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMinVoltage.setStatus('mandatory')
cpqCmcThresholdMaxHumidity = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMaxHumidity.setStatus('mandatory')
cpqCmcThresholdMinHumidity = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcThresholdMinHumidity.setStatus('mandatory')
cpqCmcTrapTableNumber = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcTrapTableNumber.setStatus('mandatory')
cpqCmcTrapTable = MibTable((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3, 2), )
if mibBuilder.loadTexts: cpqCmcTrapTable.setStatus('mandatory')
cpqCmcTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3, 2, 1), ).setIndexNames((0, "CPQCMC-MIB", "cpqCmcTrapIndex"))
if mibBuilder.loadTexts: cpqCmcTrapEntry.setStatus('mandatory')
cpqCmcTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcTrapIndex.setStatus('mandatory')
cpqCmcTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcTrapStatus.setStatus('mandatory')
cpqCmcTrapIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 2, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcTrapIPaddress.setStatus('mandatory')
cpqCmcValueTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcValueTemp1.setStatus('mandatory')
cpqCmcValueTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcValueTemp2.setStatus('mandatory')
cpqCmcValueVoltage = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcValueVoltage.setStatus('mandatory')
cpqCmcValueHumidity = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcValueHumidity.setStatus('mandatory')
cpqCmcValueOperatingTime = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcValueOperatingTime.setStatus('mandatory')
cpqCmcStatusTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("warning", 3), ("overMax", 4), ("underMin", 5), ("noSensor", 6), ("error", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusTemp1.setStatus('mandatory')
cpqCmcStatusTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("warning", 3), ("overMax", 4), ("underMin", 5), ("noSensor", 6), ("error", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusTemp2.setStatus('mandatory')
cpqCmcStatusFan1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("autoOff", 2), ("autoOn", 3), ("manualOff", 4), ("manualOn", 5), ("smokeOff", 6), ("doorOff", 7), ("noFan", 8), ("error", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusFan1.setStatus('mandatory')
cpqCmcStatusFan2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("autoOff", 2), ("autoOn", 3), ("manualOff", 4), ("manualOn", 5), ("smokeOff", 6), ("doorOff", 7), ("noFan", 8), ("error", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusFan2.setStatus('mandatory')
cpqCmcStatusVoltage = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("overMax", 3), ("underMin", 4), ("noVoltage", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusVoltage.setStatus('mandatory')
cpqCmcStatusHumidity = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("overMax", 3), ("underMin", 4), ("noSensor", 5), ("error", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusHumidity.setStatus('mandatory')
cpqCmcStatusInput1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("closed", 2), ("open", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusInput1.setStatus('mandatory')
cpqCmcStatusInput2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("closed", 2), ("open", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusInput2.setStatus('mandatory')
cpqCmcStatusInput3 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("closed", 2), ("open", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusInput3.setStatus('mandatory')
cpqCmcStatusInput4 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("closed", 2), ("open", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusInput4.setStatus('mandatory')
cpqCmcStatusLock1Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("locked", 2), ("unlockedAuto", 3), ("unlockedTime", 4), ("unlockedSmoke", 5), ("unlockedKey", 6), ("unlockedPwrFail", 7), ("unlockedBattLow", 8), ("unlockedNetFail", 9), ("unlockedConnFail", 10), ("readyToLock", 11), ("alarm", 12), ("configError", 13), ("notAvail", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusLock1Lock.setStatus('mandatory')
cpqCmcStatusLock2Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("locked", 2), ("unlockedAuto", 3), ("unlockedTime", 4), ("unlockedSmoke", 5), ("unlockedKey", 6), ("unlockedPwrFail", 7), ("unlockedBattLow", 8), ("unlockedNetFail", 9), ("unlockedConnFail", 10), ("readyToLock", 11), ("alarm", 12), ("configError", 13), ("notAvail", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusLock2Lock.setStatus('mandatory')
cpqCmcStatusSmoke = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("cleared", 2), ("present", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusSmoke.setStatus('mandatory')
cpqCmcStatusShock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("cleared", 2), ("present", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusShock.setStatus('mandatory')
cpqCmcStatusAux1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("alarm", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusAux1.setStatus('mandatory')
cpqCmcStatusAux2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("alarm", 3), ("noSensor", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusAux2.setStatus('mandatory')
cpqCmcStatusAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusAlarm1.setStatus('mandatory')
cpqCmcStatusAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusAlarm2.setStatus('mandatory')
cpqCmcStatusLock1Dev = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("powerFail", 3), ("lowBattery", 4), ("replaceBatt", 5), ("missingBatt", 6), ("noConnect", 7), ("notAvail", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusLock1Dev.setStatus('mandatory')
cpqCmcStatusLock2Dev = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("powerFail", 3), ("lowBattery", 4), ("replaceBatt", 5), ("missingBatt", 6), ("noConnect", 7), ("notAvail", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcStatusLock2Dev.setStatus('mandatory')
cpqCmcStatusAccess = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcStatusAccess.setStatus('mandatory')
cpqCmcSetLock1Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("lockDoor", 2), ("openDoorTime", 3), ("openDoor", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetLock1Lock.setStatus('mandatory')
cpqCmcSetLock1Key = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enableBoth", 3), ("enableKeypad", 4), ("enableRemoteInput", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetLock1Key.setStatus('mandatory')
cpqCmcSetLock2Lock = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("lockDoor", 2), ("openDoorTime", 3), ("openDoor", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetLock2Lock.setStatus('mandatory')
cpqCmcSetLock2Key = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enableBoth", 3), ("enableKeypad", 4), ("enableRemoteInput", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetLock2Key.setStatus('mandatory')
cpqCmcSetMessage = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetMessage.setStatus('mandatory')
cpqCmcSetAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("clearAlarm", 2), ("setAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetAlarm1.setStatus('mandatory')
cpqCmcSetAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("clearAlarm", 2), ("setAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetAlarm2.setStatus('mandatory')
cpqCmcSetFan1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("auto", 2), ("on", 3), ("off", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetFan1.setStatus('mandatory')
cpqCmcSetFan2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("auto", 2), ("on", 3), ("off", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetFan2.setStatus('mandatory')
cpqCmcSetQuitRelay1 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("switched", 2), ("notSwitched", 3), ("quit", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetQuitRelay1.setStatus('mandatory')
cpqCmcSetQuitRelay2 = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 5, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("switched", 2), ("notSwitched", 3), ("quit", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqCmcSetQuitRelay2.setStatus('mandatory')
cpqCmcLogsNumber = MibScalar((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcLogsNumber.setStatus('mandatory')
cpqCmcLogTable = MibTable((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2), )
if mibBuilder.loadTexts: cpqCmcLogTable.setStatus('mandatory')
cpqCmcLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2, 1), ).setIndexNames((0, "CPQCMC-MIB", "cpqCmcLogIndex"))
if mibBuilder.loadTexts: cpqCmcLogEntry.setStatus('mandatory')
cpqCmcLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcLogIndex.setStatus('mandatory')
cpqCmcLogDate = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcLogDate.setStatus('mandatory')
cpqCmcLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcLogTime.setStatus('mandatory')
cpqCmcLogText = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcLogText.setStatus('mandatory')
cpqCmcLogClass = MibTableColumn((1, 3, 6, 1, 4, 1, 232, 153, 2, 2, 6, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqCmcLogClass.setStatus('mandatory')
cpqCmcalarmTemp1 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153001)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusTemp1"))
cpqCmcalarmTemp2 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153002)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusTemp2"))
cpqCmcalarmFan1 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153003)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusFan1"))
cpqCmcalarmFan2 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153004)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusFan2"))
cpqCmcalarmVoltage = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153005)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusVoltage"))
cpqCmcalarmHumidity = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153006)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusHumidity"))
cpqCmcalarmInput1 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153007)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusInput1"))
cpqCmcalarmInput2 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153008)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusInput2"))
cpqCmcalarmInput3 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153009)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusInput3"))
cpqCmcalarmInput4 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153010)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusInput4"))
cpqCmcalarmLock1 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153011)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusLock1Lock"))
cpqCmcalarmLock2 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153012)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusLock2Lock"))
cpqCmcalarmSmoke = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153013)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusSmoke"))
cpqCmcalarmShock = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153014)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusShock"))
cpqCmcalarmAux1 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153015)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusAux1"))
cpqCmcalarmAux2 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153016)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusAux2"))
cpqCmcalarm1 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153017)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusAlarm1"))
cpqCmcalarm2 = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153018)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusAlarm2"))
cpqCmcalarmLock1Dev = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153019)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusLock1Dev"))
cpqCmcalarmLock2Dev = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153020)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("CPQCMC-MIB", "cpqCmcStatusLock2Dev"))
cpqCmcSetupChanged = NotificationType((1, 3, 6, 1, 4, 1, 232, 153) + (0,153100)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysContact"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"))
mibBuilder.exportSymbols("CPQCMC-MIB", cpqCmcSetupLock1PwrFailUnlock=cpqCmcSetupLock1PwrFailUnlock, cpqCmcSetupTemp2AudibleAlarmMax=cpqCmcSetupTemp2AudibleAlarmMax, cpqCmcMibRev=cpqCmcMibRev, cpqCmcTrapStatus=cpqCmcTrapStatus, cpqCmcSetupTemp1RelaysMin=cpqCmcSetupTemp1RelaysMin, cpqCmcSetupInput4FansOff=cpqCmcSetupInput4FansOff, cpqCmcStatusAux1=cpqCmcStatusAux1, cpqCmcSetupInput3Relays=cpqCmcSetupInput3Relays, cpqCmcSetupAlarm2AudibleAlarm=cpqCmcSetupAlarm2AudibleAlarm, cpqCmcValueTemp2=cpqCmcValueTemp2, cpqCmcSetupVoltageAudibleAlarmMin=cpqCmcSetupVoltageAudibleAlarmMin, cpqCmcSetupLock2PwrFailUnlock=cpqCmcSetupLock2PwrFailUnlock, cpqCmcSetupInput1Description=cpqCmcSetupInput1Description, cpqCmcStatusTemp2=cpqCmcStatusTemp2, cpqCmcSetupLock2AudibleAlarmDevice=cpqCmcSetupLock2AudibleAlarmDevice, cpqCmcValues=cpqCmcValues, cpqCmcSetupInput2AudibleAlarm=cpqCmcSetupInput2AudibleAlarm, cpqCmcSetupSmokeRelays=cpqCmcSetupSmokeRelays, cpqCmcalarm2=cpqCmcalarm2, cpqCmcSetupLock1AudibleAlarm=cpqCmcSetupLock1AudibleAlarm, cpqCmcSetupAux1AudibleAlarm=cpqCmcSetupAux1AudibleAlarm, cpqCmcSetupAlarm2=cpqCmcSetupAlarm2, cpqCmcMibCondition=cpqCmcMibCondition, cpqCmcStatusInput4=cpqCmcStatusInput4, cpqCmcSetupInput4=cpqCmcSetupInput4, cpqCmcSetupTemp1RelaysMax=cpqCmcSetupTemp1RelaysMax, cpqCmcSetupInput3FansOff=cpqCmcSetupInput3FansOff, cpqCmcsetTempUnit=cpqCmcsetTempUnit, cpqCmcSetupTemp1AudibleAlarmWarn=cpqCmcSetupTemp1AudibleAlarmWarn, cpqCmcSetupInput4Relays=cpqCmcSetupInput4Relays, cpqCmcSetupTemp1AudibleAlarmMax=cpqCmcSetupTemp1AudibleAlarmMax, cpqCmcSetupInput4AudibleAlarm=cpqCmcSetupInput4AudibleAlarm, cpqCmcSetupShockRelays=cpqCmcSetupShockRelays, cpqCmcTrapIPaddress=cpqCmcTrapIPaddress, cpqCmcalarmAux1=cpqCmcalarmAux1, cpqCmcalarmLock1Dev=cpqCmcalarmLock1Dev, cpqCmcSetupInput1AudibleAlarm=cpqCmcSetupInput1AudibleAlarm, cpqCmcSetupAux2AudibleAlarm=cpqCmcSetupAux2AudibleAlarm, cpqCmcThresholdMaxTemp1=cpqCmcThresholdMaxTemp1, cpqCmcMibRevMajor=cpqCmcMibRevMajor, cpqCmcSetupClock=cpqCmcSetupClock, cpqCmcSetupShock=cpqCmcSetupShock, cpqCmcSetup=cpqCmcSetup, cpqCmcSetupInput3AudibleAlarm=cpqCmcSetupInput3AudibleAlarm, cpqCmcSetupAlarm1Relays=cpqCmcSetupAlarm1Relays, cpqCmcSetFan2=cpqCmcSetFan2, cpqCmcSetupHumidity=cpqCmcSetupHumidity, cpqCmcSetupLock2LifeFailUnlock=cpqCmcSetupLock2LifeFailUnlock, cpqCmclogicRelay2=cpqCmclogicRelay2, cpqCmcSetupSmoke=cpqCmcSetupSmoke, cpqCmcSetupTemp1RelaysWarn=cpqCmcSetupTemp1RelaysWarn, cpqCmcSetupTemp2Avail=cpqCmcSetupTemp2Avail, cpqCmcSetupAlarm1AudibleAlarm=cpqCmcSetupAlarm1AudibleAlarm, cpqCmcSetupFan2Relays=cpqCmcSetupFan2Relays, cpqCmcSetupTemp2AudibleAlarmWarn=cpqCmcSetupTemp2AudibleAlarmWarn, cpqCmcStatusShock=cpqCmcStatusShock, cpqCmcSetupFan1Relays=cpqCmcSetupFan1Relays, cpqCmcalarmInput3=cpqCmcalarmInput3, cpqCmcSetupLock1Avail=cpqCmcSetupLock1Avail, cpqCmcComponent=cpqCmcComponent, cpqCmcalarmShock=cpqCmcalarmShock, cpqCmcSetupAux1Description=cpqCmcSetupAux1Description, cpqCmcSetupGeneral=cpqCmcSetupGeneral, cpqCmcSetupLock1Time=cpqCmcSetupLock1Time, cpqCmcLog=cpqCmcLog, cpqCmcLogTable=cpqCmcLogTable, cpqCmcSetupHumidityRelaysMax=cpqCmcSetupHumidityRelaysMax, cpqCmcSetupVoltageRelaysMin=cpqCmcSetupVoltageRelaysMin, cpqCmcSetupSmokeUnlock=cpqCmcSetupSmokeUnlock, cpqCmcSetupAux1=cpqCmcSetupAux1, cpqCmcThresholdWarningTemp1=cpqCmcThresholdWarningTemp1, cpqCmcTraps=cpqCmcTraps, cpqCmcDevice=cpqCmcDevice, cpqCmcStatusLock1Dev=cpqCmcStatusLock1Dev, cpqCmcStatusAccess=cpqCmcStatusAccess, cpqCmcSetQuitRelay1=cpqCmcSetQuitRelay1, cpqCmcLogText=cpqCmcLogText, cpqCmcThresholdFan2Hysteresis=cpqCmcThresholdFan2Hysteresis, cpqCmcalarmSmoke=cpqCmcalarmSmoke, cpqCmcThresholdMaxHumidity=cpqCmcThresholdMaxHumidity, cpqCmcSetupAlarm1Description=cpqCmcSetupAlarm1Description, cpqCmcSetupLock2RelaysDevice=cpqCmcSetupLock2RelaysDevice, cpqCmcSetupLock1LifeFailUnlock=cpqCmcSetupLock1LifeFailUnlock, cpqCmcSetupTime=cpqCmcSetupTime, cpqCmcSetupConfig=cpqCmcSetupConfig, cpqCmcSetupInput3Lock=cpqCmcSetupInput3Lock, cpqCmcSetLock2Key=cpqCmcSetLock2Key, cpqCmcSetupLock1NetFailUnlock=cpqCmcSetupLock1NetFailUnlock, cpqCmcSetupLock1RelaysDevice=cpqCmcSetupLock1RelaysDevice, cpqCmcStatusFan1=cpqCmcStatusFan1, cpqCmcSetupInput2Relays=cpqCmcSetupInput2Relays, cpqCmcStatusVoltage=cpqCmcStatusVoltage, cpqCmcStatusHumidity=cpqCmcStatusHumidity, cpqCmcSetAlarm1=cpqCmcSetAlarm1, cpqCmcSetupHumidityAvail=cpqCmcSetupHumidityAvail, cpqCmcControl=cpqCmcControl, cpqCmcSetupInput4Lock=cpqCmcSetupInput4Lock, cpqCmcSetupInput2ShockSensor=cpqCmcSetupInput2ShockSensor, cpqCmcSetupInput3ShockSensor=cpqCmcSetupInput3ShockSensor, cpqCmcSetupLock1AudibleAlarmDevice=cpqCmcSetupLock1AudibleAlarmDevice, cpqCmcStatusInput1=cpqCmcStatusInput1, cpqCmcalarmHumidity=cpqCmcalarmHumidity, cpqCmcalarmTemp2=cpqCmcalarmTemp2, cpqCmcquitRelay2=cpqCmcquitRelay2, cpqCmcTrapEntry=cpqCmcTrapEntry, cpqCmcalarmAux2=cpqCmcalarmAux2, cpqCmcLogDate=cpqCmcLogDate, cpqCmcPasswordOption=cpqCmcPasswordOption, cpqCmcSetupSmokeAvail=cpqCmcSetupSmokeAvail, cpqCmcOsCommon=cpqCmcOsCommon, cpqCmcSetupSmokeAudibleAlarm=cpqCmcSetupSmokeAudibleAlarm, cpqCmcSetupTemp2=cpqCmcSetupTemp2, cpqCmcStatusLock1Lock=cpqCmcStatusLock1Lock, cpqCmcSetAlarm2=cpqCmcSetAlarm2, cpqCmcSetupLock1Relays=cpqCmcSetupLock1Relays, cpqCmcStatusLock2Lock=cpqCmcStatusLock2Lock, cpqCmcSetupVoltageRelaysMax=cpqCmcSetupVoltageRelaysMax, cpqCmcalarm1=cpqCmcalarm1, cpqCmcSetupLock2=cpqCmcSetupLock2, cpqCmcSetupInput2Lock=cpqCmcSetupInput2Lock, cpqCmcSetLock1Key=cpqCmcSetLock1Key, cpqCmcLogEntry=cpqCmcLogEntry, cpqCmcInterface=cpqCmcInterface, cpqCmcSetupInput1Avail=cpqCmcSetupInput1Avail, cpqCmcSetupInput2Description=cpqCmcSetupInput2Description, cpqCmcSetupAux1InputType=cpqCmcSetupAux1InputType, cpqCmcTrapTable=cpqCmcTrapTable, cpqCmcDeviceCondition=cpqCmcDeviceCondition, cpqCmcSetupInput2Avail=cpqCmcSetupInput2Avail, cpqCmcTrapIndex=cpqCmcTrapIndex, cpqCmcalarmLock1=cpqCmcalarmLock1, cpqCmcalarmTemp1=cpqCmcalarmTemp1, cpqCmcSetupAux2=cpqCmcSetupAux2, cpqCmcThresholdMaxVoltage=cpqCmcThresholdMaxVoltage, cpqCmcSetupTemp2RelaysMin=cpqCmcSetupTemp2RelaysMin, cpqCmcalarmInput2=cpqCmcalarmInput2, cpqCmcSetupAlarm1=cpqCmcSetupAlarm1, cpqCmcalarmInput4=cpqCmcalarmInput4, cpqCmcSetupHumidityAudibleAlarmMax=cpqCmcSetupHumidityAudibleAlarmMax, cpqCmcOsCommonPollFreq=cpqCmcOsCommonPollFreq, cpqCmcSetupTemp1Avail=cpqCmcSetupTemp1Avail, cpqCmcStatusInput3=cpqCmcStatusInput3, cpqCmcSetFan1=cpqCmcSetFan1, cpqCmcalarmFan1=cpqCmcalarmFan1, cpqCmcThresholdMinVoltage=cpqCmcThresholdMinVoltage, cpqCmcValueHumidity=cpqCmcValueHumidity, cpqCmcSetupInput2=cpqCmcSetupInput2, cpqCmcStatusAlarm1=cpqCmcStatusAlarm1, cpqCmcSetupVoltageAvail=cpqCmcSetupVoltageAvail, cpqCmcSetupLock2AudibleAlarm=cpqCmcSetupLock2AudibleAlarm, cpqCmcStatusLock2Dev=cpqCmcStatusLock2Dev, cpqCmcSetupInput3Avail=cpqCmcSetupInput3Avail, cpqCmcSetupInput1Lock=cpqCmcSetupInput1Lock, cpqCmcSetupLock2Relays=cpqCmcSetupLock2Relays, cpqCmcalarmLock2Dev=cpqCmcalarmLock2Dev, cpqCmcalarmLock2=cpqCmcalarmLock2, cpqCmcSetupLock2Avail=cpqCmcSetupLock2Avail, cpqCmcThresholdMinHumidity=cpqCmcThresholdMinHumidity, cpqCmcSetupLock1=cpqCmcSetupLock1, cpqCmcValueVoltage=cpqCmcValueVoltage, cpqCmcStatusInput2=cpqCmcStatusInput2, cpqCmcSetupTemp2RelaysWarn=cpqCmcSetupTemp2RelaysWarn, cpqCmcSetupAux1Unlock=cpqCmcSetupAux1Unlock, cpqCmcSetupInput3=cpqCmcSetupInput3, cpqCmcSetupAux2Description=cpqCmcSetupAux2Description, cpqCmcStatus=cpqCmcStatus, cpqCmcsetLanguage=cpqCmcsetLanguage, cpqCmcSetupLock2NetFailUnlock=cpqCmcSetupLock2NetFailUnlock, cpqCmcStatusSmoke=cpqCmcStatusSmoke, cpqCmcLogsNumber=cpqCmcLogsNumber, cpqCmcSetupDate=cpqCmcSetupDate, cpqCmcStatusTemp1=cpqCmcStatusTemp1, cpqCmcSetupVoltageAudibleAlarmMax=cpqCmcSetupVoltageAudibleAlarmMax, cpqCmclogicRelay1=cpqCmclogicRelay1, cpqCmcSetupShockSensitivity=cpqCmcSetupShockSensitivity, cpqCmcSetupAux1Avail=cpqCmcSetupAux1Avail, cpqCmcSetupLock2BattLowUnlock=cpqCmcSetupLock2BattLowUnlock, cpqCmcSetupEvents=cpqCmcSetupEvents, cpqCmcThresholdWarningTemp2=cpqCmcThresholdWarningTemp2, cpqCmcSetupFan2Avail=cpqCmcSetupFan2Avail, cpqCmcSetupFan1=cpqCmcSetupFan1, cpqCmcStatusFan2=cpqCmcStatusFan2, cpqCmcalarmInput1=cpqCmcalarmInput1, cpqCmcSetupFan2=cpqCmcSetupFan2, cpqCmcSetupAux1Relays=cpqCmcSetupAux1Relays, cpqCmcSetupInput4ShockSensor=cpqCmcSetupInput4ShockSensor, cpqCmcSetupLock1BattLowUnlock=cpqCmcSetupLock1BattLowUnlock, cpqCmcSetupAux2Relays=cpqCmcSetupAux2Relays, cpqCmcThresholdFan1=cpqCmcThresholdFan1, cpqCmcThresholdMaxTemp2=cpqCmcThresholdMaxTemp2, cpqCmcSetupInput1=cpqCmcSetupInput1, cpqCmcSetupInput4Description=cpqCmcSetupInput4Description, cpqCmcLogIndex=cpqCmcLogIndex, cpqCmcalarmVoltage=cpqCmcalarmVoltage, cpqCmcSetupVoltage=cpqCmcSetupVoltage, cpqCmcSetLock1Lock=cpqCmcSetLock1Lock, cpqCmcSetQuitRelay2=cpqCmcSetQuitRelay2, cpqCmcSetupChanged=cpqCmcSetupChanged, cpqCmcSetupInput2FansOff=cpqCmcSetupInput2FansOff, cpqCmcSetupInput3Description=cpqCmcSetupInput3Description, cpqCmcSetupAlarm2Relays=cpqCmcSetupAlarm2Relays, cpqCmcSetupFan1Avail=cpqCmcSetupFan1Avail, cpqCmcSetupHumidityAudibleAlarmMin=cpqCmcSetupHumidityAudibleAlarmMin, cpqCmcSetupShockAudibleAlarm=cpqCmcSetupShockAudibleAlarm, cpqCmcSetupFan1AudibleAlarm=cpqCmcSetupFan1AudibleAlarm, cpqCmcalarmFan2=cpqCmcalarmFan2, cpqCmcThresholdFan2=cpqCmcThresholdFan2, cpqCmcThresholdMinTemp1=cpqCmcThresholdMinTemp1, cpqCmcquitRelay1=cpqCmcquitRelay1, cpqCmcSetLock2Lock=cpqCmcSetLock2Lock, cpqCmcSetupLock2Time=cpqCmcSetupLock2Time, cpqCmcValueOperatingTime=cpqCmcValueOperatingTime, cpqCmcSetupTemp2RelaysMax=cpqCmcSetupTemp2RelaysMax, cpqCmcThresholdMinTemp2=cpqCmcThresholdMinTemp2, cpqCmcSetupThreshold=cpqCmcSetupThreshold, cpqCmcSetupInput1ShockSensor=cpqCmcSetupInput1ShockSensor, cpqCmcStatusAux2=cpqCmcStatusAux2, cpqCmcSetupAux2Unlock=cpqCmcSetupAux2Unlock, cpqCmcSetupTemp2AudibleAlarmMin=cpqCmcSetupTemp2AudibleAlarmMin, cpqCmcSetupFan2AudibleAlarm=cpqCmcSetupFan2AudibleAlarm, cpqCmcLogTime=cpqCmcLogTime, cpqCmcValueTemp1=cpqCmcValueTemp1, cpqCmcSetupAlarm2Description=cpqCmcSetupAlarm2Description, cpqCmcSetMessage=cpqCmcSetMessage, cpqCmcMibRevMinor=cpqCmcMibRevMinor, cpqCmcSetupTemp1=cpqCmcSetupTemp1, cpqCmcsetAudibleAlarm=cpqCmcsetAudibleAlarm, cpqCmcSetupInput1FansOff=cpqCmcSetupInput1FansOff, cpqCmcSetupTemp1AudibleAlarmMin=cpqCmcSetupTemp1AudibleAlarmMin, cpqCmcStatusAlarm2=cpqCmcStatusAlarm2, cpqCmcSetupAux2InputType=cpqCmcSetupAux2InputType, cpqCmcPassword=cpqCmcPassword, cpqCmcLogClass=cpqCmcLogClass, cpqCmcThresholdFan1Hysteresis=cpqCmcThresholdFan1Hysteresis, cpqCmcSetupHumidityRelaysMin=cpqCmcSetupHumidityRelaysMin, cpqCmcSetupInput1Relays=cpqCmcSetupInput1Relays, cpqCmcSetupInput4Avail=cpqCmcSetupInput4Avail, cpqCmcSetupAux2Avail=cpqCmcSetupAux2Avail, cpqCmcTrapTableNumber=cpqCmcTrapTableNumber, cpqCmcSetupShockAvail=cpqCmcSetupShockAvail, cpqCmc=cpqCmc, cpqCmcSetupSmokeFansOff=cpqCmcSetupSmokeFansOff)
