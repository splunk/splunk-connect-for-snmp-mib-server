#
# PySNMP MIB module AVAYA-WLAN-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVAYA-WLAN-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter32, Bits, ObjectIdentity, MibIdentifier, NotificationType, IpAddress, Integer32, TimeTicks, Unsigned32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Bits", "ObjectIdentity", "MibIdentifier", "NotificationType", "IpAddress", "Integer32", "TimeTicks", "Unsigned32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
avayaWlanMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "avayaWlanMibs")
avayaWlanSystemMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 7, 16))
avayaWlanSystemMib.setRevisions(('2010-05-25 00:00',))
if mibBuilder.loadTexts: avayaWlanSystemMib.setLastUpdated('201005250000Z')
if mibBuilder.loadTexts: avayaWlanSystemMib.setOrganization('Avaya, Inc')
avWlanSystemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 16, 1))
avWlanSystemConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 1))
avWlanSystemStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2))
avWlanSystemConfigScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 1, 1))
avWlanSystemConfigWirelessEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avWlanSystemConfigWirelessEnabled.setStatus('current')
avWlanSystemConfigSystemInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avWlanSystemConfigSystemInetAddressType.setStatus('current')
avWlanSystemConfigSystemInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 1, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avWlanSystemConfigSystemInetAddress.setStatus('current')
avWlanSystemConfigTcpUdpBasePort = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 1, 1, 4), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(49152, 64983)).clone(61000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: avWlanSystemConfigTcpUdpBasePort.setStatus('current')
avWlanSystemStatusScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1))
avWlanSystemStatusOperationalStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("enablePending", 2), ("disabled", 3), ("disablePending", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avWlanSystemStatusOperationalStatus.setStatus('current')
avWlanSystemStatusOperationalStatusDisableReason = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("adminDisabled", 2), ("routingDisabled", 3), ("badSystemInetAddress", 4), ("badTcpUdpBasePort", 5), ("wirelessSystemError", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avWlanSystemStatusOperationalStatusDisableReason.setStatus('current')
avWlanSystemStatusWlanSystemAddrType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avWlanSystemStatusWlanSystemAddrType.setStatus('current')
avWlanSystemStatusWlanSystemAddr = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avWlanSystemStatusWlanSystemAddr.setStatus('current')
avWlanSystemStatusOperationalRole = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wcp", 1), ("wsp", 2), ("wcpAndwsp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avWlanSystemStatusOperationalRole.setStatus('current')
avWlanSystemStatusWlanVersion = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 16, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avWlanSystemStatusWlanVersion.setStatus('current')
mibBuilder.exportSymbols("AVAYA-WLAN-SYSTEM-MIB", avWlanSystemStatusWlanSystemAddr=avWlanSystemStatusWlanSystemAddr, avayaWlanSystemMib=avayaWlanSystemMib, avWlanSystemStatusOperationalStatus=avWlanSystemStatusOperationalStatus, avWlanSystemStatusOperationalStatusDisableReason=avWlanSystemStatusOperationalStatusDisableReason, avWlanSystemStatusOperationalRole=avWlanSystemStatusOperationalRole, avWlanSystemStatus=avWlanSystemStatus, avWlanSystemObjects=avWlanSystemObjects, avWlanSystemConfig=avWlanSystemConfig, PYSNMP_MODULE_ID=avayaWlanSystemMib, avWlanSystemConfigScalars=avWlanSystemConfigScalars, avWlanSystemConfigWirelessEnabled=avWlanSystemConfigWirelessEnabled, avWlanSystemConfigSystemInetAddressType=avWlanSystemConfigSystemInetAddressType, avWlanSystemConfigSystemInetAddress=avWlanSystemConfigSystemInetAddress, avWlanSystemConfigTcpUdpBasePort=avWlanSystemConfigTcpUdpBasePort, avWlanSystemStatusScalars=avWlanSystemStatusScalars, avWlanSystemStatusWlanVersion=avWlanSystemStatusWlanVersion, avWlanSystemStatusWlanSystemAddrType=avWlanSystemStatusWlanSystemAddrType)
