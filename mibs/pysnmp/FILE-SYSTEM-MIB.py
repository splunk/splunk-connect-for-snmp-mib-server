#
# PySNMP MIB module FILE-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FILE-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Counter32, Integer32, mib_2, Unsigned32, iso, MibIdentifier, Gauge32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Counter32", "Integer32", "mib-2", "Unsigned32", "iso", "MibIdentifier", "Gauge32", "IpAddress", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
swFileSystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 14))
if mibBuilder.loadTexts: swFileSystemMIB.setLastUpdated('0905250000Z')
if mibBuilder.loadTexts: swFileSystemMIB.setOrganization('D-Link Corp.')
swFSBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 1))
swFSDriveCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 2))
swFSDirectoryCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 3))
swFSFileCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 4))
swFSCopyCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 5))
swFSMoveCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 6))
swFSBasicInfoCtrlStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))).clone(namedValues=NamedValues(("other", 0), ("start", 1), ("finish", 2), ("in-process", 3), ("fail", 4), ("invalid-drive-name", 5), ("same-file-name", 6), ("root-area-full", 7), ("insufficient-disk", 8), ("invalid-directory", 9), ("file-readonly", 10), ("exist-same-directory", 11), ("exist-file-in-directory", 12), ("no-file-or-dir", 13), ("no-format", 14), ("no-storage-media", 15), ("fs-no-match-media", 16), ("error-input", 17), ("error-char", 18), ("error-filename", 19), ("access-media-error", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSBasicInfoCtrlStatus.setStatus('current')
swFSBasicInfoCtrlProcess = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSBasicInfoCtrlProcess.setStatus('current')
swFSDriveInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1), )
if mibBuilder.loadTexts: swFSDriveInfoTable.setStatus('current')
swFSDriveInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1), ).setIndexNames((0, "FILE-SYSTEM-MIB", "swFSDriveInfoIndex"))
if mibBuilder.loadTexts: swFSDriveInfoEntry.setStatus('current')
swFSDriveInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: swFSDriveInfoIndex.setStatus('current')
swFSDriveInfoDriveID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("a", 0), ("b", 1), ("c", 2), ("d", 3), ("e", 4), ("f", 5), ("g", 6), ("h", 7), ("i", 8), ("j", 9), ("k", 10), ("l", 11), ("m", 12), ("n", 13), ("o", 14), ("p", 15), ("q", 16), ("r", 17), ("s", 18), ("t", 19), ("u", 20), ("v", 21), ("w", 22), ("x", 23), ("y", 24), ("z", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoDriveID.setStatus('current')
swFSDriveInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoType.setStatus('current')
swFSDriveInfoSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoSize.setStatus('current')
swFSDriveInfoPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoPartition.setStatus('current')
swFSDriveInfoFStype = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoFStype.setStatus('current')
swFSDriveFormatCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 2))
swFSDriveFormatDriveID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("none", 0), ("a", 1), ("b", 2), ("c", 3), ("d", 4), ("e", 5), ("f", 6), ("g", 7), ("h", 8), ("i", 9), ("j", 10), ("k", 11), ("l", 12), ("m", 13), ("n", 14), ("o", 15), ("p", 16), ("q", 17), ("r", 18), ("s", 19), ("t", 20), ("u", 21), ("v", 22), ("w", 23), ("x", 24), ("y", 25), ("z", 26)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveFormatDriveID.setStatus('current')
swFSDriveFormatFat = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fat16", 1), ("fat32", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveFormatFat.setStatus('current')
swFSDriveFormatLabelName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveFormatLabelName.setStatus('current')
swFSDriveFormatType = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fast", 1), ("full", 2), ("full-with-mbr", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveFormatType.setStatus('current')
swFSDriveFormatActivity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveFormatActivity.setStatus('current')
swFSDriveChangeCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 3))
swFSDriveChangeUnitID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveChangeUnitID.setStatus('current')
swFSDriveChangeDriveID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("none", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17), ("q", 18), ("r", 19), ("s", 20), ("t", 21), ("u", 22), ("v", 23), ("w", 24), ("x", 25), ("y", 26), ("z", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveChangeDriveID.setStatus('current')
swFSDriveCurrentDirectory = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDriveCurrentDirectory.setStatus('current')
swFSDriveInfoStackTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4), )
if mibBuilder.loadTexts: swFSDriveInfoStackTable.setStatus('current')
swFSDriveInfoStackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1), ).setIndexNames((0, "FILE-SYSTEM-MIB", "swFSDriveInfoStackUnitID"), (0, "FILE-SYSTEM-MIB", "swFSDriveInfoStackIndex"))
if mibBuilder.loadTexts: swFSDriveInfoStackEntry.setStatus('current')
swFSDriveInfoStackUnitID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoStackUnitID.setStatus('current')
swFSDriveInfoStackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: swFSDriveInfoStackIndex.setStatus('current')
swFSDriveInfoStackDriveID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("a", 1), ("b", 2), ("c", 3), ("d", 4), ("e", 5), ("f", 6), ("g", 7), ("h", 8), ("i", 9), ("j", 10), ("k", 11), ("l", 12), ("m", 13), ("n", 14), ("o", 15), ("p", 16), ("q", 17), ("r", 18), ("s", 19), ("t", 20), ("u", 21), ("v", 22), ("w", 23), ("x", 24), ("y", 25), ("z", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoStackDriveID.setStatus('current')
swFSDriveInfoStackType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoStackType.setStatus('current')
swFSDriveInfoStackSize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoStackSize.setStatus('current')
swFSDriveInfoStackPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoStackPartition.setStatus('current')
swFSDriveInfoStackFStype = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 2, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDriveInfoStackFStype.setStatus('current')
swFSDirectoryMake = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDirectoryMake.setStatus('current')
swFSDirectoryDel = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDirectoryDel.setStatus('current')
swFSctrlDirectoryDir = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3))
swFSDirectoryPath = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSDirectoryPath.setStatus('current')
swFSDirectoryTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 2), )
if mibBuilder.loadTexts: swFSDirectoryTable.setStatus('current')
swFSDirectoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 2, 1), ).setIndexNames((0, "FILE-SYSTEM-MIB", "swFSDirectoryName"))
if mibBuilder.loadTexts: swFSDirectoryEntry.setStatus('current')
swFSDirectoryName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDirectoryName.setStatus('current')
swFSDirectoryAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dir", 1), ("file", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDirectoryAttr.setStatus('current')
swFSDirectoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDirectoryTime.setStatus('current')
swFSDirectorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 14, 3, 3, 2, 1, 4), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: swFSDirectorySize.setStatus('current')
swFSFileRename = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 1))
swFSFileSourceName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSFileSourceName.setStatus('current')
swFSFileTargetName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSFileTargetName.setStatus('current')
swFSFileRenameActivity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSFileRenameActivity.setStatus('current')
swFSFileDel = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 2))
swFSFileDelName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSFileDelName.setStatus('current')
swFSFileDelOption = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("recursive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSFileDelOption.setStatus('current')
swFSFileDelActivity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSFileDelActivity.setStatus('current')
swFSCopySourceName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopySourceName.setStatus('current')
swFSCopyDestinationName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopyDestinationName.setStatus('current')
swFSCopyActivity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("start", 2), ("file-to-file", 3), ("file-to-image", 4), ("file-to-config", 5), ("file-to-prom", 6), ("image-to-file", 7), ("config-to-file", 8), ("log-to-file", 9), ("prom-to-file", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopyActivity.setStatus('current')
swFSCopyDestinationUnitID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopyDestinationUnitID.setStatus('current')
swFSCopyDestinationDriveID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("none", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17), ("q", 18), ("r", 19), ("s", 20), ("t", 21), ("u", 22), ("v", 23), ("w", 24), ("x", 25), ("y", 26), ("z", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopyDestinationDriveID.setStatus('current')
swFSCopyConfigID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopyConfigID.setStatus('current')
swFSCopyImageID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 5, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSCopyImageID.setStatus('current')
swFSMoveSourceName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSMoveSourceName.setStatus('current')
swFSMoveDestinationUnitID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSMoveDestinationUnitID.setStatus('current')
swFSMoveDestinationDriveID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("none", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17), ("q", 18), ("r", 19), ("s", 20), ("t", 21), ("u", 22), ("v", 23), ("w", 24), ("x", 25), ("y", 26), ("z", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSMoveDestinationDriveID.setStatus('current')
swFSMoveDestinationName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 6, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSMoveDestinationName.setStatus('current')
swFSMoveActivity = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 14, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swFSMoveActivity.setStatus('current')
mibBuilder.exportSymbols("FILE-SYSTEM-MIB", swFSCopyCtrl=swFSCopyCtrl, swFSDirectoryMake=swFSDirectoryMake, swFSBasicInfo=swFSBasicInfo, swFSDriveFormatDriveID=swFSDriveFormatDriveID, swFSDirectoryTable=swFSDirectoryTable, swFSCopySourceName=swFSCopySourceName, swFSDriveChangeDriveID=swFSDriveChangeDriveID, swFSMoveDestinationName=swFSMoveDestinationName, swFSDriveInfoEntry=swFSDriveInfoEntry, swFSFileDelName=swFSFileDelName, swFSBasicInfoCtrlStatus=swFSBasicInfoCtrlStatus, swFSDriveInfoPartition=swFSDriveInfoPartition, swFSDriveInfoIndex=swFSDriveInfoIndex, swFSFileDelActivity=swFSFileDelActivity, swFSDriveInfoStackPartition=swFSDriveInfoStackPartition, swFSFileSourceName=swFSFileSourceName, swFSDriveFormatCtrl=swFSDriveFormatCtrl, swFSDriveInfoSize=swFSDriveInfoSize, swFSBasicInfoCtrlProcess=swFSBasicInfoCtrlProcess, swFSDriveInfoStackIndex=swFSDriveInfoStackIndex, swFSDriveInfoStackFStype=swFSDriveInfoStackFStype, swFSCopyDestinationUnitID=swFSCopyDestinationUnitID, swFSDriveInfoStackUnitID=swFSDriveInfoStackUnitID, PYSNMP_MODULE_ID=swFileSystemMIB, swFSCopyActivity=swFSCopyActivity, swFSFileTargetName=swFSFileTargetName, swFSFileCtrl=swFSFileCtrl, swFSDriveFormatActivity=swFSDriveFormatActivity, swFSFileRenameActivity=swFSFileRenameActivity, swFSMoveActivity=swFSMoveActivity, swFSDirectoryAttr=swFSDirectoryAttr, swFSDirectoryPath=swFSDirectoryPath, swFSDriveInfoStackTable=swFSDriveInfoStackTable, swFSCopyImageID=swFSCopyImageID, swFSDriveCtrl=swFSDriveCtrl, swFSDriveInfoStackType=swFSDriveInfoStackType, swFSDriveCurrentDirectory=swFSDriveCurrentDirectory, swFSMoveDestinationUnitID=swFSMoveDestinationUnitID, swFSDirectoryTime=swFSDirectoryTime, swFSDriveFormatFat=swFSDriveFormatFat, swFSDirectoryDel=swFSDirectoryDel, swFSctrlDirectoryDir=swFSctrlDirectoryDir, swFSDriveInfoType=swFSDriveInfoType, swFSDirectoryCtrl=swFSDirectoryCtrl, swFSDriveChangeUnitID=swFSDriveChangeUnitID, swFSFileRename=swFSFileRename, swFSDriveInfoStackDriveID=swFSDriveInfoStackDriveID, swFSCopyDestinationDriveID=swFSCopyDestinationDriveID, swFSMoveSourceName=swFSMoveSourceName, swFSDirectoryName=swFSDirectoryName, swFSFileDelOption=swFSFileDelOption, swFSCopyConfigID=swFSCopyConfigID, swFSMoveDestinationDriveID=swFSMoveDestinationDriveID, swFSCopyDestinationName=swFSCopyDestinationName, swFSDirectoryEntry=swFSDirectoryEntry, swFSDriveInfoDriveID=swFSDriveInfoDriveID, swFSDriveInfoFStype=swFSDriveInfoFStype, swFileSystemMIB=swFileSystemMIB, swFSFileDel=swFSFileDel, swFSDriveInfoStackEntry=swFSDriveInfoStackEntry, swFSMoveCtrl=swFSMoveCtrl, swFSDriveChangeCtrl=swFSDriveChangeCtrl, swFSDriveFormatType=swFSDriveFormatType, swFSDriveFormatLabelName=swFSDriveFormatLabelName, swFSDriveInfoStackSize=swFSDriveInfoStackSize, swFSDriveInfoTable=swFSDriveInfoTable, swFSDirectorySize=swFSDirectorySize)
