#
# PySNMP MIB module OPTIX-SONET-PATH-MIB-V2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPTIX-SONET-PATH-MIB-V2
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
optixProvisionSonet, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixProvisionSonet")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, IpAddress, ModuleIdentity, Gauge32, NotificationType, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Unsigned32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "IpAddress", "ModuleIdentity", "Gauge32", "NotificationType", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Unsigned32", "Counter32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
optixsonetPathAttrib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5))
if mibBuilder.loadTexts: optixsonetPathAttrib.setLastUpdated('200605261729Z')
if mibBuilder.loadTexts: optixsonetPathAttrib.setOrganization('Your organization')
class C2Value(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 18, 19, 20, 21, 22, 24, 27, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 65534))
    namedValues = NamedValues(("eqpd", 1), ("vt-sts1", 2), ("lock-vt", 3), ("ds3", 4), ("ds4na", 18), ("atm", 19), ("dqdb", 20), ("fddi", 21), ("hdlc-over-sonet", 22), ("laps", 24), ("gfp", 27), ("pdi-1", 225), ("pdi-2", 226), ("pdi-3", 227), ("pdi-4", 228), ("pdi-5", 229), ("pdi-6", 230), ("pdi-7", 231), ("pdi-8", 232), ("pdi-9", 233), ("pdi-10", 234), ("pdi-11", 235), ("pdi-12", 236), ("pdi-13", 237), ("pdi-14", 238), ("pdi-15", 239), ("pdi-16", 240), ("pdi-17", 241), ("pdi-18", 242), ("pdi-19", 243), ("pdi-20", 244), ("pdi-21", 245), ("pdi-22", 246), ("pdi-23", 247), ("pdi-24", 248), ("pdi-29", 249), ("pdi-26", 250), ("pdi-27", 251), ("pdi-28", 252), ("uneq", 253), ("o-181", 254), ("invalid", 65534))

class LpbkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))
    namedValues = NamedValues(("terminal", 1), ("facility", 2), ("crs", 3), ("ds1feac", 4), ("ds3feac", 5), ("fac2ni", 6), ("noloop", 255))

optixsonetStsPathTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1), )
if mibBuilder.loadTexts: optixsonetStsPathTable.setStatus('current')
optixsonetStsPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1), ).setIndexNames((0, "OPTIX-SONET-PATH-MIB-V2", "stsPathLevel"), (0, "OPTIX-SONET-PATH-MIB-V2", "stsPathBid"), (0, "OPTIX-SONET-PATH-MIB-V2", "stsPathPid"), (0, "OPTIX-SONET-PATH-MIB-V2", "stsPathStsId"))
if mibBuilder.loadTexts: optixsonetStsPathEntry.setStatus('current')
stsPathLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("levelSTS1", 9), ("levelSTS3c", 10), ("levelSTS6c", 11), ("levelSTS9c", 12), ("levelSTS12c", 13), ("levelSTS15c", 14), ("levelSTS24c", 15), ("levelSTS48c", 16), ("levelSTS192c", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathLevel.setStatus('current')
stsPathBid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathBid.setStatus('current')
stsPathPid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathPid.setStatus('current')
stsPathStsId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathStsId.setStatus('current')
stsPathRevertiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("null", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathRevertiveMode.setStatus('current')
stsPathRevertiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 6), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathRevertiveTime.setStatus('current')
stsPathSwitchConditon = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("null", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathSwitchConditon.setStatus('current')
stsPathDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathDelayTime.setStatus('current')
stsPathSFBER = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("sf1E-3", 3), ("sf1E-4", 4), ("sf1E-5", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathSFBER.setStatus('current')
stsPathSDBER = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("sd1E-5", 5), ("sd1E-6", 6), ("sd1E-7", 7), ("sd1E-8", 8), ("sd1E-9", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathSDBER.setStatus('current')
stsPathJ1TRCMODE = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 254))).clone(namedValues=NamedValues(("manual", 1), ("auto", 2), ("off", 3), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathJ1TRCMODE.setStatus('current')
stsPathTRCJ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 62))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathTRCJ1.setStatus('current')
stsPathEXPTRCJ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 62))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathEXPTRCJ1.setStatus('current')
stsPathINCTRCJ1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 62))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathINCTRCJ1.setStatus('current')
stsPathTRCC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 15), C2Value()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathTRCC2.setStatus('current')
stsPathEXPTRCC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 16), C2Value()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathEXPTRCC2.setStatus('current')
stsPathINCTRCC2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 17), C2Value()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathINCTRCC2.setStatus('current')
stsPathSQL = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("invalid", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathSQL.setStatus('current')
stsPathSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 253, 254))).clone(namedValues=NamedValues(("wtr", 1), ("autosw", 2), ("manPtoW", 3), ("manWtoP", 4), ("frcPtoW", 5), ("frcWtoP", 6), ("lockout", 7), ("clear", 8), ("idle", 253), ("invalid", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stsPathSwitchState.setStatus('current')
stsPathPST = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathPST.setStatus('current')
stsPathSST = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathSST.setStatus('current')
stsPathLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 1, 1, 22), LpbkType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stsPathLoopbackStatus.setStatus('current')
optixsonetPathAttribConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 2))
optixsonetPathAttribGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 2, 1))
currentObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 2, 1, 1)).setObjects(("OPTIX-SONET-PATH-MIB-V2", "stsPathLevel"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathBid"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathPid"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathStsId"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathRevertiveMode"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathRevertiveTime"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathSwitchConditon"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathDelayTime"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathSFBER"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathSDBER"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathJ1TRCMODE"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathTRCJ1"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathEXPTRCJ1"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathINCTRCJ1"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathTRCC2"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathEXPTRCC2"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathINCTRCC2"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathSQL"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathSwitchState"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathPST"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathSST"), ("OPTIX-SONET-PATH-MIB-V2", "stsPathLoopbackStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    currentObjectGroup = currentObjectGroup.setStatus('current')
optixsonetPathAttribCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 2, 2))
basicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 5, 2, 2, 1)).setObjects(("OPTIX-SONET-PATH-MIB-V2", "currentObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    basicCompliance = basicCompliance.setStatus('current')
mibBuilder.exportSymbols("OPTIX-SONET-PATH-MIB-V2", stsPathPid=stsPathPid, LpbkType=LpbkType, stsPathStsId=stsPathStsId, stsPathSFBER=stsPathSFBER, stsPathTRCC2=stsPathTRCC2, stsPathINCTRCJ1=stsPathINCTRCJ1, optixsonetPathAttrib=optixsonetPathAttrib, stsPathLevel=stsPathLevel, stsPathSDBER=stsPathSDBER, stsPathSwitchState=stsPathSwitchState, stsPathPST=stsPathPST, optixsonetPathAttribCompliances=optixsonetPathAttribCompliances, stsPathSQL=stsPathSQL, basicCompliance=basicCompliance, stsPathLoopbackStatus=stsPathLoopbackStatus, optixsonetPathAttribGroups=optixsonetPathAttribGroups, C2Value=C2Value, stsPathRevertiveTime=stsPathRevertiveTime, stsPathSST=stsPathSST, stsPathEXPTRCJ1=stsPathEXPTRCJ1, PYSNMP_MODULE_ID=optixsonetPathAttrib, optixsonetStsPathEntry=optixsonetStsPathEntry, currentObjectGroup=currentObjectGroup, stsPathINCTRCC2=stsPathINCTRCC2, stsPathRevertiveMode=stsPathRevertiveMode, stsPathBid=stsPathBid, stsPathEXPTRCC2=stsPathEXPTRCC2, stsPathTRCJ1=stsPathTRCJ1, optixsonetPathAttribConformance=optixsonetPathAttribConformance, stsPathJ1TRCMODE=stsPathJ1TRCMODE, optixsonetStsPathTable=optixsonetStsPathTable, stsPathSwitchConditon=stsPathSwitchConditon, stsPathDelayTime=stsPathDelayTime)
