#
# PySNMP MIB module TERAWAVE-teraAlarm-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraAlarm-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, enterprises, Unsigned32, Counter64, MibIdentifier, TimeTicks, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Counter32, ModuleIdentity, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "enterprises", "Unsigned32", "Counter64", "MibIdentifier", "TimeTicks", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Counter32", "ModuleIdentity", "ObjectIdentity", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
teratraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 1))
teraAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 1, 1))
teraConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1))
teraLocalNextAlarmSequence = MibScalar((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalNextAlarmSequence.setStatus('mandatory')
teraResetAlarmHistoryTable = MibScalar((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraResetAlarmHistoryTable.setStatus('mandatory')
teraResetEventTable = MibScalar((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraResetEventTable.setStatus('mandatory')
teraNextAlarmSequenceTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 1), )
if mibBuilder.loadTexts: teraNextAlarmSequenceTable.setStatus('mandatory')
teraNextAlarmSequenceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 1, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraActiveAlarmSlot"), (0, "TERAWAVE-teraAlarm-MIB", "teraPonIndex"))
if mibBuilder.loadTexts: teraNextAlarmSequenceTableEntry.setStatus('mandatory')
teraNextAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraNextAlarmSequence.setStatus('mandatory')
teraAlarmReportingTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 5), )
if mibBuilder.loadTexts: teraAlarmReportingTable.setStatus('mandatory')
teraAlarmReportingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 5, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraAlarmReportingTableIndex"))
if mibBuilder.loadTexts: teraAlarmReportingTableEntry.setStatus('mandatory')
teraAlarmReportingTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAlarmReportingTableIndex.setStatus('mandatory')
teraAlarmReportingIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 5, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmReportingIPaddress.setStatus('mandatory')
teraAlarmReportingCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 1, 5, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmReportingCommunity.setStatus('mandatory')
teraActiveAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2), )
if mibBuilder.loadTexts: teraActiveAlarmTable.setStatus('mandatory')
teraActiveAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraInstallSlotNumber"), (0, "TERAWAVE-teraAlarm-MIB", "teraPonIndex"), (0, "TERAWAVE-teraAlarm-MIB", "teraActiveAlarmSequence"))
if mibBuilder.loadTexts: teraActiveAlarmTableEntry.setStatus('mandatory')
teraActiveAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmSequence.setStatus('mandatory')
teraActiveAlarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmPort.setStatus('mandatory')
teraActiveAlarmPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmPortType.setStatus('mandatory')
teraActiveAlarmCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmCardType.setStatus('mandatory')
teraActiveAlarmSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmSlot.setStatus('mandatory')
teraActiveAlarmPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmPhysPort.setStatus('mandatory')
teraActiveAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmType.setStatus('mandatory')
teraActiveAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmSeverity.setStatus('mandatory')
teraActiveAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmTime.setStatus('mandatory')
teraActiveAlarmMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmMessage.setStatus('mandatory')
teraActiveAlarmTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmTimeInSecs.setStatus('mandatory')
teraActiveAlarmNEClli = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 2, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraActiveAlarmNEClli.setStatus('mandatory')
teraHistoryAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3), )
if mibBuilder.loadTexts: teraHistoryAlarmTable.setStatus('mandatory')
teraHistoryAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraInstallSlotNumber"), (0, "TERAWAVE-teraAlarm-MIB", "teraPonIndex"), (0, "TERAWAVE-teraAlarm-MIB", "teraHistoryAlarmSequence"))
if mibBuilder.loadTexts: teraHistoryAlarmTableEntry.setStatus('mandatory')
teraHistoryAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmSequence.setStatus('mandatory')
teraHistoryAlarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmPort.setStatus('mandatory')
teraHistoryAlarmPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmPortType.setStatus('mandatory')
teraHistoryAlarmCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmCardType.setStatus('mandatory')
teraHistoryAlarmSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmSlot.setStatus('mandatory')
teraHistoryAlarmPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmPhysPort.setStatus('mandatory')
teraHistoryAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmType.setStatus('mandatory')
teraHistoryAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmSeverity.setStatus('mandatory')
teraHistoryAlarmStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmStart.setStatus('mandatory')
teraHistoryAlarmStop = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmStop.setStatus('mandatory')
teraHistoryActiveAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 11), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryActiveAlarmSequence.setStatus('mandatory')
teraHistoryAlarmMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmMessage.setStatus('mandatory')
teraHistoryAlarmStartInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmStartInSecs.setStatus('mandatory')
teraHistoryAlarmStopInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmStopInSecs.setStatus('mandatory')
teraHistoryAlarmNEClli = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 3, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraHistoryAlarmNEClli.setStatus('mandatory')
teraEventTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4), )
if mibBuilder.loadTexts: teraEventTable.setStatus('mandatory')
teraEventTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraInstallSlotNumber"), (0, "TERAWAVE-teraAlarm-MIB", "teraPonIndex"), (0, "TERAWAVE-teraAlarm-MIB", "teraEventIndex"))
if mibBuilder.loadTexts: teraEventTableEntry.setStatus('mandatory')
teraEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventIndex.setStatus('mandatory')
teraEventPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventPort.setStatus('mandatory')
teraEventPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventPortType.setStatus('mandatory')
teraEventCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventCardType.setStatus('mandatory')
teraEventSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventSlot.setStatus('mandatory')
teraEventPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventPhysPort.setStatus('mandatory')
teraEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventType.setStatus('mandatory')
teraEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventSeverity.setStatus('mandatory')
teraEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventTime.setStatus('mandatory')
teraEventMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventMessage.setStatus('mandatory')
teraEventTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventTimeInSecs.setStatus('mandatory')
teraEventNEClli = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 4, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraEventNEClli.setStatus('mandatory')
teraAlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 5), )
if mibBuilder.loadTexts: teraAlarmConfigTable.setStatus('mandatory')
teraAlarmConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 5, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraActiveAlarmType"))
if mibBuilder.loadTexts: teraAlarmConfigTableEntry.setStatus('mandatory')
teraAlarmConfigFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("log", 2), ("report", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmConfigFilter.setStatus('mandatory')
teraAlarmConfigSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmConfigSeverity.setStatus('mandatory')
teraEventConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 6), )
if mibBuilder.loadTexts: teraEventConfigTable.setStatus('mandatory')
teraEventConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 6, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraEventType"))
if mibBuilder.loadTexts: teraEventConfigTableEntry.setStatus('mandatory')
teraEventConfigFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("log", 2), ("report", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEventConfigFilter.setStatus('mandatory')
teraEventConfigSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEventConfigSeverity.setStatus('mandatory')
teraAllActiveAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7), )
if mibBuilder.loadTexts: teraAllActiveAlarmTable.setStatus('mandatory')
teraAllActiveAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraAllActiveAlarmIndex"))
if mibBuilder.loadTexts: teraAllActiveAlarmTableEntry.setStatus('mandatory')
teraAllActiveAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmIndex.setStatus('mandatory')
teraAllActiveAlarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmPort.setStatus('mandatory')
teraAllActiveAlarmPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmPortType.setStatus('mandatory')
teraAllActiveAlarmCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmCardType.setStatus('mandatory')
teraAllActiveAlarmSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmSlot.setStatus('mandatory')
teraAllActiveAlarmPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmPhysPort.setStatus('mandatory')
teraAllActiveAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmType.setStatus('mandatory')
teraAllActiveAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmSeverity.setStatus('mandatory')
teraAllActiveAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmTime.setStatus('mandatory')
teraAllActiveAlarmMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmMessage.setStatus('mandatory')
teraAllActiveAlarmTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAllActiveAlarmTimeInSecs.setStatus('mandatory')
teraLocalActiveAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8), )
if mibBuilder.loadTexts: teraLocalActiveAlarmTable.setStatus('mandatory')
teraLocalActiveAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraLocalActiveAlarmSequence"))
if mibBuilder.loadTexts: teraLocalActiveAlarmTableEntry.setStatus('mandatory')
teraLocalActiveAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmSequence.setStatus('mandatory')
teraLocalActiveAlarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmPort.setStatus('mandatory')
teraLocalActiveAlarmPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmPortType.setStatus('mandatory')
teraLocalActiveAlarmCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmCardType.setStatus('mandatory')
teraLocalActiveAlarmSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmSlot.setStatus('mandatory')
teraLocalActiveAlarmPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmPhysPort.setStatus('mandatory')
teraLocalActiveAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmType.setStatus('mandatory')
teraLocalActiveAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmSeverity.setStatus('mandatory')
teraLocalActiveAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmTime.setStatus('mandatory')
teraLocalActiveAlarmMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmMessage.setStatus('mandatory')
teraLocalActiveAlarmTimeInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalActiveAlarmTimeInSecs.setStatus('mandatory')
teraLocalHistoryAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9), )
if mibBuilder.loadTexts: teraLocalHistoryAlarmTable.setStatus('mandatory')
teraLocalHistoryAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraLocalHistoryAlarmSequence"))
if mibBuilder.loadTexts: teraLocalHistoryAlarmTableEntry.setStatus('mandatory')
teraLocalHistoryAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 1), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmSequence.setStatus('mandatory')
teraLocalHistoryAlarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmPort.setStatus('mandatory')
teraLocalHistoryAlarmPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmPortType.setStatus('mandatory')
teraLocalHistoryAlarmCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmCardType.setStatus('mandatory')
teraLocalHistoryAlarmSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmSlot.setStatus('mandatory')
teraLocalHistoryAlarmPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmPhysPort.setStatus('mandatory')
teraLocalHistoryAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmType.setStatus('mandatory')
teraLocalHistoryAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nominal", 1), ("informational", 2), ("minor", 3), ("major", 4), ("critical", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmSeverity.setStatus('mandatory')
teraLocalHistoryAlarmStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmStart.setStatus('mandatory')
teraLocalHistoryAlarmStop = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmStop.setStatus('mandatory')
teraLocalHistoryActiveAlarmSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 11), Counter32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryActiveAlarmSequence.setStatus('mandatory')
teraLocalHistoryActiveAlarmMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryActiveAlarmMessage.setStatus('mandatory')
teraLocalHistoryAlarmStartInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmStartInSecs.setStatus('mandatory')
teraLocalHistoryAlarmStopInSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 9, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraLocalHistoryAlarmStopInSecs.setStatus('mandatory')
teraAlarmPortFilterTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 10), )
if mibBuilder.loadTexts: teraAlarmPortFilterTable.setStatus('mandatory')
teraAlarmPortFilterTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 10, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraActiveAlarmPort"))
if mibBuilder.loadTexts: teraAlarmPortFilterTableEntry.setStatus('mandatory')
teraAlarmPortFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmPortFilter.setStatus('mandatory')
teraEventPortFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraEventPortFilter.setStatus('mandatory')
teraAlarmPortFilterTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmPortFilterTableStatus.setStatus('mandatory')
teraAlarmPortMaskTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 1, 1, 14), )
if mibBuilder.loadTexts: teraAlarmPortMaskTable.setStatus('mandatory')
teraAlarmPortMaskTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 1, 1, 14, 1), ).setIndexNames((0, "TERAWAVE-teraAlarm-MIB", "teraAlarmPortMaskSlot"), (0, "TERAWAVE-teraAlarm-MIB", "teraAlarmPortMaskPort"))
if mibBuilder.loadTexts: teraAlarmPortMaskTableEntry.setStatus('mandatory')
teraAlarmPortMaskSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAlarmPortMaskSlot.setStatus('mandatory')
teraAlarmPortMaskPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAlarmPortMaskPort.setStatus('mandatory')
teraAlarmPortUnMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 1, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mask", 1), ("unmask", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAlarmPortUnMask.setStatus('mandatory')
mibBuilder.exportSymbols("TERAWAVE-teraAlarm-MIB", teraAllActiveAlarmCardType=teraAllActiveAlarmCardType, teraEventConfigFilter=teraEventConfigFilter, teraResetAlarmHistoryTable=teraResetAlarmHistoryTable, teraLocalActiveAlarmSlot=teraLocalActiveAlarmSlot, teraAlarmConfigTable=teraAlarmConfigTable, teraAllActiveAlarmSlot=teraAllActiveAlarmSlot, teraLocalHistoryAlarmSeverity=teraLocalHistoryAlarmSeverity, teraLocalHistoryAlarmStop=teraLocalHistoryAlarmStop, teraActiveAlarmMessage=teraActiveAlarmMessage, teraNextAlarmSequence=teraNextAlarmSequence, teraEventSeverity=teraEventSeverity, teraAlarmPortMaskSlot=teraAlarmPortMaskSlot, teraAlarmConfigTableEntry=teraAlarmConfigTableEntry, teraHistoryActiveAlarmSequence=teraHistoryActiveAlarmSequence, teraLocalHistoryAlarmStopInSecs=teraLocalHistoryAlarmStopInSecs, teraLocalActiveAlarmSequence=teraLocalActiveAlarmSequence, teraConfig=teraConfig, teraActiveAlarmSequence=teraActiveAlarmSequence, teraHistoryAlarmNEClli=teraHistoryAlarmNEClli, teraLocalHistoryAlarmPort=teraLocalHistoryAlarmPort, teraHistoryAlarmStartInSecs=teraHistoryAlarmStartInSecs, teraNextAlarmSequenceTable=teraNextAlarmSequenceTable, teraEventPhysPort=teraEventPhysPort, teraAlarmConfigSeverity=teraAlarmConfigSeverity, teraAllActiveAlarmTableEntry=teraAllActiveAlarmTableEntry, teraLocalActiveAlarmCardType=teraLocalActiveAlarmCardType, teraAlarmReportingTableEntry=teraAlarmReportingTableEntry, teraAlarms=teraAlarms, teraAlarmPortFilterTableStatus=teraAlarmPortFilterTableStatus, teraLocalNextAlarmSequence=teraLocalNextAlarmSequence, teraEventConfigTableEntry=teraEventConfigTableEntry, teraAlarmReportingIPaddress=teraAlarmReportingIPaddress, teraAlarmConfigFilter=teraAlarmConfigFilter, teraActiveAlarmTableEntry=teraActiveAlarmTableEntry, teraHistoryAlarmSeverity=teraHistoryAlarmSeverity, teraAllActiveAlarmSeverity=teraAllActiveAlarmSeverity, teraActiveAlarmTable=teraActiveAlarmTable, teraEventPort=teraEventPort, teraAllActiveAlarmMessage=teraAllActiveAlarmMessage, teraLocalActiveAlarmPort=teraLocalActiveAlarmPort, teraEventTable=teraEventTable, teraLocalHistoryAlarmTableEntry=teraLocalHistoryAlarmTableEntry, teraAllActiveAlarmPhysPort=teraAllActiveAlarmPhysPort, teraEventPortFilter=teraEventPortFilter, teraLocalHistoryAlarmStartInSecs=teraLocalHistoryAlarmStartInSecs, teraAlarmPortMaskTable=teraAlarmPortMaskTable, teraLocalHistoryAlarmCardType=teraLocalHistoryAlarmCardType, teraLocalHistoryActiveAlarmSequence=teraLocalHistoryActiveAlarmSequence, teraActiveAlarmPort=teraActiveAlarmPort, teraAlarmReportingTableIndex=teraAlarmReportingTableIndex, teraHistoryAlarmStop=teraHistoryAlarmStop, teraAlarmPortUnMask=teraAlarmPortUnMask, teraLocalActiveAlarmTimeInSecs=teraLocalActiveAlarmTimeInSecs, teraAllActiveAlarmType=teraAllActiveAlarmType, teraHistoryAlarmPhysPort=teraHistoryAlarmPhysPort, teraEventTime=teraEventTime, teraLocalHistoryAlarmType=teraLocalHistoryAlarmType, teraAlarmPortMaskPort=teraAlarmPortMaskPort, teraEventConfigTable=teraEventConfigTable, teraLocalActiveAlarmTableEntry=teraLocalActiveAlarmTableEntry, teraActiveAlarmCardType=teraActiveAlarmCardType, teraAlarmPortFilter=teraAlarmPortFilter, teraAllActiveAlarmTime=teraAllActiveAlarmTime, teraAllActiveAlarmPortType=teraAllActiveAlarmPortType, terawave=terawave, teraEventMessage=teraEventMessage, teraLocalHistoryAlarmTable=teraLocalHistoryAlarmTable, teraActiveAlarmType=teraActiveAlarmType, teraActiveAlarmSeverity=teraActiveAlarmSeverity, teraAlarmPortFilterTable=teraAlarmPortFilterTable, teraEventSlot=teraEventSlot, teraEventCardType=teraEventCardType, teraLocalActiveAlarmPortType=teraLocalActiveAlarmPortType, teraHistoryAlarmSequence=teraHistoryAlarmSequence, teraHistoryAlarmType=teraHistoryAlarmType, teraLocalActiveAlarmType=teraLocalActiveAlarmType, teraActiveAlarmPhysPort=teraActiveAlarmPhysPort, teraLocalActiveAlarmTable=teraLocalActiveAlarmTable, teraLocalActiveAlarmSeverity=teraLocalActiveAlarmSeverity, teraHistoryAlarmMessage=teraHistoryAlarmMessage, teraHistoryAlarmTableEntry=teraHistoryAlarmTableEntry, teraActiveAlarmPortType=teraActiveAlarmPortType, teraAlarmPortFilterTableEntry=teraAlarmPortFilterTableEntry, teraEventConfigSeverity=teraEventConfigSeverity, teraAllActiveAlarmPort=teraAllActiveAlarmPort, teraLocalHistoryAlarmPortType=teraLocalHistoryAlarmPortType, teraResetEventTable=teraResetEventTable, teraLocalActiveAlarmPhysPort=teraLocalActiveAlarmPhysPort, teraActiveAlarmTimeInSecs=teraActiveAlarmTimeInSecs, teraHistoryAlarmPort=teraHistoryAlarmPort, teraAllActiveAlarmTable=teraAllActiveAlarmTable, teraEventTimeInSecs=teraEventTimeInSecs, teraAllActiveAlarmIndex=teraAllActiveAlarmIndex, teraLocalHistoryAlarmStart=teraLocalHistoryAlarmStart, teraActiveAlarmNEClli=teraActiveAlarmNEClli, teraActiveAlarmTime=teraActiveAlarmTime, teraNextAlarmSequenceTableEntry=teraNextAlarmSequenceTableEntry, teraLocalHistoryAlarmPhysPort=teraLocalHistoryAlarmPhysPort, teraHistoryAlarmPortType=teraHistoryAlarmPortType, teraHistoryAlarmStart=teraHistoryAlarmStart, teraEventTableEntry=teraEventTableEntry, teraLocalHistoryAlarmSequence=teraLocalHistoryAlarmSequence, teraLocalActiveAlarmTime=teraLocalActiveAlarmTime, teraAllActiveAlarmTimeInSecs=teraAllActiveAlarmTimeInSecs, teraHistoryAlarmCardType=teraHistoryAlarmCardType, teraAlarmPortMaskTableEntry=teraAlarmPortMaskTableEntry, teraEventNEClli=teraEventNEClli, teraHistoryAlarmTable=teraHistoryAlarmTable, teraLocalHistoryActiveAlarmMessage=teraLocalHistoryActiveAlarmMessage, teraLocalActiveAlarmMessage=teraLocalActiveAlarmMessage, teraLocalHistoryAlarmSlot=teraLocalHistoryAlarmSlot, teraHistoryAlarmSlot=teraHistoryAlarmSlot, teraHistoryAlarmStopInSecs=teraHistoryAlarmStopInSecs, teraActiveAlarmSlot=teraActiveAlarmSlot, teraEventType=teraEventType, teratraps=teratraps, teraEventPortType=teraEventPortType, teraEventIndex=teraEventIndex, teraAlarmReportingCommunity=teraAlarmReportingCommunity, teraAlarmReportingTable=teraAlarmReportingTable)
