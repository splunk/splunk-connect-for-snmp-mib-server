#
# PySNMP MIB module Nortel-Magellan-Passport-IpiFrMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-IpiFrMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
DisplayString, StorageType, Integer32, Unsigned32, Counter32, RowStatus, RowPointer = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "StorageType", "Integer32", "Unsigned32", "Counter32", "RowStatus", "RowPointer")
AsciiString, EnterpriseDateAndTime, DigitString, HexString, Hex, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "AsciiString", "EnterpriseDateAndTime", "DigitString", "HexString", "Hex", "NonReplicated")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, Counter64, Gauge32, ObjectIdentity, Bits, MibIdentifier, iso, Counter32, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "Bits", "MibIdentifier", "iso", "Counter32", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipiFrMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35))
ipiFr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50))
ipiFrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 1), )
if mibBuilder.loadTexts: ipiFrRowStatusTable.setStatus('mandatory')
ipiFrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"))
if mibBuilder.loadTexts: ipiFrRowStatusEntry.setStatus('mandatory')
ipiFrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrRowStatus.setStatus('mandatory')
ipiFrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrComponentName.setStatus('mandatory')
ipiFrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrStorageType.setStatus('mandatory')
ipiFrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: ipiFrIndex.setStatus('mandatory')
ipiFrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 10), )
if mibBuilder.loadTexts: ipiFrProvTable.setStatus('mandatory')
ipiFrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"))
if mibBuilder.loadTexts: ipiFrProvEntry.setStatus('mandatory')
ipiFrIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrIpAddress.setStatus('mandatory')
ipiFrMaximumNumberOfLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(24, 24)).clone(24)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrMaximumNumberOfLcn.setStatus('mandatory')
ipiFrSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 10, 1, 3), IpAddress().clone(hexValue="ff000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrSubnetMask.setStatus('mandatory')
ipiFrDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2))
ipiFrDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 1), )
if mibBuilder.loadTexts: ipiFrDnaRowStatusTable.setStatus('mandatory')
ipiFrDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"))
if mibBuilder.loadTexts: ipiFrDnaRowStatusEntry.setStatus('mandatory')
ipiFrDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaRowStatus.setStatus('mandatory')
ipiFrDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaComponentName.setStatus('mandatory')
ipiFrDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaStorageType.setStatus('mandatory')
ipiFrDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: ipiFrDnaIndex.setStatus('mandatory')
ipiFrDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 10), )
if mibBuilder.loadTexts: ipiFrDnaAddressTable.setStatus('mandatory')
ipiFrDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"))
if mibBuilder.loadTexts: ipiFrDnaAddressEntry.setStatus('mandatory')
ipiFrDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaNumberingPlanIndicator.setStatus('mandatory')
ipiFrDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaDataNetworkAddress.setStatus('mandatory')
ipiFrDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11), )
if mibBuilder.loadTexts: ipiFrDnaOutgoingOptionsTable.setStatus('mandatory')
ipiFrDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"))
if mibBuilder.loadTexts: ipiFrDnaOutgoingOptionsEntry.setStatus('mandatory')
ipiFrDnaOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaOutCalls.setStatus('mandatory')
ipiFrDnaOutDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('high')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaOutDefaultPriority.setStatus('mandatory')
ipiFrDnaOutDefaultPathSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1))).clone('delay')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaOutDefaultPathSensitivity.setStatus('obsolete')
ipiFrDnaOutPathSensitivityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaOutPathSensitivityOverRide.setStatus('obsolete')
ipiFrDnaDefaultTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9))).clone(namedValues=NamedValues(("normal", 0), ("high", 9))).clone('high')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaDefaultTransferPriority.setStatus('mandatory')
ipiFrDnaTransferPriorityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaTransferPriorityOverRide.setStatus('mandatory')
ipiFrDnaIncomingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 12), )
if mibBuilder.loadTexts: ipiFrDnaIncomingOptionsTable.setStatus('mandatory')
ipiFrDnaIncomingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"))
if mibBuilder.loadTexts: ipiFrDnaIncomingOptionsEntry.setStatus('mandatory')
ipiFrDnaIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaIncCalls.setStatus('mandatory')
ipiFrDnaIncAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaIncAccess.setStatus('mandatory')
ipiFrDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 13), )
if mibBuilder.loadTexts: ipiFrDnaCallOptionsTable.setStatus('mandatory')
ipiFrDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"))
if mibBuilder.loadTexts: ipiFrDnaCallOptionsEntry.setStatus('mandatory')
ipiFrDnaServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("gsp", 0), ("x25", 1), ("enhancedIti", 2), ("ncs", 3), ("mlti", 4), ("sm", 5), ("ici", 6), ("dsp3270", 7), ("iam", 8), ("mlhi", 9), ("term3270", 10), ("iti", 11), ("bsi", 13), ("hostIti", 14), ("x75", 15), ("hdsp3270", 16), ("api3201", 20), ("sdlc", 21), ("snaMultiHost", 22), ("redirectionServ", 23), ("trSnaTpad", 24), ("offnetNui", 25), ("gasServer", 26), ("vapServer", 28), ("vapAgent", 29), ("frameRelay", 30), ("ipiVc", 31), ("ipiFr", 32))).clone('ipiFr')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaServiceCategory.setStatus('mandatory')
ipiFrDnaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaAccountClass.setStatus('mandatory')
ipiFrDnaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaServiceExchange.setStatus('mandatory')
ipiFrDnaCug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2))
ipiFrDnaCugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 1), )
if mibBuilder.loadTexts: ipiFrDnaCugRowStatusTable.setStatus('mandatory')
ipiFrDnaCugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaCugIndex"))
if mibBuilder.loadTexts: ipiFrDnaCugRowStatusEntry.setStatus('mandatory')
ipiFrDnaCugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaCugRowStatus.setStatus('mandatory')
ipiFrDnaCugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaCugComponentName.setStatus('mandatory')
ipiFrDnaCugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrDnaCugStorageType.setStatus('mandatory')
ipiFrDnaCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: ipiFrDnaCugIndex.setStatus('mandatory')
ipiFrDnaCugCugOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 10), )
if mibBuilder.loadTexts: ipiFrDnaCugCugOptionsTable.setStatus('mandatory')
ipiFrDnaCugCugOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrDnaCugIndex"))
if mibBuilder.loadTexts: ipiFrDnaCugCugOptionsEntry.setStatus('mandatory')
ipiFrDnaCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("national", 0), ("international", 1))).clone('national')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaCugType.setStatus('mandatory')
ipiFrDnaCugDnic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="30303030")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaCugDnic.setStatus('mandatory')
ipiFrDnaCugInterlockCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaCugInterlockCode.setStatus('mandatory')
ipiFrDnaCugIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrDnaCugIncCalls.setStatus('mandatory')
ipiFrLcn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4))
ipiFrLcnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 1), )
if mibBuilder.loadTexts: ipiFrLcnRowStatusTable.setStatus('mandatory')
ipiFrLcnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"))
if mibBuilder.loadTexts: ipiFrLcnRowStatusEntry.setStatus('mandatory')
ipiFrLcnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnRowStatus.setStatus('mandatory')
ipiFrLcnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnComponentName.setStatus('mandatory')
ipiFrLcnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnStorageType.setStatus('mandatory')
ipiFrLcnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 39)))
if mibBuilder.loadTexts: ipiFrLcnIndex.setStatus('mandatory')
ipiFrLcnStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10), )
if mibBuilder.loadTexts: ipiFrLcnStateTable.setStatus('mandatory')
ipiFrLcnStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"))
if mibBuilder.loadTexts: ipiFrLcnStateEntry.setStatus('mandatory')
ipiFrLcnAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnAdminState.setStatus('mandatory')
ipiFrLcnOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnOperationalState.setStatus('mandatory')
ipiFrLcnUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnUsageState.setStatus('mandatory')
ipiFrLcnAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnAvailabilityStatus.setStatus('mandatory')
ipiFrLcnProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnProceduralStatus.setStatus('mandatory')
ipiFrLcnControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnControlStatus.setStatus('mandatory')
ipiFrLcnAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnAlarmStatus.setStatus('mandatory')
ipiFrLcnStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnStandbyStatus.setStatus('mandatory')
ipiFrLcnUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnUnknownStatus.setStatus('mandatory')
ipiFrLcnOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11), )
if mibBuilder.loadTexts: ipiFrLcnOperTable.setStatus('mandatory')
ipiFrLcnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"))
if mibBuilder.loadTexts: ipiFrLcnOperEntry.setStatus('mandatory')
ipiFrLcnIpInterfaceDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnIpInterfaceDevice.setStatus('mandatory')
ipiFrLcnOpRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnOpRemoteIpAddress.setStatus('mandatory')
ipiFrLcnPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnPacketsSent.setStatus('mandatory')
ipiFrLcnPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnPacketsReceived.setStatus('mandatory')
ipiFrLcnDiscardTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnDiscardTxPackets.setStatus('mandatory')
ipiFrLcnDiscardRcvPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnDiscardRcvPackets.setStatus('mandatory')
ipiFrLcnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 12), )
if mibBuilder.loadTexts: ipiFrLcnProvTable.setStatus('mandatory')
ipiFrLcnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"))
if mibBuilder.loadTexts: ipiFrLcnProvEntry.setStatus('mandatory')
ipiFrLcnRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 12, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnRemoteIpAddress.setStatus('mandatory')
ipiFrLcnDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2))
ipiFrLcnDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 1), )
if mibBuilder.loadTexts: ipiFrLcnDcRowStatusTable.setStatus('mandatory')
ipiFrLcnDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnDcIndex"))
if mibBuilder.loadTexts: ipiFrLcnDcRowStatusEntry.setStatus('mandatory')
ipiFrLcnDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnDcRowStatus.setStatus('mandatory')
ipiFrLcnDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnDcComponentName.setStatus('mandatory')
ipiFrLcnDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnDcStorageType.setStatus('mandatory')
ipiFrLcnDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: ipiFrLcnDcIndex.setStatus('mandatory')
ipiFrLcnDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10), )
if mibBuilder.loadTexts: ipiFrLcnDcOptionsTable.setStatus('mandatory')
ipiFrLcnDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnDcIndex"))
if mibBuilder.loadTexts: ipiFrLcnDcOptionsEntry.setStatus('mandatory')
ipiFrLcnDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnDcRemoteNpi.setStatus('mandatory')
ipiFrLcnDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnDcRemoteDna.setStatus('mandatory')
ipiFrLcnDcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnDcRemoteDlci.setStatus('mandatory')
ipiFrLcnDcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permanentMaster", 1), ("permanentSlave", 2))).clone('permanentSlave')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnDcType.setStatus('mandatory')
ipiFrLcnDcTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 9, 255))).clone(namedValues=NamedValues(("normal", 0), ("high", 9), ("useDnaDefTP", 255))).clone('useDnaDefTP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnDcTransferPriority.setStatus('mandatory')
ipiFrLcnDcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("useDnaDefPriority", 3))).clone('useDnaDefPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnDcDiscardPriority.setStatus('mandatory')
ipiFrLcnDcNfaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 222), )
if mibBuilder.loadTexts: ipiFrLcnDcNfaTable.setStatus('obsolete')
ipiFrLcnDcNfaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 222, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnDcIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnDcNfaIndex"))
if mibBuilder.loadTexts: ipiFrLcnDcNfaEntry.setStatus('obsolete')
ipiFrLcnDcNfaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 222, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: ipiFrLcnDcNfaIndex.setStatus('obsolete')
ipiFrLcnDcNfaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 222, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrLcnDcNfaValue.setStatus('obsolete')
ipiFrLcnDcNfaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 2, 222, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: ipiFrLcnDcNfaRowStatus.setStatus('obsolete')
ipiFrLcnVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3))
ipiFrLcnVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 1), )
if mibBuilder.loadTexts: ipiFrLcnVcRowStatusTable.setStatus('mandatory')
ipiFrLcnVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnVcIndex"))
if mibBuilder.loadTexts: ipiFrLcnVcRowStatusEntry.setStatus('mandatory')
ipiFrLcnVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcRowStatus.setStatus('mandatory')
ipiFrLcnVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcComponentName.setStatus('mandatory')
ipiFrLcnVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcStorageType.setStatus('mandatory')
ipiFrLcnVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: ipiFrLcnVcIndex.setStatus('mandatory')
ipiFrLcnVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10), )
if mibBuilder.loadTexts: ipiFrLcnVcCadTable.setStatus('mandatory')
ipiFrLcnVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnVcIndex"))
if mibBuilder.loadTexts: ipiFrLcnVcCadEntry.setStatus('mandatory')
ipiFrLcnVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcType.setStatus('mandatory')
ipiFrLcnVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcState.setStatus('mandatory')
ipiFrLcnVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPreviousState.setStatus('mandatory')
ipiFrLcnVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcDiagnosticCode.setStatus('mandatory')
ipiFrLcnVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPreviousDiagnosticCode.setStatus('mandatory')
ipiFrLcnVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCalledNpi.setStatus('mandatory')
ipiFrLcnVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCalledDna.setStatus('mandatory')
ipiFrLcnVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCalledLcn.setStatus('mandatory')
ipiFrLcnVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCallingNpi.setStatus('mandatory')
ipiFrLcnVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCallingDna.setStatus('mandatory')
ipiFrLcnVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCallingLcn.setStatus('mandatory')
ipiFrLcnVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcAccountingEnabled.setStatus('mandatory')
ipiFrLcnVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcFastSelectCall.setStatus('mandatory')
ipiFrLcnVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPathReliability.setStatus('mandatory')
ipiFrLcnVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcAccountingEnd.setStatus('mandatory')
ipiFrLcnVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPriority.setStatus('mandatory')
ipiFrLcnVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcSegmentSize.setStatus('mandatory')
ipiFrLcnVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcMaxSubnetPktSize.setStatus('mandatory')
ipiFrLcnVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcRcosToNetwork.setStatus('mandatory')
ipiFrLcnVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcRcosFromNetwork.setStatus('mandatory')
ipiFrLcnVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcEmissionPriorityToNetwork.setStatus('mandatory')
ipiFrLcnVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcEmissionPriorityFromNetwork.setStatus('mandatory')
ipiFrLcnVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcDataPath.setStatus('mandatory')
ipiFrLcnVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11), )
if mibBuilder.loadTexts: ipiFrLcnVcIntdTable.setStatus('mandatory')
ipiFrLcnVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnVcIndex"))
if mibBuilder.loadTexts: ipiFrLcnVcIntdEntry.setStatus('mandatory')
ipiFrLcnVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCallReferenceNumber.setStatus('mandatory')
ipiFrLcnVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcElapsedTimeTillNow.setStatus('mandatory')
ipiFrLcnVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcSegmentsRx.setStatus('mandatory')
ipiFrLcnVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcSegmentsSent.setStatus('mandatory')
ipiFrLcnVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcStartTime.setStatus('mandatory')
ipiFrLcnVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12), )
if mibBuilder.loadTexts: ipiFrLcnVcFrdTable.setStatus('mandatory')
ipiFrLcnVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnVcIndex"))
if mibBuilder.loadTexts: ipiFrLcnVcFrdEntry.setStatus('mandatory')
ipiFrLcnVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcFrmCongestedToSubnet.setStatus('mandatory')
ipiFrLcnVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCannotForwardToSubnet.setStatus('mandatory')
ipiFrLcnVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcNotDataXferToSubnet.setStatus('mandatory')
ipiFrLcnVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
ipiFrLcnVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcCombErrorsFromSubnet.setStatus('mandatory')
ipiFrLcnVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcDuplicatesFromSubnet.setStatus('mandatory')
ipiFrLcnVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcNotDataXferFromSubnet.setStatus('mandatory')
ipiFrLcnVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcFrmLossTimeouts.setStatus('mandatory')
ipiFrLcnVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcOoSeqByteCntExceeded.setStatus('mandatory')
ipiFrLcnVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPeakOoSeqPktCount.setStatus('mandatory')
ipiFrLcnVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPeakOoSeqFrmForwarded.setStatus('mandatory')
ipiFrLcnVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcSendSequenceNumber.setStatus('mandatory')
ipiFrLcnVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPktRetryTimeouts.setStatus('mandatory')
ipiFrLcnVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPeakRetryQueueSize.setStatus('mandatory')
ipiFrLcnVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcSubnetRecoveries.setStatus('mandatory')
ipiFrLcnVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcOoSeqPktCntExceeded.setStatus('mandatory')
ipiFrLcnVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcPeakOoSeqByteCount.setStatus('mandatory')
ipiFrLcnVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 417), )
if mibBuilder.loadTexts: ipiFrLcnVcDmepTable.setStatus('mandatory')
ipiFrLcnVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 417, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnVcIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrLcnVcDmepValue"))
if mibBuilder.loadTexts: ipiFrLcnVcDmepEntry.setStatus('mandatory')
ipiFrLcnVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 4, 3, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrLcnVcDmepValue.setStatus('mandatory')
ipiFrSr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5))
ipiFrSrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 1), )
if mibBuilder.loadTexts: ipiFrSrRowStatusTable.setStatus('mandatory')
ipiFrSrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrSrIndex"))
if mibBuilder.loadTexts: ipiFrSrRowStatusEntry.setStatus('mandatory')
ipiFrSrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrSrRowStatus.setStatus('mandatory')
ipiFrSrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrSrComponentName.setStatus('mandatory')
ipiFrSrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrSrStorageType.setStatus('mandatory')
ipiFrSrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: ipiFrSrIndex.setStatus('mandatory')
ipiFrSrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 10), )
if mibBuilder.loadTexts: ipiFrSrProvTable.setStatus('mandatory')
ipiFrSrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrSrIndex"))
if mibBuilder.loadTexts: ipiFrSrProvEntry.setStatus('mandatory')
ipiFrSrGatewayIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrSrGatewayIpAddress.setStatus('mandatory')
ipiFrSrBGtyIpaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 327), )
if mibBuilder.loadTexts: ipiFrSrBGtyIpaTable.setStatus('mandatory')
ipiFrSrBGtyIpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 327, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrSrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrSrBGtyIpaIndex"))
if mibBuilder.loadTexts: ipiFrSrBGtyIpaEntry.setStatus('mandatory')
ipiFrSrBGtyIpaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 327, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 23)))
if mibBuilder.loadTexts: ipiFrSrBGtyIpaIndex.setStatus('mandatory')
ipiFrSrBGtyIpaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 327, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipiFrSrBGtyIpaValue.setStatus('mandatory')
ipiFrSrBGtyIpaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 5, 327, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: ipiFrSrBGtyIpaRowStatus.setStatus('mandatory')
ipiFrR = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6))
ipiFrRRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 1), )
if mibBuilder.loadTexts: ipiFrRRowStatusTable.setStatus('mandatory')
ipiFrRRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrRIndex"))
if mibBuilder.loadTexts: ipiFrRRowStatusEntry.setStatus('mandatory')
ipiFrRRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrRRowStatus.setStatus('mandatory')
ipiFrRComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrRComponentName.setStatus('mandatory')
ipiFrRStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrRStorageType.setStatus('mandatory')
ipiFrRIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: ipiFrRIndex.setStatus('mandatory')
ipiFrROperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 10), )
if mibBuilder.loadTexts: ipiFrROperTable.setStatus('mandatory')
ipiFrROperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrIndex"), (0, "Nortel-Magellan-Passport-IpiFrMIB", "ipiFrRIndex"))
if mibBuilder.loadTexts: ipiFrROperEntry.setStatus('mandatory')
ipiFrRGtyIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrRGtyIpAddr.setStatus('mandatory')
ipiFrRLcnIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrRLcnIf.setStatus('mandatory')
ipiFrRType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 50, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("host", 1), ("subnet", 2), ("network", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipiFrRType.setStatus('mandatory')
ipiFrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 1))
ipiFrGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 1, 5))
ipiFrGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 1, 5, 2))
ipiFrGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 1, 5, 2, 2))
ipiFrCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 3))
ipiFrCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 3, 5))
ipiFrCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 3, 5, 2))
ipiFrCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 35, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-IpiFrMIB", ipiFrSrBGtyIpaValue=ipiFrSrBGtyIpaValue, ipiFrDnaServiceExchange=ipiFrDnaServiceExchange, ipiFrLcnVcNotDataXferFromSubnet=ipiFrLcnVcNotDataXferFromSubnet, ipiFrLcnVcEmissionPriorityToNetwork=ipiFrLcnVcEmissionPriorityToNetwork, ipiFrLcnVcCalledDna=ipiFrLcnVcCalledDna, ipiFrSrBGtyIpaEntry=ipiFrSrBGtyIpaEntry, ipiFrDna=ipiFrDna, ipiFrDnaCallOptionsEntry=ipiFrDnaCallOptionsEntry, ipiFrLcnVcPeakRetryQueueSize=ipiFrLcnVcPeakRetryQueueSize, ipiFrR=ipiFrR, ipiFrRowStatusTable=ipiFrRowStatusTable, ipiFrLcnPacketsReceived=ipiFrLcnPacketsReceived, ipiFrRRowStatusTable=ipiFrRRowStatusTable, ipiFrLcnVcRowStatusEntry=ipiFrLcnVcRowStatusEntry, ipiFrLcnVcAccountingEnabled=ipiFrLcnVcAccountingEnabled, ipiFrLcnVcPktRetryTimeouts=ipiFrLcnVcPktRetryTimeouts, ipiFrSrRowStatus=ipiFrSrRowStatus, ipiFrLcnVcDmepValue=ipiFrLcnVcDmepValue, ipiFrLcnDcRemoteDna=ipiFrLcnDcRemoteDna, ipiFrLcnDcComponentName=ipiFrLcnDcComponentName, ipiFrRRowStatusEntry=ipiFrRRowStatusEntry, ipiFrLcnUsageState=ipiFrLcnUsageState, ipiFrLcnVcRcosFromNetwork=ipiFrLcnVcRcosFromNetwork, ipiFrGroup=ipiFrGroup, ipiFrLcnProvTable=ipiFrLcnProvTable, ipiFrLcnVcDmepEntry=ipiFrLcnVcDmepEntry, ipiFrRowStatus=ipiFrRowStatus, ipiFrDnaOutCalls=ipiFrDnaOutCalls, ipiFrLcnVcPeakOoSeqFrmForwarded=ipiFrLcnVcPeakOoSeqFrmForwarded, ipiFrLcnStorageType=ipiFrLcnStorageType, ipiFrLcnDiscardTxPackets=ipiFrLcnDiscardTxPackets, ipiFrDnaNumberingPlanIndicator=ipiFrDnaNumberingPlanIndicator, ipiFrLcnVcElapsedTimeTillNow=ipiFrLcnVcElapsedTimeTillNow, ipiFrLcnStateTable=ipiFrLcnStateTable, ipiFrDnaServiceCategory=ipiFrDnaServiceCategory, ipiFrLcnDcNfaTable=ipiFrLcnDcNfaTable, ipiFrLcnVcRowStatusTable=ipiFrLcnVcRowStatusTable, ipiFrRStorageType=ipiFrRStorageType, ipiFrMaximumNumberOfLcn=ipiFrMaximumNumberOfLcn, ipiFrLcnVcDiagnosticCode=ipiFrLcnVcDiagnosticCode, ipiFrLcnVcFastSelectCall=ipiFrLcnVcFastSelectCall, ipiFrDnaIncomingOptionsEntry=ipiFrDnaIncomingOptionsEntry, ipiFrDnaCugCugOptionsEntry=ipiFrDnaCugCugOptionsEntry, ipiFrDnaDefaultTransferPriority=ipiFrDnaDefaultTransferPriority, ipiFrLcnVcFrdTable=ipiFrLcnVcFrdTable, ipiFrDnaOutDefaultPathSensitivity=ipiFrDnaOutDefaultPathSensitivity, ipiFrLcnRowStatusEntry=ipiFrLcnRowStatusEntry, ipiFrDnaAccountClass=ipiFrDnaAccountClass, ipiFrMIB=ipiFrMIB, ipiFrLcnStateEntry=ipiFrLcnStateEntry, ipiFrLcnVcAccountingEnd=ipiFrLcnVcAccountingEnd, ipiFrDnaCug=ipiFrDnaCug, ipiFrLcnDcRowStatusTable=ipiFrLcnDcRowStatusTable, ipiFrDnaTransferPriorityOverRide=ipiFrDnaTransferPriorityOverRide, ipiFrLcnDcIndex=ipiFrLcnDcIndex, ipiFrLcnVcType=ipiFrLcnVcType, ipiFrLcnVcCalledNpi=ipiFrLcnVcCalledNpi, ipiFrLcnVcFrmLossTimeouts=ipiFrLcnVcFrmLossTimeouts, ipiFrSrBGtyIpaIndex=ipiFrSrBGtyIpaIndex, ipiFrLcnRowStatusTable=ipiFrLcnRowStatusTable, ipiFrLcnOperationalState=ipiFrLcnOperationalState, ipiFrProvEntry=ipiFrProvEntry, ipiFrDnaOutPathSensitivityOverRide=ipiFrDnaOutPathSensitivityOverRide, ipiFrRType=ipiFrRType, ipiFrDnaIncCalls=ipiFrDnaIncCalls, ipiFrLcnVcComponentName=ipiFrLcnVcComponentName, ipiFrRIndex=ipiFrRIndex, ipiFrLcnVcDmepTable=ipiFrLcnVcDmepTable, ipiFrLcnVcCallReferenceNumber=ipiFrLcnVcCallReferenceNumber, ipiFrDnaRowStatusEntry=ipiFrDnaRowStatusEntry, ipiFrLcnOperTable=ipiFrLcnOperTable, ipiFrDnaIndex=ipiFrDnaIndex, ipiFrLcnVcEmissionPriorityFromNetwork=ipiFrLcnVcEmissionPriorityFromNetwork, ipiFrLcnDcRemoteDlci=ipiFrLcnDcRemoteDlci, ipiFrDnaCugRowStatus=ipiFrDnaCugRowStatus, ipiFrCapabilitiesBE01=ipiFrCapabilitiesBE01, ipiFrLcnControlStatus=ipiFrLcnControlStatus, ipiFrLcnDiscardRcvPackets=ipiFrLcnDiscardRcvPackets, ipiFrLcnDcTransferPriority=ipiFrLcnDcTransferPriority, ipiFrROperTable=ipiFrROperTable, ipiFrDnaOutDefaultPriority=ipiFrDnaOutDefaultPriority, ipiFrLcnAlarmStatus=ipiFrLcnAlarmStatus, ipiFrSrBGtyIpaRowStatus=ipiFrSrBGtyIpaRowStatus, ipiFrCapabilities=ipiFrCapabilities, ipiFrGroupBE01A=ipiFrGroupBE01A, ipiFr=ipiFr, ipiFrLcnPacketsSent=ipiFrLcnPacketsSent, ipiFrDnaRowStatus=ipiFrDnaRowStatus, ipiFrLcnProvEntry=ipiFrLcnProvEntry, ipiFrLcnAdminState=ipiFrLcnAdminState, ipiFrLcnVcSegmentsRx=ipiFrLcnVcSegmentsRx, ipiFrDnaRowStatusTable=ipiFrDnaRowStatusTable, ipiFrLcnProceduralStatus=ipiFrLcnProceduralStatus, ipiFrDnaCugDnic=ipiFrDnaCugDnic, ipiFrLcn=ipiFrLcn, ipiFrLcnVcRowStatus=ipiFrLcnVcRowStatus, ipiFrComponentName=ipiFrComponentName, ipiFrSrRowStatusTable=ipiFrSrRowStatusTable, ipiFrLcnVcSubnetRecoveries=ipiFrLcnVcSubnetRecoveries, ipiFrCapabilitiesBE=ipiFrCapabilitiesBE, ipiFrDnaOutgoingOptionsEntry=ipiFrDnaOutgoingOptionsEntry, ipiFrLcnStandbyStatus=ipiFrLcnStandbyStatus, ipiFrDnaOutgoingOptionsTable=ipiFrDnaOutgoingOptionsTable, ipiFrLcnRowStatus=ipiFrLcnRowStatus, ipiFrLcnDc=ipiFrLcnDc, ipiFrLcnVcPreviousDiagnosticCode=ipiFrLcnVcPreviousDiagnosticCode, ipiFrLcnVcFrmCongestedToSubnet=ipiFrLcnVcFrmCongestedToSubnet, ipiFrRLcnIf=ipiFrRLcnIf, ipiFrLcnIndex=ipiFrLcnIndex, ipiFrLcnVcPeakOoSeqByteCount=ipiFrLcnVcPeakOoSeqByteCount, ipiFrDnaCugStorageType=ipiFrDnaCugStorageType, ipiFrDnaIncAccess=ipiFrDnaIncAccess, ipiFrLcnVcSegmentSize=ipiFrLcnVcSegmentSize, ipiFrLcnDcNfaIndex=ipiFrLcnDcNfaIndex, ipiFrLcnDcType=ipiFrLcnDcType, ipiFrSubnetMask=ipiFrSubnetMask, ipiFrLcnVcCallingDna=ipiFrLcnVcCallingDna, ipiFrLcnVcNotDataXferToSubnet=ipiFrLcnVcNotDataXferToSubnet, ipiFrLcnVcSendSequenceNumber=ipiFrLcnVcSendSequenceNumber, ipiFrDnaDataNetworkAddress=ipiFrDnaDataNetworkAddress, ipiFrSrProvTable=ipiFrSrProvTable, ipiFrROperEntry=ipiFrROperEntry, ipiFrLcnDcNfaValue=ipiFrLcnDcNfaValue, ipiFrDnaAddressEntry=ipiFrDnaAddressEntry, ipiFrLcnDcDiscardPriority=ipiFrLcnDcDiscardPriority, ipiFrLcnIpInterfaceDevice=ipiFrLcnIpInterfaceDevice, ipiFrDnaCugRowStatusTable=ipiFrDnaCugRowStatusTable, ipiFrDnaCallOptionsTable=ipiFrDnaCallOptionsTable, ipiFrSrProvEntry=ipiFrSrProvEntry, ipiFrRGtyIpAddr=ipiFrRGtyIpAddr, ipiFrLcnDcStorageType=ipiFrLcnDcStorageType, ipiFrSr=ipiFrSr, ipiFrSrIndex=ipiFrSrIndex, ipiFrSrBGtyIpaTable=ipiFrSrBGtyIpaTable, ipiFrLcnVcPathReliability=ipiFrLcnVcPathReliability, ipiFrStorageType=ipiFrStorageType, ipiFrLcnDcNfaRowStatus=ipiFrLcnDcNfaRowStatus, ipiFrProvTable=ipiFrProvTable, ipiFrDnaCugInterlockCode=ipiFrDnaCugInterlockCode, ipiFrGroupBE01=ipiFrGroupBE01, ipiFrLcnVcPriority=ipiFrLcnVcPriority, ipiFrLcnVcIntdEntry=ipiFrLcnVcIntdEntry, ipiFrLcnVcCombErrorsFromSubnet=ipiFrLcnVcCombErrorsFromSubnet, ipiFrLcnVcOoSeqByteCntExceeded=ipiFrLcnVcOoSeqByteCntExceeded, ipiFrLcnVcState=ipiFrLcnVcState, ipiFrLcnVcDataPath=ipiFrLcnVcDataPath, ipiFrLcnDcOptionsEntry=ipiFrLcnDcOptionsEntry, ipiFrLcnVcCadTable=ipiFrLcnVcCadTable, ipiFrDnaStorageType=ipiFrDnaStorageType, ipiFrLcnVcIndex=ipiFrLcnVcIndex, ipiFrLcnDcRowStatus=ipiFrLcnDcRowStatus, ipiFrLcnOperEntry=ipiFrLcnOperEntry, ipiFrLcnUnknownStatus=ipiFrLcnUnknownStatus, ipiFrLcnVc=ipiFrLcnVc, ipiFrLcnVcCannotForwardToSubnet=ipiFrLcnVcCannotForwardToSubnet, ipiFrDnaCugIncCalls=ipiFrDnaCugIncCalls, ipiFrLcnVcRcosToNetwork=ipiFrLcnVcRcosToNetwork, ipiFrLcnAvailabilityStatus=ipiFrLcnAvailabilityStatus, ipiFrDnaIncomingOptionsTable=ipiFrDnaIncomingOptionsTable, ipiFrDnaComponentName=ipiFrDnaComponentName, ipiFrLcnVcCadEntry=ipiFrLcnVcCadEntry, ipiFrLcnVcFrdEntry=ipiFrLcnVcFrdEntry, ipiFrLcnVcCallingNpi=ipiFrLcnVcCallingNpi, ipiFrLcnVcStorageType=ipiFrLcnVcStorageType, ipiFrRowStatusEntry=ipiFrRowStatusEntry, ipiFrDnaCugType=ipiFrDnaCugType, ipiFrLcnRemoteIpAddress=ipiFrLcnRemoteIpAddress, ipiFrLcnVcPreviousState=ipiFrLcnVcPreviousState, ipiFrLcnVcCallingLcn=ipiFrLcnVcCallingLcn, ipiFrLcnOpRemoteIpAddress=ipiFrLcnOpRemoteIpAddress, ipiFrDnaCugComponentName=ipiFrDnaCugComponentName, ipiFrLcnVcDuplicatesFromSubnet=ipiFrLcnVcDuplicatesFromSubnet, ipiFrGroupBE=ipiFrGroupBE, ipiFrCapabilitiesBE01A=ipiFrCapabilitiesBE01A, ipiFrRRowStatus=ipiFrRRowStatus, ipiFrLcnVcMaxSubnetPktSize=ipiFrLcnVcMaxSubnetPktSize, ipiFrDnaAddressTable=ipiFrDnaAddressTable, ipiFrLcnDcRemoteNpi=ipiFrLcnDcRemoteNpi, ipiFrLcnDcOptionsTable=ipiFrLcnDcOptionsTable, ipiFrSrStorageType=ipiFrSrStorageType, ipiFrIndex=ipiFrIndex, ipiFrDnaCugIndex=ipiFrDnaCugIndex, ipiFrLcnComponentName=ipiFrLcnComponentName, ipiFrRComponentName=ipiFrRComponentName, ipiFrSrComponentName=ipiFrSrComponentName, ipiFrLcnDcNfaEntry=ipiFrLcnDcNfaEntry, ipiFrLcnVcPeakOoSeqPktCount=ipiFrLcnVcPeakOoSeqPktCount, ipiFrLcnVcSegmentsSent=ipiFrLcnVcSegmentsSent, ipiFrLcnVcStartTime=ipiFrLcnVcStartTime, ipiFrSrGatewayIpAddress=ipiFrSrGatewayIpAddress, ipiFrDnaCugCugOptionsTable=ipiFrDnaCugCugOptionsTable, ipiFrSrRowStatusEntry=ipiFrSrRowStatusEntry, ipiFrLcnVcOutOfRangeFrmFromSubnet=ipiFrLcnVcOutOfRangeFrmFromSubnet, ipiFrLcnVcOoSeqPktCntExceeded=ipiFrLcnVcOoSeqPktCntExceeded, ipiFrLcnDcRowStatusEntry=ipiFrLcnDcRowStatusEntry, ipiFrDnaCugRowStatusEntry=ipiFrDnaCugRowStatusEntry, ipiFrLcnVcCalledLcn=ipiFrLcnVcCalledLcn, ipiFrLcnVcIntdTable=ipiFrLcnVcIntdTable, ipiFrIpAddress=ipiFrIpAddress)
