#
# PySNMP MIB module EQUIPE-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EQUIPE-ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:51:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter32, Counter64, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Gauge32, ModuleIdentity, IpAddress, enterprises, MibIdentifier, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "Counter64", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Gauge32", "ModuleIdentity", "IpAddress", "enterprises", "MibIdentifier", "Integer32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
equipe = MibIdentifier((1, 3, 6, 1, 4, 1, 5022))
eqAtmMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 5022, 2))
if mibBuilder.loadTexts: eqAtmMib.setLastUpdated('0009170000Z')
if mibBuilder.loadTexts: eqAtmMib.setOrganization('')
class AtmCauseCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48))
    namedValues = NamedValues(("none", 1), ("unallocNumber", 2), ("noRouteToTransitNet", 3), ("noRouteToDest", 4), ("vccUnacceptable30", 5), ("normalCallCleared31", 6), ("userBusy", 7), ("noUserResponse", 8), ("callRejected", 9), ("numberChanged", 10), ("callRejectCLIR", 11), ("destOutOfOrder", 12), ("invalidNumberFormat", 13), ("respToStatusEnquiry", 14), ("normalUnspecified", 15), ("reqVccUnavailable", 16), ("vccFail31", 17), ("rateUnavailable31", 18), ("networkOutOfOrder", 19), ("tempFailure", 20), ("accessInfoDiscarded", 21), ("resourcesUnavailable", 22), ("qosUnavailable", 23), ("rateUnavailable", 24), ("bcapNotAuthorised", 25), ("bcapUnavailable", 26), ("serviceUnavailable", 27), ("bcapNotImplemented", 28), ("combinationUnsupported", 29), ("aalParamsUnsupported31", 30), ("invalidCallReference", 31), ("noChannel", 32), ("destIncompatible", 33), ("invalidEndpointRef", 34), ("invalidTransitNet", 35), ("tooManyAddPartyRequests", 36), ("aalParamsUnsupported30", 37), ("infoELementMissing", 38), ("msgTypeNotImplemented", 39), ("infoElementNotImplemented", 40), ("invalidInfoElement", 41), ("msgNotCompatible", 42), ("timerRecovery", 43), ("invalidMsgLen", 44), ("protocolError", 45), ("opticalElementError", 46), ("noRouteToNextNode", 47), ("dtlNotMyNode", 48))

eqAtmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 2, 1), )
if mibBuilder.loadTexts: eqAtmStatsTable.setStatus('current')
eqAtmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1), ).setIndexNames((0, "EQUIPE-ATM-MIB", "eqAtmStatsIfIndex"))
if mibBuilder.loadTexts: eqAtmStatsEntry.setStatus('current')
eqAtmStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsIfIndex.setStatus('current')
eqAtmStatsInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCells.setStatus('current')
eqAtmStatsInCellsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsPerSecond.setStatus('current')
eqAtmStatsInBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInBitsPerSecond.setStatus('current')
eqAtmStatsInCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsClp0.setStatus('current')
eqAtmStatsInCellsClp1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsClp1.setStatus('current')
eqAtmStatsInCellsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsTagged.setStatus('current')
eqAtmStatsInCellsClp0Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsClp0Discards.setStatus('current')
eqAtmStatsInCellsClp1Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsClp1Discards.setStatus('current')
eqAtmStatsInCellsOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsOam.setStatus('current')
eqAtmStatsInCellsClp0Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsClp0Oam.setStatus('current')
eqAtmStatsInCellsClp1Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsClp1Oam.setStatus('current')
eqAtmStatsInCellsLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsLoopback.setStatus('current')
eqAtmStatsInCellsLoopbackOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsInCellsLoopbackOam.setStatus('current')
eqAtmStatsOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCells.setStatus('current')
eqAtmStatsOutCellsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsPerSecond.setStatus('current')
eqAtmStatsOutBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutBitsPerSecond.setStatus('current')
eqAtmStatsOutCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsClp0.setStatus('current')
eqAtmStatsOutCellsClp1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsClp1.setStatus('current')
eqAtmStatsOutCellsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsTagged.setStatus('current')
eqAtmStatsOutCellsClp0Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsClp0Discards.setStatus('current')
eqAtmStatsOutCellsClp1Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsClp1Discards.setStatus('current')
eqAtmStatsOutCellsOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsOam.setStatus('current')
eqAtmStatsOutCellsClp0Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsClp0Oam.setStatus('current')
eqAtmStatsOutCellsClp1Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsClp1Oam.setStatus('current')
eqAtmStatsOutCellsLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsLoopback.setStatus('current')
eqAtmStatsOutCellsLoopbackOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsOutCellsLoopbackOam.setStatus('current')
eqAtmStatsCLR = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmStatsCLR.setStatus('current')
eqAtmSvcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 2, 2), )
if mibBuilder.loadTexts: eqAtmSvcStatsTable.setStatus('current')
eqAtmSvcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1), ).setIndexNames((0, "EQUIPE-ATM-MIB", "eqAtmSvcStatsIfIndex"))
if mibBuilder.loadTexts: eqAtmSvcStatsEntry.setStatus('current')
eqAtmSvcStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcStatsIfIndex.setStatus('current')
eqAtmSvcTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcTotal.setStatus('current')
eqAtmSvcConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcConnected.setStatus('current')
eqAtmSvcFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcFailures.setStatus('current')
eqAtmSvcInLastCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 5), AtmCauseCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInLastCauseCode.setStatus('current')
eqAtmSvcInSetupPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInSetupPdus.setStatus('current')
eqAtmSvcInCallProceeding = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInCallProceeding.setStatus('current')
eqAtmSvcInPdusConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusConnect.setStatus('current')
eqAtmSvcInPdusConnectAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusConnectAck.setStatus('current')
eqAtmSvcInPdusReleaseComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusReleaseComplete.setStatus('current')
eqAtmSvcInPdusAddParty = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusAddParty.setStatus('current')
eqAtmSvcInPdusAddPartyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusAddPartyAck.setStatus('current')
eqAtmSvcInPdusAddPartyReject = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusAddPartyReject.setStatus('current')
eqAtmSvcInPdusDropParty = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusDropParty.setStatus('current')
eqAtmSvcInPdusDropPartyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusDropPartyAck.setStatus('current')
eqAtmSvcInPdusStatusEnquiry = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusStatusEnquiry.setStatus('current')
eqAtmSvcInPdusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusStatus.setStatus('current')
eqAtmSvcInPdusRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusRestart.setStatus('current')
eqAtmSvcInPdusRestartAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusRestartAck.setStatus('current')
eqAtmSvcInPdusNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusNotify.setStatus('current')
eqAtmSvcInPdusProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusProgress.setStatus('current')
eqAtmSvcInPdusAlerting = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusAlerting.setStatus('current')
eqAtmSvcInPdusPartyAlerting = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcInPdusPartyAlerting.setStatus('current')
eqAtmSvcOutLastCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 24), AtmCauseCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutLastCauseCode.setStatus('current')
eqAtmSvcOutSetupPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutSetupPdus.setStatus('current')
eqAtmSvcOutCallProceeding = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutCallProceeding.setStatus('current')
eqAtmSvcOutPdusConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusConnect.setStatus('current')
eqAtmSvcOutPdusConnectAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusConnectAck.setStatus('current')
eqAtmSvcOutPdusReleaseComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusReleaseComplete.setStatus('current')
eqAtmSvcOutPdusAddParty = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusAddParty.setStatus('current')
eqAtmSvcOutPdusAddPartyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusAddPartyAck.setStatus('current')
eqAtmSvcOutPdusAddPartyReject = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusAddPartyReject.setStatus('current')
eqAtmSvcOutPdusDropParty = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusDropParty.setStatus('current')
eqAtmSvcOutPdusDropPartyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusDropPartyAck.setStatus('current')
eqAtmSvcOutPdusStatusEnquiry = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusStatusEnquiry.setStatus('current')
eqAtmSvcOutPdusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusStatus.setStatus('current')
eqAtmSvcOutPdusRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusRestart.setStatus('current')
eqAtmSvcOutPdusRestartAck = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusRestartAck.setStatus('current')
eqAtmSvcOutPdusNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusNotify.setStatus('current')
eqAtmSvcOutPdusProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusProgress.setStatus('current')
eqAtmSvcOutPdusAlerting = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusAlerting.setStatus('current')
eqAtmSvcOutPdusPartyAlerting = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSvcOutPdusPartyAlerting.setStatus('current')
eqAtmSaalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 2, 3), )
if mibBuilder.loadTexts: eqAtmSaalStatsTable.setStatus('current')
eqAtmSaalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1), ).setIndexNames((0, "EQUIPE-ATM-MIB", "eqAtmSaalStatsIfIndex"))
if mibBuilder.loadTexts: eqAtmSaalStatsEntry.setStatus('current')
eqAtmSaalStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalStatsIfIndex.setStatus('current')
eqAtmSaalInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInErrors.setStatus('current')
eqAtmSaalInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInDiscards.setStatus('current')
eqAtmSaalInBeginPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInBeginPdus.setStatus('current')
eqAtmSaalInBeginAckPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInBeginAckPdus.setStatus('current')
eqAtmSaalInBeginRejectPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInBeginRejectPdus.setStatus('current')
eqAtmSaalInEndPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInEndPdus.setStatus('current')
eqAtmSaalInEndAckPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInEndAckPdus.setStatus('current')
eqAtmSaalInResyncPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInResyncPdus.setStatus('current')
eqAtmSaalInResyncAckPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInResyncAckPdus.setStatus('current')
eqAtmSaalInErrRecoveryPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInErrRecoveryPdus.setStatus('current')
eqAtmSaalInSeqDataPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInSeqDataPdus.setStatus('current')
eqAtmSaalInPollPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInPollPdus.setStatus('current')
eqAtmSaalInStatusPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInStatusPdus.setStatus('current')
eqAtmSaalInUnsolicitedStatusPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInUnsolicitedStatusPdus.setStatus('current')
eqAtmSaalInUnsolicitedUserPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInUnsolicitedUserPdus.setStatus('current')
eqAtmSaalInUnnumberedUserPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInUnnumberedUserPdus.setStatus('current')
eqAtmSaalInUnnumberedMgmtPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInUnnumberedMgmtPdus.setStatus('current')
eqAtmSaalInSignalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalInSignalOctets.setStatus('current')
eqAtmSaalOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutDiscards.setStatus('current')
eqAtmSaalOutBeginPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutBeginPdus.setStatus('current')
eqAtmSaalOutBeginAckPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutBeginAckPdus.setStatus('current')
eqAtmSaalOutBeginRejectPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutBeginRejectPdus.setStatus('current')
eqAtmSaalOutEndPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutEndPdus.setStatus('current')
eqAtmSaalOutEndAckPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutEndAckPdus.setStatus('current')
eqAtmSaalOutResyncPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutResyncPdus.setStatus('current')
eqAtmSaalOutResyncAckPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutResyncAckPdus.setStatus('current')
eqAtmSaalOutErrRecoveryPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutErrRecoveryPdus.setStatus('current')
eqAtmSaalOutSeqDataPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutSeqDataPdus.setStatus('current')
eqAtmSaalOutPollPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutPollPdus.setStatus('current')
eqAtmSaalOutStatusPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutStatusPdus.setStatus('current')
eqAtmSaalOutUnsolicitedStatusPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutUnsolicitedStatusPdus.setStatus('current')
eqAtmSaalOutUnsolicitedUserPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutUnsolicitedUserPdus.setStatus('current')
eqAtmSaalOutUnnumberedUserPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutUnnumberedUserPdus.setStatus('current')
eqAtmSaalOutUnnumberedMgmtPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutUnnumberedMgmtPdus.setStatus('current')
eqAtmSaalOutSignalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutSignalOctets.setStatus('current')
eqAtmSaalOutWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 3, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmSaalOutWindowSize.setStatus('current')
eqAtmVcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 2, 4), )
if mibBuilder.loadTexts: eqAtmVcStatsTable.setStatus('current')
eqAtmVcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1), ).setIndexNames((0, "EQUIPE-ATM-MIB", "eqAtmVcStatsIfIndex"), (0, "EQUIPE-ATM-MIB", "eqAtmVcStatsVpi"), (0, "EQUIPE-ATM-MIB", "eqAtmVcStatsVci"))
if mibBuilder.loadTexts: eqAtmVcStatsEntry.setStatus('current')
eqAtmVcStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsIfIndex.setStatus('current')
eqAtmVcStatsVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsVpi.setStatus('current')
eqAtmVcStatsVci = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsVci.setStatus('current')
eqAtmVcStatsInCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCells.setStatus('current')
eqAtmVcStatsInCellsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsPerSecond.setStatus('current')
eqAtmVcStatsInBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInBitsPerSecond.setStatus('current')
eqAtmVcStatsInCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsClp0.setStatus('current')
eqAtmVcStatsInCellsClp1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsClp1.setStatus('current')
eqAtmVcStatsInCellsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsTagged.setStatus('current')
eqAtmVcStatsInCellsClp0Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsClp0Discards.setStatus('current')
eqAtmVcStatsInCellsClp1Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsClp1Discards.setStatus('current')
eqAtmVcStatsInCellsOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsOam.setStatus('current')
eqAtmVcStatsInCellsClp0Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsClp0Oam.setStatus('current')
eqAtmVcStatsInCellsClp1Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsClp1Oam.setStatus('current')
eqAtmVcStatsInCellsLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsLoopback.setStatus('current')
eqAtmVcStatsInCellsLoopbackOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsInCellsLoopbackOam.setStatus('current')
eqAtmVcStatsOutCells = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCells.setStatus('current')
eqAtmVcStatsOutCellsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsPerSecond.setStatus('current')
eqAtmVcStatsOutBitsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutBitsPerSecond.setStatus('current')
eqAtmVcStatsOutCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsClp0.setStatus('current')
eqAtmVcStatsOutCellsClp1 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsClp1.setStatus('current')
eqAtmVcStatsOutCellsTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsTagged.setStatus('current')
eqAtmVcStatsOutCellsClp0Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsClp0Discards.setStatus('current')
eqAtmVcStatsOutCellsClp1Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsClp1Discards.setStatus('current')
eqAtmVcStatsOutCellsOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsOam.setStatus('current')
eqAtmVcStatsOutCellsClp0Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsClp0Oam.setStatus('current')
eqAtmVcStatsOutCellsClp1Oam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsClp1Oam.setStatus('current')
eqAtmVcStatsOutCellsLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsLoopback.setStatus('current')
eqAtmVcStatsOutCellsLoopbackOam = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsOutCellsLoopbackOam.setStatus('current')
eqAtmVcStatsCLR = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmVcStatsCLR.setStatus('current')
eqAtmOamPmTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 2, 5), )
if mibBuilder.loadTexts: eqAtmOamPmTable.setStatus('current')
eqAtmOamPmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1), ).setIndexNames((0, "EQUIPE-ATM-MIB", "eqAtmOamPmIfIndex"), (0, "EQUIPE-ATM-MIB", "eqAtmOamPmVpi"), (0, "EQUIPE-ATM-MIB", "eqAtmOamPmVci"))
if mibBuilder.loadTexts: eqAtmOamPmEntry.setStatus('current')
eqAtmOamPmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmIfIndex.setStatus('current')
eqAtmOamPmVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmVpi.setStatus('current')
eqAtmOamPmVci = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmVci.setStatus('current')
eqAtmOamPmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("activating", 1), ("connected", 2), ("failConnect", 3), ("failNoResource", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmStatus.setStatus('current')
eqAtmOamPmSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("contCheck", 1), ("perfMonitoring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmSessionType.setStatus('current')
eqAtmOamPmSinkSource = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sink", 1), ("source", 2), ("bidirectional", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmSinkSource.setStatus('current')
eqAtmOamPmBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("bytes128", 1), ("bytes256", 2), ("bytes512", 3), ("bytes1K", 4), ("bytes2K", 5), ("bytes4K", 6), ("bytes8K", 7), ("bytes16K", 8), ("bytes32K", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmBlockSize.setStatus('current')
eqAtmOamPmEndPt = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("segment", 1), ("endToEnd", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmEndPt.setStatus('current')
eqAtmOamPmFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("f4", 1), ("f5", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmFlow.setStatus('current')
eqAtmOamPmDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("segment", 1), ("endToEnd", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmDirection.setStatus('current')
eqAtmOamPmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmTimeout.setStatus('current')
eqAtmOamPmRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmRetryCount.setStatus('current')
eqAtmOamPmFwdTxUserCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmFwdTxUserCellsClp0.setStatus('current')
eqAtmOamPmFwdTxUserCellsClp01 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmFwdTxUserCellsClp01.setStatus('current')
eqAtmOamPmFwdTxLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmFwdTxLostCellsClp0.setStatus('current')
eqAtmOamPmFwdTxLostCellsClp01 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmFwdTxLostCellsClp01.setStatus('current')
eqAtmOamPmFwdSECBs = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmFwdSECBs.setStatus('current')
eqAtmOamPmBwdTxUserCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmBwdTxUserCellsClp0.setStatus('current')
eqAtmOamPmBwdTxUserCellsClp01 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmBwdTxUserCellsClp01.setStatus('current')
eqAtmOamPmBwdTxLostCellsClp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmBwdTxLostCellsClp0.setStatus('current')
eqAtmOamPmBwdTxLostCellsClp01 = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmBwdTxLostCellsClp01.setStatus('current')
eqAtmOamPmBwdSECBs = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamPmBwdSECBs.setStatus('current')
eqAtmOamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 5022, 2, 6), )
if mibBuilder.loadTexts: eqAtmOamLoopbackTable.setStatus('current')
eqAtmOamLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1), ).setIndexNames((0, "EQUIPE-ATM-MIB", "eqAtmOamLoopbackIfIndex"), (0, "EQUIPE-ATM-MIB", "eqAtmOamLoopbackVpi"), (0, "EQUIPE-ATM-MIB", "eqAtmOamLoopbackVci"))
if mibBuilder.loadTexts: eqAtmOamLoopbackEntry.setStatus('current')
eqAtmOamLoopbackIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackIfIndex.setStatus('current')
eqAtmOamLoopbackVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackVpi.setStatus('current')
eqAtmOamLoopbackVci = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackVci.setStatus('current')
eqAtmOamLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inProgress", 1), ("completed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackStatus.setStatus('current')
eqAtmOamLoopbackSendCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackSendCount.setStatus('current')
eqAtmOamLoopbackSendTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("noAction", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackSendTrap.setStatus('current')
eqAtmOamLoopbackEndPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("segment", 1), ("endToEnd", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackEndPoint.setStatus('current')
eqAtmOamLoopbackFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("f4", 1), ("f5", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackFlow.setStatus('current')
eqAtmOamLoopbackDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("segment", 1), ("endToEnd", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackDirection.setStatus('current')
eqAtmOamLoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackTimeout.setStatus('current')
eqAtmOamLoopbackCellsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackCellsReceived.setStatus('current')
eqAtmOamLoopbackCellsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackCellsTimedOut.setStatus('current')
eqAtmOamLoopbackAveCellTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackAveCellTime.setStatus('current')
eqAtmOamLoopbackMinCellTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackMinCellTime.setStatus('current')
eqAtmOamLoopbackMaxCellTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackMaxCellTime.setStatus('current')
eqAtmOamLoopbackTotalCellTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5022, 2, 6, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqAtmOamLoopbackTotalCellTime.setStatus('current')
mibBuilder.exportSymbols("EQUIPE-ATM-MIB", eqAtmStatsInCellsClp0=eqAtmStatsInCellsClp0, eqAtmVcStatsOutCellsClp1Discards=eqAtmVcStatsOutCellsClp1Discards, eqAtmStatsOutCells=eqAtmStatsOutCells, eqAtmVcStatsOutCellsLoopbackOam=eqAtmVcStatsOutCellsLoopbackOam, eqAtmOamPmTable=eqAtmOamPmTable, eqAtmVcStatsOutCellsClp0=eqAtmVcStatsOutCellsClp0, eqAtmOamLoopbackEntry=eqAtmOamLoopbackEntry, eqAtmOamPmBwdTxLostCellsClp01=eqAtmOamPmBwdTxLostCellsClp01, eqAtmSvcTotal=eqAtmSvcTotal, eqAtmOamPmBwdTxUserCellsClp01=eqAtmOamPmBwdTxUserCellsClp01, eqAtmVcStatsOutCellsPerSecond=eqAtmVcStatsOutCellsPerSecond, AtmCauseCode=AtmCauseCode, eqAtmOamPmDirection=eqAtmOamPmDirection, eqAtmOamLoopbackStatus=eqAtmOamLoopbackStatus, eqAtmSaalOutPollPdus=eqAtmSaalOutPollPdus, eqAtmSaalOutWindowSize=eqAtmSaalOutWindowSize, eqAtmVcStatsOutCellsOam=eqAtmVcStatsOutCellsOam, eqAtmVcStatsEntry=eqAtmVcStatsEntry, eqAtmSvcStatsTable=eqAtmSvcStatsTable, eqAtmSvcInPdusAlerting=eqAtmSvcInPdusAlerting, eqAtmOamPmBwdTxUserCellsClp0=eqAtmOamPmBwdTxUserCellsClp0, eqAtmOamPmBwdTxLostCellsClp0=eqAtmOamPmBwdTxLostCellsClp0, eqAtmStatsOutCellsPerSecond=eqAtmStatsOutCellsPerSecond, eqAtmOamPmSinkSource=eqAtmOamPmSinkSource, eqAtmSvcInSetupPdus=eqAtmSvcInSetupPdus, eqAtmStatsIfIndex=eqAtmStatsIfIndex, eqAtmSvcInPdusProgress=eqAtmSvcInPdusProgress, eqAtmSvcOutPdusConnectAck=eqAtmSvcOutPdusConnectAck, eqAtmSaalInSignalOctets=eqAtmSaalInSignalOctets, eqAtmVcStatsInCellsClp0Discards=eqAtmVcStatsInCellsClp0Discards, eqAtmOamLoopbackDirection=eqAtmOamLoopbackDirection, eqAtmSvcInPdusAddParty=eqAtmSvcInPdusAddParty, eqAtmOamPmBwdSECBs=eqAtmOamPmBwdSECBs, eqAtmVcStatsOutCellsClp1=eqAtmVcStatsOutCellsClp1, eqAtmSvcFailures=eqAtmSvcFailures, eqAtmSvcOutPdusStatusEnquiry=eqAtmSvcOutPdusStatusEnquiry, eqAtmSaalInEndPdus=eqAtmSaalInEndPdus, eqAtmSaalStatsIfIndex=eqAtmSaalStatsIfIndex, eqAtmStatsOutCellsClp1Discards=eqAtmStatsOutCellsClp1Discards, eqAtmStatsOutCellsClp0Oam=eqAtmStatsOutCellsClp0Oam, eqAtmSaalOutResyncAckPdus=eqAtmSaalOutResyncAckPdus, eqAtmOamPmFwdSECBs=eqAtmOamPmFwdSECBs, eqAtmOamPmTimeout=eqAtmOamPmTimeout, eqAtmSaalStatsTable=eqAtmSaalStatsTable, eqAtmSvcInPdusConnectAck=eqAtmSvcInPdusConnectAck, eqAtmVcStatsOutCellsTagged=eqAtmVcStatsOutCellsTagged, eqAtmOamPmFlow=eqAtmOamPmFlow, eqAtmOamLoopbackSendCount=eqAtmOamLoopbackSendCount, equipe=equipe, eqAtmOamLoopbackFlow=eqAtmOamLoopbackFlow, eqAtmStatsInCellsTagged=eqAtmStatsInCellsTagged, eqAtmVcStatsCLR=eqAtmVcStatsCLR, eqAtmSvcOutPdusAddParty=eqAtmSvcOutPdusAddParty, eqAtmSaalInUnnumberedMgmtPdus=eqAtmSaalInUnnumberedMgmtPdus, eqAtmOamPmVci=eqAtmOamPmVci, eqAtmVcStatsInCellsTagged=eqAtmVcStatsInCellsTagged, eqAtmSvcOutSetupPdus=eqAtmSvcOutSetupPdus, eqAtmSvcOutPdusProgress=eqAtmSvcOutPdusProgress, eqAtmStatsOutCellsOam=eqAtmStatsOutCellsOam, eqAtmSaalOutBeginPdus=eqAtmSaalOutBeginPdus, eqAtmOamLoopbackTable=eqAtmOamLoopbackTable, eqAtmOamPmRetryCount=eqAtmOamPmRetryCount, eqAtmVcStatsOutCellsLoopback=eqAtmVcStatsOutCellsLoopback, eqAtmStatsInCellsClp0Discards=eqAtmStatsInCellsClp0Discards, eqAtmStatsInCellsPerSecond=eqAtmStatsInCellsPerSecond, eqAtmSaalOutErrRecoveryPdus=eqAtmSaalOutErrRecoveryPdus, eqAtmVcStatsOutCellsClp0Oam=eqAtmVcStatsOutCellsClp0Oam, eqAtmSaalOutUnsolicitedUserPdus=eqAtmSaalOutUnsolicitedUserPdus, eqAtmSvcInPdusDropPartyAck=eqAtmSvcInPdusDropPartyAck, eqAtmStatsOutCellsTagged=eqAtmStatsOutCellsTagged, eqAtmSvcInPdusAddPartyReject=eqAtmSvcInPdusAddPartyReject, eqAtmVcStatsVci=eqAtmVcStatsVci, eqAtmOamLoopbackSendTrap=eqAtmOamLoopbackSendTrap, eqAtmSvcOutPdusStatus=eqAtmSvcOutPdusStatus, eqAtmSvcOutPdusReleaseComplete=eqAtmSvcOutPdusReleaseComplete, eqAtmSaalOutUnnumberedUserPdus=eqAtmSaalOutUnnumberedUserPdus, eqAtmSaalInUnnumberedUserPdus=eqAtmSaalInUnnumberedUserPdus, eqAtmSvcOutPdusRestartAck=eqAtmSvcOutPdusRestartAck, eqAtmSaalOutEndPdus=eqAtmSaalOutEndPdus, eqAtmVcStatsOutCellsClp0Discards=eqAtmVcStatsOutCellsClp0Discards, eqAtmStatsInCellsClp1Oam=eqAtmStatsInCellsClp1Oam, eqAtmSaalInResyncPdus=eqAtmSaalInResyncPdus, eqAtmStatsTable=eqAtmStatsTable, eqAtmOamLoopbackAveCellTime=eqAtmOamLoopbackAveCellTime, eqAtmSaalStatsEntry=eqAtmSaalStatsEntry, eqAtmSvcInPdusRestartAck=eqAtmSvcInPdusRestartAck, eqAtmSvcOutPdusNotify=eqAtmSvcOutPdusNotify, eqAtmOamPmFwdTxLostCellsClp0=eqAtmOamPmFwdTxLostCellsClp0, eqAtmVcStatsOutBitsPerSecond=eqAtmVcStatsOutBitsPerSecond, eqAtmSaalInErrRecoveryPdus=eqAtmSaalInErrRecoveryPdus, eqAtmSaalInResyncAckPdus=eqAtmSaalInResyncAckPdus, eqAtmOamPmFwdTxUserCellsClp0=eqAtmOamPmFwdTxUserCellsClp0, eqAtmStatsInCellsClp1=eqAtmStatsInCellsClp1, eqAtmSvcInPdusAddPartyAck=eqAtmSvcInPdusAddPartyAck, eqAtmSvcStatsIfIndex=eqAtmSvcStatsIfIndex, eqAtmSvcOutPdusConnect=eqAtmSvcOutPdusConnect, eqAtmSvcInPdusConnect=eqAtmSvcInPdusConnect, eqAtmOamLoopbackMinCellTime=eqAtmOamLoopbackMinCellTime, eqAtmSvcInLastCauseCode=eqAtmSvcInLastCauseCode, eqAtmStatsEntry=eqAtmStatsEntry, eqAtmVcStatsInCells=eqAtmVcStatsInCells, eqAtmVcStatsInBitsPerSecond=eqAtmVcStatsInBitsPerSecond, eqAtmSaalInErrors=eqAtmSaalInErrors, eqAtmVcStatsInCellsLoopbackOam=eqAtmVcStatsInCellsLoopbackOam, eqAtmStatsOutCellsClp1Oam=eqAtmStatsOutCellsClp1Oam, eqAtmVcStatsVpi=eqAtmVcStatsVpi, eqAtmStatsInCells=eqAtmStatsInCells, eqAtmSvcInCallProceeding=eqAtmSvcInCallProceeding, eqAtmSvcInPdusDropParty=eqAtmSvcInPdusDropParty, eqAtmOamLoopbackIfIndex=eqAtmOamLoopbackIfIndex, eqAtmVcStatsOutCellsClp1Oam=eqAtmVcStatsOutCellsClp1Oam, eqAtmSaalInUnsolicitedStatusPdus=eqAtmSaalInUnsolicitedStatusPdus, eqAtmSaalInStatusPdus=eqAtmSaalInStatusPdus, eqAtmStatsInCellsLoopbackOam=eqAtmStatsInCellsLoopbackOam, eqAtmSvcOutPdusAlerting=eqAtmSvcOutPdusAlerting, eqAtmOamPmStatus=eqAtmOamPmStatus, eqAtmOamPmEntry=eqAtmOamPmEntry, eqAtmStatsInCellsClp1Discards=eqAtmStatsInCellsClp1Discards, eqAtmOamPmIfIndex=eqAtmOamPmIfIndex, eqAtmSaalInEndAckPdus=eqAtmSaalInEndAckPdus, eqAtmSvcOutPdusDropParty=eqAtmSvcOutPdusDropParty, eqAtmSaalOutBeginRejectPdus=eqAtmSaalOutBeginRejectPdus, eqAtmVcStatsInCellsOam=eqAtmVcStatsInCellsOam, eqAtmOamPmBlockSize=eqAtmOamPmBlockSize, eqAtmSvcInPdusReleaseComplete=eqAtmSvcInPdusReleaseComplete, eqAtmOamPmFwdTxUserCellsClp01=eqAtmOamPmFwdTxUserCellsClp01, eqAtmSvcInPdusRestart=eqAtmSvcInPdusRestart, eqAtmSvcInPdusNotify=eqAtmSvcInPdusNotify, eqAtmStatsInCellsClp0Oam=eqAtmStatsInCellsClp0Oam, eqAtmSvcOutPdusPartyAlerting=eqAtmSvcOutPdusPartyAlerting, eqAtmSaalOutUnnumberedMgmtPdus=eqAtmSaalOutUnnumberedMgmtPdus, eqAtmSaalOutSeqDataPdus=eqAtmSaalOutSeqDataPdus, eqAtmSaalOutUnsolicitedStatusPdus=eqAtmSaalOutUnsolicitedStatusPdus, eqAtmOamPmFwdTxLostCellsClp01=eqAtmOamPmFwdTxLostCellsClp01, eqAtmOamLoopbackVpi=eqAtmOamLoopbackVpi, eqAtmSaalOutSignalOctets=eqAtmSaalOutSignalOctets, eqAtmVcStatsInCellsClp0Oam=eqAtmVcStatsInCellsClp0Oam, eqAtmOamLoopbackVci=eqAtmOamLoopbackVci, eqAtmSaalInBeginAckPdus=eqAtmSaalInBeginAckPdus, eqAtmSaalInPollPdus=eqAtmSaalInPollPdus, eqAtmSvcConnected=eqAtmSvcConnected, eqAtmOamLoopbackTotalCellTime=eqAtmOamLoopbackTotalCellTime, eqAtmSaalInDiscards=eqAtmSaalInDiscards, eqAtmSaalOutStatusPdus=eqAtmSaalOutStatusPdus, eqAtmSaalInSeqDataPdus=eqAtmSaalInSeqDataPdus, eqAtmOamLoopbackCellsTimedOut=eqAtmOamLoopbackCellsTimedOut, eqAtmOamLoopbackEndPoint=eqAtmOamLoopbackEndPoint, eqAtmOamPmEndPt=eqAtmOamPmEndPt, eqAtmVcStatsOutCells=eqAtmVcStatsOutCells, eqAtmStatsInBitsPerSecond=eqAtmStatsInBitsPerSecond, eqAtmSvcStatsEntry=eqAtmSvcStatsEntry, eqAtmSvcOutCallProceeding=eqAtmSvcOutCallProceeding, eqAtmSaalOutDiscards=eqAtmSaalOutDiscards, eqAtmSvcOutLastCauseCode=eqAtmSvcOutLastCauseCode, eqAtmVcStatsInCellsClp1Discards=eqAtmVcStatsInCellsClp1Discards, eqAtmStatsCLR=eqAtmStatsCLR, eqAtmSvcOutPdusAddPartyAck=eqAtmSvcOutPdusAddPartyAck, eqAtmSvcOutPdusRestart=eqAtmSvcOutPdusRestart, eqAtmSaalInBeginPdus=eqAtmSaalInBeginPdus, eqAtmVcStatsInCellsClp0=eqAtmVcStatsInCellsClp0, eqAtmStatsOutCellsLoopback=eqAtmStatsOutCellsLoopback, eqAtmStatsOutCellsClp0=eqAtmStatsOutCellsClp0, eqAtmOamLoopbackTimeout=eqAtmOamLoopbackTimeout, eqAtmMib=eqAtmMib, eqAtmSvcInPdusStatusEnquiry=eqAtmSvcInPdusStatusEnquiry, eqAtmSvcInPdusStatus=eqAtmSvcInPdusStatus, eqAtmStatsInCellsLoopback=eqAtmStatsInCellsLoopback, eqAtmVcStatsInCellsPerSecond=eqAtmVcStatsInCellsPerSecond, eqAtmStatsInCellsOam=eqAtmStatsInCellsOam, eqAtmSaalOutBeginAckPdus=eqAtmSaalOutBeginAckPdus, eqAtmOamLoopbackMaxCellTime=eqAtmOamLoopbackMaxCellTime, eqAtmVcStatsIfIndex=eqAtmVcStatsIfIndex, eqAtmVcStatsInCellsClp1Oam=eqAtmVcStatsInCellsClp1Oam, eqAtmSvcInPdusPartyAlerting=eqAtmSvcInPdusPartyAlerting, eqAtmVcStatsInCellsClp1=eqAtmVcStatsInCellsClp1, eqAtmSaalOutEndAckPdus=eqAtmSaalOutEndAckPdus, eqAtmOamPmSessionType=eqAtmOamPmSessionType, eqAtmStatsOutCellsLoopbackOam=eqAtmStatsOutCellsLoopbackOam, eqAtmStatsOutCellsClp0Discards=eqAtmStatsOutCellsClp0Discards, eqAtmStatsOutBitsPerSecond=eqAtmStatsOutBitsPerSecond, eqAtmVcStatsTable=eqAtmVcStatsTable, eqAtmSvcOutPdusDropPartyAck=eqAtmSvcOutPdusDropPartyAck, eqAtmSaalOutResyncPdus=eqAtmSaalOutResyncPdus, eqAtmOamLoopbackCellsReceived=eqAtmOamLoopbackCellsReceived, eqAtmStatsOutCellsClp1=eqAtmStatsOutCellsClp1, PYSNMP_MODULE_ID=eqAtmMib, eqAtmSaalInUnsolicitedUserPdus=eqAtmSaalInUnsolicitedUserPdus, eqAtmSvcOutPdusAddPartyReject=eqAtmSvcOutPdusAddPartyReject, eqAtmSaalInBeginRejectPdus=eqAtmSaalInBeginRejectPdus, eqAtmOamPmVpi=eqAtmOamPmVpi, eqAtmVcStatsInCellsLoopback=eqAtmVcStatsInCellsLoopback)
