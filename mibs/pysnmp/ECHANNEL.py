#
# PySNMP MIB module ECHANNEL (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ECHANNEL
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter32, Integer32, Gauge32, Unsigned32, MibIdentifier, IpAddress, ModuleIdentity, Bits, ObjectIdentity, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "Integer32", "Gauge32", "Unsigned32", "MibIdentifier", "IpAddress", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanVportArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanVportArch")
virtualPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 3, 1))
logicalPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 3, 2))
physicalPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 3, 3))
mirrorPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 3, 4))
echannelPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 3, 5))
ethChnlPriPortTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 1), )
if mibBuilder.loadTexts: ethChnlPriPortTable.setStatus('mandatory')
ethChnlPriPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 1, 1), ).setIndexNames((0, "ECHANNEL", "ethChannelId"))
if mibBuilder.loadTexts: ethChnlPriPortEntry.setStatus('mandatory')
ethChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethChannelId.setStatus('mandatory')
priPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: priPortSlot.setStatus('mandatory')
priPortPhysIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: priPortPhysIntf.setStatus('mandatory')
adminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminStatus.setStatus('mandatory')
ethChnlSecPortTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 2), )
if mibBuilder.loadTexts: ethChnlSecPortTable.setStatus('mandatory')
ethChnlSecPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 2, 1), ).setIndexNames((0, "ECHANNEL", "secethChannelId"), (0, "ECHANNEL", "secPortSlot"), (0, "ECHANNEL", "secPortPhysIntf"))
if mibBuilder.loadTexts: ethChnlSecPortEntry.setStatus('mandatory')
secethChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secethChannelId.setStatus('mandatory')
secPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secPortSlot.setStatus('mandatory')
secPortPhysIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secPortPhysIntf.setStatus('mandatory')
secadminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 3, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secadminStatus.setStatus('mandatory')
mibBuilder.exportSymbols("ECHANNEL", logicalPort=logicalPort, ethChnlSecPortTable=ethChnlSecPortTable, adminStatus=adminStatus, ethChnlSecPortEntry=ethChnlSecPortEntry, mirrorPort=mirrorPort, ethChnlPriPortTable=ethChnlPriPortTable, priPortPhysIntf=priPortPhysIntf, physicalPort=physicalPort, ethChannelId=ethChannelId, virtualPort=virtualPort, priPortSlot=priPortSlot, secPortPhysIntf=secPortPhysIntf, secadminStatus=secadminStatus, secPortSlot=secPortSlot, echannelPort=echannelPort, secethChannelId=secethChannelId, ethChnlPriPortEntry=ethChnlPriPortEntry)
