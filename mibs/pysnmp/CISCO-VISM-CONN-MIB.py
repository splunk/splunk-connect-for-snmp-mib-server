#
# PySNMP MIB module CISCO-VISM-CONN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VISM-CONN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
vismChanCnfGrp, vismChanGrp = mibBuilder.importSymbols("BASIS-MIB", "vismChanCnfGrp", "vismChanGrp")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, Counter32, Counter64, iso, IpAddress, ObjectIdentity, MibIdentifier, Bits, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "Counter32", "Counter64", "iso", "IpAddress", "ObjectIdentity", "MibIdentifier", "Bits", "NotificationType", "Unsigned32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
ciscoVismConnMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 86))
ciscoVismConnMIB.setRevisions(('2004-05-03 00:00', '2004-03-09 00:00', '2004-02-18 00:00',))
if mibBuilder.loadTexts: ciscoVismConnMIB.setLastUpdated('200405030000Z')
if mibBuilder.loadTexts: ciscoVismConnMIB.setOrganization('Cisco Systems, Inc.')
vismChanStateGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2))
vismChanCnfGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1), )
if mibBuilder.loadTexts: vismChanCnfGrpTable.setStatus('current')
vismChanCnfGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1), ).setIndexNames((0, "CISCO-VISM-CONN-MIB", "vismCnfChanNum"))
if mibBuilder.loadTexts: vismChanCnfGrpEntry.setStatus('current')
vismCnfChanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(131, 510))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismCnfChanNum.setStatus('current')
vismChanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("add", 1), ("del", 2), ("mod", 3), ("outOfService", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanRowStatus.setStatus('current')
vismChanPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanPortNum.setStatus('current')
vismChanLocRmtLpbkState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanLocRmtLpbkState.setStatus('current')
vismChanTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("testcon", 1), ("testdelay", 2), ("notest", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanTestType.setStatus('current')
vismChanTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("passed", 1), ("failed", 2), ("inprogress", 3), ("notinprogress", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanTestState.setStatus('current')
vismChanRTDResult = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanRTDResult.setStatus('current')
vismChanPvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("aal-5", 1), ("aal-2", 2), ("aal-1", 3))).clone('aal-5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanPvcType.setStatus('current')
vismChanConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("pvc", 1))).clone('pvc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanConnType.setStatus('current')
vismLocalVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLocalVpi.setStatus('current')
vismLocalVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismLocalVci.setStatus('current')
vismLocalNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismLocalNSAP.setStatus('current')
vismRemoteVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRemoteVpi.setStatus('current')
vismRemoteVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRemoteVci.setStatus('current')
vismRemoteNSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRemoteNSAP.setStatus('current')
vismMastership = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("unknown", 3))).clone('master')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismMastership.setStatus('current')
vismVpcFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("vcc", 2))).clone('vcc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismVpcFlag.setStatus('current')
vismConnServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("cbr", 1), ("vbr-rt", 2), ("vbr-nrt", 3), ("vbr3-rt", 4), ("vbr2-rt", 5), ("vbr2-nrt", 6), ("vbr3-nrt", 7))).clone('cbr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnServiceType.setStatus('current')
vismRoutingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRoutingPriority.setStatus('current')
vismMaxCost = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismMaxCost.setStatus('current')
vismRestrictTrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noresriction", 1), ("terrestrialTrunk", 2), ("sateliteTrunk", 3))).clone('noresriction')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismRestrictTrunkType.setStatus('current')
vismConnPCR = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnPCR.setStatus('current')
vismConnPercentUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percentage').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnPercentUtil.setStatus('current')
vismConnRemotePCR = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnRemotePCR.setStatus('current')
vismConnRemotePercentUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percentage').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnRemotePercentUtil.setStatus('current')
vismChanProtection = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("protected", 1), ("unprotected", 2))).clone('unprotected')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanProtection.setStatus('current')
vismChanPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))).clone('primary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanPreference.setStatus('current')
vismChanActivityState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("failed", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanActivityState.setStatus('current')
vismChanLockingState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unlock", 1), ("lock", 2))).clone('unlock')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanLockingState.setStatus('current')
vismChanScrIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanScrIngress.setStatus('current')
vismChanMbsIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanMbsIngress.setStatus('current')
vismChanClrIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanClrIngress.setStatus('current')
vismChanCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanCdvt.setStatus('current')
vismConnPCREgress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnPCREgress.setStatus('current')
vismChanScrEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanScrEgress.setStatus('current')
vismChanMbsEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanMbsEgress.setStatus('current')
vismChanClrEgress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanClrEgress.setStatus('current')
vismChanApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("control", 1), ("bearer", 2), ("signaling", 3))).clone('bearer')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanApplication.setStatus('current')
vismChanFallbackLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(131, 510))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanFallbackLcn.setStatus('current')
vismChanReroute = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 40), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanReroute.setStatus('current')
vismFarEndAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notapplicable", 1), ("nsap", 2), ("e164", 3), ("gwid", 4), ("unspecified", 5))).clone('notapplicable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismFarEndAddressType.setStatus('current')
vismFarEndE164Address = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismFarEndE164Address.setStatus('current')
vismFarEndGWIDAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismFarEndGWIDAddress.setStatus('current')
vismFarEndNSAPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismFarEndNSAPAddress.setStatus('current')
vismVCCI = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismVCCI.setStatus('current')
vismConnAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismConnAdminStatus.setStatus('current')
vismChanPrefRouteId = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 47), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanPrefRouteId.setStatus('current')
vismChanDirectRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 48), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanDirectRoute.setStatus('current')
vismChanAisSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 49), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanAisSuppression.setStatus('current')
vismChanAisDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 50), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanAisDelayTime.setStatus('current')
vismChanUserMaxPCRBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 51), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanUserMaxPCRBandwidth.setStatus('current')
vismChanUserMaxScrIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 52), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanUserMaxScrIngress.setStatus('current')
vismChanUserMaxMbsIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 53), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanUserMaxMbsIngress.setStatus('current')
vismChanUserMinPCRBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 54), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setUnits('cells-per-second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanUserMinPCRBandwidth.setStatus('current')
vismChanUserPcrNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userConfiguredMaxBandwidth", 1), ("userConfiguredMinBandwidth", 2))).clone('userConfiguredMaxBandwidth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vismChanUserPcrNumber.setStatus('current')
vismChanNumNextAvailable = MibScalar((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 510))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanNumNextAvailable.setStatus('current')
vismChanStateGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1), )
if mibBuilder.loadTexts: vismChanStateGrpTable.setStatus('current')
vismChanStateGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1, 1), ).setIndexNames((0, "CISCO-VISM-CONN-MIB", "vismStateChanNum"))
if mibBuilder.loadTexts: vismChanStateGrpEntry.setStatus('current')
vismStateChanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(131, 510))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismStateChanNum.setStatus('current')
vismChanState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notConfigured", 1), ("okay", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanState.setStatus('current')
vismChanXmtATMState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("sendingAIS", 3), ("sendingFERF", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanXmtATMState.setStatus('current')
vismChanRcvATMState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("receivingAIS", 3), ("receivingFERF", 4), ("oamFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanRcvATMState.setStatus('current')
vismChanStatusBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismChanStatusBitMap.setStatus('current')
ciscoVismConnMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 86, 2))
ciscoVismConnMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 1))
ciscoVismConnMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 2))
ciscoVismConnCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 2, 1)).setObjects(("CISCO-VISM-CONN-MIB", "ciscoVismConnGroup"), ("CISCO-VISM-CONN-MIB", "ciscoVismConnStateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismConnCompliance = ciscoVismConnCompliance.setStatus('deprecated')
ciscoVismConnComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 2, 2)).setObjects(("CISCO-VISM-CONN-MIB", "ciscoVismConnGroupRev1"), ("CISCO-VISM-CONN-MIB", "ciscoVismConnStateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismConnComplianceRev1 = ciscoVismConnComplianceRev1.setStatus('current')
ciscoVismConnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 1, 1)).setObjects(("CISCO-VISM-CONN-MIB", "vismChanNumNextAvailable"), ("CISCO-VISM-CONN-MIB", "vismCnfChanNum"), ("CISCO-VISM-CONN-MIB", "vismChanRowStatus"), ("CISCO-VISM-CONN-MIB", "vismChanPortNum"), ("CISCO-VISM-CONN-MIB", "vismChanLocRmtLpbkState"), ("CISCO-VISM-CONN-MIB", "vismChanTestType"), ("CISCO-VISM-CONN-MIB", "vismChanTestState"), ("CISCO-VISM-CONN-MIB", "vismChanRTDResult"), ("CISCO-VISM-CONN-MIB", "vismChanPvcType"), ("CISCO-VISM-CONN-MIB", "vismChanConnType"), ("CISCO-VISM-CONN-MIB", "vismLocalVpi"), ("CISCO-VISM-CONN-MIB", "vismLocalVci"), ("CISCO-VISM-CONN-MIB", "vismLocalNSAP"), ("CISCO-VISM-CONN-MIB", "vismRemoteVpi"), ("CISCO-VISM-CONN-MIB", "vismRemoteVci"), ("CISCO-VISM-CONN-MIB", "vismRemoteNSAP"), ("CISCO-VISM-CONN-MIB", "vismMastership"), ("CISCO-VISM-CONN-MIB", "vismVpcFlag"), ("CISCO-VISM-CONN-MIB", "vismConnServiceType"), ("CISCO-VISM-CONN-MIB", "vismRoutingPriority"), ("CISCO-VISM-CONN-MIB", "vismMaxCost"), ("CISCO-VISM-CONN-MIB", "vismRestrictTrunkType"), ("CISCO-VISM-CONN-MIB", "vismConnPCR"), ("CISCO-VISM-CONN-MIB", "vismConnPercentUtil"), ("CISCO-VISM-CONN-MIB", "vismConnRemotePCR"), ("CISCO-VISM-CONN-MIB", "vismConnRemotePercentUtil"), ("CISCO-VISM-CONN-MIB", "vismChanProtection"), ("CISCO-VISM-CONN-MIB", "vismChanPreference"), ("CISCO-VISM-CONN-MIB", "vismChanActivityState"), ("CISCO-VISM-CONN-MIB", "vismChanLockingState"), ("CISCO-VISM-CONN-MIB", "vismChanScrIngress"), ("CISCO-VISM-CONN-MIB", "vismChanMbsIngress"), ("CISCO-VISM-CONN-MIB", "vismChanCdvt"), ("CISCO-VISM-CONN-MIB", "vismChanClrIngress"), ("CISCO-VISM-CONN-MIB", "vismConnPCREgress"), ("CISCO-VISM-CONN-MIB", "vismChanScrEgress"), ("CISCO-VISM-CONN-MIB", "vismChanMbsEgress"), ("CISCO-VISM-CONN-MIB", "vismChanClrEgress"), ("CISCO-VISM-CONN-MIB", "vismChanApplication"), ("CISCO-VISM-CONN-MIB", "vismChanFallbackLcn"), ("CISCO-VISM-CONN-MIB", "vismChanReroute"), ("CISCO-VISM-CONN-MIB", "vismFarEndAddressType"), ("CISCO-VISM-CONN-MIB", "vismFarEndE164Address"), ("CISCO-VISM-CONN-MIB", "vismFarEndGWIDAddress"), ("CISCO-VISM-CONN-MIB", "vismFarEndNSAPAddress"), ("CISCO-VISM-CONN-MIB", "vismVCCI"), ("CISCO-VISM-CONN-MIB", "vismConnAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismConnGroup = ciscoVismConnGroup.setStatus('deprecated')
ciscoVismConnStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 1, 2)).setObjects(("CISCO-VISM-CONN-MIB", "vismStateChanNum"), ("CISCO-VISM-CONN-MIB", "vismChanState"), ("CISCO-VISM-CONN-MIB", "vismChanXmtATMState"), ("CISCO-VISM-CONN-MIB", "vismChanRcvATMState"), ("CISCO-VISM-CONN-MIB", "vismChanStatusBitMap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismConnStateGroup = ciscoVismConnStateGroup.setStatus('current')
ciscoVismConnGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 86, 2, 1, 3)).setObjects(("CISCO-VISM-CONN-MIB", "vismChanNumNextAvailable"), ("CISCO-VISM-CONN-MIB", "vismCnfChanNum"), ("CISCO-VISM-CONN-MIB", "vismChanRowStatus"), ("CISCO-VISM-CONN-MIB", "vismChanPortNum"), ("CISCO-VISM-CONN-MIB", "vismChanLocRmtLpbkState"), ("CISCO-VISM-CONN-MIB", "vismChanTestType"), ("CISCO-VISM-CONN-MIB", "vismChanTestState"), ("CISCO-VISM-CONN-MIB", "vismChanRTDResult"), ("CISCO-VISM-CONN-MIB", "vismChanPvcType"), ("CISCO-VISM-CONN-MIB", "vismChanConnType"), ("CISCO-VISM-CONN-MIB", "vismLocalVpi"), ("CISCO-VISM-CONN-MIB", "vismLocalVci"), ("CISCO-VISM-CONN-MIB", "vismLocalNSAP"), ("CISCO-VISM-CONN-MIB", "vismRemoteVpi"), ("CISCO-VISM-CONN-MIB", "vismRemoteVci"), ("CISCO-VISM-CONN-MIB", "vismRemoteNSAP"), ("CISCO-VISM-CONN-MIB", "vismMastership"), ("CISCO-VISM-CONN-MIB", "vismVpcFlag"), ("CISCO-VISM-CONN-MIB", "vismConnServiceType"), ("CISCO-VISM-CONN-MIB", "vismRoutingPriority"), ("CISCO-VISM-CONN-MIB", "vismMaxCost"), ("CISCO-VISM-CONN-MIB", "vismRestrictTrunkType"), ("CISCO-VISM-CONN-MIB", "vismConnPCR"), ("CISCO-VISM-CONN-MIB", "vismConnPercentUtil"), ("CISCO-VISM-CONN-MIB", "vismConnRemotePCR"), ("CISCO-VISM-CONN-MIB", "vismConnRemotePercentUtil"), ("CISCO-VISM-CONN-MIB", "vismChanProtection"), ("CISCO-VISM-CONN-MIB", "vismChanPreference"), ("CISCO-VISM-CONN-MIB", "vismChanActivityState"), ("CISCO-VISM-CONN-MIB", "vismChanLockingState"), ("CISCO-VISM-CONN-MIB", "vismChanScrIngress"), ("CISCO-VISM-CONN-MIB", "vismChanMbsIngress"), ("CISCO-VISM-CONN-MIB", "vismChanCdvt"), ("CISCO-VISM-CONN-MIB", "vismChanClrIngress"), ("CISCO-VISM-CONN-MIB", "vismConnPCREgress"), ("CISCO-VISM-CONN-MIB", "vismChanScrEgress"), ("CISCO-VISM-CONN-MIB", "vismChanMbsEgress"), ("CISCO-VISM-CONN-MIB", "vismChanClrEgress"), ("CISCO-VISM-CONN-MIB", "vismChanApplication"), ("CISCO-VISM-CONN-MIB", "vismChanFallbackLcn"), ("CISCO-VISM-CONN-MIB", "vismChanReroute"), ("CISCO-VISM-CONN-MIB", "vismFarEndAddressType"), ("CISCO-VISM-CONN-MIB", "vismFarEndE164Address"), ("CISCO-VISM-CONN-MIB", "vismFarEndGWIDAddress"), ("CISCO-VISM-CONN-MIB", "vismFarEndNSAPAddress"), ("CISCO-VISM-CONN-MIB", "vismVCCI"), ("CISCO-VISM-CONN-MIB", "vismConnAdminStatus"), ("CISCO-VISM-CONN-MIB", "vismChanPrefRouteId"), ("CISCO-VISM-CONN-MIB", "vismChanDirectRoute"), ("CISCO-VISM-CONN-MIB", "vismChanAisSuppression"), ("CISCO-VISM-CONN-MIB", "vismChanAisDelayTime"), ("CISCO-VISM-CONN-MIB", "vismChanUserMaxPCRBandwidth"), ("CISCO-VISM-CONN-MIB", "vismChanUserMaxScrIngress"), ("CISCO-VISM-CONN-MIB", "vismChanUserMaxMbsIngress"), ("CISCO-VISM-CONN-MIB", "vismChanUserMinPCRBandwidth"), ("CISCO-VISM-CONN-MIB", "vismChanUserPcrNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismConnGroupRev1 = ciscoVismConnGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-VISM-CONN-MIB", vismMastership=vismMastership, vismRestrictTrunkType=vismRestrictTrunkType, vismRemoteNSAP=vismRemoteNSAP, vismChanStateGrp=vismChanStateGrp, vismStateChanNum=vismStateChanNum, vismCnfChanNum=vismCnfChanNum, vismChanMbsEgress=vismChanMbsEgress, vismLocalVci=vismLocalVci, vismChanStateGrpEntry=vismChanStateGrpEntry, vismChanRowStatus=vismChanRowStatus, ciscoVismConnGroup=ciscoVismConnGroup, vismConnRemotePCR=vismConnRemotePCR, vismVCCI=vismVCCI, vismConnAdminStatus=vismConnAdminStatus, vismChanCnfGrpEntry=vismChanCnfGrpEntry, vismChanUserMaxPCRBandwidth=vismChanUserMaxPCRBandwidth, vismChanTestType=vismChanTestType, vismFarEndNSAPAddress=vismFarEndNSAPAddress, vismChanUserMaxScrIngress=vismChanUserMaxScrIngress, vismChanXmtATMState=vismChanXmtATMState, vismChanAisDelayTime=vismChanAisDelayTime, vismChanLocRmtLpbkState=vismChanLocRmtLpbkState, vismFarEndAddressType=vismFarEndAddressType, ciscoVismConnMIB=ciscoVismConnMIB, vismChanUserPcrNumber=vismChanUserPcrNumber, vismChanRTDResult=vismChanRTDResult, vismChanProtection=vismChanProtection, vismRemoteVpi=vismRemoteVpi, vismMaxCost=vismMaxCost, ciscoVismConnComplianceRev1=ciscoVismConnComplianceRev1, vismChanScrEgress=vismChanScrEgress, vismChanCnfGrpTable=vismChanCnfGrpTable, vismChanDirectRoute=vismChanDirectRoute, vismVpcFlag=vismVpcFlag, vismConnPCREgress=vismConnPCREgress, vismConnServiceType=vismConnServiceType, vismChanApplication=vismChanApplication, vismChanRcvATMState=vismChanRcvATMState, ciscoVismConnStateGroup=ciscoVismConnStateGroup, vismRemoteVci=vismRemoteVci, vismChanMbsIngress=vismChanMbsIngress, vismChanStatusBitMap=vismChanStatusBitMap, vismConnPercentUtil=vismConnPercentUtil, PYSNMP_MODULE_ID=ciscoVismConnMIB, vismChanReroute=vismChanReroute, vismFarEndGWIDAddress=vismFarEndGWIDAddress, vismChanState=vismChanState, vismChanCdvt=vismChanCdvt, vismChanClrIngress=vismChanClrIngress, vismChanAisSuppression=vismChanAisSuppression, ciscoVismConnMIBCompliances=ciscoVismConnMIBCompliances, vismChanPortNum=vismChanPortNum, vismChanActivityState=vismChanActivityState, ciscoVismConnGroupRev1=ciscoVismConnGroupRev1, vismRoutingPriority=vismRoutingPriority, vismLocalVpi=vismLocalVpi, vismLocalNSAP=vismLocalNSAP, vismConnPCR=vismConnPCR, vismChanFallbackLcn=vismChanFallbackLcn, vismChanClrEgress=vismChanClrEgress, vismChanUserMinPCRBandwidth=vismChanUserMinPCRBandwidth, vismConnRemotePercentUtil=vismConnRemotePercentUtil, vismChanConnType=vismChanConnType, ciscoVismConnCompliance=ciscoVismConnCompliance, vismChanLockingState=vismChanLockingState, vismChanPrefRouteId=vismChanPrefRouteId, vismChanPvcType=vismChanPvcType, vismChanTestState=vismChanTestState, vismChanScrIngress=vismChanScrIngress, vismFarEndE164Address=vismFarEndE164Address, vismChanUserMaxMbsIngress=vismChanUserMaxMbsIngress, vismChanStateGrpTable=vismChanStateGrpTable, ciscoVismConnMIBConformance=ciscoVismConnMIBConformance, ciscoVismConnMIBGroups=ciscoVismConnMIBGroups, vismChanPreference=vismChanPreference, vismChanNumNextAvailable=vismChanNumNextAvailable)
