#
# PySNMP MIB module XYLANTRAP-9-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLANTRAP-9-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:39:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
chasControlState, chasModuleOperStatus, chasPowerSupply2State, chasModuleSlot, chasPowerSupply1State, chasModuleSubUnit, chasControlSlot, chasModuleType = mibBuilder.importSymbols("CHASSIS-MIB", "chasControlState", "chasModuleOperStatus", "chasPowerSupply2State", "chasModuleSlot", "chasPowerSupply1State", "chasModuleSubUnit", "chasControlSlot", "chasModuleType")
fddimibSMTIndex, fddimibSMTCFState = mibBuilder.importSymbols("FDDI-SMT73-MIB", "fddimibSMTIndex", "fddimibSMTCFState")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, iso, ObjectIdentity, TimeTicks, ModuleIdentity, Integer32, IpAddress, Bits, NotificationType, Counter64, NotificationType, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "iso", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Integer32", "IpAddress", "Bits", "NotificationType", "Counter64", "NotificationType", "Counter32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
atmxPortEnableILMI, atmxPortSlotIndex, atmxServiceSlotIndex, atmxVccSlotIndex, atmxServicePortIndex, atmxServiceAdmStatus, atmxVccVpi, atmxPortPortIndex, atmxVccVci, atmxVccPortIndex, atmxServiceNumber, atmxVccAdmStatus = mibBuilder.importSymbols("XYLAN-ATM-MIB", "atmxPortEnableILMI", "atmxPortSlotIndex", "atmxServiceSlotIndex", "atmxVccSlotIndex", "atmxServicePortIndex", "atmxServiceAdmStatus", "atmxVccVpi", "atmxPortPortIndex", "atmxVccVci", "atmxVccPortIndex", "atmxServiceNumber", "atmxVccAdmStatus")
omniswitch5, xylanSwitchDevice, microSwitch, pizzaSwitch, omniswitch9, xylan = mibBuilder.importSymbols("XYLAN-BASE-MIB", "omniswitch5", "xylanSwitchDevice", "microSwitch", "pizzaSwitch", "omniswitch9", "xylan")
frxVcControlSlotIndex, frxVcControlPortIndex, frxVcControlDlci = mibBuilder.importSymbols("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex", "frxVcControlPortIndex", "frxVcControlDlci")
healthThreshModTrapCount, healthThreshModTrapData, healthThreshDevTrapData = mibBuilder.importSymbols("XYLAN-HEALTH-MIB", "healthThreshModTrapCount", "healthThreshModTrapData", "healthThreshDevTrapData")
xylanIpAssocSlot, xylanIpAssocDupIntf, xylanIpAssocMac, xylanIpAssocDupSlot, xylanIpAssocAddr, xylanIpAssocIntf, xylanIpAssocDupMac = mibBuilder.importSymbols("XYLAN-IP-MIB", "xylanIpAssocSlot", "xylanIpAssocDupIntf", "xylanIpAssocMac", "xylanIpAssocDupSlot", "xylanIpAssocAddr", "xylanIpAssocIntf", "xylanIpAssocDupMac")
systemEventTrapNumber, = mibBuilder.importSymbols("XYLAN-MGMTSTN-MIB", "systemEventTrapNumber")
vportAdmStatus, vportSlot, vportFuncTypeInstance, vportIF, vportFuncType = mibBuilder.importSymbols("XYLAN-PORT-MIB", "vportAdmStatus", "vportSlot", "vportFuncTypeInstance", "vportIF", "vportFuncType")
vDupMacSlot, atVLANGroupId, vDupMacIntf, vLanNumber, vDupMacTime, vLanAdmStatus, vDupMacMac, vBrdgTpFdbAddress, atVLANId, atVLANAdminStatus = mibBuilder.importSymbols("XYLAN-VLAN-MIB", "vDupMacSlot", "atVLANGroupId", "vDupMacIntf", "vLanNumber", "vDupMacTime", "vLanAdmStatus", "vDupMacMac", "vBrdgTpFdbAddress", "atVLANId", "atVLANAdminStatus")
tempAlarm9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,1))
moduleChange9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,2)).setObjects(("CHASSIS-MIB", "chasModuleSlot"), ("CHASSIS-MIB", "chasModuleSubUnit"), ("CHASSIS-MIB", "chasModuleType"))
powerEvent9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,3)).setObjects(("CHASSIS-MIB", "chasPowerSupply1State"), ("CHASSIS-MIB", "chasPowerSupply2State"))
controllerEvent9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,4)).setObjects(("CHASSIS-MIB", "chasControlSlot"), ("CHASSIS-MIB", "chasControlState"))
loginViolation9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,5))
macVlanViolation9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,6)).setObjects(("XYLAN-VLAN-MIB", "vBrdgTpFdbAddress"))
macDuplicatePort9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,7)).setObjects(("XYLAN-VLAN-MIB", "vBrdgTpFdbAddress"))
portLinkUpEvent9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,8)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portLinkDownEvent9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,9)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portPartitioned9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,10)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
portRecordMismatch9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,11)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
groupChange9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,14)).setObjects(("XYLAN-VLAN-MIB", "vLanNumber"), ("XYLAN-VLAN-MIB", "vLanAdmStatus"))
vlanChange9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,15)).setObjects(("XYLAN-VLAN-MIB", "atVLANGroupId"), ("XYLAN-VLAN-MIB", "atVLANId"), ("XYLAN-VLAN-MIB", "atVLANAdminStatus"))
portMove9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,16)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"), ("XYLAN-PORT-MIB", "vportAdmStatus"))
moduleResetReload9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,17)).setObjects(("CHASSIS-MIB", "chasModuleSlot"), ("CHASSIS-MIB", "chasModuleSubUnit"), ("CHASSIS-MIB", "chasModuleType"), ("CHASSIS-MIB", "chasModuleOperStatus"))
systemEvent9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,18)).setObjects(("XYLAN-MGMTSTN-MIB", "systemEventTrapNumber"))
vlanRouteTableFull9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,19))
sapTableFull9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,20))
atmSSCOPstate9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,21)).setObjects(("XYLAN-ATM-MIB", "atmxPortSlotIndex"), ("XYLAN-ATM-MIB", "atmxPortPortIndex"))
ilmiState9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,22)).setObjects(("XYLAN-ATM-MIB", "atmxPortSlotIndex"), ("XYLAN-ATM-MIB", "atmxPortPortIndex"), ("XYLAN-ATM-MIB", "atmxPortEnableILMI"))
atmConnection9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,23)).setObjects(("XYLAN-ATM-MIB", "atmxVccSlotIndex"), ("XYLAN-ATM-MIB", "atmxVccPortIndex"), ("XYLAN-ATM-MIB", "atmxVccVpi"), ("XYLAN-ATM-MIB", "atmxVccVci"), ("XYLAN-ATM-MIB", "atmxVccAdmStatus"))
atmService9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,24)).setObjects(("XYLAN-ATM-MIB", "atmxServiceSlotIndex"), ("XYLAN-ATM-MIB", "atmxServicePortIndex"), ("XYLAN-ATM-MIB", "atmxServiceNumber"), ("XYLAN-ATM-MIB", "atmxServiceAdmStatus"))
dlciNew9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,27)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciDel9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,28)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciUp9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,29)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
dlciDn9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,30)).setObjects(("XYLAN-FRAME-RELAY-MIB", "frxVcControlSlotIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlPortIndex"), ("XYLAN-FRAME-RELAY-MIB", "frxVcControlDlci"))
portManualForwardingMode9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,31)).setObjects(("XYLAN-PORT-MIB", "vportSlot"), ("XYLAN-PORT-MIB", "vportIF"), ("XYLAN-PORT-MIB", "vportFuncType"), ("XYLAN-PORT-MIB", "vportFuncTypeInstance"))
fddiCFStateChange9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,32)).setObjects(("FDDI-SMT73-MIB", "fddimibSMTIndex"), ("FDDI-SMT73-MIB", "fddimibSMTCFState"))
duplicateIPaddress9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,35)).setObjects(("XYLAN-IP-MIB", "xylanIpAssocAddr"), ("XYLAN-IP-MIB", "xylanIpAssocMac"), ("XYLAN-IP-MIB", "xylanIpAssocSlot"), ("XYLAN-IP-MIB", "xylanIpAssocIntf"), ("XYLAN-IP-MIB", "xylanIpAssocDupMac"), ("XYLAN-IP-MIB", "xylanIpAssocDupSlot"), ("XYLAN-IP-MIB", "xylanIpAssocDupIntf"))
duplicateMACaddress9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,36)).setObjects(("XYLAN-VLAN-MIB", "vDupMacMac"), ("XYLAN-VLAN-MIB", "vDupMacSlot"), ("XYLAN-VLAN-MIB", "vDupMacIntf"), ("XYLAN-VLAN-MIB", "vDupMacTime"))
healthThresholdRising9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,37))
healthThresholdFalling9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,38))
healthThresholdDevice9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,39)).setObjects(("XYLAN-HEALTH-MIB", "healthThreshDevTrapData"))
healthThresholdModule9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,40)).setObjects(("XYLAN-HEALTH-MIB", "healthThreshModTrapCount"), ("XYLAN-HEALTH-MIB", "healthThreshModTrapData"))
pnniRouteConflictPort9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,50))
pnniRouteConflictSamePG9 = NotificationType((1, 3, 6, 1, 4, 1, 800, 3, 1, 1, 2) + (0,51))
mibBuilder.exportSymbols("XYLANTRAP-9-MIB", atmService9=atmService9, controllerEvent9=controllerEvent9, systemEvent9=systemEvent9, atmConnection9=atmConnection9, macDuplicatePort9=macDuplicatePort9, vlanRouteTableFull9=vlanRouteTableFull9, atmSSCOPstate9=atmSSCOPstate9, dlciNew9=dlciNew9, moduleResetReload9=moduleResetReload9, loginViolation9=loginViolation9, dlciDel9=dlciDel9, vlanChange9=vlanChange9, pnniRouteConflictPort9=pnniRouteConflictPort9, portMove9=portMove9, groupChange9=groupChange9, healthThresholdModule9=healthThresholdModule9, healthThresholdDevice9=healthThresholdDevice9, pnniRouteConflictSamePG9=pnniRouteConflictSamePG9, tempAlarm9=tempAlarm9, ilmiState9=ilmiState9, portLinkUpEvent9=portLinkUpEvent9, duplicateIPaddress9=duplicateIPaddress9, healthThresholdRising9=healthThresholdRising9, dlciDn9=dlciDn9, dlciUp9=dlciUp9, powerEvent9=powerEvent9, macVlanViolation9=macVlanViolation9, moduleChange9=moduleChange9, sapTableFull9=sapTableFull9, duplicateMACaddress9=duplicateMACaddress9, healthThresholdFalling9=healthThresholdFalling9, portRecordMismatch9=portRecordMismatch9, portLinkDownEvent9=portLinkDownEvent9, fddiCFStateChange9=fddiCFStateChange9, portPartitioned9=portPartitioned9, portManualForwardingMode9=portManualForwardingMode9)
