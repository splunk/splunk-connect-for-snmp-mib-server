#
# PySNMP MIB module A3COM-HUAWEI-ISDN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-ISDN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:50:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
mlsr, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "mlsr")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, iso, Counter32, Gauge32, IpAddress, ObjectIdentity, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, Counter64, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Counter32", "Gauge32", "IpAddress", "ObjectIdentity", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "Counter64", "Bits", "Unsigned32")
RowStatus, DisplayString, TimeStamp, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TimeStamp", "TextualConvention", "DateAndTime")
hwIsdnMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9))
if mibBuilder.loadTexts: hwIsdnMib.setLastUpdated('200112200000Z')
if mibBuilder.loadTexts: hwIsdnMib.setOrganization('Huawei Technologies Co., Ltd')
hwIsdnMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1))
isdnChannelB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1))
hwChanbIsdnTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1), )
if mibBuilder.loadTexts: hwChanbIsdnTable.setStatus('current')
hwChanbIsdnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnIf"))
if mibBuilder.loadTexts: hwChanbIsdnEntry.setStatus('current')
hwChanbIsdnIf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnIf.setStatus('current')
hwChanbIsdnPermit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("callOut", 1), ("callIn", 2), ("callBidirection", 3))).clone('callBidirection')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnPermit.setStatus('current')
hwChanbIsdnAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnAddr.setStatus('current')
hwChanbIsdnCallerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallerAddr.setStatus('current')
hwChanbIsdnCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nocall", 0), ("call", 1), ("answer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallType.setStatus('current')
hwChanbIsdnInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("speech", 2), ("unrestrDigit", 3), ("unrestrDigit56", 4), ("restrictDigit", 5), ("audio31", 6), ("audio7", 7), ("video", 8), ("swithchedPacket", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnInfoType.setStatus('current')
hwChanbIsdnState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("connecting", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnState.setStatus('current')
hwChanbIsdnCallFreeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallFreeReason.setStatus('current')
hwChanbIsdnCallFreeCode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallFreeCode.setStatus('current')
hwChanbIsdnCallAccept = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallAccept.setStatus('current')
hwChanbIsdnCallReject = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallReject.setStatus('current')
hwChanbIsdnCallSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallSuccess.setStatus('current')
hwChanbIsdnCallFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnCallFailure.setStatus('current')
hwChanbIsdnMaxKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 14), Integer32().clone(2147483647)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnMaxKeepTime.setStatus('current')
hwChanbIsdnLastKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 15), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnLastKeepTime.setStatus('current')
hwChanbIsdnLastCallTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 1, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwChanbIsdnLastCallTime.setStatus('current')
hwChanbTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwChanbTrapEnable.setStatus('current')
isdnQ931 = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2))
hwQ931IsdnControl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 1))
hwQ931CallSetupTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQ931CallSetupTrapEnable.setStatus('current')
hwQ931CallClearTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwQ931CallClearTrapEnable.setStatus('current')
hwQ931IsdnTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2), )
if mibBuilder.loadTexts: hwQ931IsdnTable.setStatus('current')
hwQ931IsdnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnOpIndex"))
if mibBuilder.loadTexts: hwQ931IsdnEntry.setStatus('current')
hwQ931IsdnOpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwQ931IsdnOpIndex.setStatus('current')
hwQ931IsdnLastCalled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQ931IsdnLastCalled.setStatus('current')
hwQ931IsdnLastCalling = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQ931IsdnLastCalling.setStatus('current')
hwQ931IsdnLastCauseDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("normCallClr", 2), ("noRouteToTransNet", 3), ("noRouteToDest", 4), ("switchEquCongest", 5), ("netOutofOrder", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQ931IsdnLastCauseDisc.setStatus('current')
hwQ931IsdnCallDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQ931IsdnCallDirection.setStatus('current')
hwQ931IsdnCallTimeOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQ931IsdnCallTimeOpen.setStatus('current')
hwQ931IsdnCallTimeClose = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 2, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwQ931IsdnCallTimeClose.setStatus('current')
hwIsdnLapd = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3))
hwLapdIsdnTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 1), )
if mibBuilder.loadTexts: hwLapdIsdnTable.setStatus('current')
hwLapdIsdnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-ISDN-MIB", "hwLapdIsdnIf"))
if mibBuilder.loadTexts: hwLapdIsdnEntry.setStatus('current')
hwLapdIsdnIf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLapdIsdnIf.setStatus('current')
hwLapdIsdnProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("dss1", 1), ("qsig", 2), ("etsi", 3), ("ess5", 4), ("ansi", 5), ("ni2", 6), ("ntt", 7), ("att", 8), ("ni", 9))).clone('dss1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLapdIsdnProtocol.setStatus('current')
hwLapdIsdnIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userSide", 1), ("networkSide", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLapdIsdnIfMode.setStatus('current')
hwLapdIsdnLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("l1Active", 2), ("l2Active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLapdIsdnLinkStatus.setStatus('current')
hwLapdIsdnControl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 2))
hwLapdStatusTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLapdStatusTrapEnable.setStatus('current')
hwIsdnMibTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 2))
hwChanbIsdnCall = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 2, 1)).setObjects(("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnIf"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnAddr"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnCallType"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnCallerAddr"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnInfoType"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnLastKeepTime"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnCallFreeReason"), ("A3COM-HUAWEI-ISDN-MIB", "hwChanbIsdnCallFreeCode"))
if mibBuilder.loadTexts: hwChanbIsdnCall.setStatus('current')
hwQ931IsdnCallSetup = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 2, 2)).setObjects(("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnOpIndex"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnLastCalled"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnLastCalling"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnCallDirection"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnCallTimeOpen"))
if mibBuilder.loadTexts: hwQ931IsdnCallSetup.setStatus('current')
hwQ931IsdnCallClear = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 2, 3)).setObjects(("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnOpIndex"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnLastCalled"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnLastCalling"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnLastCauseDisc"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnCallDirection"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnCallTimeOpen"), ("A3COM-HUAWEI-ISDN-MIB", "hwQ931IsdnCallTimeClose"))
if mibBuilder.loadTexts: hwQ931IsdnCallClear.setStatus('current')
hwLapdIsdnStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 33, 9, 2, 4)).setObjects(("A3COM-HUAWEI-ISDN-MIB", "hwLapdIsdnIf"), ("A3COM-HUAWEI-ISDN-MIB", "hwLapdIsdnLinkStatus"))
if mibBuilder.loadTexts: hwLapdIsdnStatusChange.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-ISDN-MIB", hwChanbIsdnCallSuccess=hwChanbIsdnCallSuccess, hwLapdIsdnEntry=hwLapdIsdnEntry, hwLapdIsdnStatusChange=hwLapdIsdnStatusChange, hwQ931IsdnControl=hwQ931IsdnControl, hwChanbIsdnCallType=hwChanbIsdnCallType, hwQ931IsdnLastCauseDisc=hwQ931IsdnLastCauseDisc, hwQ931IsdnTable=hwQ931IsdnTable, hwChanbIsdnPermit=hwChanbIsdnPermit, PYSNMP_MODULE_ID=hwIsdnMib, hwChanbIsdnCallReject=hwChanbIsdnCallReject, hwChanbIsdnEntry=hwChanbIsdnEntry, hwQ931IsdnLastCalled=hwQ931IsdnLastCalled, hwQ931IsdnCallTimeClose=hwQ931IsdnCallTimeClose, hwLapdIsdnTable=hwLapdIsdnTable, hwLapdStatusTrapEnable=hwLapdStatusTrapEnable, hwLapdIsdnIf=hwLapdIsdnIf, hwQ931IsdnCallSetup=hwQ931IsdnCallSetup, hwChanbIsdnCallAccept=hwChanbIsdnCallAccept, hwQ931IsdnCallTimeOpen=hwQ931IsdnCallTimeOpen, hwChanbIsdnTable=hwChanbIsdnTable, hwChanbIsdnLastKeepTime=hwChanbIsdnLastKeepTime, hwLapdIsdnIfMode=hwLapdIsdnIfMode, hwIsdnMibObjects=hwIsdnMibObjects, isdnQ931=isdnQ931, hwQ931IsdnCallDirection=hwQ931IsdnCallDirection, hwChanbIsdnIf=hwChanbIsdnIf, hwQ931IsdnOpIndex=hwQ931IsdnOpIndex, hwChanbTrapEnable=hwChanbTrapEnable, hwQ931CallSetupTrapEnable=hwQ931CallSetupTrapEnable, hwIsdnLapd=hwIsdnLapd, hwLapdIsdnControl=hwLapdIsdnControl, hwIsdnMib=hwIsdnMib, hwChanbIsdnCall=hwChanbIsdnCall, hwChanbIsdnInfoType=hwChanbIsdnInfoType, hwQ931IsdnEntry=hwQ931IsdnEntry, hwQ931IsdnLastCalling=hwQ931IsdnLastCalling, hwChanbIsdnCallFreeCode=hwChanbIsdnCallFreeCode, hwLapdIsdnLinkStatus=hwLapdIsdnLinkStatus, hwQ931IsdnCallClear=hwQ931IsdnCallClear, hwChanbIsdnAddr=hwChanbIsdnAddr, hwChanbIsdnCallFreeReason=hwChanbIsdnCallFreeReason, hwChanbIsdnCallFailure=hwChanbIsdnCallFailure, hwLapdIsdnProtocol=hwLapdIsdnProtocol, hwChanbIsdnState=hwChanbIsdnState, hwChanbIsdnLastCallTime=hwChanbIsdnLastCallTime, hwQ931CallClearTrapEnable=hwQ931CallClearTrapEnable, hwIsdnMibTraps=hwIsdnMibTraps, isdnChannelB=isdnChannelB, hwChanbIsdnCallerAddr=hwChanbIsdnCallerAddr, hwChanbIsdnMaxKeepTime=hwChanbIsdnMaxKeepTime)
