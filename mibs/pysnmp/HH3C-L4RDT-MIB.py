#
# PySNMP MIB module HH3C-L4RDT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-L4RDT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:14:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Integer32, ObjectIdentity, iso, Unsigned32, Counter64, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Gauge32, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "ObjectIdentity", "iso", "Unsigned32", "Counter64", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Gauge32", "ModuleIdentity", "NotificationType")
DisplayString, MacAddress, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "RowStatus", "TruthValue")
hh3cL4Redirect = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 10))
if mibBuilder.loadTexts: hh3cL4Redirect.setLastUpdated('200409210000Z')
if mibBuilder.loadTexts: hh3cL4Redirect.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cL4RedirectCacheTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1), )
if mibBuilder.loadTexts: hh3cL4RedirectCacheTable.setStatus('current')
hh3cL4RedirectCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1), ).setIndexNames((0, "HH3C-L4RDT-MIB", "hh3cL4RedirectCacheIpAddress"))
if mibBuilder.loadTexts: hh3cL4RedirectCacheEntry.setStatus('current')
hh3cL4RedirectCacheIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: hh3cL4RedirectCacheIpAddress.setStatus('current')
hh3cL4RedirectCacheRedirectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabledNotRedirecting", 1), ("enabledNoHealthChecker", 2), ("enabledHealthChecking", 3), ("enabledHealthCheckOKNotRedirecting", 4), ("enabledHealthCheckFailed", 5), ("enabledRedirecting", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cL4RedirectCacheRedirectionStatus.setStatus('current')
hh3cL4RedirectCachePort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectCachePort.setStatus('current')
hh3cL4RedirectCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectCacheRowStatus.setStatus('current')
hh3cL4RedirectCacheMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectCacheMacAddress.setStatus('current')
hh3cL4RedirectCacheVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectCacheVlan.setStatus('current')
hh3cL4RedirectCacheTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectCacheTcpPort.setStatus('current')
hh3cL4RedirectIpExclusionTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 10, 2), )
if mibBuilder.loadTexts: hh3cL4RedirectIpExclusionTable.setStatus('current')
hh3cL4RedirectIpExclusionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 10, 2, 1), ).setIndexNames((0, "HH3C-L4RDT-MIB", "hh3cL4RedirectIpExclusionIpAddress"))
if mibBuilder.loadTexts: hh3cL4RedirectIpExclusionEntry.setStatus('current')
hh3cL4RedirectIpExclusionIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hh3cL4RedirectIpExclusionIpAddress.setStatus('current')
hh3cL4RedirectIpExclusionMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectIpExclusionMaskLen.setStatus('current')
hh3cL4RedirectIpExclusionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectIpExclusionRowStatus.setStatus('current')
hh3cL4RedirectVlanTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 10, 3), )
if mibBuilder.loadTexts: hh3cL4RedirectVlanTable.setStatus('current')
hh3cL4RedirectVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 10, 3, 1), ).setIndexNames((0, "HH3C-L4RDT-MIB", "hh3cL4RedirectVlanID"))
if mibBuilder.loadTexts: hh3cL4RedirectVlanEntry.setStatus('current')
hh3cL4RedirectVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cL4RedirectVlanID.setStatus('current')
hh3cL4RedirectVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 10, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cL4RedirectVlanRowStatus.setStatus('current')
hh3cL4RedirectInformationString = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cL4RedirectInformationString.setStatus('current')
hh3cL4RedirectFreeCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 10, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cL4RedirectFreeCacheEntries.setStatus('current')
hh3cL4RedirectFreeIpExclusionEntries = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 10, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cL4RedirectFreeIpExclusionEntries.setStatus('current')
hh3cL4RedirectFreeVlanEntries = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 10, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cL4RedirectFreeVlanEntries.setStatus('current')
mibBuilder.exportSymbols("HH3C-L4RDT-MIB", hh3cL4RedirectCachePort=hh3cL4RedirectCachePort, hh3cL4Redirect=hh3cL4Redirect, hh3cL4RedirectCacheEntry=hh3cL4RedirectCacheEntry, hh3cL4RedirectCacheIpAddress=hh3cL4RedirectCacheIpAddress, hh3cL4RedirectFreeIpExclusionEntries=hh3cL4RedirectFreeIpExclusionEntries, hh3cL4RedirectIpExclusionIpAddress=hh3cL4RedirectIpExclusionIpAddress, hh3cL4RedirectIpExclusionRowStatus=hh3cL4RedirectIpExclusionRowStatus, hh3cL4RedirectFreeVlanEntries=hh3cL4RedirectFreeVlanEntries, hh3cL4RedirectCacheRowStatus=hh3cL4RedirectCacheRowStatus, hh3cL4RedirectFreeCacheEntries=hh3cL4RedirectFreeCacheEntries, hh3cL4RedirectIpExclusionEntry=hh3cL4RedirectIpExclusionEntry, hh3cL4RedirectIpExclusionTable=hh3cL4RedirectIpExclusionTable, hh3cL4RedirectInformationString=hh3cL4RedirectInformationString, hh3cL4RedirectIpExclusionMaskLen=hh3cL4RedirectIpExclusionMaskLen, hh3cL4RedirectVlanEntry=hh3cL4RedirectVlanEntry, hh3cL4RedirectCacheTable=hh3cL4RedirectCacheTable, hh3cL4RedirectCacheRedirectionStatus=hh3cL4RedirectCacheRedirectionStatus, hh3cL4RedirectVlanTable=hh3cL4RedirectVlanTable, PYSNMP_MODULE_ID=hh3cL4Redirect, hh3cL4RedirectCacheTcpPort=hh3cL4RedirectCacheTcpPort, hh3cL4RedirectCacheMacAddress=hh3cL4RedirectCacheMacAddress, hh3cL4RedirectCacheVlan=hh3cL4RedirectCacheVlan, hh3cL4RedirectVlanRowStatus=hh3cL4RedirectVlanRowStatus, hh3cL4RedirectVlanID=hh3cL4RedirectVlanID)
