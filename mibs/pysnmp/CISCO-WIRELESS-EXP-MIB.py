#
# PySNMP MIB module CISCO-WIRELESS-EXP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WIRELESS-EXP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:05:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, TimeTicks, Bits, NotificationType, Counter32, Integer32, Gauge32, iso, MibIdentifier, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "TimeTicks", "Bits", "NotificationType", "Counter32", "Integer32", "Gauge32", "iso", "MibIdentifier", "Counter64", "ModuleIdentity")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
ciscoWirelessExpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 52))
ciscoWirelessExpMIB.setRevisions(('2005-12-27 10:03', '1999-05-13 20:10',))
if mibBuilder.loadTexts: ciscoWirelessExpMIB.setLastUpdated('200512271003Z')
if mibBuilder.loadTexts: ciscoWirelessExpMIB.setOrganization('Cisco Systems Inc.')
cwrRadioExpMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 1))
cwrRadioFreqEntityGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1))
cwrRadioImageGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2))
cwrRadioLedGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3))
cwrRadioDuplexorGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4))
cwrRfEntityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1), )
if mibBuilder.loadTexts: cwrRfEntityTable.setStatus('current')
cwrRfEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-EXP-MIB", "cwrRfEntityIndex"))
if mibBuilder.loadTexts: cwrRfEntityEntry.setStatus('current')
cwrRfEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cwrRfEntityIndex.setStatus('current')
cwrRfSwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfSwRevision.setStatus('current')
cwrRfAssemblyPartNumberClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfAssemblyPartNumberClass.setStatus('current')
cwrRfAssemblyPartNumberBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfAssemblyPartNumberBase.setStatus('current')
cwrRfAssemblyPartNumberVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfAssemblyPartNumberVersion.setStatus('current')
cwrRfBoardPartNumberClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfBoardPartNumberClass.setStatus('current')
cwrRfBoardPartNumberBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfBoardPartNumberBase.setStatus('current')
cwrRfBoardPartNumberVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfBoardPartNumberVersion.setStatus('current')
cwrRfBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfBoardRevision.setStatus('current')
cwrRfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfSerialNumber.setStatus('current')
cwrRfManfDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfManfDate.setStatus('current')
cwrRfVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfVendorId.setStatus('current')
cwrRfDuplexorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrRfDuplexorIndex.setStatus('current')
cwrIntFreqEntityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2), )
if mibBuilder.loadTexts: cwrIntFreqEntityTable.setStatus('current')
cwrIntFreqEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwrIntFreqEntityEntry.setStatus('current')
cwrIfAssemblyPartNumberClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfAssemblyPartNumberClass.setStatus('current')
cwrIfAssemblyPartNumberBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfAssemblyPartNumberBase.setStatus('current')
cwrIfAssemblyPartNumberVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfAssemblyPartNumberVersion.setStatus('current')
cwrIfBoardPartNumberClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfBoardPartNumberClass.setStatus('current')
cwrIfBoardPartNumberBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfBoardPartNumberBase.setStatus('current')
cwrIfBoardPartNumberVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfBoardPartNumberVersion.setStatus('current')
cwrIfBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfBoardRevision.setStatus('current')
cwrIfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfSerialNumber.setStatus('current')
cwrIfManfDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfManfDate.setStatus('current')
cwrIfVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfVendorId.setStatus('current')
cwrIfSwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrIfSwRevision.setStatus('current')
cwrImageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1), )
if mibBuilder.loadTexts: cwrImageTable.setStatus('current')
cwrImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-WIRELESS-EXP-MIB", "cwrImageIndex"))
if mibBuilder.loadTexts: cwrImageEntry.setStatus('current')
cwrImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cwrImageIndex.setStatus('current')
cwrImageNameUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrImageNameUrl.setStatus('current')
cwrImageState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("imageInvalid", 1), ("imageValid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageState.setStatus('current')
cwrImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageSize.setStatus('current')
cwrImageChipClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageChipClass.setStatus('current')
cwrImageChipType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageChipType.setStatus('current')
cwrImageCapability1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageCapability1.setStatus('current')
cwrImageCapability2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageCapability2.setStatus('current')
cwrImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageVersion.setStatus('current')
cwrImageTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrImageTag.setStatus('current')
cwrImageOp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("nop", 0), ("add", 1), ("delete", 2), ("move", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrImageOp.setStatus('current')
cwrLedTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1), )
if mibBuilder.loadTexts: cwrLedTable.setStatus('current')
cwrLedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WIRELESS-EXP-MIB", "cwrLedIndex"))
if mibBuilder.loadTexts: cwrLedEntry.setStatus('current')
cwrLedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: cwrLedIndex.setStatus('current')
cwrLedName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrLedName.setStatus('current')
cwrLedVerticalPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrLedVerticalPosition.setStatus('current')
cwrLedHorizontalPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrLedHorizontalPosition.setStatus('current')
cwrLedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("automatic", 1), ("latched", 2), ("forceOff", 3), ("forceSolidGreen", 4), ("forceSolidYellow", 5), ("forceBlinkGreen", 6), ("forceBlinkYellow", 7), ("forceBlinkBoth", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrLedMode.setStatus('current')
cwrLedCurrentColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("blinkGreen", 3), ("blinkYellow", 4), ("blinkGreenYellow", 5), ("off", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwrLedCurrentColor.setStatus('current')
cwrDuplexorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1), )
if mibBuilder.loadTexts: cwrDuplexorTable.setStatus('current')
cwrDuplexorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-EXP-MIB", "cwrDuplexorIndex"))
if mibBuilder.loadTexts: cwrDuplexorEntry.setStatus('current')
cwrDuplexorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cwrDuplexorIndex.setStatus('current')
cwrDuplexorCiscoPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorCiscoPartNumber.setStatus('current')
cwrDuplexorLoPassbandRange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorLoPassbandRange.setStatus('current')
cwrDuplexorHiPassbandRange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorHiPassbandRange.setStatus('current')
cwrDuplexorReceivePassband = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loPassband", 1), ("hiPassband", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorReceivePassband.setStatus('current')
cwrDuplexorCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorCLEICode.setStatus('current')
cwrDuplexorVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorVendorName.setStatus('current')
cwrDuplexorSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 52, 1, 4, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwrDuplexorSerialNumber.setStatus('current')
cwrRadioExpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 2))
cwrRadioExpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 1))
cwrRadioExpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 2))
cwrRadioExpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 1, 1)).setObjects(("CISCO-WIRELESS-EXP-MIB", "cwrComplianceRadioRFGroup"), ("CISCO-WIRELESS-EXP-MIB", "cwrComplianceRadioImageGroup"), ("CISCO-WIRELESS-EXP-MIB", "cwrComplianceRadioLEDGroup"), ("CISCO-WIRELESS-EXP-MIB", "cwrComplianceRadioDuplexorGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwrRadioExpCompliance = cwrRadioExpCompliance.setStatus('current')
cwrComplianceRadioRFGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 2, 1)).setObjects(("CISCO-WIRELESS-EXP-MIB", "cwrRfSwRevision"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfAssemblyPartNumberClass"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfAssemblyPartNumberBase"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfAssemblyPartNumberVersion"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfBoardPartNumberClass"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfBoardPartNumberBase"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfBoardPartNumberVersion"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfBoardRevision"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfSerialNumber"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfManfDate"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfVendorId"), ("CISCO-WIRELESS-EXP-MIB", "cwrRfDuplexorIndex"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfAssemblyPartNumberClass"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfAssemblyPartNumberBase"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfAssemblyPartNumberVersion"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfBoardPartNumberClass"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfBoardPartNumberBase"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfBoardPartNumberVersion"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfBoardRevision"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfSerialNumber"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfManfDate"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfVendorId"), ("CISCO-WIRELESS-EXP-MIB", "cwrIfSwRevision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwrComplianceRadioRFGroup = cwrComplianceRadioRFGroup.setStatus('current')
cwrComplianceRadioImageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 2, 2)).setObjects(("CISCO-WIRELESS-EXP-MIB", "cwrImageNameUrl"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageState"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageSize"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageChipType"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageChipClass"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageCapability1"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageCapability2"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageVersion"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageTag"), ("CISCO-WIRELESS-EXP-MIB", "cwrImageOp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwrComplianceRadioImageGroup = cwrComplianceRadioImageGroup.setStatus('current')
cwrComplianceRadioLEDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 2, 3)).setObjects(("CISCO-WIRELESS-EXP-MIB", "cwrLedName"), ("CISCO-WIRELESS-EXP-MIB", "cwrLedVerticalPosition"), ("CISCO-WIRELESS-EXP-MIB", "cwrLedHorizontalPosition"), ("CISCO-WIRELESS-EXP-MIB", "cwrLedMode"), ("CISCO-WIRELESS-EXP-MIB", "cwrLedCurrentColor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwrComplianceRadioLEDGroup = cwrComplianceRadioLEDGroup.setStatus('current')
cwrComplianceRadioDuplexorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 52, 2, 2, 4)).setObjects(("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorCiscoPartNumber"), ("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorLoPassbandRange"), ("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorHiPassbandRange"), ("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorReceivePassband"), ("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorCLEICode"), ("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorVendorName"), ("CISCO-WIRELESS-EXP-MIB", "cwrDuplexorSerialNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwrComplianceRadioDuplexorGroup = cwrComplianceRadioDuplexorGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WIRELESS-EXP-MIB", cwrIntFreqEntityTable=cwrIntFreqEntityTable, cwrRadioImageGroup=cwrRadioImageGroup, cwrImageEntry=cwrImageEntry, cwrImageSize=cwrImageSize, cwrLedHorizontalPosition=cwrLedHorizontalPosition, cwrRadioExpCompliance=cwrRadioExpCompliance, cwrComplianceRadioDuplexorGroup=cwrComplianceRadioDuplexorGroup, cwrRadioDuplexorGroup=cwrRadioDuplexorGroup, ciscoWirelessExpMIB=ciscoWirelessExpMIB, cwrRfSerialNumber=cwrRfSerialNumber, cwrLedName=cwrLedName, cwrRfVendorId=cwrRfVendorId, cwrRfBoardPartNumberBase=cwrRfBoardPartNumberBase, cwrRfBoardPartNumberVersion=cwrRfBoardPartNumberVersion, cwrImageOp=cwrImageOp, cwrRfAssemblyPartNumberVersion=cwrRfAssemblyPartNumberVersion, cwrRadioExpCompliances=cwrRadioExpCompliances, cwrImageVersion=cwrImageVersion, cwrDuplexorTable=cwrDuplexorTable, cwrIfAssemblyPartNumberVersion=cwrIfAssemblyPartNumberVersion, cwrRadioFreqEntityGroup=cwrRadioFreqEntityGroup, cwrImageIndex=cwrImageIndex, cwrRfSwRevision=cwrRfSwRevision, cwrComplianceRadioLEDGroup=cwrComplianceRadioLEDGroup, cwrIfSwRevision=cwrIfSwRevision, cwrDuplexorCLEICode=cwrDuplexorCLEICode, cwrRfEntityIndex=cwrRfEntityIndex, cwrImageState=cwrImageState, cwrRadioExpGroups=cwrRadioExpGroups, cwrRadioExpMibObjects=cwrRadioExpMibObjects, cwrRadioLedGroup=cwrRadioLedGroup, cwrIfAssemblyPartNumberBase=cwrIfAssemblyPartNumberBase, cwrDuplexorEntry=cwrDuplexorEntry, cwrDuplexorHiPassbandRange=cwrDuplexorHiPassbandRange, cwrDuplexorSerialNumber=cwrDuplexorSerialNumber, cwrDuplexorReceivePassband=cwrDuplexorReceivePassband, cwrImageChipClass=cwrImageChipClass, cwrDuplexorIndex=cwrDuplexorIndex, cwrImageTag=cwrImageTag, cwrComplianceRadioImageGroup=cwrComplianceRadioImageGroup, cwrLedEntry=cwrLedEntry, cwrRfEntityEntry=cwrRfEntityEntry, cwrLedTable=cwrLedTable, cwrRfManfDate=cwrRfManfDate, cwrRfEntityTable=cwrRfEntityTable, cwrDuplexorCiscoPartNumber=cwrDuplexorCiscoPartNumber, cwrLedCurrentColor=cwrLedCurrentColor, cwrRfBoardRevision=cwrRfBoardRevision, cwrRfAssemblyPartNumberClass=cwrRfAssemblyPartNumberClass, cwrRfDuplexorIndex=cwrRfDuplexorIndex, cwrIfBoardPartNumberBase=cwrIfBoardPartNumberBase, cwrIfBoardRevision=cwrIfBoardRevision, cwrIfManfDate=cwrIfManfDate, cwrIfBoardPartNumberClass=cwrIfBoardPartNumberClass, cwrIfBoardPartNumberVersion=cwrIfBoardPartNumberVersion, cwrImageCapability2=cwrImageCapability2, cwrLedVerticalPosition=cwrLedVerticalPosition, cwrRfAssemblyPartNumberBase=cwrRfAssemblyPartNumberBase, cwrDuplexorLoPassbandRange=cwrDuplexorLoPassbandRange, cwrIfVendorId=cwrIfVendorId, cwrDuplexorVendorName=cwrDuplexorVendorName, cwrImageTable=cwrImageTable, cwrRfBoardPartNumberClass=cwrRfBoardPartNumberClass, cwrComplianceRadioRFGroup=cwrComplianceRadioRFGroup, cwrIfAssemblyPartNumberClass=cwrIfAssemblyPartNumberClass, cwrIfSerialNumber=cwrIfSerialNumber, cwrIntFreqEntityEntry=cwrIntFreqEntityEntry, cwrRadioExpConformance=cwrRadioExpConformance, cwrLedIndex=cwrLedIndex, PYSNMP_MODULE_ID=ciscoWirelessExpMIB, cwrLedMode=cwrLedMode, cwrImageNameUrl=cwrImageNameUrl, cwrImageChipType=cwrImageChipType, cwrImageCapability1=cwrImageCapability1)
