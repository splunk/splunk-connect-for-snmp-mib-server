#
# PySNMP MIB module TIMETRA-SAS-PORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-SAS-PORT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:14:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
pethPsePortDetectionStatus, pethPsePortPowerClassifications, pethPsePortIndex, pethPsePortEntry = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethPsePortDetectionStatus", "pethPsePortPowerClassifications", "pethPsePortIndex", "pethPsePortEntry")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, MibIdentifier, ObjectIdentity, IpAddress, ModuleIdentity, NotificationType, Counter32, Unsigned32, Integer32, iso, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "MibIdentifier", "ObjectIdentity", "IpAddress", "ModuleIdentity", "NotificationType", "Counter32", "Unsigned32", "Integer32", "iso", "TimeTicks", "Gauge32")
TimeStamp, RowStatus, TruthValue, TimeInterval, DateAndTime, RowPointer, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TruthValue", "TimeInterval", "DateAndTime", "RowPointer", "MacAddress", "DisplayString", "TextualConvention")
tmnxHwObjs, tmnxHwConformance, TmnxPortAdminStatus, tmnxChassisNotifyChassisId, tmnxHwNotification, TmnxMDAChanType, TmnxAlarmState, tmnxChassisIndex = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "tmnxHwObjs", "tmnxHwConformance", "TmnxPortAdminStatus", "tmnxChassisNotifyChassisId", "tmnxHwNotification", "TmnxMDAChanType", "TmnxAlarmState", "tmnxChassisIndex")
timetraSRMIBModules, = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "timetraSRMIBModules")
tmnxDS1Entry, tmnxPortEtherEntry, tmnxDS1PortEntry, tmnxPortNotifyPortId, tmnxPortPortID, tmnxPortEntry = mibBuilder.importSymbols("TIMETRA-PORT-MIB", "tmnxDS1Entry", "tmnxPortEtherEntry", "tmnxDS1PortEntry", "tmnxPortNotifyPortId", "tmnxPortPortID", "tmnxPortEntry")
timetraSASModules, timetraSASNotifyPrefix, timetraSASConfs, timetraSASObjs = mibBuilder.importSymbols("TIMETRA-SAS-GLOBAL-MIB", "timetraSASModules", "timetraSASNotifyPrefix", "timetraSASConfs", "timetraSASObjs")
TFCName, TPortSchedulerCIR, TPortSchedulerPIR, TNamedItemOrEmpty, TQueueId, TmnxServId, TmnxOperState, TItemDescription, TNetworkIngressMeterId, TmnxPortID, ServObjDesc, TmnxActionType, TItemLongDescription, TNamedItem, TmnxEncapVal = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TFCName", "TPortSchedulerCIR", "TPortSchedulerPIR", "TNamedItemOrEmpty", "TQueueId", "TmnxServId", "TmnxOperState", "TItemDescription", "TNetworkIngressMeterId", "TmnxPortID", "ServObjDesc", "TmnxActionType", "TItemLongDescription", "TNamedItem", "TmnxEncapVal")
tmnxSASPortMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 6, 2, 1, 1, 6))
tmnxSASPortMIBModule.setRevisions(('1908-01-09 00:00',))
if mibBuilder.loadTexts: tmnxSASPortMIBModule.setLastUpdated('0701010000Z')
if mibBuilder.loadTexts: tmnxSASPortMIBModule.setOrganization('Alcatel')
tmnxSASPortObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2))
tmnxSASPortNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 3))
tmnxSASPortStatsObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 4))
tmnxSASPortConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2))
portShgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6), )
if mibBuilder.loadTexts: portShgInfoTable.setStatus('current')
portShgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6, 1), ).setIndexNames((1, "TIMETRA-SAS-PORT-MIB", "portShgName"))
if mibBuilder.loadTexts: portShgInfoEntry.setStatus('current')
portShgName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6, 1, 1), TNamedItem())
if mibBuilder.loadTexts: portShgName.setStatus('current')
portShgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portShgRowStatus.setStatus('current')
portShgInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portShgInstanceId.setStatus('current')
portShgDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6, 1, 4), ServObjDesc()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portShgDescription.setStatus('current')
portShgLastMgmtChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 6, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portShgLastMgmtChange.setStatus('current')
sasTmnxPortExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2), )
if mibBuilder.loadTexts: sasTmnxPortExtnTable.setStatus('current')
sasTmnxPortExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1), )
tmnxPortEntry.registerAugmentions(("TIMETRA-SAS-PORT-MIB", "sasTmnxPortExtnEntry"))
sasTmnxPortExtnEntry.setIndexNames(*tmnxPortEntry.getIndexNames())
if mibBuilder.loadTexts: sasTmnxPortExtnEntry.setStatus('current')
tmnxPortUplinkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortUplinkMode.setStatus('current')
tmnxPortAccessEgressQoSPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortAccessEgressQoSPolicyId.setStatus('current')
tmnxPortNetworkQoSPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortNetworkQoSPolicyId.setStatus('current')
tmnxPortShgName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortShgName.setStatus('current')
tmnxPortUseDei = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortUseDei.setStatus('current')
tmnxPortOperGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortOperGrpName.setStatus('current')
tmnxPortMonitorOperGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 2, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortMonitorOperGrpName.setStatus('current')
tmnxSASPortNetIngressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3), )
if mibBuilder.loadTexts: tmnxSASPortNetIngressStatsTable.setStatus('current')
tmnxSASPortNetIngressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-SAS-PORT-MIB", "tmnxSASPortNetIngressMeterIndex"))
if mibBuilder.loadTexts: tmnxSASPortNetIngressStatsEntry.setStatus('current')
tmnxSASPortNetIngressMeterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3, 1, 1), TNetworkIngressMeterId())
if mibBuilder.loadTexts: tmnxSASPortNetIngressMeterIndex.setStatus('current')
tmnxSASPortNetIngressFwdInProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxSASPortNetIngressFwdInProfPkts.setStatus('current')
tmnxSASPortNetIngressFwdOutProfPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxSASPortNetIngressFwdOutProfPkts.setStatus('current')
tmnxSASPortNetIngressFwdInProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxSASPortNetIngressFwdInProfOcts.setStatus('current')
tmnxSASPortNetIngressFwdOutProfOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxSASPortNetIngressFwdOutProfOcts.setStatus('current')
sasTmnxPortEtherExtnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4), )
if mibBuilder.loadTexts: sasTmnxPortEtherExtnTable.setStatus('current')
sasTmnxPortEtherExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1), )
tmnxPortEtherEntry.registerAugmentions(("TIMETRA-SAS-PORT-MIB", "sasTmnxPortEtherExtnEntry"))
sasTmnxPortEtherExtnEntry.setIndexNames(*tmnxPortEtherEntry.getIndexNames())
if mibBuilder.loadTexts: sasTmnxPortEtherExtnEntry.setStatus('current')
tmnxPortEtherEgressMaxBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(32, 16384), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherEgressMaxBurst.setStatus('current')
tmnxPortStatsQueue1PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue1PktsFwd.setStatus('current')
tmnxPortStatsQueue2PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue2PktsFwd.setStatus('current')
tmnxPortStatsQueue3PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue3PktsFwd.setStatus('current')
tmnxPortStatsQueue4PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue4PktsFwd.setStatus('current')
tmnxPortStatsQueue5PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue5PktsFwd.setStatus('current')
tmnxPortStatsQueue6PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue6PktsFwd.setStatus('current')
tmnxPortStatsQueue7PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue7PktsFwd.setStatus('current')
tmnxPortStatsQueue8PktsFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortStatsQueue8PktsFwd.setStatus('current')
tmnxPortEtherEgrSchedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fc-based", 1), ("sap-based", 2))).clone('fc-based')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherEgrSchedMode.setStatus('current')
tmnxPortEtherLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("none", 0), ("internal", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherLoopback.setStatus('current')
tmnxPortEtherIpMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(512, 9000), ))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherIpMTU.setStatus('current')
tmnxPortEtherClockConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 0), ("automatic", 1), ("manual-master", 2), ("manual-slave", 3))).clone('notApplicable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherClockConfig.setStatus('current')
tmnxPortLoopbckServId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 14), TmnxServId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortLoopbckServId.setStatus('current')
tmnxPortLoopbckSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 15), TmnxPortID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortLoopbckSapPortId.setStatus('current')
tmnxPortLoopbckSapEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 16), TmnxEncapVal()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortLoopbckSapEncapVal.setStatus('current')
tmnxPortLoopbckSrcMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 17), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortLoopbckSrcMacAddr.setStatus('current')
tmnxPortLoopbckDstMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 18), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortLoopbckDstMacAddr.setStatus('current')
tmnxPortAccEgrSapQosMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortAccEgrSapQosMarking.setStatus('current')
tmnxPortLldpTnlNrstBrdgeDstMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortLldpTnlNrstBrdgeDstMac.setStatus('current')
tmnxPortEtherDe1OutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 22), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherDe1OutProfile.setStatus('current')
tmnxPortEtherNwAggRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100000000), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherNwAggRateLimit.setStatus('current')
tmnxPortEtherNwAggRateLimitCir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherNwAggRateLimitCir.setStatus('current')
tmnxPortEtherNwAggRateLimitPir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 10000000), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherNwAggRateLimitPir.setStatus('current')
tmnxPortEtherDcommStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortEtherDcommStatus.setStatus('current')
tmnxPortEtherMulticastIngress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 4, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("l2-mc", 1), ("ip-mc", 2))).clone('l2-mc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxPortEtherMulticastIngress.setStatus('current')
tmnxPortAccessEgressQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7), )
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsTable.setStatus('current')
tmnxPortAccessEgressQueueStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsIndex"))
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsEntry.setStatus('current')
tmnxPortAccessEgressQueueStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7, 1, 1), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsIndex.setStatus('current')
tmnxPortAccessEgressQueueStatsFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsFwdPkts.setStatus('current')
tmnxPortAccessEgressQueueStatsFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsFwdOcts.setStatus('current')
tmnxPortAccessEgressQueueStatsDroPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsDroPkts.setStatus('current')
tmnxPortAccessEgressQueueStatsDroOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortAccessEgressQueueStatsDroOcts.setStatus('current')
tmnxPortNetEgressQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8), )
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsTable.setStatus('current')
tmnxPortNetEgressQueueStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsIndex"))
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsEntry.setStatus('current')
tmnxPortNetEgressQueueStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 1), TQueueId().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsIndex.setStatus('current')
tmnxPortNetEgressQueueStatsFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsFwdPkts.setStatus('current')
tmnxPortNetEgressQueueStatsFwdOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsFwdOcts.setStatus('current')
tmnxPortNetEgressQueueStatsDroPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsDroPkts.setStatus('current')
tmnxPortNetEgressQueueStatsDroOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsDroOcts.setStatus('current')
tmnxPortNetEgressQueueStatsInProfDroPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsInProfDroPkts.setStatus('current')
tmnxPortNetEgressQueueStatsInProfDroOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsInProfDroOcts.setStatus('current')
tmnxPortNetEgressQueueStatsOutProfDroPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsOutProfDroPkts.setStatus('current')
tmnxPortNetEgressQueueStatsOutProfDroOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 8, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxPortNetEgressQueueStatsOutProfDroOcts.setStatus('current')
aluExtTmnxDS1PortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 9), )
if mibBuilder.loadTexts: aluExtTmnxDS1PortTable.setStatus('current')
aluExtTmnxDS1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 9, 1), )
tmnxDS1PortEntry.registerAugmentions(("TIMETRA-SAS-PORT-MIB", "aluExtTmnxDS1PortEntry"))
aluExtTmnxDS1PortEntry.setIndexNames(*tmnxDS1PortEntry.getIndexNames())
if mibBuilder.loadTexts: aluExtTmnxDS1PortEntry.setStatus('current')
aluExtDS1PortLineImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 0), ("impedance75Ohms", 1), ("impedance100Ohms", 2), ("impedance120Ohms", 3))).clone('impedance100Ohms')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDS1PortLineImpedance.setStatus('current')
aluPortAcrClkStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10), )
if mibBuilder.loadTexts: aluPortAcrClkStatsTable.setStatus('current')
aluPortAcrClkStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"))
if mibBuilder.loadTexts: aluPortAcrClkStatsEntry.setStatus('current')
aluLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluLastUpdateTime.setStatus('current')
aluTotalMinutesIn24Hour = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluTotalMinutesIn24Hour.setStatus('current')
aluCurrent24HourFreqOffsetMeanPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent24HourFreqOffsetMeanPpb.setStatus('current')
aluCurrent24HourFreqOffsetStdDevPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent24HourFreqOffsetStdDevPpb.setStatus('current')
aluMaxShortIntervalMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluMaxShortIntervalMinutes.setStatus('current')
aluTotalShortIntervalMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluTotalShortIntervalMinutes.setStatus('current')
aluCurrent1MinValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent1MinValidData.setStatus('current')
aluCurrent1MinPhaseErrorMeanPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent1MinPhaseErrorMeanPpb.setStatus('current')
aluCurrent1MinPhaseErrorStdDevNs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent1MinPhaseErrorStdDevNs.setStatus('current')
aluCurrent1MinPhaseErrorMeanNs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent1MinPhaseErrorMeanNs.setStatus('current')
aluCurrent1MinFreqOffsetMeanPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent1MinFreqOffsetMeanPpb.setStatus('current')
aluCurrent1MinFreqOffsetStdDevPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 10, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluCurrent1MinFreqOffsetStdDevPpb.setStatus('current')
aluPortAcrClkStatsShortIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11), )
if mibBuilder.loadTexts: aluPortAcrClkStatsShortIntervalTable.setStatus('current')
aluPortAcrClkStatsShortIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-PORT-MIB", "tmnxPortPortID"), (0, "TIMETRA-SAS-PORT-MIB", "aluIntervalNumber"))
if mibBuilder.loadTexts: aluPortAcrClkStatsShortIntervalEntry.setStatus('current')
aluIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalNumber.setStatus('current')
aluIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalValidData.setStatus('current')
aluIntervalUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalUpdateTime.setStatus('current')
aluIntervalPhaseErrorMeanPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalPhaseErrorMeanPpb.setStatus('current')
aluIntervalPhaseErrorStdDevNs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalPhaseErrorStdDevNs.setStatus('current')
aluIntervalPhaseErrorMeanNs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalPhaseErrorMeanNs.setStatus('current')
aluIntervalFreqOffsetMeanPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalFreqOffsetMeanPpb.setStatus('current')
aluIntervalFreqOffsetStdDevPpb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 11, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluIntervalFreqOffsetStdDevPpb.setStatus('current')
aluExtTmnxDS1Table = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 12), )
if mibBuilder.loadTexts: aluExtTmnxDS1Table.setStatus('current')
aluExtTmnxDS1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 12, 1), )
tmnxDS1Entry.registerAugmentions(("TIMETRA-SAS-PORT-MIB", "aluExtTmnxDS1Entry"))
aluExtTmnxDS1Entry.setIndexNames(*tmnxDS1Entry.getIndexNames())
if mibBuilder.loadTexts: aluExtTmnxDS1Entry.setStatus('current')
aluExtDS1SignalBitsState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 12, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDS1SignalBitsState.setStatus('current')
aluExtPethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 13), )
if mibBuilder.loadTexts: aluExtPethPsePortTable.setStatus('current')
aluExtPethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 13, 1), )
pethPsePortEntry.registerAugmentions(("TIMETRA-SAS-PORT-MIB", "aluExtPethPsePortEntry"))
aluExtPethPsePortEntry.setIndexNames(*pethPsePortEntry.getIndexNames())
if mibBuilder.loadTexts: aluExtPethPsePortEntry.setStatus('current')
aluExtPethPsePortFaultReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 1), ("dcp", 2), ("hicap", 3), ("rlow", 4), ("detok", 5), ("rhigh", 6), ("open", 7), ("dcn", 8), ("tstart", 9), ("icv", 10), ("tcut", 11), ("dis", 12), ("sup", 13), ("pdeny", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtPethPsePortFaultReason.setStatus('current')
aluExtPethPsePortPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("standard", 2), ("plus", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtPethPsePortPowerLevel.setStatus('current')
aluExtPethPsePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("on", 2), ("off", 3))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtPethPsePortOperStatus.setStatus('current')
pethPsePortEventInfo = MibScalar((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 14), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pethPsePortEventInfo.setStatus('current')
tmnxVirtualPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 15), )
if mibBuilder.loadTexts: tmnxVirtualPortTable.setStatus('current')
tmnxVirtualPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 15, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-SAS-PORT-MIB", "tmnxVirtualPortPortID"))
if mibBuilder.loadTexts: tmnxVirtualPortEntry.setStatus('current')
tmnxVirtualPortPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 15, 1, 1), TmnxPortID())
if mibBuilder.loadTexts: tmnxVirtualPortPortID.setStatus('current')
tmnxVirtualPortInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-in-use", 1), ("mirror", 2), ("macswap", 3), ("testhead", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVirtualPortInUse.setStatus('current')
tmnxVirtualPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 2, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("one-gig", 1), ("ten-gig", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxVirtualPortSpeed.setStatus('current')
aluExtPethPsePortStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 2, 3, 1)).setObjects(("POWER-ETHERNET-MIB", "pethPsePortDetectionStatus"), ("POWER-ETHERNET-MIB", "pethPsePortPowerClassifications"), ("TIMETRA-SAS-PORT-MIB", "aluExtPethPsePortFaultReason"), ("TIMETRA-SAS-PORT-MIB", "aluExtPethPsePortOperStatus"), ("TIMETRA-PORT-MIB", "tmnxPortNotifyPortId"))
if mibBuilder.loadTexts: aluExtPethPsePortStatusChange.setStatus('current')
tmnxSASPortCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 1))
tmnxSASPortGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2))
tmnxSASPortV1v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 1)).setObjects(("TIMETRA-SAS-PORT-MIB", "tmnxPortUplinkMode"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQoSPolicyId"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetworkQoSPolicyId"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortShgName"), ("TIMETRA-SAS-PORT-MIB", "portShgRowStatus"), ("TIMETRA-SAS-PORT-MIB", "portShgInstanceId"), ("TIMETRA-SAS-PORT-MIB", "portShgDescription"), ("TIMETRA-SAS-PORT-MIB", "portShgLastMgmtChange"), ("TIMETRA-SAS-PORT-MIB", "tmnxSASPortNetIngressFwdInProfPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxSASPortNetIngressFwdOutProfPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxSASPortNetIngressFwdInProfOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxSASPortNetIngressFwdOutProfOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherEgressMaxBurst"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue1PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue2PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue3PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue4PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue5PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue6PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue7PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortStatsQueue8PktsFwd"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV1v0Group = tmnxSASPortV1v0Group.setStatus('current')
tmnxSASPortV1v1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 2)).setObjects(("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsFwdPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsFwdOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsFwdPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsFwdOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsInProfDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsInProfDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsOutProfDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsOutProfDroOcts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV1v1Group = tmnxSASPortV1v1Group.setStatus('current')
tmnxSASPortV2v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 3)).setObjects(("TIMETRA-SAS-PORT-MIB", "aluExtDS1PortLineImpedance"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherEgrSchedMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV2v0Group = tmnxSASPortV2v0Group.setStatus('current')
tmnxSASPortV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 6)).setObjects(("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherClockConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV3v0Group = tmnxSASPortV3v0Group.setStatus('current')
aluPortAcrClkStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 4)).setObjects(("TIMETRA-SAS-PORT-MIB", "aluLastUpdateTime"), ("TIMETRA-SAS-PORT-MIB", "aluTotalMinutesIn24Hour"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent24HourFreqOffsetMeanPpb"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent24HourFreqOffsetStdDevPpb"), ("TIMETRA-SAS-PORT-MIB", "aluMaxShortIntervalMinutes"), ("TIMETRA-SAS-PORT-MIB", "aluTotalShortIntervalMinutes"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent1MinValidData"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent1MinPhaseErrorMeanPpb"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent1MinPhaseErrorStdDevNs"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent1MinPhaseErrorMeanNs"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent1MinFreqOffsetMeanPpb"), ("TIMETRA-SAS-PORT-MIB", "aluCurrent1MinFreqOffsetStdDevPpb"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalNumber"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalValidData"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalUpdateTime"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalPhaseErrorMeanPpb"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalPhaseErrorStdDevNs"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalPhaseErrorMeanNs"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalFreqOffsetMeanPpb"), ("TIMETRA-SAS-PORT-MIB", "aluIntervalFreqOffsetStdDevPpb"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluPortAcrClkStatsGroup = aluPortAcrClkStatsGroup.setStatus('current')
tmnxSASPortV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 5)).setObjects(("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsFwdPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsFwdOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccessEgressQueueStatsDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsFwdPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsFwdOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsInProfDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsInProfDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsOutProfDroPkts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortNetEgressQueueStatsOutProfDroOcts"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherIpMTU"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherClockConfig"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortLoopbckServId"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortLoopbckSapPortId"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortLoopbckSapEncapVal"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortLoopbckSrcMacAddr"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortLoopbckDstMacAddr"), ("TIMETRA-SAS-PORT-MIB", "tmnxPortAccEgrSapQosMarking"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV4v0Group = tmnxSASPortV4v0Group.setStatus('current')
tmnxSASPortV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 7)).setObjects(("TIMETRA-SAS-PORT-MIB", "tmnxPortLldpTnlNrstBrdgeDstMac"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV5v0Group = tmnxSASPortV5v0Group.setStatus('current')
tmnxSASPortV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 2, 2, 1, 2, 2, 8)).setObjects(("TIMETRA-SAS-PORT-MIB", "tmnxPortEtherNwAggRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxSASPortV6v0Group = tmnxSASPortV6v0Group.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-SAS-PORT-MIB", tmnxPortEtherNwAggRateLimitCir=tmnxPortEtherNwAggRateLimitCir, aluExtPethPsePortTable=aluExtPethPsePortTable, tmnxPortNetEgressQueueStatsDroOcts=tmnxPortNetEgressQueueStatsDroOcts, PYSNMP_MODULE_ID=tmnxSASPortMIBModule, tmnxPortAccessEgressQueueStatsDroPkts=tmnxPortAccessEgressQueueStatsDroPkts, aluExtTmnxDS1Table=aluExtTmnxDS1Table, tmnxPortEtherClockConfig=tmnxPortEtherClockConfig, tmnxSASPortNetIngressFwdInProfOcts=tmnxSASPortNetIngressFwdInProfOcts, sasTmnxPortExtnEntry=sasTmnxPortExtnEntry, tmnxPortNetEgressQueueStatsOutProfDroOcts=tmnxPortNetEgressQueueStatsOutProfDroOcts, aluExtPethPsePortOperStatus=aluExtPethPsePortOperStatus, tmnxSASPortV4v0Group=tmnxSASPortV4v0Group, tmnxPortEtherLoopback=tmnxPortEtherLoopback, tmnxSASPortNetIngressFwdInProfPkts=tmnxSASPortNetIngressFwdInProfPkts, aluMaxShortIntervalMinutes=aluMaxShortIntervalMinutes, aluExtTmnxDS1PortEntry=aluExtTmnxDS1PortEntry, tmnxSASPortConformance=tmnxSASPortConformance, tmnxSASPortNetIngressFwdOutProfPkts=tmnxSASPortNetIngressFwdOutProfPkts, tmnxPortEtherMulticastIngress=tmnxPortEtherMulticastIngress, tmnxSASPortNetIngressStatsTable=tmnxSASPortNetIngressStatsTable, tmnxPortNetworkQoSPolicyId=tmnxPortNetworkQoSPolicyId, tmnxVirtualPortInUse=tmnxVirtualPortInUse, tmnxSASPortNetIngressMeterIndex=tmnxSASPortNetIngressMeterIndex, tmnxPortEtherDe1OutProfile=tmnxPortEtherDe1OutProfile, aluCurrent1MinFreqOffsetMeanPpb=aluCurrent1MinFreqOffsetMeanPpb, aluIntervalUpdateTime=aluIntervalUpdateTime, aluExtTmnxDS1PortTable=aluExtTmnxDS1PortTable, tmnxPortAccessEgressQueueStatsFwdPkts=tmnxPortAccessEgressQueueStatsFwdPkts, tmnxPortAccEgrSapQosMarking=tmnxPortAccEgrSapQosMarking, tmnxSASPortV5v0Group=tmnxSASPortV5v0Group, aluExtPethPsePortStatusChange=aluExtPethPsePortStatusChange, portShgLastMgmtChange=portShgLastMgmtChange, sasTmnxPortEtherExtnEntry=sasTmnxPortEtherExtnEntry, tmnxSASPortV2v0Group=tmnxSASPortV2v0Group, aluIntervalFreqOffsetStdDevPpb=aluIntervalFreqOffsetStdDevPpb, tmnxSASPortV1v0Group=tmnxSASPortV1v0Group, tmnxSASPortV1v1Group=tmnxSASPortV1v1Group, tmnxPortStatsQueue1PktsFwd=tmnxPortStatsQueue1PktsFwd, tmnxPortAccessEgressQueueStatsIndex=tmnxPortAccessEgressQueueStatsIndex, tmnxPortLldpTnlNrstBrdgeDstMac=tmnxPortLldpTnlNrstBrdgeDstMac, aluCurrent24HourFreqOffsetStdDevPpb=aluCurrent24HourFreqOffsetStdDevPpb, aluCurrent1MinValidData=aluCurrent1MinValidData, tmnxPortShgName=tmnxPortShgName, tmnxPortLoopbckSrcMacAddr=tmnxPortLoopbckSrcMacAddr, aluCurrent1MinPhaseErrorMeanNs=aluCurrent1MinPhaseErrorMeanNs, aluIntervalPhaseErrorMeanPpb=aluIntervalPhaseErrorMeanPpb, tmnxPortEtherNwAggRateLimit=tmnxPortEtherNwAggRateLimit, tmnxPortAccessEgressQueueStatsEntry=tmnxPortAccessEgressQueueStatsEntry, aluIntervalNumber=aluIntervalNumber, aluIntervalFreqOffsetMeanPpb=aluIntervalFreqOffsetMeanPpb, tmnxPortNetEgressQueueStatsFwdOcts=tmnxPortNetEgressQueueStatsFwdOcts, portShgInfoEntry=portShgInfoEntry, portShgRowStatus=portShgRowStatus, tmnxSASPortCompliances=tmnxSASPortCompliances, tmnxPortAccessEgressQueueStatsTable=tmnxPortAccessEgressQueueStatsTable, aluCurrent1MinFreqOffsetStdDevPpb=aluCurrent1MinFreqOffsetStdDevPpb, aluIntervalPhaseErrorMeanNs=aluIntervalPhaseErrorMeanNs, aluExtPethPsePortEntry=aluExtPethPsePortEntry, tmnxPortAccessEgressQueueStatsDroOcts=tmnxPortAccessEgressQueueStatsDroOcts, aluExtDS1PortLineImpedance=aluExtDS1PortLineImpedance, aluLastUpdateTime=aluLastUpdateTime, aluExtPethPsePortFaultReason=aluExtPethPsePortFaultReason, tmnxPortLoopbckSapEncapVal=tmnxPortLoopbckSapEncapVal, pethPsePortEventInfo=pethPsePortEventInfo, tmnxSASPortNotificationObjects=tmnxSASPortNotificationObjects, tmnxPortLoopbckDstMacAddr=tmnxPortLoopbckDstMacAddr, tmnxPortUseDei=tmnxPortUseDei, tmnxPortMonitorOperGrpName=tmnxPortMonitorOperGrpName, tmnxPortStatsQueue8PktsFwd=tmnxPortStatsQueue8PktsFwd, tmnxSASPortNetIngressFwdOutProfOcts=tmnxSASPortNetIngressFwdOutProfOcts, tmnxSASPortV3v0Group=tmnxSASPortV3v0Group, tmnxPortOperGrpName=tmnxPortOperGrpName, aluExtDS1SignalBitsState=aluExtDS1SignalBitsState, aluCurrent24HourFreqOffsetMeanPpb=aluCurrent24HourFreqOffsetMeanPpb, portShgName=portShgName, tmnxPortNetEgressQueueStatsDroPkts=tmnxPortNetEgressQueueStatsDroPkts, tmnxPortNetEgressQueueStatsTable=tmnxPortNetEgressQueueStatsTable, tmnxSASPortV6v0Group=tmnxSASPortV6v0Group, tmnxPortNetEgressQueueStatsInProfDroPkts=tmnxPortNetEgressQueueStatsInProfDroPkts, aluPortAcrClkStatsGroup=aluPortAcrClkStatsGroup, aluPortAcrClkStatsShortIntervalTable=aluPortAcrClkStatsShortIntervalTable, tmnxVirtualPortSpeed=tmnxVirtualPortSpeed, portShgInfoTable=portShgInfoTable, aluPortAcrClkStatsTable=aluPortAcrClkStatsTable, tmnxPortStatsQueue7PktsFwd=tmnxPortStatsQueue7PktsFwd, tmnxPortNetEgressQueueStatsEntry=tmnxPortNetEgressQueueStatsEntry, aluIntervalPhaseErrorStdDevNs=aluIntervalPhaseErrorStdDevNs, aluCurrent1MinPhaseErrorStdDevNs=aluCurrent1MinPhaseErrorStdDevNs, tmnxPortAccessEgressQueueStatsFwdOcts=tmnxPortAccessEgressQueueStatsFwdOcts, aluTotalMinutesIn24Hour=aluTotalMinutesIn24Hour, tmnxVirtualPortEntry=tmnxVirtualPortEntry, tmnxPortEtherIpMTU=tmnxPortEtherIpMTU, aluCurrent1MinPhaseErrorMeanPpb=aluCurrent1MinPhaseErrorMeanPpb, tmnxPortEtherDcommStatus=tmnxPortEtherDcommStatus, aluTotalShortIntervalMinutes=aluTotalShortIntervalMinutes, tmnxVirtualPortPortID=tmnxVirtualPortPortID, tmnxPortStatsQueue3PktsFwd=tmnxPortStatsQueue3PktsFwd, aluPortAcrClkStatsEntry=aluPortAcrClkStatsEntry, tmnxVirtualPortTable=tmnxVirtualPortTable, tmnxSASPortStatsObjs=tmnxSASPortStatsObjs, tmnxPortEtherEgressMaxBurst=tmnxPortEtherEgressMaxBurst, tmnxPortStatsQueue2PktsFwd=tmnxPortStatsQueue2PktsFwd, tmnxPortLoopbckServId=tmnxPortLoopbckServId, sasTmnxPortExtnTable=sasTmnxPortExtnTable, tmnxPortAccessEgressQoSPolicyId=tmnxPortAccessEgressQoSPolicyId, tmnxSASPortNetIngressStatsEntry=tmnxSASPortNetIngressStatsEntry, tmnxPortUplinkMode=tmnxPortUplinkMode, tmnxPortEtherNwAggRateLimitPir=tmnxPortEtherNwAggRateLimitPir, aluExtPethPsePortPowerLevel=aluExtPethPsePortPowerLevel, aluPortAcrClkStatsShortIntervalEntry=aluPortAcrClkStatsShortIntervalEntry, tmnxSASPortMIBModule=tmnxSASPortMIBModule, tmnxPortStatsQueue4PktsFwd=tmnxPortStatsQueue4PktsFwd, tmnxSASPortObjs=tmnxSASPortObjs, tmnxPortNetEgressQueueStatsIndex=tmnxPortNetEgressQueueStatsIndex, tmnxPortNetEgressQueueStatsFwdPkts=tmnxPortNetEgressQueueStatsFwdPkts, tmnxPortNetEgressQueueStatsInProfDroOcts=tmnxPortNetEgressQueueStatsInProfDroOcts, tmnxPortEtherEgrSchedMode=tmnxPortEtherEgrSchedMode, tmnxPortNetEgressQueueStatsOutProfDroPkts=tmnxPortNetEgressQueueStatsOutProfDroPkts, portShgInstanceId=portShgInstanceId, portShgDescription=portShgDescription, tmnxPortLoopbckSapPortId=tmnxPortLoopbckSapPortId, aluIntervalValidData=aluIntervalValidData, tmnxPortStatsQueue5PktsFwd=tmnxPortStatsQueue5PktsFwd, aluExtTmnxDS1Entry=aluExtTmnxDS1Entry, tmnxSASPortGroups=tmnxSASPortGroups, tmnxPortStatsQueue6PktsFwd=tmnxPortStatsQueue6PktsFwd, sasTmnxPortEtherExtnTable=sasTmnxPortEtherExtnTable)
