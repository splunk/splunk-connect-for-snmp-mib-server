#
# PySNMP MIB module HH3C-STORAGE-SNAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-STORAGE-SNAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
Hh3cStorageActionType, Hh3cLvIDType, hh3cStorageRef, Hh3cStorageEnableState, Hh3cExtendSelectPolicy, Hh3cStorageOnlineState, Hh3cRaidIDType = mibBuilder.importSymbols("HH3C-STORAGE-REF-MIB", "Hh3cStorageActionType", "Hh3cLvIDType", "hh3cStorageRef", "Hh3cStorageEnableState", "Hh3cExtendSelectPolicy", "Hh3cStorageOnlineState", "Hh3cRaidIDType")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, iso, Bits, IpAddress, TimeTicks, Gauge32, Counter64, Counter32, ObjectIdentity, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "iso", "Bits", "IpAddress", "TimeTicks", "Gauge32", "Counter64", "Counter32", "ObjectIdentity", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
RowStatus, TextualConvention, TruthValue, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString", "DateAndTime")
hh3cStorageSnap = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 10, 2))
if mibBuilder.loadTexts: hh3cStorageSnap.setLastUpdated('200709141452Z')
if mibBuilder.loadTexts: hh3cStorageSnap.setOrganization('H3C Technologies Co., Ltd.')
hh3cSnapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1))
hh3cGlobalSnapSettingsObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 1))
hh3cAddtionalSpaceMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 1, 1), Integer32()).setUnits('TB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cAddtionalSpaceMaxSize.setStatus('current')
hh3cSnapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2), )
if mibBuilder.loadTexts: hh3cSnapConfigTable.setStatus('current')
hh3cSnapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"))
if mibBuilder.loadTexts: hh3cSnapConfigEntry.setStatus('current')
hh3cSnapLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cSnapLvIndex.setStatus('current')
hh3cSnapAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 2), Hh3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapAreaId.setStatus('current')
hh3cSnapAreaAutoExpand = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 3), Hh3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaAutoExpand.setStatus('current')
hh3cSnapAreaThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaThreshold.setStatus('current')
hh3cSnapAreaIncSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaIncSize.setStatus('current')
hh3cSnapAreaMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 6), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaMaxSize.setStatus('current')
hh3cSnapAreaFullDeleteTM = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rotative", 1), ("none", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaFullDeleteTM.setStatus('current')
hh3cSnapAreaNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 8), Hh3cStorageEnableState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaNotify.setStatus('current')
hh3cSnapAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 9), Hh3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapAreaStatus.setStatus('current')
hh3cSnapRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 10), Hh3cRaidIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapRaidUuid.setStatus('current')
hh3cSnapRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 11), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapRaidSize.setStatus('current')
hh3cSnapRaidSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 12), Hh3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapRaidSelectPolicy.setStatus('current')
hh3cSnapAreaTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 13), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapAreaTotalSize.setStatus('current')
hh3cSnapAreaFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 14), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapAreaFreeSize.setStatus('current')
hh3cSnapExtendTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapExtendTimes.setStatus('current')
hh3cSnapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 2, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapRowStatus.setStatus('current')
hh3cSnapExpandTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 3), )
if mibBuilder.loadTexts: hh3cSnapExpandTable.setStatus('current')
hh3cSnapExpandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 3, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cSAExpRaidUuid"))
if mibBuilder.loadTexts: hh3cSnapExpandEntry.setStatus('current')
hh3cSAExpRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 3, 1, 1), Hh3cRaidIDType())
if mibBuilder.loadTexts: hh3cSAExpRaidUuid.setStatus('current')
hh3cSAExpSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 3, 1, 2), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSAExpSize.setStatus('current')
hh3cSAExpRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 3, 1, 3), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSAExpRaidSize.setStatus('current')
hh3cSnapAreaExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSnapAreaExpRowStatus.setStatus('current')
hh3cSnapCopyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 4), )
if mibBuilder.loadTexts: hh3cSnapCopyTable.setStatus('current')
hh3cSnapCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 4, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"))
if mibBuilder.loadTexts: hh3cSnapCopyEntry.setStatus('current')
hh3cSnapCopyLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 4, 1, 1), Hh3cLvIDType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSnapCopyLvIndex.setStatus('current')
hh3cSnapCopyPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapCopyPercentage.setStatus('current')
hh3cSnapCopyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnapCopyStartTime.setStatus('current')
hh3cSnapCopySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSnapCopySwitch.setStatus('current')
hh3cTimeMarkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5), )
if mibBuilder.loadTexts: hh3cTimeMarkConfigTable.setStatus('current')
hh3cTimeMarkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"))
if mibBuilder.loadTexts: hh3cTimeMarkConfigEntry.setStatus('current')
hh3cTimeMarkCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTimeMarkCounts.setStatus('current')
hh3cTimeMarkInitializeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1, 2), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTimeMarkInitializeTime.setStatus('current')
hh3cTimeMarkInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTimeMarkInterval.setStatus('current')
hh3cTimeMarkLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1, 4), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTimeMarkLastTime.setStatus('current')
hh3cTimeMarkTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTimeMarkTotal.setStatus('current')
hh3cTimeMarkSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 5, 1, 6), Hh3cStorageEnableState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimeMarkSwitch.setStatus('current')
hh3cTimeMarkCreateTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 6), )
if mibBuilder.loadTexts: hh3cTimeMarkCreateTable.setStatus('current')
hh3cTimeMarkCreateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 6, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cTimeMarkStamp"))
if mibBuilder.loadTexts: hh3cTimeMarkCreateEntry.setStatus('current')
hh3cTimeMarkStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 6, 1, 1), DateAndTime())
if mibBuilder.loadTexts: hh3cTimeMarkStamp.setStatus('current')
hh3cTimeMarkComment = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 6, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTimeMarkComment.setStatus('current')
hh3cTimeMarkSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 6, 1, 3), Integer32()).setUnits('KB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTimeMarkSize.setStatus('current')
hh3cTimeMarkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimeMarkRowStatus.setStatus('current')
hh3cTimeMarkCopyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 7), )
if mibBuilder.loadTexts: hh3cTimeMarkCopyTable.setStatus('current')
hh3cTimeMarkCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 7, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cTimeMarkStamp"))
if mibBuilder.loadTexts: hh3cTimeMarkCopyEntry.setStatus('current')
hh3cTMCopyDestLvId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 7, 1, 1), Hh3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTMCopyDestLvId.setStatus('current')
hh3cTMCopyPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTMCopyPercentage.setStatus('current')
hh3cTMCopyStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 7, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTMCopyStartTime.setStatus('current')
hh3cTMCopySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTMCopySwitch.setStatus('current')
hh3cTimeMarkRollbackTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 8), )
if mibBuilder.loadTexts: hh3cTimeMarkRollbackTable.setStatus('current')
hh3cTimeMarkRollbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 8, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cTimeMarkStamp"))
if mibBuilder.loadTexts: hh3cTimeMarkRollbackEntry.setStatus('current')
hh3cTMRollbackPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTMRollbackPercentage.setStatus('current')
hh3cTMRollbackStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTMRollbackStartTime.setStatus('current')
hh3cTMRollbackSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 8, 1, 3), Hh3cStorageActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cTMRollbackSwitch.setStatus('current')
hh3cTimeViewTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 9), )
if mibBuilder.loadTexts: hh3cTimeViewTable.setStatus('current')
hh3cTimeViewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 9, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSnapLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cTimeViewStamp"))
if mibBuilder.loadTexts: hh3cTimeViewEntry.setStatus('current')
hh3cTimeViewStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 9, 1, 1), DateAndTime())
if mibBuilder.loadTexts: hh3cTimeViewStamp.setStatus('current')
hh3cTimeViewID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 9, 1, 2), Hh3cLvIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cTimeViewID.setStatus('current')
hh3cTimeViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 9, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimeViewName.setStatus('current')
hh3cTimeViewRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cTimeViewRowStatus.setStatus('current')
hh3cReplicaConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10), )
if mibBuilder.loadTexts: hh3cReplicaConfigTable.setStatus('current')
hh3cReplicaConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cRepLocalLvIndex"))
if mibBuilder.loadTexts: hh3cReplicaConfigEntry.setStatus('current')
hh3cRepLocalLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cRepLocalLvIndex.setStatus('current')
hh3cLvRepLocalWay = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outgoing", 1), ("incoming", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cLvRepLocalWay.setStatus('current')
hh3cRepLocalServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepLocalServerIP.setStatus('current')
hh3cRepLocalServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepLocalServerIPType.setStatus('current')
hh3cRepLocalServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRepLocalServerName.setStatus('current')
hh3cRepLocalServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepLocalServerUsername.setStatus('current')
hh3cRepLocalServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepLocalServerPassword.setStatus('current')
hh3cRepRemoteServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepRemoteServerIP.setStatus('current')
hh3cRepRemoteServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 9), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepRemoteServerIPType.setStatus('current')
hh3cRepRemoteServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRepRemoteServerName.setStatus('current')
hh3cRepRemoteServerUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepRemoteServerUsername.setStatus('current')
hh3cRepRemoteServerPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepRemoteServerPassword.setStatus('current')
hh3cRepRemoteLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 13), Hh3cLvIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRepRemoteLvIndex.setStatus('current')
hh3cReplicaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("adaptive", 1), ("remote", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaMode.setStatus('current')
hh3cReplicaWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 15), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaWatermark.setStatus('current')
hh3cReplicaWatermarkRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaWatermarkRetry.setStatus('current')
hh3cReplicaInitializeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 17), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaInitializeTime.setStatus('current')
hh3cReplicaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 18), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaInterval.setStatus('current')
hh3cReplicaEncrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 19), Hh3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaEncrypt.setStatus('current')
hh3cReplicaCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 20), Hh3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaCompress.setStatus('current')
hh3cReplicaUseExistTM = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 21), Hh3cStorageEnableState().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaUseExistTM.setStatus('current')
hh3cReplicaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("rudp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaProtocol.setStatus('current')
hh3cReplicaScanDiff = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaScanDiff.setStatus('current')
hh3cReplicaStatSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("promte", 1), ("sync", 2), ("scan", 3), ("reversal", 4), ("stop", 5), ("suspend", 6), ("resume", 7), ("none", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaStatSwitch.setStatus('current')
hh3cReplicaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 10, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cReplicaRowStatus.setStatus('current')
hh3cReplicaStateTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11), )
if mibBuilder.loadTexts: hh3cReplicaStateTable.setStatus('current')
hh3cReplicaStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cRepLocalLvIndex"))
if mibBuilder.loadTexts: hh3cReplicaStateEntry.setStatus('current')
hh3cReplicaDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 1), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaDelta.setStatus('current')
hh3cReplicaLastSyncTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaLastSyncTime.setStatus('current')
hh3cReplicaNextSyncTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaNextSyncTime.setStatus('current')
hh3cReplicaSyncTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 4), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaSyncTotalSize.setStatus('current')
hh3cReplicaSyncCurPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaSyncCurPercentage.setStatus('current')
hh3cReplicaSyncPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaSyncPerformance.setStatus('current')
hh3cReplicaRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("suspend", 1), ("idle", 2), ("stop", 3), ("sync", 4), ("scan", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cReplicaRunStatus.setStatus('current')
hh3cCDRConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12), )
if mibBuilder.loadTexts: hh3cCDRConfigTable.setStatus('current')
hh3cCDRConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cCDRLvIndex"))
if mibBuilder.loadTexts: hh3cCDRConfigEntry.setStatus('current')
hh3cCDRLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cCDRLvIndex.setStatus('current')
hh3cCDRID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCDRID.setStatus('current')
hh3cCDRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 3), Hh3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCDRStatus.setStatus('current')
hh3cCDRTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 4), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCDRTotalSize.setStatus('current')
hh3cCDRFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cCDRFreeSize.setStatus('current')
hh3cCDRSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 6), Hh3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCDRSelectPolicy.setStatus('current')
hh3cCDRRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 12, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCDRRowStatus.setStatus('current')
hh3cCDRDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 13), )
if mibBuilder.loadTexts: hh3cCDRDistributeTable.setStatus('current')
hh3cCDRDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 13, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cCDRDistLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cCDRRaidUuid"))
if mibBuilder.loadTexts: hh3cCDRDistributeEntry.setStatus('current')
hh3cCDRDistLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 13, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cCDRDistLvIndex.setStatus('current')
hh3cCDRRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 13, 1, 2), Hh3cRaidIDType())
if mibBuilder.loadTexts: hh3cCDRRaidUuid.setStatus('current')
hh3cCDRRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 13, 1, 3), Integer32()).setUnits('MB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCDRRaidSize.setStatus('current')
hh3cCDRExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 13, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cCDRExtRowStatus.setStatus('current')
hh3cSafeCacheConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14), )
if mibBuilder.loadTexts: hh3cSafeCacheConfigTable.setStatus('current')
hh3cSafeCacheConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSafeCacheLvIndex"))
if mibBuilder.loadTexts: hh3cSafeCacheConfigEntry.setStatus('current')
hh3cSafeCacheLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cSafeCacheLvIndex.setStatus('current')
hh3cSafeCacheID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSafeCacheID.setStatus('current')
hh3cSafeCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 3), Hh3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSafeCacheStatus.setStatus('current')
hh3cSafeCacheTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 4), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSafeCacheTotalSize.setStatus('current')
hh3cSafeCacheFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 5), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSafeCacheFreeSize.setStatus('current')
hh3cSafeCacheSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 6), Hh3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheSelectPolicy.setStatus('current')
hh3cSafeCacheThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheThreshold.setStatus('current')
hh3cSafeCacheFlushTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheFlushTime.setStatus('current')
hh3cSafeCacheFlushCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheFlushCommand.setStatus('current')
hh3cSafeCacheSkipDupWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheSkipDupWrite.setStatus('current')
hh3cSafeCacheRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("run", 1), ("suspend", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSafeCacheRunStatus.setStatus('current')
hh3cSafeCacheSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("suspend", 1), ("resume", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheSwitch.setStatus('current')
hh3cSafeCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 14, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheRowStatus.setStatus('current')
hh3cSafeCacheDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 15), )
if mibBuilder.loadTexts: hh3cSafeCacheDistributeTable.setStatus('current')
hh3cSafeCacheDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 15, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cSafeCacheDistLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cSafeCacheRaidUuid"))
if mibBuilder.loadTexts: hh3cSafeCacheDistributeEntry.setStatus('current')
hh3cSafeCacheDistLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 15, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cSafeCacheDistLvIndex.setStatus('current')
hh3cSafeCacheRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 15, 1, 2), Hh3cRaidIDType())
if mibBuilder.loadTexts: hh3cSafeCacheRaidUuid.setStatus('current')
hh3cSafeCacheRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 15, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheRaidSize.setStatus('current')
hh3cSafeCacheExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 15, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSafeCacheExtRowStatus.setStatus('current')
hh3cMirrorConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16), )
if mibBuilder.loadTexts: hh3cMirrorConfigTable.setStatus('current')
hh3cMirrorConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cMirrorLvIndex"))
if mibBuilder.loadTexts: hh3cMirrorConfigEntry.setStatus('current')
hh3cMirrorLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cMirrorLvIndex.setStatus('current')
hh3cMirrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sync", 1), ("async", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMirrorType.setStatus('current')
hh3cMirrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 3), Hh3cStorageOnlineState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMirrorStatus.setStatus('current')
hh3cMirrorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorName.setStatus('current')
hh3cMirrorSyncPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMirrorSyncPercentage.setStatus('current')
hh3cMirrorSyncPerformance = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMirrorSyncPerformance.setStatus('current')
hh3cMirrorDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 7), Integer32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMirrorDelta.setStatus('current')
hh3cMirrorRaidType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("virtual", 1), ("serviceEnable", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorRaidType.setStatus('current')
hh3cMirrorSelectPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 9), Hh3cExtendSelectPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorSelectPolicy.setStatus('current')
hh3cMirrorSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sync", 1), ("swap", 2), ("promote", 3), ("none", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorSwitch.setStatus('current')
hh3cMirrorExtendRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 11), Hh3cRaidIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorExtendRaidUuid.setStatus('current')
hh3cMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 16, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorRowStatus.setStatus('current')
hh3cMirrorDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 17), )
if mibBuilder.loadTexts: hh3cMirrorDistributeTable.setStatus('current')
hh3cMirrorDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 17, 1), ).setIndexNames((0, "HH3C-STORAGE-SNAP-MIB", "hh3cMirrorDistLvIndex"), (0, "HH3C-STORAGE-SNAP-MIB", "hh3cMirrorRaidUuid"))
if mibBuilder.loadTexts: hh3cMirrorDistributeEntry.setStatus('current')
hh3cMirrorDistLvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 17, 1, 1), Hh3cLvIDType())
if mibBuilder.loadTexts: hh3cMirrorDistLvIndex.setStatus('current')
hh3cMirrorRaidUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 17, 1, 2), Hh3cRaidIDType())
if mibBuilder.loadTexts: hh3cMirrorRaidUuid.setStatus('current')
hh3cMirrorRaidSize = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 17, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorRaidSize.setStatus('current')
hh3cMirrorExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 10, 2, 1, 17, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMirrorExtRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-STORAGE-SNAP-MIB", hh3cCDRStatus=hh3cCDRStatus, hh3cCDRID=hh3cCDRID, hh3cTimeMarkComment=hh3cTimeMarkComment, hh3cSnapCopyLvIndex=hh3cSnapCopyLvIndex, hh3cMirrorLvIndex=hh3cMirrorLvIndex, hh3cSafeCacheTotalSize=hh3cSafeCacheTotalSize, hh3cMirrorConfigEntry=hh3cMirrorConfigEntry, hh3cTMCopyPercentage=hh3cTMCopyPercentage, hh3cReplicaConfigTable=hh3cReplicaConfigTable, hh3cReplicaLastSyncTime=hh3cReplicaLastSyncTime, hh3cTimeViewName=hh3cTimeViewName, hh3cRepRemoteServerPassword=hh3cRepRemoteServerPassword, hh3cStorageSnap=hh3cStorageSnap, hh3cSnapRaidSelectPolicy=hh3cSnapRaidSelectPolicy, hh3cSnapRaidUuid=hh3cSnapRaidUuid, hh3cRepRemoteServerName=hh3cRepRemoteServerName, hh3cSnapCopyStartTime=hh3cSnapCopyStartTime, hh3cSafeCacheSwitch=hh3cSafeCacheSwitch, hh3cReplicaRunStatus=hh3cReplicaRunStatus, hh3cCDRConfigTable=hh3cCDRConfigTable, hh3cCDRFreeSize=hh3cCDRFreeSize, hh3cSafeCacheConfigEntry=hh3cSafeCacheConfigEntry, hh3cSnapRowStatus=hh3cSnapRowStatus, hh3cCDRConfigEntry=hh3cCDRConfigEntry, hh3cRepLocalServerName=hh3cRepLocalServerName, hh3cSafeCacheSkipDupWrite=hh3cSafeCacheSkipDupWrite, hh3cMirrorExtendRaidUuid=hh3cMirrorExtendRaidUuid, hh3cRepRemoteServerIP=hh3cRepRemoteServerIP, hh3cReplicaDelta=hh3cReplicaDelta, hh3cReplicaMode=hh3cReplicaMode, hh3cLvRepLocalWay=hh3cLvRepLocalWay, hh3cRepLocalLvIndex=hh3cRepLocalLvIndex, hh3cMirrorSyncPercentage=hh3cMirrorSyncPercentage, hh3cSnapLvIndex=hh3cSnapLvIndex, hh3cRepRemoteServerIPType=hh3cRepRemoteServerIPType, hh3cSafeCacheDistributeTable=hh3cSafeCacheDistributeTable, hh3cTimeMarkRowStatus=hh3cTimeMarkRowStatus, hh3cSnapCopyEntry=hh3cSnapCopyEntry, hh3cSnapAreaNotify=hh3cSnapAreaNotify, hh3cSafeCacheThreshold=hh3cSafeCacheThreshold, hh3cSafeCacheDistLvIndex=hh3cSafeCacheDistLvIndex, hh3cTimeMarkStamp=hh3cTimeMarkStamp, hh3cSAExpRaidSize=hh3cSAExpRaidSize, hh3cRepRemoteServerUsername=hh3cRepRemoteServerUsername, hh3cTimeMarkInitializeTime=hh3cTimeMarkInitializeTime, hh3cTimeMarkSize=hh3cTimeMarkSize, hh3cMirrorDistributeTable=hh3cMirrorDistributeTable, hh3cSafeCacheRaidSize=hh3cSafeCacheRaidSize, hh3cReplicaConfigEntry=hh3cReplicaConfigEntry, hh3cSafeCacheFreeSize=hh3cSafeCacheFreeSize, hh3cSafeCacheRunStatus=hh3cSafeCacheRunStatus, hh3cCDRRaidUuid=hh3cCDRRaidUuid, hh3cReplicaInterval=hh3cReplicaInterval, hh3cReplicaScanDiff=hh3cReplicaScanDiff, hh3cSafeCacheRaidUuid=hh3cSafeCacheRaidUuid, hh3cTimeMarkRollbackEntry=hh3cTimeMarkRollbackEntry, hh3cCDRSelectPolicy=hh3cCDRSelectPolicy, hh3cMirrorRaidType=hh3cMirrorRaidType, hh3cMirrorExtRowStatus=hh3cMirrorExtRowStatus, hh3cSafeCacheStatus=hh3cSafeCacheStatus, hh3cTimeViewRowStatus=hh3cTimeViewRowStatus, hh3cTimeMarkSwitch=hh3cTimeMarkSwitch, hh3cReplicaCompress=hh3cReplicaCompress, hh3cSnapMibObjects=hh3cSnapMibObjects, hh3cTMRollbackStartTime=hh3cTMRollbackStartTime, hh3cSafeCacheFlushCommand=hh3cSafeCacheFlushCommand, hh3cCDRExtRowStatus=hh3cCDRExtRowStatus, hh3cRepLocalServerUsername=hh3cRepLocalServerUsername, hh3cSnapCopyPercentage=hh3cSnapCopyPercentage, hh3cMirrorDelta=hh3cMirrorDelta, hh3cReplicaNextSyncTime=hh3cReplicaNextSyncTime, hh3cMirrorSelectPolicy=hh3cMirrorSelectPolicy, hh3cTimeMarkCreateTable=hh3cTimeMarkCreateTable, hh3cReplicaWatermarkRetry=hh3cReplicaWatermarkRetry, hh3cSafeCacheSelectPolicy=hh3cSafeCacheSelectPolicy, hh3cSnapCopyTable=hh3cSnapCopyTable, hh3cSnapConfigTable=hh3cSnapConfigTable, hh3cSnapAreaTotalSize=hh3cSnapAreaTotalSize, hh3cTimeViewStamp=hh3cTimeViewStamp, hh3cMirrorConfigTable=hh3cMirrorConfigTable, hh3cMirrorRowStatus=hh3cMirrorRowStatus, hh3cTimeMarkTotal=hh3cTimeMarkTotal, hh3cTimeViewTable=hh3cTimeViewTable, hh3cSnapAreaFullDeleteTM=hh3cSnapAreaFullDeleteTM, hh3cMirrorRaidUuid=hh3cMirrorRaidUuid, hh3cCDRTotalSize=hh3cCDRTotalSize, hh3cCDRDistLvIndex=hh3cCDRDistLvIndex, hh3cSnapCopySwitch=hh3cSnapCopySwitch, hh3cTimeViewID=hh3cTimeViewID, hh3cMirrorName=hh3cMirrorName, hh3cTimeMarkConfigEntry=hh3cTimeMarkConfigEntry, hh3cGlobalSnapSettingsObject=hh3cGlobalSnapSettingsObject, hh3cTimeMarkLastTime=hh3cTimeMarkLastTime, hh3cReplicaProtocol=hh3cReplicaProtocol, hh3cMirrorType=hh3cMirrorType, hh3cSafeCacheLvIndex=hh3cSafeCacheLvIndex, hh3cSnapAreaAutoExpand=hh3cSnapAreaAutoExpand, hh3cTimeMarkRollbackTable=hh3cTimeMarkRollbackTable, hh3cMirrorRaidSize=hh3cMirrorRaidSize, hh3cSnapRaidSize=hh3cSnapRaidSize, hh3cSafeCacheID=hh3cSafeCacheID, hh3cReplicaWatermark=hh3cReplicaWatermark, hh3cTMCopySwitch=hh3cTMCopySwitch, hh3cMirrorSyncPerformance=hh3cMirrorSyncPerformance, hh3cAddtionalSpaceMaxSize=hh3cAddtionalSpaceMaxSize, hh3cMirrorSwitch=hh3cMirrorSwitch, hh3cSnapExtendTimes=hh3cSnapExtendTimes, hh3cCDRDistributeTable=hh3cCDRDistributeTable, hh3cReplicaRowStatus=hh3cReplicaRowStatus, hh3cCDRRowStatus=hh3cCDRRowStatus, hh3cSAExpSize=hh3cSAExpSize, hh3cReplicaStateEntry=hh3cReplicaStateEntry, hh3cReplicaSyncPerformance=hh3cReplicaSyncPerformance, hh3cReplicaSyncTotalSize=hh3cReplicaSyncTotalSize, hh3cSnapAreaExpRowStatus=hh3cSnapAreaExpRowStatus, hh3cReplicaInitializeTime=hh3cReplicaInitializeTime, hh3cSnapExpandEntry=hh3cSnapExpandEntry, hh3cSnapAreaIncSize=hh3cSnapAreaIncSize, hh3cMirrorDistLvIndex=hh3cMirrorDistLvIndex, hh3cTimeMarkCreateEntry=hh3cTimeMarkCreateEntry, hh3cCDRDistributeEntry=hh3cCDRDistributeEntry, hh3cTMCopyDestLvId=hh3cTMCopyDestLvId, hh3cReplicaSyncCurPercentage=hh3cReplicaSyncCurPercentage, PYSNMP_MODULE_ID=hh3cStorageSnap, hh3cSafeCacheFlushTime=hh3cSafeCacheFlushTime, hh3cSnapAreaThreshold=hh3cSnapAreaThreshold, hh3cSnapAreaMaxSize=hh3cSnapAreaMaxSize, hh3cTimeMarkCopyEntry=hh3cTimeMarkCopyEntry, hh3cSnapExpandTable=hh3cSnapExpandTable, hh3cTimeMarkInterval=hh3cTimeMarkInterval, hh3cSnapAreaStatus=hh3cSnapAreaStatus, hh3cReplicaStateTable=hh3cReplicaStateTable, hh3cTimeViewEntry=hh3cTimeViewEntry, hh3cSafeCacheRowStatus=hh3cSafeCacheRowStatus, hh3cSnapAreaFreeSize=hh3cSnapAreaFreeSize, hh3cCDRRaidSize=hh3cCDRRaidSize, hh3cSnapAreaId=hh3cSnapAreaId, hh3cSafeCacheConfigTable=hh3cSafeCacheConfigTable, hh3cTMRollbackPercentage=hh3cTMRollbackPercentage, hh3cTimeMarkConfigTable=hh3cTimeMarkConfigTable, hh3cRepLocalServerIPType=hh3cRepLocalServerIPType, hh3cRepLocalServerIP=hh3cRepLocalServerIP, hh3cReplicaUseExistTM=hh3cReplicaUseExistTM, hh3cSafeCacheDistributeEntry=hh3cSafeCacheDistributeEntry, hh3cTMCopyStartTime=hh3cTMCopyStartTime, hh3cMirrorStatus=hh3cMirrorStatus, hh3cRepLocalServerPassword=hh3cRepLocalServerPassword, hh3cSAExpRaidUuid=hh3cSAExpRaidUuid, hh3cSafeCacheExtRowStatus=hh3cSafeCacheExtRowStatus, hh3cReplicaStatSwitch=hh3cReplicaStatSwitch, hh3cReplicaEncrypt=hh3cReplicaEncrypt, hh3cTMRollbackSwitch=hh3cTMRollbackSwitch, hh3cRepRemoteLvIndex=hh3cRepRemoteLvIndex, hh3cSnapConfigEntry=hh3cSnapConfigEntry, hh3cTimeMarkCopyTable=hh3cTimeMarkCopyTable, hh3cTimeMarkCounts=hh3cTimeMarkCounts, hh3cCDRLvIndex=hh3cCDRLvIndex, hh3cMirrorDistributeEntry=hh3cMirrorDistributeEntry)
