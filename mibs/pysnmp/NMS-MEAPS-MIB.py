#
# PySNMP MIB module NMS-MEAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-MEAPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
nmslocal, = mibBuilder.importSymbols("NMS-SMI", "nmslocal")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Unsigned32, MibIdentifier, Integer32, ObjectIdentity, Counter32, Counter64, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Unsigned32", "MibIdentifier", "Integer32", "ObjectIdentity", "Counter32", "Counter64", "Gauge32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nmsMEAPS = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234))
nmsMEAPSDomains = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSDomains.setStatus('mandatory')
nmsMEAPSPduRx = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSPduRx.setStatus('mandatory')
nmsMEAPSPduTx = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSPduTx.setStatus('mandatory')
nmsMEAPSDomainTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 4), )
if mibBuilder.loadTexts: nmsMEAPSDomainTable.setStatus('mandatory')
nmsMEAPSDomainTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 4, 1), ).setIndexNames((0, "NMS-MEAPS-MIB", "nmsMEAPSDomainID"))
if mibBuilder.loadTexts: nmsMEAPSDomainTableEntry.setStatus('mandatory')
nmsMEAPSDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSDomainID.setStatus('mandatory')
nmsMEAPSRings = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRings.setStatus('mandatory')
nmsMEAPSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("running", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsMEAPSRowStatus.setStatus('mandatory')
nmsMEAPSRingTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5), )
if mibBuilder.loadTexts: nmsMEAPSRingTable.setStatus('mandatory')
nmsMEAPSRingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1), ).setIndexNames((0, "NMS-MEAPS-MIB", "nmsMEAPSRingID"))
if mibBuilder.loadTexts: nmsMEAPSRingTableEntry.setStatus('mandatory')
nmsMEAPSRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingID.setStatus('mandatory')
nmsMEAPSRingLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("majorRing", 1), ("subRing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingLevel.setStatus('mandatory')
nmsMEAPSRingNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("masterNode", 1), ("transitNode", 2), ("edgeNode", 3), ("assistantNode", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingNodeType.setStatus('mandatory')
nmsMEAPSRingControlVlanMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingControlVlanMajor.setStatus('mandatory')
nmsMEAPSRingControlVlanSub = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingControlVlanSub.setStatus('mandatory')
nmsMEAPSRingPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPorts.setStatus('mandatory')
nmsMEAPSRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("complete", 1), ("ringFault", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingState.setStatus('mandatory')
nmsMEAPSRingHealthCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingHealthCheck.setStatus('mandatory')
nmsMEAPSRingHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingHelloTime.setStatus('mandatory')
nmsMEAPSRingFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingFailTime.setStatus('mandatory')
nmsMEAPSRingPreforwardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingPreforwardTime.setStatus('mandatory')
nmsMEAPSRingEdgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingEdgeHelloTime.setStatus('mandatory')
nmsMEAPSRingEdgeFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingEdgeFailTime.setStatus('mandatory')
nmsMEAPSRingAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("running", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsMEAPSRingAdminStatus.setStatus('mandatory')
nmsMEAPSRingPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingPrimaryPort.setStatus('mandatory')
nmsMEAPSRingPrimaryPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("forwarding", 1), ("preforwarding", 2), ("blocking", 3), ("edgepreforwarding", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPrimaryPortState.setStatus('mandatory')
nmsMEAPSRingPrimaryPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPrimaryPortStatus.setStatus('mandatory')
nmsMEAPSRingSecondaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsMEAPSRingSecondaryPort.setStatus('mandatory')
nmsMEAPSRingSecondaryPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("forwarding", 1), ("preforwarding", 2), ("blocking", 3), ("edgepreforwarding", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingSecondaryPortState.setStatus('mandatory')
nmsMEAPSRingSecondaryPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingSecondaryPortStatus.setStatus('mandatory')
nmsMEAPSRingPortTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6), )
if mibBuilder.loadTexts: nmsMEAPSRingPortTable.setStatus('mandatory')
nmsMEAPSRingPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1), ).setIndexNames((0, "NMS-MEAPS-MIB", "nmsMEAPSRingPortRingID"), (0, "NMS-MEAPS-MIB", "nmsMEAPSRingPort"))
if mibBuilder.loadTexts: nmsMEAPSRingPortTableEntry.setStatus('mandatory')
nmsMEAPSRingPortRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortRingID.setStatus('mandatory')
nmsMEAPSRingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPort.setStatus('mandatory')
nmsMEAPSRingPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("primaryPort", 1), ("secondaryPort", 2), ("transitPort", 3), ("commonPort", 4), ("edgePort", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortType.setStatus('mandatory')
nmsMEAPSRingPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("forwarding", 1), ("preforwarding", 2), ("blocking", 3), ("edgepreforwarding", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortState.setStatus('mandatory')
nmsMEAPSRingPortForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortForwards.setStatus('mandatory')
nmsMEAPSRingPortRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortRx.setStatus('mandatory')
nmsMEAPSRingPortTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortTx.setStatus('mandatory')
nmsMEAPSRingPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsMEAPSRingPortStatus.setStatus('mandatory')
nmsMEAPSRingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 7))
nmsMEAPSRingNotification = NotificationType((1, 3, 6, 1, 4, 1, 11606, 10, 2, 234, 7, 1)).setObjects(("NMS-MEAPS-MIB", "nmsMEAPSRingID"), ("NMS-MEAPS-MIB", "nmsMEAPSRingNodeType"), ("NMS-MEAPS-MIB", "nmsMEAPSRingState"))
if mibBuilder.loadTexts: nmsMEAPSRingNotification.setStatus('current')
mibBuilder.exportSymbols("NMS-MEAPS-MIB", nmsMEAPSRingControlVlanSub=nmsMEAPSRingControlVlanSub, nmsMEAPSRingPort=nmsMEAPSRingPort, nmsMEAPSRingPortState=nmsMEAPSRingPortState, nmsMEAPSRingPortForwards=nmsMEAPSRingPortForwards, nmsMEAPSRingSecondaryPortState=nmsMEAPSRingSecondaryPortState, nmsMEAPSRingPrimaryPort=nmsMEAPSRingPrimaryPort, nmsMEAPSDomainTable=nmsMEAPSDomainTable, nmsMEAPSRingControlVlanMajor=nmsMEAPSRingControlVlanMajor, nmsMEAPSRings=nmsMEAPSRings, nmsMEAPSRingID=nmsMEAPSRingID, nmsMEAPSRingAdminStatus=nmsMEAPSRingAdminStatus, nmsMEAPSRingFailTime=nmsMEAPSRingFailTime, nmsMEAPSRingPreforwardTime=nmsMEAPSRingPreforwardTime, nmsMEAPSPduTx=nmsMEAPSPduTx, nmsMEAPSPduRx=nmsMEAPSPduRx, nmsMEAPSRingPortTableEntry=nmsMEAPSRingPortTableEntry, nmsMEAPSRingTableEntry=nmsMEAPSRingTableEntry, nmsMEAPSRingPrimaryPortState=nmsMEAPSRingPrimaryPortState, nmsMEAPSRingSecondaryPort=nmsMEAPSRingSecondaryPort, nmsMEAPSRingSecondaryPortStatus=nmsMEAPSRingSecondaryPortStatus, nmsMEAPSRingPortStatus=nmsMEAPSRingPortStatus, nmsMEAPSDomains=nmsMEAPSDomains, nmsMEAPSRingLevel=nmsMEAPSRingLevel, nmsMEAPSRingPrimaryPortStatus=nmsMEAPSRingPrimaryPortStatus, nmsMEAPSRowStatus=nmsMEAPSRowStatus, nmsMEAPSRingPorts=nmsMEAPSRingPorts, nmsMEAPSDomainID=nmsMEAPSDomainID, nmsMEAPSRingHelloTime=nmsMEAPSRingHelloTime, nmsMEAPSRingNotification=nmsMEAPSRingNotification, nmsMEAPSRingPortRingID=nmsMEAPSRingPortRingID, nmsMEAPSRingEdgeFailTime=nmsMEAPSRingEdgeFailTime, nmsMEAPSRingHealthCheck=nmsMEAPSRingHealthCheck, nmsMEAPSRingPortType=nmsMEAPSRingPortType, nmsMEAPSDomainTableEntry=nmsMEAPSDomainTableEntry, nmsMEAPSRingNodeType=nmsMEAPSRingNodeType, nmsMEAPSRingTable=nmsMEAPSRingTable, nmsMEAPSRingEdgeHelloTime=nmsMEAPSRingEdgeHelloTime, nmsMEAPSRingPortTable=nmsMEAPSRingPortTable, nmsMEAPSRingPortTx=nmsMEAPSRingPortTx, nmsMEAPSRingNotifications=nmsMEAPSRingNotifications, nmsMEAPS=nmsMEAPS, nmsMEAPSRingPortRx=nmsMEAPSRingPortRx, nmsMEAPSRingState=nmsMEAPSRingState)
