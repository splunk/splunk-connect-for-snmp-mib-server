#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-PorsVcMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-PorsVcMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
mscRtg, mscRtgIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtg", "mscRtgIndex")
Integer32, RowStatus, StorageType, Unsigned32, DisplayString, RowPointer = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "RowStatus", "StorageType", "Unsigned32", "DisplayString", "RowPointer")
EnterpriseDateAndTime, AsciiString, Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "EnterpriseDateAndTime", "AsciiString", "Link", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Unsigned32, iso, Bits, Gauge32, Counter64, NotificationType, ObjectIdentity, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Unsigned32", "iso", "Bits", "Gauge32", "Counter64", "NotificationType", "ObjectIdentity", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
porsVcMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37))
mscRtgRs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2))
mscRtgRsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 1), )
if mibBuilder.loadTexts: mscRtgRsRowStatusTable.setStatus('mandatory')
mscRtgRsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"))
if mibBuilder.loadTexts: mscRtgRsRowStatusEntry.setStatus('mandatory')
mscRtgRsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsRowStatus.setStatus('mandatory')
mscRtgRsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsComponentName.setStatus('mandatory')
mscRtgRsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsStorageType.setStatus('mandatory')
mscRtgRsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscRtgRsIndex.setStatus('mandatory')
mscRtgRsSelectedRouteTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10), )
if mibBuilder.loadTexts: mscRtgRsSelectedRouteTable.setStatus('mandatory')
mscRtgRsSelectedRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"))
if mibBuilder.loadTexts: mscRtgRsSelectedRouteEntry.setStatus('mandatory')
mscRtgRsRouteCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999)).clone(999999)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsRouteCostMetric.setStatus('mandatory')
mscRtgRsRouteDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999)).clone(999999)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsRouteDelayMetric.setStatus('mandatory')
mscRtgRsBumpingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsBumpingPriority.setStatus('mandatory')
mscRtgRsReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routeDelayTooLong", 10), ("attributesNotMet", 11), ("internalReason", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsReasonForNoRoute.setStatus('mandatory')
mscRtgRsAttributeNotMet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("unknownAttributeNotMet", 0), ("allAttributesMet", 1), ("requiredRxBandwidth", 2), ("requiredTxBandwidth", 3), ("requiredTrunkModes", 4), ("maximumAcceptableCost", 5), ("maximumAcceptableDelay", 6), ("requiredTrafficType", 7), ("permittedTrunkTypes", 8), ("requiredSecurity", 9), ("requiredCustomerParm", 10), ("maximumTransmissionUnit", 11), ("maximumAcceptableGatewayCost", 12), ("maximumGatewayHops", 13))).clone('allAttributesMet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsAttributeNotMet.setStatus('mandatory')
mscRtgRsRouteGatewayCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsRouteGatewayCostMetric.setStatus('mandatory')
mscRtgRsRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("noRoute", 3), ("sameNode", 4), ("destinationNode", 5), ("destinationNodeLegacy", 6), ("gatewayNode", 7), ("gatewayLink", 8), ("routingGateway", 9), ("manual", 10))).clone('noRoute')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsRouteType.setStatus('mandatory')
mscRtgRsControlsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 11), )
if mibBuilder.loadTexts: mscRtgRsControlsTable.setStatus('mandatory')
mscRtgRsControlsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"))
if mibBuilder.loadTexts: mscRtgRsControlsEntry.setStatus('mandatory')
mscRtgRsRouteSelectionAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fromOperator", 0), ("fromLastRouteRequest", 1))).clone('fromLastRouteRequest')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsRouteSelectionAttributes.setStatus('obsolete')
mscRtgRsOperationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("automatic", 0), ("manual", 1))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsOperationMode.setStatus('mandatory')
mscRtgRsLastRouteSelectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 11, 1, 3), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsLastRouteSelectionTime.setStatus('mandatory')
mscRtgRsPathAttributesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12), )
if mibBuilder.loadTexts: mscRtgRsPathAttributesTable.setStatus('mandatory')
mscRtgRsPathAttributesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"))
if mibBuilder.loadTexts: mscRtgRsPathAttributesEntry.setStatus('mandatory')
mscRtgRsSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsSourceId.setStatus('mandatory')
mscRtgRsRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(6, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsRemoteName.setStatus('obsolete')
mscRtgRsSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsSetupPriority.setStatus('mandatory')
mscRtgRsRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsRequiredTxBandwidth.setStatus('mandatory')
mscRtgRsRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsRequiredRxBandwidth.setStatus('mandatory')
mscRtgRsMaximumTransmissionUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsMaximumTransmissionUnit.setStatus('mandatory')
mscRtgRsSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsSecurity.setStatus('mandatory')
mscRtgRsTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7))).clone('voice')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsTrafficType.setStatus('mandatory')
mscRtgRsPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="f8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsPermittedTrunkTypes.setStatus('mandatory')
mscRtgRsCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsCustomerParameter.setStatus('mandatory')
mscRtgRsPathAttributeToMinimize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cost", 0), ("delay", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsPathAttributeToMinimize.setStatus('mandatory')
mscRtgRsMaximumAcceptableCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1280)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsMaximumAcceptableCost.setStatus('mandatory')
mscRtgRsMaximumAcceptableDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsMaximumAcceptableDelay.setStatus('mandatory')
mscRtgRsBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1))).clone('bumpWhenNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsBumpPreference.setStatus('mandatory')
mscRtgRsRequiredTrunkModes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("any", 0), ("mapping", 1))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsRequiredTrunkModes.setStatus('mandatory')
mscRtgRsMaximumAcceptableGatewayCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsMaximumAcceptableGatewayCost.setStatus('mandatory')
mscRtgRsRouteRequestor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("applicationService", 0), ("inboundRGty", 1), ("outboundRGty", 2))).clone('applicationService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsRouteRequestor.setStatus('mandatory')
mscRtgRsGatewaySelectionAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("costBased", 1), ("random", 2), ("legacy", 4))).clone('costBased')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsGatewaySelectionAlg.setStatus('mandatory')
mscRtgRsDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 12, 1, 20), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgRsDestination.setStatus('mandatory')
mscRtgRsSrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 224), )
if mibBuilder.loadTexts: mscRtgRsSrdTable.setStatus('mandatory')
mscRtgRsSrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 224, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsSrdIndex"))
if mibBuilder.loadTexts: mscRtgRsSrdEntry.setStatus('mandatory')
mscRtgRsSrdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 224, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: mscRtgRsSrdIndex.setStatus('mandatory')
mscRtgRsSrdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 224, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsSrdValue.setStatus('mandatory')
mscRtgRsRouteStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 225), )
if mibBuilder.loadTexts: mscRtgRsRouteStatisticsTable.setStatus('mandatory')
mscRtgRsRouteStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 225, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsRouteStatisticsSetupPriorityIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsRouteStatisticsStatisticsTableIndex"))
if mibBuilder.loadTexts: mscRtgRsRouteStatisticsEntry.setStatus('mandatory')
mscRtgRsRouteStatisticsSetupPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 225, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routesRequested", 0), ("routesSelectedAtBp0", 1), ("routesSelectedAtBp1", 2), ("routesSelectedAtBp2", 3), ("routesSelectedAtBp3", 4), ("routesSelectedAtBp4", 5))))
if mibBuilder.loadTexts: mscRtgRsRouteStatisticsSetupPriorityIndex.setStatus('mandatory')
mscRtgRsRouteStatisticsStatisticsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 225, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: mscRtgRsRouteStatisticsStatisticsTableIndex.setStatus('mandatory')
mscRtgRsRouteStatisticsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 225, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsRouteStatisticsValue.setStatus('mandatory')
mscRtgRsDgnTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 650), )
if mibBuilder.loadTexts: mscRtgRsDgnTable.setStatus('mandatory')
mscRtgRsDgnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 650, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgRsDgnValue"))
if mibBuilder.loadTexts: mscRtgRsDgnEntry.setStatus('mandatory')
mscRtgRsDgnValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 2, 650, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgRsDgnValue.setStatus('mandatory')
mscRtgPors = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6))
mscRtgPorsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 1), )
if mibBuilder.loadTexts: mscRtgPorsRowStatusTable.setStatus('mandatory')
mscRtgPorsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"))
if mibBuilder.loadTexts: mscRtgPorsRowStatusEntry.setStatus('mandatory')
mscRtgPorsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsRowStatus.setStatus('mandatory')
mscRtgPorsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsComponentName.setStatus('mandatory')
mscRtgPorsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsStorageType.setStatus('mandatory')
mscRtgPorsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscRtgPorsIndex.setStatus('mandatory')
mscRtgPorsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 10), )
if mibBuilder.loadTexts: mscRtgPorsProvTable.setStatus('mandatory')
mscRtgPorsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"))
if mibBuilder.loadTexts: mscRtgPorsProvEntry.setStatus('mandatory')
mscRtgPorsOptimizationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1440), )).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsOptimizationInterval.setStatus('mandatory')
mscRtgPorsInfoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11), )
if mibBuilder.loadTexts: mscRtgPorsInfoTable.setStatus('mandatory')
mscRtgPorsInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"))
if mibBuilder.loadTexts: mscRtgPorsInfoEntry.setStatus('mandatory')
mscRtgPorsActiveConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsActiveConnections.setStatus('mandatory')
mscRtgPorsOptimizationState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("scheduled", 1), ("optimizing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsOptimizationState.setStatus('mandatory')
mscRtgPorsLastOptimizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 3), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsLastOptimizationTime.setStatus('mandatory')
mscRtgPorsNextOptimizationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 4), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsNextOptimizationTime.setStatus('mandatory')
mscRtgPorsOptimizationPasses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsOptimizationPasses.setStatus('mandatory')
mscRtgPorsOptimizationProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsOptimizationProgress.setStatus('mandatory')
mscRtgPorsPathsOptimized = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsPathsOptimized.setStatus('mandatory')
mscRtgPorsTotalPathsOptimized = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsTotalPathsOptimized.setStatus('mandatory')
mscRtgPorsProf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7))
mscRtgPorsProfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 1), )
if mibBuilder.loadTexts: mscRtgPorsProfRowStatusTable.setStatus('mandatory')
mscRtgPorsProfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsProfIndex"))
if mibBuilder.loadTexts: mscRtgPorsProfRowStatusEntry.setStatus('mandatory')
mscRtgPorsProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfRowStatus.setStatus('mandatory')
mscRtgPorsProfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsProfComponentName.setStatus('mandatory')
mscRtgPorsProfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsProfStorageType.setStatus('mandatory')
mscRtgPorsProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: mscRtgPorsProfIndex.setStatus('mandatory')
mscRtgPorsProfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11), )
if mibBuilder.loadTexts: mscRtgPorsProfProvTable.setStatus('mandatory')
mscRtgPorsProfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsProfIndex"))
if mibBuilder.loadTexts: mscRtgPorsProfProvEntry.setStatus('mandatory')
mscRtgPorsProfSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfSetupPriority.setStatus('mandatory')
mscRtgPorsProfHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfHoldingPriority.setStatus('mandatory')
mscRtgPorsProfRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155520000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfRequiredTxBandwidth.setStatus('mandatory')
mscRtgPorsProfRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155520000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfRequiredRxBandwidth.setStatus('mandatory')
mscRtgPorsProfRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7))).clone('data')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfRequiredTrafficType.setStatus('mandatory')
mscRtgPorsProfPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="f8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfPermittedTrunkTypes.setStatus('mandatory')
mscRtgPorsProfRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfRequiredSecurity.setStatus('mandatory')
mscRtgPorsProfRequiredCustomerParm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfRequiredCustomerParm.setStatus('mandatory')
mscRtgPorsProfPathAttributeToMinimize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cost", 0), ("delay", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfPathAttributeToMinimize.setStatus('mandatory')
mscRtgPorsProfMaximumAcceptableCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1280)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfMaximumAcceptableCost.setStatus('mandatory')
mscRtgPorsProfMaximumAcceptableDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfMaximumAcceptableDelay.setStatus('mandatory')
mscRtgPorsProfEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ep0", 0), ("ep1", 1), ("ep2", 2), ("sameAsApplication", 3))).clone('sameAsApplication')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfEmissionPriority.setStatus('mandatory')
mscRtgPorsProfDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("sameAsApplication", 0), ("dp1", 1), ("dp2", 2), ("dp3", 3))).clone('sameAsApplication')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfDiscardPriority.setStatus('mandatory')
mscRtgPorsProfPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1))).clone('reRoutePath')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfPathFailureAction.setStatus('mandatory')
mscRtgPorsProfBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1))).clone('bumpWhenNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfBumpPreference.setStatus('mandatory')
mscRtgPorsProfOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsProfOptimization.setStatus('mandatory')
mscRtgPorsProfUsrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 400), )
if mibBuilder.loadTexts: mscRtgPorsProfUsrTable.setStatus('mandatory')
mscRtgPorsProfUsrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 400, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsProfIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsProfUsrValue"))
if mibBuilder.loadTexts: mscRtgPorsProfUsrEntry.setStatus('mandatory')
mscRtgPorsProfUsrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 7, 400, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsProfUsrValue.setStatus('mandatory')
mscRtgPorsMpath = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8))
mscRtgPorsMpathRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 1), )
if mibBuilder.loadTexts: mscRtgPorsMpathRowStatusTable.setStatus('mandatory')
mscRtgPorsMpathRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsMpathIndex"))
if mibBuilder.loadTexts: mscRtgPorsMpathRowStatusEntry.setStatus('mandatory')
mscRtgPorsMpathRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsMpathRowStatus.setStatus('mandatory')
mscRtgPorsMpathComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsMpathComponentName.setStatus('mandatory')
mscRtgPorsMpathStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsMpathStorageType.setStatus('mandatory')
mscRtgPorsMpathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: mscRtgPorsMpathIndex.setStatus('mandatory')
mscRtgPorsMpathOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 12), )
if mibBuilder.loadTexts: mscRtgPorsMpathOperTable.setStatus('mandatory')
mscRtgPorsMpathOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsMpathIndex"))
if mibBuilder.loadTexts: mscRtgPorsMpathOperEntry.setStatus('mandatory')
mscRtgPorsMpathLastSetupFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 20, 23))).clone(namedValues=NamedValues(("none", 0), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("farEndBusy", 12), ("unknownReason", 14), ("farEndNotReady", 15), ("serviceTypeMismatch", 17), ("bumped", 19), ("accessCardFailure", 20), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsMpathLastSetupFailureReason.setStatus('mandatory')
mscRtgPorsMpathLastSetupFailurePoint = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 12, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsMpathLastSetupFailurePoint.setStatus('mandatory')
mscRtgPorsMpathLastSetupFailedUser = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 12, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsMpathLastSetupFailedUser.setStatus('mandatory')
mscRtgPorsMpathRouteTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 408), )
if mibBuilder.loadTexts: mscRtgPorsMpathRouteTable.setStatus('mandatory')
mscRtgPorsMpathRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 408, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsMpathIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsMpathRouteIndex"))
if mibBuilder.loadTexts: mscRtgPorsMpathRouteEntry.setStatus('mandatory')
mscRtgPorsMpathRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 408, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 19)))
if mibBuilder.loadTexts: mscRtgPorsMpathRouteIndex.setStatus('mandatory')
mscRtgPorsMpathRouteValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 408, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscRtgPorsMpathRouteValue.setStatus('mandatory')
mscRtgPorsMpathUsrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 409), )
if mibBuilder.loadTexts: mscRtgPorsMpathUsrTable.setStatus('mandatory')
mscRtgPorsMpathUsrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 409, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseRoutingMIB", "mscRtgIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsMpathIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsVcMIB", "mscRtgPorsMpathUsrValue"))
if mibBuilder.loadTexts: mscRtgPorsMpathUsrEntry.setStatus('mandatory')
mscRtgPorsMpathUsrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 40, 6, 8, 409, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscRtgPorsMpathUsrValue.setStatus('mandatory')
porsVcGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 1))
porsVcGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 1, 1))
porsVcGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 1, 1, 3))
porsVcGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 1, 1, 3, 2))
porsVcCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 3))
porsVcCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 3, 1))
porsVcCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 3, 1, 3))
porsVcCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 37, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-PorsVcMIB", mscRtgRsControlsEntry=mscRtgRsControlsEntry, mscRtgPorsMpathUsrEntry=mscRtgPorsMpathUsrEntry, mscRtgRsPermittedTrunkTypes=mscRtgRsPermittedTrunkTypes, porsVcGroupCA02A=porsVcGroupCA02A, mscRtgRsRouteGatewayCostMetric=mscRtgRsRouteGatewayCostMetric, mscRtgRsDestination=mscRtgRsDestination, mscRtgRsSrdIndex=mscRtgRsSrdIndex, mscRtgPorsProfRowStatusEntry=mscRtgPorsProfRowStatusEntry, mscRtgRsLastRouteSelectionTime=mscRtgRsLastRouteSelectionTime, mscRtgRsStorageType=mscRtgRsStorageType, mscRtgPorsProvTable=mscRtgPorsProvTable, mscRtgPorsMpathIndex=mscRtgPorsMpathIndex, mscRtgPorsProfRowStatus=mscRtgPorsProfRowStatus, mscRtgPorsProfSetupPriority=mscRtgPorsProfSetupPriority, mscRtgPorsMpathOperEntry=mscRtgPorsMpathOperEntry, mscRtgRsRouteStatisticsTable=mscRtgRsRouteStatisticsTable, mscRtgPorsOptimizationState=mscRtgPorsOptimizationState, mscRtgRsSecurity=mscRtgRsSecurity, mscRtgPorsActiveConnections=mscRtgPorsActiveConnections, mscRtgPorsProfRequiredTxBandwidth=mscRtgPorsProfRequiredTxBandwidth, mscRtgPorsLastOptimizationTime=mscRtgPorsLastOptimizationTime, mscRtgPorsPathsOptimized=mscRtgPorsPathsOptimized, mscRtgRsRequiredRxBandwidth=mscRtgRsRequiredRxBandwidth, mscRtgPorsMpathRouteValue=mscRtgPorsMpathRouteValue, mscRtgPorsProfIndex=mscRtgPorsProfIndex, mscRtgRsMaximumTransmissionUnit=mscRtgRsMaximumTransmissionUnit, porsVcGroupCA02=porsVcGroupCA02, mscRtgRsSrdEntry=mscRtgRsSrdEntry, mscRtgPorsRowStatusEntry=mscRtgPorsRowStatusEntry, mscRtgPorsProfPermittedTrunkTypes=mscRtgPorsProfPermittedTrunkTypes, mscRtgPorsProfRowStatusTable=mscRtgPorsProfRowStatusTable, mscRtgPorsProfHoldingPriority=mscRtgPorsProfHoldingPriority, mscRtgPorsProfRequiredTrafficType=mscRtgPorsProfRequiredTrafficType, mscRtgRsReasonForNoRoute=mscRtgRsReasonForNoRoute, mscRtgPorsMpath=mscRtgPorsMpath, mscRtgPorsMpathLastSetupFailurePoint=mscRtgPorsMpathLastSetupFailurePoint, mscRtgPorsOptimizationProgress=mscRtgPorsOptimizationProgress, mscRtgRsRouteCostMetric=mscRtgRsRouteCostMetric, mscRtgRsRouteStatisticsEntry=mscRtgRsRouteStatisticsEntry, mscRtgPorsMpathUsrValue=mscRtgPorsMpathUsrValue, mscRtgRsBumpPreference=mscRtgRsBumpPreference, mscRtgRsSrdValue=mscRtgRsSrdValue, mscRtgPorsMpathComponentName=mscRtgPorsMpathComponentName, mscRtgRsRouteSelectionAttributes=mscRtgRsRouteSelectionAttributes, mscRtgPorsInfoEntry=mscRtgPorsInfoEntry, mscRtgRsMaximumAcceptableCost=mscRtgRsMaximumAcceptableCost, mscRtgPorsProf=mscRtgPorsProf, mscRtgPorsProfUsrTable=mscRtgPorsProfUsrTable, mscRtgPorsMpathRowStatusTable=mscRtgPorsMpathRowStatusTable, mscRtgPorsProfUsrValue=mscRtgPorsProfUsrValue, porsVcCapabilitiesCA02=porsVcCapabilitiesCA02, mscRtgRsPathAttributeToMinimize=mscRtgRsPathAttributeToMinimize, mscRtgPorsProfEmissionPriority=mscRtgPorsProfEmissionPriority, mscRtgPorsMpathUsrTable=mscRtgPorsMpathUsrTable, mscRtgRsComponentName=mscRtgRsComponentName, mscRtgRsMaximumAcceptableGatewayCost=mscRtgRsMaximumAcceptableGatewayCost, mscRtgRsRowStatus=mscRtgRsRowStatus, porsVcMIB=porsVcMIB, mscRtgPorsComponentName=mscRtgPorsComponentName, mscRtgRsBumpingPriority=mscRtgRsBumpingPriority, mscRtgRsControlsTable=mscRtgRsControlsTable, mscRtgPorsMpathLastSetupFailedUser=mscRtgPorsMpathLastSetupFailedUser, mscRtgRsPathAttributesTable=mscRtgRsPathAttributesTable, porsVcCapabilities=porsVcCapabilities, mscRtgRsRequiredTxBandwidth=mscRtgRsRequiredTxBandwidth, mscRtgPorsProfBumpPreference=mscRtgPorsProfBumpPreference, mscRtgPorsProfRequiredSecurity=mscRtgPorsProfRequiredSecurity, mscRtgRsMaximumAcceptableDelay=mscRtgRsMaximumAcceptableDelay, mscRtgPorsMpathRowStatusEntry=mscRtgPorsMpathRowStatusEntry, mscRtgRs=mscRtgRs, mscRtgPorsStorageType=mscRtgPorsStorageType, mscRtgRsSelectedRouteEntry=mscRtgRsSelectedRouteEntry, porsVcGroup=porsVcGroup, mscRtgPorsInfoTable=mscRtgPorsInfoTable, mscRtgPorsProfProvEntry=mscRtgPorsProfProvEntry, mscRtgRsTrafficType=mscRtgRsTrafficType, mscRtgPorsProfRequiredRxBandwidth=mscRtgPorsProfRequiredRxBandwidth, mscRtgPorsProfUsrEntry=mscRtgPorsProfUsrEntry, mscRtgPorsProfProvTable=mscRtgPorsProfProvTable, mscRtgRsSourceId=mscRtgRsSourceId, mscRtgPorsNextOptimizationTime=mscRtgPorsNextOptimizationTime, mscRtgRsSrdTable=mscRtgRsSrdTable, mscRtgPorsMpathLastSetupFailureReason=mscRtgPorsMpathLastSetupFailureReason, mscRtgPorsProfComponentName=mscRtgPorsProfComponentName, mscRtgPorsOptimizationPasses=mscRtgPorsOptimizationPasses, mscRtgPorsOptimizationInterval=mscRtgPorsOptimizationInterval, mscRtgRsGatewaySelectionAlg=mscRtgRsGatewaySelectionAlg, mscRtgRsRowStatusEntry=mscRtgRsRowStatusEntry, mscRtgRsPathAttributesEntry=mscRtgRsPathAttributesEntry, porsVcCapabilitiesCA02A=porsVcCapabilitiesCA02A, mscRtgRsRouteStatisticsSetupPriorityIndex=mscRtgRsRouteStatisticsSetupPriorityIndex, mscRtgPorsRowStatusTable=mscRtgPorsRowStatusTable, mscRtgPorsMpathOperTable=mscRtgPorsMpathOperTable, mscRtgPorsProfPathAttributeToMinimize=mscRtgPorsProfPathAttributeToMinimize, mscRtgRsRowStatusTable=mscRtgRsRowStatusTable, mscRtgRsRouteType=mscRtgRsRouteType, mscRtgPorsProfRequiredCustomerParm=mscRtgPorsProfRequiredCustomerParm, mscRtgRsRouteDelayMetric=mscRtgRsRouteDelayMetric, mscRtgRsDgnEntry=mscRtgRsDgnEntry, mscRtgRsAttributeNotMet=mscRtgRsAttributeNotMet, porsVcGroupCA=porsVcGroupCA, mscRtgPorsTotalPathsOptimized=mscRtgPorsTotalPathsOptimized, mscRtgRsRemoteName=mscRtgRsRemoteName, mscRtgRsDgnTable=mscRtgRsDgnTable, mscRtgPorsMpathRouteEntry=mscRtgPorsMpathRouteEntry, mscRtgPorsMpathRouteIndex=mscRtgPorsMpathRouteIndex, mscRtgRsSelectedRouteTable=mscRtgRsSelectedRouteTable, mscRtgPorsProfMaximumAcceptableCost=mscRtgPorsProfMaximumAcceptableCost, mscRtgPorsProvEntry=mscRtgPorsProvEntry, mscRtgRsCustomerParameter=mscRtgRsCustomerParameter, mscRtgPorsProfMaximumAcceptableDelay=mscRtgPorsProfMaximumAcceptableDelay, mscRtgRsSetupPriority=mscRtgRsSetupPriority, mscRtgPorsMpathRowStatus=mscRtgPorsMpathRowStatus, mscRtgRsRouteStatisticsStatisticsTableIndex=mscRtgRsRouteStatisticsStatisticsTableIndex, mscRtgRsRequiredTrunkModes=mscRtgRsRequiredTrunkModes, mscRtgRsRouteRequestor=mscRtgRsRouteRequestor, mscRtgRsDgnValue=mscRtgRsDgnValue, mscRtgPorsProfPathFailureAction=mscRtgPorsProfPathFailureAction, mscRtgPorsProfOptimization=mscRtgPorsProfOptimization, mscRtgRsIndex=mscRtgRsIndex, mscRtgPorsMpathRouteTable=mscRtgPorsMpathRouteTable, mscRtgRsRouteStatisticsValue=mscRtgRsRouteStatisticsValue, mscRtgPorsProfDiscardPriority=mscRtgPorsProfDiscardPriority, mscRtgPorsMpathStorageType=mscRtgPorsMpathStorageType, mscRtgRsOperationMode=mscRtgRsOperationMode, mscRtgPorsRowStatus=mscRtgPorsRowStatus, mscRtgPorsProfStorageType=mscRtgPorsProfStorageType, porsVcCapabilitiesCA=porsVcCapabilitiesCA, mscRtgPorsIndex=mscRtgPorsIndex, mscRtgPors=mscRtgPors)
