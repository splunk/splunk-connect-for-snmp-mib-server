#
# PySNMP MIB module TIMETRA-OTU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-OTU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:12:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, ModuleIdentity, Integer32, iso, Counter32, MibIdentifier, NotificationType, Counter64, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Integer32", "iso", "Counter32", "MibIdentifier", "NotificationType", "Counter64", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress")
TextualConvention, TimeStamp, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString", "TruthValue", "RowStatus")
tmnxSRConfs, tmnxSRObjs, timetraSRMIBModules, tmnxSRNotifyPrefix = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "tmnxSRObjs", "timetraSRMIBModules", "tmnxSRNotifyPrefix")
TmnxActionType, = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TmnxActionType")
tmnxOtuMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 62))
tmnxOtuMIBModule.setRevisions(('1909-02-28 00:00', '1908-10-23 00:00',))
if mibBuilder.loadTexts: tmnxOtuMIBModule.setLastUpdated('0902280000Z')
if mibBuilder.loadTexts: tmnxOtuMIBModule.setOrganization('Alcatel-Lucent')
tmnxOtuObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62))
tmnxOtuNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 62))
tmnxOtuConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62))
tmnxOtuConfigurationTimeStamps = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 0))
tmnxOtuConfigurations = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1))
tmnxOtuStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2))
tmnxOtuNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 62, 0))
tmnxOtuCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 1))
tmnxOtuGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2))
class TmnxOtuFecMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("disabled", 0), ("g709fec", 1), ("enhanced", 2))

class TmnxOtu2LanDataRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("notApplicable", 0), ("dr11049", 1), ("dr11096", 2))

class TmnxOtuSFSDMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("fec", 1), ("bip8", 2))

class TmnxOtuTtiMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("auto", 0), ("string", 1), ("bytes", 2))

class TmnxOtuTtiString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class TmnxOtuAlarms(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("loc", 0), ("los", 1), ("lof", 2), ("lom", 3), ("otuAis", 4), ("otuBerSf", 5), ("otuBerSd", 6), ("otuBdi", 7), ("otuTim", 8), ("otuIae", 9), ("otuBiae", 10), ("fecSf", 11), ("fecSd", 12), ("fecFail", 13), ("fecUncorr", 14), ("oduAis", 15), ("oduOci", 16), ("oduLck", 17), ("oduBdi", 18), ("oduTim", 19), ("opuTim", 20), ("opuPlm", 21))

class TmnxOtuPsiPayloadType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 32, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 253, 254))
    namedValues = NamedValues(("auto", 0), ("exp", 1), ("asyncCbr", 2), ("syncCbr", 3), ("atm", 4), ("gfp", 5), ("vcat", 6), ("gmp", 7), ("bitStrOctet", 16), ("bitStrNoOctet", 17), ("oduMux", 32), ("rsvd80", 128), ("rsvd81", 129), ("rsvd82", 130), ("rsvd83", 131), ("rsvd84", 132), ("rsvd85", 133), ("rsvd86", 134), ("rsvd87", 135), ("rsvd88", 136), ("rsvd89", 137), ("rsvd8A", 138), ("rsvd8B", 139), ("rsvd8C", 140), ("rsvd8D", 141), ("rsvd8E", 142), ("rsvd8F", 143), ("nullTest", 253), ("prbsTest", 254))

class TmnxOtuTimReaction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("squelchRx", 1))

tmnxOtuIfTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 0, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfTableLastChanged.setStatus('current')
tmnxOtuIfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1), )
if mibBuilder.loadTexts: tmnxOtuIfTable.setStatus('current')
tmnxOtuIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tmnxOtuIfEntry.setStatus('current')
tmnxOtuIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfRowStatus.setStatus('current')
tmnxOtuIfTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfTimeStamp.setStatus('current')
tmnxOtuIfFecMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 3), TmnxOtuFecMode().clone('enhanced')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfFecMode.setStatus('current')
tmnxOtuIfSfSdMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 4), TmnxOtuSFSDMethod().clone('fec')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSfSdMethod.setStatus('current')
tmnxOtuIfBerSfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 6)).clone(5)).setUnits('error bits in 1/10e-n bits received').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfBerSfThreshold.setStatus('current')
tmnxOtuIfBerSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 9)).clone(7)).setUnits('error bits in 1/10^n bits received').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfBerSdThreshold.setStatus('current')
tmnxOtuIfOtuOperDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 7), Unsigned32()).setUnits('Mb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfOtuOperDataRate.setStatus('current')
tmnxOtuIfOtu2LanDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 8), TmnxOtu2LanDataRate().clone('dr11049')).setUnits('Gb/s').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfOtu2LanDataRate.setStatus('current')
tmnxOtuIfCfgAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 9), TmnxOtuAlarms().clone(namedValues=NamedValues(("loc", 0), ("los", 1), ("lof", 2), ("lom", 3), ("otuBdi", 7), ("otuBerSf", 5), ("fecSf", 11)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfCfgAlarms.setStatus('current')
tmnxOtuIfAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 10), TmnxOtuAlarms()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfAlarmState.setStatus('current')
tmnxOtuIfHoldTimeUp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(5)).setUnits('100s of milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfHoldTimeUp.setStatus('obsolete')
tmnxOtuIfHoldTimeDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('100s of milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfHoldTimeDown.setStatus('obsolete')
tmnxOtuIfSmTtiTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 13), TmnxOtuTtiMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSmTtiTxMode.setStatus('current')
tmnxOtuIfSmTtiTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 14), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSmTtiTx.setStatus('current')
tmnxOtuIfSmTtiRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 15), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfSmTtiRx.setStatus('current')
tmnxOtuIfSmTtiExpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 16), TmnxOtuTtiMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSmTtiExpMode.setStatus('current')
tmnxOtuIfSmTtiExpCopyRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 17), TmnxActionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSmTtiExpCopyRx.setStatus('current')
tmnxOtuIfSmTtiExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 18), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSmTtiExp.setStatus('current')
tmnxOtuIfPmTtiTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 19), TmnxOtuTtiMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPmTtiTxMode.setStatus('current')
tmnxOtuIfPmTtiTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 20), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPmTtiTx.setStatus('current')
tmnxOtuIfPmTtiRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 21), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfPmTtiRx.setStatus('current')
tmnxOtuIfPmTtiExpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 22), TmnxOtuTtiMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPmTtiExpMode.setStatus('current')
tmnxOtuIfPmTtiExpCopyRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 23), TmnxActionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPmTtiExpCopyRx.setStatus('current')
tmnxOtuIfPmTtiExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 24), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPmTtiExp.setStatus('current')
tmnxOtuIfPsiTtiTxMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 25), TmnxOtuTtiMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiTtiTxMode.setStatus('current')
tmnxOtuIfPsiTtiTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 26), TmnxOtuTtiString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiTtiTx.setStatus('current')
tmnxOtuIfPsiTtiRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 27), TmnxOtuTtiString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfPsiTtiRx.setStatus('current')
tmnxOtuIfPsiTtiExpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 28), TmnxOtuTtiMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiTtiExpMode.setStatus('current')
tmnxOtuIfPsiTtiExpCopyRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 29), TmnxActionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiTtiExpCopyRx.setStatus('current')
tmnxOtuIfPsiTtiExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 30), TmnxOtuTtiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiTtiExp.setStatus('current')
tmnxOtuIfPsiPayloadTypeTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 31), TmnxOtuPsiPayloadType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiPayloadTypeTx.setStatus('current')
tmnxOtuIfPsiPayloadTypeRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 32), TmnxOtuPsiPayloadType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfPsiPayloadTypeRx.setStatus('current')
tmnxOtuIfPsiPayloadTypeExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 33), TmnxOtuPsiPayloadType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiPayloadTypeExp.setStatus('current')
tmnxOtuIfGfpMappingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 34), TruthValue().clone('false'))
if mibBuilder.loadTexts: tmnxOtuIfGfpMappingEnable.setStatus('current')
tmnxOtuIfAsyncMappingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 35), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfAsyncMappingEnable.setStatus('current')
tmnxOtuIfSmTimReaction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 36), TmnxOtuTimReaction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfSmTimReaction.setStatus('current')
tmnxOtuIfPmTimReaction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 37), TmnxOtuTimReaction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPmTimReaction.setStatus('current')
tmnxOtuIfPsiTimReaction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 38), TmnxOtuTimReaction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiTimReaction.setStatus('current')
tmnxOtuIfPsiPlmReaction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 1, 1, 1, 39), TmnxOtuTimReaction().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOtuIfPsiPlmReaction.setStatus('current')
tmnxOtuIfRawStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1), )
if mibBuilder.loadTexts: tmnxOtuIfRawStatsTable.setStatus('current')
tmnxOtuIfRawStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tmnxOtuIfRawStatsEntry.setStatus('current')
tmnxOtuIfRawStatsFECCorrZeros = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 1), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsFECCorrZeros.setStatus('current')
tmnxOtuIfRawStatsOFFECCorrZeros = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 2), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFFECCorrZeros.setStatus('current')
tmnxOtuIfRawStatsHCFECCorrZeros = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 3), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCFECCorrZeros.setStatus('current')
tmnxOtuIfRawStatsFECCorrOnes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 4), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsFECCorrOnes.setStatus('current')
tmnxOtuIfRawStatsOFFECCorrOnes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 5), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFFECCorrOnes.setStatus('current')
tmnxOtuIfRawStatsHCFECCorrOnes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 6), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCFECCorrOnes.setStatus('current')
tmnxOtuIfRawStatsFECUncorrSR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 7), Counter32()).setUnits('Sub-Rows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsFECUncorrSR.setStatus('current')
tmnxOtuIfRawStatsOFFECUncorrSR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 8), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFFECUncorrSR.setStatus('current')
tmnxOtuIfRawStatsHCFECUncorrSR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 9), Counter64()).setUnits('Sub-Rows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCFECUncorrSR.setStatus('current')
tmnxOtuIfRawStatsFECSES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 10), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsFECSES.setStatus('current')
tmnxOtuIfRawStatsSMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 11), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsSMBIP8.setStatus('current')
tmnxOtuIfRawStatsOFSMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 12), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFSMBIP8.setStatus('current')
tmnxOtuIfRawStatsHCSMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 13), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCSMBIP8.setStatus('current')
tmnxOtuIfRawStatsSMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 14), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsSMBEI.setStatus('current')
tmnxOtuIfRawStatsOFSMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 15), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFSMBEI.setStatus('current')
tmnxOtuIfRawStatsHCSMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 16), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCSMBEI.setStatus('current')
tmnxOtuIfRawStatsSMSES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsSMSES.setStatus('current')
tmnxOtuIfRawStatsPMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 18), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsPMBIP8.setStatus('current')
tmnxOtuIfRawStatsOFPMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 19), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFPMBIP8.setStatus('current')
tmnxOtuIfRawStatsHCPMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 20), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCPMBIP8.setStatus('current')
tmnxOtuIfRawStatsPMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 21), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsPMBEI.setStatus('current')
tmnxOtuIfRawStatsOFPMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 22), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsOFPMBEI.setStatus('current')
tmnxOtuIfRawStatsHCPMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 23), Counter64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsHCPMBEI.setStatus('current')
tmnxOtuIfRawStatsPMSES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 24), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsPMSES.setStatus('current')
tmnxOtuIfRawStatsFECES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 25), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsFECES.setStatus('current')
tmnxOtuIfRawStatsFECUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 26), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsFECUAS.setStatus('current')
tmnxOtuIfRawStatsSMES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 27), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsSMES.setStatus('current')
tmnxOtuIfRawStatsSMUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 28), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsSMUAS.setStatus('current')
tmnxOtuIfRawStatsPMES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 29), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsPMES.setStatus('current')
tmnxOtuIfRawStatsPMUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 30), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsPMUAS.setStatus('current')
tmnxOtuIfRawStatsNPJ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 31), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsNPJ.setStatus('current')
tmnxOtuIfRawStatsPPJ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 32), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsPPJ.setStatus('current')
tmnxOtuIfRawStatsElapsedSec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 1, 1, 33), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfRawStatsElapsedSec.setStatus('current')
tmnxOtuIfIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2), )
if mibBuilder.loadTexts: tmnxOtuIfIntervalStatsTable.setStatus('current')
tmnxOtuIfIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsIndex"))
if mibBuilder.loadTexts: tmnxOtuIfIntervalStatsEntry.setStatus('current')
tmnxOtuIfIntvlStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 96), )))
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsIndex.setStatus('current')
tmnxOtuIfIntvlStatsIsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsIsValid.setStatus('current')
tmnxOtuIfIntvlStatsFECCorrZeros = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 3), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsFECCorrZeros.setStatus('current')
tmnxOtuIfIntvlStatsFECCorrOnes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 4), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsFECCorrOnes.setStatus('current')
tmnxOtuIfIntvlStatsFECUncorrSR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 5), Counter32()).setUnits('Sub-Rows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsFECUncorrSR.setStatus('current')
tmnxOtuIfIntvlStatsFECSES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsFECSES.setStatus('current')
tmnxOtuIfIntvlStatsSMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 7), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsSMBIP8.setStatus('current')
tmnxOtuIfIntvlStatsSMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 8), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsSMBEI.setStatus('current')
tmnxOtuIfIntvlStatsSMSES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 9), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsSMSES.setStatus('current')
tmnxOtuIfIntvlStatsPMBIP8 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 10), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsPMBIP8.setStatus('current')
tmnxOtuIfIntvlStatsPMBEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 11), Counter32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsPMBEI.setStatus('current')
tmnxOtuIfIntvlStatsPMSES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 12), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsPMSES.setStatus('current')
tmnxOtuIfIntvlStatsFECES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsFECES.setStatus('current')
tmnxOtuIfIntvlStatsFECUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 14), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsFECUAS.setStatus('current')
tmnxOtuIfIntvlStatsSMES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 15), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsSMES.setStatus('current')
tmnxOtuIfIntvlStatsSMUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 16), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsSMUAS.setStatus('current')
tmnxOtuIfIntvlStatsPMES = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsPMES.setStatus('current')
tmnxOtuIfIntvlStatsPMUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsPMUAS.setStatus('current')
tmnxOtuIfIntvlStatsNPJ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 19), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsNPJ.setStatus('current')
tmnxOtuIfIntvlStatsPPJ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 20), Counter32()).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsPPJ.setStatus('current')
tmnxOtuIfIntvlStatsElapsedSec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 62, 2, 2, 1, 21), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOtuIfIntvlStatsElapsedSec.setStatus('current')
tmnxOtuIfAlarmNotification = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 62, 0, 1)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfAlarmState"))
if mibBuilder.loadTexts: tmnxOtuIfAlarmNotification.setStatus('current')
tmnxOtuCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 1, 1)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfBaseConfigGroup"), ("TIMETRA-OTU-MIB", "tmnxOtuIfBaseConfigGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSMGroup"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSMGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPMGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPSIGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuStatsGroup"), ("TIMETRA-OTU-MIB", "tmnxOtuStatsGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuCompliance = tmnxOtuCompliance.setStatus('obsolete')
tmnxOtuComplianceV8v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 1, 2)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfBaseConfigGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSMGroup"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSMGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPMGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPSIGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuStatsGroup"), ("TIMETRA-OTU-MIB", "tmnxOtuStatsGroupV8v0"), ("TIMETRA-OTU-MIB", "tmnxOtuNotificationGroup"), ("TIMETRA-OTU-MIB", "tmnxOtuObsoleteV8v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuComplianceV8v0 = tmnxOtuComplianceV8v0.setStatus('current')
tmnxOtuIfBaseConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 1)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfTableLastChanged"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRowStatus"), ("TIMETRA-OTU-MIB", "tmnxOtuIfTimeStamp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfFecMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSfSdMethod"), ("TIMETRA-OTU-MIB", "tmnxOtuIfBerSfThreshold"), ("TIMETRA-OTU-MIB", "tmnxOtuIfBerSdThreshold"), ("TIMETRA-OTU-MIB", "tmnxOtuIfOtu2LanDataRate"), ("TIMETRA-OTU-MIB", "tmnxOtuIfCfgAlarms"), ("TIMETRA-OTU-MIB", "tmnxOtuIfAlarmState"), ("TIMETRA-OTU-MIB", "tmnxOtuIfHoldTimeUp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfHoldTimeDown"), ("TIMETRA-OTU-MIB", "tmnxOtuIfOtuOperDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuIfBaseConfigGroup = tmnxOtuIfBaseConfigGroup.setStatus('obsolete')
tmnxOtuIfSMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 2)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiTxMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiTx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiRx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuIfSMGroup = tmnxOtuIfSMGroup.setStatus('current')
tmnxOtuStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 3)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsFECCorrZeros"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFFECCorrZeros"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCFECCorrZeros"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsFECCorrOnes"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFFECCorrOnes"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCFECCorrOnes"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsFECUncorrSR"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFFECUncorrSR"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCFECUncorrSR"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsFECSES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsSMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFSMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCSMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsSMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFSMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCSMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsSMSES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsPMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFPMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCPMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsPMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsOFPMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsHCPMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsPMSES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsIsValid"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsFECCorrZeros"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsFECCorrOnes"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsFECUncorrSR"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsFECSES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsSMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsSMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsSMSES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsPMBIP8"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsPMBEI"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsPMSES"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuStatsGroup = tmnxOtuStatsGroup.setStatus('current')
tmnxOtuNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 4)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfAlarmNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuNotificationGroup = tmnxOtuNotificationGroup.setStatus('current')
tmnxOtuGroupsV7v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 5))
tmnxOtuGroupsV8v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6))
tmnxOtuIfBaseConfigGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6, 1)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfTableLastChanged"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRowStatus"), ("TIMETRA-OTU-MIB", "tmnxOtuIfTimeStamp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfFecMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSfSdMethod"), ("TIMETRA-OTU-MIB", "tmnxOtuIfBerSfThreshold"), ("TIMETRA-OTU-MIB", "tmnxOtuIfBerSdThreshold"), ("TIMETRA-OTU-MIB", "tmnxOtuIfOtu2LanDataRate"), ("TIMETRA-OTU-MIB", "tmnxOtuIfCfgAlarms"), ("TIMETRA-OTU-MIB", "tmnxOtuIfAlarmState"), ("TIMETRA-OTU-MIB", "tmnxOtuIfOtuOperDataRate"), ("TIMETRA-OTU-MIB", "tmnxOtuIfAsyncMappingEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuIfBaseConfigGroupV8v0 = tmnxOtuIfBaseConfigGroupV8v0.setStatus('current')
tmnxOtuIfSMGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6, 2)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiTxMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiTx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiExpMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiExpCopyRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTtiExp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfSmTimReaction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuIfSMGroupV8v0 = tmnxOtuIfSMGroupV8v0.setStatus('current')
tmnxOtuStatsGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6, 3)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsFECES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsFECUAS"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsSMES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsSMUAS"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsPMES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsPMUAS"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsNPJ"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsPPJ"), ("TIMETRA-OTU-MIB", "tmnxOtuIfRawStatsElapsedSec"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsFECES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsFECUAS"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsSMES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsSMUAS"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsPMES"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsPMUAS"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsPPJ"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsNPJ"), ("TIMETRA-OTU-MIB", "tmnxOtuIfIntvlStatsElapsedSec"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuStatsGroupV8v0 = tmnxOtuStatsGroupV8v0.setStatus('current')
tmnxOtuIfPMGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6, 4)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfPmTtiTxMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPmTtiTx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPmTtiRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPmTtiExpMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPmTtiExpCopyRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPmTtiExp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPmTimReaction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuIfPMGroupV8v0 = tmnxOtuIfPMGroupV8v0.setStatus('current')
tmnxOtuIfPSIGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6, 5)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTtiTxMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTtiTx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTtiRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTtiExpMode"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTtiExpCopyRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTtiExp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiPayloadTypeTx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiPayloadTypeRx"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiPayloadTypeExp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiTimReaction"), ("TIMETRA-OTU-MIB", "tmnxOtuIfPsiPlmReaction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuIfPSIGroupV8v0 = tmnxOtuIfPSIGroupV8v0.setStatus('current')
tmnxOtuObsoleteV8v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 62, 2, 6, 6)).setObjects(("TIMETRA-OTU-MIB", "tmnxOtuIfHoldTimeUp"), ("TIMETRA-OTU-MIB", "tmnxOtuIfHoldTimeDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOtuObsoleteV8v0Group = tmnxOtuObsoleteV8v0Group.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-OTU-MIB", tmnxOtuIfRawStatsFECES=tmnxOtuIfRawStatsFECES, tmnxOtuIfIntvlStatsPMBEI=tmnxOtuIfIntvlStatsPMBEI, tmnxOtuIfTimeStamp=tmnxOtuIfTimeStamp, tmnxOtuIfIntervalStatsTable=tmnxOtuIfIntervalStatsTable, tmnxOtuCompliance=tmnxOtuCompliance, tmnxOtuIfHoldTimeDown=tmnxOtuIfHoldTimeDown, tmnxOtuIfRawStatsHCFECCorrOnes=tmnxOtuIfRawStatsHCFECCorrOnes, tmnxOtuIfRawStatsFECUAS=tmnxOtuIfRawStatsFECUAS, tmnxOtuIfIntvlStatsPMUAS=tmnxOtuIfIntvlStatsPMUAS, tmnxOtuIfPsiTtiExpMode=tmnxOtuIfPsiTtiExpMode, tmnxOtuConfigurationTimeStamps=tmnxOtuConfigurationTimeStamps, tmnxOtuIfEntry=tmnxOtuIfEntry, tmnxOtuIfRawStatsFECCorrOnes=tmnxOtuIfRawStatsFECCorrOnes, TmnxOtuAlarms=TmnxOtuAlarms, tmnxOtuIfPsiPayloadTypeRx=tmnxOtuIfPsiPayloadTypeRx, tmnxOtuIfRawStatsOFFECCorrZeros=tmnxOtuIfRawStatsOFFECCorrZeros, tmnxOtuNotificationGroup=tmnxOtuNotificationGroup, tmnxOtuIfPMGroupV8v0=tmnxOtuIfPMGroupV8v0, tmnxOtuIfAlarmState=tmnxOtuIfAlarmState, TmnxOtuTtiMode=TmnxOtuTtiMode, tmnxOtuIfRawStatsFECCorrZeros=tmnxOtuIfRawStatsFECCorrZeros, TmnxOtuTimReaction=TmnxOtuTimReaction, tmnxOtuGroups=tmnxOtuGroups, tmnxOtuIfRawStatsHCSMBEI=tmnxOtuIfRawStatsHCSMBEI, PYSNMP_MODULE_ID=tmnxOtuMIBModule, tmnxOtuCompliances=tmnxOtuCompliances, tmnxOtuIfPSIGroupV8v0=tmnxOtuIfPSIGroupV8v0, tmnxOtuIfIntvlStatsPPJ=tmnxOtuIfIntvlStatsPPJ, tmnxOtuComplianceV8v0=tmnxOtuComplianceV8v0, tmnxOtuIfSmTtiRx=tmnxOtuIfSmTtiRx, tmnxOtuIfIntvlStatsPMSES=tmnxOtuIfIntvlStatsPMSES, tmnxOtuIfPmTtiExp=tmnxOtuIfPmTtiExp, tmnxOtuConfigurations=tmnxOtuConfigurations, tmnxOtuIfRawStatsOFPMBEI=tmnxOtuIfRawStatsOFPMBEI, tmnxOtuIfRawStatsOFFECCorrOnes=tmnxOtuIfRawStatsOFFECCorrOnes, tmnxOtuIfIntvlStatsFECCorrOnes=tmnxOtuIfIntvlStatsFECCorrOnes, tmnxOtuIfAlarmNotification=tmnxOtuIfAlarmNotification, tmnxOtuIfIntervalStatsEntry=tmnxOtuIfIntervalStatsEntry, TmnxOtuTtiString=TmnxOtuTtiString, tmnxOtuIfPmTtiTxMode=tmnxOtuIfPmTtiTxMode, tmnxOtuIfRawStatsPPJ=tmnxOtuIfRawStatsPPJ, tmnxOtuIfSmTimReaction=tmnxOtuIfSmTimReaction, tmnxOtuIfPsiTtiExpCopyRx=tmnxOtuIfPsiTtiExpCopyRx, tmnxOtuIfRawStatsFECSES=tmnxOtuIfRawStatsFECSES, tmnxOtuObjs=tmnxOtuObjs, TmnxOtuPsiPayloadType=TmnxOtuPsiPayloadType, TmnxOtu2LanDataRate=TmnxOtu2LanDataRate, tmnxOtuIfCfgAlarms=tmnxOtuIfCfgAlarms, tmnxOtuIfTableLastChanged=tmnxOtuIfTableLastChanged, tmnxOtuIfPmTtiRx=tmnxOtuIfPmTtiRx, tmnxOtuStatsGroupV8v0=tmnxOtuStatsGroupV8v0, tmnxOtuIfIntvlStatsFECUAS=tmnxOtuIfIntvlStatsFECUAS, tmnxOtuIfTable=tmnxOtuIfTable, tmnxOtuIfSmTtiTx=tmnxOtuIfSmTtiTx, tmnxOtuIfRawStatsTable=tmnxOtuIfRawStatsTable, tmnxOtuNotifications=tmnxOtuNotifications, tmnxOtuIfRawStatsFECUncorrSR=tmnxOtuIfRawStatsFECUncorrSR, tmnxOtuIfPsiPlmReaction=tmnxOtuIfPsiPlmReaction, tmnxOtuIfRawStatsOFSMBEI=tmnxOtuIfRawStatsOFSMBEI, tmnxOtuIfRawStatsOFPMBIP8=tmnxOtuIfRawStatsOFPMBIP8, tmnxOtuIfPsiTtiTx=tmnxOtuIfPsiTtiTx, tmnxOtuIfRowStatus=tmnxOtuIfRowStatus, tmnxOtuIfRawStatsHCFECCorrZeros=tmnxOtuIfRawStatsHCFECCorrZeros, tmnxOtuIfRawStatsHCSMBIP8=tmnxOtuIfRawStatsHCSMBIP8, tmnxOtuIfIntvlStatsIsValid=tmnxOtuIfIntvlStatsIsValid, tmnxOtuIfIntvlStatsFECCorrZeros=tmnxOtuIfIntvlStatsFECCorrZeros, tmnxOtuIfPsiPayloadTypeTx=tmnxOtuIfPsiPayloadTypeTx, tmnxOtuIfSmTtiExp=tmnxOtuIfSmTtiExp, tmnxOtuIfPsiTtiTxMode=tmnxOtuIfPsiTtiTxMode, tmnxOtuGroupsV7v0=tmnxOtuGroupsV7v0, tmnxOtuIfIntvlStatsSMBEI=tmnxOtuIfIntvlStatsSMBEI, tmnxOtuIfIntvlStatsIndex=tmnxOtuIfIntvlStatsIndex, tmnxOtuStatsGroup=tmnxOtuStatsGroup, tmnxOtuIfIntvlStatsSMSES=tmnxOtuIfIntvlStatsSMSES, tmnxOtuIfRawStatsPMUAS=tmnxOtuIfRawStatsPMUAS, tmnxOtuIfSMGroup=tmnxOtuIfSMGroup, tmnxOtuIfRawStatsSMSES=tmnxOtuIfRawStatsSMSES, tmnxOtuObsoleteV8v0Group=tmnxOtuObsoleteV8v0Group, tmnxOtuIfRawStatsEntry=tmnxOtuIfRawStatsEntry, tmnxOtuIfBaseConfigGroupV8v0=tmnxOtuIfBaseConfigGroupV8v0, tmnxOtuIfPmTtiExpMode=tmnxOtuIfPmTtiExpMode, tmnxOtuIfRawStatsSMBEI=tmnxOtuIfRawStatsSMBEI, tmnxOtuIfRawStatsPMSES=tmnxOtuIfRawStatsPMSES, tmnxOtuIfRawStatsSMUAS=tmnxOtuIfRawStatsSMUAS, tmnxOtuIfAsyncMappingEnable=tmnxOtuIfAsyncMappingEnable, tmnxOtuIfIntvlStatsSMES=tmnxOtuIfIntvlStatsSMES, tmnxOtuIfPsiTimReaction=tmnxOtuIfPsiTimReaction, tmnxOtuIfIntvlStatsFECSES=tmnxOtuIfIntvlStatsFECSES, tmnxOtuGroupsV8v0=tmnxOtuGroupsV8v0, tmnxOtuIfIntvlStatsFECES=tmnxOtuIfIntvlStatsFECES, tmnxOtuIfSMGroupV8v0=tmnxOtuIfSMGroupV8v0, tmnxOtuIfRawStatsOFFECUncorrSR=tmnxOtuIfRawStatsOFFECUncorrSR, tmnxOtuIfRawStatsElapsedSec=tmnxOtuIfRawStatsElapsedSec, tmnxOtuStatistics=tmnxOtuStatistics, tmnxOtuIfRawStatsNPJ=tmnxOtuIfRawStatsNPJ, tmnxOtuIfPsiTtiExp=tmnxOtuIfPsiTtiExp, tmnxOtuIfPsiPayloadTypeExp=tmnxOtuIfPsiPayloadTypeExp, tmnxOtuIfRawStatsHCPMBIP8=tmnxOtuIfRawStatsHCPMBIP8, tmnxOtuIfSmTtiTxMode=tmnxOtuIfSmTtiTxMode, tmnxOtuIfBerSfThreshold=tmnxOtuIfBerSfThreshold, tmnxOtuIfIntvlStatsPMES=tmnxOtuIfIntvlStatsPMES, tmnxOtuIfIntvlStatsSMUAS=tmnxOtuIfIntvlStatsSMUAS, tmnxOtuIfSfSdMethod=tmnxOtuIfSfSdMethod, tmnxOtuIfRawStatsSMBIP8=tmnxOtuIfRawStatsSMBIP8, tmnxOtuIfGfpMappingEnable=tmnxOtuIfGfpMappingEnable, tmnxOtuIfIntvlStatsPMBIP8=tmnxOtuIfIntvlStatsPMBIP8, tmnxOtuIfRawStatsOFSMBIP8=tmnxOtuIfRawStatsOFSMBIP8, tmnxOtuIfPsiTtiRx=tmnxOtuIfPsiTtiRx, tmnxOtuIfFecMode=tmnxOtuIfFecMode, tmnxOtuNotifyPrefix=tmnxOtuNotifyPrefix, tmnxOtuIfPmTtiTx=tmnxOtuIfPmTtiTx, tmnxOtuConformance=tmnxOtuConformance, tmnxOtuIfIntvlStatsElapsedSec=tmnxOtuIfIntvlStatsElapsedSec, tmnxOtuIfPmTimReaction=tmnxOtuIfPmTimReaction, tmnxOtuIfRawStatsPMBIP8=tmnxOtuIfRawStatsPMBIP8, tmnxOtuIfIntvlStatsFECUncorrSR=tmnxOtuIfIntvlStatsFECUncorrSR, tmnxOtuIfOtuOperDataRate=tmnxOtuIfOtuOperDataRate, tmnxOtuIfIntvlStatsNPJ=tmnxOtuIfIntvlStatsNPJ, tmnxOtuIfOtu2LanDataRate=tmnxOtuIfOtu2LanDataRate, tmnxOtuMIBModule=tmnxOtuMIBModule, tmnxOtuIfBerSdThreshold=tmnxOtuIfBerSdThreshold, tmnxOtuIfHoldTimeUp=tmnxOtuIfHoldTimeUp, tmnxOtuIfIntvlStatsSMBIP8=tmnxOtuIfIntvlStatsSMBIP8, tmnxOtuIfBaseConfigGroup=tmnxOtuIfBaseConfigGroup, TmnxOtuSFSDMethod=TmnxOtuSFSDMethod, tmnxOtuIfPmTtiExpCopyRx=tmnxOtuIfPmTtiExpCopyRx, tmnxOtuIfRawStatsSMES=tmnxOtuIfRawStatsSMES, tmnxOtuIfRawStatsPMBEI=tmnxOtuIfRawStatsPMBEI, TmnxOtuFecMode=TmnxOtuFecMode, tmnxOtuIfSmTtiExpMode=tmnxOtuIfSmTtiExpMode, tmnxOtuIfRawStatsHCPMBEI=tmnxOtuIfRawStatsHCPMBEI, tmnxOtuIfRawStatsPMES=tmnxOtuIfRawStatsPMES, tmnxOtuIfRawStatsHCFECUncorrSR=tmnxOtuIfRawStatsHCFECUncorrSR, tmnxOtuIfSmTtiExpCopyRx=tmnxOtuIfSmTtiExpCopyRx)
