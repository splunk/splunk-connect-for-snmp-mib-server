#
# PySNMP MIB module XEDIA-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XEDIA-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:36:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, Gauge32, Unsigned32, iso, ObjectIdentity, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, TimeTicks, Counter64, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Unsigned32", "iso", "ObjectIdentity", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "TimeTicks", "Counter64", "IpAddress", "ModuleIdentity")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
xediaMibs, = mibBuilder.importSymbols("XEDIA-REG", "xediaMibs")
xediaPolicyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 838, 3, 10))
if mibBuilder.loadTexts: xediaPolicyMIB.setLastUpdated('9702182155Z')
if mibBuilder.loadTexts: xediaPolicyMIB.setOrganization('Xedia Corp.')
xpolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 1))
xpolicyTables = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 2))
xpolicyConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 3))
class XPolicyName(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 32)

class XPriPolicyName(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 32)

class XPolicyAsString(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 32)

xpolicyGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 1))
xpolicyCounts = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2))
xpolicyRxCounts = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1))
xpolicyTxCounts = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2))
xpolicyNumRxConfiguredTotal = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxConfiguredTotal.setStatus('current')
xpolicyNumRxConfiguredValid = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxConfiguredValid.setStatus('current')
xpolicyNumRxConfiguredInValid = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxConfiguredInValid.setStatus('current')
xpolicyNumRxInUseTotal = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxInUseTotal.setStatus('current')
xpolicyNumRxInUseBGP = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxInUseBGP.setStatus('current')
xpolicyNumRxInUseOSPF = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxInUseOSPF.setStatus('current')
xpolicyNumRxInUseRIP = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxInUseRIP.setStatus('current')
xpolicyNumRxInUseStatic = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumRxInUseStatic.setStatus('current')
xpolicyNumTxConfiguredTotal = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxConfiguredTotal.setStatus('current')
xpolicyNumTxConfiguredValid = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxConfiguredValid.setStatus('current')
xpolicyNumTxConfiguredInValid = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxConfiguredInValid.setStatus('current')
xpolicyNumTxInUseTotal = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxInUseTotal.setStatus('current')
xpolicyNumTxInUseBGP = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxInUseBGP.setStatus('current')
xpolicyNumTxInUseOSPF = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxInUseOSPF.setStatus('current')
xpolicyNumTxInUseRIP = MibScalar((1, 3, 6, 1, 4, 1, 838, 3, 10, 1, 2, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyNumTxInUseRIP.setStatus('current')
xpolicyRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1))
xpolicyReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1), )
if mibBuilder.loadTexts: xpolicyReceiveTable.setStatus('current')
xpolicyReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1), ).setIndexNames((0, "XEDIA-POLICY-MIB", "xpolicyRxProtocol"), (0, "XEDIA-POLICY-MIB", "xpolicyRxPeer"), (0, "XEDIA-POLICY-MIB", "xpolicyRxName"))
if mibBuilder.loadTexts: xpolicyReceiveEntry.setStatus('current')
xpolicyRxProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bgp", 1), ("ospf", 2), ("rip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyRxProtocol.setStatus('current')
xpolicyRxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyRxPeer.setStatus('current')
xpolicyRxName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 3), XPolicyName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyRxName.setStatus('current')
xpolicyRxAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxAddrStart.setStatus('current')
xpolicyRxAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 5), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxAddrEnd.setStatus('current')
xpolicyRxAsString = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 6), XPolicyAsString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxAsString.setStatus('current')
xpolicyRxCommunityId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65536)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxCommunityId.setStatus('current')
xpolicyRxReceiveOption = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("receive", 2), ("drop", 3))).clone('receive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxReceiveOption.setStatus('current')
xpolicyRxLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 9), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxLocalPref.setStatus('current')
xpolicyRxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxRowStatus.setStatus('current')
xpolicyRxPrefixMin = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxPrefixMin.setStatus('current')
xpolicyRxPrefixMax = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyRxPrefixMax.setStatus('current')
xpolicySendTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2), )
if mibBuilder.loadTexts: xpolicySendTable.setStatus('current')
xpolicySendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1), ).setIndexNames((0, "XEDIA-POLICY-MIB", "xpolicyTxProtocol"), (0, "XEDIA-POLICY-MIB", "xpolicyTxPeer"), (0, "XEDIA-POLICY-MIB", "xpolicyTxName"))
if mibBuilder.loadTexts: xpolicySendEntry.setStatus('current')
xpolicyTxProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bgp", 1), ("ospf", 2), ("rip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyTxProtocol.setStatus('current')
xpolicyTxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyTxPeer.setStatus('current')
xpolicyTxName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 3), XPolicyName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyTxName.setStatus('current')
xpolicyTxSrcProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("bgp", 1), ("ospf", 2), ("rip", 3), ("local", 4), ("static", 5))).clone('bgp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxSrcProtocol.setStatus('current')
xpolicyTxSrcProtSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("any", 1), ("internal", 2), ("external", 3))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxSrcProtSubType.setStatus('current')
xpolicyTxAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 6), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxAddrStart.setStatus('current')
xpolicyTxAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 7), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxAddrEnd.setStatus('current')
xpolicyTxAsString = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 8), XPolicyAsString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxAsString.setStatus('current')
xpolicyTxCommunityId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65536)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxCommunityId.setStatus('current')
xpolicyTxSendOption = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ignore", 1), ("never", 2), ("normal", 3), ("aggregate", 4))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxSendOption.setStatus('current')
xpolicyTxMED = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 11), Integer32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxMED.setStatus('current')
xpolicyTxMEDAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxMEDAuto.setStatus('current')
xpolicyTxAsPrepend = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxAsPrepend.setStatus('current')
xpolicyTxSendCommunityId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65536)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxSendCommunityId.setStatus('current')
xpolicyTxIgpMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxIgpMetric.setStatus('current')
xpolicyTxIgpMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ospfExtType1", 1), ("ospfExtType2", 2))).clone('ospfExtType1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxIgpMetricType.setStatus('current')
xpolicyTxIgpMetricAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("localPref", 2), ("med", 3), ("igp", 4))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxIgpMetricAuto.setStatus('current')
xpolicyTxNextHopSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxNextHopSelf.setStatus('current')
xpolicyTxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxRowStatus.setStatus('current')
xpolicyTxPrefixMin = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxPrefixMin.setStatus('current')
xpolicyTxPrefixMax = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyTxPrefixMax.setStatus('current')
xpolicyDisplayTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 2), )
if mibBuilder.loadTexts: xpolicyDisplayTable.setStatus('current')
xpolicyDisplayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 2, 1), ).setIndexNames((0, "XEDIA-POLICY-MIB", "xpolicyDisplayIndex"))
if mibBuilder.loadTexts: xpolicyDisplayEntry.setStatus('current')
xpolicyDisplayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: xpolicyDisplayIndex.setStatus('current')
xpolicyRxDisplayString = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyRxDisplayString.setStatus('current')
xpolicyTxDisplayString = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyTxDisplayString.setStatus('current')
xpolicyPeerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 3), )
if mibBuilder.loadTexts: xpolicyPeerGroupTable.setStatus('current')
xpolicyPeerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 3, 1), ).setIndexNames((0, "XEDIA-POLICY-MIB", "xpolicyPeerGroupIndex"), (0, "XEDIA-POLICY-MIB", "xpolicyPeerGroupPeer"))
if mibBuilder.loadTexts: xpolicyPeerGroupEntry.setStatus('current')
xpolicyPeerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyPeerGroupIndex.setStatus('current')
xpolicyPeerGroupPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyPeerGroupPeer.setStatus('current')
xpolicyPeerGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPeerGroupRowStatus.setStatus('current')
xpolicyPriRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4))
xpolicyPriReceiveTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1), )
if mibBuilder.loadTexts: xpolicyPriReceiveTable.setStatus('current')
xpolicyPriReceiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1), ).setIndexNames((0, "XEDIA-POLICY-MIB", "xpolicyRxProtocol"), (0, "XEDIA-POLICY-MIB", "xpolicyRxName"))
if mibBuilder.loadTexts: xpolicyPriReceiveEntry.setStatus('current')
xpolicyPriRxProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("bgp", 1), ("ospf", 2), ("rip", 3), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyPriRxProtocol.setStatus('current')
xpolicyPriRxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxPeer.setStatus('current')
xpolicyPriRxName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 3), XPriPolicyName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyPriRxName.setStatus('current')
xpolicyPriRxAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxAddrStart.setStatus('current')
xpolicyPriRxAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 5), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxAddrEnd.setStatus('current')
xpolicyPriRxAsString = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 6), XPolicyAsString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxAsString.setStatus('current')
xpolicyPriRxCommunityId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65536)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxCommunityId.setStatus('current')
xpolicyPriRxReceiveOption = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ignore", 1), ("receive", 2), ("drop", 3))).clone('receive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxReceiveOption.setStatus('current')
xpolicyPriRxLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 9), Integer32().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxLocalPref.setStatus('current')
xpolicyPriRxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxRowStatus.setStatus('current')
xpolicyPriRxPrefixMin = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxPrefixMin.setStatus('current')
xpolicyPriRxPrefixMax = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxPrefixMax.setStatus('current')
xpolicyPriRxDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriRxDistance.setStatus('current')
xpolicyPriSendTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2), )
if mibBuilder.loadTexts: xpolicyPriSendTable.setStatus('current')
xpolicyPriSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1), ).setIndexNames((0, "XEDIA-POLICY-MIB", "xpolicyTxProtocol"), (0, "XEDIA-POLICY-MIB", "xpolicyTxName"))
if mibBuilder.loadTexts: xpolicyPriSendEntry.setStatus('current')
xpolicyPriTxProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bgp", 1), ("ospf", 2), ("rip", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyPriTxProtocol.setStatus('current')
xpolicyPriTxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxPeer.setStatus('current')
xpolicyPriTxName = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 3), XPriPolicyName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpolicyPriTxName.setStatus('current')
xpolicyPriTxSrcProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("bgp", 1), ("ospf", 2), ("rip", 3), ("local", 4), ("static", 5))).clone('bgp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxSrcProtocol.setStatus('current')
xpolicyPriTxSrcProtSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("any", 1), ("internal", 2), ("external", 3))).clone('any')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxSrcProtSubType.setStatus('current')
xpolicyPriTxAddrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 6), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxAddrStart.setStatus('current')
xpolicyPriTxAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 7), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxAddrEnd.setStatus('current')
xpolicyPriTxAsString = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 8), XPolicyAsString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxAsString.setStatus('current')
xpolicyPriTxCommunityId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65536)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxCommunityId.setStatus('current')
xpolicyPriTxSendOption = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ignore", 1), ("never", 2), ("normal", 3), ("aggregate", 4))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxSendOption.setStatus('current')
xpolicyPriTxMED = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 11), Integer32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxMED.setStatus('current')
xpolicyPriTxMEDAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxMEDAuto.setStatus('current')
xpolicyPriTxAsPrepend = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxAsPrepend.setStatus('current')
xpolicyPriTxSendCommunityId = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(65536)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxSendCommunityId.setStatus('current')
xpolicyPriTxIgpMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxIgpMetric.setStatus('current')
xpolicyPriTxIgpMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ospfExtType1", 1), ("ospfExtType2", 2))).clone('ospfExtType1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxIgpMetricType.setStatus('current')
xpolicyPriTxIgpMetricAuto = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 1), ("localPref", 2), ("med", 3), ("igp", 4))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxIgpMetricAuto.setStatus('current')
xpolicyPriTxNextHopSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxNextHopSelf.setStatus('current')
xpolicyPriTxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxRowStatus.setStatus('current')
xpolicyPriTxPrefixMin = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxPrefixMin.setStatus('current')
xpolicyPriTxPrefixMax = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 10, 2, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpolicyPriTxPrefixMax.setStatus('current')
xpolicyCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 3, 1))
xpolicyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 10, 3, 2))
xpolicyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 838, 3, 10, 3, 1, 1)).setObjects(("XEDIA-POLICY-MIB", "xpolicyAllGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xpolicyCompliance = xpolicyCompliance.setStatus('current')
xpolicyAllGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 10, 3, 2, 1)).setObjects(("XEDIA-POLICY-MIB", "xpolicyNumRxConfiguredTotal"), ("XEDIA-POLICY-MIB", "xpolicyNumRxConfiguredValid"), ("XEDIA-POLICY-MIB", "xpolicyNumRxConfiguredInValid"), ("XEDIA-POLICY-MIB", "xpolicyNumRxInUseTotal"), ("XEDIA-POLICY-MIB", "xpolicyNumRxInUseBGP"), ("XEDIA-POLICY-MIB", "xpolicyNumRxInUseOSPF"), ("XEDIA-POLICY-MIB", "xpolicyNumRxInUseRIP"), ("XEDIA-POLICY-MIB", "xpolicyNumRxInUseStatic"), ("XEDIA-POLICY-MIB", "xpolicyNumTxConfiguredTotal"), ("XEDIA-POLICY-MIB", "xpolicyNumTxConfiguredValid"), ("XEDIA-POLICY-MIB", "xpolicyNumTxConfiguredInValid"), ("XEDIA-POLICY-MIB", "xpolicyNumTxInUseTotal"), ("XEDIA-POLICY-MIB", "xpolicyNumTxInUseBGP"), ("XEDIA-POLICY-MIB", "xpolicyNumTxInUseOSPF"), ("XEDIA-POLICY-MIB", "xpolicyNumTxInUseRIP"), ("XEDIA-POLICY-MIB", "xpolicyRxProtocol"), ("XEDIA-POLICY-MIB", "xpolicyRxPeer"), ("XEDIA-POLICY-MIB", "xpolicyRxName"), ("XEDIA-POLICY-MIB", "xpolicyRxAddrStart"), ("XEDIA-POLICY-MIB", "xpolicyRxAddrEnd"), ("XEDIA-POLICY-MIB", "xpolicyRxAsString"), ("XEDIA-POLICY-MIB", "xpolicyRxCommunityId"), ("XEDIA-POLICY-MIB", "xpolicyRxReceiveOption"), ("XEDIA-POLICY-MIB", "xpolicyRxLocalPref"), ("XEDIA-POLICY-MIB", "xpolicyRxRowStatus"), ("XEDIA-POLICY-MIB", "xpolicyRxPrefixMin"), ("XEDIA-POLICY-MIB", "xpolicyRxPrefixMax"), ("XEDIA-POLICY-MIB", "xpolicyTxProtocol"), ("XEDIA-POLICY-MIB", "xpolicyTxPeer"), ("XEDIA-POLICY-MIB", "xpolicyTxName"), ("XEDIA-POLICY-MIB", "xpolicyTxSrcProtocol"), ("XEDIA-POLICY-MIB", "xpolicyTxSrcProtSubType"), ("XEDIA-POLICY-MIB", "xpolicyTxAddrStart"), ("XEDIA-POLICY-MIB", "xpolicyTxAddrEnd"), ("XEDIA-POLICY-MIB", "xpolicyTxAsString"), ("XEDIA-POLICY-MIB", "xpolicyTxCommunityId"), ("XEDIA-POLICY-MIB", "xpolicyTxSendOption"), ("XEDIA-POLICY-MIB", "xpolicyTxMED"), ("XEDIA-POLICY-MIB", "xpolicyTxMEDAuto"), ("XEDIA-POLICY-MIB", "xpolicyTxAsPrepend"), ("XEDIA-POLICY-MIB", "xpolicyTxSendCommunityId"), ("XEDIA-POLICY-MIB", "xpolicyTxIgpMetric"), ("XEDIA-POLICY-MIB", "xpolicyTxIgpMetricType"), ("XEDIA-POLICY-MIB", "xpolicyTxIgpMetricAuto"), ("XEDIA-POLICY-MIB", "xpolicyTxNextHopSelf"), ("XEDIA-POLICY-MIB", "xpolicyTxRowStatus"), ("XEDIA-POLICY-MIB", "xpolicyTxPrefixMin"), ("XEDIA-POLICY-MIB", "xpolicyTxPrefixMax"), ("XEDIA-POLICY-MIB", "xpolicyRxDisplayString"), ("XEDIA-POLICY-MIB", "xpolicyTxDisplayString"), ("XEDIA-POLICY-MIB", "xpolicyPeerGroupIndex"), ("XEDIA-POLICY-MIB", "xpolicyPeerGroupPeer"), ("XEDIA-POLICY-MIB", "xpolicyPeerGroupRowStatus"), ("XEDIA-POLICY-MIB", "xpolicyPriRxProtocol"), ("XEDIA-POLICY-MIB", "xpolicyPriRxPeer"), ("XEDIA-POLICY-MIB", "xpolicyPriRxName"), ("XEDIA-POLICY-MIB", "xpolicyPriRxAddrStart"), ("XEDIA-POLICY-MIB", "xpolicyPriRxAddrEnd"), ("XEDIA-POLICY-MIB", "xpolicyPriRxAsString"), ("XEDIA-POLICY-MIB", "xpolicyPriRxCommunityId"), ("XEDIA-POLICY-MIB", "xpolicyPriRxReceiveOption"), ("XEDIA-POLICY-MIB", "xpolicyPriRxLocalPref"), ("XEDIA-POLICY-MIB", "xpolicyPriRxRowStatus"), ("XEDIA-POLICY-MIB", "xpolicyPriRxPrefixMin"), ("XEDIA-POLICY-MIB", "xpolicyPriRxPrefixMax"), ("XEDIA-POLICY-MIB", "xpolicyPriTxProtocol"), ("XEDIA-POLICY-MIB", "xpolicyPriTxPeer"), ("XEDIA-POLICY-MIB", "xpolicyPriTxName"), ("XEDIA-POLICY-MIB", "xpolicyPriTxSrcProtocol"), ("XEDIA-POLICY-MIB", "xpolicyPriTxSrcProtSubType"), ("XEDIA-POLICY-MIB", "xpolicyPriTxAddrStart"), ("XEDIA-POLICY-MIB", "xpolicyPriTxAddrEnd"), ("XEDIA-POLICY-MIB", "xpolicyPriTxAsString"), ("XEDIA-POLICY-MIB", "xpolicyPriTxCommunityId"), ("XEDIA-POLICY-MIB", "xpolicyPriTxSendOption"), ("XEDIA-POLICY-MIB", "xpolicyPriTxMED"), ("XEDIA-POLICY-MIB", "xpolicyPriTxMEDAuto"), ("XEDIA-POLICY-MIB", "xpolicyPriTxAsPrepend"), ("XEDIA-POLICY-MIB", "xpolicyPriTxSendCommunityId"), ("XEDIA-POLICY-MIB", "xpolicyPriTxIgpMetric"), ("XEDIA-POLICY-MIB", "xpolicyPriTxIgpMetricType"), ("XEDIA-POLICY-MIB", "xpolicyPriTxIgpMetricAuto"), ("XEDIA-POLICY-MIB", "xpolicyPriTxNextHopSelf"), ("XEDIA-POLICY-MIB", "xpolicyPriTxRowStatus"), ("XEDIA-POLICY-MIB", "xpolicyPriTxPrefixMin"), ("XEDIA-POLICY-MIB", "xpolicyPriTxPrefixMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    xpolicyAllGroup = xpolicyAllGroup.setStatus('current')
mibBuilder.exportSymbols("XEDIA-POLICY-MIB", xpolicyNumRxInUseBGP=xpolicyNumRxInUseBGP, xpolicyNumRxConfiguredTotal=xpolicyNumRxConfiguredTotal, xpolicyNumRxInUseOSPF=xpolicyNumRxInUseOSPF, xpolicyTxPeer=xpolicyTxPeer, xpolicyPriTxNextHopSelf=xpolicyPriTxNextHopSelf, xpolicyPriTxName=xpolicyPriTxName, xpolicyPriTxPrefixMin=xpolicyPriTxPrefixMin, PYSNMP_MODULE_ID=xediaPolicyMIB, xpolicyObjects=xpolicyObjects, xpolicyPriTxAsPrepend=xpolicyPriTxAsPrepend, xpolicyPriTxSrcProtSubType=xpolicyPriTxSrcProtSubType, xpolicyDisplayEntry=xpolicyDisplayEntry, xpolicyPriTxAddrEnd=xpolicyPriTxAddrEnd, xpolicyPriTxIgpMetric=xpolicyPriTxIgpMetric, xpolicyTxIgpMetricAuto=xpolicyTxIgpMetricAuto, xpolicyNumTxInUseBGP=xpolicyNumTxInUseBGP, xpolicyConformance=xpolicyConformance, xpolicyPeerGroupEntry=xpolicyPeerGroupEntry, xpolicyTxAddrEnd=xpolicyTxAddrEnd, XPolicyName=XPolicyName, xpolicyTxSendCommunityId=xpolicyTxSendCommunityId, xpolicyAllGroup=xpolicyAllGroup, xpolicyTxPrefixMin=xpolicyTxPrefixMin, xpolicyReceiveTable=xpolicyReceiveTable, xpolicyRxPeer=xpolicyRxPeer, xpolicyPriTxIgpMetricType=xpolicyPriTxIgpMetricType, xpolicyPriTxRowStatus=xpolicyPriTxRowStatus, xpolicyTxNextHopSelf=xpolicyTxNextHopSelf, xpolicySendTable=xpolicySendTable, xpolicyTxName=xpolicyTxName, xpolicyCompliance=xpolicyCompliance, xpolicyPriRxName=xpolicyPriRxName, xpolicyPriTxSrcProtocol=xpolicyPriTxSrcProtocol, xpolicyPriRxLocalPref=xpolicyPriRxLocalPref, xpolicySendEntry=xpolicySendEntry, xpolicyTxSrcProtocol=xpolicyTxSrcProtocol, xpolicyPriTxAddrStart=xpolicyPriTxAddrStart, xpolicyPriReceiveEntry=xpolicyPriReceiveEntry, xpolicyPriReceiveTable=xpolicyPriReceiveTable, xpolicyPriTxProtocol=xpolicyPriTxProtocol, xpolicyPriTxIgpMetricAuto=xpolicyPriTxIgpMetricAuto, xpolicyNumTxConfiguredValid=xpolicyNumTxConfiguredValid, xpolicyRxAddrEnd=xpolicyRxAddrEnd, xpolicyNumTxInUseRIP=xpolicyNumTxInUseRIP, xpolicyTxAsPrepend=xpolicyTxAsPrepend, xpolicyPriRxPeer=xpolicyPriRxPeer, xpolicyPeerGroupRowStatus=xpolicyPeerGroupRowStatus, xpolicyRxCommunityId=xpolicyRxCommunityId, xpolicyRxProtocol=xpolicyRxProtocol, xpolicyTxProtocol=xpolicyTxProtocol, xpolicyTxAddrStart=xpolicyTxAddrStart, xpolicyPriTxMEDAuto=xpolicyPriTxMEDAuto, xpolicyPeerGroupPeer=xpolicyPeerGroupPeer, xpolicyNumTxInUseTotal=xpolicyNumTxInUseTotal, XPolicyAsString=XPolicyAsString, xpolicyNumTxConfiguredInValid=xpolicyNumTxConfiguredInValid, xpolicyTxSendOption=xpolicyTxSendOption, xpolicyPriRxPrefixMin=xpolicyPriRxPrefixMin, xpolicyPriRxAddrStart=xpolicyPriRxAddrStart, xpolicyRxAddrStart=xpolicyRxAddrStart, xpolicyTxDisplayString=xpolicyTxDisplayString, xpolicyNumRxInUseRIP=xpolicyNumRxInUseRIP, xpolicyNumTxInUseOSPF=xpolicyNumTxInUseOSPF, xpolicyRxPrefixMax=xpolicyRxPrefixMax, xpolicyTxIgpMetric=xpolicyTxIgpMetric, xpolicyReceiveEntry=xpolicyReceiveEntry, xpolicyRxCounts=xpolicyRxCounts, xpolicyTxCommunityId=xpolicyTxCommunityId, xpolicyPriTxPeer=xpolicyPriTxPeer, xpolicyPriRxProtocol=xpolicyPriRxProtocol, xpolicyPriRxAsString=xpolicyPriRxAsString, xpolicyRxPrefixMin=xpolicyRxPrefixMin, xpolicyGeneral=xpolicyGeneral, xpolicyTxMED=xpolicyTxMED, xpolicyPeerGroupIndex=xpolicyPeerGroupIndex, xediaPolicyMIB=xediaPolicyMIB, xpolicyRxReceiveOption=xpolicyRxReceiveOption, xpolicyPriRxPrefixMax=xpolicyPriRxPrefixMax, xpolicyPriRxDistance=xpolicyPriRxDistance, xpolicyTxCounts=xpolicyTxCounts, xpolicyTables=xpolicyTables, xpolicyTxPrefixMax=xpolicyTxPrefixMax, xpolicyPeerGroupTable=xpolicyPeerGroupTable, xpolicyPriRxReceiveOption=xpolicyPriRxReceiveOption, xpolicyPriSendTable=xpolicyPriSendTable, xpolicyPriTxCommunityId=xpolicyPriTxCommunityId, xpolicyRxLocalPref=xpolicyRxLocalPref, xpolicyCounts=xpolicyCounts, xpolicyPriRxRowStatus=xpolicyPriRxRowStatus, xpolicyTxSrcProtSubType=xpolicyTxSrcProtSubType, xpolicyTxRowStatus=xpolicyTxRowStatus, xpolicyNumTxConfiguredTotal=xpolicyNumTxConfiguredTotal, xpolicyRxRowStatus=xpolicyRxRowStatus, xpolicyGroups=xpolicyGroups, xpolicyPriTxPrefixMax=xpolicyPriTxPrefixMax, xpolicyPriTxAsString=xpolicyPriTxAsString, xpolicyPriTxSendOption=xpolicyPriTxSendOption, xpolicyPriRxCommunityId=xpolicyPriRxCommunityId, xpolicyNumRxInUseTotal=xpolicyNumRxInUseTotal, xpolicyCompliances=xpolicyCompliances, xpolicyRxAsString=xpolicyRxAsString, xpolicyPriSendEntry=xpolicyPriSendEntry, xpolicyDisplayIndex=xpolicyDisplayIndex, xpolicyPriRouting=xpolicyPriRouting, xpolicyRxDisplayString=xpolicyRxDisplayString, xpolicyTxMEDAuto=xpolicyTxMEDAuto, xpolicyDisplayTable=xpolicyDisplayTable, xpolicyNumRxConfiguredInValid=xpolicyNumRxConfiguredInValid, XPriPolicyName=XPriPolicyName, xpolicyNumRxConfiguredValid=xpolicyNumRxConfiguredValid, xpolicyTxAsString=xpolicyTxAsString, xpolicyTxIgpMetricType=xpolicyTxIgpMetricType, xpolicyPriRxAddrEnd=xpolicyPriRxAddrEnd, xpolicyPriTxMED=xpolicyPriTxMED, xpolicyNumRxInUseStatic=xpolicyNumRxInUseStatic, xpolicyPriTxSendCommunityId=xpolicyPriTxSendCommunityId, xpolicyRxName=xpolicyRxName, xpolicyRouting=xpolicyRouting)
