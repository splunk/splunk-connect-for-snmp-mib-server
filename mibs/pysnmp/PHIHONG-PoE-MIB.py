#
# PySNMP MIB module PHIHONG-PoE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PHIHONG-PoE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, IpAddress, Counter32, TimeTicks, Unsigned32, Integer32, enterprises, ModuleIdentity, iso, ObjectIdentity, MibIdentifier, Gauge32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "Counter32", "TimeTicks", "Unsigned32", "Integer32", "enterprises", "ModuleIdentity", "iso", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
phihong = MibIdentifier((1, 3, 6, 1, 4, 1, 24852))
poeProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 24852, 2))
poeProductsPart = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeProductsPart.setStatus('current')
poeSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 24852, 2, 2))
poeSystemActionHubReset = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ready", 0), ("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: poeSystemActionHubReset.setStatus('current')
poeSystemActionHubRestoreFactoryDefault = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ready", 0), ("restore", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: poeSystemActionHubRestoreFactoryDefault.setStatus('current')
poeSystemActionHubSaveConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ready", 0), ("save", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: poeSystemActionHubSaveConfiguration.setStatus('current')
poeSystemAllPortPowerEnable = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ready", 0), ("disable", 1), ("enable", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: poeSystemAllPortPowerEnable.setStatus('current')
poeSystemHWVersion = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemHWVersion.setStatus('current')
poeSystemNumberOfChannel = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemNumberOfChannel.setStatus('current')
poeSystemProductPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemProductPartNumber.setStatus('current')
poeSystemFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemFirmwareVersion.setStatus('current')
poeSystemDescription = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeSystemDescription.setStatus('current')
poeSystemConsumptionPower = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 12), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemConsumptionPower.setStatus('current')
poeSystemControlACPower = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 13), Integer32()).setUnits('Watts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeSystemControlACPower.setStatus('current')
poeSystemControlDCPower = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 14), Integer32()).setUnits('Watts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeSystemControlDCPower.setStatus('current')
poeSystemControlBothPower = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 15), Integer32()).setUnits('Watts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeSystemControlBothPower.setStatus('current')
poeSystemParameters = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeSystemParameters.setStatus('current')
poeSystemSnmpVersion = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemSnmpVersion.setStatus('current')
poeSystemPerPortPowerEnable = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(48, 48)).setFixedLength(48)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeSystemPerPortPowerEnable.setStatus('current')
poeSystemStatus = MibScalar((1, 3, 6, 1, 4, 1, 24852, 2, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("overheat", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poeSystemStatus.setStatus('current')
poePortTable = MibTable((1, 3, 6, 1, 4, 1, 24852, 2, 3), )
if mibBuilder.loadTexts: poePortTable.setStatus('current')
poePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1), ).setIndexNames((0, "PHIHONG-PoE-MIB", "poePortIndex"))
if mibBuilder.loadTexts: poePortEntry.setStatus('current')
poePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortIndex.setStatus('current')
poePortPowerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortPowerEnable.setStatus('current')
poePortControlMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 3), Integer32()).setUnits('mWatts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortControlMaxPower.setStatus('current')
poePortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortDescription.setStatus('current')
poePortDetectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 8, 9))).clone(namedValues=NamedValues(("off", 0), ("discR", 1), ("discC", 2), ("class", 3), ("rampUp", 4), ("ramPOEown", 5), ("sampleI", 8), ("sampleV", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortDetectionStatus.setStatus('current')
poePortPowerClassifications = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortPowerClassifications.setStatus('current')
poePortPowerDetectionControl = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortPowerDetectionControl.setStatus('current')
poePortPowerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortPowerPriority.setStatus('current')
poePortPower = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 11), Integer32()).setUnits('mWattes').setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortPower.setStatus('current')
poePortVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 12), DisplayString()).setUnits('dVoltage').setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortVoltage.setStatus('current')
poePortCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 13), Integer32()).setUnits('mAmps').setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortCurrent.setStatus('current')
poePortResistance = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 14), Integer32()).setUnits('ohms').setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortResistance.setStatus('current')
poePortFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: poePortFlags.setStatus('current')
poePortBypassFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortBypassFlags.setStatus('current')
poePortUseClassificationforPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortUseClassificationforPowerLimit.setStatus('current')
poePortLegacyDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poePortLegacyDetection.setStatus('current')
poeTrapsControlTable = MibTable((1, 3, 6, 1, 4, 1, 24852, 2, 4), )
if mibBuilder.loadTexts: poeTrapsControlTable.setStatus('current')
poeTrapsControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 24852, 2, 4, 1), ).setIndexNames((0, "PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"))
if mibBuilder.loadTexts: poeTrapsControlEntry.setStatus('current')
poeTrapsControlGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: poeTrapsControlGroupIndex.setStatus('current')
poeTrapsControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 24852, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapsDisabled", 1), ("trapsEnabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: poeTrapsControlEnable.setStatus('current')
poeTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 24852, 2, 5))
poePortHWFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 1)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortVoltage"))
if mibBuilder.loadTexts: poePortHWFailTrap.setStatus('current')
poePortPeakOverCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 2)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortCurrent"))
if mibBuilder.loadTexts: poePortPeakOverCurrentTrap.setStatus('current')
poePortOverloadTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 3)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortDetectionStatus"))
if mibBuilder.loadTexts: poePortOverloadTrap.setStatus('current')
poePortDiscoveryFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 4)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortVoltage"))
if mibBuilder.loadTexts: poePortDiscoveryFailTrap.setStatus('current')
poePortClassificationFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 5)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortVoltage"))
if mibBuilder.loadTexts: poePortClassificationFailTrap.setStatus('current')
poePortDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 6)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortDetectionStatus"))
if mibBuilder.loadTexts: poePortDisconnectTrap.setStatus('current')
poePortVoltageFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 7)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"), ("PHIHONG-PoE-MIB", "poePortVoltage"))
if mibBuilder.loadTexts: poePortVoltageFailTrap.setStatus('current')
poeSystemOverheatTrap = NotificationType((1, 3, 6, 1, 4, 1, 24852, 2, 5, 8)).setObjects(("PHIHONG-PoE-MIB", "poeTrapsControlGroupIndex"))
if mibBuilder.loadTexts: poeSystemOverheatTrap.setStatus('current')
mibBuilder.exportSymbols("PHIHONG-PoE-MIB", poeSystemActionHubRestoreFactoryDefault=poeSystemActionHubRestoreFactoryDefault, poePortClassificationFailTrap=poePortClassificationFailTrap, poePortVoltage=poePortVoltage, poeSystemControlDCPower=poeSystemControlDCPower, poeProduct=poeProduct, poePortPowerPriority=poePortPowerPriority, poePortPeakOverCurrentTrap=poePortPeakOverCurrentTrap, poePortOverloadTrap=poePortOverloadTrap, poePortControlMaxPower=poePortControlMaxPower, poeSystemActionHubReset=poeSystemActionHubReset, poePortPowerDetectionControl=poePortPowerDetectionControl, poePortDiscoveryFailTrap=poePortDiscoveryFailTrap, poePortDescription=poePortDescription, poeProductsPart=poeProductsPart, poePortDisconnectTrap=poePortDisconnectTrap, poeSystemConsumptionPower=poeSystemConsumptionPower, poePortIndex=poePortIndex, poePortFlags=poePortFlags, poeSystemStatus=poeSystemStatus, poePortEntry=poePortEntry, phihong=phihong, poePortPower=poePortPower, poeSystemPerPortPowerEnable=poeSystemPerPortPowerEnable, poeSystemActionHubSaveConfiguration=poeSystemActionHubSaveConfiguration, poeSystemParameters=poeSystemParameters, poePortCurrent=poePortCurrent, poeSystemFirmwareVersion=poeSystemFirmwareVersion, poePortBypassFlags=poePortBypassFlags, poePortUseClassificationforPowerLimit=poePortUseClassificationforPowerLimit, poeSystemProductPartNumber=poeSystemProductPartNumber, poePortVoltageFailTrap=poePortVoltageFailTrap, poeSystemDescription=poeSystemDescription, poePortPowerEnable=poePortPowerEnable, poeSystemAllPortPowerEnable=poeSystemAllPortPowerEnable, poePortTable=poePortTable, poeTraps=poeTraps, poeSystemOverheatTrap=poeSystemOverheatTrap, poeTrapsControlEntry=poeTrapsControlEntry, poeTrapsControlTable=poeTrapsControlTable, poeSystemControlACPower=poeSystemControlACPower, poeTrapsControlEnable=poeTrapsControlEnable, poePortResistance=poePortResistance, poePortLegacyDetection=poePortLegacyDetection, poePortPowerClassifications=poePortPowerClassifications, poeSystemNumberOfChannel=poeSystemNumberOfChannel, poePortHWFailTrap=poePortHWFailTrap, poeSystem=poeSystem, poeTrapsControlGroupIndex=poeTrapsControlGroupIndex, poePortDetectionStatus=poePortDetectionStatus, poeSystemSnmpVersion=poeSystemSnmpVersion, poeSystemControlBothPower=poeSystemControlBothPower, poeSystemHWVersion=poeSystemHWVersion)
