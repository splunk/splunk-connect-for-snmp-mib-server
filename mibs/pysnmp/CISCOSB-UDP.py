#
# PySNMP MIB module CISCOSB-UDP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-UDP
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ipCidrRouteEntry, ipCidrRouteDest, ipCidrRouteTos, ipCidrRouteMask, ipCidrRouteNextHop = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteEntry", "ipCidrRouteDest", "ipCidrRouteTos", "ipCidrRouteMask", "ipCidrRouteNextHop")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
rip2IfConfEntry, = mibBuilder.importSymbols("RFC1389-MIB", "rip2IfConfEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, iso, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, ModuleIdentity, ObjectIdentity, Unsigned32, Gauge32, NotificationType, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "Gauge32", "NotificationType", "Integer32", "Counter32")
DisplayString, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "TruthValue")
rsUDP = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42))
rsUDP.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rsUDP.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rsUDP.setOrganization('Cisco Small Business')
rsUdpRelayTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1), )
if mibBuilder.loadTexts: rsUdpRelayTable.setStatus('current')
rsUdpRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1, 1), ).setIndexNames((0, "CISCOSB-UDP", "rsUdpRelayDstPort"), (0, "CISCOSB-UDP", "rsUdpRelaySrcIpInf"), (0, "CISCOSB-UDP", "rsUdpRelayDstIpAddr"))
if mibBuilder.loadTexts: rsUdpRelayEntry.setStatus('current')
rsUdpRelayDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstPort.setStatus('current')
rsUdpRelaySrcIpInf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelaySrcIpInf.setStatus('current')
rsUdpRelayDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstIpAddr.setStatus('current')
rsUdpRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayStatus.setStatus('current')
rsUdpRelayUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayUserInfo.setStatus('current')
rsUdpRelayMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayMibVersion.setStatus('current')
rlUdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3), )
if mibBuilder.loadTexts: rlUdpSessionTable.setStatus('current')
rlUdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3, 1), ).setIndexNames((0, "CISCOSB-UDP", "rlUdpSessionLocalAddrType"), (0, "CISCOSB-UDP", "rlUdpSessionLocalAddr"), (0, "CISCOSB-UDP", "rlUdpSessionLocalPort"), (0, "CISCOSB-UDP", "rlUdpSessionAppInst"))
if mibBuilder.loadTexts: rlUdpSessionEntry.setStatus('current')
rlUdpSessionLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: rlUdpSessionLocalAddrType.setStatus('current')
rlUdpSessionLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3, 1, 2), InetAddress())
if mibBuilder.loadTexts: rlUdpSessionLocalAddr.setStatus('current')
rlUdpSessionLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3, 1, 3), Integer32())
if mibBuilder.loadTexts: rlUdpSessionLocalPort.setStatus('current')
rlUdpSessionAppInst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: rlUdpSessionAppInst.setStatus('current')
rlUdpSessionAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 42, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlUdpSessionAppName.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-UDP", rlUdpSessionEntry=rlUdpSessionEntry, rlUdpSessionLocalPort=rlUdpSessionLocalPort, rsUDP=rsUDP, PYSNMP_MODULE_ID=rsUDP, rsUdpRelaySrcIpInf=rsUdpRelaySrcIpInf, rsUdpRelayUserInfo=rsUdpRelayUserInfo, rsUdpRelayDstIpAddr=rsUdpRelayDstIpAddr, rlUdpSessionTable=rlUdpSessionTable, rlUdpSessionAppName=rlUdpSessionAppName, rsUdpRelayDstPort=rsUdpRelayDstPort, rsUdpRelayTable=rsUdpRelayTable, rlUdpSessionLocalAddrType=rlUdpSessionLocalAddrType, rsUdpRelayMibVersion=rsUdpRelayMibVersion, rsUdpRelayStatus=rsUdpRelayStatus, rsUdpRelayEntry=rsUdpRelayEntry, rlUdpSessionLocalAddr=rlUdpSessionLocalAddr, rlUdpSessionAppInst=rlUdpSessionAppInst)
