#
# PySNMP MIB module HP-ENTITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ENTITY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:20:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
hp, icf = mibBuilder.importSymbols("HP-ICF-OID", "hp", "icf")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, MibIdentifier, IpAddress, Integer32, NotificationType, ObjectIdentity, Bits, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "MibIdentifier", "IpAddress", "Integer32", "NotificationType", "ObjectIdentity", "Bits", "Counter32", "iso")
TAddress, TimeStamp, AutonomousType, RowPointer, TDomain, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TAddress", "TimeStamp", "AutonomousType", "RowPointer", "TDomain", "TextualConvention", "DisplayString")
hpEntityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 9))
hpEntityMIB.setRevisions(('2000-11-03 06:36', '1997-03-06 03:26', '1996-09-06 21:35',))
if mibBuilder.loadTexts: hpEntityMIB.setLastUpdated('200011030636Z')
if mibBuilder.loadTexts: hpEntityMIB.setOrganization('Hewlett Packard Company, Network Infrastructure Solutions')
hpEntityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1))
hpEntityPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1))
hpEntityLogical = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2))
hpEntityMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3))
hpEntityGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 4))
class PhysicalIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class PhysicalClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("other", 1), ("unknown", 2), ("chassis", 3), ("backplane", 4), ("container", 5), ("powerSupply", 6), ("fan", 7), ("sensor", 8), ("module", 9), ("port", 10))

hpEntPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1), )
if mibBuilder.loadTexts: hpEntPhysicalTable.setStatus('obsolete')
hpEntPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1), ).setIndexNames((0, "HP-ENTITY-MIB", "hpEntPhysicalIndex"))
if mibBuilder.loadTexts: hpEntPhysicalEntry.setStatus('obsolete')
hpEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: hpEntPhysicalIndex.setStatus('obsolete')
hpEntPhysicalDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalDescr.setStatus('obsolete')
hpEntPhysicalVendorType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalVendorType.setStatus('obsolete')
hpEntPhysicalContainedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalContainedIn.setStatus('obsolete')
hpEntPhysicalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 5), PhysicalClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalClass.setStatus('obsolete')
hpEntPhysicalParentRelPos = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalParentRelPos.setStatus('obsolete')
hpEntPhysicalName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalName.setStatus('obsolete')
hpEntLogicalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1), )
if mibBuilder.loadTexts: hpEntLogicalTable.setStatus('obsolete')
hpEntLogicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1), ).setIndexNames((0, "HP-ENTITY-MIB", "hpEntLogicalIndex"))
if mibBuilder.loadTexts: hpEntLogicalEntry.setStatus('obsolete')
hpEntLogicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpEntLogicalIndex.setStatus('obsolete')
hpEntLogicalDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLogicalDescr.setStatus('obsolete')
hpEntLogicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLogicalType.setStatus('obsolete')
hpEntLogicalCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLogicalCommunity.setStatus('obsolete')
hpEntLogicalTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1, 5), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLogicalTAddress.setStatus('obsolete')
hpEntLogicalTDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 2, 1, 1, 6), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLogicalTDomain.setStatus('obsolete')
hpEntLPMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 1), )
if mibBuilder.loadTexts: hpEntLPMappingTable.setStatus('obsolete')
hpEntLPMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 1, 1), ).setIndexNames((0, "HP-ENTITY-MIB", "hpEntLogicalIndex"), (0, "HP-ENTITY-MIB", "hpEntLPPhysicalIndex"))
if mibBuilder.loadTexts: hpEntLPMappingEntry.setStatus('obsolete')
hpEntLPPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 1, 1, 1), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLPPhysicalIndex.setStatus('obsolete')
hpEntAliasMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 2), )
if mibBuilder.loadTexts: hpEntAliasMappingTable.setStatus('obsolete')
hpEntAliasMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 2, 1), ).setIndexNames((0, "HP-ENTITY-MIB", "hpEntPhysicalIndex"), (0, "HP-ENTITY-MIB", "hpEntAliasLogicalIndexOrZero"))
if mibBuilder.loadTexts: hpEntAliasMappingEntry.setStatus('obsolete')
hpEntAliasLogicalIndexOrZero = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpEntAliasLogicalIndexOrZero.setStatus('obsolete')
hpEntAliasMappingIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 2, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntAliasMappingIdentifier.setStatus('obsolete')
hpEntPhysicalContainsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 3), )
if mibBuilder.loadTexts: hpEntPhysicalContainsTable.setStatus('obsolete')
hpEntPhysicalContainsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 3, 1), ).setIndexNames((0, "HP-ENTITY-MIB", "hpEntPhysicalIndex"), (0, "HP-ENTITY-MIB", "hpEntPhysicalChildIndex"))
if mibBuilder.loadTexts: hpEntPhysicalContainsEntry.setStatus('obsolete')
hpEntPhysicalChildIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 3, 3, 1, 1), PhysicalIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntPhysicalChildIndex.setStatus('obsolete')
hpEntLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 1, 4, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpEntLastChangeTime.setStatus('obsolete')
hpEntityMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 2))
hpEntityMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 2, 0))
hpEntConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 2, 0, 1))
if mibBuilder.loadTexts: hpEntConfigChange.setStatus('obsolete')
hpEntityConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3))
hpEntityCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 1))
hpEntityGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 2))
hpEntityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 1, 1)).setObjects(("HP-ENTITY-MIB", "hpEntityPhysicalGroup"), ("HP-ENTITY-MIB", "hpEntityLogicalGroup"), ("HP-ENTITY-MIB", "hpEntityMappingGroup"), ("HP-ENTITY-MIB", "hpEntityGeneralGroup"), ("HP-ENTITY-MIB", "hpEntityNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEntityCompliance = hpEntityCompliance.setStatus('obsolete')
hpEntityPhysicalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 2, 1)).setObjects(("HP-ENTITY-MIB", "hpEntPhysicalDescr"), ("HP-ENTITY-MIB", "hpEntPhysicalVendorType"), ("HP-ENTITY-MIB", "hpEntPhysicalContainedIn"), ("HP-ENTITY-MIB", "hpEntPhysicalClass"), ("HP-ENTITY-MIB", "hpEntPhysicalParentRelPos"), ("HP-ENTITY-MIB", "hpEntPhysicalName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEntityPhysicalGroup = hpEntityPhysicalGroup.setStatus('obsolete')
hpEntityLogicalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 2, 2)).setObjects(("HP-ENTITY-MIB", "hpEntLogicalDescr"), ("HP-ENTITY-MIB", "hpEntLogicalType"), ("HP-ENTITY-MIB", "hpEntLogicalCommunity"), ("HP-ENTITY-MIB", "hpEntLogicalTAddress"), ("HP-ENTITY-MIB", "hpEntLogicalTDomain"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEntityLogicalGroup = hpEntityLogicalGroup.setStatus('obsolete')
hpEntityMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 2, 3)).setObjects(("HP-ENTITY-MIB", "hpEntLPPhysicalIndex"), ("HP-ENTITY-MIB", "hpEntAliasMappingIdentifier"), ("HP-ENTITY-MIB", "hpEntPhysicalChildIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEntityMappingGroup = hpEntityMappingGroup.setStatus('obsolete')
hpEntityGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 2, 4)).setObjects(("HP-ENTITY-MIB", "hpEntLastChangeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEntityGeneralGroup = hpEntityGeneralGroup.setStatus('obsolete')
hpEntityNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 9, 3, 2, 5)).setObjects(("HP-ENTITY-MIB", "hpEntConfigChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpEntityNotificationsGroup = hpEntityNotificationsGroup.setStatus('obsolete')
mibBuilder.exportSymbols("HP-ENTITY-MIB", hpEntLogicalTable=hpEntLogicalTable, hpEntLogicalTDomain=hpEntLogicalTDomain, hpEntityMIBTrapPrefix=hpEntityMIBTrapPrefix, hpEntAliasLogicalIndexOrZero=hpEntAliasLogicalIndexOrZero, hpEntLogicalTAddress=hpEntLogicalTAddress, hpEntAliasMappingIdentifier=hpEntAliasMappingIdentifier, hpEntityConformance=hpEntityConformance, PYSNMP_MODULE_ID=hpEntityMIB, PhysicalClass=PhysicalClass, hpEntPhysicalEntry=hpEntPhysicalEntry, hpEntityLogicalGroup=hpEntityLogicalGroup, hpEntPhysicalIndex=hpEntPhysicalIndex, PhysicalIndex=PhysicalIndex, hpEntPhysicalVendorType=hpEntPhysicalVendorType, hpEntityMIB=hpEntityMIB, hpEntLogicalIndex=hpEntLogicalIndex, hpEntAliasMappingEntry=hpEntAliasMappingEntry, hpEntPhysicalContainedIn=hpEntPhysicalContainedIn, hpEntityGeneralGroup=hpEntityGeneralGroup, hpEntPhysicalParentRelPos=hpEntPhysicalParentRelPos, hpEntityPhysical=hpEntityPhysical, hpEntityLogical=hpEntityLogical, hpEntityGeneral=hpEntityGeneral, hpEntityMapping=hpEntityMapping, hpEntLogicalCommunity=hpEntLogicalCommunity, hpEntityMIBTraps=hpEntityMIBTraps, hpEntityMappingGroup=hpEntityMappingGroup, hpEntityCompliances=hpEntityCompliances, hpEntPhysicalName=hpEntPhysicalName, hpEntityCompliance=hpEntityCompliance, hpEntPhysicalTable=hpEntPhysicalTable, hpEntPhysicalDescr=hpEntPhysicalDescr, hpEntLastChangeTime=hpEntLastChangeTime, hpEntLogicalDescr=hpEntLogicalDescr, hpEntLPMappingTable=hpEntLPMappingTable, hpEntPhysicalClass=hpEntPhysicalClass, hpEntPhysicalChildIndex=hpEntPhysicalChildIndex, hpEntityPhysicalGroup=hpEntityPhysicalGroup, hpEntLogicalEntry=hpEntLogicalEntry, hpEntLPMappingEntry=hpEntLPMappingEntry, hpEntityMIBObjects=hpEntityMIBObjects, hpEntPhysicalContainsTable=hpEntPhysicalContainsTable, hpEntLPPhysicalIndex=hpEntLPPhysicalIndex, hpEntPhysicalContainsEntry=hpEntPhysicalContainsEntry, hpEntityGroups=hpEntityGroups, hpEntityNotificationsGroup=hpEntityNotificationsGroup, hpEntAliasMappingTable=hpEntAliasMappingTable, hpEntLogicalType=hpEntLogicalType, hpEntConfigChange=hpEntConfigChange)
