#
# PySNMP MIB module REDSTONE-SMI (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDSTONE-SMI
# Produced by pysmi-0.3.4 at Mon Apr 29 20:46:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, ObjectIdentity, Gauge32, TimeTicks, IpAddress, enterprises, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, Unsigned32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "ObjectIdentity", "Gauge32", "TimeTicks", "IpAddress", "enterprises", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "Unsigned32", "iso", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
redstone = ModuleIdentity((1, 3, 6, 1, 4, 1, 2773))
redstone.setRevisions(('1998-01-01 00:00',))
if mibBuilder.loadTexts: redstone.setLastUpdated('9801010000Z')
if mibBuilder.loadTexts: redstone.setOrganization('Redstone Communications, Inc.')
rsRegistration = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1))
if mibBuilder.loadTexts: rsRegistration.setStatus('current')
rsRegGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 1))
if mibBuilder.loadTexts: rsRegGeneric.setStatus('current')
rsRegGenericOther = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 1, 1))
rsRegGenericNone = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 1, 2))
rsRegGenericUnknown = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 1, 3))
rsRegHardware = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2))
if mibBuilder.loadTexts: rsRegHardware.setStatus('current')
rsRegHwPlatform = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2, 1))
if mibBuilder.loadTexts: rsRegHwPlatform.setStatus('current')
rsRegHwPlatformRX1400 = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 2, 1, 1))
rsRegHwPlatformRX700 = MibIdentifier((1, 3, 6, 1, 4, 1, 2773, 1, 2, 1, 2))
rsRegHwModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2, 2))
if mibBuilder.loadTexts: rsRegHwModule.setStatus('current')
rsRegHwChip = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 1, 2, 3))
if mibBuilder.loadTexts: rsRegHwChip.setStatus('current')
rsMgmt = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 2))
if mibBuilder.loadTexts: rsMgmt.setStatus('current')
rsRegAgentCapabilities = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 3))
if mibBuilder.loadTexts: rsRegAgentCapabilities.setStatus('current')
rsExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2773, 4))
if mibBuilder.loadTexts: rsExperiment.setStatus('current')
mibBuilder.exportSymbols("REDSTONE-SMI", rsMgmt=rsMgmt, rsRegHardware=rsRegHardware, rsRegGenericNone=rsRegGenericNone, rsRegGenericOther=rsRegGenericOther, rsRegGeneric=rsRegGeneric, PYSNMP_MODULE_ID=redstone, redstone=redstone, rsRegHwPlatformRX700=rsRegHwPlatformRX700, rsRegHwModule=rsRegHwModule, rsRegHwChip=rsRegHwChip, rsRegHwPlatformRX1400=rsRegHwPlatformRX1400, rsRegGenericUnknown=rsRegGenericUnknown, rsExperiment=rsExperiment, rsRegAgentCapabilities=rsRegAgentCapabilities, rsRegistration=rsRegistration, rsRegHwPlatform=rsRegHwPlatform)
