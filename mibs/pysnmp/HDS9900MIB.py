#
# PySNMP MIB module HDS9900MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HDS9900MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, NotificationType, ModuleIdentity, Unsigned32, Counter64, enterprises, IpAddress, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, iso, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "NotificationType", "ModuleIdentity", "Unsigned32", "Counter64", "enterprises", "IpAddress", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "iso", "Gauge32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hitachi = MibIdentifier((1, 3, 6, 1, 4, 1, 116))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3))
storage = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11))
raid = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11, 4))
raidDummy = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1))
raidRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1))
systemExMib = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5))
storageExMib = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11))
raidExMib = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4))
raidExMibDummy = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1))
raidExMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1))
raidExMibName = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibName.setStatus('mandatory')
raidExMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibVersion.setStatus('mandatory')
raidExMibAgentVersion = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibAgentVersion.setStatus('mandatory')
raidExMibDkcCount = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibDkcCount.setStatus('mandatory')
raidExMibRaidListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5), )
if mibBuilder.loadTexts: raidExMibRaidListTable.setStatus('mandatory')
raidExMibRaidListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1), ).setIndexNames((0, "HDS9900MIB", "raidlistSerialNumber"))
if mibBuilder.loadTexts: raidExMibRaidListEntry.setStatus('mandatory')
raidlistSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistSerialNumber.setStatus('mandatory')
raidlistMibNickName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistMibNickName.setStatus('mandatory')
raidlistDKCMainVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistDKCMainVersion.setStatus('mandatory')
raidlistDKCProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistDKCProductName.setStatus('mandatory')
raidExMibDKCHWTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6), )
if mibBuilder.loadTexts: raidExMibDKCHWTable.setStatus('mandatory')
raidExMibDKCHWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1), ).setIndexNames((0, "HDS9900MIB", "dkcRaidListIndexSerialNumber"))
if mibBuilder.loadTexts: raidExMibDKCHWEntry.setStatus('mandatory')
dkcRaidListIndexSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcRaidListIndexSerialNumber.setStatus('mandatory')
dkcHWProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWProcessor.setStatus('mandatory')
dkcHWCSW = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWCSW.setStatus('mandatory')
dkcHWCache = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWCache.setStatus('mandatory')
dkcHWSM = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWSM.setStatus('mandatory')
dkcHWPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWPS.setStatus('mandatory')
dkcHWBattery = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWBattery.setStatus('mandatory')
dkcHWFan = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWFan.setStatus('mandatory')
dkcHWEnvironment = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWEnvironment.setStatus('mandatory')
raidExMibDKUHWTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7), )
if mibBuilder.loadTexts: raidExMibDKUHWTable.setStatus('mandatory')
raidExMibDKUHWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1), ).setIndexNames((0, "HDS9900MIB", "dkuRaidListIndexSerialNumber"))
if mibBuilder.loadTexts: raidExMibDKUHWEntry.setStatus('mandatory')
dkuRaidListIndexSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuRaidListIndexSerialNumber.setStatus('mandatory')
dkuHWPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWPS.setStatus('mandatory')
dkuHWFan = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWFan.setStatus('mandatory')
dkuHWEnvironment = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWEnvironment.setStatus('mandatory')
dkuHWDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWDrive.setStatus('mandatory')
raidExMibTrapListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8), )
if mibBuilder.loadTexts: raidExMibTrapListTable.setStatus('mandatory')
raidExMibTrapListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1), ).setIndexNames((0, "HDS9900MIB", "eventListIndexSerialNumber"), (0, "HDS9900MIB", "eventListIndexRecordNo"))
if mibBuilder.loadTexts: raidExMibTrapListEntry.setStatus('mandatory')
eventListIndexSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListIndexSerialNumber.setStatus('mandatory')
eventListNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListNickname.setStatus('mandatory')
eventListIndexRecordNo = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListIndexRecordNo.setStatus('mandatory')
eventListREFCODE = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListREFCODE.setStatus('mandatory')
raidExMibCommandTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9), )
if mibBuilder.loadTexts: raidExMibCommandTable.setStatus('mandatory')
raidExMibCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1), ).setIndexNames((0, "HDS9900MIB", "commandSerialNumber"))
if mibBuilder.loadTexts: raidExMibCommandEntry.setStatus('mandatory')
commandSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandSerialNumber.setStatus('mandatory')
commandManagerName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandManagerName.setStatus('mandatory')
commandKind = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandKind.setStatus('mandatory')
commandStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandStatus.setStatus('mandatory')
commandProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandProgress.setStatus('mandatory')
commandRefreshTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandRefreshTarget.setStatus('mandatory')
commandRefreshTarget2 = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 9, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandRefreshTarget2.setStatus('mandatory')
raidExMibLDev = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10))
raidExMibLogicalDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1), )
if mibBuilder.loadTexts: raidExMibLogicalDeviceTable.setStatus('mandatory')
raidExMibLogicalDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1), ).setIndexNames((0, "HDS9900MIB", "logicalDeviceSerialNumber"), (0, "HDS9900MIB", "logicalDeviceCU"), (0, "HDS9900MIB", "logicalDeviceLDEV"))
if mibBuilder.loadTexts: raidExMibLogicalDeviceEntry.setStatus('mandatory')
logicalDeviceSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceSerialNumber.setStatus('mandatory')
logicalDeviceCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceCU.setStatus('mandatory')
logicalDeviceLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceLDEV.setStatus('mandatory')
logicalDeviceEmulation = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceEmulation.setStatus('mandatory')
logicalDeviceCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceCylinder.setStatus('mandatory')
logicalDeviceLUExpand = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceLUExpand.setStatus('mandatory')
logicalDeviceLUPath = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceLUPath.setStatus('mandatory')
logicalDeviceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceSize.setStatus('mandatory')
logicalDeviceLBA = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceLBA.setStatus('mandatory')
logicalDeviceHIHSMReserve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logicalDeviceHIHSMReserve.setStatus('mandatory')
logicalDeviceControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logicalDeviceControlStatus.setStatus('mandatory')
logicalDeviceRAIDLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceRAIDLevel.setStatus('mandatory')
logicalDeviceSlotSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 10, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logicalDeviceSlotSize.setStatus('mandatory')
raidExMibLUConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11))
raidExMibPortTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1), )
if mibBuilder.loadTexts: raidExMibPortTable.setStatus('mandatory')
raidExMibPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1), ).setIndexNames((0, "HDS9900MIB", "portSerialNumber"), (0, "HDS9900MIB", "portID"))
if mibBuilder.loadTexts: raidExMibPortEntry.setStatus('mandatory')
portSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSerialNumber.setStatus('mandatory')
portID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portID.setStatus('mandatory')
portKind = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portKind.setStatus('mandatory')
portHostMode = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portHostMode.setStatus('mandatory')
portFibreAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portFibreAddress.setStatus('mandatory')
portFibreTopology = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portFibreTopology.setStatus('mandatory')
portControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlStatus.setStatus('mandatory')
portDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portDisplayName.setStatus('mandatory')
portWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: portWWN.setStatus('mandatory')
raidExMibLU = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2))
raidExMibLUInformationLUTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1), )
if mibBuilder.loadTexts: raidExMibLUInformationLUTable.setStatus('mandatory')
raidExMibLUInformationLUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1), ).setIndexNames((0, "HDS9900MIB", "luSerialNumber"), (0, "HDS9900MIB", "luDeviceCU"), (0, "HDS9900MIB", "luDeviceLDEV"))
if mibBuilder.loadTexts: raidExMibLUInformationLUEntry.setStatus('mandatory')
luSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luSerialNumber.setStatus('mandatory')
luDeviceCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luDeviceCU.setStatus('mandatory')
luDeviceLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luDeviceLDEV.setStatus('mandatory')
luEmuID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luEmuID.setStatus('mandatory')
luCount = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luCount.setStatus('mandatory')
luSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luSize.setStatus('mandatory')
luPath = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luPath.setStatus('mandatory')
luCommandDev = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luCommandDev.setStatus('mandatory')
luControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luControlStatus.setStatus('mandatory')
raidExMibLUPathTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2), )
if mibBuilder.loadTexts: raidExMibLUPathTable.setStatus('mandatory')
raidExMibLUPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1), ).setIndexNames((0, "HDS9900MIB", "luPathSerialNumber"), (0, "HDS9900MIB", "luPathControlIndex"))
if mibBuilder.loadTexts: raidExMibLUPathEntry.setStatus('mandatory')
luPathSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luPathSerialNumber.setStatus('mandatory')
luPathControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luPathControlIndex.setStatus('mandatory')
luPathPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luPathPortID.setStatus('mandatory')
luPathSCSIID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luPathSCSIID.setStatus('mandatory')
luPathLUN = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luPathLUN.setStatus('mandatory')
luPathDeviceCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luPathDeviceCU.setStatus('mandatory')
luPathDeviceLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luPathDeviceLDEV.setStatus('mandatory')
luPathControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 2, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luPathControlStatus.setStatus('mandatory')
raidExMibLUSE = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3))
raidExMibLUSEStructureTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1), )
if mibBuilder.loadTexts: raidExMibLUSEStructureTable.setStatus('mandatory')
raidExMibLUSEStructureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1), ).setIndexNames((0, "HDS9900MIB", "luSEStructSerialNumber"), (0, "HDS9900MIB", "luSEStructControlIndex"), (0, "HDS9900MIB", "luSEStructOffset"))
if mibBuilder.loadTexts: raidExMibLUSEStructureEntry.setStatus('mandatory')
luSEStructSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luSEStructSerialNumber.setStatus('mandatory')
luSEStructControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luSEStructControlIndex.setStatus('mandatory')
luSEStructOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: luSEStructOffset.setStatus('mandatory')
luSEStructTopDeviceCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luSEStructTopDeviceCU.setStatus('mandatory')
luSEStructTopDeviceLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luSEStructTopDeviceLDEV.setStatus('mandatory')
luSEStructDeviceCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luSEStructDeviceCU.setStatus('mandatory')
luSEStructDeviceLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luSEStructDeviceLDEV.setStatus('mandatory')
luSEStructControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: luSEStructControlStatus.setStatus('mandatory')
raidExMibLUNS = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4))
raidExMibLUNSSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 1), )
if mibBuilder.loadTexts: raidExMibLUNSSwitchTable.setStatus('mandatory')
raidExMibLUNSSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 1, 1), ).setIndexNames((0, "HDS9900MIB", "switchSerialNumber"), (0, "HDS9900MIB", "switchPortID"))
if mibBuilder.loadTexts: raidExMibLUNSSwitchEntry.setStatus('mandatory')
switchSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchSerialNumber.setStatus('mandatory')
switchPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchPortID.setStatus('mandatory')
switchOnOff = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchOnOff.setStatus('mandatory')
switchControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchControlStatus.setStatus('mandatory')
raidExMibLUNSWWNTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2), )
if mibBuilder.loadTexts: raidExMibLUNSWWNTable.setStatus('mandatory')
raidExMibLUNSWWNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1), ).setIndexNames((0, "HDS9900MIB", "wwnSerialNumber"), (0, "HDS9900MIB", "wwnPortID"), (0, "HDS9900MIB", "wwnControlIndex"))
if mibBuilder.loadTexts: raidExMibLUNSWWNEntry.setStatus('mandatory')
wwnSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwnSerialNumber.setStatus('mandatory')
wwnPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwnPortID.setStatus('mandatory')
wwnControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwnControlIndex.setStatus('mandatory')
wwnWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnWWN.setStatus('mandatory')
wwnID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnID.setStatus('mandatory')
wwnNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnNickname.setStatus('deprecated')
wwnUseNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnUseNickname.setStatus('mandatory')
wwnControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnControlStatus.setStatus('mandatory')
raidExMibLUNSWWNGroupTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3), )
if mibBuilder.loadTexts: raidExMibLUNSWWNGroupTable.setStatus('mandatory')
raidExMibLUNSWWNGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1), ).setIndexNames((0, "HDS9900MIB", "wwnGroupSerialNumber"), (0, "HDS9900MIB", "wwnGroupPortID"), (0, "HDS9900MIB", "wwnGroupControlIndex"))
if mibBuilder.loadTexts: raidExMibLUNSWWNGroupEntry.setStatus('mandatory')
wwnGroupSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwnGroupSerialNumber.setStatus('mandatory')
wwnGroupPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwnGroupPortID.setStatus('mandatory')
wwnGroupControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwnGroupControlIndex.setStatus('mandatory')
wwnGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnGroupID.setStatus('mandatory')
wwnGroupNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnGroupNickname.setStatus('mandatory')
wwnGroupControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnGroupControlStatus.setStatus('mandatory')
wwnGroupedWWNsVL = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 3, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwnGroupedWWNsVL.setStatus('mandatory')
raidExMibLUNSLUNTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4), )
if mibBuilder.loadTexts: raidExMibLUNSLUNTable.setStatus('mandatory')
raidExMibLUNSLUNEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1), ).setIndexNames((0, "HDS9900MIB", "lunSerialNumber"), (0, "HDS9900MIB", "lunPortID"), (0, "HDS9900MIB", "lunLUN"))
if mibBuilder.loadTexts: raidExMibLUNSLUNEntry.setStatus('mandatory')
lunSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunSerialNumber.setStatus('mandatory')
lunPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunPortID.setStatus('mandatory')
lunLUN = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunLUN.setStatus('mandatory')
lunControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunControlStatus.setStatus('mandatory')
lunWWNSecurityVL = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunWWNSecurityVL.setStatus('mandatory')
lunWWNGroupSecurityVL = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 4, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunWWNGroupSecurityVL.setStatus('mandatory')
raidExMibLUNSLUNGroupTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5), )
if mibBuilder.loadTexts: raidExMibLUNSLUNGroupTable.setStatus('mandatory')
raidExMibLUNSLUNGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1), ).setIndexNames((0, "HDS9900MIB", "lunGroupSerialNumber"), (0, "HDS9900MIB", "lunGroupPortID"), (0, "HDS9900MIB", "lunGroupControlIndex"))
if mibBuilder.loadTexts: raidExMibLUNSLUNGroupEntry.setStatus('mandatory')
lunGroupSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunGroupSerialNumber.setStatus('mandatory')
lunGroupPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunGroupPortID.setStatus('mandatory')
lunGroupControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lunGroupControlIndex.setStatus('mandatory')
lunGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunGroupID.setStatus('mandatory')
lunGroupNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunGroupNickname.setStatus('deprecated')
lunGroupControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunGroupControlStatus.setStatus('mandatory')
lunGroupedLUNsVL = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunGroupedLUNsVL.setStatus('mandatory')
lunGroupWWNSecurityVL = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunGroupWWNSecurityVL.setStatus('mandatory')
lunGroupWWNGroupSecurityVL = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 11, 4, 5, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lunGroupWWNGroupSecurityVL.setStatus('mandatory')
raidExMibDCRConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12))
raidExMibCacheSizeTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 1), )
if mibBuilder.loadTexts: raidExMibCacheSizeTable.setStatus('mandatory')
raidExMibCacheSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 1, 1), ).setIndexNames((0, "HDS9900MIB", "cacheSizeSerialNumber"))
if mibBuilder.loadTexts: raidExMibCacheSizeEntry.setStatus('mandatory')
cacheSizeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSizeSerialNumber.setStatus('mandatory')
cacheSizeTotalCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSizeTotalCacheSize.setStatus('mandatory')
cacheSizeUseCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSizeUseCacheSize.setStatus('mandatory')
cacheSizeRemainCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSizeRemainCacheSize.setStatus('mandatory')
raidExMibCacheDCRTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2), )
if mibBuilder.loadTexts: raidExMibCacheDCRTable.setStatus('mandatory')
raidExMibCacheDCREntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1), ).setIndexNames((0, "HDS9900MIB", "cacheDCRSerialNumber"), (0, "HDS9900MIB", "cacheDCRCU"), (0, "HDS9900MIB", "cacheDCRLDEV"), (0, "HDS9900MIB", "cacheDCRControlIndex"))
if mibBuilder.loadTexts: raidExMibCacheDCREntry.setStatus('mandatory')
cacheDCRSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRSerialNumber.setStatus('mandatory')
cacheDCRCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRCU.setStatus('mandatory')
cacheDCRLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRLDEV.setStatus('mandatory')
cacheDCRControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRControlIndex.setStatus('mandatory')
cacheDCRMode = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCRMode.setStatus('mandatory')
cacheDCRAllOfDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 6), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cacheDCRAllOfDevice.setStatus('mandatory')
cacheDCRStartCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCRStartCylinder.setStatus('mandatory')
cacheDCRStartHead = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCRStartHead.setStatus('mandatory')
cacheDCREndCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCREndCylinder.setStatus('mandatory')
cacheDCREndHead = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCREndHead.setStatus('mandatory')
cacheDCRCylinderSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRCylinderSize.setStatus('mandatory')
cacheDCRHeadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRHeadSize.setStatus('mandatory')
cacheDCRStartLBA = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCRStartLBA.setStatus('mandatory')
cacheDCREndLBA = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCREndLBA.setStatus('mandatory')
cacheDCRLBASize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDCRLBASize.setStatus('mandatory')
cacheDCRControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 12, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cacheDCRControlStatus.setStatus('mandatory')
raidExMibCVSConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13))
raidExMibCustomizedVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3), )
if mibBuilder.loadTexts: raidExMibCustomizedVolumeTable.setStatus('mandatory')
raidExMibCustomizedVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1), ).setIndexNames((0, "HDS9900MIB", "customizedVolumeSerialNumber"), (0, "HDS9900MIB", "customizedVolumeFB4Number"), (0, "HDS9900MIB", "customizedVolumePGNumber"), (0, "HDS9900MIB", "customizedVolumeCU"), (0, "HDS9900MIB", "customizedVolumeLDEV"))
if mibBuilder.loadTexts: raidExMibCustomizedVolumeEntry.setStatus('mandatory')
customizedVolumeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeSerialNumber.setStatus('mandatory')
customizedVolumeFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeFB4Number.setStatus('mandatory')
customizedVolumePGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumePGNumber.setStatus('mandatory')
customizedVolumeCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeCU.setStatus('mandatory')
customizedVolumeLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeLDEV.setStatus('mandatory')
customizedVolumeType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeType.setStatus('mandatory')
customizedVolumeEmulation = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: customizedVolumeEmulation.setStatus('mandatory')
customizedVolumeUserCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: customizedVolumeUserCylinder.setStatus('mandatory')
customizedVolumeUserSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: customizedVolumeUserSize.setStatus('mandatory')
customizedVolumeControlCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeControlCylinder.setStatus('mandatory')
customizedVolumeControlSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: customizedVolumeControlSize.setStatus('mandatory')
customizedVolumeControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: customizedVolumeControlStatus.setStatus('mandatory')
raidExMibCVSDeletedVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4), )
if mibBuilder.loadTexts: raidExMibCVSDeletedVolumeTable.setStatus('mandatory')
raidExMibCVSDeletedVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1), ).setIndexNames((0, "HDS9900MIB", "cvsDVSerialNumber"), (0, "HDS9900MIB", "cvsDVFB4Number"), (0, "HDS9900MIB", "cvsDVPGNumber"), (0, "HDS9900MIB", "cvsDVControlIndex"))
if mibBuilder.loadTexts: raidExMibCVSDeletedVolumeEntry.setStatus('mandatory')
cvsDVSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVSerialNumber.setStatus('mandatory')
cvsDVFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVFB4Number.setStatus('mandatory')
cvsDVPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVPGNumber.setStatus('mandatory')
cvsDVControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVControlIndex.setStatus('mandatory')
cvsDVCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 5), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cvsDVCU.setStatus('mandatory')
cvsDVLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 6), Integer32()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cvsDVLDEV.setStatus('mandatory')
cvsDVEmulation = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVEmulation.setStatus('mandatory')
cvsDVCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVCylinder.setStatus('mandatory')
cvsDVSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVSize.setStatus('mandatory')
cvsDVControlCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVControlCylinder.setStatus('mandatory')
cvsDVControlSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsDVControlSize.setStatus('mandatory')
cvsDVControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvsDVControlStatus.setStatus('mandatory')
raidExMibCVSFreeSpaceTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5), )
if mibBuilder.loadTexts: raidExMibCVSFreeSpaceTable.setStatus('mandatory')
raidExMibCVSFreeSpaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1), ).setIndexNames((0, "HDS9900MIB", "cvsFSSerialNumber"), (0, "HDS9900MIB", "cvsFSFB4Number"), (0, "HDS9900MIB", "cvsFSPGNumber"), (0, "HDS9900MIB", "cvsFSControlIndex"))
if mibBuilder.loadTexts: raidExMibCVSFreeSpaceEntry.setStatus('mandatory')
cvsFSSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsFSSerialNumber.setStatus('mandatory')
cvsFSFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsFSFB4Number.setStatus('mandatory')
cvsFSPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsFSPGNumber.setStatus('mandatory')
cvsFSControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsFSControlIndex.setStatus('mandatory')
cvsFSCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsFSCylinder.setStatus('mandatory')
cvsFSSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsFSSize.setStatus('mandatory')
raidExMibCVSParityGroupTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6), )
if mibBuilder.loadTexts: raidExMibCVSParityGroupTable.setStatus('mandatory')
raidExMibCVSParityGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1), ).setIndexNames((0, "HDS9900MIB", "cvsPGSerialNumber"), (0, "HDS9900MIB", "cvsPGFB4Number"), (0, "HDS9900MIB", "cvsPGPGNumber"))
if mibBuilder.loadTexts: raidExMibCVSParityGroupEntry.setStatus('mandatory')
cvsPGSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGSerialNumber.setStatus('mandatory')
cvsPGFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGFB4Number.setStatus('mandatory')
cvsPGPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGPGNumber.setStatus('mandatory')
cvsPGDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGDisplayName.setStatus('mandatory')
cvsPGRAIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGRAIDType.setStatus('mandatory')
cvsPGDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGDriveType.setStatus('mandatory')
cvsPGFreeCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGFreeCylinder.setStatus('mandatory')
cvsPGFreeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsPGFreeSize.setStatus('mandatory')
cvsPGControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 6, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvsPGControlStatus.setStatus('mandatory')
raidExMibCVSCUInfTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 7), )
if mibBuilder.loadTexts: raidExMibCVSCUInfTable.setStatus('mandatory')
raidExMibCVSCUInfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 7, 1), ).setIndexNames((0, "HDS9900MIB", "cvsCUInfSerialNumber"))
if mibBuilder.loadTexts: raidExMibCVSCUInfEntry.setStatus('mandatory')
cvsCUInfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsCUInfSerialNumber.setStatus('mandatory')
cvsCUInfFreeCUNum = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 13, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvsCUInfFreeCUNum.setStatus('mandatory')
raidExMibSubsystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14))
raidExMibSubsystemIDTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1), )
if mibBuilder.loadTexts: raidExMibSubsystemIDTable.setStatus('mandatory')
raidExMibSubsystemIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1), ).setIndexNames((0, "HDS9900MIB", "subsystemIDSerialNumber"), (0, "HDS9900MIB", "subsystemIDCU"), (0, "HDS9900MIB", "subsystemIDStartLDEV"))
if mibBuilder.loadTexts: raidExMibSubsystemIDEntry.setStatus('mandatory')
subsystemIDSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subsystemIDSerialNumber.setStatus('mandatory')
subsystemIDCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subsystemIDCU.setStatus('mandatory')
subsystemIDStartLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subsystemIDStartLDEV.setStatus('mandatory')
subsystemIDEndLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: subsystemIDEndLDEV.setStatus('mandatory')
subsystemIDSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subsystemIDSSID.setStatus('mandatory')
subsystemIDControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: subsystemIDControlStatus.setStatus('mandatory')
raidExMibSSIDBoundaryTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 2), )
if mibBuilder.loadTexts: raidExMibSSIDBoundaryTable.setStatus('mandatory')
raidExMibSSIDBoundaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 2, 1), ).setIndexNames((0, "HDS9900MIB", "ssidBoundarySerialNumber"))
if mibBuilder.loadTexts: raidExMibSSIDBoundaryEntry.setStatus('mandatory')
ssidBoundarySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidBoundarySerialNumber.setStatus('mandatory')
ssidBoundaryBoundary = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 14, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidBoundaryBoundary.setStatus('mandatory')
raidExMibEnvironmentInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 15))
raidExMibTimeZoneDataTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 15, 1), )
if mibBuilder.loadTexts: raidExMibTimeZoneDataTable.setStatus('mandatory')
raidExMibTimeZoneDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 15, 1, 1), ).setIndexNames((0, "HDS9900MIB", "timeZoneSerialNumber"))
if mibBuilder.loadTexts: raidExMibTimeZoneDataEntry.setStatus('mandatory')
timeZoneSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeZoneSerialNumber.setStatus('mandatory')
timeZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 15, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeZoneID.setStatus('mandatory')
raidExMibChannelAdapter = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16))
raidExMibCHAConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1), )
if mibBuilder.loadTexts: raidExMibCHAConfigurationTable.setStatus('mandatory')
raidExMibCHAConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1), ).setIndexNames((0, "HDS9900MIB", "chaSerialNumber"), (0, "HDS9900MIB", "chaClusterNumber"), (0, "HDS9900MIB", "chaNumber"))
if mibBuilder.loadTexts: raidExMibCHAConfigurationEntry.setStatus('mandatory')
chaSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chaSerialNumber.setStatus('mandatory')
chaClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chaClusterNumber.setStatus('mandatory')
chaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chaNumber.setStatus('mandatory')
chaDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chaDisplayName.setStatus('mandatory')
chaPackageType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chaPackageType.setStatus('mandatory')
chaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chaMode.setStatus('mandatory')
chaControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chaControlStatus.setStatus('mandatory')
raidExMibCHPConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2), )
if mibBuilder.loadTexts: raidExMibCHPConfigurationTable.setStatus('mandatory')
raidExMibCHPConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2, 1), ).setIndexNames((0, "HDS9900MIB", "chpSerialNumber"), (0, "HDS9900MIB", "chpClusterNumber"), (0, "HDS9900MIB", "chpCHANumber"), (0, "HDS9900MIB", "chpNumber"))
if mibBuilder.loadTexts: raidExMibCHPConfigurationEntry.setStatus('mandatory')
chpSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chpSerialNumber.setStatus('mandatory')
chpClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chpClusterNumber.setStatus('mandatory')
chpCHANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chpCHANumber.setStatus('mandatory')
chpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chpNumber.setStatus('mandatory')
chpDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 16, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chpDisplayName.setStatus('mandatory')
raidExMibDiskAdapter = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17))
raidExMibDKAConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 1), )
if mibBuilder.loadTexts: raidExMibDKAConfigurationTable.setStatus('mandatory')
raidExMibDKAConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 1, 1), ).setIndexNames((0, "HDS9900MIB", "dkaSerialNumber"), (0, "HDS9900MIB", "dkaClusterNumber"), (0, "HDS9900MIB", "dkaNumber"))
if mibBuilder.loadTexts: raidExMibDKAConfigurationEntry.setStatus('mandatory')
dkaSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkaSerialNumber.setStatus('mandatory')
dkaClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkaClusterNumber.setStatus('mandatory')
dkaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkaNumber.setStatus('mandatory')
dkaDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkaDisplayName.setStatus('mandatory')
raidExMibDKPConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2), )
if mibBuilder.loadTexts: raidExMibDKPConfigurationTable.setStatus('mandatory')
raidExMibDKPConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2, 1), ).setIndexNames((0, "HDS9900MIB", "dkpSerialNumber"), (0, "HDS9900MIB", "dkpClusterNumber"), (0, "HDS9900MIB", "dkpDKANumber"), (0, "HDS9900MIB", "dkpNumber"))
if mibBuilder.loadTexts: raidExMibDKPConfigurationEntry.setStatus('mandatory')
dkpSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkpSerialNumber.setStatus('mandatory')
dkpClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkpClusterNumber.setStatus('mandatory')
dkpDKANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkpDKANumber.setStatus('mandatory')
dkpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkpNumber.setStatus('mandatory')
dkpDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkpDisplayName.setStatus('mandatory')
raidExMibDRRConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3), )
if mibBuilder.loadTexts: raidExMibDRRConfigurationTable.setStatus('mandatory')
raidExMibDRRConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3, 1), ).setIndexNames((0, "HDS9900MIB", "drrSerialNumber"), (0, "HDS9900MIB", "drrClusterNumber"), (0, "HDS9900MIB", "drrDKANumber"), (0, "HDS9900MIB", "drrNumber"))
if mibBuilder.loadTexts: raidExMibDRRConfigurationEntry.setStatus('mandatory')
drrSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrSerialNumber.setStatus('mandatory')
drrClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrClusterNumber.setStatus('mandatory')
drrDKANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrDKANumber.setStatus('mandatory')
drrNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrNumber.setStatus('mandatory')
drrDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 17, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drrDisplayName.setStatus('mandatory')
raidExMibParityGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18))
raidExMibParityGroupListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1), )
if mibBuilder.loadTexts: raidExMibParityGroupListTable.setStatus('mandatory')
raidExMibParityGroupListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1), ).setIndexNames((0, "HDS9900MIB", "pgSerialNumber"), (0, "HDS9900MIB", "pgFB4Number"), (0, "HDS9900MIB", "pgNumber"))
if mibBuilder.loadTexts: raidExMibParityGroupListEntry.setStatus('mandatory')
pgSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgSerialNumber.setStatus('mandatory')
pgFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgFB4Number.setStatus('mandatory')
pgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgNumber.setStatus('mandatory')
pgDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgDisplayName.setStatus('mandatory')
pgRAIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgRAIDType.setStatus('mandatory')
pgDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgDriveType.setStatus('mandatory')
pgHIHSMFixed = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgHIHSMFixed.setStatus('mandatory')
pgControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgControlStatus.setStatus('mandatory')
raidExMibParityGroupLDEVTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2), )
if mibBuilder.loadTexts: raidExMibParityGroupLDEVTable.setStatus('mandatory')
raidExMibParityGroupLDEVEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1), ).setIndexNames((0, "HDS9900MIB", "pgLDEVSerialNumber"), (0, "HDS9900MIB", "pgLDEVFB4Number"), (0, "HDS9900MIB", "pgLDEVPGNumber"), (0, "HDS9900MIB", "pgLDEVControlIndex"))
if mibBuilder.loadTexts: raidExMibParityGroupLDEVEntry.setStatus('mandatory')
pgLDEVSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLDEVSerialNumber.setStatus('mandatory')
pgLDEVFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLDEVFB4Number.setStatus('mandatory')
pgLDEVPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLDEVPGNumber.setStatus('mandatory')
pgLDEVControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLDEVControlIndex.setStatus('mandatory')
pgLDEVCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLDEVCU.setStatus('mandatory')
pgLDEVLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 18, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgLDEVLDEV.setStatus('mandatory')
raidExMibHIHSM = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20))
hihsmMonitoringParameterTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1), )
if mibBuilder.loadTexts: hihsmMonitoringParameterTable.setStatus('mandatory')
hihsmMonitoringParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmMonParamSerialNumber"))
if mibBuilder.loadTexts: hihsmMonitoringParameterEntry.setStatus('mandatory')
hihsmMonParamSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmMonParamSerialNumber.setStatus('mandatory')
hihsmMonParamFunctionSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmMonParamFunctionSwitch.setStatus('mandatory')
hihsmMonParamGatheringTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmMonParamGatheringTime.setStatus('mandatory')
hihsmMonParamGatheredFromDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmMonParamGatheredFromDate.setStatus('mandatory')
hihsmMonParamGatheredFromTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmMonParamGatheredFromTime.setStatus('mandatory')
hihsmMonParamGatheredToDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmMonParamGatheredToDate.setStatus('mandatory')
hihsmMonParamGatheredToTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmMonParamGatheredToTime.setStatus('mandatory')
hihsmMonParamControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmMonParamControlStatus.setStatus('mandatory')
hihsmCalculationParameterTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2), )
if mibBuilder.loadTexts: hihsmCalculationParameterTable.setStatus('mandatory')
hihsmCalculationParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmCalcParamSerialNumber"))
if mibBuilder.loadTexts: hihsmCalculationParameterEntry.setStatus('mandatory')
hihsmCalcParamSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCalcParamSerialNumber.setStatus('mandatory')
hihsmCalcParamCalcType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamCalcType.setStatus('mandatory')
hihsmCalcParamFromDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamFromDate.setStatus('mandatory')
hihsmCalcParamFromTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamFromTime.setStatus('mandatory')
hihsmCalcParamToDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamToDate.setStatus('mandatory')
hihsmCalcParamToTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamToTime.setStatus('mandatory')
hihsmCalcParamDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamDataType.setStatus('mandatory')
hihsmCalcParamControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmCalcParamControlStatus.setStatus('mandatory')
hihsmCalculatedData = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3))
hihsmCHPUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1), )
if mibBuilder.loadTexts: hihsmCHPUtilizationTable.setStatus('mandatory')
hihsmCHPUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmCHPUtilSerialNumber"), (0, "HDS9900MIB", "hihsmCHPUtilClusterNumber"), (0, "HDS9900MIB", "hihsmCHPUtilCHANumber"), (0, "HDS9900MIB", "hihsmCHPUtilCHPNumber"))
if mibBuilder.loadTexts: hihsmCHPUtilizationEntry.setStatus('mandatory')
hihsmCHPUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHPUtilSerialNumber.setStatus('mandatory')
hihsmCHPUtilClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHPUtilClusterNumber.setStatus('mandatory')
hihsmCHPUtilCHANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHPUtilCHANumber.setStatus('mandatory')
hihsmCHPUtilCHPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHPUtilCHPNumber.setStatus('mandatory')
hihsmCHPUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHPUtilData.setStatus('mandatory')
hihsmDKPUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2), )
if mibBuilder.loadTexts: hihsmDKPUtilizationTable.setStatus('mandatory')
hihsmDKPUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmDKPUtilSerialNumber"), (0, "HDS9900MIB", "hihsmDKPUtilClusterNumber"), (0, "HDS9900MIB", "hihsmDKPUtilDKANumber"), (0, "HDS9900MIB", "hihsmDKPUtilDKPNumber"))
if mibBuilder.loadTexts: hihsmDKPUtilizationEntry.setStatus('mandatory')
hihsmDKPUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKPUtilSerialNumber.setStatus('mandatory')
hihsmDKPUtilClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKPUtilClusterNumber.setStatus('mandatory')
hihsmDKPUtilDKANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKPUtilDKANumber.setStatus('mandatory')
hihsmDKPUtilDKPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKPUtilDKPNumber.setStatus('mandatory')
hihsmDKPUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKPUtilData.setStatus('mandatory')
hihsmDRRUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3), )
if mibBuilder.loadTexts: hihsmDRRUtilizationTable.setStatus('mandatory')
hihsmDRRUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmDRRUtilSerialNumber"), (0, "HDS9900MIB", "hihsmDRRUtilClusterNumber"), (0, "HDS9900MIB", "hihsmDRRUtilDKANumber"), (0, "HDS9900MIB", "hihsmDRRUtilDRRNumber"))
if mibBuilder.loadTexts: hihsmDRRUtilizationEntry.setStatus('mandatory')
hihsmDRRUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDRRUtilSerialNumber.setStatus('mandatory')
hihsmDRRUtilClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDRRUtilClusterNumber.setStatus('mandatory')
hihsmDRRUtilDKANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDRRUtilDKANumber.setStatus('mandatory')
hihsmDRRUtilDRRNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDRRUtilDRRNumber.setStatus('mandatory')
hihsmDRRUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDRRUtilData.setStatus('mandatory')
hihsmPGUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 4), )
if mibBuilder.loadTexts: hihsmPGUtilizationTable.setStatus('mandatory')
hihsmPGUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 4, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmPGUtilSerialNumber"), (0, "HDS9900MIB", "hihsmPGUtilFB4Number"), (0, "HDS9900MIB", "hihsmPGUtilPGNumber"))
if mibBuilder.loadTexts: hihsmPGUtilizationEntry.setStatus('mandatory')
hihsmPGUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPGUtilSerialNumber.setStatus('mandatory')
hihsmPGUtilFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPGUtilFB4Number.setStatus('mandatory')
hihsmPGUtilPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPGUtilPGNumber.setStatus('mandatory')
hihsmPGUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPGUtilData.setStatus('mandatory')
hihsmLDEVUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5), )
if mibBuilder.loadTexts: hihsmLDEVUtilizationTable.setStatus('mandatory')
hihsmLDEVUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmLDEVUtilSerialNumber"), (0, "HDS9900MIB", "hihsmLDEVUtilFB4Number"), (0, "HDS9900MIB", "hihsmLDEVUtilPGNumber"), (0, "HDS9900MIB", "hihsmLDEVUtilCU"), (0, "HDS9900MIB", "hihsmLDEVUtilLDEV"))
if mibBuilder.loadTexts: hihsmLDEVUtilizationEntry.setStatus('mandatory')
hihsmLDEVUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmLDEVUtilSerialNumber.setStatus('mandatory')
hihsmLDEVUtilFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmLDEVUtilFB4Number.setStatus('mandatory')
hihsmLDEVUtilPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmLDEVUtilPGNumber.setStatus('mandatory')
hihsmLDEVUtilCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmLDEVUtilCU.setStatus('mandatory')
hihsmLDEVUtilLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmLDEVUtilLDEV.setStatus('mandatory')
hihsmLDEVUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmLDEVUtilData.setStatus('mandatory')
hihsmCHAtoCSWUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6), )
if mibBuilder.loadTexts: hihsmCHAtoCSWUtilizationTable.setStatus('mandatory')
hihsmCHAtoCSWUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmCHACSWSerialNumber"), (0, "HDS9900MIB", "hihsmCHACSWCHAClusterNumber"), (0, "HDS9900MIB", "hihsmCHACSWCHANumber"), (0, "HDS9900MIB", "hihsmCHACSWCSWClusterNumber"), (0, "HDS9900MIB", "hihsmCHACSWCSWNumber"))
if mibBuilder.loadTexts: hihsmCHAtoCSWUtilizationEntry.setStatus('mandatory')
hihsmCHACSWSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHACSWSerialNumber.setStatus('mandatory')
hihsmCHACSWCHAClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHACSWCHAClusterNumber.setStatus('mandatory')
hihsmCHACSWCHANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHACSWCHANumber.setStatus('mandatory')
hihsmCHACSWCSWClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHACSWCSWClusterNumber.setStatus('mandatory')
hihsmCHACSWCSWNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHACSWCSWNumber.setStatus('mandatory')
hihsmCHACSWUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHACSWUtilData.setStatus('mandatory')
hihsmDKAtoCSWUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7), )
if mibBuilder.loadTexts: hihsmDKAtoCSWUtilizationTable.setStatus('mandatory')
hihsmDKAtoCSWUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmDKACSWSerialNumber"), (0, "HDS9900MIB", "hihsmDKACSWDKAClusterNumber"), (0, "HDS9900MIB", "hihsmDKACSWDKANumber"), (0, "HDS9900MIB", "hihsmDKACSWCSWClusterNumber"), (0, "HDS9900MIB", "hihsmDKACSWCSWNumber"))
if mibBuilder.loadTexts: hihsmDKAtoCSWUtilizationEntry.setStatus('mandatory')
hihsmDKACSWSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKACSWSerialNumber.setStatus('mandatory')
hihsmDKACSWDKAClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKACSWDKAClusterNumber.setStatus('mandatory')
hihsmDKACSWDKANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKACSWDKANumber.setStatus('mandatory')
hihsmDKACSWCSWClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKACSWCSWClusterNumber.setStatus('mandatory')
hihsmDKACSWCSWNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKACSWCSWNumber.setStatus('mandatory')
hihsmDKACSWUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 7, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKACSWUtilData.setStatus('mandatory')
hihsmCSWtoCacheUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8), )
if mibBuilder.loadTexts: hihsmCSWtoCacheUtilizationTable.setStatus('mandatory')
hihsmCSWtoCacheUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmCSWCacheSerialNumber"), (0, "HDS9900MIB", "hihsmCSWCacheCSWClusterNumber"), (0, "HDS9900MIB", "hihsmCSWCacheCSWNumber"), (0, "HDS9900MIB", "hihsmCSWCacheCacheClusterNumber"), (0, "HDS9900MIB", "hihsmCSWCacheCacheNumber"))
if mibBuilder.loadTexts: hihsmCSWtoCacheUtilizationEntry.setStatus('mandatory')
hihsmCSWCacheSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCSWCacheSerialNumber.setStatus('mandatory')
hihsmCSWCacheCSWClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCSWCacheCSWClusterNumber.setStatus('mandatory')
hihsmCSWCacheCSWNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCSWCacheCSWNumber.setStatus('mandatory')
hihsmCSWCacheCacheClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCSWCacheCacheClusterNumber.setStatus('mandatory')
hihsmCSWCacheCacheNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCSWCacheCacheNumber.setStatus('mandatory')
hihsmCSWCacheUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 8, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCSWCacheUtilData.setStatus('mandatory')
hihsmCHAtoSMUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9), )
if mibBuilder.loadTexts: hihsmCHAtoSMUtilizationTable.setStatus('mandatory')
hihsmCHAtoSMUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmCHASMSerialNumber"), (0, "HDS9900MIB", "hihsmCHASMCHAClusterNumber"), (0, "HDS9900MIB", "hihsmCHASMCHANumber"), (0, "HDS9900MIB", "hihsmCHASMSMClusterNumber"))
if mibBuilder.loadTexts: hihsmCHAtoSMUtilizationEntry.setStatus('mandatory')
hihsmCHASMSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHASMSerialNumber.setStatus('mandatory')
hihsmCHASMCHAClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHASMCHAClusterNumber.setStatus('mandatory')
hihsmCHASMCHANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHASMCHANumber.setStatus('mandatory')
hihsmCHASMSMClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHASMSMClusterNumber.setStatus('mandatory')
hihsmCHASMUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmCHASMUtilData.setStatus('mandatory')
hihsmDKAtoSMUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10), )
if mibBuilder.loadTexts: hihsmDKAtoSMUtilizationTable.setStatus('mandatory')
hihsmDKAtoSMUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmDKASMSerialNumber"), (0, "HDS9900MIB", "hihsmDKASMDKAClusterNumber"), (0, "HDS9900MIB", "hihsmDKASMDKANumber"), (0, "HDS9900MIB", "hihsmDKASMSMClusterNumber"))
if mibBuilder.loadTexts: hihsmDKAtoSMUtilizationEntry.setStatus('mandatory')
hihsmDKASMSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKASMSerialNumber.setStatus('mandatory')
hihsmDKASMDKAClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKASMDKAClusterNumber.setStatus('mandatory')
hihsmDKASMDKANumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKASMDKANumber.setStatus('mandatory')
hihsmDKASMSMClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKASMSMClusterNumber.setStatus('mandatory')
hihsmDKASMUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKASMUtilData.setStatus('mandatory')
hihsmDKCUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 11), )
if mibBuilder.loadTexts: hihsmDKCUtilizationTable.setStatus('mandatory')
hihsmDKCUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 11, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmCHASMSerialNumber"))
if mibBuilder.loadTexts: hihsmDKCUtilizationEntry.setStatus('mandatory')
hihsmDKCUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKCUtilSerialNumber.setStatus('mandatory')
hihsmDKCUtilWritePending = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 3, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmDKCUtilWritePending.setStatus('mandatory')
hihsmAutomaticMigration = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4))
hihsmAutomaticMigrationParameterTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationParameterTable.setStatus('mandatory')
hihsmAutomaticMigrationParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmAutoParamSerialNumber"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationParameterEntry.setStatus('mandatory')
hihsmAutoParamSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmAutoParamSerialNumber.setStatus('mandatory')
hihsmAutoParamFunctionSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamFunctionSwitch.setStatus('mandatory')
hihsmAutoParamPlanningDay = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamPlanningDay.setStatus('mandatory')
hihsmAutoParamIntervalDay = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamIntervalDay.setStatus('mandatory')
hihsmAutoParamDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamDayOfWeek.setStatus('mandatory')
hihsmAutoParamUseFromTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamUseFromTime.setStatus('mandatory')
hihsmAutoParamUseToTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamUseToTime.setStatus('mandatory')
hihsmAutoParamJudgeMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamJudgeMethod.setStatus('mandatory')
hihsmAutoParamHightestPoints = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamHightestPoints.setStatus('mandatory')
hihsmAutoParamExecutionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamExecutionTime.setStatus('mandatory')
hihsmAutoParamMaxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamMaxDuration.setStatus('mandatory')
hihsmAutoParamMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamMaxUtilization.setStatus('mandatory')
hihsmAutoParamMaxVolumes = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamMaxVolumes.setStatus('mandatory')
hihsmAutoParamControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamControlStatus.setStatus('mandatory')
hihsmAutoParamDayOfMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoParamDayOfMonth.setStatus('mandatory')
hihsmAutomaticMigrationClass = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2))
hihsmAutomaticMigrationClassListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationClassListTable.setStatus('mandatory')
hihsmAutomaticMigrationClassListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmClassListSerialNumber"), (0, "HDS9900MIB", "hihsmClassListClassNumber"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationClassListEntry.setStatus('mandatory')
hihsmClassListSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassListSerialNumber.setStatus('mandatory')
hihsmClassListClassNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassListClassNumber.setStatus('mandatory')
hihsmClassListDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassListDisplayName.setStatus('mandatory')
hihsmClassListMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmClassListMaxUtilization.setStatus('mandatory')
hihsmClassListControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmClassListControlStatus.setStatus('mandatory')
hihsmAutomaticMigrationClassPGTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationClassPGTable.setStatus('mandatory')
hihsmAutomaticMigrationClassPGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmClassPGSerialNumber"), (0, "HDS9900MIB", "hihsmClassPGClassNumber"), (0, "HDS9900MIB", "hihsmClassPGControlIndex"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationClassPGEntry.setStatus('mandatory')
hihsmClassPGSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassPGSerialNumber.setStatus('mandatory')
hihsmClassPGClassNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassPGClassNumber.setStatus('mandatory')
hihsmClassPGControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassPGControlIndex.setStatus('mandatory')
hihsmClassPGFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassPGFB4Number.setStatus('mandatory')
hihsmClassPGPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmClassPGPGNumber.setStatus('mandatory')
hihsmAutomaticMigrationPlan = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3))
hihsmAutomaticMigrationPlanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationPlanStatusTable.setStatus('mandatory')
hihsmAutomaticMigrationPlanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmPlanStatusSerialNumber"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationPlanStatusEntry.setStatus('mandatory')
hihsmPlanStatusSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanStatusSerialNumber.setStatus('mandatory')
hihsmPlanStatusData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanStatusData.setStatus('mandatory')
hihsmPlanStatusCheckDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanStatusCheckDate.setStatus('mandatory')
hihsmPlanStatusCheckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanStatusCheckTime.setStatus('mandatory')
hihsmPlanStatusMigrationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanStatusMigrationDate.setStatus('mandatory')
hihsmPlanStatusMigrationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanStatusMigrationTime.setStatus('mandatory')
hihsmPlanStatusControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmPlanStatusControlStatus.setStatus('mandatory')
hihsmAutomaticMigrationPlanLDEVTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationPlanLDEVTable.setStatus('mandatory')
hihsmAutomaticMigrationPlanLDEVEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmPlanLDEVSerialNumber"), (0, "HDS9900MIB", "hihsmPlanLDEVControlIndex"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationPlanLDEVEntry.setStatus('mandatory')
hihsmPlanLDEVSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVSerialNumber.setStatus('mandatory')
hihsmPlanLDEVControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVControlIndex.setStatus('mandatory')
hihsmPlanLDEVSrcFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVSrcFB4Number.setStatus('mandatory')
hihsmPlanLDEVSrcPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVSrcPGNumber.setStatus('mandatory')
hihsmPlanLDEVSrcCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVSrcCU.setStatus('mandatory')
hihsmPlanLDEVSrcLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVSrcLDEV.setStatus('mandatory')
hihsmPlanLDEVDstFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVDstFB4Number.setStatus('mandatory')
hihsmPlanLDEVDstPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVDstPGNumber.setStatus('mandatory')
hihsmPlanLDEVDstCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVDstCU.setStatus('mandatory')
hihsmPlanLDEVDstLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmPlanLDEVDstLDEV.setStatus('mandatory')
hihsmAutomaticMigrationHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4))
hihsmAutomaticMigrationHistoryCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 1), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationHistoryCtrlTable.setStatus('mandatory')
hihsmAutomaticMigrationHistoryCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmAutoHstCtrlSerialNumber"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationHistoryCtrlEntry.setStatus('mandatory')
hihsmAutoHstCtrlSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmAutoHstCtrlSerialNumber.setStatus('mandatory')
hihsmAutoHstCtrlControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmAutoHstCtrlControlStatus.setStatus('mandatory')
hihsmAutomaticMigrationHistoryListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 2), )
if mibBuilder.loadTexts: hihsmAutomaticMigrationHistoryListTable.setStatus('mandatory')
hihsmAutomaticMigrationHistoryListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 2, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmAutoHstListSerialNumber"), (0, "HDS9900MIB", "hihsmAutoHstListControlIndex"))
if mibBuilder.loadTexts: hihsmAutomaticMigrationHistoryListEntry.setStatus('mandatory')
hihsmAutoHstListSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmAutoHstListSerialNumber.setStatus('mandatory')
hihsmAutoHstListControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmAutoHstListControlIndex.setStatus('mandatory')
hihsmAutoHstListMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 4, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmAutoHstListMessage.setStatus('mandatory')
hihsmVolumeMigrationHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5))
hihsmVolumeMigrationHistoryCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 1), )
if mibBuilder.loadTexts: hihsmVolumeMigrationHistoryCtrlTable.setStatus('mandatory')
hihsmVolumeMigrationHistoryCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmVolHstCtrlSerialNumber"))
if mibBuilder.loadTexts: hihsmVolumeMigrationHistoryCtrlEntry.setStatus('mandatory')
hihsmVolHstCtrlSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstCtrlSerialNumber.setStatus('mandatory')
hihsmVolHstCtrlControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmVolHstCtrlControlStatus.setStatus('mandatory')
hihsmVolumeMigrationHistoryListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2), )
if mibBuilder.loadTexts: hihsmVolumeMigrationHistoryListTable.setStatus('mandatory')
hihsmVolumeMigrationHistoryListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmVolHstListSerialNumber"), (0, "HDS9900MIB", "hihsmVolHstListControlIndex"))
if mibBuilder.loadTexts: hihsmVolumeMigrationHistoryListEntry.setStatus('mandatory')
hihsmVolHstListSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListSerialNumber.setStatus('mandatory')
hihsmVolHstListControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListControlIndex.setStatus('mandatory')
hihsmVolHstListDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListDate.setStatus('mandatory')
hihsmVolHstListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListTime.setStatus('mandatory')
hihsmVolHstListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListAction.setStatus('mandatory')
hihsmVolHstListSrcFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListSrcFB4Number.setStatus('mandatory')
hihsmVolHstListSrcPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListSrcPGNumber.setStatus('mandatory')
hihsmVolHstListSrcCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListSrcCU.setStatus('mandatory')
hihsmVolHstListSrcLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListSrcLDEV.setStatus('mandatory')
hihsmVolHstListDstFB4Number = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListDstFB4Number.setStatus('mandatory')
hihsmVolHstListDstPGNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListDstPGNumber.setStatus('mandatory')
hihsmVolHstListDstCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListDstCU.setStatus('mandatory')
hihsmVolHstListDstLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 4, 5, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmVolHstListDstLDEV.setStatus('mandatory')
hihsmManualMigration = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6))
hihsmManualVolumeMigrationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1), )
if mibBuilder.loadTexts: hihsmManualVolumeMigrationTable.setStatus('mandatory')
hihsmManualVolumeMigrationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmManVolMigSerialNumber"), (0, "HDS9900MIB", "hihsmManVolMigSrcCU"), (0, "HDS9900MIB", "hihsmManVolMigSrcLDEV"))
if mibBuilder.loadTexts: hihsmManualVolumeMigrationEntry.setStatus('mandatory')
hihsmManVolMigSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmManVolMigSerialNumber.setStatus('mandatory')
hihsmManVolMigSrcCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmManVolMigSrcCU.setStatus('mandatory')
hihsmManVolMigSrcLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmManVolMigSrcLDEV.setStatus('mandatory')
hihsmManVolMigDstCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmManVolMigDstCU.setStatus('mandatory')
hihsmManVolMigDstLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmManVolMigDstLDEV.setStatus('mandatory')
hihsmManVolMigProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmManVolMigProgress.setStatus('mandatory')
hihsmManVolMigControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 6, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmManVolMigControlStatus.setStatus('mandatory')
hihsmMigrationExceptation = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7))
hihsmExpectationPGUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1), )
if mibBuilder.loadTexts: hihsmExpectationPGUtilizationTable.setStatus('mandatory')
hihsmExpectationPGUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1), ).setIndexNames((0, "HDS9900MIB", "hihsmExpPGUtilSerialNumber"), (0, "HDS9900MIB", "hihsmExpPGUtilSrcCU"), (0, "HDS9900MIB", "hihsmExpPGUtilSrcLDEV"), (0, "HDS9900MIB", "hihsmExpPGUtilDstFB4"), (0, "HDS9900MIB", "hihsmExpPGUtilDstPG"))
if mibBuilder.loadTexts: hihsmExpectationPGUtilizationEntry.setStatus('mandatory')
hihsmExpPGUtilSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmExpPGUtilSerialNumber.setStatus('mandatory')
hihsmExpPGUtilSrcCU = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmExpPGUtilSrcCU.setStatus('mandatory')
hihsmExpPGUtilSrcLDEV = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmExpPGUtilSrcLDEV.setStatus('mandatory')
hihsmExpPGUtilDstFB4 = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmExpPGUtilDstFB4.setStatus('mandatory')
hihsmExpPGUtilDstPG = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmExpPGUtilDstPG.setStatus('mandatory')
hihsmExpPGUtilData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hihsmExpPGUtilData.setStatus('mandatory')
hihsmExpPGUtilControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 20, 7, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hihsmExpPGUtilControlStatus.setStatus('mandatory')
raidExMibCSW = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21))
raidExMibCSWConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21, 1), )
if mibBuilder.loadTexts: raidExMibCSWConfigurationTable.setStatus('mandatory')
raidExMibCSWConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21, 1, 1), ).setIndexNames((0, "HDS9900MIB", "cswSerialNumber"), (0, "HDS9900MIB", "cswClusterNumber"), (0, "HDS9900MIB", "cswNumber"))
if mibBuilder.loadTexts: raidExMibCSWConfigurationEntry.setStatus('mandatory')
cswSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswSerialNumber.setStatus('mandatory')
cswClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswClusterNumber.setStatus('mandatory')
cswNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswNumber.setStatus('mandatory')
cswDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 21, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cswDisplayName.setStatus('mandatory')
raidExMibSharedMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 22))
raidExMibSMConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 22, 1), )
if mibBuilder.loadTexts: raidExMibSMConfigurationTable.setStatus('mandatory')
raidExMibSMConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 22, 1, 1), ).setIndexNames((0, "HDS9900MIB", "smSerialNumber"), (0, "HDS9900MIB", "smClusterNumber"))
if mibBuilder.loadTexts: raidExMibSMConfigurationEntry.setStatus('mandatory')
smSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 22, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smSerialNumber.setStatus('mandatory')
smClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 22, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smClusterNumber.setStatus('mandatory')
smDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 22, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smDisplayName.setStatus('mandatory')
raidExMibCacheMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23))
raidExMibCacheConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23, 1), )
if mibBuilder.loadTexts: raidExMibCacheConfigurationTable.setStatus('mandatory')
raidExMibCacheConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23, 1, 1), ).setIndexNames((0, "HDS9900MIB", "cacheConfSerialNumber"), (0, "HDS9900MIB", "cacheConfClusterNumber"), (0, "HDS9900MIB", "cacheConfCacheNumber"))
if mibBuilder.loadTexts: raidExMibCacheConfigurationEntry.setStatus('mandatory')
cacheConfSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheConfSerialNumber.setStatus('mandatory')
cacheConfClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheConfClusterNumber.setStatus('mandatory')
cacheConfCacheNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheConfCacheNumber.setStatus('mandatory')
cacheConfDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 23, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheConfDisplayName.setStatus('mandatory')
raidExMibPortControlConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24))
raidExMibPortControlSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 1), )
if mibBuilder.loadTexts: raidExMibPortControlSwitchTable.setStatus('mandatory')
raidExMibPortControlSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 1, 1), ).setIndexNames((0, "HDS9900MIB", "portControlSwitchSerialNumber"))
if mibBuilder.loadTexts: raidExMibPortControlSwitchEntry.setStatus('mandatory')
portControlSwitchSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portControlSwitchSerialNumber.setStatus('mandatory')
portControlSwitchOnOff = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSwitchOnOff.setStatus('mandatory')
portControlSwitchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSwitchStatus.setStatus('mandatory')
raidExMibPortControlSetUpTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2), )
if mibBuilder.loadTexts: raidExMibPortControlSetUpTable.setStatus('mandatory')
raidExMibPortControlSetUpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1), ).setIndexNames((0, "HDS9900MIB", "portControlSetUpSerialNumber"), (0, "HDS9900MIB", "portControlSetUpPortID"))
if mibBuilder.loadTexts: raidExMibPortControlSetUpEntry.setStatus('mandatory')
portControlSetUpSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portControlSetUpSerialNumber.setStatus('mandatory')
portControlSetUpPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSetUpPortID.setStatus('mandatory')
portControlSetUpControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSetUpControlIndex.setStatus('mandatory')
portControlSetUpDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSetUpDisplayName.setStatus('mandatory')
portControlSetUpSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSetUpSetting.setStatus('mandatory')
portControlSetUpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portControlSetUpStatus.setStatus('mandatory')
raidExMibPortControlParameter = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3))
raidExMibPortParameterTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1), )
if mibBuilder.loadTexts: raidExMibPortParameterTable.setStatus('mandatory')
raidExMibPortParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1), ).setIndexNames((0, "HDS9900MIB", "portPrmSerialNumber"), (0, "HDS9900MIB", "portPrmPortID"), (0, "HDS9900MIB", "portPrmControlIndex"))
if mibBuilder.loadTexts: raidExMibPortParameterEntry.setStatus('mandatory')
portPrmSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmSerialNumber.setStatus('mandatory')
portPrmPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmPortID.setStatus('mandatory')
portPrmControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmControlIndex.setStatus('mandatory')
portPrmDisplayName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmDisplayName.setStatus('mandatory')
portPrmSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmSetting.setStatus('mandatory')
portPrmPrioIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmPrioIOPS.setStatus('mandatory')
portPrmPrioMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPrmPrioMBS.setStatus('mandatory')
portNPrmnPrioIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portNPrmnPrioIOPS.setStatus('mandatory')
portNPrmnPrioMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portNPrmnPrioMBS.setStatus('mandatory')
portPrmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portPrmThreshold.setStatus('mandatory')
portPrmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portPrmStatus.setStatus('mandatory')
raidExMibPrioAllPortParameterTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2), )
if mibBuilder.loadTexts: raidExMibPrioAllPortParameterTable.setStatus('mandatory')
raidExMibPrioAllPortParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2, 1), ).setIndexNames((0, "HDS9900MIB", "prioAllPortPrmSerialNumber"))
if mibBuilder.loadTexts: raidExMibPrioAllPortParameterEntry.setStatus('mandatory')
prioAllPortPrmSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioAllPortPrmSerialNumber.setStatus('mandatory')
prioAllPortPrmPrioIOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prioAllPortPrmPrioIOPS.setStatus('mandatory')
prioAllPortPrmPrioMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prioAllPortPrmPrioMBS.setStatus('mandatory')
prioAllPortPrmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioAllPortPrmThreshold.setStatus('mandatory')
prioAllPortPrmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prioAllPortPrmStatus.setStatus('mandatory')
raidExMibAllPortParameterTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 3), )
if mibBuilder.loadTexts: raidExMibAllPortParameterTable.setStatus('mandatory')
raidExMibAllPortParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 3, 1), ).setIndexNames((0, "HDS9900MIB", "allPortPrmSerialNumber"))
if mibBuilder.loadTexts: raidExMibAllPortParameterEntry.setStatus('mandatory')
allPortPrmSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: allPortPrmSerialNumber.setStatus('mandatory')
allPortPrmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 3, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: allPortPrmStatus.setStatus('mandatory')
raidExMibRealTimeMonitoringInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4))
raidExMibRTMonitoringCntlTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 1), )
if mibBuilder.loadTexts: raidExMibRTMonitoringCntlTable.setStatus('mandatory')
raidExMibRTMonitoringCntlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 1, 1), ).setIndexNames((0, "HDS9900MIB", "rTMonitoringCntlSerialNumber"))
if mibBuilder.loadTexts: raidExMibRTMonitoringCntlEntry.setStatus('mandatory')
rTMonitoringCntlSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitoringCntlSerialNumber.setStatus('mandatory')
rTMonitoringCntlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rTMonitoringCntlStatus.setStatus('mandatory')
raidExMibRTMonitorDataTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2), )
if mibBuilder.loadTexts: raidExMibRTMonitorDataTable.setStatus('mandatory')
raidExMibRTMonitorDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1), ).setIndexNames((0, "HDS9900MIB", "rTMonitorDataSerialNumber"), (0, "HDS9900MIB", "rTMonitorDataPortID"), (0, "HDS9900MIB", "rTMonitorDataControlIndex"))
if mibBuilder.loadTexts: raidExMibRTMonitorDataEntry.setStatus('mandatory')
rTMonitorDataSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataSerialNumber.setStatus('mandatory')
rTMonitorDataPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataPortID.setStatus('mandatory')
rTMonitorDataControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataControlIndex.setStatus('mandatory')
rTMonitorDataGatheredDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataGatheredDate.setStatus('mandatory')
rTMonitorDataGatheredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataGatheredTime.setStatus('mandatory')
rTMonitorDataSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataSetting.setStatus('mandatory')
rTMonitorDataIOPSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataIOPSMax.setStatus('mandatory')
rTMonitorDataIOPSAve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataIOPSAve.setStatus('mandatory')
rTMonitorDataIOPSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataIOPSMin.setStatus('mandatory')
rTMonitorDataMBSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataMBSMax.setStatus('mandatory')
rTMonitorDataMBSAve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataMBSAve.setStatus('mandatory')
rTMonitorDataMBSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rTMonitorDataMBSMin.setStatus('mandatory')
raidExMibPrioRTMonitorDataTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3), )
if mibBuilder.loadTexts: raidExMibPrioRTMonitorDataTable.setStatus('mandatory')
raidExMibPrioRTMonitorDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1), ).setIndexNames((0, "HDS9900MIB", "prioRTMonitorDataSerialNumber"))
if mibBuilder.loadTexts: raidExMibPrioRTMonitorDataEntry.setStatus('mandatory')
prioRTMonitorDataSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataSerialNumber.setStatus('mandatory')
prioRTMonitorDataGatheredDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataGatheredDate.setStatus('mandatory')
prioRTMonitorDataGatheredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataGatheredTime.setStatus('mandatory')
prioRTMonitorDataIOPSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataIOPSMax.setStatus('mandatory')
prioRTMonitorDataIOPSAve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataIOPSAve.setStatus('mandatory')
prioRTMonitorDataIOPSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataIOPSMin.setStatus('mandatory')
prioRTMonitorDataMBSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataMBSMax.setStatus('mandatory')
prioRTMonitorDataMBSAve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataMBSAve.setStatus('mandatory')
prioRTMonitorDataMBSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prioRTMonitorDataMBSMin.setStatus('mandatory')
raidExMibNPrioRTMonitorDataTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4), )
if mibBuilder.loadTexts: raidExMibNPrioRTMonitorDataTable.setStatus('mandatory')
raidExMibNPrioRTMonitorDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1), ).setIndexNames((0, "HDS9900MIB", "nPrioRTMonitorDataSerialNumber"))
if mibBuilder.loadTexts: raidExMibNPrioRTMonitorDataEntry.setStatus('mandatory')
nPrioRTMonitorDataSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataSerialNumber.setStatus('mandatory')
nPrioRTMonitorDataGatheredDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataGatheredDate.setStatus('mandatory')
nPrioRTMonitorDataGatheredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataGatheredTime.setStatus('mandatory')
nPrioRTMonitorDataIOPSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataIOPSMax.setStatus('mandatory')
nPrioRTMonitorDataIOPSAve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataIOPSAve.setStatus('mandatory')
nPrioRTMonitorDataIOPSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataIOPSMin.setStatus('mandatory')
nPrioRTMonitorDataMBSMax = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataMBSMax.setStatus('mandatory')
nPrioRTMonitorDataMBSAve = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataMBSAve.setStatus('mandatory')
nPrioRTMonitorDataMBSMin = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 24, 4, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nPrioRTMonitorDataMBSMin.setStatus('mandatory')
raidExMibVersionManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50))
mibAllLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 1), )
if mibBuilder.loadTexts: mibAllLeafVersionTable.setStatus('mandatory')
mibAllLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 1, 1), ).setIndexNames((0, "HDS9900MIB", "mibAllLeafVersionSerialNumber"))
if mibBuilder.loadTexts: mibAllLeafVersionEntry.setStatus('mandatory')
mibAllLeafVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibAllLeafVersionSerialNumber.setStatus('mandatory')
mibAllLeafVersionMIBVersionData = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibAllLeafVersionMIBVersionData.setStatus('mandatory')
mibAllLeafVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibAllLeafVersionMIBVersion.setStatus('mandatory')
mibLdevLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 10), )
if mibBuilder.loadTexts: mibLdevLeafVersionTable.setStatus('mandatory')
mibLdevLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 10, 1), ).setIndexNames((0, "HDS9900MIB", "mibLdevVersionSerialNumber"))
if mibBuilder.loadTexts: mibLdevLeafVersionEntry.setStatus('mandatory')
mibLdevVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLdevVersionSerialNumber.setStatus('mandatory')
mibLdevVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLdevVersionMIBVersion.setStatus('mandatory')
mibLdevVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 10, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLdevVersionMIBOID.setStatus('mandatory')
mibLuLeafVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11))
mibPortleafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 1), )
if mibBuilder.loadTexts: mibPortleafVersionTable.setStatus('mandatory')
mibPortleafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 1, 1), ).setIndexNames((0, "HDS9900MIB", "mibPortVersionSerialNumber"))
if mibBuilder.loadTexts: mibPortleafVersionEntry.setStatus('mandatory')
mibPortVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPortVersionSerialNumber.setStatus('mandatory')
mibPortVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPortVersionMIBVersion.setStatus('mandatory')
mibPortVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPortVersionMIBOID.setStatus('mandatory')
mibPathLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 2), )
if mibBuilder.loadTexts: mibPathLeafVersionTable.setStatus('mandatory')
mibPathLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 2, 1), ).setIndexNames((0, "HDS9900MIB", "mibPathVersionSerialNumber"))
if mibBuilder.loadTexts: mibPathLeafVersionEntry.setStatus('mandatory')
mibPathVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPathVersionSerialNumber.setStatus('mandatory')
mibPathVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPathVersionMIBVersion.setStatus('mandatory')
mibPathVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibPathVersionMIBOID.setStatus('mandatory')
mibLuseLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 3), )
if mibBuilder.loadTexts: mibLuseLeafVersionTable.setStatus('mandatory')
mibLuseLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 3, 1), ).setIndexNames((0, "HDS9900MIB", "mibLuseVersionSerialNumber"))
if mibBuilder.loadTexts: mibLuseLeafVersionEntry.setStatus('mandatory')
mibLuseVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLuseVersionSerialNumber.setStatus('mandatory')
mibLuseVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLuseVersionMIBVersion.setStatus('mandatory')
mibLuseVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 3, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibLuseVersionMIBOID.setStatus('mandatory')
mibLunsLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 4), )
if mibBuilder.loadTexts: mibLunsLeafVersionTable.setStatus('mandatory')
mibLunsLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 4, 1), ).setIndexNames((0, "HDS9900MIB", "mibLunsVersionSerialNumber"))
if mibBuilder.loadTexts: mibLunsLeafVersionEntry.setStatus('mandatory')
mibLunsVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLunsVersionSerialNumber.setStatus('mandatory')
mibLunsVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibLunsVersionMIBVersion.setStatus('mandatory')
mibLunsVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 11, 4, 1, 3), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibLunsVersionMIBOID.setStatus('mandatory')
mibDcrLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 12), )
if mibBuilder.loadTexts: mibDcrLeafVersionTable.setStatus('mandatory')
mibDcrLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 12, 1), ).setIndexNames((0, "HDS9900MIB", "mibDcrVersionSerialNumber"))
if mibBuilder.loadTexts: mibDcrLeafVersionEntry.setStatus('mandatory')
mibDcrVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibDcrVersionSerialNumber.setStatus('mandatory')
mibDcrVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibDcrVersionMIBVersion.setStatus('mandatory')
mibDcrVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 12, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibDcrVersionMIBOID.setStatus('mandatory')
mibCvsLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 13), )
if mibBuilder.loadTexts: mibCvsLeafVersionTable.setStatus('mandatory')
mibCvsLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 13, 1), ).setIndexNames((0, "HDS9900MIB", "mibCvsLeafVersionSerialNumber"))
if mibBuilder.loadTexts: mibCvsLeafVersionEntry.setStatus('mandatory')
mibCvsLeafVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCvsLeafVersionSerialNumber.setStatus('mandatory')
mibCvsLeafVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCvsLeafVersionMIBVersion.setStatus('mandatory')
mibCvsLeafVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 13, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCvsLeafVersionMIBOID.setStatus('mandatory')
mibSsidLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 14), )
if mibBuilder.loadTexts: mibSsidLeafVersionTable.setStatus('mandatory')
mibSsidLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 14, 1), ).setIndexNames((0, "HDS9900MIB", "mibSsidVersionSerialNumber"))
if mibBuilder.loadTexts: mibSsidLeafVersionEntry.setStatus('mandatory')
mibSsidVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibSsidVersionSerialNumber.setStatus('mandatory')
mibSsidVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibSsidVersionMIBVersion.setStatus('mandatory')
mibSsidVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 14, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibSsidVersionMIBOID.setStatus('mandatory')
mibEnvLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 15), )
if mibBuilder.loadTexts: mibEnvLeafVersionTable.setStatus('mandatory')
mibEnvLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 15, 1), ).setIndexNames((0, "HDS9900MIB", "mibEnvVersionSerialNumber"))
if mibBuilder.loadTexts: mibEnvLeafVersionEntry.setStatus('mandatory')
mibEnvVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibEnvVersionSerialNumber.setStatus('mandatory')
mibEnvVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibEnvVersionMIBVersion.setStatus('mandatory')
mibEnvVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 15, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibEnvVersionMIBOID.setStatus('mandatory')
mibChaLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 16), )
if mibBuilder.loadTexts: mibChaLeafVersionTable.setStatus('mandatory')
mibChaLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 16, 1), ).setIndexNames((0, "HDS9900MIB", "mibChaVersionSerialNumber"))
if mibBuilder.loadTexts: mibChaLeafVersionEntry.setStatus('mandatory')
mibChaVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibChaVersionSerialNumber.setStatus('mandatory')
mibChaVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibChaVersionMIBVersion.setStatus('mandatory')
mibChaVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 16, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibChaVersionMIBOID.setStatus('mandatory')
mibDkaLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 17), )
if mibBuilder.loadTexts: mibDkaLeafVersionTable.setStatus('mandatory')
mibDkaLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 17, 1), ).setIndexNames((0, "HDS9900MIB", "mibDkaVersionSerialNumber"))
if mibBuilder.loadTexts: mibDkaLeafVersionEntry.setStatus('mandatory')
mibDkaVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibDkaVersionSerialNumber.setStatus('mandatory')
mibDkaVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibDkaVersionMIBVersion.setStatus('mandatory')
mibDkaVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 17, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibDkaVersionMIBOID.setStatus('mandatory')
mibPgLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 18), )
if mibBuilder.loadTexts: mibPgLeafVersionTable.setStatus('mandatory')
mibPgLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 18, 1), ).setIndexNames((0, "HDS9900MIB", "mibPgVersionSerialNumber"))
if mibBuilder.loadTexts: mibPgLeafVersionEntry.setStatus('mandatory')
mibPgVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPgVersionSerialNumber.setStatus('mandatory')
mibPgVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPgVersionMIBVersion.setStatus('mandatory')
mibPgVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 18, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPgVersionMIBOID.setStatus('mandatory')
mibHihsmLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 20), )
if mibBuilder.loadTexts: mibHihsmLeafVersionTable.setStatus('mandatory')
mibHihsmLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 20, 1), ).setIndexNames((0, "HDS9900MIB", "mibHihsmVersionSerialNumber"))
if mibBuilder.loadTexts: mibHihsmLeafVersionEntry.setStatus('mandatory')
mibHihsmVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibHihsmVersionSerialNumber.setStatus('mandatory')
mibHihsmVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 20, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibHihsmVersionMIBVersion.setStatus('mandatory')
mibHihsmVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 20, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibHihsmVersionMIBOID.setStatus('mandatory')
mibCswLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 21), )
if mibBuilder.loadTexts: mibCswLeafVersionTable.setStatus('mandatory')
mibCswLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 21, 1), ).setIndexNames((0, "HDS9900MIB", "mibCswVersionSerialNumber"))
if mibBuilder.loadTexts: mibCswLeafVersionEntry.setStatus('mandatory')
mibCswVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCswVersionSerialNumber.setStatus('mandatory')
mibCswVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 21, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCswVersionMIBVersion.setStatus('mandatory')
mibCswVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 21, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCswVersionMIBOID.setStatus('mandatory')
mibSmLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 22), )
if mibBuilder.loadTexts: mibSmLeafVersionTable.setStatus('mandatory')
mibSmLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 22, 1), ).setIndexNames((0, "HDS9900MIB", "mibSmLeafVersionSerialNumber"))
if mibBuilder.loadTexts: mibSmLeafVersionEntry.setStatus('mandatory')
mibSmLeafVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibSmLeafVersionSerialNumber.setStatus('mandatory')
mibSmLeafVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 22, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibSmLeafVersionMIBVersion.setStatus('mandatory')
mibSmLeafVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 22, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibSmLeafVersionMIBOID.setStatus('mandatory')
mibCmLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 23), )
if mibBuilder.loadTexts: mibCmLeafVersionTable.setStatus('mandatory')
mibCmLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 23, 1), ).setIndexNames((0, "HDS9900MIB", "mibCmVersionSerialNumber"))
if mibBuilder.loadTexts: mibCmLeafVersionEntry.setStatus('mandatory')
mibCmVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 23, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCmVersionSerialNumber.setStatus('mandatory')
mibCmVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 23, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCmVersionMIBVersion.setStatus('mandatory')
mibCmVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 23, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibCmVersionMIBOID.setStatus('mandatory')
mibPortControlLeafVersionTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 24), )
if mibBuilder.loadTexts: mibPortControlLeafVersionTable.setStatus('mandatory')
mibPortControlLeafVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 24, 1), ).setIndexNames((0, "HDS9900MIB", "mibPortControlVersionSerialNumber"))
if mibBuilder.loadTexts: mibPortControlLeafVersionEntry.setStatus('mandatory')
mibPortControlVersionSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 24, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPortControlVersionSerialNumber.setStatus('mandatory')
mibPortControlVersionMIBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 24, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPortControlVersionMIBVersion.setStatus('mandatory')
mibPortControlVersionMIBOID = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 50, 24, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibPortControlVersionMIBOID.setStatus('mandatory')
eventTrapSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventTrapSerialNumber.setStatus('mandatory')
eventTrapNickname = MibScalar((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventTrapNickname.setStatus('mandatory')
eventTrapREFCODE = MibScalar((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventTrapREFCODE.setStatus('mandatory')
eventTrapPartsID = MibScalar((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventTrapPartsID.setStatus('mandatory')
raidEventCommandTable = MibTable((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 9), )
if mibBuilder.loadTexts: raidEventCommandTable.setStatus('mandatory')
raidEventCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 9, 1), ).setIndexNames((0, "HDS9900MIB", "trapCommandSerialNumber"))
if mibBuilder.loadTexts: raidEventCommandEntry.setStatus('mandatory')
trapCommandSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapCommandSerialNumber.setStatus('mandatory')
trapCommandManagerName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapCommandManagerName.setStatus('mandatory')
trapCommandKind = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapCommandKind.setStatus('mandatory')
trapCommandStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapCommandStatus.setStatus('mandatory')
raidEventUserAcute = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,1)).setObjects(("HDS9900MIB", "eventTrapSerialNumber"), ("HDS9900MIB", "eventTrapNickname"), ("HDS9900MIB", "eventTrapREFCODE"), ("HDS9900MIB", "eventTrapPartsID"))
raidEventUserSerious = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,2)).setObjects(("HDS9900MIB", "eventTrapSerialNumber"), ("HDS9900MIB", "eventTrapNickname"), ("HDS9900MIB", "eventTrapREFCODE"), ("HDS9900MIB", "eventTrapPartsID"))
raidEventUserModerate = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,3)).setObjects(("HDS9900MIB", "eventTrapSerialNumber"), ("HDS9900MIB", "eventTrapNickname"), ("HDS9900MIB", "eventTrapREFCODE"), ("HDS9900MIB", "eventTrapPartsID"))
raidEventUserService = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,4)).setObjects(("HDS9900MIB", "eventTrapSerialNumber"), ("HDS9900MIB", "eventTrapNickname"), ("HDS9900MIB", "eventTrapREFCODE"), ("HDS9900MIB", "eventTrapPartsID"))
raidEventCommandFinished = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,100)).setObjects(("HDS9900MIB", "trapCommandSerialNumber"), ("HDS9900MIB", "trapCommandManagerName"), ("HDS9900MIB", "trapCommandKind"), ("HDS9900MIB", "trapCommandStatus"))
mibBuilder.exportSymbols("HDS9900MIB", mibLdevVersionMIBOID=mibLdevVersionMIBOID, raidExMibCVSConfiguration=raidExMibCVSConfiguration, customizedVolumeCU=customizedVolumeCU, raidExMibAllPortParameterTable=raidExMibAllPortParameterTable, mibPortleafVersionTable=mibPortleafVersionTable, lunSerialNumber=lunSerialNumber, raidExMibPortControlSwitchTable=raidExMibPortControlSwitchTable, raidlistDKCMainVersion=raidlistDKCMainVersion, mibLuseLeafVersionEntry=mibLuseLeafVersionEntry, raidEventCommandEntry=raidEventCommandEntry, trapCommandStatus=trapCommandStatus, hihsmManVolMigSrcLDEV=hihsmManVolMigSrcLDEV, prioAllPortPrmPrioIOPS=prioAllPortPrmPrioIOPS, lunGroupSerialNumber=lunGroupSerialNumber, luPathSerialNumber=luPathSerialNumber, raidExMibLUNSLUNGroupEntry=raidExMibLUNSLUNGroupEntry, hihsmDKCUtilWritePending=hihsmDKCUtilWritePending, mibHihsmVersionSerialNumber=mibHihsmVersionSerialNumber, raidExMibDummy=raidExMibDummy, hihsmPlanLDEVDstCU=hihsmPlanLDEVDstCU, portControlSetUpStatus=portControlSetUpStatus, eventTrapREFCODE=eventTrapREFCODE, portPrmPrioIOPS=portPrmPrioIOPS, cacheConfDisplayName=cacheConfDisplayName, hihsmManualVolumeMigrationEntry=hihsmManualVolumeMigrationEntry, hihsmPGUtilizationTable=hihsmPGUtilizationTable, prioRTMonitorDataMBSAve=prioRTMonitorDataMBSAve, mibDkaVersionSerialNumber=mibDkaVersionSerialNumber, mibCmVersionMIBOID=mibCmVersionMIBOID, portControlSwitchStatus=portControlSwitchStatus, mibSsidLeafVersionEntry=mibSsidLeafVersionEntry, raidExMibPortControlConfiguration=raidExMibPortControlConfiguration, raidExMibPortControlParameter=raidExMibPortControlParameter, raidExMibDKUHWTable=raidExMibDKUHWTable, rTMonitorDataIOPSMax=rTMonitorDataIOPSMax, cvsFSPGNumber=cvsFSPGNumber, raidExMibRoot=raidExMibRoot, hihsmCalculationParameterTable=hihsmCalculationParameterTable, wwnGroupControlIndex=wwnGroupControlIndex, chaDisplayName=chaDisplayName, raidExMibSMConfigurationTable=raidExMibSMConfigurationTable, mibChaLeafVersionEntry=mibChaLeafVersionEntry, chaPackageType=chaPackageType, raidExMibHIHSM=raidExMibHIHSM, mibHihsmLeafVersionTable=mibHihsmLeafVersionTable, dkaClusterNumber=dkaClusterNumber, mibCmVersionMIBVersion=mibCmVersionMIBVersion, hihsmMonParamGatheringTime=hihsmMonParamGatheringTime, hihsmVolumeMigrationHistoryCtrlTable=hihsmVolumeMigrationHistoryCtrlTable, cvsDVLDEV=cvsDVLDEV, nPrioRTMonitorDataGatheredDate=nPrioRTMonitorDataGatheredDate, commandProgress=commandProgress, cswDisplayName=cswDisplayName, raidExMibParityGroupLDEVTable=raidExMibParityGroupLDEVTable, portPrmStatus=portPrmStatus, mibDkaLeafVersionTable=mibDkaLeafVersionTable, hihsmCSWCacheCSWNumber=hihsmCSWCacheCSWNumber, wwnGroupControlStatus=wwnGroupControlStatus, hihsmAutomaticMigrationParameterTable=hihsmAutomaticMigrationParameterTable, hihsmPlanStatusControlStatus=hihsmPlanStatusControlStatus, raidExMibRTMonitorDataEntry=raidExMibRTMonitorDataEntry, hihsmPGUtilPGNumber=hihsmPGUtilPGNumber, cvsDVCylinder=cvsDVCylinder, portControlSetUpSerialNumber=portControlSetUpSerialNumber, luSEStructTopDeviceCU=luSEStructTopDeviceCU, raidExMibCustomizedVolumeTable=raidExMibCustomizedVolumeTable, hihsmDKPUtilizationTable=hihsmDKPUtilizationTable, luPathDeviceLDEV=luPathDeviceLDEV, hihsmVolHstListSerialNumber=hihsmVolHstListSerialNumber, hihsmVolHstListDate=hihsmVolHstListDate, ssidBoundarySerialNumber=ssidBoundarySerialNumber, hihsmMonParamSerialNumber=hihsmMonParamSerialNumber, raidExMibCVSParityGroupEntry=raidExMibCVSParityGroupEntry, mibDcrVersionMIBOID=mibDcrVersionMIBOID, raidEventCommandFinished=raidEventCommandFinished, prioRTMonitorDataGatheredTime=prioRTMonitorDataGatheredTime, mibPortControlLeafVersionEntry=mibPortControlLeafVersionEntry, hihsmLDEVUtilData=hihsmLDEVUtilData, hihsmLDEVUtilSerialNumber=hihsmLDEVUtilSerialNumber, raidExMibPortTable=raidExMibPortTable, cvsFSFB4Number=cvsFSFB4Number, lunGroupID=lunGroupID, raidExMibLogicalDeviceEntry=raidExMibLogicalDeviceEntry, luPathControlIndex=luPathControlIndex, hihsmVolHstListDstFB4Number=hihsmVolHstListDstFB4Number, logicalDeviceControlStatus=logicalDeviceControlStatus, lunGroupControlIndex=lunGroupControlIndex, hihsmCHACSWCHANumber=hihsmCHACSWCHANumber, hihsmCHPUtilData=hihsmCHPUtilData, portControlSetUpDisplayName=portControlSetUpDisplayName, raidExMibVersion=raidExMibVersion, hihsmMonParamGatheredFromTime=hihsmMonParamGatheredFromTime, eventListIndexRecordNo=eventListIndexRecordNo, hihsmAutomaticMigrationParameterEntry=hihsmAutomaticMigrationParameterEntry, hihsmPlanLDEVDstLDEV=hihsmPlanLDEVDstLDEV, subsystemIDSSID=subsystemIDSSID, mibAllLeafVersionTable=mibAllLeafVersionTable, mibLunsLeafVersionEntry=mibLunsLeafVersionEntry, raidEventCommandTable=raidEventCommandTable, chaNumber=chaNumber, pgRAIDType=pgRAIDType, portPrmDisplayName=portPrmDisplayName, nPrioRTMonitorDataIOPSAve=nPrioRTMonitorDataIOPSAve, mibCvsLeafVersionSerialNumber=mibCvsLeafVersionSerialNumber, hihsmLDEVUtilLDEV=hihsmLDEVUtilLDEV, mibPgVersionMIBVersion=mibPgVersionMIBVersion, prioAllPortPrmPrioMBS=prioAllPortPrmPrioMBS, chpNumber=chpNumber, prioRTMonitorDataMBSMax=prioRTMonitorDataMBSMax, mibPortVersionMIBOID=mibPortVersionMIBOID, nPrioRTMonitorDataIOPSMin=nPrioRTMonitorDataIOPSMin, mibPathVersionMIBVersion=mibPathVersionMIBVersion, nPrioRTMonitorDataIOPSMax=nPrioRTMonitorDataIOPSMax, lunGroupWWNSecurityVL=lunGroupWWNSecurityVL, pgNumber=pgNumber, hihsmCHASMSerialNumber=hihsmCHASMSerialNumber, raidExMibDKPConfigurationEntry=raidExMibDKPConfigurationEntry, raidExMibParityGroupLDEVEntry=raidExMibParityGroupLDEVEntry, nPrioRTMonitorDataMBSAve=nPrioRTMonitorDataMBSAve, mibCmVersionSerialNumber=mibCmVersionSerialNumber, luSEStructDeviceLDEV=luSEStructDeviceLDEV, hihsmPlanStatusMigrationTime=hihsmPlanStatusMigrationTime, mibPathVersionMIBOID=mibPathVersionMIBOID, hihsmPGUtilFB4Number=hihsmPGUtilFB4Number, raidRoot=raidRoot, allPortPrmStatus=allPortPrmStatus, switchOnOff=switchOnOff, raidExMibRTMonitoringCntlEntry=raidExMibRTMonitoringCntlEntry, hihsmDKPUtilClusterNumber=hihsmDKPUtilClusterNumber, raidExMibRTMonitoringCntlTable=raidExMibRTMonitoringCntlTable, hihsmCHACSWCHAClusterNumber=hihsmCHACSWCHAClusterNumber, hihsmLDEVUtilizationTable=hihsmLDEVUtilizationTable, mibCswVersionMIBVersion=mibCswVersionMIBVersion, mibChaVersionSerialNumber=mibChaVersionSerialNumber, hihsmVolHstListTime=hihsmVolHstListTime, mibSsidVersionMIBOID=mibSsidVersionMIBOID, raidExMibSubsystemIDTable=raidExMibSubsystemIDTable, luPathDeviceCU=luPathDeviceCU, hihsmMonParamControlStatus=hihsmMonParamControlStatus, hihsmCalcParamDataType=hihsmCalcParamDataType, rTMonitoringCntlSerialNumber=rTMonitoringCntlSerialNumber, raidExMibNPrioRTMonitorDataEntry=raidExMibNPrioRTMonitorDataEntry, wwnID=wwnID, wwnControlStatus=wwnControlStatus, hihsmManVolMigDstCU=hihsmManVolMigDstCU, hihsmDRRUtilDKANumber=hihsmDRRUtilDKANumber, timeZoneID=timeZoneID, hihsmCSWCacheSerialNumber=hihsmCSWCacheSerialNumber, dkcHWCSW=dkcHWCSW, raidExMibRealTimeMonitoringInformation=raidExMibRealTimeMonitoringInformation, luPathControlStatus=luPathControlStatus, prioRTMonitorDataSerialNumber=prioRTMonitorDataSerialNumber, hihsmCalcParamSerialNumber=hihsmCalcParamSerialNumber, wwnSerialNumber=wwnSerialNumber, eventTrapSerialNumber=eventTrapSerialNumber, nPrioRTMonitorDataMBSMax=nPrioRTMonitorDataMBSMax, luSize=luSize, luSEStructDeviceCU=luSEStructDeviceCU, hihsmMonParamFunctionSwitch=hihsmMonParamFunctionSwitch, raidExMibCacheDCRTable=raidExMibCacheDCRTable, customizedVolumeControlCylinder=customizedVolumeControlCylinder, cvsFSSize=cvsFSSize, raidExMibCacheSizeTable=raidExMibCacheSizeTable, raidExMibPortParameterEntry=raidExMibPortParameterEntry, hihsmCHACSWCSWNumber=hihsmCHACSWCSWNumber, customizedVolumeFB4Number=customizedVolumeFB4Number, prioAllPortPrmSerialNumber=prioAllPortPrmSerialNumber, raidExMibLUSEStructureEntry=raidExMibLUSEStructureEntry, hihsmAutoHstListControlIndex=hihsmAutoHstListControlIndex, mibPortleafVersionEntry=mibPortleafVersionEntry, logicalDeviceEmulation=logicalDeviceEmulation, hihsmAutoParamUseFromTime=hihsmAutoParamUseFromTime, raidExMibNPrioRTMonitorDataTable=raidExMibNPrioRTMonitorDataTable, nPrioRTMonitorDataSerialNumber=nPrioRTMonitorDataSerialNumber, portControlSwitchSerialNumber=portControlSwitchSerialNumber, lunPortID=lunPortID, hihsmDKPUtilSerialNumber=hihsmDKPUtilSerialNumber, rTMonitorDataControlIndex=rTMonitorDataControlIndex, hihsmPlanStatusCheckDate=hihsmPlanStatusCheckDate, hihsmPlanLDEVDstFB4Number=hihsmPlanLDEVDstFB4Number, raidExMibRaidListTable=raidExMibRaidListTable, raidExMibLUNSSwitchTable=raidExMibLUNSSwitchTable, hihsmCSWCacheCacheClusterNumber=hihsmCSWCacheCacheClusterNumber, portFibreAddress=portFibreAddress, hihsmManVolMigProgress=hihsmManVolMigProgress, dkuHWFan=dkuHWFan, hihsmExpPGUtilSerialNumber=hihsmExpPGUtilSerialNumber, mibCvsLeafVersionMIBOID=mibCvsLeafVersionMIBOID, logicalDeviceLUExpand=logicalDeviceLUExpand, mibAllLeafVersionEntry=mibAllLeafVersionEntry, hihsmDKPUtilDKANumber=hihsmDKPUtilDKANumber, storage=storage, mibDcrVersionMIBVersion=mibDcrVersionMIBVersion, raidExMibPrioRTMonitorDataTable=raidExMibPrioRTMonitorDataTable, hihsmClassPGPGNumber=hihsmClassPGPGNumber, dkcRaidListIndexSerialNumber=dkcRaidListIndexSerialNumber, hihsmAutomaticMigrationClassPGTable=hihsmAutomaticMigrationClassPGTable, logicalDeviceSize=logicalDeviceSize, hihsmPlanStatusMigrationDate=hihsmPlanStatusMigrationDate, drrClusterNumber=drrClusterNumber, luPathSCSIID=luPathSCSIID, raidExMibLUNSSwitchEntry=raidExMibLUNSSwitchEntry, hihsmAutomaticMigrationClassListTable=hihsmAutomaticMigrationClassListTable, trapCommandKind=trapCommandKind, lunLUN=lunLUN, cswClusterNumber=cswClusterNumber, hihsmAutomaticMigrationPlanStatusEntry=hihsmAutomaticMigrationPlanStatusEntry, hihsmCHAtoSMUtilizationEntry=hihsmCHAtoSMUtilizationEntry, timeZoneSerialNumber=timeZoneSerialNumber, dkcHWFan=dkcHWFan, pgLDEVLDEV=pgLDEVLDEV, mibLunsLeafVersionTable=mibLunsLeafVersionTable, subsystemIDSerialNumber=subsystemIDSerialNumber, hihsmManVolMigSrcCU=hihsmManVolMigSrcCU, mibDkaVersionMIBOID=mibDkaVersionMIBOID, eventListNickname=eventListNickname, hihsmAutomaticMigrationClassListEntry=hihsmAutomaticMigrationClassListEntry, pgLDEVFB4Number=pgLDEVFB4Number, raidExMibCVSCUInfEntry=raidExMibCVSCUInfEntry, cacheDCRControlIndex=cacheDCRControlIndex, raidExMibDKCHWTable=raidExMibDKCHWTable, cacheDCRStartCylinder=cacheDCRStartCylinder, hihsmDKAtoCSWUtilizationEntry=hihsmDKAtoCSWUtilizationEntry, hihsmCalculationParameterEntry=hihsmCalculationParameterEntry, raidExMibTrapListTable=raidExMibTrapListTable, raidExMibDRRConfigurationTable=raidExMibDRRConfigurationTable, hihsmCHPUtilizationEntry=hihsmCHPUtilizationEntry, pgFB4Number=pgFB4Number, cacheDCREndCylinder=cacheDCREndCylinder, cacheSizeTotalCacheSize=cacheSizeTotalCacheSize, raidExMibPortControlSwitchEntry=raidExMibPortControlSwitchEntry, cvsPGDisplayName=cvsPGDisplayName, raidExMibCustomizedVolumeEntry=raidExMibCustomizedVolumeEntry, mibEnvVersionSerialNumber=mibEnvVersionSerialNumber, raidExMibCVSCUInfTable=raidExMibCVSCUInfTable, raidExMibLUNSWWNTable=raidExMibLUNSWWNTable, chpDisplayName=chpDisplayName, mibEnvVersionMIBOID=mibEnvVersionMIBOID, raidExMibLU=raidExMibLU, commandRefreshTarget2=commandRefreshTarget2, hihsmManualVolumeMigrationTable=hihsmManualVolumeMigrationTable, hihsmPlanLDEVSrcCU=hihsmPlanLDEVSrcCU, hihsmVolumeMigrationHistoryListEntry=hihsmVolumeMigrationHistoryListEntry, hihsmAutoParamExecutionTime=hihsmAutoParamExecutionTime, hihsmCalcParamToDate=hihsmCalcParamToDate, raidExMibChannelAdapter=raidExMibChannelAdapter, hihsmCalcParamFromTime=hihsmCalcParamFromTime, raidExMibVersionManagement=raidExMibVersionManagement, trapCommandSerialNumber=trapCommandSerialNumber, raidExMibDKUHWEntry=raidExMibDKUHWEntry, raidExMibCVSFreeSpaceEntry=raidExMibCVSFreeSpaceEntry, dkaNumber=dkaNumber, cvsPGRAIDType=cvsPGRAIDType, raidExMibTimeZoneDataEntry=raidExMibTimeZoneDataEntry)
mibBuilder.exportSymbols("HDS9900MIB", hihsmLDEVUtilizationEntry=hihsmLDEVUtilizationEntry, raidExMibSharedMemory=raidExMibSharedMemory, hihsmDKCUtilizationEntry=hihsmDKCUtilizationEntry, hihsmManVolMigDstLDEV=hihsmManVolMigDstLDEV, hihsmCHASMUtilData=hihsmCHASMUtilData, hihsmAutoParamIntervalDay=hihsmAutoParamIntervalDay, mibCmLeafVersionEntry=mibCmLeafVersionEntry, hihsmAutomaticMigrationClass=hihsmAutomaticMigrationClass, raidEventUserService=raidEventUserService, rTMonitorDataPortID=rTMonitorDataPortID, hihsmCalcParamCalcType=hihsmCalcParamCalcType, allPortPrmSerialNumber=allPortPrmSerialNumber, logicalDeviceCU=logicalDeviceCU, raidExMibLUNSLUNGroupTable=raidExMibLUNSLUNGroupTable, switchControlStatus=switchControlStatus, portControlSetUpPortID=portControlSetUpPortID, hihsmPGUtilData=hihsmPGUtilData, hihsmDKCUtilizationTable=hihsmDKCUtilizationTable, raidExMibPrioRTMonitorDataEntry=raidExMibPrioRTMonitorDataEntry, mibDcrLeafVersionEntry=mibDcrLeafVersionEntry, raidExMibSSIDBoundaryTable=raidExMibSSIDBoundaryTable, hihsmAutomaticMigrationPlan=hihsmAutomaticMigrationPlan, smSerialNumber=smSerialNumber, hihsmVolHstCtrlControlStatus=hihsmVolHstCtrlControlStatus, storageExMib=storageExMib, pgDriveType=pgDriveType, smClusterNumber=smClusterNumber, portPrmSerialNumber=portPrmSerialNumber, mibLuseVersionMIBOID=mibLuseVersionMIBOID, raidExMibRTMonitorDataTable=raidExMibRTMonitorDataTable, customizedVolumeControlStatus=customizedVolumeControlStatus, subsystemIDCU=subsystemIDCU, cacheDCREndHead=cacheDCREndHead, mibCswVersionSerialNumber=mibCswVersionSerialNumber, hihsmCHACSWCSWClusterNumber=hihsmCHACSWCSWClusterNumber, hihsmAutoParamPlanningDay=hihsmAutoParamPlanningDay, hihsmCSWCacheCacheNumber=hihsmCSWCacheCacheNumber, portFibreTopology=portFibreTopology, hihsmClassPGFB4Number=hihsmClassPGFB4Number, cacheDCRStartLBA=cacheDCRStartLBA, eventListREFCODE=eventListREFCODE, mibPgLeafVersionTable=mibPgLeafVersionTable, dkcHWCache=dkcHWCache, raidExMibPortControlSetUpEntry=raidExMibPortControlSetUpEntry, rTMonitorDataMBSAve=rTMonitorDataMBSAve, luSEStructOffset=luSEStructOffset, mibSmLeafVersionEntry=mibSmLeafVersionEntry, raidEventUserModerate=raidEventUserModerate, hihsmDRRUtilClusterNumber=hihsmDRRUtilClusterNumber, hihsmDRRUtilSerialNumber=hihsmDRRUtilSerialNumber, hihsmVolHstListDstPGNumber=hihsmVolHstListDstPGNumber, hihsmPGUtilizationEntry=hihsmPGUtilizationEntry, hihsmDKACSWDKANumber=hihsmDKACSWDKANumber, hihsmPlanLDEVDstPGNumber=hihsmPlanLDEVDstPGNumber, hihsmDKCUtilSerialNumber=hihsmDKCUtilSerialNumber, cvsPGPGNumber=cvsPGPGNumber, hihsmExpPGUtilSrcLDEV=hihsmExpPGUtilSrcLDEV, hihsmAutoParamUseToTime=hihsmAutoParamUseToTime, raidExMibDKPConfigurationTable=raidExMibDKPConfigurationTable, luSEStructTopDeviceLDEV=luSEStructTopDeviceLDEV, raidExMibCVSParityGroupTable=raidExMibCVSParityGroupTable, hihsmAutomaticMigrationPlanLDEVTable=hihsmAutomaticMigrationPlanLDEVTable, mibPortControlVersionSerialNumber=mibPortControlVersionSerialNumber, mibPortVersionSerialNumber=mibPortVersionSerialNumber, raidExMibPortControlSetUpTable=raidExMibPortControlSetUpTable, mibSsidVersionSerialNumber=mibSsidVersionSerialNumber, dkaDisplayName=dkaDisplayName, hihsmVolHstListAction=hihsmVolHstListAction, hihsmExpPGUtilDstPG=hihsmExpPGUtilDstPG, raidExMibSMConfigurationEntry=raidExMibSMConfigurationEntry, portPrmPrioMBS=portPrmPrioMBS, cvsDVControlIndex=cvsDVControlIndex, raidExMibCSWConfigurationTable=raidExMibCSWConfigurationTable, mibCvsLeafVersionTable=mibCvsLeafVersionTable, raidExMibCSW=raidExMibCSW, lunControlStatus=lunControlStatus, raidExMibLUInformationLUTable=raidExMibLUInformationLUTable, cvsDVControlCylinder=cvsDVControlCylinder, cvsPGFreeCylinder=cvsPGFreeCylinder, hihsmAutoHstCtrlControlStatus=hihsmAutoHstCtrlControlStatus, hihsmDKASMDKAClusterNumber=hihsmDKASMDKAClusterNumber, hihsmDKASMSerialNumber=hihsmDKASMSerialNumber, hihsmCalcParamControlStatus=hihsmCalcParamControlStatus, lunWWNSecurityVL=lunWWNSecurityVL, portDisplayName=portDisplayName, luCommandDev=luCommandDev, raidExMibRaidListEntry=raidExMibRaidListEntry, raidExMibLUNSWWNEntry=raidExMibLUNSWWNEntry, raidExMibCVSFreeSpaceTable=raidExMibCVSFreeSpaceTable, raidExMibDKCHWEntry=raidExMibDKCHWEntry, hihsmDKPUtilizationEntry=hihsmDKPUtilizationEntry, raidlistMibNickName=raidlistMibNickName, raidExMibCacheMemory=raidExMibCacheMemory, mibPgLeafVersionEntry=mibPgLeafVersionEntry, hihsmDRRUtilizationTable=hihsmDRRUtilizationTable, hihsmDKACSWDKAClusterNumber=hihsmDKACSWDKAClusterNumber, hihsmDKPUtilDKPNumber=hihsmDKPUtilDKPNumber, cacheConfCacheNumber=cacheConfCacheNumber, rTMonitoringCntlStatus=rTMonitoringCntlStatus, subsystemIDControlStatus=subsystemIDControlStatus, prioRTMonitorDataIOPSMin=prioRTMonitorDataIOPSMin, mibDcrVersionSerialNumber=mibDcrVersionSerialNumber, logicalDeviceLDEV=logicalDeviceLDEV, raidExMibDRRConfigurationEntry=raidExMibDRRConfigurationEntry, hihsmVolHstListControlIndex=hihsmVolHstListControlIndex, raidExMibDkcCount=raidExMibDkcCount, cvsFSControlIndex=cvsFSControlIndex, prioRTMonitorDataIOPSAve=prioRTMonitorDataIOPSAve, hihsmPlanLDEVSrcFB4Number=hihsmPlanLDEVSrcFB4Number, mibSmLeafVersionTable=mibSmLeafVersionTable, mibLunsVersionMIBVersion=mibLunsVersionMIBVersion, raidExMibLogicalDeviceTable=raidExMibLogicalDeviceTable, customizedVolumeUserSize=customizedVolumeUserSize, cacheDCRCU=cacheDCRCU, hihsmLDEVUtilCU=hihsmLDEVUtilCU, hihsmAutoParamDayOfMonth=hihsmAutoParamDayOfMonth, portControlStatus=portControlStatus, dkuHWPS=dkuHWPS, lunGroupNickname=lunGroupNickname, hihsmAutomaticMigrationHistoryListEntry=hihsmAutomaticMigrationHistoryListEntry, hihsmManVolMigControlStatus=hihsmManVolMigControlStatus, mibDkaLeafVersionEntry=mibDkaLeafVersionEntry, hihsmDKACSWCSWClusterNumber=hihsmDKACSWCSWClusterNumber, hihsmPlanLDEVSrcPGNumber=hihsmPlanLDEVSrcPGNumber, raidEventUserAcute=raidEventUserAcute, mibAllLeafVersionSerialNumber=mibAllLeafVersionSerialNumber, hihsmVolHstListDstLDEV=hihsmVolHstListDstLDEV, portPrmThreshold=portPrmThreshold, hihsmCHPUtilCHANumber=hihsmCHPUtilCHANumber, raidExMibLUSEStructureTable=raidExMibLUSEStructureTable, raidExMibCHPConfigurationTable=raidExMibCHPConfigurationTable, hihsmExpectationPGUtilizationTable=hihsmExpectationPGUtilizationTable, mibChaVersionMIBVersion=mibChaVersionMIBVersion, drrNumber=drrNumber, hihsmAutoHstListSerialNumber=hihsmAutoHstListSerialNumber, mibLuseVersionMIBVersion=mibLuseVersionMIBVersion, rTMonitorDataMBSMax=rTMonitorDataMBSMax, mibEnvLeafVersionEntry=mibEnvLeafVersionEntry, mibCmLeafVersionTable=mibCmLeafVersionTable, hihsmCHASMCHAClusterNumber=hihsmCHASMCHAClusterNumber, mibLunsVersionMIBOID=mibLunsVersionMIBOID, hihsmCalcParamFromDate=hihsmCalcParamFromDate, raidExMibLUConfiguration=raidExMibLUConfiguration, hihsmLDEVUtilFB4Number=hihsmLDEVUtilFB4Number, prioAllPortPrmStatus=prioAllPortPrmStatus, cvsDVCU=cvsDVCU, hihsmDKACSWSerialNumber=hihsmDKACSWSerialNumber, hihsmDKACSWUtilData=hihsmDKACSWUtilData, mibChaLeafVersionTable=mibChaLeafVersionTable, mibPortControlVersionMIBOID=mibPortControlVersionMIBOID, luSEStructControlIndex=luSEStructControlIndex, hihsmPlanLDEVSerialNumber=hihsmPlanLDEVSerialNumber, hihsmCSWtoCacheUtilizationEntry=hihsmCSWtoCacheUtilizationEntry, hihsmPlanLDEVControlIndex=hihsmPlanLDEVControlIndex, cvsPGFB4Number=cvsPGFB4Number, logicalDeviceRAIDLevel=logicalDeviceRAIDLevel, hihsmCHAtoCSWUtilizationEntry=hihsmCHAtoCSWUtilizationEntry, portNPrmnPrioIOPS=portNPrmnPrioIOPS, hihsmMonitoringParameterTable=hihsmMonitoringParameterTable, raidExMibLDev=raidExMibLDev, raidExMibAllPortParameterEntry=raidExMibAllPortParameterEntry, hihsmCalcParamToTime=hihsmCalcParamToTime, hihsmCSWCacheUtilData=hihsmCSWCacheUtilData, dkuHWEnvironment=dkuHWEnvironment, system=system, hihsmClassListClassNumber=hihsmClassListClassNumber, portWWN=portWWN, cacheDCRCylinderSize=cacheDCRCylinderSize, subsystemIDStartLDEV=subsystemIDStartLDEV, cswNumber=cswNumber, mibPgVersionMIBOID=mibPgVersionMIBOID, luCount=luCount, cacheDCRMode=cacheDCRMode, mibSsidVersionMIBVersion=mibSsidVersionMIBVersion, drrDKANumber=drrDKANumber, raidExMibPortParameterTable=raidExMibPortParameterTable, mibSmLeafVersionSerialNumber=mibSmLeafVersionSerialNumber, luDeviceCU=luDeviceCU, raidExMibLUPathTable=raidExMibLUPathTable, raidExMibDKAConfigurationTable=raidExMibDKAConfigurationTable, raidExMibLUNSLUNTable=raidExMibLUNSLUNTable, rTMonitorDataSetting=rTMonitorDataSetting, pgLDEVSerialNumber=pgLDEVSerialNumber, portControlSwitchOnOff=portControlSwitchOnOff, raidExMibCacheDCREntry=raidExMibCacheDCREntry, hihsmAutomaticMigrationPlanStatusTable=hihsmAutomaticMigrationPlanStatusTable, mibCvsLeafVersionMIBVersion=mibCvsLeafVersionMIBVersion, lunGroupWWNGroupSecurityVL=lunGroupWWNGroupSecurityVL, hihsmDKASMSMClusterNumber=hihsmDKASMSMClusterNumber, hihsmClassListControlStatus=hihsmClassListControlStatus, commandKind=commandKind, commandManagerName=commandManagerName, hihsmAutoParamControlStatus=hihsmAutoParamControlStatus, hihsmVolHstListSrcFB4Number=hihsmVolHstListSrcFB4Number, wwnWWN=wwnWWN, cacheDCRSerialNumber=cacheDCRSerialNumber, cacheConfClusterNumber=cacheConfClusterNumber, nPrioRTMonitorDataGatheredTime=nPrioRTMonitorDataGatheredTime, raid=raid, luSerialNumber=luSerialNumber, luPathLUN=luPathLUN, cacheSizeRemainCacheSize=cacheSizeRemainCacheSize, hihsmCHASMCHANumber=hihsmCHASMCHANumber, logicalDeviceSerialNumber=logicalDeviceSerialNumber, hihsmClassListMaxUtilization=hihsmClassListMaxUtilization, raidExMibCacheConfigurationEntry=raidExMibCacheConfigurationEntry, hihsmAutomaticMigrationHistoryListTable=hihsmAutomaticMigrationHistoryListTable, raidExMib=raidExMib, mibPortControlLeafVersionTable=mibPortControlLeafVersionTable, luControlStatus=luControlStatus, subsystemIDEndLDEV=subsystemIDEndLDEV, luPath=luPath, hihsmAutoHstCtrlSerialNumber=hihsmAutoHstCtrlSerialNumber, luPathPortID=luPathPortID, pgDisplayName=pgDisplayName, cvsCUInfFreeCUNum=cvsCUInfFreeCUNum, prioRTMonitorDataMBSMin=prioRTMonitorDataMBSMin, dkpNumber=dkpNumber, hihsmCHPUtilizationTable=hihsmCHPUtilizationTable, rTMonitorDataIOPSMin=rTMonitorDataIOPSMin, chaSerialNumber=chaSerialNumber, hihsmAutomaticMigrationHistory=hihsmAutomaticMigrationHistory, raidExMibDiskAdapter=raidExMibDiskAdapter, mibLdevVersionMIBVersion=mibLdevVersionMIBVersion, mibPathVersionSerialNumber=mibPathVersionSerialNumber, mibHihsmVersionMIBVersion=mibHihsmVersionMIBVersion, cvsPGSerialNumber=cvsPGSerialNumber, dkcHWProcessor=dkcHWProcessor, mibLunsVersionSerialNumber=mibLunsVersionSerialNumber, customizedVolumePGNumber=customizedVolumePGNumber, pgLDEVControlIndex=pgLDEVControlIndex, portPrmSetting=portPrmSetting, mibEnvLeafVersionTable=mibEnvLeafVersionTable, dkcHWEnvironment=dkcHWEnvironment, chpClusterNumber=chpClusterNumber, dkcHWBattery=dkcHWBattery, pgSerialNumber=pgSerialNumber, wwnGroupedWWNsVL=wwnGroupedWWNsVL, mibPgVersionSerialNumber=mibPgVersionSerialNumber, rTMonitorDataIOPSAve=rTMonitorDataIOPSAve, cvsDVControlStatus=cvsDVControlStatus, wwnGroupNickname=wwnGroupNickname, switchSerialNumber=switchSerialNumber, dkuRaidListIndexSerialNumber=dkuRaidListIndexSerialNumber, raidExMibLUNSWWNGroupTable=raidExMibLUNSWWNGroupTable, hihsmManualMigration=hihsmManualMigration, hitachi=hitachi, chaMode=chaMode, customizedVolumeUserCylinder=customizedVolumeUserCylinder, hihsmDKAtoSMUtilizationEntry=hihsmDKAtoSMUtilizationEntry, wwnNickname=wwnNickname, raidExMibLUSE=raidExMibLUSE, cvsDVSize=cvsDVSize, chpCHANumber=chpCHANumber)
mibBuilder.exportSymbols("HDS9900MIB", hihsmDKASMDKANumber=hihsmDKASMDKANumber, cacheDCREndLBA=cacheDCREndLBA, raidExMibDKAConfigurationEntry=raidExMibDKAConfigurationEntry, hihsmPlanLDEVSrcLDEV=hihsmPlanLDEVSrcLDEV, mibAllLeafVersionMIBVersionData=mibAllLeafVersionMIBVersionData, mibLdevLeafVersionEntry=mibLdevLeafVersionEntry, systemExMib=systemExMib, hihsmCSWtoCacheUtilizationTable=hihsmCSWtoCacheUtilizationTable, hihsmAutomaticMigrationClassPGEntry=hihsmAutomaticMigrationClassPGEntry, raidExMibSubsystemInfo=raidExMibSubsystemInfo, hihsmExpPGUtilControlStatus=hihsmExpPGUtilControlStatus, mibDcrLeafVersionTable=mibDcrLeafVersionTable, hihsmAutoHstListMessage=hihsmAutoHstListMessage, cacheConfSerialNumber=cacheConfSerialNumber, raidExMibCacheConfigurationTable=raidExMibCacheConfigurationTable, rTMonitorDataMBSMin=rTMonitorDataMBSMin, hihsmCalculatedData=hihsmCalculatedData, hihsmAutoParamJudgeMethod=hihsmAutoParamJudgeMethod, hihsmVolHstListSrcPGNumber=hihsmVolHstListSrcPGNumber, dkcHWPS=dkcHWPS, hihsmLDEVUtilPGNumber=hihsmLDEVUtilPGNumber, hihsmMonParamGatheredToTime=hihsmMonParamGatheredToTime, cvsPGFreeSize=cvsPGFreeSize, customizedVolumeEmulation=customizedVolumeEmulation, portSerialNumber=portSerialNumber, hihsmVolHstListSrcCU=hihsmVolHstListSrcCU, hihsmMonParamGatheredToDate=hihsmMonParamGatheredToDate, mibPortVersionMIBVersion=mibPortVersionMIBVersion, raidExMibPortEntry=raidExMibPortEntry, mibLuseVersionSerialNumber=mibLuseVersionSerialNumber, raidExMibCSWConfigurationEntry=raidExMibCSWConfigurationEntry, wwnControlIndex=wwnControlIndex, commandSerialNumber=commandSerialNumber, hihsmVolumeMigrationHistoryCtrlEntry=hihsmVolumeMigrationHistoryCtrlEntry, customizedVolumeSerialNumber=customizedVolumeSerialNumber, dkuHWDrive=dkuHWDrive, portNPrmnPrioMBS=portNPrmnPrioMBS, luSEStructSerialNumber=luSEStructSerialNumber, hihsmAutoParamSerialNumber=hihsmAutoParamSerialNumber, logicalDeviceLUPath=logicalDeviceLUPath, eventListIndexSerialNumber=eventListIndexSerialNumber, raidExMibTimeZoneDataTable=raidExMibTimeZoneDataTable, raidExMibDCRConfiguration=raidExMibDCRConfiguration, mibCswLeafVersionTable=mibCswLeafVersionTable, hihsmCSWCacheCSWClusterNumber=hihsmCSWCacheCSWClusterNumber, cacheDCRAllOfDevice=cacheDCRAllOfDevice, raidExMibLUNSLUNEntry=raidExMibLUNSLUNEntry, raidExMibName=raidExMibName, raidExMibParityGroup=raidExMibParityGroup, mibCvsLeafVersionEntry=mibCvsLeafVersionEntry, drrSerialNumber=drrSerialNumber, hihsmCHPUtilSerialNumber=hihsmCHPUtilSerialNumber, customizedVolumeType=customizedVolumeType, hihsmVolHstListDstCU=hihsmVolHstListDstCU, raidEventUserSerious=raidEventUserSerious, pgLDEVCU=pgLDEVCU, hihsmClassListSerialNumber=hihsmClassListSerialNumber, cvsPGControlStatus=cvsPGControlStatus, cvsDVFB4Number=cvsDVFB4Number, portPrmControlIndex=portPrmControlIndex, raidExMibPrioAllPortParameterTable=raidExMibPrioAllPortParameterTable, cvsDVEmulation=cvsDVEmulation, raidExMibPrioAllPortParameterEntry=raidExMibPrioAllPortParameterEntry, mibPortControlVersionMIBVersion=mibPortControlVersionMIBVersion, mibLuLeafVersion=mibLuLeafVersion, hihsmPGUtilSerialNumber=hihsmPGUtilSerialNumber, hihsmCHAtoCSWUtilizationTable=hihsmCHAtoCSWUtilizationTable, mibSmLeafVersionMIBVersion=mibSmLeafVersionMIBVersion, raidlistDKCProductName=raidlistDKCProductName, hihsmAutoParamFunctionSwitch=hihsmAutoParamFunctionSwitch, mibPathLeafVersionTable=mibPathLeafVersionTable, portControlSetUpControlIndex=portControlSetUpControlIndex, mibLdevVersionSerialNumber=mibLdevVersionSerialNumber, cacheSizeSerialNumber=cacheSizeSerialNumber, nPrioRTMonitorDataMBSMin=nPrioRTMonitorDataMBSMin, raidExMibLUPathEntry=raidExMibLUPathEntry, mibHihsmVersionMIBOID=mibHihsmVersionMIBOID, raidExMibLUNSWWNGroupEntry=raidExMibLUNSWWNGroupEntry, prioRTMonitorDataIOPSMax=prioRTMonitorDataIOPSMax, hihsmAutoParamMaxDuration=hihsmAutoParamMaxDuration, wwnGroupID=wwnGroupID, hihsmMonitoringParameterEntry=hihsmMonitoringParameterEntry, chaControlStatus=chaControlStatus, dkpDKANumber=dkpDKANumber, hihsmDKAtoCSWUtilizationTable=hihsmDKAtoCSWUtilizationTable, hihsmClassPGClassNumber=hihsmClassPGClassNumber, raidExMibCommandTable=raidExMibCommandTable, pgLDEVPGNumber=pgLDEVPGNumber, mibEnvVersionMIBVersion=mibEnvVersionMIBVersion, mibLdevLeafVersionTable=mibLdevLeafVersionTable, wwnGroupSerialNumber=wwnGroupSerialNumber, hihsmClassPGSerialNumber=hihsmClassPGSerialNumber, portKind=portKind, cswSerialNumber=cswSerialNumber, hihsmPlanStatusData=hihsmPlanStatusData, chpSerialNumber=chpSerialNumber, hihsmDKPUtilData=hihsmDKPUtilData, commandRefreshTarget=commandRefreshTarget, wwnGroupPortID=wwnGroupPortID, logicalDeviceSlotSize=logicalDeviceSlotSize, wwnPortID=wwnPortID, dkpSerialNumber=dkpSerialNumber, portControlSetUpSetting=portControlSetUpSetting, hihsmAutoParamHightestPoints=hihsmAutoParamHightestPoints, hihsmExpPGUtilSrcCU=hihsmExpPGUtilSrcCU, cvsPGDriveType=cvsPGDriveType, dkpClusterNumber=dkpClusterNumber, mibSmLeafVersionMIBOID=mibSmLeafVersionMIBOID, hihsmDKACSWCSWNumber=hihsmDKACSWCSWNumber, hihsmVolHstListSrcLDEV=hihsmVolHstListSrcLDEV, raidExMibCommandEntry=raidExMibCommandEntry, hihsmDRRUtilizationEntry=hihsmDRRUtilizationEntry, logicalDeviceLBA=logicalDeviceLBA, cvsDVPGNumber=cvsDVPGNumber, lunGroupPortID=lunGroupPortID, cacheDCRControlStatus=cacheDCRControlStatus, raidExMibLUInformationLUEntry=raidExMibLUInformationLUEntry, raidExMibCHAConfigurationTable=raidExMibCHAConfigurationTable, dkaSerialNumber=dkaSerialNumber, pgHIHSMFixed=pgHIHSMFixed, raidExMibParityGroupListEntry=raidExMibParityGroupListEntry, hihsmCHPUtilCHPNumber=hihsmCHPUtilCHPNumber, hihsmAutomaticMigration=hihsmAutomaticMigration, hihsmVolHstCtrlSerialNumber=hihsmVolHstCtrlSerialNumber, pgControlStatus=pgControlStatus, raidExMibCacheSizeEntry=raidExMibCacheSizeEntry, chaClusterNumber=chaClusterNumber, lunGroupedLUNsVL=lunGroupedLUNsVL, hihsmExpPGUtilDstFB4=hihsmExpPGUtilDstFB4, hihsmClassListDisplayName=hihsmClassListDisplayName, cacheDCRLBASize=cacheDCRLBASize, cvsDVSerialNumber=cvsDVSerialNumber, mibSsidLeafVersionTable=mibSsidLeafVersionTable, trapCommandManagerName=trapCommandManagerName, hihsmManVolMigSerialNumber=hihsmManVolMigSerialNumber, cvsFSSerialNumber=cvsFSSerialNumber, customizedVolumeControlSize=customizedVolumeControlSize, hihsmExpectationPGUtilizationEntry=hihsmExpectationPGUtilizationEntry, smDisplayName=smDisplayName, logicalDeviceHIHSMReserve=logicalDeviceHIHSMReserve, rTMonitorDataSerialNumber=rTMonitorDataSerialNumber, hihsmPlanStatusCheckTime=hihsmPlanStatusCheckTime, hihsmExpPGUtilData=hihsmExpPGUtilData, hihsmVolumeMigrationHistoryListTable=hihsmVolumeMigrationHistoryListTable, dkcHWSM=dkcHWSM, hihsmCHACSWSerialNumber=hihsmCHACSWSerialNumber, hihsmAutomaticMigrationHistoryCtrlEntry=hihsmAutomaticMigrationHistoryCtrlEntry, wwnUseNickname=wwnUseNickname, hihsmAutoParamMaxUtilization=hihsmAutoParamMaxUtilization, cacheDCRLDEV=cacheDCRLDEV, customizedVolumeLDEV=customizedVolumeLDEV, lunWWNGroupSecurityVL=lunWWNGroupSecurityVL, cvsCUInfSerialNumber=cvsCUInfSerialNumber, mibChaVersionMIBOID=mibChaVersionMIBOID, raidExMibCVSDeletedVolumeTable=raidExMibCVSDeletedVolumeTable, mibHihsmLeafVersionEntry=mibHihsmLeafVersionEntry, hihsmPlanStatusSerialNumber=hihsmPlanStatusSerialNumber, raidExMibCVSDeletedVolumeEntry=raidExMibCVSDeletedVolumeEntry, rTMonitorDataGatheredDate=rTMonitorDataGatheredDate, hihsmDRRUtilDRRNumber=hihsmDRRUtilDRRNumber, raidExMibEnvironmentInfo=raidExMibEnvironmentInfo, luSEStructControlStatus=luSEStructControlStatus, mibLuseLeafVersionTable=mibLuseLeafVersionTable, portHostMode=portHostMode, prioAllPortPrmThreshold=prioAllPortPrmThreshold, hihsmMigrationExceptation=hihsmMigrationExceptation, raidExMibCHAConfigurationEntry=raidExMibCHAConfigurationEntry, logicalDeviceCylinder=logicalDeviceCylinder, ssidBoundaryBoundary=ssidBoundaryBoundary, mibDkaVersionMIBVersion=mibDkaVersionMIBVersion, cvsFSCylinder=cvsFSCylinder, eventTrapPartsID=eventTrapPartsID, hihsmCHACSWUtilData=hihsmCHACSWUtilData, switchPortID=switchPortID, commandStatus=commandStatus, raidlistSerialNumber=raidlistSerialNumber, mibAllLeafVersionMIBVersion=mibAllLeafVersionMIBVersion, raidExMibLUNS=raidExMibLUNS, rTMonitorDataGatheredTime=rTMonitorDataGatheredTime, raidExMibCHPConfigurationEntry=raidExMibCHPConfigurationEntry, raidExMibTrapListEntry=raidExMibTrapListEntry, hihsmAutoParamDayOfWeek=hihsmAutoParamDayOfWeek, hihsmDKAtoSMUtilizationTable=hihsmDKAtoSMUtilizationTable, hihsmCHAtoSMUtilizationTable=hihsmCHAtoSMUtilizationTable, raidExMibAgentVersion=raidExMibAgentVersion, raidDummy=raidDummy, mibCswLeafVersionEntry=mibCswLeafVersionEntry, raidExMibSubsystemIDEntry=raidExMibSubsystemIDEntry, cacheDCRHeadSize=cacheDCRHeadSize, hihsmClassPGControlIndex=hihsmClassPGControlIndex, raidExMibParityGroupListTable=raidExMibParityGroupListTable, luDeviceLDEV=luDeviceLDEV, mibCswVersionMIBOID=mibCswVersionMIBOID, hihsmAutomaticMigrationPlanLDEVEntry=hihsmAutomaticMigrationPlanLDEVEntry, hihsmCHASMSMClusterNumber=hihsmCHASMSMClusterNumber, hihsmVolumeMigrationHistory=hihsmVolumeMigrationHistory, hihsmAutomaticMigrationHistoryCtrlTable=hihsmAutomaticMigrationHistoryCtrlTable, dkpDisplayName=dkpDisplayName, portPrmPortID=portPrmPortID, mibPathLeafVersionEntry=mibPathLeafVersionEntry, lunGroupControlStatus=lunGroupControlStatus, raidExMibSSIDBoundaryEntry=raidExMibSSIDBoundaryEntry, portID=portID, cacheSizeUseCacheSize=cacheSizeUseCacheSize, drrDisplayName=drrDisplayName, hihsmDKASMUtilData=hihsmDKASMUtilData, luEmuID=luEmuID, hihsmDRRUtilData=hihsmDRRUtilData, hihsmMonParamGatheredFromDate=hihsmMonParamGatheredFromDate, hihsmAutoParamMaxVolumes=hihsmAutoParamMaxVolumes, cvsDVControlSize=cvsDVControlSize, prioRTMonitorDataGatheredDate=prioRTMonitorDataGatheredDate, eventTrapNickname=eventTrapNickname, hihsmCHPUtilClusterNumber=hihsmCHPUtilClusterNumber, cacheDCRStartHead=cacheDCRStartHead)
