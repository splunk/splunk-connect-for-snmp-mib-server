#
# PySNMP MIB module HPN-ICF-SUBNET-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-SUBNET-VLAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:29:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, MibIdentifier, iso, ObjectIdentity, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Counter32, NotificationType, Unsigned32, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "iso", "ObjectIdentity", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Counter32", "NotificationType", "Unsigned32", "Gauge32", "TimeTicks")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hpnicfSubnetVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61))
hpnicfSubnetVlan.setRevisions(('2005-08-02 13:53',))
if mibBuilder.loadTexts: hpnicfSubnetVlan.setLastUpdated('200508021353Z')
if mibBuilder.loadTexts: hpnicfSubnetVlan.setOrganization('')
hpnicfSubnetVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1))
hpnicfSubnetVlanScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 1))
hpnicfSubnetNumAllVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSubnetNumAllVlan.setStatus('current')
hpnicfSubnetNumPerVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSubnetNumPerVlan.setStatus('current')
hpnicfSubnetNumAllPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSubnetNumAllPort.setStatus('current')
hpnicfSubnetNumPerPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSubnetNumPerPort.setStatus('current')
hpnicfSubnetVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2), )
if mibBuilder.loadTexts: hpnicfSubnetVlanTable.setStatus('current')
hpnicfSubnetVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanVlanId"), (0, "HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanSubnetIndex"))
if mibBuilder.loadTexts: hpnicfSubnetVlanEntry.setStatus('current')
hpnicfSubnetVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfSubnetVlanVlanId.setStatus('current')
hpnicfSubnetVlanSubnetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: hpnicfSubnetVlanSubnetIndex.setStatus('current')
hpnicfSubnetVlanVlanIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSubnetVlanVlanIpAddressType.setStatus('current')
hpnicfSubnetVlanIpAddressValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSubnetVlanIpAddressValue.setStatus('current')
hpnicfSubnetVlanNetMaskValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSubnetVlanNetMaskValue.setStatus('current')
hpnicfSubnetVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSubnetVlanRowStatus.setStatus('current')
hpnicfSubnetVlanPortCreateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3), )
if mibBuilder.loadTexts: hpnicfSubnetVlanPortCreateTable.setStatus('current')
hpnicfSubnetVlanPortCreateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanPortCreateIndex"), (0, "HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanPortCreateVlanId"))
if mibBuilder.loadTexts: hpnicfSubnetVlanPortCreateEntry.setStatus('current')
hpnicfSubnetVlanPortCreateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfSubnetVlanPortCreateIndex.setStatus('current')
hpnicfSubnetVlanPortCreateVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: hpnicfSubnetVlanPortCreateVlanId.setStatus('current')
hpnicfSubnetVlanPortInfoVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSubnetVlanPortInfoVlanId.setStatus('current')
hpnicfSubnetVlanPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfSubnetVlanPortRowStatus.setStatus('current')
hpnicfSubnetVlanPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfSubnetVlanPortStatus.setStatus('current')
hpnicfSubnetVlanConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2))
hpnicfSubnetVlanCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2, 1))
hpnicfSubnetVlanCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2, 1, 1)).setObjects(("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanScalarObjectGroup"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanSubnetGroup"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanPortCreateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfSubnetVlanCompliance = hpnicfSubnetVlanCompliance.setStatus('current')
hpnicfSubnetVlanGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2, 2))
hpnicfSubnetVlanScalarObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2, 2, 1)).setObjects(("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetNumAllVlan"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetNumPerVlan"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetNumAllPort"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetNumPerPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfSubnetVlanScalarObjectGroup = hpnicfSubnetVlanScalarObjectGroup.setStatus('current')
hpnicfSubnetVlanSubnetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2, 2, 2)).setObjects(("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanVlanIpAddressType"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanIpAddressValue"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanNetMaskValue"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfSubnetVlanSubnetGroup = hpnicfSubnetVlanSubnetGroup.setStatus('current')
hpnicfSubnetVlanPortCreateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 61, 2, 2, 3)).setObjects(("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanPortInfoVlanId"), ("HPN-ICF-SUBNET-VLAN-MIB", "hpnicfSubnetVlanPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfSubnetVlanPortCreateGroup = hpnicfSubnetVlanPortCreateGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-SUBNET-VLAN-MIB", hpnicfSubnetVlanRowStatus=hpnicfSubnetVlanRowStatus, hpnicfSubnetVlanSubnetIndex=hpnicfSubnetVlanSubnetIndex, hpnicfSubnetVlanNetMaskValue=hpnicfSubnetVlanNetMaskValue, hpnicfSubnetVlanPortCreateEntry=hpnicfSubnetVlanPortCreateEntry, hpnicfSubnetVlanPortCreateGroup=hpnicfSubnetVlanPortCreateGroup, hpnicfSubnetVlanSubnetGroup=hpnicfSubnetVlanSubnetGroup, hpnicfSubnetVlanPortCreateIndex=hpnicfSubnetVlanPortCreateIndex, PYSNMP_MODULE_ID=hpnicfSubnetVlan, hpnicfSubnetVlanCompliance=hpnicfSubnetVlanCompliance, hpnicfSubnetVlanObjects=hpnicfSubnetVlanObjects, hpnicfSubnetVlanScalarObjects=hpnicfSubnetVlanScalarObjects, hpnicfSubnetNumAllVlan=hpnicfSubnetNumAllVlan, hpnicfSubnetVlanPortInfoVlanId=hpnicfSubnetVlanPortInfoVlanId, hpnicfSubnetVlanConformance=hpnicfSubnetVlanConformance, hpnicfSubnetVlanCompliances=hpnicfSubnetVlanCompliances, hpnicfSubnetVlanVlanIpAddressType=hpnicfSubnetVlanVlanIpAddressType, hpnicfSubnetVlanEntry=hpnicfSubnetVlanEntry, hpnicfSubnetVlanPortCreateVlanId=hpnicfSubnetVlanPortCreateVlanId, hpnicfSubnetNumPerPort=hpnicfSubnetNumPerPort, hpnicfSubnetNumAllPort=hpnicfSubnetNumAllPort, hpnicfSubnetVlanVlanId=hpnicfSubnetVlanVlanId, hpnicfSubnetVlanPortCreateTable=hpnicfSubnetVlanPortCreateTable, hpnicfSubnetVlanPortStatus=hpnicfSubnetVlanPortStatus, hpnicfSubnetVlanScalarObjectGroup=hpnicfSubnetVlanScalarObjectGroup, hpnicfSubnetVlanTable=hpnicfSubnetVlanTable, hpnicfSubnetNumPerVlan=hpnicfSubnetNumPerVlan, hpnicfSubnetVlanIpAddressValue=hpnicfSubnetVlanIpAddressValue, hpnicfSubnetVlanGroups=hpnicfSubnetVlanGroups, hpnicfSubnetVlan=hpnicfSubnetVlan, hpnicfSubnetVlanPortRowStatus=hpnicfSubnetVlanPortRowStatus)
