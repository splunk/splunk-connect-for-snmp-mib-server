#
# PySNMP MIB module BayNetworks-IISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BayNetworks-IISIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:25:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, IpAddress, NotificationType, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, MibIdentifier, Counter64, Integer32, iso, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "NotificationType", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "MibIdentifier", "Counter64", "Integer32", "iso", "ObjectIdentity", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfIisisGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfIisisGroup")
wfIisisGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1))
wfIisisGeneralDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisGeneralDelete.setStatus('mandatory')
wfIisisGeneralDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisGeneralDisable.setStatus('mandatory')
wfIisisGeneralState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("invalid", 3), ("notpresent", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisGeneralState.setStatus('mandatory')
wfIisisRouterId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisRouterId.setStatus('mandatory')
wfIisisVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisVersion.setStatus('mandatory')
wfIisisRouterType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("l1only", 1), ("l2only", 2), ("l1l2", 3))).clone('l1l2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisRouterType.setStatus('mandatory')
wfIisisSpfHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisSpfHoldDown.setStatus('mandatory')
wfIisisPrimaryLogMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 8), Gauge32().clone(287)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisPrimaryLogMask.setStatus('mandatory')
wfIisisMaximumPath = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisMaximumPath.setStatus('mandatory')
wfIisisMaxAreas = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisMaxAreas.setStatus('mandatory')
wfIisisNumL1Lsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisNumL1Lsps.setStatus('mandatory')
wfIisisNumL2Lsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisNumL2Lsps.setStatus('mandatory')
wfIisisCksumIsPdus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisCksumIsPdus.setStatus('mandatory')
wfIisisL1LspPassword = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisL1LspPassword.setStatus('mandatory')
wfIisisL2LspPassword = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisL2LspPassword.setStatus('mandatory')
wfIisisAreaAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisAreaAddr.setStatus('mandatory')
wfIisisAreaAddrAlias1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisAreaAddrAlias1.setStatus('mandatory')
wfIisisAreaAddrAlias2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisAreaAddrAlias2.setStatus('mandatory')
wfIisisL1CorruptedLsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1CorruptedLsps.setStatus('mandatory')
wfIisisL2CorruptedLsps = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2CorruptedLsps.setStatus('mandatory')
wfIisisL1LspDbOverLoads = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1LspDbOverLoads.setStatus('mandatory')
wfIisisL2LspDbOverLoads = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2LspDbOverLoads.setStatus('mandatory')
wfIisisNearestL2Is = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 23), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisNearestL2Is.setStatus('mandatory')
wfIisisNumL1Routes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisNumL1Routes.setStatus('mandatory')
wfIisisNumL2Routes = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisNumL2Routes.setStatus('mandatory')
wfIisisMinLSPGenerationInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 900)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisMinLSPGenerationInterval.setStatus('mandatory')
wfIisisMaxLSPGenerationInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 27000)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisMaxLSPGenerationInterval.setStatus('mandatory')
wfIisisMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 7200)).clone(1200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisMaxAge.setStatus('mandatory')
wfIisisMinLSPXmtInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisMinLSPXmtInterval.setStatus('mandatory')
wfIisisPartialSNPInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisPartialSNPInterval.setStatus('mandatory')
wfIisisZeroAgeLifetime = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisZeroAgeLifetime.setStatus('mandatory')
wfIisisAgePend = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisAgePend.setStatus('mandatory')
wfIisisCsnpBuildInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1200)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisCsnpBuildInterval.setStatus('mandatory')
wfIisisL2LspBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 16384)).clone(1497)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisL2LspBufferSize.setStatus('mandatory')
wfIisisL1SpfCnt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1SpfCnt.setStatus('mandatory')
wfIisisL2SpfCnt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2SpfCnt.setStatus('mandatory')
wfIisisAreaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2), )
if mibBuilder.loadTexts: wfIisisAreaTable.setStatus('mandatory')
wfIisisAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2, 1), ).setIndexNames((0, "BayNetworks-IISIS-MIB", "wfIisisAreaId"))
if mibBuilder.loadTexts: wfIisisAreaEntry.setStatus('mandatory')
wfIisisAreaDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisAreaDelete.setStatus('mandatory')
wfIisisAreaDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisAreaDisable.setStatus('mandatory')
wfIisisAreaState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisAreaState.setStatus('mandatory')
wfIisisAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisAreaId.setStatus('mandatory')
wfIisisSpfCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisSpfCnt.setStatus('mandatory')
wfIisisL1LspHdrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3), )
if mibBuilder.loadTexts: wfIisisL1LspHdrTable.setStatus('mandatory')
wfIisisL1LspHdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3, 1), ).setIndexNames((0, "BayNetworks-IISIS-MIB", "wfIisisL1LspHdrLspId"))
if mibBuilder.loadTexts: wfIisisL1LspHdrEntry.setStatus('mandatory')
wfIisisL1LspHdrLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1LspHdrLspId.setStatus('mandatory')
wfIisisL1LspHdrLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1LspHdrLifetime.setStatus('mandatory')
wfIisisL1LspHdrSeqnum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1LspHdrSeqnum.setStatus('mandatory')
wfIisisL1LspHdrFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1LspHdrFlags.setStatus('mandatory')
wfIisisL1LspHdrCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL1LspHdrCksum.setStatus('mandatory')
wfIisisL2LspHdrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4), )
if mibBuilder.loadTexts: wfIisisL2LspHdrTable.setStatus('mandatory')
wfIisisL2LspHdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4, 1), ).setIndexNames((0, "BayNetworks-IISIS-MIB", "wfIisisL2LspHdrLspId"))
if mibBuilder.loadTexts: wfIisisL2LspHdrEntry.setStatus('mandatory')
wfIisisL2LspHdrLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2LspHdrLspId.setStatus('mandatory')
wfIisisL2LspHdrLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2LspHdrLifetime.setStatus('mandatory')
wfIisisL2LspHdrSeqnum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2LspHdrSeqnum.setStatus('mandatory')
wfIisisL2LspHdrFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2LspHdrFlags.setStatus('mandatory')
wfIisisL2LspHdrCksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 4, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisL2LspHdrCksum.setStatus('mandatory')
wfIisisIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5), )
if mibBuilder.loadTexts: wfIisisIfTable.setStatus('mandatory')
wfIisisIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1), ).setIndexNames((0, "BayNetworks-IISIS-MIB", "wfIisisIfIpAddress"), (0, "BayNetworks-IISIS-MIB", "wfIisisAddressLessIf"))
if mibBuilder.loadTexts: wfIisisIfEntry.setStatus('mandatory')
wfIisisIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfDelete.setStatus('mandatory')
wfIisisIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfDisable.setStatus('mandatory')
wfIisisIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfIpAddress.setStatus('mandatory')
wfIisisAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisAddressLessIf.setStatus('mandatory')
wfIisisIfRouterLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8))).clone(namedValues=NamedValues(("l1", 1), ("l2", 2), ("l1l2", 3), ("ext", 4), ("l2ext", 6), ("l1l2ext", 7), ("esisonly", 8))).clone('l2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfRouterLevel.setStatus('mandatory')
wfIisisIfL1DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfL1DefaultMetric.setStatus('mandatory')
wfIisisIfL2DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfL2DefaultMetric.setStatus('mandatory')
wfIisisIfL1DrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfL1DrPriority.setStatus('mandatory')
wfIisisIfL2DrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfL2DrPriority.setStatus('mandatory')
wfIisisIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 21845)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfHelloTimer.setStatus('mandatory')
wfIisisIfPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfPassword.setStatus('mandatory')
wfIisisIfHelloMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfHelloMtuSize.setStatus('mandatory')
wfIisisIfIihHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfIihHoldMultiplier.setStatus('mandatory')
wfIisisIfIshHoldMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfIshHoldMultiplier.setStatus('mandatory')
wfIisisIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("pointtopoint", 2))).clone('broadcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfType.setStatus('mandatory')
wfIisisIfCsnpTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIisisIfCsnpTimer.setStatus('mandatory')
wfIisisIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6), )
if mibBuilder.loadTexts: wfIisisIfStatsTable.setStatus('mandatory')
wfIisisIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1), ).setIndexNames((0, "BayNetworks-IISIS-MIB", "wfIisisIfStatsIpAddress"), (0, "BayNetworks-IISIS-MIB", "wfIisisStatsAddressLessIf"))
if mibBuilder.loadTexts: wfIisisIfStatsEntry.setStatus('mandatory')
wfIisisIfStatsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsIpAddress.setStatus('mandatory')
wfIisisStatsAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisStatsAddressLessIf.setStatus('mandatory')
wfIisisIfStatsState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsState.setStatus('mandatory')
wfIisisIfStatsCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsCct.setStatus('mandatory')
wfIisisIfStatsL1TxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL1TxHellos.setStatus('mandatory')
wfIisisIfStatsL2TxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL2TxHellos.setStatus('mandatory')
wfIisisIfStatsL1RxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL1RxHellos.setStatus('mandatory')
wfIisisIfStatsL2RxHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL2RxHellos.setStatus('mandatory')
wfIisisIfStatsL1Drops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL1Drops.setStatus('mandatory')
wfIisisIfStatsL2Drops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL2Drops.setStatus('mandatory')
wfIisisIfStatsL1DesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL1DesignatedRouter.setStatus('mandatory')
wfIisisIfStatsL2DesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL2DesignatedRouter.setStatus('mandatory')
wfIisisIfStatsTxL1Lsp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsTxL1Lsp.setStatus('mandatory')
wfIisisIfStatsTxL2Lsp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsTxL2Lsp.setStatus('mandatory')
wfIisisIfStatsTxL1Csnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsTxL1Csnp.setStatus('mandatory')
wfIisisIfStatsTxL2Csnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsTxL2Csnp.setStatus('mandatory')
wfIisisIfStatsTxL1Psnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsTxL1Psnp.setStatus('mandatory')
wfIisisIfStatsTxL2Psnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsTxL2Psnp.setStatus('mandatory')
wfIisisIfStatsRxL1Lsp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsRxL1Lsp.setStatus('mandatory')
wfIisisIfStatsRxL2Lsp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsRxL2Lsp.setStatus('mandatory')
wfIisisIfStatsRxL1Csnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsRxL1Csnp.setStatus('mandatory')
wfIisisIfStatsRxL2Csnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsRxL2Csnp.setStatus('mandatory')
wfIisisIfStatsRxL1Psnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsRxL1Psnp.setStatus('mandatory')
wfIisisIfStatsRxL2Psnp = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsRxL2Psnp.setStatus('mandatory')
wfIisisIfStatsL1NbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL1NbrCount.setStatus('mandatory')
wfIisisIfStatsL2NbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL2NbrCount.setStatus('mandatory')
wfIisisIfStatsL1AdjCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL1AdjCount.setStatus('mandatory')
wfIisisIfStatsL2AdjCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 6, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisIfStatsL2AdjCount.setStatus('mandatory')
wfIisisDynNbrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7), )
if mibBuilder.loadTexts: wfIisisDynNbrTable.setStatus('mandatory')
wfIisisDynNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1), ).setIndexNames((0, "BayNetworks-IISIS-MIB", "wfIisisDynNbrIpAddr"), (0, "BayNetworks-IISIS-MIB", "wfIisisDynNbrAddressLessIndex"))
if mibBuilder.loadTexts: wfIisisDynNbrEntry.setStatus('mandatory')
wfIisisDynNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("init", 2), ("up", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrState.setStatus('mandatory')
wfIisisDynNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrIpAddr.setStatus('mandatory')
wfIisisDynNbrIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrIfAddr.setStatus('mandatory')
wfIisisDynNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrAddressLessIndex.setStatus('mandatory')
wfIisisDynNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrRtrId.setStatus('mandatory')
wfIisisDynNbrDatabase = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 6), Integer32().clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrDatabase.setStatus('mandatory')
wfIisisDynNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("pointtopoint", 2))).clone('broadcast')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrType.setStatus('mandatory')
wfIisisDynNbrPseudonodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrPseudonodeId.setStatus('mandatory')
wfIisisDynNbrHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrHoldTime.setStatus('mandatory')
wfIisisDynNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrPriority.setStatus('mandatory')
wfIisisDynNbrSnpaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrSnpaAddr.setStatus('mandatory')
wfIisisDynNbrLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 8, 7, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIisisDynNbrLanId.setStatus('mandatory')
mibBuilder.exportSymbols("BayNetworks-IISIS-MIB", wfIisisIfL2DefaultMetric=wfIisisIfL2DefaultMetric, wfIisisIfStatsTxL2Csnp=wfIisisIfStatsTxL2Csnp, wfIisisIfStatsL1DesignatedRouter=wfIisisIfStatsL1DesignatedRouter, wfIisisDynNbrPseudonodeId=wfIisisDynNbrPseudonodeId, wfIisisIfDelete=wfIisisIfDelete, wfIisisDynNbrIfAddr=wfIisisDynNbrIfAddr, wfIisisL1LspHdrLifetime=wfIisisL1LspHdrLifetime, wfIisisIfStatsTable=wfIisisIfStatsTable, wfIisisIfStatsL2DesignatedRouter=wfIisisIfStatsL2DesignatedRouter, wfIisisAreaDelete=wfIisisAreaDelete, wfIisisIfRouterLevel=wfIisisIfRouterLevel, wfIisisIfStatsL2TxHellos=wfIisisIfStatsL2TxHellos, wfIisisIfStatsIpAddress=wfIisisIfStatsIpAddress, wfIisisVersion=wfIisisVersion, wfIisisGeneralState=wfIisisGeneralState, wfIisisL2LspHdrCksum=wfIisisL2LspHdrCksum, wfIisisL2LspPassword=wfIisisL2LspPassword, wfIisisMinLSPXmtInterval=wfIisisMinLSPXmtInterval, wfIisisL2LspHdrFlags=wfIisisL2LspHdrFlags, wfIisisL1LspHdrCksum=wfIisisL1LspHdrCksum, wfIisisMinLSPGenerationInterval=wfIisisMinLSPGenerationInterval, wfIisisIfStatsRxL2Lsp=wfIisisIfStatsRxL2Lsp, wfIisisDynNbrSnpaAddr=wfIisisDynNbrSnpaAddr, wfIisisNumL2Routes=wfIisisNumL2Routes, wfIisisIfL1DefaultMetric=wfIisisIfL1DefaultMetric, wfIisisIfStatsL1Drops=wfIisisIfStatsL1Drops, wfIisisIfStatsL1NbrCount=wfIisisIfStatsL1NbrCount, wfIisisIfStatsL1AdjCount=wfIisisIfStatsL1AdjCount, wfIisisDynNbrState=wfIisisDynNbrState, wfIisisL1LspHdrSeqnum=wfIisisL1LspHdrSeqnum, wfIisisIfStatsCct=wfIisisIfStatsCct, wfIisisDynNbrEntry=wfIisisDynNbrEntry, wfIisisRouterId=wfIisisRouterId, wfIisisL2SpfCnt=wfIisisL2SpfCnt, wfIisisMaxAge=wfIisisMaxAge, wfIisisAreaState=wfIisisAreaState, wfIisisIfStatsState=wfIisisIfStatsState, wfIisisIfStatsL1RxHellos=wfIisisIfStatsL1RxHellos, wfIisisL2LspHdrLifetime=wfIisisL2LspHdrLifetime, wfIisisCsnpBuildInterval=wfIisisCsnpBuildInterval, wfIisisZeroAgeLifetime=wfIisisZeroAgeLifetime, wfIisisNumL1Lsps=wfIisisNumL1Lsps, wfIisisGeneralDisable=wfIisisGeneralDisable, wfIisisL2LspDbOverLoads=wfIisisL2LspDbOverLoads, wfIisisIfStatsTxL1Csnp=wfIisisIfStatsTxL1Csnp, wfIisisIfStatsTxL1Lsp=wfIisisIfStatsTxL1Lsp, wfIisisIfStatsTxL2Lsp=wfIisisIfStatsTxL2Lsp, wfIisisSpfHoldDown=wfIisisSpfHoldDown, wfIisisPartialSNPInterval=wfIisisPartialSNPInterval, wfIisisSpfCnt=wfIisisSpfCnt, wfIisisL1LspHdrLspId=wfIisisL1LspHdrLspId, wfIisisNumL2Lsps=wfIisisNumL2Lsps, wfIisisIfPassword=wfIisisIfPassword, wfIisisIfStatsRxL2Psnp=wfIisisIfStatsRxL2Psnp, wfIisisAddressLessIf=wfIisisAddressLessIf, wfIisisL2CorruptedLsps=wfIisisL2CorruptedLsps, wfIisisIfTable=wfIisisIfTable, wfIisisL1LspDbOverLoads=wfIisisL1LspDbOverLoads, wfIisisIfStatsRxL1Lsp=wfIisisIfStatsRxL1Lsp, wfIisisDynNbrAddressLessIndex=wfIisisDynNbrAddressLessIndex, wfIisisIfL2DrPriority=wfIisisIfL2DrPriority, wfIisisAreaDisable=wfIisisAreaDisable, wfIisisIfStatsRxL1Csnp=wfIisisIfStatsRxL1Csnp, wfIisisIfStatsRxL1Psnp=wfIisisIfStatsRxL1Psnp, wfIisisL2LspHdrEntry=wfIisisL2LspHdrEntry, wfIisisRouterType=wfIisisRouterType, wfIisisDynNbrHoldTime=wfIisisDynNbrHoldTime, wfIisisGeneralDelete=wfIisisGeneralDelete, wfIisisIfHelloMtuSize=wfIisisIfHelloMtuSize, wfIisisMaxAreas=wfIisisMaxAreas, wfIisisL1LspPassword=wfIisisL1LspPassword, wfIisisGeneralGroup=wfIisisGeneralGroup, wfIisisL1LspHdrTable=wfIisisL1LspHdrTable, wfIisisDynNbrTable=wfIisisDynNbrTable, wfIisisL1LspHdrFlags=wfIisisL1LspHdrFlags, wfIisisL1SpfCnt=wfIisisL1SpfCnt, wfIisisPrimaryLogMask=wfIisisPrimaryLogMask, wfIisisAreaEntry=wfIisisAreaEntry, wfIisisIfCsnpTimer=wfIisisIfCsnpTimer, wfIisisAreaAddrAlias2=wfIisisAreaAddrAlias2, wfIisisIfStatsEntry=wfIisisIfStatsEntry, wfIisisDynNbrDatabase=wfIisisDynNbrDatabase, wfIisisL1LspHdrEntry=wfIisisL1LspHdrEntry, wfIisisAreaAddrAlias1=wfIisisAreaAddrAlias1, wfIisisL1CorruptedLsps=wfIisisL1CorruptedLsps, wfIisisNearestL2Is=wfIisisNearestL2Is, wfIisisIfStatsTxL1Psnp=wfIisisIfStatsTxL1Psnp, wfIisisL2LspHdrSeqnum=wfIisisL2LspHdrSeqnum, wfIisisL2LspHdrLspId=wfIisisL2LspHdrLspId, wfIisisAgePend=wfIisisAgePend, wfIisisIfIshHoldMultiplier=wfIisisIfIshHoldMultiplier, wfIisisIfL1DrPriority=wfIisisIfL1DrPriority, wfIisisIfEntry=wfIisisIfEntry, wfIisisAreaAddr=wfIisisAreaAddr, wfIisisMaxLSPGenerationInterval=wfIisisMaxLSPGenerationInterval, wfIisisIfStatsL2AdjCount=wfIisisIfStatsL2AdjCount, wfIisisCksumIsPdus=wfIisisCksumIsPdus, wfIisisIfStatsL2RxHellos=wfIisisIfStatsL2RxHellos, wfIisisL2LspHdrTable=wfIisisL2LspHdrTable, wfIisisAreaTable=wfIisisAreaTable, wfIisisIfStatsRxL2Csnp=wfIisisIfStatsRxL2Csnp, wfIisisDynNbrPriority=wfIisisDynNbrPriority, wfIisisAreaId=wfIisisAreaId, wfIisisIfHelloTimer=wfIisisIfHelloTimer, wfIisisDynNbrRtrId=wfIisisDynNbrRtrId, wfIisisIfDisable=wfIisisIfDisable, wfIisisNumL1Routes=wfIisisNumL1Routes, wfIisisIfStatsL2NbrCount=wfIisisIfStatsL2NbrCount, wfIisisIfIpAddress=wfIisisIfIpAddress, wfIisisIfType=wfIisisIfType, wfIisisStatsAddressLessIf=wfIisisStatsAddressLessIf, wfIisisIfStatsL2Drops=wfIisisIfStatsL2Drops, wfIisisIfStatsTxL2Psnp=wfIisisIfStatsTxL2Psnp, wfIisisMaximumPath=wfIisisMaximumPath, wfIisisDynNbrLanId=wfIisisDynNbrLanId, wfIisisL2LspBufferSize=wfIisisL2LspBufferSize, wfIisisDynNbrIpAddr=wfIisisDynNbrIpAddr, wfIisisIfIihHoldMultiplier=wfIisisIfIihHoldMultiplier, wfIisisIfStatsL1TxHellos=wfIisisIfStatsL1TxHellos, wfIisisDynNbrType=wfIisisDynNbrType)
