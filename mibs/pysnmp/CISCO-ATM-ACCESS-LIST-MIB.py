#
# PySNMP MIB module CISCO-ATM-ACCESS-LIST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ATM-ACCESS-LIST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, IpAddress, NotificationType, Integer32, Gauge32, ObjectIdentity, Counter64, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "IpAddress", "NotificationType", "Integer32", "Gauge32", "ObjectIdentity", "Counter64", "Bits", "Unsigned32", "MibIdentifier")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
ciscoAtmAccessListMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 67))
ciscoAtmAccessListMIB.setRevisions(('1996-11-18 00:00',))
if mibBuilder.loadTexts: ciscoAtmAccessListMIB.setLastUpdated('9611100000Z')
if mibBuilder.loadTexts: ciscoAtmAccessListMIB.setOrganization('Cisco Systems, Inc.')
ciscoAtmAccessListMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 1))
ciscoAtmAddressTemplate = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 1))
ciscoAtmAddressFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2))
ciscoAtmAccessGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 3))
class CiscoAtmAddressTemplate(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(1, 70)

ciscoAtmAddressTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 1, 1), )
if mibBuilder.loadTexts: ciscoAtmAddressTemplateTable.setStatus('current')
ciscoAtmAddressTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ATM-ACCESS-LIST-MIB", "atmAddressAliasName"))
if mibBuilder.loadTexts: ciscoAtmAddressTemplateEntry.setStatus('current')
atmAddressAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30)))
if mibBuilder.loadTexts: atmAddressAliasName.setStatus('current')
atmAddressTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 1, 1, 1, 2), CiscoAtmAddressTemplate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressTemplate.setStatus('current')
atmAddressTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressTemplateRowStatus.setStatus('current')
ciscoAtmAddressFilterSetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1), )
if mibBuilder.loadTexts: ciscoAtmAddressFilterSetTable.setStatus('current')
ciscoAtmAddressFilterSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetName"), (0, "CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetIndex"))
if mibBuilder.loadTexts: ciscoAtmAddressFilterSetEntry.setStatus('current')
atmAddressFilterSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30)))
if mibBuilder.loadTexts: atmAddressFilterSetName.setStatus('current')
atmAddressFilterSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: atmAddressFilterSetIndex.setStatus('current')
atmAddressFilterSetType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("addressFilter", 1), ("timeOfDayFilter", 2))).clone('addressFilter')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetType.setStatus('current')
atmAddressFilterSetTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 70)).clone('...')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetTemplate.setStatus('current')
atmAddressFilterSetStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetStartHour.setStatus('current')
atmAddressFilterSetStartMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetStartMinute.setStatus('current')
atmAddressFilterSetEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetEndHour.setStatus('current')
atmAddressFilterSetEndMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetEndMinute.setStatus('current')
atmAddressFilterSetPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetPermission.setStatus('current')
atmAddressFilterSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterSetRowStatus.setStatus('current')
ciscoAtmAddressFilterExpressionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2), )
if mibBuilder.loadTexts: ciscoAtmAddressFilterExpressionTable.setStatus('current')
ciscoAtmAddressFilterExpressionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionName"))
if mibBuilder.loadTexts: ciscoAtmAddressFilterExpressionEntry.setStatus('current')
atmAddressFilterExpressionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30)))
if mibBuilder.loadTexts: atmAddressFilterExpressionName.setStatus('current')
atmAddressFilterExpressionQualifier1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source", 1), ("destination", 2), ("none", 3))).clone('destination')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterExpressionQualifier1.setStatus('current')
atmAddressFilterExpressionTerm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterExpressionTerm1.setStatus('current')
atmAddressFilterExpressionQualifier2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source", 1), ("destination", 2), ("none", 3))).clone('destination')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterExpressionQualifier2.setStatus('current')
atmAddressFilterExpressionTerm2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterExpressionTerm2.setStatus('current')
atmAddressFilterExpressionOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("and", 1), ("or", 2), ("xor", 3), ("not", 4), ("none", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterExpressionOperator.setStatus('current')
atmAddressFilterExpressionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atmAddressFilterExpressionRowStatus.setStatus('current')
ciscoAtmAccessGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 3, 1), )
if mibBuilder.loadTexts: ciscoAtmAccessGroupTable.setStatus('current')
ciscoAtmAccessGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciscoAtmAccessGroupEntry.setStatus('current')
atmInboundAccessGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmInboundAccessGroupName.setStatus('current')
atmOutboundAccessGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 67, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmOutboundAccessGroupName.setStatus('current')
ciscoAtmAccessListMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 3))
ciscoAtmAccessListMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 3, 1))
ciscoAtmAccessListMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 67, 3, 2))
ciscoAtmAccessListMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 67, 3, 1, 1)).setObjects(("CISCO-ATM-ACCESS-LIST-MIB", "ciscoAtmAccessListMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmAccessListMIBCompliance = ciscoAtmAccessListMIBCompliance.setStatus('current')
ciscoAtmAccessListMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 67, 3, 2, 1)).setObjects(("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressTemplate"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressTemplateRowStatus"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetType"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetTemplate"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetStartHour"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetStartMinute"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetEndHour"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetEndMinute"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetPermission"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterSetRowStatus"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionQualifier1"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionTerm1"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionQualifier2"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionTerm2"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionOperator"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmAddressFilterExpressionRowStatus"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmInboundAccessGroupName"), ("CISCO-ATM-ACCESS-LIST-MIB", "atmOutboundAccessGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAtmAccessListMIBGroup = ciscoAtmAccessListMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ATM-ACCESS-LIST-MIB", ciscoAtmAccessGroup=ciscoAtmAccessGroup, atmAddressFilterSetPermission=atmAddressFilterSetPermission, atmAddressFilterSetType=atmAddressFilterSetType, atmAddressAliasName=atmAddressAliasName, ciscoAtmAccessGroupEntry=ciscoAtmAccessGroupEntry, atmAddressFilterSetIndex=atmAddressFilterSetIndex, ciscoAtmAddressTemplateTable=ciscoAtmAddressTemplateTable, atmAddressFilterExpressionTerm2=atmAddressFilterExpressionTerm2, ciscoAtmAccessGroupTable=ciscoAtmAccessGroupTable, ciscoAtmAccessListMIBCompliances=ciscoAtmAccessListMIBCompliances, atmAddressTemplate=atmAddressTemplate, ciscoAtmAccessListMIBGroups=ciscoAtmAccessListMIBGroups, ciscoAtmAddressTemplateEntry=ciscoAtmAddressTemplateEntry, ciscoAtmAccessListMIBConformance=ciscoAtmAccessListMIBConformance, atmAddressFilterSetStartHour=atmAddressFilterSetStartHour, ciscoAtmAddressTemplate=ciscoAtmAddressTemplate, atmAddressFilterSetStartMinute=atmAddressFilterSetStartMinute, ciscoAtmAddressFilter=ciscoAtmAddressFilter, CiscoAtmAddressTemplate=CiscoAtmAddressTemplate, ciscoAtmAccessListMIBGroup=ciscoAtmAccessListMIBGroup, PYSNMP_MODULE_ID=ciscoAtmAccessListMIB, atmAddressFilterSetEndMinute=atmAddressFilterSetEndMinute, atmAddressFilterExpressionTerm1=atmAddressFilterExpressionTerm1, atmOutboundAccessGroupName=atmOutboundAccessGroupName, atmAddressFilterExpressionRowStatus=atmAddressFilterExpressionRowStatus, atmAddressFilterSetName=atmAddressFilterSetName, atmAddressFilterExpressionQualifier1=atmAddressFilterExpressionQualifier1, ciscoAtmAccessListMIBObjects=ciscoAtmAccessListMIBObjects, atmInboundAccessGroupName=atmInboundAccessGroupName, atmAddressTemplateRowStatus=atmAddressTemplateRowStatus, ciscoAtmAddressFilterExpressionEntry=ciscoAtmAddressFilterExpressionEntry, atmAddressFilterSetEndHour=atmAddressFilterSetEndHour, ciscoAtmAccessListMIB=ciscoAtmAccessListMIB, atmAddressFilterSetRowStatus=atmAddressFilterSetRowStatus, ciscoAtmAddressFilterExpressionTable=ciscoAtmAddressFilterExpressionTable, atmAddressFilterExpressionName=atmAddressFilterExpressionName, atmAddressFilterExpressionQualifier2=atmAddressFilterExpressionQualifier2, ciscoAtmAddressFilterSetEntry=ciscoAtmAddressFilterSetEntry, atmAddressFilterExpressionOperator=atmAddressFilterExpressionOperator, ciscoAtmAccessListMIBCompliance=ciscoAtmAccessListMIBCompliance, atmAddressFilterSetTemplate=atmAddressFilterSetTemplate, ciscoAtmAddressFilterSetTable=ciscoAtmAddressFilterSetTable)
