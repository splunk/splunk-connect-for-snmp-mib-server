#
# PySNMP MIB module ZXR10-EPON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-EPON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, enterprises, TimeTicks, Integer32, NotificationType, IpAddress, Bits, Counter32, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "enterprises", "TimeTicks", "Integer32", "NotificationType", "IpAddress", "Bits", "Counter32", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "MibIdentifier", "Gauge32")
MacAddress, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "RowStatus", "TextualConvention")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
zxr10EponObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309))
zxr10EponLocal = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1))
zxr10EponRemoteOnu = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2))
zxr10EponTopologyCollect = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 309, 3))
zxr10EponOnuAuthTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1), )
if mibBuilder.loadTexts: zxr10EponOnuAuthTable.setStatus('current')
zxr10EponOnuAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1), ).setIndexNames((0, "ZXR10-EPON-MIB", "eponSlotId"))
if mibBuilder.loadTexts: zxr10EponOnuAuthEntry.setStatus('current')
eponSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eponSlotId.setStatus('current')
onuSoftwareAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sn", 0), ("mac", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuSoftwareAuth.setStatus('current')
onuHardwareSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuHardwareSwitch.setStatus('current')
onuAutoAuthSwtich = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuAutoAuthSwtich.setStatus('current')
zxr10EponOltOptiInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2), )
if mibBuilder.loadTexts: zxr10EponOltOptiInfoTable.setStatus('current')
zxr10EponOltOptiInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponOltOptiInfoEntry.setStatus('current')
eponOltPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eponOltPortName.setStatus('current')
optiInfoSFPID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoSFPID.setStatus('current')
optiInfoVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoVendor.setStatus('current')
optiInfoWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoWavelength.setStatus('current')
optiInfoVendorPN = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optiInfoVendorPN.setStatus('current')
oltPortSupportedLlidNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortSupportedLlidNum.setStatus('current')
oltPortSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortSoftwareVersion.setStatus('current')
oltPortAGCLockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortAGCLockTime.setStatus('current')
oltPortCDRLockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltPortCDRLockTime.setStatus('current')
zxr10EponOltEncryptTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3), )
if mibBuilder.loadTexts: zxr10EponOltEncryptTable.setStatus('current')
zxr10EponOltEncryptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponOltEncryptEntry.setStatus('current')
oltEncryptAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("triple-churning", 1), ("aes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltEncryptAlgorithm.setStatus('current')
oltKeyUpdatePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltKeyUpdatePeriod.setStatus('current')
oltChurningTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltChurningTimer.setStatus('current')
oltMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 25000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltMaxRtt.setStatus('current')
oltLaserSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltLaserSwitch.setStatus('current')
opticsMeasureLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticsMeasureLow.setStatus('current')
opticsMeasureHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: opticsMeasureHigh.setStatus('current')
packetLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: packetLimitType.setStatus('current')
packetLimitSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: packetLimitSwitch.setStatus('current')
protocolProtectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolProtectMode.setStatus('current')
protocolProtectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolProtectSwitch.setStatus('current')
optiDiagInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: optiDiagInterval.setStatus('current')
oltEncryptRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 13), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltEncryptRowStatus.setStatus('current')
oltPortDBAType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("archimedes", 0), ("thales", 1), ("plato", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltPortDBAType.setStatus('current')
zxr10EponOnuAuthInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4), )
if mibBuilder.loadTexts: zxr10EponOnuAuthInfoTable.setStatus('current')
zxr10EponOnuAuthInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponOnuAuthInfoEntry.setStatus('current')
onuId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuId.setStatus('current')
onuAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuAuthState.setStatus('current')
onuType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac", 0), ("sn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuType.setStatus('current')
onuAuthPCBVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuAuthPCBVer.setStatus('current')
onuAuthSoftVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuAuthSoftVer.setStatus('current')
onuEEPROMVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuEEPROMVer.setStatus('current')
onuHostType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuHostType.setStatus('current')
onuOpticalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuOpticalLen.setStatus('current')
onuHardVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuHardVer.setStatus('current')
onuRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuRTT.setStatus('current')
onuMacPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuMacPortName.setStatus('current')
onuBindTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindTypeName.setStatus('current')
onuBindMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindMacAddr.setStatus('current')
onuBindSN = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindSN.setStatus('current')
onuMacMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMacMaxNum.setStatus('current')
onuBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 4, 1, 16), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuBindRowStatus.setStatus('current')
zxr10EponOltPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5), )
if mibBuilder.loadTexts: zxr10EponOltPortStatTable.setStatus('current')
zxr10EponOltPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponOltPortStatEntry.setStatus('current')
oltStatisBer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisBer.setStatus('current')
oltStatisFer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisFer.setStatus('current')
oltStatisPortBer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisPortBer.setStatus('current')
oltStatisInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInPkts.setStatus('current')
oltStatisInOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInOctes.setStatus('current')
oltStatisInUniPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInUniPkts.setStatus('current')
oltStatisInMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInMultiPkts.setStatus('current')
oltStatisInBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisInBroadPkts.setStatus('current')
oltStatisOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutPkts.setStatus('current')
oltStatisOutOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutOctes.setStatus('current')
oltStatisOutUniPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutUniPkts.setStatus('current')
oltStatisOutMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutMultiPkts.setStatus('current')
oltStatisOutBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oltStatisOutBroadPkts.setStatus('current')
oamFramesCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oamFramesCounters.setStatus('current')
standardOamStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: standardOamStatistics.setStatus('current')
standardOamMpcpStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: standardOamMpcpStatistic.setStatus('current')
cpuPortsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPortsOctets.setStatus('current')
cpuPortsFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPortsFrames.setStatus('current')
transmittedFramesPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmittedFramesPerLLID.setStatus('current')
droppedFramesPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: droppedFramesPerLLID.setStatus('current')
transmittedOctetsPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transmittedOctetsPerLLID.setStatus('current')
inRangeLengthErrorsPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inRangeLengthErrorsPerLLID.setStatus('current')
frameTooLongErrorsPerLLID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frameTooLongErrorsPerLLID.setStatus('current')
zxr10EponOnuPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6), )
if mibBuilder.loadTexts: zxr10EponOnuPortStatTable.setStatus('current')
zxr10EponOnuPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponOnuPortStatEntry.setStatus('current')
onuStatisBer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisBer.setStatus('current')
onuStatisFer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisFer.setStatus('current')
onuStatisInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInPkts.setStatus('current')
onuStatisInOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInOctes.setStatus('current')
onuStatisInMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInMultiPkts.setStatus('current')
onuStatisInBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisInBroadPkts.setStatus('current')
onuStatisOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutPkts.setStatus('current')
onuStatisOutOctes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutOctes.setStatus('current')
onuStatisOutMultiPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutMultiPkts.setStatus('current')
onuStatisOutBroadPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuStatisOutBroadPkts.setStatus('current')
zxr10EponProtectGroupTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7), )
if mibBuilder.loadTexts: zxr10EponProtectGroupTable.setStatus('current')
zxr10EponProtectGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1), ).setIndexNames((0, "ZXR10-EPON-MIB", "protectGroupid"))
if mibBuilder.loadTexts: zxr10EponProtectGroupEntry.setStatus('current')
protectGroupid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protectGroupid.setStatus('current')
protectOltMasterIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectOltMasterIfName.setStatus('current')
protectOltBackupIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectOltBackupIfName.setStatus('current')
protectOltActiveIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protectOltActiveIfName.setStatus('current')
protectOltEnableSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectOltEnableSwitch.setStatus('current')
protectReverEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectReverEnable.setStatus('current')
protectReverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectReverTime.setStatus('current')
protectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 7, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectRowStatus.setStatus('current')
zxr10EponSwitchRecordTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8), )
if mibBuilder.loadTexts: zxr10EponSwitchRecordTable.setStatus('current')
zxr10EponSwitchRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1), ).setIndexNames((0, "ZXR10-EPON-MIB", "switchRecordGroupid"), (0, "ZXR10-EPON-MIB", "switchRecordNum"))
if mibBuilder.loadTexts: zxr10EponSwitchRecordEntry.setStatus('current')
switchRecordGroupid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchRecordGroupid.setStatus('current')
switchRecordNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchRecordNum.setStatus('current')
switchTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchTime.setStatus('current')
switchType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("force", 2), ("retiver", 3), ("alarm", 4), ("ifchange", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchType.setStatus('current')
switchTypeMtoB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: switchTypeMtoB.setStatus('current')
zxr10EponAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9), )
if mibBuilder.loadTexts: zxr10EponAlarmTable.setStatus('current')
zxr10EponAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10EponAlarmEntry.setStatus('current')
oltAlarmSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltAlarmSwitch.setStatus('current')
oltAlarmDirectSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltAlarmDirectSwitch.setStatus('current')
oltAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 1, 9, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oltAlarmThreshold.setStatus('current')
zxr10EponRemoteOnuInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuInfoTable.setStatus('current')
zxr10EponRemoteOnuInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuInfoEntry.setStatus('current')
remoteOnuVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteOnuVendorId.setStatus('current')
remoteOnuModel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteOnuModel.setStatus('current')
remoteOnuId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteOnuId.setStatus('current')
remoteHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteHardwareVersion.setStatus('current')
remoteSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteSoftwareVersion.setStatus('current')
remoteFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteFirmwareVersion.setStatus('current')
remoteChipVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteChipVendorId.setStatus('current')
remoteChipModel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteChipModel.setStatus('current')
remoteChipRevison = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteChipRevison.setStatus('current')
remoteIcVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteIcVersion.setStatus('current')
remoteGePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteGePortNum.setStatus('current')
remoteBitmapGePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteBitmapGePort.setStatus('current')
remoteFePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteFePortNum.setStatus('current')
remoteBitmapFePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteBitmapFePort.setStatus('current')
remotePortsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remotePortsNum.setStatus('current')
remoteE1PortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteE1PortNum.setStatus('current')
remoteUsQueuesNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteUsQueuesNum.setStatus('current')
remoteMaxQueuesPerUSport = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteMaxQueuesPerUSport.setStatus('current')
remoteDSQueuesNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteDSQueuesNum.setStatus('current')
remoteMaxQueuesPerDSport = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteMaxQueuesPerDSport.setStatus('current')
remoteBatteryBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteBatteryBackup.setStatus('current')
zxr10EponRemoteOnuDbaTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuDbaTable.setStatus('current')
zxr10EponRemoteOnuDbaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "queueSetId"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuDbaEntry.setStatus('current')
queueSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: queueSetId.setStatus('current')
queueValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue1.setStatus('current')
queueValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue2.setStatus('current')
queueValue3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue3.setStatus('current')
queueValue4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue4.setStatus('current')
queueValue5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue5.setStatus('current')
queueValue6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue6.setStatus('current')
queueValue7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue7.setStatus('current')
queueValue8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueValue8.setStatus('current')
dbaQueueActive = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dbaQueueActive.setStatus('current')
onuDbaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuDbaRowStatus.setStatus('current')
zxr10EponRemoteOnuClassRuleTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassRuleTable.setStatus('current')
zxr10EponRemoteOnuClassRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "ruleProfileNum"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassRuleEntry.setStatus('current')
ruleProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruleProfileNum.setStatus('current')
queueVlaue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: queueVlaue.setStatus('current')
priorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: priorityValue.setStatus('current')
ruleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruleRowStatus.setStatus('current')
zxr10EponRemoteOnuClassCondiTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassCondiTable.setStatus('current')
zxr10EponRemoteOnuClassCondiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "conditionProfileNum"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuClassCondiEntry.setStatus('current')
conditionProfileNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: conditionProfileNum.setStatus('current')
conditionMacAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, -1))).clone(namedValues=NamedValues(("source-mac", 0), ("dest-mac", 1), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionMacAddressType.setStatus('current')
conditionMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionMacAddress.setStatus('current')
conditionIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, -1))).clone(namedValues=NamedValues(("destIp", 5), ("sourceIp", 6), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionIpAddressType.setStatus('current')
conditionIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionIpAddress.setStatus('current')
conditionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionPriority.setStatus('current')
conditionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionVlanId.setStatus('current')
conditionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionDscp.setStatus('current')
conditionL4PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10, 11, -1))).clone(namedValues=NamedValues(("l4SourcePort", 10), ("l4DestPort", 11), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionL4PortType.setStatus('current')
conditionPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionPortNum.setStatus('current')
conditionEthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionEthType.setStatus('current')
conditionIpProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionIpProtocolType.setStatus('current')
conditionOperatorType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("never-match", 0), ("equal", 1), ("not-equal", 2), ("less-equal", 3), ("greater-equal", 4), ("exists", 5), ("not-exists", 6), ("always-match", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionOperatorType.setStatus('current')
conditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 4, 1, 14), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: conditionRowStatus.setStatus('current')
zxr10EponRemoteOnuPortTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuPortTable.setStatus('current')
zxr10EponRemoteOnuPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "onuEthUniNumber"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuPortEntry.setStatus('current')
onuEthUniNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuEthUniNumber.setStatus('current')
onuPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortFlowControl.setStatus('current')
onuPortUpPolicySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicySwitch.setStatus('current')
onuPortUpPolicyCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicyCIR.setStatus('current')
onuPortUpPolicyCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicyCBS.setStatus('current')
onuPortUpPolicyEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortUpPolicyEBS.setStatus('current')
onuPortDownPolicySwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortDownPolicySwitch.setStatus('current')
onuPortDownPolicyCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortDownPolicyCIR.setStatus('current')
onuPortDownPolicyPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortDownPolicyPIR.setStatus('current')
onuPortVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("tag", 1), ("translation", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortVlanMode.setStatus('current')
onuPortVlanTagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortVlanTagValue.setStatus('current')
onuDefaultVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuDefaultVlan.setStatus('current')
onuVlanDelVid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid1.setStatus('current')
onuVlanAddVid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid1.setStatus('current')
onuVlanDelVid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid2.setStatus('current')
onuVlanAddVid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid2.setStatus('current')
onuVlanDelVid3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid3.setStatus('current')
onuVlanAddVid3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid3.setStatus('current')
onuVlanDelVid4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid4.setStatus('current')
onuVlanAddVid4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid4.setStatus('current')
onuVlanDelVid5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid5.setStatus('current')
onuVlanAddVid5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid5.setStatus('current')
onuVlanDelVid6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid6.setStatus('current')
onuVlanAddVid6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid6.setStatus('current')
onuVlanDelVid7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid7.setStatus('current')
onuVlanAddVid7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid7.setStatus('current')
onuVlanDelVid8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanDelVid8.setStatus('current')
onuVlanAddVid8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVlanAddVid8.setStatus('current')
onuRulePrecedenceSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, -1))).clone(namedValues=NamedValues(("add", 0), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRulePrecedenceSwitch.setStatus('current')
onuRulePrecedenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRulePrecedenceNum.setStatus('current')
onuRuleProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuRuleProfile.setStatus('current')
onuConditionList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuConditionList.setStatus('current')
onuMultiVlanSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, -1))).clone(namedValues=NamedValues(("add", 0), ("delete", 1), ("clear", 2), ("null", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiVlanSwitch.setStatus('current')
onuMultiVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiVlanList.setStatus('current')
onuMultiVlanTagStripe = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiVlanTagStripe.setStatus('current')
onuMultiGroupMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuMultiGroupMaxNum.setStatus('current')
onuPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 5, 1, 37), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuPortRowStatus.setStatus('current')
zxr10EponRemoteFastRebootTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6), )
if mibBuilder.loadTexts: zxr10EponRemoteFastRebootTable.setStatus('current')
zxr10EponRemoteFastRebootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"))
if mibBuilder.loadTexts: zxr10EponRemoteFastRebootEntry.setStatus('current')
remoteMultiFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteMultiFastLeave.setStatus('current')
remoteReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteReboot.setStatus('current')
zxr10EponRemoteOnuVoipTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuVoipTable.setStatus('current')
zxr10EponRemoteOnuVoipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "onuVoipUniNumber"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuVoipEntry.setStatus('current')
onuVoipUniNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuVoipUniNumber.setStatus('current')
onuVoipEnableSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuVoipEnableSwitch.setStatus('current')
zxr10EponRemoteOnuE1Table = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8), )
if mibBuilder.loadTexts: zxr10EponRemoteOnuE1Table.setStatus('current')
zxr10EponRemoteOnuE1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ZXR10-EPON-MIB", "onuId"), (0, "ZXR10-EPON-MIB", "onuE1UniNumber"))
if mibBuilder.loadTexts: zxr10EponRemoteOnuE1Entry.setStatus('current')
onuE1UniNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: onuE1UniNumber.setStatus('current')
onuE1EnableSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 309, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onuE1EnableSwitch.setStatus('current')
mibBuilder.exportSymbols("ZXR10-EPON-MIB", zxr10EponOnuAuthInfoEntry=zxr10EponOnuAuthInfoEntry, onuMultiVlanTagStripe=onuMultiVlanTagStripe, optiInfoVendor=optiInfoVendor, onuVlanAddVid7=onuVlanAddVid7, onuPortUpPolicySwitch=onuPortUpPolicySwitch, zxr10EponOnuAuthEntry=zxr10EponOnuAuthEntry, onuStatisOutPkts=onuStatisOutPkts, remoteFirmwareVersion=remoteFirmwareVersion, remoteMultiFastLeave=remoteMultiFastLeave, onuE1EnableSwitch=onuE1EnableSwitch, remoteBitmapGePort=remoteBitmapGePort, onuType=onuType, switchTypeMtoB=switchTypeMtoB, zxr10EponProtectGroupEntry=zxr10EponProtectGroupEntry, onuVoipEnableSwitch=onuVoipEnableSwitch, protocolProtectSwitch=protocolProtectSwitch, zxr10EponRemoteOnuVoipTable=zxr10EponRemoteOnuVoipTable, onuPortDownPolicyPIR=onuPortDownPolicyPIR, zxr10EponSwitchRecordEntry=zxr10EponSwitchRecordEntry, onuPortFlowControl=onuPortFlowControl, opticsMeasureLow=opticsMeasureLow, oltEncryptRowStatus=oltEncryptRowStatus, cpuPortsOctets=cpuPortsOctets, frameTooLongErrorsPerLLID=frameTooLongErrorsPerLLID, protectOltMasterIfName=protectOltMasterIfName, remoteChipModel=remoteChipModel, onuDbaRowStatus=onuDbaRowStatus, onuVlanAddVid1=onuVlanAddVid1, onuAutoAuthSwtich=onuAutoAuthSwtich, zxr10EponRemoteFastRebootTable=zxr10EponRemoteFastRebootTable, zxr10EponOltEncryptEntry=zxr10EponOltEncryptEntry, onuStatisFer=onuStatisFer, oltStatisInOctes=oltStatisInOctes, queueValue3=queueValue3, packetLimitType=packetLimitType, optiInfoVendorPN=optiInfoVendorPN, remoteE1PortNum=remoteE1PortNum, zxr10EponRemoteOnuInfoTable=zxr10EponRemoteOnuInfoTable, oltStatisOutMultiPkts=oltStatisOutMultiPkts, oltMaxRtt=oltMaxRtt, onuVlanDelVid3=onuVlanDelVid3, oltStatisOutPkts=oltStatisOutPkts, onuVlanAddVid3=onuVlanAddVid3, onuVlanDelVid6=onuVlanDelVid6, onuMacPortName=onuMacPortName, onuBindTypeName=onuBindTypeName, remoteHardwareVersion=remoteHardwareVersion, zxr10EponRemoteOnuE1Table=zxr10EponRemoteOnuE1Table, protocolProtectMode=protocolProtectMode, conditionVlanId=conditionVlanId, transmittedOctetsPerLLID=transmittedOctetsPerLLID, remoteMaxQueuesPerDSport=remoteMaxQueuesPerDSport, zxr10EponRemoteOnuClassCondiEntry=zxr10EponRemoteOnuClassCondiEntry, oltPortCDRLockTime=oltPortCDRLockTime, protectRowStatus=protectRowStatus, onuStatisOutOctes=onuStatisOutOctes, onuHardwareSwitch=onuHardwareSwitch, onuPortDownPolicyCIR=onuPortDownPolicyCIR, oltStatisInBroadPkts=oltStatisInBroadPkts, onuVlanDelVid8=onuVlanDelVid8, onuStatisInBroadPkts=onuStatisInBroadPkts, onuAuthPCBVer=onuAuthPCBVer, zxr10EponRemoteOnuVoipEntry=zxr10EponRemoteOnuVoipEntry, oltPortSoftwareVersion=oltPortSoftwareVersion, oltPortAGCLockTime=oltPortAGCLockTime, oltStatisBer=oltStatisBer, remoteChipVendorId=remoteChipVendorId, onuMultiGroupMaxNum=onuMultiGroupMaxNum, queueValue7=queueValue7, zxr10EponOnuAuthTable=zxr10EponOnuAuthTable, zxr10=zxr10, onuVlanDelVid5=onuVlanDelVid5, queueValue6=queueValue6, zxr10EponRemoteOnuE1Entry=zxr10EponRemoteOnuE1Entry, queueValue4=queueValue4, ruleRowStatus=ruleRowStatus, packetLimitSwitch=packetLimitSwitch, onuBindMacAddr=onuBindMacAddr, optiDiagInterval=optiDiagInterval, oltKeyUpdatePeriod=oltKeyUpdatePeriod, onuRTT=onuRTT, transmittedFramesPerLLID=transmittedFramesPerLLID, standardOamMpcpStatistic=standardOamMpcpStatistic, remoteMaxQueuesPerUSport=remoteMaxQueuesPerUSport, zxr10EponRemoteFastRebootEntry=zxr10EponRemoteFastRebootEntry, eponSlotId=eponSlotId, oltStatisOutOctes=oltStatisOutOctes, oltStatisOutUniPkts=oltStatisOutUniPkts, onuPortUpPolicyCIR=onuPortUpPolicyCIR, onuDefaultVlan=onuDefaultVlan, oltPortDBAType=oltPortDBAType, zxr10EponObjects=zxr10EponObjects, queueValue1=queueValue1, onuEEPROMVer=onuEEPROMVer, remoteBitmapFePort=remoteBitmapFePort, onuVlanDelVid4=onuVlanDelVid4, protectOltActiveIfName=protectOltActiveIfName, protectOltEnableSwitch=protectOltEnableSwitch, queueVlaue=queueVlaue, onuHardVer=onuHardVer, oltStatisPortBer=oltStatisPortBer, onuStatisInMultiPkts=onuStatisInMultiPkts, zxr10EponRemoteOnu=zxr10EponRemoteOnu, protectOltBackupIfName=protectOltBackupIfName, protectReverTime=protectReverTime, onuPortUpPolicyEBS=onuPortUpPolicyEBS, onuPortDownPolicySwitch=onuPortDownPolicySwitch, eponOltPortName=eponOltPortName, queueValue2=queueValue2, conditionPriority=conditionPriority, zxr10EponAlarmEntry=zxr10EponAlarmEntry, remoteOnuModel=remoteOnuModel, remoteChipRevison=remoteChipRevison, ruleProfileNum=ruleProfileNum, zte=zte, onuVlanAddVid6=onuVlanAddVid6, conditionEthType=conditionEthType, conditionIpAddressType=conditionIpAddressType, onuStatisInOctes=onuStatisInOctes, onuAuthState=onuAuthState, zxr10EponOnuPortStatEntry=zxr10EponOnuPortStatEntry, oltAlarmDirectSwitch=oltAlarmDirectSwitch, queueValue5=queueValue5, onuVoipUniNumber=onuVoipUniNumber, onuRulePrecedenceNum=onuRulePrecedenceNum, onuPortVlanTagValue=onuPortVlanTagValue, onuBindSN=onuBindSN, zxr10EponOnuPortStatTable=zxr10EponOnuPortStatTable, zxr10EponAlarmTable=zxr10EponAlarmTable, remoteIcVersion=remoteIcVersion, conditionIpAddress=conditionIpAddress, dbaQueueActive=dbaQueueActive, onuBindRowStatus=onuBindRowStatus, oamFramesCounters=oamFramesCounters, standardOamStatistics=standardOamStatistics, conditionMacAddress=conditionMacAddress, opticsMeasureHigh=opticsMeasureHigh, queueValue8=queueValue8, zxr10EponLocal=zxr10EponLocal, onuVlanDelVid1=onuVlanDelVid1, zxr10EponProtectGroupTable=zxr10EponProtectGroupTable, onuSoftwareAuth=onuSoftwareAuth, onuMultiVlanSwitch=onuMultiVlanSwitch, protectGroupid=protectGroupid, onuId=onuId, oltLaserSwitch=oltLaserSwitch, remotePortsNum=remotePortsNum, onuAuthSoftVer=onuAuthSoftVer, onuPortVlanMode=onuPortVlanMode, optiInfoSFPID=optiInfoSFPID, zxr10EponOltEncryptTable=zxr10EponOltEncryptTable, onuVlanAddVid4=onuVlanAddVid4, conditionPortNum=conditionPortNum, onuVlanDelVid2=onuVlanDelVid2, conditionDscp=conditionDscp, onuConditionList=onuConditionList, oltStatisFer=oltStatisFer, priorityValue=priorityValue, remoteReboot=remoteReboot, zxr10EponTopologyCollect=zxr10EponTopologyCollect, onuVlanDelVid7=onuVlanDelVid7, onuE1UniNumber=onuE1UniNumber, zxr10EponRemoteOnuInfoEntry=zxr10EponRemoteOnuInfoEntry, remoteOnuVendorId=remoteOnuVendorId, zxr10EponOnuAuthInfoTable=zxr10EponOnuAuthInfoTable, oltEncryptAlgorithm=oltEncryptAlgorithm, remoteFePortNum=remoteFePortNum, onuMultiVlanList=onuMultiVlanList, oltAlarmThreshold=oltAlarmThreshold, remoteGePortNum=remoteGePortNum, onuEthUniNumber=onuEthUniNumber, remoteDSQueuesNum=remoteDSQueuesNum, onuStatisOutBroadPkts=onuStatisOutBroadPkts, remoteOnuId=remoteOnuId, switchTime=switchTime, oltChurningTimer=oltChurningTimer, oltStatisInPkts=oltStatisInPkts, zxr10EponRemoteOnuClassRuleEntry=zxr10EponRemoteOnuClassRuleEntry, onuStatisInPkts=onuStatisInPkts, switchRecordNum=switchRecordNum, zxr10EponRemoteOnuDbaEntry=zxr10EponRemoteOnuDbaEntry, onuRulePrecedenceSwitch=onuRulePrecedenceSwitch, zxr10EponOltPortStatEntry=zxr10EponOltPortStatEntry, oltStatisInMultiPkts=oltStatisInMultiPkts, zxr10EponRemoteOnuPortTable=zxr10EponRemoteOnuPortTable, remoteBatteryBackup=remoteBatteryBackup, onuRuleProfile=onuRuleProfile, conditionMacAddressType=conditionMacAddressType, switchRecordGroupid=switchRecordGroupid, zxr10EponSwitchRecordTable=zxr10EponSwitchRecordTable, conditionIpProtocolType=conditionIpProtocolType, onuStatisOutMultiPkts=onuStatisOutMultiPkts, onuHostType=onuHostType, oltAlarmSwitch=oltAlarmSwitch, onuVlanAddVid8=onuVlanAddVid8, queueSetId=queueSetId, zxr10EponOltOptiInfoEntry=zxr10EponOltOptiInfoEntry, remoteSoftwareVersion=remoteSoftwareVersion, onuOpticalLen=onuOpticalLen, oltPortSupportedLlidNum=oltPortSupportedLlidNum, droppedFramesPerLLID=droppedFramesPerLLID, protectReverEnable=protectReverEnable, zxr10EponOltOptiInfoTable=zxr10EponOltOptiInfoTable, onuStatisBer=onuStatisBer, conditionOperatorType=conditionOperatorType, conditionRowStatus=conditionRowStatus, onuPortUpPolicyCBS=onuPortUpPolicyCBS, optiInfoWavelength=optiInfoWavelength, conditionL4PortType=conditionL4PortType, oltStatisInUniPkts=oltStatisInUniPkts, cpuPortsFrames=cpuPortsFrames, zxr10EponOltPortStatTable=zxr10EponOltPortStatTable, oltStatisOutBroadPkts=oltStatisOutBroadPkts, inRangeLengthErrorsPerLLID=inRangeLengthErrorsPerLLID, switchType=switchType, conditionProfileNum=conditionProfileNum, zxr10EponRemoteOnuDbaTable=zxr10EponRemoteOnuDbaTable, zxr10EponRemoteOnuPortEntry=zxr10EponRemoteOnuPortEntry, onuVlanAddVid2=onuVlanAddVid2, onuPortRowStatus=onuPortRowStatus, remoteUsQueuesNum=remoteUsQueuesNum, onuVlanAddVid5=onuVlanAddVid5, onuMacMaxNum=onuMacMaxNum, zxr10EponRemoteOnuClassRuleTable=zxr10EponRemoteOnuClassRuleTable, zxr10EponRemoteOnuClassCondiTable=zxr10EponRemoteOnuClassCondiTable)
