#
# PySNMP MIB module Nortel-Magellan-Passport-FrameRelayAtmMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-FrameRelayAtmMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
RowPointer, InterfaceIndex, Counter32, PassportCounter64, Gauge32, StorageType, Integer32, Unsigned32, DisplayString, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowPointer", "InterfaceIndex", "Counter32", "PassportCounter64", "Gauge32", "StorageType", "Integer32", "Unsigned32", "DisplayString", "RowStatus")
NonReplicated, Link, HexString, EnterpriseDateAndTime, IntegerSequence, AsciiString, Unsigned64 = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link", "HexString", "EnterpriseDateAndTime", "IntegerSequence", "AsciiString", "Unsigned64")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ObjectIdentity, Counter32, iso, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, Integer32, ModuleIdentity, Unsigned32, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Counter32", "iso", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "Integer32", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
frameRelayAtmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51))
frAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72))
frAtmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 1), )
if mibBuilder.loadTexts: frAtmRowStatusTable.setStatus('mandatory')
frAtmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmRowStatusEntry.setStatus('mandatory')
frAtmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmRowStatus.setStatus('mandatory')
frAtmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmComponentName.setStatus('mandatory')
frAtmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmStorageType.setStatus('mandatory')
frAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: frAtmIndex.setStatus('mandatory')
frAtmCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 10), )
if mibBuilder.loadTexts: frAtmCidDataTable.setStatus('mandatory')
frAtmCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmCidDataEntry.setStatus('mandatory')
frAtmCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCustomerIdentifier.setStatus('mandatory')
frAtmStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11), )
if mibBuilder.loadTexts: frAtmStateTable.setStatus('mandatory')
frAtmStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmStateEntry.setStatus('mandatory')
frAtmAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmAdminState.setStatus('mandatory')
frAtmOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmOperationalState.setStatus('mandatory')
frAtmUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmUsageState.setStatus('mandatory')
frAtmAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmAvailabilityStatus.setStatus('mandatory')
frAtmProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmProceduralStatus.setStatus('mandatory')
frAtmControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmControlStatus.setStatus('mandatory')
frAtmAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmAlarmStatus.setStatus('mandatory')
frAtmStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmStandbyStatus.setStatus('mandatory')
frAtmUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmUnknownStatus.setStatus('mandatory')
frAtmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 12), )
if mibBuilder.loadTexts: frAtmStatsTable.setStatus('mandatory')
frAtmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmStatsEntry.setStatus('mandatory')
frAtmLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLastUnknownDlci.setStatus('mandatory')
frAtmUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmUnknownDlciFramesFromIf.setStatus('mandatory')
frAtmInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmInvalidHeaderFramesFromIf.setStatus('mandatory')
frAtmIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 13), )
if mibBuilder.loadTexts: frAtmIfEntryTable.setStatus('mandatory')
frAtmIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmIfEntryEntry.setStatus('mandatory')
frAtmIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmIfAdminStatus.setStatus('mandatory')
frAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 13, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmIfIndex.setStatus('mandatory')
frAtmOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 14), )
if mibBuilder.loadTexts: frAtmOperStatusTable.setStatus('mandatory')
frAtmOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmOperStatusEntry.setStatus('mandatory')
frAtmSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmSnmpOperStatus.setStatus('mandatory')
frAtmEmissionPriorityQsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 15), )
if mibBuilder.loadTexts: frAtmEmissionPriorityQsTable.setStatus('mandatory')
frAtmEmissionPriorityQsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"))
if mibBuilder.loadTexts: frAtmEmissionPriorityQsEntry.setStatus('mandatory')
frAtmNumberOfEmissionQs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmNumberOfEmissionQs.setStatus('mandatory')
frAtmFrmToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 341), )
if mibBuilder.loadTexts: frAtmFrmToIfByQueueTable.setStatus('mandatory')
frAtmFrmToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 341, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFrmToIfByQueueIndex"))
if mibBuilder.loadTexts: frAtmFrmToIfByQueueEntry.setStatus('mandatory')
frAtmFrmToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 341, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: frAtmFrmToIfByQueueIndex.setStatus('mandatory')
frAtmFrmToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 341, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFrmToIfByQueueValue.setStatus('mandatory')
frAtmOctetToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 342), )
if mibBuilder.loadTexts: frAtmOctetToIfByQueueTable.setStatus('mandatory')
frAtmOctetToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 342, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmOctetToIfByQueueIndex"))
if mibBuilder.loadTexts: frAtmOctetToIfByQueueEntry.setStatus('mandatory')
frAtmOctetToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 342, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: frAtmOctetToIfByQueueIndex.setStatus('mandatory')
frAtmOctetToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 342, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmOctetToIfByQueueValue.setStatus('mandatory')
frAtmFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2))
frAtmFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 1), )
if mibBuilder.loadTexts: frAtmFramerRowStatusTable.setStatus('mandatory')
frAtmFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFramerIndex"))
if mibBuilder.loadTexts: frAtmFramerRowStatusEntry.setStatus('mandatory')
frAtmFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmFramerRowStatus.setStatus('mandatory')
frAtmFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerComponentName.setStatus('mandatory')
frAtmFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerStorageType.setStatus('mandatory')
frAtmFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmFramerIndex.setStatus('mandatory')
frAtmFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 10), )
if mibBuilder.loadTexts: frAtmFramerProvTable.setStatus('mandatory')
frAtmFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFramerIndex"))
if mibBuilder.loadTexts: frAtmFramerProvEntry.setStatus('mandatory')
frAtmFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmFramerInterfaceName.setStatus('mandatory')
frAtmFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 11), )
if mibBuilder.loadTexts: frAtmFramerLinkTable.setStatus('mandatory')
frAtmFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFramerIndex"))
if mibBuilder.loadTexts: frAtmFramerLinkEntry.setStatus('mandatory')
frAtmFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmFramerFlagsBetweenFrames.setStatus('mandatory')
frAtmFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 12), )
if mibBuilder.loadTexts: frAtmFramerStateTable.setStatus('mandatory')
frAtmFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFramerIndex"))
if mibBuilder.loadTexts: frAtmFramerStateEntry.setStatus('mandatory')
frAtmFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerAdminState.setStatus('mandatory')
frAtmFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerOperationalState.setStatus('mandatory')
frAtmFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerUsageState.setStatus('mandatory')
frAtmFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13), )
if mibBuilder.loadTexts: frAtmFramerStatsTable.setStatus('mandatory')
frAtmFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFramerIndex"))
if mibBuilder.loadTexts: frAtmFramerStatsEntry.setStatus('mandatory')
frAtmFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerFrmToIf.setStatus('mandatory')
frAtmFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerFrmFromIf.setStatus('mandatory')
frAtmFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerOctetFromIf.setStatus('mandatory')
frAtmFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerAborts.setStatus('mandatory')
frAtmFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerCrcErrors.setStatus('mandatory')
frAtmFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerLrcErrors.setStatus('mandatory')
frAtmFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerNonOctetErrors.setStatus('mandatory')
frAtmFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerOverruns.setStatus('mandatory')
frAtmFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerUnderruns.setStatus('mandatory')
frAtmFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerLargeFrmErrors.setStatus('mandatory')
frAtmFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerFrmModeErrors.setStatus('mandatory')
frAtmFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 14), )
if mibBuilder.loadTexts: frAtmFramerUtilTable.setStatus('mandatory')
frAtmFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmFramerIndex"))
if mibBuilder.loadTexts: frAtmFramerUtilEntry.setStatus('mandatory')
frAtmFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerNormPrioLinkUtilToIf.setStatus('mandatory')
frAtmFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
frAtmLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3))
frAtmLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 1), )
if mibBuilder.loadTexts: frAtmLmiRowStatusTable.setStatus('mandatory')
frAtmLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmLmiIndex"))
if mibBuilder.loadTexts: frAtmLmiRowStatusEntry.setStatus('mandatory')
frAtmLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiRowStatus.setStatus('mandatory')
frAtmLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiComponentName.setStatus('mandatory')
frAtmLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiStorageType.setStatus('mandatory')
frAtmLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmLmiIndex.setStatus('mandatory')
frAtmLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10), )
if mibBuilder.loadTexts: frAtmLmiParmsTable.setStatus('mandatory')
frAtmLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmLmiIndex"))
if mibBuilder.loadTexts: frAtmLmiParmsEntry.setStatus('mandatory')
frAtmLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiProcedures.setStatus('mandatory')
frAtmLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiAsyncStatusReport.setStatus('mandatory')
frAtmLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiErrorEventThreshold.setStatus('mandatory')
frAtmLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiEventCount.setStatus('mandatory')
frAtmLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiCheckPointTimer.setStatus('mandatory')
frAtmLmiMessageCountTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiMessageCountTimer.setStatus('mandatory')
frAtmLmiIgnoreActiveBit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiIgnoreActiveBit.setStatus('mandatory')
frAtmLmiSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("network", 0), ("user", 1), ("both", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiSide.setStatus('mandatory')
frAtmLmiPvcConfigParmsInFsr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiPvcConfigParmsInFsr.setStatus('mandatory')
frAtmLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 11), )
if mibBuilder.loadTexts: frAtmLmiStateTable.setStatus('mandatory')
frAtmLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmLmiIndex"))
if mibBuilder.loadTexts: frAtmLmiStateEntry.setStatus('mandatory')
frAtmLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiAdminState.setStatus('mandatory')
frAtmLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiOperationalState.setStatus('mandatory')
frAtmLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiUsageState.setStatus('mandatory')
frAtmLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 12), )
if mibBuilder.loadTexts: frAtmLmiPsiTable.setStatus('mandatory')
frAtmLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmLmiIndex"))
if mibBuilder.loadTexts: frAtmLmiPsiEntry.setStatus('mandatory')
frAtmLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1), ("configuring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiProtocolStatus.setStatus('mandatory')
frAtmLmiOpProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiOpProcedures.setStatus('mandatory')
frAtmLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13), )
if mibBuilder.loadTexts: frAtmLmiStatsTable.setStatus('mandatory')
frAtmLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmLmiIndex"))
if mibBuilder.loadTexts: frAtmLmiStatsEntry.setStatus('mandatory')
frAtmLmiKeepAliveStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiKeepAliveStatusToIf.setStatus('mandatory')
frAtmLmiFullStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiFullStatusToIf.setStatus('mandatory')
frAtmLmiKeepAliveStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiKeepAliveStatusEnqFromIf.setStatus('mandatory')
frAtmLmiFullStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiFullStatusEnqFromIf.setStatus('mandatory')
frAtmLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiNetworkSideEventHistory.setStatus('mandatory')
frAtmLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiProtocolErrors.setStatus('mandatory')
frAtmLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiUnexpectedIes.setStatus('mandatory')
frAtmLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiSequenceErrors.setStatus('mandatory')
frAtmLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiUnexpectedReports.setStatus('mandatory')
frAtmLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiPollingVerifTimeouts.setStatus('mandatory')
frAtmLmiKeepAliveEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiKeepAliveEnqToIf.setStatus('mandatory')
frAtmLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiFullStatusEnqToIf.setStatus('mandatory')
frAtmLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiUserSideEventHistory.setStatus('mandatory')
frAtmLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiStatusSequenceErrors.setStatus('mandatory')
frAtmLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmLmiNoStatusReportCount.setStatus('mandatory')
frAtmLmiUspParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 14), )
if mibBuilder.loadTexts: frAtmLmiUspParmsTable.setStatus('mandatory')
frAtmLmiUspParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmLmiIndex"))
if mibBuilder.loadTexts: frAtmLmiUspParmsEntry.setStatus('mandatory')
frAtmLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiFullStatusPollingCycles.setStatus('mandatory')
frAtmLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 3, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmLmiLinkVerificationTimer.setStatus('mandatory')
frAtmDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4))
frAtmDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 1), )
if mibBuilder.loadTexts: frAtmDlciRowStatusTable.setStatus('mandatory')
frAtmDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciRowStatusEntry.setStatus('mandatory')
frAtmDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciRowStatus.setStatus('mandatory')
frAtmDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciComponentName.setStatus('mandatory')
frAtmDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciStorageType.setStatus('mandatory')
frAtmDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: frAtmDlciIndex.setStatus('mandatory')
frAtmDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 10), )
if mibBuilder.loadTexts: frAtmDlciStateTable.setStatus('mandatory')
frAtmDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciStateEntry.setStatus('mandatory')
frAtmDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciAdminState.setStatus('mandatory')
frAtmDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciOperationalState.setStatus('mandatory')
frAtmDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciUsageState.setStatus('mandatory')
frAtmDlciABitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 11), )
if mibBuilder.loadTexts: frAtmDlciABitTable.setStatus('mandatory')
frAtmDlciABitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciABitEntry.setStatus('mandatory')
frAtmDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciABitStatusToIf.setStatus('mandatory')
frAtmDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciABitReasonToIf.setStatus('mandatory')
frAtmDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciABitStatusFromIf.setStatus('mandatory')
frAtmDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("pvcDown", 6), ("missingFromLmiReport", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciABitReasonFromIf.setStatus('mandatory')
frAtmDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12), )
if mibBuilder.loadTexts: frAtmDlciSpOpTable.setStatus('mandatory')
frAtmDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciSpOpEntry.setStatus('mandatory')
frAtmDlciMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciMaximumFrameSize.setStatus('mandatory')
frAtmDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciRateEnforcement.setStatus('mandatory')
frAtmDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciCommittedInformationRate.setStatus('mandatory')
frAtmDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciCommittedBurstSize.setStatus('mandatory')
frAtmDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciExcessBurstSize.setStatus('mandatory')
frAtmDlciMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciMeasurementInterval.setStatus('mandatory')
frAtmDlciEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEmissionPriorityToIf.setStatus('mandatory')
frAtmDlciDlciType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("serviceInterworking", 0), ("networkInterworking", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDlciType.setStatus('mandatory')
frAtmDlciTroubled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciTroubled.setStatus('mandatory')
frAtmDlciTroubledReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notApplicable", 0), ("notAdmitted", 1))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciTroubledReason.setStatus('mandatory')
frAtmDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13), )
if mibBuilder.loadTexts: frAtmDlciStatsTable.setStatus('mandatory')
frAtmDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciStatsEntry.setStatus('mandatory')
frAtmDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciFrmToIf.setStatus('mandatory')
frAtmDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciFecnFrmToIf.setStatus('mandatory')
frAtmDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciBecnFrmToIf.setStatus('mandatory')
frAtmDlciDeFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDeFrmToIf.setStatus('mandatory')
frAtmDlciDiscCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscCongestedToIf.setStatus('mandatory')
frAtmDlciDiscDeCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscDeCongestedToIf.setStatus('mandatory')
frAtmDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciFrmFromIf.setStatus('mandatory')
frAtmDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciFecnFrmFromIf.setStatus('mandatory')
frAtmDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciBecnFrmFromIf.setStatus('mandatory')
frAtmDlciEfciFrmFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEfciFrmFromNetwork.setStatus('mandatory')
frAtmDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDeFrmFromIf.setStatus('mandatory')
frAtmDlciExcessFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciExcessFrmFromIf.setStatus('mandatory')
frAtmDlciDiscExcessFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscExcessFromIf.setStatus('mandatory')
frAtmDlciDiscFrameAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscFrameAbit.setStatus('mandatory')
frAtmDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscCongestedFromIf.setStatus('mandatory')
frAtmDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscDeCongestedFromIf.setStatus('mandatory')
frAtmDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciErrorShortFrmFromIf.setStatus('mandatory')
frAtmDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciErrorLongFrmFromIf.setStatus('mandatory')
frAtmDlciBecnFrmSetByService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciBecnFrmSetByService.setStatus('mandatory')
frAtmDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciBytesToIf.setStatus('mandatory')
frAtmDlciDeBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDeBytesToIf.setStatus('mandatory')
frAtmDlciDiscCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscCongestedToIfBytes.setStatus('mandatory')
frAtmDlciDiscDeCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscDeCongestedToIfBytes.setStatus('mandatory')
frAtmDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciBytesFromIf.setStatus('mandatory')
frAtmDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDeBytesFromIf.setStatus('mandatory')
frAtmDlciExcessBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciExcessBytesFromIf.setStatus('mandatory')
frAtmDlciDiscExcessFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscExcessFromIfBytes.setStatus('mandatory')
frAtmDlciDiscByteAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscByteAbit.setStatus('mandatory')
frAtmDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscCongestedFromIfBytes.setStatus('mandatory')
frAtmDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
frAtmDlciErrorShortBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciErrorShortBytesFromIf.setStatus('mandatory')
frAtmDlciErrorLongBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 13, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciErrorLongBytesFromIf.setStatus('mandatory')
frAtmDlciCalldTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 14), )
if mibBuilder.loadTexts: frAtmDlciCalldTable.setStatus('mandatory')
frAtmDlciCalldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciCalldEntry.setStatus('mandatory')
frAtmDlciAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciAccountingEnabled.setStatus('mandatory')
frAtmDlciAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciAccountingEnd.setStatus('mandatory')
frAtmDlciCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 14, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciCorrelationTag.setStatus('mandatory')
frAtmDlciIntTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15), )
if mibBuilder.loadTexts: frAtmDlciIntTable.setStatus('mandatory')
frAtmDlciIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"))
if mibBuilder.loadTexts: frAtmDlciIntEntry.setStatus('mandatory')
frAtmDlciStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciStartTime.setStatus('mandatory')
frAtmDlciTotalIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciTotalIngressBytes.setStatus('mandatory')
frAtmDlciTotalEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 3), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciTotalEgressBytes.setStatus('mandatory')
frAtmDlciEirIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 4), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEirIngressBytes.setStatus('mandatory')
frAtmDlciEirEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 5), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEirEgressBytes.setStatus('mandatory')
frAtmDlciDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscardedBytes.setStatus('mandatory')
frAtmDlciTotalIngressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciTotalIngressFrames.setStatus('mandatory')
frAtmDlciTotalEgressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciTotalEgressFrames.setStatus('mandatory')
frAtmDlciEirIngressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEirIngressFrames.setStatus('mandatory')
frAtmDlciEirEgressFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEirEgressFrames.setStatus('mandatory')
frAtmDlciDiscardedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciDiscardedFrames.setStatus('mandatory')
frAtmDlciElapsedDifference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 15, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciElapsedDifference.setStatus('mandatory')
frAtmDlciSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2))
frAtmDlciSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 1), )
if mibBuilder.loadTexts: frAtmDlciSpRowStatusTable.setStatus('mandatory')
frAtmDlciSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSpIndex"))
if mibBuilder.loadTexts: frAtmDlciSpRowStatusEntry.setStatus('mandatory')
frAtmDlciSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSpRowStatus.setStatus('mandatory')
frAtmDlciSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSpComponentName.setStatus('mandatory')
frAtmDlciSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSpStorageType.setStatus('mandatory')
frAtmDlciSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSpIndex.setStatus('mandatory')
frAtmDlciSpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10), )
if mibBuilder.loadTexts: frAtmDlciSpProvTable.setStatus('mandatory')
frAtmDlciSpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSpIndex"))
if mibBuilder.loadTexts: frAtmDlciSpProvEntry.setStatus('mandatory')
frAtmDlciSpMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpMaximumFrameSize.setStatus('mandatory')
frAtmDlciSpRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpRateEnforcement.setStatus('mandatory')
frAtmDlciSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpCommittedInformationRate.setStatus('mandatory')
frAtmDlciSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpCommittedBurstSize.setStatus('mandatory')
frAtmDlciSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpExcessBurstSize.setStatus('mandatory')
frAtmDlciSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpMeasurementInterval.setStatus('mandatory')
frAtmDlciSpEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("low", 0), ("high", 3))).clone('low')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpEmissionPriorityToIf.setStatus('obsolete')
frAtmDlciSpEmissionPrioToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpEmissionPrioToIf.setStatus('obsolete')
frAtmDlciSpAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSpAccounting.setStatus('mandatory')
frAtmDlciSiwf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3))
frAtmDlciSiwfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 1), )
if mibBuilder.loadTexts: frAtmDlciSiwfRowStatusTable.setStatus('mandatory')
frAtmDlciSiwfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfRowStatusEntry.setStatus('mandatory')
frAtmDlciSiwfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfRowStatus.setStatus('mandatory')
frAtmDlciSiwfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfComponentName.setStatus('mandatory')
frAtmDlciSiwfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfStorageType.setStatus('mandatory')
frAtmDlciSiwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSiwfIndex.setStatus('mandatory')
frAtmDlciSiwfConnOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11), )
if mibBuilder.loadTexts: frAtmDlciSiwfConnOpTable.setStatus('mandatory')
frAtmDlciSiwfConnOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfConnOpEntry.setStatus('mandatory')
frAtmDlciSiwfDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dp1", 1), ("dp2", 2), ("dp3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfDiscardPriority.setStatus('mandatory')
frAtmDlciSiwfAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAtmServiceCategory.setStatus('mandatory')
frAtmDlciSiwfTrafficParmConvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("notApplicable", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfTrafficParmConvPolicy.setStatus('mandatory')
frAtmDlciSiwfAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAvgFrameSize.setStatus('mandatory')
frAtmDlciSiwfRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1, 8), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfRemoteAddress.setStatus('mandatory')
frAtmDlciSiwfRemoteConnectionIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 11, 1, 9), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfRemoteConnectionIdentifier.setStatus('mandatory')
frAtmDlciSiwfSdOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12), )
if mibBuilder.loadTexts: frAtmDlciSiwfSdOpTable.setStatus('mandatory')
frAtmDlciSiwfSdOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfSdOpEntry.setStatus('mandatory')
frAtmDlciSiwfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("translationMode", 0), ("transparentMode", 1), ("speTranslationMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfMode.setStatus('mandatory')
frAtmDlciSiwfDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfDeToClpMapping.setStatus('mandatory')
frAtmDlciSiwfClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfClpToDeMapping.setStatus('mandatory')
frAtmDlciSiwfFecnToEfciMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfFecnToEfciMapping.setStatus('mandatory')
frAtmDlciSiwfCrToUuMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2))).clone('preserve')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfCrToUuMapping.setStatus('obsolete')
frAtmDlciSiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 253))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("notApplicable", 253)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfTransferPriority.setStatus('mandatory')
frAtmDlciSiwfAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAssignedBandwidthPool.setStatus('mandatory')
frAtmDlciSiwfSiwfSpvcOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13), )
if mibBuilder.loadTexts: frAtmDlciSiwfSiwfSpvcOpTable.setStatus('mandatory')
frAtmDlciSiwfSiwfSpvcOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfSiwfSpvcOpEntry.setStatus('mandatory')
frAtmDlciSiwfPeakCellRate0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfPeakCellRate0.setStatus('mandatory')
frAtmDlciSiwfPeakCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfPeakCellRate01.setStatus('mandatory')
frAtmDlciSiwfSustainedCellRate0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfSustainedCellRate0.setStatus('mandatory')
frAtmDlciSiwfSustainedCellRate01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfSustainedCellRate01.setStatus('mandatory')
frAtmDlciSiwfMaximumBurstSize0 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfMaximumBurstSize0.setStatus('mandatory')
frAtmDlciSiwfMaximumBurstSize01 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfMaximumBurstSize01.setStatus('mandatory')
frAtmDlciSiwfEquivalentBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfEquivalentBitRate.setStatus('mandatory')
frAtmDlciSiwfType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("master", 0), ("slave", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfType.setStatus('mandatory')
frAtmDlciSiwfVccClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfVccClearCause.setStatus('mandatory')
frAtmDlciSiwfVccCauseDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 13, 1, 15), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfVccCauseDiag.setStatus('mandatory')
frAtmDlciSiwfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14), )
if mibBuilder.loadTexts: frAtmDlciSiwfStatsTable.setStatus('mandatory')
frAtmDlciSiwfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfStatsEntry.setStatus('mandatory')
frAtmDlciSiwfUnknown1490Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfUnknown1490Frames.setStatus('mandatory')
frAtmDlciSiwfInvalid1490Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfInvalid1490Frames.setStatus('mandatory')
frAtmDlciSiwfLastUnknown1490ProtocolHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfLastUnknown1490ProtocolHeader.setStatus('mandatory')
frAtmDlciSiwfUnknown1483Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfUnknown1483Frames.setStatus('mandatory')
frAtmDlciSiwfInvalid1483Frames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfInvalid1483Frames.setStatus('mandatory')
frAtmDlciSiwfLastUnknown1483ProtocolHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 14, 1, 6), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfLastUnknown1483ProtocolHeader.setStatus('mandatory')
frAtmDlciSiwfSd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2))
frAtmDlciSiwfSdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 1), )
if mibBuilder.loadTexts: frAtmDlciSiwfSdRowStatusTable.setStatus('mandatory')
frAtmDlciSiwfSdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfSdIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfSdRowStatusEntry.setStatus('mandatory')
frAtmDlciSiwfSdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSdRowStatus.setStatus('mandatory')
frAtmDlciSiwfSdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfSdComponentName.setStatus('mandatory')
frAtmDlciSiwfSdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfSdStorageType.setStatus('mandatory')
frAtmDlciSiwfSdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSiwfSdIndex.setStatus('mandatory')
frAtmDlciSiwfSdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10), )
if mibBuilder.loadTexts: frAtmDlciSiwfSdProvTable.setStatus('mandatory')
frAtmDlciSiwfSdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfSdIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfSdProvEntry.setStatus('mandatory')
frAtmDlciSiwfSdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("translationMode", 0), ("transparentMode", 1), ("speTranslationMode", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSdMode.setStatus('mandatory')
frAtmDlciSiwfSdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSdDeToClpMapping.setStatus('mandatory')
frAtmDlciSiwfSdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSdClpToDeMapping.setStatus('mandatory')
frAtmDlciSiwfSdFecnToEfciMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSdFecnToEfciMapping.setStatus('mandatory')
frAtmDlciSiwfSdCrToUuMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSdCrToUuMapping.setStatus('obsolete')
frAtmDlciSiwfNPvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3))
frAtmDlciSiwfNPvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 1), )
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcRowStatusTable.setStatus('mandatory')
frAtmDlciSiwfNPvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfNPvcIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcRowStatusEntry.setStatus('mandatory')
frAtmDlciSiwfNPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcRowStatus.setStatus('mandatory')
frAtmDlciSiwfNPvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcComponentName.setStatus('mandatory')
frAtmDlciSiwfNPvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcStorageType.setStatus('mandatory')
frAtmDlciSiwfNPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcIndex.setStatus('mandatory')
frAtmDlciSiwfNPvcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 10), )
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcProvTable.setStatus('mandatory')
frAtmDlciSiwfNPvcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfNPvcIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcProvEntry.setStatus('mandatory')
frAtmDlciSiwfNPvcAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcAtmConnection.setStatus('mandatory')
frAtmDlciSiwfNPvcCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcCorrelationTag.setStatus('mandatory')
frAtmDlciSiwfNPvcSiwfNpvcOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 11), )
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcSiwfNpvcOpTable.setStatus('mandatory')
frAtmDlciSiwfNPvcSiwfNpvcOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfNPvcIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcSiwfNpvcOpEntry.setStatus('mandatory')
frAtmDlciSiwfNPvcConnectionToAtm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 3, 11, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfNPvcConnectionToAtm.setStatus('mandatory')
frAtmDlciSiwfSPvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4))
frAtmDlciSiwfSPvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 1), )
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcRowStatusTable.setStatus('mandatory')
frAtmDlciSiwfSPvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfSPvcIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcRowStatusEntry.setStatus('mandatory')
frAtmDlciSiwfSPvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcRowStatus.setStatus('mandatory')
frAtmDlciSiwfSPvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcComponentName.setStatus('mandatory')
frAtmDlciSiwfSPvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcStorageType.setStatus('mandatory')
frAtmDlciSiwfSPvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcIndex.setStatus('mandatory')
frAtmDlciSiwfSPvcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 10), )
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcProvTable.setStatus('mandatory')
frAtmDlciSiwfSPvcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfSPvcIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcProvEntry.setStatus('mandatory')
frAtmDlciSiwfSPvcRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(3, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcRemoteAddress.setStatus('mandatory')
frAtmDlciSiwfSPvcRemoteConnectionIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 10, 1, 3), IntegerSequence().subtype(subtypeSpec=ValueSizeConstraint(3, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcRemoteConnectionIdentifier.setStatus('mandatory')
frAtmDlciSiwfSPvcCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 4, 10, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfSPvcCorrelationTag.setStatus('mandatory')
frAtmDlciSiwfQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5))
frAtmDlciSiwfQoSRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 1), )
if mibBuilder.loadTexts: frAtmDlciSiwfQoSRowStatusTable.setStatus('mandatory')
frAtmDlciSiwfQoSRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfQoSIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfQoSRowStatusEntry.setStatus('mandatory')
frAtmDlciSiwfQoSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfQoSRowStatus.setStatus('mandatory')
frAtmDlciSiwfQoSComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfQoSComponentName.setStatus('mandatory')
frAtmDlciSiwfQoSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfQoSStorageType.setStatus('mandatory')
frAtmDlciSiwfQoSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSiwfQoSIndex.setStatus('mandatory')
frAtmDlciSiwfQoSProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 10), )
if mibBuilder.loadTexts: frAtmDlciSiwfQoSProvTable.setStatus('mandatory')
frAtmDlciSiwfQoSProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfQoSIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfQoSProvEntry.setStatus('mandatory')
frAtmDlciSiwfQoSEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfQoSEmissionPriorityToIf.setStatus('mandatory')
frAtmDlciSiwfQoSTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciSiwfQoSTransferPriority.setStatus('mandatory')
frAtmDlciSiwfAtmCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6))
frAtmDlciSiwfAtmConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 1), )
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConRowStatusTable.setStatus('mandatory')
frAtmDlciSiwfAtmConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfAtmConIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConRowStatusEntry.setStatus('mandatory')
frAtmDlciSiwfAtmConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConRowStatus.setStatus('mandatory')
frAtmDlciSiwfAtmConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConComponentName.setStatus('mandatory')
frAtmDlciSiwfAtmConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConStorageType.setStatus('mandatory')
frAtmDlciSiwfAtmConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConIndex.setStatus('mandatory')
frAtmDlciSiwfAtmConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 10), )
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConOperTable.setStatus('mandatory')
frAtmDlciSiwfAtmConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciSiwfAtmConIndex"))
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConOperEntry.setStatus('mandatory')
frAtmDlciSiwfAtmConNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 3, 6, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciSiwfAtmConNextHop.setStatus('mandatory')
frAtmDlciNiwf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4))
frAtmDlciNiwfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 1), )
if mibBuilder.loadTexts: frAtmDlciNiwfRowStatusTable.setStatus('mandatory')
frAtmDlciNiwfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfRowStatusEntry.setStatus('mandatory')
frAtmDlciNiwfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfRowStatus.setStatus('mandatory')
frAtmDlciNiwfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfComponentName.setStatus('mandatory')
frAtmDlciNiwfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfStorageType.setStatus('mandatory')
frAtmDlciNiwfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciNiwfIndex.setStatus('mandatory')
frAtmDlciNiwfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10), )
if mibBuilder.loadTexts: frAtmDlciNiwfOperTable.setStatus('mandatory')
frAtmDlciNiwfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfOperEntry.setStatus('mandatory')
frAtmDlciNiwfDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfDeToClpMapping.setStatus('mandatory')
frAtmDlciNiwfClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("preserve", 2), ("transparent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfClpToDeMapping.setStatus('mandatory')
frAtmDlciNiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfTransferPriority.setStatus('mandatory')
frAtmDlciNiwfAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("scNotAvailable", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfAtmServiceCategory.setStatus('mandatory')
frAtmDlciNiwfTrafficParmConvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4, 5, 6))).clone(namedValues=NamedValues(("policyNotAvailable", 0), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfTrafficParmConvPolicy.setStatus('mandatory')
frAtmDlciNiwfAvgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfAvgFrameSize.setStatus('mandatory')
frAtmDlciNiwfEquivalentBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfEquivalentBitRate.setStatus('mandatory')
frAtmDlciNiwfAtmDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 8), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfAtmDlci.setStatus('mandatory')
frAtmDlciNiwfAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfAssignedBandwidthPool.setStatus('mandatory')
frAtmDlciNiwfSpvc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2))
frAtmDlciNiwfSpvcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 1), )
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcRowStatusTable.setStatus('mandatory')
frAtmDlciNiwfSpvcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfSpvcIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcRowStatusEntry.setStatus('mandatory')
frAtmDlciNiwfSpvcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcRowStatus.setStatus('mandatory')
frAtmDlciNiwfSpvcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcComponentName.setStatus('mandatory')
frAtmDlciNiwfSpvcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcStorageType.setStatus('mandatory')
frAtmDlciNiwfSpvcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcIndex.setStatus('mandatory')
frAtmDlciNiwfSpvcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 10), )
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcProvTable.setStatus('mandatory')
frAtmDlciNiwfSpvcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfSpvcIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcProvEntry.setStatus('mandatory')
frAtmDlciNiwfSpvcRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(3, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcRemoteAddress.setStatus('mandatory')
frAtmDlciNiwfSpvcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 1007), ValueRangeConstraint(1022, 1022), )).clone(1022)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcRemoteDlci.setStatus('mandatory')
frAtmDlciNiwfSpvcCorrelationTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 2, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 28)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfSpvcCorrelationTag.setStatus('mandatory')
frAtmDlciNiwfNd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3))
frAtmDlciNiwfNdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 1), )
if mibBuilder.loadTexts: frAtmDlciNiwfNdRowStatusTable.setStatus('mandatory')
frAtmDlciNiwfNdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfNdIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfNdRowStatusEntry.setStatus('mandatory')
frAtmDlciNiwfNdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfNdRowStatus.setStatus('mandatory')
frAtmDlciNiwfNdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfNdComponentName.setStatus('mandatory')
frAtmDlciNiwfNdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfNdStorageType.setStatus('mandatory')
frAtmDlciNiwfNdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciNiwfNdIndex.setStatus('mandatory')
frAtmDlciNiwfNdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 10), )
if mibBuilder.loadTexts: frAtmDlciNiwfNdProvTable.setStatus('mandatory')
frAtmDlciNiwfNdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfNdIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfNdProvEntry.setStatus('mandatory')
frAtmDlciNiwfNdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfNdDeToClpMapping.setStatus('mandatory')
frAtmDlciNiwfNdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 255))).clone(namedValues=NamedValues(("preserve", 2), ("transparent", 3), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfNdClpToDeMapping.setStatus('mandatory')
frAtmDlciNiwfNdTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfNdTransferPriority.setStatus('obsolete')
frAtmDlciNiwfQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4))
frAtmDlciNiwfQoSRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 1), )
if mibBuilder.loadTexts: frAtmDlciNiwfQoSRowStatusTable.setStatus('mandatory')
frAtmDlciNiwfQoSRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfQoSIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfQoSRowStatusEntry.setStatus('mandatory')
frAtmDlciNiwfQoSRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfQoSRowStatus.setStatus('mandatory')
frAtmDlciNiwfQoSComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfQoSComponentName.setStatus('mandatory')
frAtmDlciNiwfQoSStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciNiwfQoSStorageType.setStatus('mandatory')
frAtmDlciNiwfQoSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciNiwfQoSIndex.setStatus('mandatory')
frAtmDlciNiwfQoSProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 10), )
if mibBuilder.loadTexts: frAtmDlciNiwfQoSProvTable.setStatus('mandatory')
frAtmDlciNiwfQoSProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciNiwfQoSIndex"))
if mibBuilder.loadTexts: frAtmDlciNiwfQoSProvEntry.setStatus('mandatory')
frAtmDlciNiwfQoSEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfQoSEmissionPriorityToIf.setStatus('mandatory')
frAtmDlciNiwfQoSTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 4, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("sameAsInterface", 255))).clone('sameAsInterface')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciNiwfQoSTransferPriority.setStatus('mandatory')
frAtmDlciEgSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5))
frAtmDlciEgSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 1), )
if mibBuilder.loadTexts: frAtmDlciEgSpRowStatusTable.setStatus('mandatory')
frAtmDlciEgSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciEgSpIndex"))
if mibBuilder.loadTexts: frAtmDlciEgSpRowStatusEntry.setStatus('mandatory')
frAtmDlciEgSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciEgSpRowStatus.setStatus('mandatory')
frAtmDlciEgSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEgSpComponentName.setStatus('mandatory')
frAtmDlciEgSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmDlciEgSpStorageType.setStatus('mandatory')
frAtmDlciEgSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmDlciEgSpIndex.setStatus('mandatory')
frAtmDlciEgSpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 10), )
if mibBuilder.loadTexts: frAtmDlciEgSpProvTable.setStatus('mandatory')
frAtmDlciEgSpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmDlciEgSpIndex"))
if mibBuilder.loadTexts: frAtmDlciEgSpProvEntry.setStatus('mandatory')
frAtmDlciEgSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciEgSpCommittedInformationRate.setStatus('mandatory')
frAtmDlciEgSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciEgSpCommittedBurstSize.setStatus('mandatory')
frAtmDlciEgSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciEgSpExcessBurstSize.setStatus('mandatory')
frAtmDlciEgSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 4, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmDlciEgSpMeasurementInterval.setStatus('mandatory')
frAtmVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5))
frAtmVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 1), )
if mibBuilder.loadTexts: frAtmVFramerRowStatusTable.setStatus('mandatory')
frAtmVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmVFramerIndex"))
if mibBuilder.loadTexts: frAtmVFramerRowStatusEntry.setStatus('mandatory')
frAtmVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmVFramerRowStatus.setStatus('mandatory')
frAtmVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerComponentName.setStatus('mandatory')
frAtmVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerStorageType.setStatus('mandatory')
frAtmVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmVFramerIndex.setStatus('mandatory')
frAtmVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 10), )
if mibBuilder.loadTexts: frAtmVFramerProvTable.setStatus('mandatory')
frAtmVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmVFramerIndex"))
if mibBuilder.loadTexts: frAtmVFramerProvEntry.setStatus('mandatory')
frAtmVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmVFramerOtherVirtualFramer.setStatus('mandatory')
frAtmVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmVFramerLogicalProcessor.setStatus('mandatory')
frAtmVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 11), )
if mibBuilder.loadTexts: frAtmVFramerStateTable.setStatus('mandatory')
frAtmVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmVFramerIndex"))
if mibBuilder.loadTexts: frAtmVFramerStateEntry.setStatus('mandatory')
frAtmVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerAdminState.setStatus('mandatory')
frAtmVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerOperationalState.setStatus('mandatory')
frAtmVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerUsageState.setStatus('mandatory')
frAtmVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 12), )
if mibBuilder.loadTexts: frAtmVFramerStatsTable.setStatus('mandatory')
frAtmVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmVFramerIndex"))
if mibBuilder.loadTexts: frAtmVFramerStatsEntry.setStatus('mandatory')
frAtmVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerFrmToOtherVFramer.setStatus('mandatory')
frAtmVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerFrmFromOtherVFramer.setStatus('mandatory')
frAtmVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 5, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmVFramerOctetFromOtherVFramer.setStatus('mandatory')
frAtmAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6))
frAtmAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 1), )
if mibBuilder.loadTexts: frAtmAddrRowStatusTable.setStatus('mandatory')
frAtmAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmAddrIndex"))
if mibBuilder.loadTexts: frAtmAddrRowStatusEntry.setStatus('mandatory')
frAtmAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmAddrRowStatus.setStatus('mandatory')
frAtmAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmAddrComponentName.setStatus('mandatory')
frAtmAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmAddrStorageType.setStatus('mandatory')
frAtmAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmAddrIndex.setStatus('mandatory')
frAtmAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 10), )
if mibBuilder.loadTexts: frAtmAddrProvTable.setStatus('mandatory')
frAtmAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmAddrIndex"))
if mibBuilder.loadTexts: frAtmAddrProvEntry.setStatus('mandatory')
frAtmAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmAddrAddress.setStatus('mandatory')
frAtmAddrAddrOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 11), )
if mibBuilder.loadTexts: frAtmAddrAddrOpTable.setStatus('mandatory')
frAtmAddrAddrOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmAddrIndex"))
if mibBuilder.loadTexts: frAtmAddrAddrOpEntry.setStatus('mandatory')
frAtmAddrMyAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 6, 11, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmAddrMyAddress.setStatus('mandatory')
frAtmCa = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7))
frAtmCaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 1), )
if mibBuilder.loadTexts: frAtmCaRowStatusTable.setStatus('mandatory')
frAtmCaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaRowStatusEntry.setStatus('mandatory')
frAtmCaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaRowStatus.setStatus('mandatory')
frAtmCaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaComponentName.setStatus('mandatory')
frAtmCaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaStorageType.setStatus('mandatory')
frAtmCaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: frAtmCaIndex.setStatus('mandatory')
frAtmCaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 10), )
if mibBuilder.loadTexts: frAtmCaProvTable.setStatus('mandatory')
frAtmCaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaProvEntry.setStatus('mandatory')
frAtmCaCallAdmissionControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaCallAdmissionControl.setStatus('mandatory')
frAtmCaOverrideLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaOverrideLinkRate.setStatus('mandatory')
frAtmCaSdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11), )
if mibBuilder.loadTexts: frAtmCaSdTable.setStatus('mandatory')
frAtmCaSdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaSdEntry.setStatus('mandatory')
frAtmCaSdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("translationMode", 0), ("transparentMode", 1), ("speTranslationMode", 2))).clone('translationMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSdMode.setStatus('mandatory')
frAtmCaSdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSdDeToClpMapping.setStatus('mandatory')
frAtmCaSdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSdClpToDeMapping.setStatus('mandatory')
frAtmCaSdFecnToEfciMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSdFecnToEfciMapping.setStatus('mandatory')
frAtmCaSdCrToUuMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("always0", 0), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSdCrToUuMapping.setStatus('obsolete')
frAtmCaNdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 12), )
if mibBuilder.loadTexts: frAtmCaNdTable.setStatus('mandatory')
frAtmCaNdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaNdEntry.setStatus('mandatory')
frAtmCaNdDeToClpMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("always0", 0), ("always1", 1), ("preserve", 2))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaNdDeToClpMapping.setStatus('mandatory')
frAtmCaNdClpToDeMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("preserve", 2), ("transparent", 3))).clone('preserve')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaNdClpToDeMapping.setStatus('mandatory')
frAtmCaIfQoSTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 13), )
if mibBuilder.loadTexts: frAtmCaIfQoSTable.setStatus('mandatory')
frAtmCaIfQoSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaIfQoSEntry.setStatus('mandatory')
frAtmCaSiwfEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSiwfEmissionPriorityToIf.setStatus('mandatory')
frAtmCaSiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaSiwfTransferPriority.setStatus('mandatory')
frAtmCaNiwfEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 254))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("deriveFromTp", 254))).clone('deriveFromTp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaNiwfEmissionPriorityToIf.setStatus('mandatory')
frAtmCaNiwfTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaNiwfTransferPriority.setStatus('mandatory')
frAtmCaOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 14), )
if mibBuilder.loadTexts: frAtmCaOpTable.setStatus('mandatory')
frAtmCaOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaOpEntry.setStatus('mandatory')
frAtmCaLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaLinkRate.setStatus('mandatory')
frAtmCaNailedUpPvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaNailedUpPvcs.setStatus('mandatory')
frAtmCaTroubledDlcis = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 14, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaTroubledDlcis.setStatus('mandatory')
frAtmCaSoftPvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 14, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaSoftPvcs.setStatus('mandatory')
frAtmCaAccountingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 15), )
if mibBuilder.loadTexts: frAtmCaAccountingOptionsTable.setStatus('mandatory')
frAtmCaAccountingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"))
if mibBuilder.loadTexts: frAtmCaAccountingOptionsEntry.setStatus('mandatory')
frAtmCaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaAccountClass.setStatus('mandatory')
frAtmCaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaAccountCollection.setStatus('mandatory')
frAtmCaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaServiceExchange.setStatus('mandatory')
frAtmCaBwPoolTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 365), )
if mibBuilder.loadTexts: frAtmCaBwPoolTable.setStatus('mandatory')
frAtmCaBwPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 365, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaBwPoolIndex"))
if mibBuilder.loadTexts: frAtmCaBwPoolEntry.setStatus('mandatory')
frAtmCaBwPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 365, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: frAtmCaBwPoolIndex.setStatus('mandatory')
frAtmCaBwPoolValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 365, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaBwPoolValue.setStatus('mandatory')
frAtmCaPoolProvBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 366), )
if mibBuilder.loadTexts: frAtmCaPoolProvBwTable.setStatus('mandatory')
frAtmCaPoolProvBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 366, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaPoolProvBwIndex"))
if mibBuilder.loadTexts: frAtmCaPoolProvBwEntry.setStatus('mandatory')
frAtmCaPoolProvBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 366, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: frAtmCaPoolProvBwIndex.setStatus('mandatory')
frAtmCaPoolProvBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 366, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaPoolProvBwValue.setStatus('mandatory')
frAtmCaPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 367), )
if mibBuilder.loadTexts: frAtmCaPoolAvailBwTable.setStatus('mandatory')
frAtmCaPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 367, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaPoolAvailBwIndex"))
if mibBuilder.loadTexts: frAtmCaPoolAvailBwEntry.setStatus('mandatory')
frAtmCaPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 367, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: frAtmCaPoolAvailBwIndex.setStatus('mandatory')
frAtmCaPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 367, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaPoolAvailBwValue.setStatus('mandatory')
frAtmCaPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 380), )
if mibBuilder.loadTexts: frAtmCaPoolAdmitBwTable.setStatus('mandatory')
frAtmCaPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 380, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaPoolAdmitBwIndex"))
if mibBuilder.loadTexts: frAtmCaPoolAdmitBwEntry.setStatus('mandatory')
frAtmCaPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 380, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: frAtmCaPoolAdmitBwIndex.setStatus('mandatory')
frAtmCaPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 380, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaPoolAdmitBwValue.setStatus('mandatory')
frAtmCaTpm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2))
frAtmCaTpmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 1), )
if mibBuilder.loadTexts: frAtmCaTpmRowStatusTable.setStatus('mandatory')
frAtmCaTpmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaTpmIndex"))
if mibBuilder.loadTexts: frAtmCaTpmRowStatusEntry.setStatus('mandatory')
frAtmCaTpmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaTpmRowStatus.setStatus('mandatory')
frAtmCaTpmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaTpmComponentName.setStatus('mandatory')
frAtmCaTpmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frAtmCaTpmStorageType.setStatus('mandatory')
frAtmCaTpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: frAtmCaTpmIndex.setStatus('mandatory')
frAtmCaTpmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 10), )
if mibBuilder.loadTexts: frAtmCaTpmProvTable.setStatus('mandatory')
frAtmCaTpmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaIndex"), (0, "Nortel-Magellan-Passport-FrameRelayAtmMIB", "frAtmCaTpmIndex"))
if mibBuilder.loadTexts: frAtmCaTpmProvEntry.setStatus('mandatory')
frAtmCaTpmAssignedBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("samePoolAsModule", 255))).clone('samePoolAsModule')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaTpmAssignedBandwidthPool.setStatus('mandatory')
frAtmCaTpmTrafficParmConvPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4, 5, 6))).clone(namedValues=NamedValues(("sameAsModule", 0), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6))).clone('sameAsModule')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaTpmTrafficParmConvPolicy.setStatus('mandatory')
frAtmCaTpmAverageFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 72, 7, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8187))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: frAtmCaTpmAverageFrameSize.setStatus('mandatory')
frameRelayAtmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 1))
frameRelayAtmGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 1, 5))
frameRelayAtmGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 1, 5, 2))
frameRelayAtmGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 1, 5, 2, 2))
frameRelayAtmCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 3))
frameRelayAtmCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 3, 5))
frameRelayAtmCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 3, 5, 2))
frameRelayAtmCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 51, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayAtmMIB", frAtmDlciABitReasonToIf=frAtmDlciABitReasonToIf, frAtmDlciExcessBytesFromIf=frAtmDlciExcessBytesFromIf, frAtmFramerUsageState=frAtmFramerUsageState, frAtmFramerFlagsBetweenFrames=frAtmFramerFlagsBetweenFrames, frAtmDlciSpRowStatusEntry=frAtmDlciSpRowStatusEntry, frAtmEmissionPriorityQsEntry=frAtmEmissionPriorityQsEntry, frAtmDlciSpCommittedBurstSize=frAtmDlciSpCommittedBurstSize, frAtmLmiParmsTable=frAtmLmiParmsTable, frAtmDlciSiwfSdOpEntry=frAtmDlciSiwfSdOpEntry, frAtmDlciSiwfSdDeToClpMapping=frAtmDlciSiwfSdDeToClpMapping, frAtmCaPoolAdmitBwTable=frAtmCaPoolAdmitBwTable, frAtmDlciDiscardedFrames=frAtmDlciDiscardedFrames, frAtmDlciEgSpRowStatusTable=frAtmDlciEgSpRowStatusTable, frAtmCaStorageType=frAtmCaStorageType, frAtmCaAccountCollection=frAtmCaAccountCollection, frAtmDlciElapsedDifference=frAtmDlciElapsedDifference, frAtmDlciNiwfNdRowStatusEntry=frAtmDlciNiwfNdRowStatusEntry, frAtmVFramerRowStatusEntry=frAtmVFramerRowStatusEntry, frAtmDlciEgSpCommittedBurstSize=frAtmDlciEgSpCommittedBurstSize, frAtmLmiIndex=frAtmLmiIndex, frAtmCaTpmStorageType=frAtmCaTpmStorageType, frAtmCaTpmComponentName=frAtmCaTpmComponentName, frAtmLmiFullStatusEnqToIf=frAtmLmiFullStatusEnqToIf, frAtmDlciUsageState=frAtmDlciUsageState, frAtmDlciDiscExcessFromIf=frAtmDlciDiscExcessFromIf, frAtmDlciSiwfVccClearCause=frAtmDlciSiwfVccClearCause, frAtmFramerStatsEntry=frAtmFramerStatsEntry, frAtmDlciDiscCongestedFromIfBytes=frAtmDlciDiscCongestedFromIfBytes, frAtmLmiNoStatusReportCount=frAtmLmiNoStatusReportCount, frAtmFramerInterfaceName=frAtmFramerInterfaceName, frAtmCaRowStatus=frAtmCaRowStatus, frAtmDlciSiwfLastUnknown1483ProtocolHeader=frAtmDlciSiwfLastUnknown1483ProtocolHeader, frAtmCaCallAdmissionControl=frAtmCaCallAdmissionControl, frAtmDlciSiwfRowStatusTable=frAtmDlciSiwfRowStatusTable, frAtmDlciSiwfAtmConIndex=frAtmDlciSiwfAtmConIndex, frAtmDlciSpMaximumFrameSize=frAtmDlciSpMaximumFrameSize, frAtmLmiProtocolStatus=frAtmLmiProtocolStatus, frAtmDlciStorageType=frAtmDlciStorageType, frAtmDlciSiwfSustainedCellRate0=frAtmDlciSiwfSustainedCellRate0, frAtmDlciNiwfNdRowStatusTable=frAtmDlciNiwfNdRowStatusTable, frAtmDlciDeFrmFromIf=frAtmDlciDeFrmFromIf, frAtmDlciTotalEgressFrames=frAtmDlciTotalEgressFrames, frAtmLmiKeepAliveStatusToIf=frAtmLmiKeepAliveStatusToIf, frAtmDlciEgSpProvTable=frAtmDlciEgSpProvTable, frAtmFramerUnderruns=frAtmFramerUnderruns, frAtmDlciSiwfNPvcCorrelationTag=frAtmDlciSiwfNPvcCorrelationTag, frAtmLmiPvcConfigParmsInFsr=frAtmLmiPvcConfigParmsInFsr, frAtmDlciSpOpEntry=frAtmDlciSpOpEntry, frAtmDlciSiwfPeakCellRate0=frAtmDlciSiwfPeakCellRate0, frAtmCaIfQoSTable=frAtmCaIfQoSTable, frAtmFramerNormPrioLinkUtilToIf=frAtmFramerNormPrioLinkUtilToIf, frAtmDlciSiwfQoSIndex=frAtmDlciSiwfQoSIndex, frAtmDlciNiwfNdClpToDeMapping=frAtmDlciNiwfNdClpToDeMapping, frAtmOctetToIfByQueueValue=frAtmOctetToIfByQueueValue, frAtmDlciTotalIngressBytes=frAtmDlciTotalIngressBytes, frAtmDlciNiwfSpvc=frAtmDlciNiwfSpvc, frAtmDlciSiwfSustainedCellRate01=frAtmDlciSiwfSustainedCellRate01, frAtmLmiKeepAliveStatusEnqFromIf=frAtmLmiKeepAliveStatusEnqFromIf, frAtmLmiStatsEntry=frAtmLmiStatsEntry, frAtmCaSdCrToUuMapping=frAtmCaSdCrToUuMapping, frAtmDlciSiwfRowStatusEntry=frAtmDlciSiwfRowStatusEntry, frAtmDlciAdminState=frAtmDlciAdminState, frAtmDlciIntEntry=frAtmDlciIntEntry, frAtmDlciCommittedInformationRate=frAtmDlciCommittedInformationRate, frAtmLmiIgnoreActiveBit=frAtmLmiIgnoreActiveBit, frAtmAddrAddress=frAtmAddrAddress, frAtmDlciExcessFrmFromIf=frAtmDlciExcessFrmFromIf, frAtmCaTpm=frAtmCaTpm, frAtmDlciSpRowStatusTable=frAtmDlciSpRowStatusTable, frAtmLmiRowStatusTable=frAtmLmiRowStatusTable, frAtmCaTpmAverageFrameSize=frAtmCaTpmAverageFrameSize, frAtmCaNdDeToClpMapping=frAtmCaNdDeToClpMapping, frAtmDlciFecnFrmToIf=frAtmDlciFecnFrmToIf, frAtmFramerFrmFromIf=frAtmFramerFrmFromIf, frAtmFramerUtilEntry=frAtmFramerUtilEntry, frAtmDlciSiwfMode=frAtmDlciSiwfMode, frAtmNumberOfEmissionQs=frAtmNumberOfEmissionQs, frAtmDlciTotalIngressFrames=frAtmDlciTotalIngressFrames, frAtmCaAccountingOptionsEntry=frAtmCaAccountingOptionsEntry, frAtmFramerAborts=frAtmFramerAborts, frAtmDlciSpAccounting=frAtmDlciSpAccounting, frAtmDlciNiwfRowStatusEntry=frAtmDlciNiwfRowStatusEntry, frAtmDlciSpProvEntry=frAtmDlciSpProvEntry, frAtmDlciSiwfTrafficParmConvPolicy=frAtmDlciSiwfTrafficParmConvPolicy, frAtmCaSoftPvcs=frAtmCaSoftPvcs, frAtmDlciNiwfAvgFrameSize=frAtmDlciNiwfAvgFrameSize, frAtmDlciSiwfSd=frAtmDlciSiwfSd, frameRelayAtmGroupBE01=frameRelayAtmGroupBE01, frAtmDlciSiwfQoSRowStatus=frAtmDlciSiwfQoSRowStatus, frAtmDlciSiwfAtmCon=frAtmDlciSiwfAtmCon, frAtmDlciSiwfMaximumBurstSize01=frAtmDlciSiwfMaximumBurstSize01, frAtmDlciSiwfSdIndex=frAtmDlciSiwfSdIndex, frAtmDlciSiwfQoSStorageType=frAtmDlciSiwfQoSStorageType, frAtmFramer=frAtmFramer, frAtmDlciNiwfNdComponentName=frAtmDlciNiwfNdComponentName, frAtmVFramerIndex=frAtmVFramerIndex, frAtmDlciSiwfSdProvTable=frAtmDlciSiwfSdProvTable, frAtmCidDataTable=frAtmCidDataTable, frAtmDlciSiwfClpToDeMapping=frAtmDlciSiwfClpToDeMapping, frAtmDlciEgSp=frAtmDlciEgSp, frameRelayAtmMIB=frameRelayAtmMIB, frAtmCaPoolAdmitBwIndex=frAtmCaPoolAdmitBwIndex, frAtmAvailabilityStatus=frAtmAvailabilityStatus, frAtmDlciSiwfTransferPriority=frAtmDlciSiwfTransferPriority, frAtmDlciNiwfQoSRowStatusEntry=frAtmDlciNiwfQoSRowStatusEntry, frAtmDlciNiwfNdDeToClpMapping=frAtmDlciNiwfNdDeToClpMapping, frAtmLmiFullStatusToIf=frAtmLmiFullStatusToIf, frAtmDlciNiwfStorageType=frAtmDlciNiwfStorageType, frAtmIfEntryTable=frAtmIfEntryTable, frAtmLmiPollingVerifTimeouts=frAtmLmiPollingVerifTimeouts, frAtmFramerOperationalState=frAtmFramerOperationalState, frAtmStateEntry=frAtmStateEntry, frAtmCaLinkRate=frAtmCaLinkRate, frAtmDlciNiwfComponentName=frAtmDlciNiwfComponentName, frAtmDlciSiwfConnOpEntry=frAtmDlciSiwfConnOpEntry, frAtmCaAccountClass=frAtmCaAccountClass, frAtmDlciTroubledReason=frAtmDlciTroubledReason, frAtmFrmToIfByQueueIndex=frAtmFrmToIfByQueueIndex, frAtmDlciNiwf=frAtmDlciNiwf, frAtm=frAtm, frAtmFramerCrcErrors=frAtmFramerCrcErrors, frAtmDlciEgSpRowStatus=frAtmDlciEgSpRowStatus, frAtmCaSdEntry=frAtmCaSdEntry, frAtmDlciNiwfQoSProvEntry=frAtmDlciNiwfQoSProvEntry, frAtmLmiPsiTable=frAtmLmiPsiTable, frAtmCaNailedUpPvcs=frAtmCaNailedUpPvcs, frAtmDlciSiwfAtmConOperTable=frAtmDlciSiwfAtmConOperTable, frAtmFramerFrmToIf=frAtmFramerFrmToIf, frAtmLmiUserSideEventHistory=frAtmLmiUserSideEventHistory, frAtmDlciSp=frAtmDlciSp, frAtmDlciNiwfSpvcStorageType=frAtmDlciNiwfSpvcStorageType, frAtmCustomerIdentifier=frAtmCustomerIdentifier, frAtmIfEntryEntry=frAtmIfEntryEntry, frAtmDlciNiwfTransferPriority=frAtmDlciNiwfTransferPriority, frAtmDlciNiwfSpvcIndex=frAtmDlciNiwfSpvcIndex, frAtmFramerStatsTable=frAtmFramerStatsTable, frAtmDlciSiwfSPvcIndex=frAtmDlciSiwfSPvcIndex, frAtmDlciSiwfSPvcProvTable=frAtmDlciSiwfSPvcProvTable, frAtmDlciNiwfQoSComponentName=frAtmDlciNiwfQoSComponentName, frAtmDlciDiscCongestedToIfBytes=frAtmDlciDiscCongestedToIfBytes, frAtmDlciNiwfSpvcProvTable=frAtmDlciNiwfSpvcProvTable, frAtmAddrProvTable=frAtmAddrProvTable, frAtmVFramerLogicalProcessor=frAtmVFramerLogicalProcessor, frAtmDlciNiwfOperEntry=frAtmDlciNiwfOperEntry, frAtmDlciSiwfSPvcRowStatus=frAtmDlciSiwfSPvcRowStatus, frAtmDlciSiwfStorageType=frAtmDlciSiwfStorageType, frAtmLmiNetworkSideEventHistory=frAtmLmiNetworkSideEventHistory, frAtmDlciRateEnforcement=frAtmDlciRateEnforcement, frAtmCaPoolAvailBwValue=frAtmCaPoolAvailBwValue, frAtmOperationalState=frAtmOperationalState, frAtmDlci=frAtmDlci, frAtmLmiSide=frAtmLmiSide, frAtmFramerOverruns=frAtmFramerOverruns, frAtmCaPoolProvBwValue=frAtmCaPoolProvBwValue, frAtmDlciSpRateEnforcement=frAtmDlciSpRateEnforcement, frAtmVFramerComponentName=frAtmVFramerComponentName, frAtmDlciSiwfCrToUuMapping=frAtmDlciSiwfCrToUuMapping, frAtmDlciSiwfNPvcStorageType=frAtmDlciSiwfNPvcStorageType, frAtmDlciDiscByteAbit=frAtmDlciDiscByteAbit, frAtmDlciSiwfSiwfSpvcOpTable=frAtmDlciSiwfSiwfSpvcOpTable, frAtmDlciSiwfNPvcAtmConnection=frAtmDlciSiwfNPvcAtmConnection, frAtmDlciNiwfSpvcRowStatusEntry=frAtmDlciNiwfSpvcRowStatusEntry, frAtmVFramerOtherVirtualFramer=frAtmVFramerOtherVirtualFramer, frAtmDlciDiscDeCongestedToIfBytes=frAtmDlciDiscDeCongestedToIfBytes, frAtmCaServiceExchange=frAtmCaServiceExchange, frAtmOctetToIfByQueueTable=frAtmOctetToIfByQueueTable, frAtmDlciDiscCongestedFromIf=frAtmDlciDiscCongestedFromIf, frAtmCaSiwfTransferPriority=frAtmCaSiwfTransferPriority, frAtmCa=frAtmCa, frAtmFramerIndex=frAtmFramerIndex, frAtmLmiSequenceErrors=frAtmLmiSequenceErrors, frAtmDlciMeasurementInterval=frAtmDlciMeasurementInterval, frAtmStorageType=frAtmStorageType, frAtmDlciEgSpExcessBurstSize=frAtmDlciEgSpExcessBurstSize, frAtmDlciStateTable=frAtmDlciStateTable, frAtmLmiOpProcedures=frAtmLmiOpProcedures, frAtmAddrComponentName=frAtmAddrComponentName, frAtmDlciEirEgressBytes=frAtmDlciEirEgressBytes, frAtmDlciSiwfAvgFrameSize=frAtmDlciSiwfAvgFrameSize, frAtmCaNiwfTransferPriority=frAtmCaNiwfTransferPriority, frAtmDlciSiwfNPvcProvTable=frAtmDlciSiwfNPvcProvTable, frAtmDlciIndex=frAtmDlciIndex, frAtmDlciDeBytesToIf=frAtmDlciDeBytesToIf, frAtmDlciSiwfComponentName=frAtmDlciSiwfComponentName, frAtmDlciNiwfRowStatus=frAtmDlciNiwfRowStatus, frAtmDlciNiwfDeToClpMapping=frAtmDlciNiwfDeToClpMapping, frAtmLmiUspParmsEntry=frAtmLmiUspParmsEntry, frAtmDlciBecnFrmToIf=frAtmDlciBecnFrmToIf, frAtmFrmToIfByQueueValue=frAtmFrmToIfByQueueValue, frAtmDlciDiscCongestedToIf=frAtmDlciDiscCongestedToIf, frAtmDlciSpMeasurementInterval=frAtmDlciSpMeasurementInterval, frAtmDlciSiwfDeToClpMapping=frAtmDlciSiwfDeToClpMapping, frAtmDlciNiwfNdProvEntry=frAtmDlciNiwfNdProvEntry, frAtmDlciSiwfNPvcProvEntry=frAtmDlciSiwfNPvcProvEntry, frAtmDlciSiwfSdFecnToEfciMapping=frAtmDlciSiwfSdFecnToEfciMapping, frAtmDlciEgSpComponentName=frAtmDlciEgSpComponentName, frAtmCaPoolAdmitBwEntry=frAtmCaPoolAdmitBwEntry, frAtmDlciSpStorageType=frAtmDlciSpStorageType, frAtmDlciRowStatus=frAtmDlciRowStatus, frAtmDlciEgSpProvEntry=frAtmDlciEgSpProvEntry, frAtmLmiUnexpectedReports=frAtmLmiUnexpectedReports, frAtmLmi=frAtmLmi, frAtmDlciSiwfSdOpTable=frAtmDlciSiwfSdOpTable, frAtmDlciNiwfIndex=frAtmDlciNiwfIndex, frAtmDlciStatsEntry=frAtmDlciStatsEntry, frAtmDlciNiwfSpvcRemoteAddress=frAtmDlciNiwfSpvcRemoteAddress, frAtmCaBwPoolTable=frAtmCaBwPoolTable, frAtmAddrMyAddress=frAtmAddrMyAddress, frAtmFramerNormPrioLinkUtilFromIf=frAtmFramerNormPrioLinkUtilFromIf, frAtmDlciNiwfOperTable=frAtmDlciNiwfOperTable, frAtmDlciSpOpTable=frAtmDlciSpOpTable, frAtmVFramerRowStatus=frAtmVFramerRowStatus, frAtmLmiPsiEntry=frAtmLmiPsiEntry, frAtmFramerLinkTable=frAtmFramerLinkTable, frAtmCaNdEntry=frAtmCaNdEntry, frAtmLmiRowStatusEntry=frAtmLmiRowStatusEntry, frAtmDlciAccountingEnabled=frAtmDlciAccountingEnabled, frAtmDlciSiwfRemoteConnectionIdentifier=frAtmDlciSiwfRemoteConnectionIdentifier, frAtmDlciErrorShortFrmFromIf=frAtmDlciErrorShortFrmFromIf, frAtmDlciSiwfSPvcRowStatusTable=frAtmDlciSiwfSPvcRowStatusTable, frAtmVFramerStatsTable=frAtmVFramerStatsTable, frAtmDlciNiwfQoS=frAtmDlciNiwfQoS, frAtmFramerProvTable=frAtmFramerProvTable, frAtmControlStatus=frAtmControlStatus, frAtmDlciSiwfSPvcComponentName=frAtmDlciSiwfSPvcComponentName, frameRelayAtmCapabilitiesBE=frameRelayAtmCapabilitiesBE, frAtmVFramerAdminState=frAtmVFramerAdminState, frAtmDlciNiwfSpvcCorrelationTag=frAtmDlciNiwfSpvcCorrelationTag, frAtmCaPoolAvailBwTable=frAtmCaPoolAvailBwTable, frAtmDlciFrmToIf=frAtmDlciFrmToIf, frAtmDlciDlciType=frAtmDlciDlciType, frAtmDlciDiscDeCongestedFromIf=frAtmDlciDiscDeCongestedFromIf, frAtmCaPoolAdmitBwValue=frAtmCaPoolAdmitBwValue, frAtmCaBwPoolEntry=frAtmCaBwPoolEntry, frAtmRowStatusTable=frAtmRowStatusTable, frAtmDlciNiwfEquivalentBitRate=frAtmDlciNiwfEquivalentBitRate, frAtmDlciNiwfQoSStorageType=frAtmDlciNiwfQoSStorageType, frAtmAddrRowStatus=frAtmAddrRowStatus, frAtmDlciSiwfQoSEmissionPriorityToIf=frAtmDlciSiwfQoSEmissionPriorityToIf, frAtmLmiFullStatusPollingCycles=frAtmLmiFullStatusPollingCycles, frAtmCaPoolProvBwTable=frAtmCaPoolProvBwTable, frAtmDlciSiwfStatsEntry=frAtmDlciSiwfStatsEntry, frAtmDlciNiwfClpToDeMapping=frAtmDlciNiwfClpToDeMapping, frAtmLmiFullStatusEnqFromIf=frAtmLmiFullStatusEnqFromIf, frAtmAdminState=frAtmAdminState, frAtmDlciNiwfQoSEmissionPriorityToIf=frAtmDlciNiwfQoSEmissionPriorityToIf, frAtmUsageState=frAtmUsageState, frAtmDlciSiwfInvalid1490Frames=frAtmDlciSiwfInvalid1490Frames, frAtmLmiOperationalState=frAtmLmiOperationalState, frAtmDlciSiwfAtmConComponentName=frAtmDlciSiwfAtmConComponentName, frAtmCaTpmRowStatusEntry=frAtmCaTpmRowStatusEntry, frAtmVFramerStateEntry=frAtmVFramerStateEntry, frAtmVFramerStorageType=frAtmVFramerStorageType, frAtmLastUnknownDlci=frAtmLastUnknownDlci)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayAtmMIB", frAtmDlciSpComponentName=frAtmDlciSpComponentName, frAtmDlciTroubled=frAtmDlciTroubled, frAtmDlciSpEmissionPriorityToIf=frAtmDlciSpEmissionPriorityToIf, frAtmDlciEirIngressBytes=frAtmDlciEirIngressBytes, frAtmCaPoolProvBwEntry=frAtmCaPoolProvBwEntry, frAtmRowStatusEntry=frAtmRowStatusEntry, frAtmDlciSiwfNPvcSiwfNpvcOpTable=frAtmDlciSiwfNPvcSiwfNpvcOpTable, frAtmDlciEgSpStorageType=frAtmDlciEgSpStorageType, frAtmVFramerProvEntry=frAtmVFramerProvEntry, frAtmDlciSiwfSdComponentName=frAtmDlciSiwfSdComponentName, frAtmFramerStorageType=frAtmFramerStorageType, frAtmDlciNiwfQoSProvTable=frAtmDlciNiwfQoSProvTable, frAtmCaComponentName=frAtmCaComponentName, frAtmOperStatusEntry=frAtmOperStatusEntry, frAtmDlciDeFrmToIf=frAtmDlciDeFrmToIf, frAtmDlciSiwfAtmConStorageType=frAtmDlciSiwfAtmConStorageType, frAtmDlciSiwfNPvcIndex=frAtmDlciSiwfNPvcIndex, frAtmFramerStateEntry=frAtmFramerStateEntry, frAtmDlciEirEgressFrames=frAtmDlciEirEgressFrames, frAtmDlciSiwfQoSTransferPriority=frAtmDlciSiwfQoSTransferPriority, frAtmCaTpmRowStatus=frAtmCaTpmRowStatus, frAtmCaAccountingOptionsTable=frAtmCaAccountingOptionsTable, frAtmStandbyStatus=frAtmStandbyStatus, frAtmFramerOctetFromIf=frAtmFramerOctetFromIf, frAtmVFramerFrmToOtherVFramer=frAtmVFramerFrmToOtherVFramer, frAtmLmiParmsEntry=frAtmLmiParmsEntry, frAtmCaTroubledDlcis=frAtmCaTroubledDlcis, frAtmDlciAccountingEnd=frAtmDlciAccountingEnd, frAtmFramerAdminState=frAtmFramerAdminState, frAtmVFramerFrmFromOtherVFramer=frAtmVFramerFrmFromOtherVFramer, frAtmDlciBytesFromIf=frAtmDlciBytesFromIf, frAtmDlciSiwfSdCrToUuMapping=frAtmDlciSiwfSdCrToUuMapping, frAtmDlciABitTable=frAtmDlciABitTable, frAtmDlciSiwfDiscardPriority=frAtmDlciSiwfDiscardPriority, frAtmDlciCalldEntry=frAtmDlciCalldEntry, frAtmVFramerUsageState=frAtmVFramerUsageState, frAtmFramerUtilTable=frAtmFramerUtilTable, frAtmLmiCheckPointTimer=frAtmLmiCheckPointTimer, frAtmLmiStorageType=frAtmLmiStorageType, frAtmDlciSiwfSdRowStatusEntry=frAtmDlciSiwfSdRowStatusEntry, frAtmFrmToIfByQueueTable=frAtmFrmToIfByQueueTable, frAtmFramerLinkEntry=frAtmFramerLinkEntry, frAtmDlciNiwfNd=frAtmDlciNiwfNd, frAtmIfAdminStatus=frAtmIfAdminStatus, frAtmDlciMaximumFrameSize=frAtmDlciMaximumFrameSize, frAtmCaOverrideLinkRate=frAtmCaOverrideLinkRate, frAtmFramerStateTable=frAtmFramerStateTable, frameRelayAtmGroupBE=frameRelayAtmGroupBE, frAtmDlciSiwfNPvcComponentName=frAtmDlciSiwfNPvcComponentName, frAtmDlciCalldTable=frAtmDlciCalldTable, frAtmCaOpEntry=frAtmCaOpEntry, frAtmVFramerProvTable=frAtmVFramerProvTable, frAtmDlciNiwfSpvcProvEntry=frAtmDlciNiwfSpvcProvEntry, frAtmLmiComponentName=frAtmLmiComponentName, frAtmDlciSiwfQoSRowStatusEntry=frAtmDlciSiwfQoSRowStatusEntry, frameRelayAtmCapabilitiesBE01A=frameRelayAtmCapabilitiesBE01A, frAtmDlciSiwfSPvcRowStatusEntry=frAtmDlciSiwfSPvcRowStatusEntry, frAtmDlciSiwfAtmServiceCategory=frAtmDlciSiwfAtmServiceCategory, frAtmDlciNiwfQoSIndex=frAtmDlciNiwfQoSIndex, frAtmCaSdMode=frAtmCaSdMode, frAtmRowStatus=frAtmRowStatus, frAtmDlciABitReasonFromIf=frAtmDlciABitReasonFromIf, frAtmDlciSiwfQoSComponentName=frAtmDlciSiwfQoSComponentName, frAtmDlciSiwf=frAtmDlciSiwf, frAtmFramerRowStatusEntry=frAtmFramerRowStatusEntry, frAtmDlciExcessBurstSize=frAtmDlciExcessBurstSize, frAtmDlciEirIngressFrames=frAtmDlciEirIngressFrames, frAtmDlciSiwfUnknown1490Frames=frAtmDlciSiwfUnknown1490Frames, frAtmDlciSiwfAtmConNextHop=frAtmDlciSiwfAtmConNextHop, frAtmDlciNiwfNdIndex=frAtmDlciNiwfNdIndex, frAtmDlciSiwfFecnToEfciMapping=frAtmDlciSiwfFecnToEfciMapping, frAtmIndex=frAtmIndex, frAtmDlciABitEntry=frAtmDlciABitEntry, frAtmCaPoolProvBwIndex=frAtmCaPoolProvBwIndex, frAtmDlciSiwfUnknown1483Frames=frAtmDlciSiwfUnknown1483Frames, frAtmCaNiwfEmissionPriorityToIf=frAtmCaNiwfEmissionPriorityToIf, frAtmDlciEgSpCommittedInformationRate=frAtmDlciEgSpCommittedInformationRate, frAtmDlciDiscDeCongestedToIf=frAtmDlciDiscDeCongestedToIf, frAtmDlciSpIndex=frAtmDlciSpIndex, frAtmDlciStartTime=frAtmDlciStartTime, frAtmDlciSpRowStatus=frAtmDlciSpRowStatus, frAtmDlciFrmFromIf=frAtmDlciFrmFromIf, frAtmDlciNiwfAssignedBandwidthPool=frAtmDlciNiwfAssignedBandwidthPool, frAtmCaPoolAvailBwEntry=frAtmCaPoolAvailBwEntry, frameRelayAtmGroup=frameRelayAtmGroup, frAtmDlciSiwfSdProvEntry=frAtmDlciSiwfSdProvEntry, frAtmAddrProvEntry=frAtmAddrProvEntry, frAtmDlciSiwfStatsTable=frAtmDlciSiwfStatsTable, frAtmVFramer=frAtmVFramer, frAtmCaNdClpToDeMapping=frAtmCaNdClpToDeMapping, frAtmDlciSiwfSPvc=frAtmDlciSiwfSPvc, frAtmDlciSiwfRowStatus=frAtmDlciSiwfRowStatus, frAtmDlciSiwfNPvcSiwfNpvcOpEntry=frAtmDlciSiwfNPvcSiwfNpvcOpEntry, frAtmDlciSiwfEquivalentBitRate=frAtmDlciSiwfEquivalentBitRate, frAtmCaTpmTrafficParmConvPolicy=frAtmCaTpmTrafficParmConvPolicy, frAtmDlciSiwfNPvcRowStatus=frAtmDlciSiwfNPvcRowStatus, frAtmDlciFecnFrmFromIf=frAtmDlciFecnFrmFromIf, frAtmCaSdTable=frAtmCaSdTable, frAtmDlciSiwfIndex=frAtmDlciSiwfIndex, frAtmDlciSiwfAtmConRowStatusTable=frAtmDlciSiwfAtmConRowStatusTable, frAtmDlciCorrelationTag=frAtmDlciCorrelationTag, frAtmCaPoolAvailBwIndex=frAtmCaPoolAvailBwIndex, frameRelayAtmGroupBE01A=frameRelayAtmGroupBE01A, frAtmLmiStatusSequenceErrors=frAtmLmiStatusSequenceErrors, frAtmDlciSiwfAtmConRowStatus=frAtmDlciSiwfAtmConRowStatus, frAtmAddr=frAtmAddr, frAtmDlciNiwfSpvcComponentName=frAtmDlciNiwfSpvcComponentName, frAtmDlciStatsTable=frAtmDlciStatsTable, frAtmCaSdFecnToEfciMapping=frAtmCaSdFecnToEfciMapping, frAtmInvalidHeaderFramesFromIf=frAtmInvalidHeaderFramesFromIf, frAtmLmiProcedures=frAtmLmiProcedures, frAtmDlciSiwfLastUnknown1490ProtocolHeader=frAtmDlciSiwfLastUnknown1490ProtocolHeader, frAtmOperStatusTable=frAtmOperStatusTable, frAtmCaTpmProvEntry=frAtmCaTpmProvEntry, frAtmDlciSiwfType=frAtmDlciSiwfType, frAtmCaOpTable=frAtmCaOpTable, frAtmCaIndex=frAtmCaIndex, frAtmDlciSiwfQoSProvTable=frAtmDlciSiwfQoSProvTable, frAtmDlciErrorLongBytesFromIf=frAtmDlciErrorLongBytesFromIf, frAtmCaRowStatusTable=frAtmCaRowStatusTable, frAtmFramerLargeFrmErrors=frAtmFramerLargeFrmErrors, frAtmCaSdClpToDeMapping=frAtmCaSdClpToDeMapping, frAtmDlciSiwfSiwfSpvcOpEntry=frAtmDlciSiwfSiwfSpvcOpEntry, frAtmDlciSpProvTable=frAtmDlciSpProvTable, frAtmDlciSiwfSdRowStatusTable=frAtmDlciSiwfSdRowStatusTable, frAtmDlciNiwfSpvcRowStatusTable=frAtmDlciNiwfSpvcRowStatusTable, frAtmDlciBecnFrmSetByService=frAtmDlciBecnFrmSetByService, frAtmCaTpmRowStatusTable=frAtmCaTpmRowStatusTable, frAtmVFramerOperationalState=frAtmVFramerOperationalState, frAtmDlciSiwfSPvcStorageType=frAtmDlciSiwfSPvcStorageType, frAtmProceduralStatus=frAtmProceduralStatus, frAtmCaRowStatusEntry=frAtmCaRowStatusEntry, frAtmDlciEmissionPriorityToIf=frAtmDlciEmissionPriorityToIf, frAtmDlciDiscardedBytes=frAtmDlciDiscardedBytes, frAtmAddrRowStatusEntry=frAtmAddrRowStatusEntry, frAtmLmiEventCount=frAtmLmiEventCount, frAtmDlciSiwfSdClpToDeMapping=frAtmDlciSiwfSdClpToDeMapping, frAtmVFramerRowStatusTable=frAtmVFramerRowStatusTable, frAtmDlciNiwfTrafficParmConvPolicy=frAtmDlciNiwfTrafficParmConvPolicy, frAtmAlarmStatus=frAtmAlarmStatus, frAtmFrmToIfByQueueEntry=frAtmFrmToIfByQueueEntry, frAtmDlciSiwfQoSProvEntry=frAtmDlciSiwfQoSProvEntry, frAtmFramerFrmModeErrors=frAtmFramerFrmModeErrors, frAtmDlciNiwfQoSTransferPriority=frAtmDlciNiwfQoSTransferPriority, frAtmLmiProtocolErrors=frAtmLmiProtocolErrors, frAtmUnknownStatus=frAtmUnknownStatus, frAtmSnmpOperStatus=frAtmSnmpOperStatus, frAtmStatsEntry=frAtmStatsEntry, frAtmFramerRowStatus=frAtmFramerRowStatus, frAtmAddrStorageType=frAtmAddrStorageType, frAtmDlciABitStatusFromIf=frAtmDlciABitStatusFromIf, frAtmDlciNiwfAtmServiceCategory=frAtmDlciNiwfAtmServiceCategory, frAtmDlciSiwfMaximumBurstSize0=frAtmDlciSiwfMaximumBurstSize0, frAtmLmiAdminState=frAtmLmiAdminState, frAtmDlciOperationalState=frAtmDlciOperationalState, frAtmDlciSiwfAssignedBandwidthPool=frAtmDlciSiwfAssignedBandwidthPool, frAtmDlciSiwfSdRowStatus=frAtmDlciSiwfSdRowStatus, frAtmDlciNiwfSpvcRowStatus=frAtmDlciNiwfSpvcRowStatus, frAtmCaProvEntry=frAtmCaProvEntry, frAtmDlciSiwfConnOpTable=frAtmDlciSiwfConnOpTable, frAtmCaSdDeToClpMapping=frAtmCaSdDeToClpMapping, frAtmFramerComponentName=frAtmFramerComponentName, frAtmLmiUspParmsTable=frAtmLmiUspParmsTable, frAtmDlciNiwfQoSRowStatusTable=frAtmDlciNiwfQoSRowStatusTable, frAtmDlciSiwfVccCauseDiag=frAtmDlciSiwfVccCauseDiag, frAtmDlciNiwfQoSRowStatus=frAtmDlciNiwfQoSRowStatus, frAtmCaNdTable=frAtmCaNdTable, frAtmLmiKeepAliveEnqToIf=frAtmLmiKeepAliveEnqToIf, frAtmDlciEgSpIndex=frAtmDlciEgSpIndex, frAtmDlciSiwfNPvcRowStatusTable=frAtmDlciSiwfNPvcRowStatusTable, frAtmDlciNiwfRowStatusTable=frAtmDlciNiwfRowStatusTable, frAtmDlciSiwfQoS=frAtmDlciSiwfQoS, frAtmCaTpmAssignedBandwidthPool=frAtmCaTpmAssignedBandwidthPool, frAtmFramerNonOctetErrors=frAtmFramerNonOctetErrors, frAtmAddrRowStatusTable=frAtmAddrRowStatusTable, frAtmCaProvTable=frAtmCaProvTable, frAtmVFramerStateTable=frAtmVFramerStateTable, frAtmDlciSiwfSPvcRemoteConnectionIdentifier=frAtmDlciSiwfSPvcRemoteConnectionIdentifier, frAtmDlciSiwfSPvcCorrelationTag=frAtmDlciSiwfSPvcCorrelationTag, frAtmDlciSpEmissionPrioToIf=frAtmDlciSpEmissionPrioToIf, frAtmCaTpmIndex=frAtmCaTpmIndex, frAtmAddrAddrOpEntry=frAtmAddrAddrOpEntry, frAtmDlciNiwfAtmDlci=frAtmDlciNiwfAtmDlci, frAtmDlciNiwfNdRowStatus=frAtmDlciNiwfNdRowStatus, frAtmDlciStateEntry=frAtmDlciStateEntry, frAtmLmiErrorEventThreshold=frAtmLmiErrorEventThreshold, frAtmDlciNiwfNdProvTable=frAtmDlciNiwfNdProvTable, frAtmDlciNiwfNdStorageType=frAtmDlciNiwfNdStorageType, frAtmVFramerStatsEntry=frAtmVFramerStatsEntry, frAtmCaBwPoolIndex=frAtmCaBwPoolIndex, frAtmOctetToIfByQueueEntry=frAtmOctetToIfByQueueEntry, frAtmVFramerOctetFromOtherVFramer=frAtmVFramerOctetFromOtherVFramer, frAtmDlciSiwfQoSRowStatusTable=frAtmDlciSiwfQoSRowStatusTable, frAtmDlciBytesToIf=frAtmDlciBytesToIf, frAtmDlciNiwfNdTransferPriority=frAtmDlciNiwfNdTransferPriority, frAtmOctetToIfByQueueIndex=frAtmOctetToIfByQueueIndex, frAtmLmiLinkVerificationTimer=frAtmLmiLinkVerificationTimer, frAtmDlciDeBytesFromIf=frAtmDlciDeBytesFromIf, frAtmDlciSiwfSdMode=frAtmDlciSiwfSdMode, frAtmUnknownDlciFramesFromIf=frAtmUnknownDlciFramesFromIf, frAtmFramerRowStatusTable=frAtmFramerRowStatusTable, frAtmCaBwPoolValue=frAtmCaBwPoolValue, frAtmDlciDiscExcessFromIfBytes=frAtmDlciDiscExcessFromIfBytes, frAtmLmiUnexpectedIes=frAtmLmiUnexpectedIes, frAtmDlciSiwfNPvc=frAtmDlciSiwfNPvc, frAtmDlciSiwfAtmConOperEntry=frAtmDlciSiwfAtmConOperEntry, frAtmLmiAsyncStatusReport=frAtmLmiAsyncStatusReport, frAtmDlciDiscDeCongestedFromIfBytes=frAtmDlciDiscDeCongestedFromIfBytes, frAtmLmiRowStatus=frAtmLmiRowStatus, frAtmDlciBecnFrmFromIf=frAtmDlciBecnFrmFromIf, frAtmDlciSiwfSdStorageType=frAtmDlciSiwfSdStorageType, frAtmCaTpmProvTable=frAtmCaTpmProvTable, frAtmIfIndex=frAtmIfIndex, frAtmDlciErrorShortBytesFromIf=frAtmDlciErrorShortBytesFromIf, frAtmDlciDiscFrameAbit=frAtmDlciDiscFrameAbit, frAtmDlciTotalEgressBytes=frAtmDlciTotalEgressBytes, frAtmDlciSpCommittedInformationRate=frAtmDlciSpCommittedInformationRate, frAtmDlciSiwfRemoteAddress=frAtmDlciSiwfRemoteAddress, frAtmDlciCommittedBurstSize=frAtmDlciCommittedBurstSize, frAtmDlciEgSpMeasurementInterval=frAtmDlciEgSpMeasurementInterval, frameRelayAtmCapabilities=frameRelayAtmCapabilities, frAtmAddrAddrOpTable=frAtmAddrAddrOpTable, frAtmDlciSiwfNPvcConnectionToAtm=frAtmDlciSiwfNPvcConnectionToAtm, frAtmStateTable=frAtmStateTable, frAtmDlciSiwfSPvcProvEntry=frAtmDlciSiwfSPvcProvEntry, frAtmDlciNiwfSpvcRemoteDlci=frAtmDlciNiwfSpvcRemoteDlci, frAtmEmissionPriorityQsTable=frAtmEmissionPriorityQsTable, frAtmAddrIndex=frAtmAddrIndex, frAtmFramerProvEntry=frAtmFramerProvEntry, frAtmDlciABitStatusToIf=frAtmDlciABitStatusToIf, frAtmDlciSpExcessBurstSize=frAtmDlciSpExcessBurstSize, frAtmDlciSiwfSPvcRemoteAddress=frAtmDlciSiwfSPvcRemoteAddress, frAtmDlciErrorLongFrmFromIf=frAtmDlciErrorLongFrmFromIf, frAtmDlciSiwfNPvcRowStatusEntry=frAtmDlciSiwfNPvcRowStatusEntry, frAtmFramerLrcErrors=frAtmFramerLrcErrors, frAtmLmiStateEntry=frAtmLmiStateEntry, frAtmDlciEgSpRowStatusEntry=frAtmDlciEgSpRowStatusEntry, frAtmDlciSiwfAtmConRowStatusEntry=frAtmDlciSiwfAtmConRowStatusEntry, frAtmDlciRowStatusEntry=frAtmDlciRowStatusEntry, frAtmCaSiwfEmissionPriorityToIf=frAtmCaSiwfEmissionPriorityToIf, frAtmDlciEfciFrmFromNetwork=frAtmDlciEfciFrmFromNetwork, frAtmDlciRowStatusTable=frAtmDlciRowStatusTable, frAtmLmiStatsTable=frAtmLmiStatsTable, frameRelayAtmCapabilitiesBE01=frameRelayAtmCapabilitiesBE01, frAtmLmiStateTable=frAtmLmiStateTable, frAtmComponentName=frAtmComponentName, frAtmDlciIntTable=frAtmDlciIntTable, frAtmCidDataEntry=frAtmCidDataEntry, frAtmDlciSiwfPeakCellRate01=frAtmDlciSiwfPeakCellRate01, frAtmDlciComponentName=frAtmDlciComponentName, frAtmLmiMessageCountTimer=frAtmLmiMessageCountTimer, frAtmCaIfQoSEntry=frAtmCaIfQoSEntry, frAtmStatsTable=frAtmStatsTable, frAtmDlciSiwfInvalid1483Frames=frAtmDlciSiwfInvalid1483Frames)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-FrameRelayAtmMIB", frAtmLmiUsageState=frAtmLmiUsageState)
