#
# PySNMP MIB module H3C-RSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-RSA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, Bits, Counter32, MibIdentifier, iso, ObjectIdentity, Gauge32, IpAddress, NotificationType, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "Bits", "Counter32", "MibIdentifier", "iso", "ObjectIdentity", "Gauge32", "IpAddress", "NotificationType", "Unsigned32", "Integer32")
RowStatus, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "DateAndTime")
h3cRSA = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23))
h3cRSA.setRevisions(('2004-10-10 00:00',))
if mibBuilder.loadTexts: h3cRSA.setLastUpdated('200410100000Z')
if mibBuilder.loadTexts: h3cRSA.setOrganization('Huawei Technologies co.,Ltd.')
class RSAKeyErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))
    namedValues = NamedValues(("rsaSuccess", 1), ("rsaFailure", 2), ("rsaErrNoMemory", 3), ("rsaErrKeyNotReplaced", 4), ("rsaErrKeyBackup", 5), ("rsaErrKeySaved", 6), ("rsaErrKeyGenerate", 7), ("rsaErrKeyDestroy", 8), ("rsaErrHostEncKeyBackup", 9), ("rsaErrHostEncKeySave", 10), ("rsaErrHostEncKeyGenerate", 11), ("rsaErrHostEncKeyDestroy", 12), ("rsaErrHostSigKeyBackup", 13), ("rsaErrHostSigKeySave", 14), ("rsaErrHostSigKeyGenerate", 15), ("rsaErrHostSigKeyDestroy", 16), ("rsaErrServerKeyBackup", 17), ("rsaErrServerKeySave", 18), ("rsaErrServerKeyGenerate", 19), ("rsaErrServerKeyDestroy", 20), ("rsaErrPeerKeyNotReplaced", 21), ("rsaErrPeerKeyNumArriveMax", 22), ("rsaErrPeerKeyNotRemoved", 23), ("rsaErrPeerKeyNotExist", 24), ("rsaStatusKeyExist", 25), ("rsaStatusKeyNotExist", 26), ("rsaStatusKeyInvalid", 27), ("rsaStatusHostEncKeyExist", 28), ("rsaStatusHostEncKeyNotExist", 29), ("rsaStatusHostEncKeyInvalid", 30), ("rsaStatusHostSigKeyExist", 31), ("rsaStatusHostSigKeyNotExist", 32), ("rsaStatusHostSigKeyInvalid", 33), ("rsaStatusServerKeyExist", 34), ("rsaStatusServerKeyNotExist", 35), ("rsaStatusServerKeyInvalid", 36))

h3cRSAMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1))
h3cRSAPeerPublicKeyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1), )
if mibBuilder.loadTexts: h3cRSAPeerPublicKeyTable.setStatus('current')
h3cRSAPeerPublicKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1, 1), ).setIndexNames((0, "H3C-RSA-MIB", "h3cRSAPeerPublicKeyName"))
if mibBuilder.loadTexts: h3cRSAPeerPublicKeyEntry.setStatus('current')
h3cRSAPeerPublicKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: h3cRSAPeerPublicKeyName.setStatus('current')
h3cRSAPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRSAPeerIpAddress.setStatus('current')
h3cRSAPeerFQDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cRSAPeerFQDN.setStatus('current')
h3cRSAPeerPublicKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRSAPeerPublicKeyCode.setStatus('current')
h3cRSAPeerPublicKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRSAPeerPublicKeyStatus.setStatus('current')
h3cRSALocalKeyPairTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2), )
if mibBuilder.loadTexts: h3cRSALocalKeyPairTable.setStatus('current')
h3cRSALocalKeyPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1), ).setIndexNames((0, "H3C-RSA-MIB", "h3cRSALocalKeyIndex"))
if mibBuilder.loadTexts: h3cRSALocalKeyPairEntry.setStatus('current')
h3cRSALocalKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: h3cRSALocalKeyIndex.setStatus('current')
h3cRSALocalHostKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRSALocalHostKeyName.setStatus('current')
h3cRSALocalHostKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRSALocalHostKeyCode.setStatus('current')
h3cRSALocalHostKeyCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRSALocalHostKeyCreatedTime.setStatus('current')
h3cRSALocalServerKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRSALocalServerKeyName.setStatus('current')
h3cRSALocalServerKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRSALocalServerKeyCode.setStatus('current')
h3cRSALocalServerKeyCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cRSALocalServerKeyCreatedTime.setStatus('current')
h3cRSALocalKeyPairBits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 2048)).clone(512)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRSALocalKeyPairBits.setStatus('current')
h3cRSALocalKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cRSALocalKeyStatus.setStatus('current')
h3cRSAPeerKeyConfigFailReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 3), RSAKeyErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cRSAPeerKeyConfigFailReason.setStatus('current')
h3cRSALocalKeyFailReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 1, 4), RSAKeyErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cRSALocalKeyFailReason.setStatus('current')
h3cRSANotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 2))
h3cRSALocalKeyPairOpeFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 2, 1)).setObjects(("H3C-RSA-MIB", "h3cRSALocalKeyFailReason"))
if mibBuilder.loadTexts: h3cRSALocalKeyPairOpeFail.setStatus('current')
h3cRSAPeerKeyConfigFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 23, 2, 2)).setObjects(("H3C-RSA-MIB", "h3cRSAPeerKeyConfigFailReason"))
if mibBuilder.loadTexts: h3cRSAPeerKeyConfigFail.setStatus('current')
mibBuilder.exportSymbols("H3C-RSA-MIB", h3cRSAPeerPublicKeyCode=h3cRSAPeerPublicKeyCode, h3cRSAPeerPublicKeyTable=h3cRSAPeerPublicKeyTable, h3cRSALocalKeyPairOpeFail=h3cRSALocalKeyPairOpeFail, h3cRSAPeerIpAddress=h3cRSAPeerIpAddress, h3cRSANotifications=h3cRSANotifications, h3cRSAPeerKeyConfigFailReason=h3cRSAPeerKeyConfigFailReason, h3cRSAPeerPublicKeyName=h3cRSAPeerPublicKeyName, h3cRSALocalKeyPairBits=h3cRSALocalKeyPairBits, h3cRSALocalKeyPairTable=h3cRSALocalKeyPairTable, h3cRSALocalHostKeyCode=h3cRSALocalHostKeyCode, PYSNMP_MODULE_ID=h3cRSA, h3cRSALocalServerKeyCode=h3cRSALocalServerKeyCode, h3cRSA=h3cRSA, h3cRSALocalKeyStatus=h3cRSALocalKeyStatus, h3cRSALocalServerKeyCreatedTime=h3cRSALocalServerKeyCreatedTime, h3cRSALocalKeyIndex=h3cRSALocalKeyIndex, h3cRSAPeerPublicKeyStatus=h3cRSAPeerPublicKeyStatus, h3cRSAPeerPublicKeyEntry=h3cRSAPeerPublicKeyEntry, h3cRSAPeerKeyConfigFail=h3cRSAPeerKeyConfigFail, h3cRSALocalHostKeyName=h3cRSALocalHostKeyName, RSAKeyErrorCode=RSAKeyErrorCode, h3cRSALocalKeyPairEntry=h3cRSALocalKeyPairEntry, h3cRSALocalHostKeyCreatedTime=h3cRSALocalHostKeyCreatedTime, h3cRSAPeerFQDN=h3cRSAPeerFQDN, h3cRSALocalKeyFailReason=h3cRSALocalKeyFailReason, h3cRSALocalServerKeyName=h3cRSALocalServerKeyName, h3cRSAMIBObjects=h3cRSAMIBObjects)
