#
# PySNMP MIB module AT-GS950-24-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-GS950-24-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:14:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
lldpXdot1RemProtocolId, lldpXdot1RemPortVlanId, lldpXdot1RemProtoVlanSupported, lldpXdot1RemVlanName = mibBuilder.importSymbols("LLDP-EXT-DOT1-MIB", "lldpXdot1RemProtocolId", "lldpXdot1RemPortVlanId", "lldpXdot1RemProtoVlanSupported", "lldpXdot1RemVlanName")
lldpXdot3RemPortOperMauType, lldpXdot3RemMaxFrameSize, lldpXdot3RemPowerClass, lldpXdot3RemLinkAggStatus = mibBuilder.importSymbols("LLDP-EXT-DOT3-MIB", "lldpXdot3RemPortOperMauType", "lldpXdot3RemMaxFrameSize", "lldpXdot3RemPowerClass", "lldpXdot3RemLinkAggStatus")
lldpLocPortId, lldpRemChassisId, lldpRemManAddr, lldpRemPortId, lldpStatsRemTablesAgeouts, lldpStatsRemTablesInserts, lldpStatsRemTablesDeletes, lldpRemSysName, lldpStatsRemTablesDrops, lldpLocPortNum = mibBuilder.importSymbols("LLDP-MIB", "lldpLocPortId", "lldpRemChassisId", "lldpRemManAddr", "lldpRemPortId", "lldpStatsRemTablesAgeouts", "lldpStatsRemTablesInserts", "lldpStatsRemTablesDeletes", "lldpRemSysName", "lldpStatsRemTablesDrops", "lldpLocPortNum")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
TimeFilter, ZeroBasedCounter32 = mibBuilder.importSymbols("RMON2-MIB", "TimeFilter", "ZeroBasedCounter32")
SnmpSecurityModel, SnmpEngineID, SnmpAdminString, SnmpSecurityLevel = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpSecurityModel", "SnmpEngineID", "SnmpAdminString", "SnmpSecurityLevel")
SnmpTagValue, snmpTargetParamsName = mibBuilder.importSymbols("SNMP-TARGET-MIB", "SnmpTagValue", "snmpTargetParamsName")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, IpAddress, Counter64, mib_2, Bits, MibIdentifier, ModuleIdentity, TimeTicks, iso, ObjectIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, enterprises, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "Counter64", "mib-2", "Bits", "MibIdentifier", "ModuleIdentity", "TimeTicks", "iso", "ObjectIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "enterprises", "Unsigned32")
PhysAddress, RowStatus, TextualConvention, TimeStamp, AutonomousType, TimeInterval, DisplayString, TAddress, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "RowStatus", "TextualConvention", "TimeStamp", "AutonomousType", "TimeInterval", "DisplayString", "TAddress", "TruthValue", "MacAddress")
at_GS95024v3 = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 1, 4, 167)).setLabel("at-GS95024v3")
at_GS95024v3.setRevisions(('2012-02-06 00:00',))
if mibBuilder.loadTexts: at_GS95024v3.setLastUpdated('201202060000Z')
if mibBuilder.loadTexts: at_GS95024v3.setOrganization('Allied Telesis Inc.')
l2Snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1))
l2Radius = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25))
l2Cfa = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27))
l2Rmon = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 44))
l2La = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63))
l2Pnac = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64))
l2System = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81))
l2Dfs = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83))
l2Syslog = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89))
l2Security = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95))
l2Ssl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96))
l2Ssh = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97))
l2Sntp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99))
l2Dscp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100))
l2Snoop = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105))
l2Bridge = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116))
l2Mst = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118))
l2Rst = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119))
l2Vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120))
fslldp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158))
l2VoiceVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163))
trafficSeg = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 165))
atiAclMib = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166))
l2DhcpSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181))
dot1dPBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6))
dot1qQBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7))
class L2snmpLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("v1", 1), ("v2c", 2), ("noAuthNoPriv", 3), ("authNoPriv", 4), ("authPriv", 5))

sysSnmpUser = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1))
sysSnmpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2))
sysSnmpGroupAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3))
sysSnmpViewTree = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4))
sysSnmpCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5))
sysSnmpTrapManager = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6))
sysSnmpEngineID = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 7), SnmpEngineID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnmpEngineID.setStatus('current')
snmpGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpGlobalState.setStatus('current')
sysSnmpUserTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1, 1), )
if mibBuilder.loadTexts: sysSnmpUserTable.setStatus('current')
sysSnmpUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnmpUserName"))
if mibBuilder.loadTexts: sysSnmpUserEntry.setStatus('current')
sysSnmpUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: sysSnmpUserName.setStatus('current')
sysSnmpUserAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1, 1, 1, 2), AutonomousType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpUserAuthProtocol.setStatus('current')
sysSnmpUserPrivProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1, 1, 1, 3), AutonomousType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpUserPrivProtocol.setStatus('current')
sysSnmpUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpUserStatus.setStatus('current')
sysSnmpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2, 1), )
if mibBuilder.loadTexts: sysSnmpGroupTable.setStatus('current')
sysSnmpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnmpSecurityModel"), (0, "AT-GS950-24-MIB", "sysSnmpSecurityName"))
if mibBuilder.loadTexts: sysSnmpGroupEntry.setStatus('current')
sysSnmpSecurityModel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2, 1, 1, 1), SnmpSecurityModel())
if mibBuilder.loadTexts: sysSnmpSecurityModel.setStatus('current')
sysSnmpSecurityName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: sysSnmpSecurityName.setStatus('current')
sysSnmpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpGroupName.setStatus('current')
sysSnmpGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpGroupStatus.setStatus('current')
sysSnmpGroupAccessTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1), )
if mibBuilder.loadTexts: sysSnmpGroupAccessTable.setStatus('current')
sysSnmpGroupAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnmpaccessGroupIndex"), (0, "AT-GS950-24-MIB", "sysSnmpaccessSecurityModel"), (0, "AT-GS950-24-MIB", "sysSnmpaccessSecurityLevel"))
if mibBuilder.loadTexts: sysSnmpGroupAccessEntry.setStatus('current')
sysSnmpaccessGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: sysSnmpaccessGroupIndex.setStatus('current')
sysSnmpaccessSecurityModel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 2), SnmpSecurityModel())
if mibBuilder.loadTexts: sysSnmpaccessSecurityModel.setStatus('current')
sysSnmpaccessSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 3), SnmpSecurityLevel())
if mibBuilder.loadTexts: sysSnmpaccessSecurityLevel.setStatus('current')
sysSnmpaccessReadViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpaccessReadViewName.setStatus('current')
sysSnmpaccessWriteViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpaccessWriteViewName.setStatus('current')
sysSnmpaccessNotifyViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpaccessNotifyViewName.setStatus('current')
sysSnmpaccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpaccessStatus.setStatus('current')
sysSnmpViewTreeTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1), )
if mibBuilder.loadTexts: sysSnmpViewTreeTable.setStatus('current')
sysSnmpViewTreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnmpviewTreeName"), (0, "AT-GS950-24-MIB", "sysSnmpviewTreeSubtree"))
if mibBuilder.loadTexts: sysSnmpViewTreeEntry.setStatus('current')
sysSnmpviewTreeName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: sysSnmpviewTreeName.setStatus('current')
sysSnmpviewTreeSubtree = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: sysSnmpviewTreeSubtree.setStatus('current')
sysSnmpviewTreeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpviewTreeMask.setStatus('current')
sysSnmpviewTreeType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("included", 1), ("excluded", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpviewTreeType.setStatus('current')
sysSnmpviewTreeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpviewTreeStatus.setStatus('current')
sysSnmpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5, 1), )
if mibBuilder.loadTexts: sysSnmpCommunityTable.setStatus('current')
sysSnmpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnmpsnmpCommunityIndex"))
if mibBuilder.loadTexts: sysSnmpCommunityEntry.setStatus('current')
sysSnmpsnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: sysSnmpsnmpCommunityIndex.setStatus('current')
sysSnmpsnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpsnmpCommunityName.setStatus('current')
sysSnmpsnmpCommunityPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpsnmpCommunityPolicy.setStatus('current')
sysSnmpsnmpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpsnmpCommunityStatus.setStatus('current')
sysSnmpTrapManagerTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6, 1), )
if mibBuilder.loadTexts: sysSnmpTrapManagerTable.setStatus('current')
sysSnmpTrapManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnmpsnmpTrapManagerName"))
if mibBuilder.loadTexts: sysSnmpTrapManagerEntry.setStatus('current')
sysSnmpsnmpTrapManagerName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: sysSnmpsnmpTrapManagerName.setStatus('current')
sysSnmpsnmpTrapManagerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6, 1, 1, 2), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpsnmpTrapManagerAddress.setStatus('current')
sysSnmpsnmpTrapManagerSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6, 1, 1, 3), L2snmpLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpsnmpTrapManagerSecurityLevel.setStatus('current')
sysSnmpsnmpTrapManagerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 1, 6, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnmpsnmpTrapManagerStatus.setStatus('current')
sysRadiusExtClient = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1))
sysRadiusExtServerTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3), )
if mibBuilder.loadTexts: sysRadiusExtServerTable.setStatus('current')
sysRadiusExtServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysRadiusExtServerIndex"))
if mibBuilder.loadTexts: sysRadiusExtServerEntry.setStatus('current')
sysRadiusExtServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysRadiusExtServerIndex.setStatus('current')
sysRadiusExtServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusExtServerAddress.setStatus('current')
sysRadiusExtServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusExtServerSharedSecret.setStatus('current')
sysRadiusExtServerResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusExtServerResponseTime.setStatus('current')
sysRadiusExtServerMaximumRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusExtServerMaximumRetransmission.setStatus('current')
sysRadiusExtServerAuthPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusExtServerAuthPortNum.setStatus('current')
sysRadiusExtServerEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysRadiusExtServerEntryStatus.setStatus('current')
sysRadiusExtServerAccPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 25, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusExtServerAccPort.setStatus('current')
pysmi_if = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1)).setLabel("if")
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 4))
ifMaxInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 1), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifMaxInterfaces.setStatus('deprecated')
ifMaxPhysInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifMaxPhysInterfaces.setStatus('deprecated')
ifAvailableIndex = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAvailableIndex.setStatus('current')
ifMainTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4), )
if mibBuilder.loadTexts: ifMainTable.setStatus('current')
ifMainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "ifMainIndex"))
if mibBuilder.loadTexts: ifMainEntry.setStatus('current')
ifMainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ifMainIndex.setStatus('current')
ifMainType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, 9, 23, 24, 32, 38, 49, 84, 92, 108, 114, 118, 131, 134, 135, 136, 150, 161, 166))).clone(namedValues=NamedValues(("rfc877x25", 5), ("ethernetCsmacd", 6), ("iso88025TokenRing", 9), ("ppp", 23), ("softwareLoopback", 24), ("frameRelay", 32), ("miox25", 38), ("aal5", 49), ("async", 84), ("frameRelayMPI", 92), ("pppMultilinkBundle", 108), ("ipOverAtm", 114), ("hdlc", 118), ("tunnel", 131), ("atmSubInterface", 134), ("l2macvlan", 135), ("l3ipvlan", 136), ("mplsTunnel", 150), ("ieee8023ad", 161), ("mpls", 166)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifMainType.setStatus('current')
ifMainMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifMainMtu.setStatus('current')
ifMainAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifMainAdminStatus.setStatus('current')
ifMainOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifMainOperStatus.setStatus('current')
ifMainEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("nlpid", 2), ("nlpidSnap", 3), ("cudNlpid", 4), ("cudNlpidSnap", 5), ("llcSnap", 6), ("vcMultiplexed", 7), ("ethernetV2", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifMainEncapType.setStatus('current')
ifMainBrgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("providerNetworkPort", 1), ("customerNetworkPortPortBased", 2), ("customerNetworkPortStagged", 3), ("customerEdgePort", 4), ("propCustomerEdgePort", 5), ("propCustomerNetworkPort", 6), ("propProviderNetworkPort", 7), ("customerBridgePort", 8))).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifMainBrgPortType.setStatus('current')
ifMainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifMainRowStatus.setStatus('current')
ifIpTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5), )
if mibBuilder.loadTexts: ifIpTable.setStatus('current')
ifIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "ifMainIndex"))
if mibBuilder.loadTexts: ifIpEntry.setStatus('current')
ifIpAddrAllocMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("manual", 1), ("negotiation", 2), ("dynamic", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIpAddrAllocMethod.setStatus('current')
ifIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIpAddr.setStatus('current')
ifIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIpSubnetMask.setStatus('current')
ifIpBroadcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIpBroadcastAddr.setStatus('current')
ifIpForwardingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIpForwardingEnable.setStatus('current')
ifIpAddrAllocProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("rarp", 1), ("dhcp", 2), ("bootp", 3))).clone('dhcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIpAddrAllocProtocol.setStatus('current')
ifIvrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 8), )
if mibBuilder.loadTexts: ifIvrTable.setStatus('current')
ifIvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 8, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "ifMainIndex"))
if mibBuilder.loadTexts: ifIvrEntry.setStatus('current')
ifIvrBridgedIface = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 8, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifIvrBridgedIface.setStatus('current')
ifSetMgmtVlanList = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifSetMgmtVlanList.setStatus('current')
ifResetMgmtVlanList = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifResetMgmtVlanList.setStatus('current')
ifSecondaryIpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 11), )
if mibBuilder.loadTexts: ifSecondaryIpAddressTable.setStatus('current')
ifSecondaryIpAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 11, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "ifMainIndex"), (0, "AT-GS950-24-MIB", "ifSecondaryIpAddress"))
if mibBuilder.loadTexts: ifSecondaryIpAddressEntry.setStatus('current')
ifSecondaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 11, 1, 1), IpAddress())
if mibBuilder.loadTexts: ifSecondaryIpAddress.setStatus('current')
ifSecondaryIpSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 11, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifSecondaryIpSubnetMask.setStatus('current')
ifSecondaryIpBroadcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 11, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ifSecondaryIpBroadcastAddr.setStatus('current')
ifSecondaryIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 27, 1, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ifSecondaryIpRowStatus.setStatus('current')
sysRmonEnableStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 44, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sysRmonenabled", 1), ("sysRmondisabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRmonEnableStatus.setStatus('current')
sysRmonHwStatsSupp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 44, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRmonHwStatsSupp.setStatus('current')
sysRmonHwHistorySupp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 44, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRmonHwHistorySupp.setStatus('current')
sysRmonHwAlarmSupp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 44, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRmonHwAlarmSupp.setStatus('current')
sysRmonHwEventSupp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 44, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notsupported", 0), ("supported", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRmonHwEventSupp.setStatus('current')
class PortLaMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("lacp", 1), ("manual", 2), ("disable", 3))

class LacpKey(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class LacpState(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("lacpActivity", 0), ("lacpTimeout", 1), ("aggregation", 2), ("synchronization", 3), ("collecting", 4), ("distributing", 5), ("defaulted", 6), ("expired", 7))

sysLaSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1))
sysLaPortChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2))
sysLaPort = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3))
sysLaSystemControl = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("shutdown", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaSystemControl.setStatus('current')
sysLaStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaStatus.setStatus('current')
sysLaTraceOption = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaTraceOption.setStatus('current')
sysLaMaxPortsPerPortChannel = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaMaxPortsPerPortChannel.setStatus('current')
sysLaMaxPortChannels = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaMaxPortChannels.setStatus('current')
sysLaOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaOperStatus.setStatus('current')
sysLaActorSystemID = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 1, 7), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaActorSystemID.setStatus('current')
sysLaPortChannelTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1), )
if mibBuilder.loadTexts: sysLaPortChannelTable.setStatus('current')
sysLaPortChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysLaPortChannelIfIndex"))
if mibBuilder.loadTexts: sysLaPortChannelEntry.setStatus('current')
sysLaPortChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: sysLaPortChannelIfIndex.setStatus('current')
sysLaPortChannelGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 2), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaPortChannelGroup.setStatus('current')
sysLaPortChannelAdminMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortChannelAdminMacAddress.setStatus('current')
sysLaPortChannelMacSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("force", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortChannelMacSelection.setStatus('current')
sysLaPortChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 5), PortLaMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaPortChannelMode.setStatus('current')
sysLaPortChannelPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaPortChannelPortCount.setStatus('current')
sysLaPortChannelActivePortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaPortChannelActivePortCount.setStatus('current')
sysLaPortChannelSelectionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("macSrc", 1), ("macDst", 2), ("macSrcDst", 3), ("ipSrc", 4), ("ipDst", 5), ("ipSrcDst", 6), ("vlanId", 7))).clone('macSrcDst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortChannelSelectionPolicy.setStatus('current')
sysLaPortChannelDefaultPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 2, 1, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortChannelDefaultPortIndex.setStatus('current')
sysLaPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1), )
if mibBuilder.loadTexts: sysLaPortTable.setStatus('current')
sysLaPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysLaPortIndex"))
if mibBuilder.loadTexts: sysLaPortEntry.setStatus('current')
sysLaPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: sysLaPortIndex.setStatus('current')
sysLaPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 2), PortLaMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortMode.setStatus('current')
sysLaPortBundleState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("upInBndl", 0), ("standby", 1), ("down", 2), ("upIndividual", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaPortBundleState.setStatus('current')
sysLaPortActorResetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 4), LacpState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortActorResetAdminState.setStatus('current')
sysLaPortAggregateWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 5), TimeTicks().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortAggregateWaitTime.setStatus('current')
sysLaPortPartnerResetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 6), LacpState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortPartnerResetAdminState.setStatus('current')
sysLaPortActorAdminPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortActorAdminPort.setStatus('current')
sysLaPortRestoreMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLaPortRestoreMtu.setStatus('current')
sysLaPortSelectAggregator = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 63, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("static", 0), ("dynamic", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLaPortSelectAggregator.setStatus('current')
class PaeControlledPortStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("authorized", 1), ("unauthorized", 2))

class AuthenticMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("remoteServer", 1), ("localServer", 2))

class PermissionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("allow", 1), ("deny", 2))

sysPnacPaeSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1))
sysPnacAuthServer = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3))
sysGuestVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 4))
sysPnacSystemControl = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("shutdown", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacSystemControl.setStatus('current')
sysPnacAuthenticServer = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 3), AuthenticMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacAuthenticServer.setStatus('current')
sysPnacNasId = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacNasId.setStatus('current')
sysPnacPaePortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5), )
if mibBuilder.loadTexts: sysPnacPaePortTable.setStatus('current')
sysPnacPaePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysPnacPaePortNumber"))
if mibBuilder.loadTexts: sysPnacPaePortEntry.setStatus('current')
sysPnacPaePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: sysPnacPaePortNumber.setStatus('current')
sysPnacPaePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 6), PaeControlledPortStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPnacPaePortStatus.setStatus('current')
sysPnacPaeMultiAuthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacPaeMultiAuthEnable.setStatus('current')
sysPnacPaeProtocolMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacPaeProtocolMode.setStatus('current')
sysPnacPaePiggybackMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacPaePiggybackMode.setStatus('current')
sysPnacPaeVlanAssignment = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacPaeVlanAssignment.setStatus('current')
sysPnacPaeSecureVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacPaeSecureVlan.setStatus('current')
sysPnacModuleOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPnacModuleOperStatus.setStatus('current')
sysPnacASUserConfigTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1), )
if mibBuilder.loadTexts: sysPnacASUserConfigTable.setStatus('current')
sysPnacASUserConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysPnacASUserConfigUserName"))
if mibBuilder.loadTexts: sysPnacASUserConfigEntry.setStatus('current')
sysPnacASUserConfigUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 115)))
if mibBuilder.loadTexts: sysPnacASUserConfigUserName.setStatus('current')
sysPnacASUserConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacASUserConfigPassword.setStatus('current')
sysPnacASUserConfigAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPnacASUserConfigAuthProtocol.setStatus('current')
sysPnacASUserConfigAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacASUserConfigAuthTimeout.setStatus('current')
sysPnacASUserConfigPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacASUserConfigPortList.setStatus('current')
sysPnacASUserConfigPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 6), PermissionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacASUserConfigPermission.setStatus('current')
sysPnacASUserConfigDynamicVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacASUserConfigDynamicVlanID.setStatus('current')
sysPnacASUserConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysPnacASUserConfigRowStatus.setStatus('current')
sysPnacGuestVlanTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 4, 1), )
if mibBuilder.loadTexts: sysPnacGuestVlanTable.setStatus('current')
sysPnacGuestVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysPnacPaePortNo"))
if mibBuilder.loadTexts: sysPnacGuestVlanEntry.setStatus('current')
sysPnacPaePortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPnacPaePortNo.setStatus('current')
sysPnacGuestVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 64, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPnacGuestVlanId.setStatus('current')
sysSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1))
sysConfigControl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2))
sysMirror = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3))
sysIpAuthMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7))
sysLBDdetect = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22))
sysSwitchName = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)).clone('SysName')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSwitchName.setStatus('current')
sysHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysHardwareVersion.setStatus('current')
sysFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysFirmwareVersion.setStatus('current')
sysDefaultIpAddrCfgMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("dynamic", 2))).clone('manual')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDefaultIpAddrCfgMode.setStatus('current')
sysDefaultIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDefaultIpAddr.setStatus('current')
sysDefaultIpSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDefaultIpSubnetMask.setStatus('current')
sysRestart = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRestart.setStatus('current')
sysConfigSaveOption = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noSave", 1), ("flashSave", 2), ("remoteSave", 3), ("startupConfig", 4))).clone('startupConfig')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigSaveOption.setStatus('current')
sysConfigSaveIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigSaveIpAddr.setStatus('current')
sysConfigSaveFileName = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)).clone('iss.conf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigSaveFileName.setStatus('current')
sysInitiateConfigSave = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitiateConfigSave.setStatus('current')
sysConfigSaveStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("saveInProgress", 1), ("saveSuccessful", 2), ("saveFailed", 3), ("notInitiated", 4))).clone('notInitiated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysConfigSaveStatus.setStatus('current')
sysConfigRestoreOption = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noRestore", 1), ("restore", 2))).clone('noRestore')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigRestoreOption.setStatus('current')
sysRemoteConfigRestoreIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRemoteConfigRestoreIpAddr.setStatus('current')
sysConfigRestoreFileName = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)).clone('iss.conf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigRestoreFileName.setStatus('current')
sysInitiateRemoteConfigRestore = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitiateRemoteConfigRestore.setStatus('current')
sysConfigRestoreStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("restoreInprogress", 1), ("restoreSuccessful", 2), ("restoreFailed", 3), ("notInitiated", 4))).clone('notInitiated')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysConfigRestoreStatus.setStatus('current')
sysDlFirmwareFromIp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDlFirmwareFromIp.setStatus('current')
sysDlFirmwareName = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)).clone('firmware.hex')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDlFirmwareName.setStatus('current')
sysInitiateDlFirmware = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitiateDlFirmware.setStatus('current')
sysLoggingOption = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("console", 1), ("file", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLoggingOption.setStatus('current')
sysUploadLogFileToIp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 24), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysUploadLogFileToIp.setStatus('current')
sysLogFileName = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)).clone('iss.log')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFileName.setStatus('current')
sysInitiateUlLogFile = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 26), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysInitiateUlLogFile.setStatus('current')
sysSysContact = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSysContact.setStatus('current')
sysSysLocation = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSysLocation.setStatus('current')
sysLoginAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remoteRadius", 2), ("remoteTacacs", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLoginAuthentication.setStatus('current')
sysSwitchBaseMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 32), MacAddress().clone(hexValue="000102030405")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSwitchBaseMacAddress.setStatus('current')
sysSwitchDate = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSwitchDate.setStatus('current')
sysHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysHttpPort.setStatus('current')
sysHttpStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysHttpStatus.setStatus('current')
sysDefaultVlanId = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDefaultVlanId.setStatus('current')
sysWebAutoTimeoutInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(180, 3600)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysWebAutoTimeoutInterval.setStatus('current')
sysCliAutoTimeoutInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18000)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCliAutoTimeoutInterval.setStatus('current')
sysCpuPolicerStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCpuPolicerStatus.setStatus('current')
sysLedEcoModeStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLedEcoModeStatus.setStatus('current')
sysPowerSavingEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPowerSavingEnable.setStatus('current')
sysDhcpAutoConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDhcpAutoConfiguration.setStatus('current')
sysAsyVLANEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysAsyVLANEnable.setStatus('current')
issCosEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: issCosEnable.setStatus('current')
sysTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTrapEnable.setStatus('current')
sysFDResetStateEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFDResetStateEnable.setStatus('current')
sysFDRInputPw = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFDRInputPw.setStatus('current')
sysConfigCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 1), )
if mibBuilder.loadTexts: sysConfigCtrlTable.setStatus('current')
sysConfigCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysConfigCtrlIndex"))
if mibBuilder.loadTexts: sysConfigCtrlEntry.setStatus('current')
sysConfigCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: sysConfigCtrlIndex.setStatus('current')
sysConfigCtrlEgressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigCtrlEgressStatus.setStatus('current')
sysConfigCtrlStatsCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigCtrlStatsCollection.setStatus('current')
sysConfigCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigCtrlStatus.setStatus('current')
sysPortCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2), )
if mibBuilder.loadTexts: sysPortCtrlTable.setStatus('current')
sysPortCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysPortCtrlIndex"))
if mibBuilder.loadTexts: sysPortCtrlEntry.setStatus('current')
sysPortCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: sysPortCtrlIndex.setStatus('current')
sysPortCtrlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("noNegotiation", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlMode.setStatus('current')
sysPortCtrlDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlDuplex.setStatus('current')
sysPortCtrlSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tenMBPS", 1), ("hundredMBPS", 2), ("oneGB", 3), ("tenGB", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlSpeed.setStatus('current')
sysPortCtrlFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlFlowControl.setStatus('current')
sysPortCtrlMDI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("mdi", 2), ("mdix", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlMDI.setStatus('current')
issJumboFramePerPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: issJumboFramePerPortEnable.setStatus('current')
issJumboFramePerPortMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1522, 10000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: issJumboFramePerPortMtu.setStatus('current')
sysPortCtrlEAPPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlEAPPassThrough.setStatus('current')
sysPortCtrlBPDUPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortCtrlBPDUPassThrough.setStatus('current')
sysMirrorStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMirrorStatus.setStatus('current')
sysMirrorToPort = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMirrorToPort.setStatus('current')
sysMirrorCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 3), )
if mibBuilder.loadTexts: sysMirrorCtrlTable.setStatus('current')
sysMirrorCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysMirrorCtrlIndex"))
if mibBuilder.loadTexts: sysMirrorCtrlEntry.setStatus('current')
sysMirrorCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: sysMirrorCtrlIndex.setStatus('current')
sysMirrorCtrlIngressMirroring = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMirrorCtrlIngressMirroring.setStatus('current')
sysMirrorCtrlEgressMirroring = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMirrorCtrlEgressMirroring.setStatus('current')
sysMirrorCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMirrorCtrlStatus.setStatus('current')
sysIpAuthMgrStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysIpAuthMgrStatus.setStatus('current')
sysIpAuthMgrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2), )
if mibBuilder.loadTexts: sysIpAuthMgrTable.setStatus('current')
sysIpAuthMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysIpAuthMgrIpAddr"), (0, "AT-GS950-24-MIB", "sysIpAuthMgrIpMask"))
if mibBuilder.loadTexts: sysIpAuthMgrEntry.setStatus('current')
sysIpAuthMgrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: sysIpAuthMgrIpAddr.setStatus('current')
sysIpAuthMgrIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: sysIpAuthMgrIpMask.setStatus('current')
sysIpAuthMgrPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysIpAuthMgrPortList.setStatus('current')
sysIpAuthMgrVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysIpAuthMgrVlanList.setStatus('current')
sysIpAuthMgrAllowedServices = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1, 6), Integer32().clone(31)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysIpAuthMgrAllowedServices.setStatus('current')
sysIpAuthMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 7, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysIpAuthMgrRowStatus.setStatus('current')
sysLBDStateEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLBDStateEnable.setStatus('current')
sysLBDInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLBDInterval.setStatus('current')
sysLBDRecoverTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 1000000), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLBDRecoverTime.setStatus('current')
sysLBDCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 4), )
if mibBuilder.loadTexts: sysLBDCtrlTable.setStatus('current')
sysLBDCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysLBDCtrlIndex"))
if mibBuilder.loadTexts: sysLBDCtrlEntry.setStatus('current')
sysLBDCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLBDCtrlIndex.setStatus('current')
sysLBDPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLBDPortStatus.setStatus('current')
sysLBDPortLoopStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 22, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLBDPortLoopStatus.setStatus('current')
sysRateControl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 4))
sysStormControl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12))
sysRateCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 4, 1), )
if mibBuilder.loadTexts: sysRateCtrlTable.setStatus('current')
sysRateCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysRateCtrlIndex"))
if mibBuilder.loadTexts: sysRateCtrlEntry.setStatus('current')
sysRateCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: sysRateCtrlIndex.setStatus('current')
sysRateCtrlEgressLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRateCtrlEgressLimitValue.setStatus('current')
sysRateCtrlIngressLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRateCtrlIngressLimitValue.setStatus('current')
sysStormCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1), )
if mibBuilder.loadTexts: sysStormCtrlTable.setStatus('current')
sysStormCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysStormCtrlIndex"))
if mibBuilder.loadTexts: sysStormCtrlEntry.setStatus('current')
sysStormCtrlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: sysStormCtrlIndex.setStatus('current')
sysDlfOnOff = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDlfOnOff.setStatus('current')
sysBroadcastOnOff = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysBroadcastOnOff.setStatus('current')
sysMulticastOnOff = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMulticastOnOff.setStatus('current')
sysStormCtrlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("low", 1), ("medium", 2), ("high", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysStormCtrlThreshold.setStatus('current')
sysStormCtrlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 12, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysStormCtrlRowStatus.setStatus('current')
sysUserAuthMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 30))
sysUserAuthMgrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 30, 1), )
if mibBuilder.loadTexts: sysUserAuthMgrTable.setStatus('current')
sysUserAuthMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 30, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysUserAuthMgrId"))
if mibBuilder.loadTexts: sysUserAuthMgrEntry.setStatus('current')
sysUserAuthMgrId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 30, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysUserAuthMgrId.setStatus('current')
sysUserAuthMgrName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 30, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysUserAuthMgrName.setStatus('current')
sysUserAuthMgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 81, 30, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysUserAuthMgrRowStatus.setStatus('current')
class IfDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("outbound", 1), ("inbound", 2))

class DscpOrAny(TextualConvention, Unsigned32):
    reference = 'RFC 2474, RFC 2780'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 63)

sysDfsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1))
sysDfsMFClassifier = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2))
sysDfsClassifier = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3))
sysDfsInProfileAction = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4))
sysDfsOutProfileAction = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5))
sysDfsMeter = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 6))
sysDfsEnterpriseCoSqAlgorithm = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 8))
sysDfsMultiFieldClfrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2, 1), )
if mibBuilder.loadTexts: sysDfsMultiFieldClfrTable.setStatus('current')
sysDfsMultiFieldClfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysDfsMultiFieldClfrId"))
if mibBuilder.loadTexts: sysDfsMultiFieldClfrEntry.setStatus('current')
sysDfsMultiFieldClfrId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: sysDfsMultiFieldClfrId.setStatus('current')
sysDfsMultiFieldClfrFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsMultiFieldClfrFilterId.setStatus('current')
sysDfsMultiFieldClfrFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("macfilter", 1), ("ipfilter", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsMultiFieldClfrFilterType.setStatus('current')
sysDfsMultiFieldClfrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysDfsMultiFieldClfrStatus.setStatus('current')
sysDfsClfrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1), )
if mibBuilder.loadTexts: sysDfsClfrTable.setStatus('current')
sysDfsClfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysDfsClfrId"))
if mibBuilder.loadTexts: sysDfsClfrEntry.setStatus('current')
sysDfsClfrId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: sysDfsClfrId.setStatus('current')
sysDfsClfrMFClfrId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsClfrMFClfrId.setStatus('current')
sysDfsClfrInProActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsClfrInProActionId.setStatus('current')
sysDfsClfrOutProActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsClfrOutProActionId.setStatus('current')
sysDfsClfrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysDfsClfrStatus.setStatus('current')
sysDfsInProfileActionTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1), )
if mibBuilder.loadTexts: sysDfsInProfileActionTable.setStatus('current')
sysDfsInProfileActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysDfsInProfileActionId"))
if mibBuilder.loadTexts: sysDfsInProfileActionEntry.setStatus('current')
sysDfsInProfileActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: sysDfsInProfileActionId.setStatus('current')
sysDfsInProfileActionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsInProfileActionFlag.setStatus('current')
sysDfsInProfileActionNewPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsInProfileActionNewPrio.setStatus('current')
sysDfsInProfileActionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1, 1, 6), DscpOrAny()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsInProfileActionDscp.setStatus('current')
sysDfsInProfileActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 4, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysDfsInProfileActionStatus.setStatus('current')
sysDfsOutProfileActionTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5, 1), )
if mibBuilder.loadTexts: sysDfsOutProfileActionTable.setStatus('current')
sysDfsOutProfileActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysDfsOutProfileActionId"))
if mibBuilder.loadTexts: sysDfsOutProfileActionEntry.setStatus('current')
sysDfsOutProfileActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: sysDfsOutProfileActionId.setStatus('current')
sysDfsOutProfileActionFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsOutProfileActionFlag.setStatus('current')
sysDfsOutProfileActionMID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsOutProfileActionMID.setStatus('current')
sysDfsOutProfileActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysDfsOutProfileActionStatus.setStatus('current')
sysDfsMeterTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 6, 1), )
if mibBuilder.loadTexts: sysDfsMeterTable.setStatus('current')
sysDfsMeterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 6, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysDfsMeterId"))
if mibBuilder.loadTexts: sysDfsMeterEntry.setStatus('current')
sysDfsMeterId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: sysDfsMeterId.setStatus('current')
sysDfsMeterRefreshCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 6, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsMeterRefreshCount.setStatus('current')
sysDfsMeterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 6, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysDfsMeterStatus.setStatus('current')
sysDfsCoSqAlgorithmTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 8, 1), )
if mibBuilder.loadTexts: sysDfsCoSqAlgorithmTable.setStatus('current')
sysDfsCoSqAlgorithmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 8, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysDfsPortId"))
if mibBuilder.loadTexts: sysDfsCoSqAlgorithmEntry.setStatus('current')
sysDfsPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: sysDfsPortId.setStatus('current')
sysDfsCoSqAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 83, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("strictPriority", 1), ("weightedRoundRobin", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDfsCoSqAlgorithm.setStatus('current')
class InetAddressIPv4(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class InetAddressIPv6(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:2x:2x:2x:2x:2x:2x:2x%4d'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )
class InetAddressDNS(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

sysSyslogGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1))
sysSyslogLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 2))
sysSyslogLogging = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogLogging.setStatus('current')
sysSyslogTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogTimeStamp.setStatus('current')
sysSyslogSysBuffers = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogSysBuffers.setStatus('current')
sysSyslogClearLog = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogClearLog.setStatus('current')
sysSyslogConfigTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 6), )
if mibBuilder.loadTexts: sysSyslogConfigTable.setStatus('current')
sysSyslogConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 6, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSyslogConfigModule"))
if mibBuilder.loadTexts: sysSyslogConfigEntry.setStatus('current')
sysSyslogConfigModule = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: sysSyslogConfigModule.setStatus('current')
sysSyslogConfigLogLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogConfigLogLevel.setStatus('current')
sysSyslogFacility = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 136, 144, 152, 160, 168, 176, 184))).clone(namedValues=NamedValues(("local0", 128), ("local1", 136), ("local2", 144), ("local3", 152), ("local4", 160), ("local5", 168), ("local6", 176), ("local7", 184))).clone('local0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogFacility.setStatus('current')
sysSyslogLogSrvAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 89, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSyslogLogSrvAddr.setStatus('current')
sysPortSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95, 1))
sysPortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95, 1, 1), )
if mibBuilder.loadTexts: sysPortSecurityTable.setStatus('current')
sysPortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95, 1, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysPortSecurityIndex"))
if mibBuilder.loadTexts: sysPortSecurityEntry.setStatus('current')
sysPortSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: sysPortSecurityIndex.setStatus('current')
sysPortSecurityState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortSecurityState.setStatus('current')
sysPortSecurityMLA = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 95, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPortSecurityMLA.setStatus('current')
sysSslGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 1))
sysSslCiphers = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 2))
sysSslSecureHttpStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSslSecureHttpStatus.setStatus('current')
sysSslPort = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(443)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSslPort.setStatus('current')
sysSslTrace = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSslTrace.setStatus('current')
sysSslCipherList = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSslCipherList.setStatus('current')
sysSslDefaultCipherList = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 96, 2, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSslDefaultCipherList.setStatus('current')
sysSshGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97, 1))
sysSshVersionCompatibility = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSshVersionCompatibility.setStatus('current')
sysSshCipherList = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSshCipherList.setStatus('current')
sysSshMacList = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSshMacList.setStatus('current')
sysSshTrace = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSshTrace.setStatus('current')
sysSshStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 97, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSshStatus.setStatus('current')
sysSntpGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1))
sysSntpTzGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2))
sysSntpStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpStatus.setStatus('current')
sysSntpPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpPollInterval.setStatus('current')
sysSntpTimeSeconds = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTimeSeconds.setStatus('current')
sysSntpPrimarySrvAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpPrimarySrvAddr.setStatus('current')
sysSntpSecondSrvAddr = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpSecondSrvAddr.setStatus('current')
sysSntpTimeZoneMappingIndex = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTimeZoneMappingIndex.setStatus('current')
sysSntpTzDSTStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTStatus.setStatus('current')
sysSntpTzMinutesWest = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzMinutesWest.setStatus('current')
sysSntpTzDSTStartMon = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTStartMon.setStatus('current')
sysSntpTzDSTStartDay = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTStartDay.setStatus('current')
sysSntpTzDSTStartHour = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTStartHour.setStatus('current')
sysSntpTzDSTStartMinute = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTStartMinute.setStatus('current')
sysSntpTzDSTEndMon = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTEndMon.setStatus('current')
sysSntpTzDSTEndDay = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTEndDay.setStatus('current')
sysSntpTzDSTEndHour = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTEndHour.setStatus('current')
sysSntpTzDSTEndMinute = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTEndMinute.setStatus('current')
sysSntpTzDSTForwardOffset = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 99, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(30, 60))).clone(namedValues=NamedValues(("halfHour", 30), ("oneHour", 60)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSntpTzDSTForwardOffset.setStatus('current')
sysDscpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1))
sysDscpTypeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2))
sysDscpEnable = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpEnable.setStatus('current')
sysDscpType01 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType01.setStatus('current')
sysDscpType02 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType02.setStatus('current')
sysDscpType03 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType03.setStatus('current')
sysDscpType04 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType04.setStatus('current')
sysDscpType05 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType05.setStatus('current')
sysDscpType06 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType06.setStatus('current')
sysDscpType07 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType07.setStatus('current')
sysDscpType08 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType08.setStatus('current')
sysDscpType09 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType09.setStatus('current')
sysDscpType10 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType10.setStatus('current')
sysDscpType11 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType11.setStatus('current')
sysDscpType12 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType12.setStatus('current')
sysDscpType13 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType13.setStatus('current')
sysDscpType14 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType14.setStatus('current')
sysDscpType15 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType15.setStatus('current')
sysDscpType16 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType16.setStatus('current')
sysDscpType17 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType17.setStatus('current')
sysDscpType18 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType18.setStatus('current')
sysDscpType19 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType19.setStatus('current')
sysDscpType20 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType20.setStatus('current')
sysDscpType21 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType21.setStatus('current')
sysDscpType22 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType22.setStatus('current')
sysDscpType23 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType23.setStatus('current')
sysDscpType24 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType24.setStatus('current')
sysDscpType25 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType25.setStatus('current')
sysDscpType26 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType26.setStatus('current')
sysDscpType27 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType27.setStatus('current')
sysDscpType28 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType28.setStatus('current')
sysDscpType29 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType29.setStatus('current')
sysDscpType30 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType30.setStatus('current')
sysDscpType31 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType31.setStatus('current')
sysDscpType32 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType32.setStatus('current')
sysDscpType33 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType33.setStatus('current')
sysDscpType34 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType34.setStatus('current')
sysDscpType35 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType35.setStatus('current')
sysDscpType36 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType36.setStatus('current')
sysDscpType37 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType37.setStatus('current')
sysDscpType38 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType38.setStatus('current')
sysDscpType39 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType39.setStatus('current')
sysDscpType40 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType40.setStatus('current')
sysDscpType41 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType41.setStatus('current')
sysDscpType42 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType42.setStatus('current')
sysDscpType43 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType43.setStatus('current')
sysDscpType44 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType44.setStatus('current')
sysDscpType45 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType45.setStatus('current')
sysDscpType46 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType46.setStatus('current')
sysDscpType47 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType47.setStatus('current')
sysDscpType48 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType48.setStatus('current')
sysDscpType49 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType49.setStatus('current')
sysDscpType50 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType50.setStatus('current')
sysDscpType51 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType51.setStatus('current')
sysDscpType52 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType52.setStatus('current')
sysDscpType53 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType53.setStatus('current')
sysDscpType54 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType54.setStatus('current')
sysDscpType55 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType55.setStatus('current')
sysDscpType56 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType56.setStatus('current')
sysDscpType57 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType57.setStatus('current')
sysDscpType58 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType58.setStatus('current')
sysDscpType59 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType59.setStatus('current')
sysDscpType60 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType60.setStatus('current')
sysDscpType61 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType61.setStatus('current')
sysDscpType62 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType62.setStatus('current')
sysDscpType63 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType63.setStatus('current')
sysDscpType64 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 100, 1, 2, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("class0", 0), ("class1", 1), ("class2", 2), ("class3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDscpType64.setStatus('current')
sysSnoopInst = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2))
sysSnoopVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3))
sysSnoopStats = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4))
sysSnoopInstanceGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 1), )
if mibBuilder.loadTexts: sysSnoopInstanceGlobalTable.setStatus('current')
sysSnoopInstanceGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnoopInstanceGlobalInstId"))
if mibBuilder.loadTexts: sysSnoopInstanceGlobalEntry.setStatus('current')
sysSnoopInstanceGlobalInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: sysSnoopInstanceGlobalInstId.setStatus('current')
sysSnoopInstanceGlobalSystemControl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("shutdown", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopInstanceGlobalSystemControl.setStatus('current')
sysSnoopInstanceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2), )
if mibBuilder.loadTexts: sysSnoopInstanceConfigTable.setStatus('current')
sysSnoopInstanceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnoopInstanceConfigInstId"), (0, "AT-GS950-24-MIB", "sysSnoopInetAddressType"))
if mibBuilder.loadTexts: sysSnoopInstanceConfigEntry.setStatus('current')
sysSnoopInstanceConfigInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: sysSnoopInstanceConfigInstId.setStatus('current')
sysSnoopInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: sysSnoopInetAddressType.setStatus('current')
sysSnoopStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopStatus.setStatus('current')
sysSnoopRouterPortPurgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 600)).clone(125)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopRouterPortPurgeInterval.setStatus('current')
sysSnoopPortPurgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(130, 1225)).clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopPortPurgeInterval.setStatus('current')
sysSnoopReportForwardInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopReportForwardInterval.setStatus('current')
sysSnoopRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopRetryCount.setStatus('current')
sysSnoopGrpQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopGrpQueryInterval.setStatus('current')
sysSnoopReportFwdOnAllPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allports", 1), ("rtrports", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopReportFwdOnAllPorts.setStatus('current')
sysSnoopOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopOperStatus.setStatus('current')
sysSnoopSendQueryOnTopoChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopSendQueryOnTopoChange.setStatus('current')
sysSnoopQuerierQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 600)).clone(125)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopQuerierQueryInterval.setStatus('current')
sysSnoopVlanMcastMacFwdTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1), )
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdTable.setStatus('current')
sysSnoopVlanMcastMacFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnoopVlanMcastMacFwdInstId"), (0, "AT-GS950-24-MIB", "sysSnoopVlanMcastMacFwdVlanId"), (0, "AT-GS950-24-MIB", "sysSnoopVlanMcastMacFwdInetAddressType"), (0, "AT-GS950-24-MIB", "sysSnoopVlanMcastMacFwdGroupAddress"))
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdEntry.setStatus('current')
sysSnoopVlanMcastMacFwdInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdInstId.setStatus('current')
sysSnoopVlanMcastMacFwdVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdVlanId.setStatus('current')
sysSnoopVlanMcastMacFwdInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1, 1, 3), InetAddressType())
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdInetAddressType.setStatus('current')
sysSnoopVlanMcastMacFwdGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1, 1, 4), MacAddress())
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdGroupAddress.setStatus('current')
sysSnoopVlanMcastMacFwdPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 1, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopVlanMcastMacFwdPortList.setStatus('current')
sysSnoopVlanRouterTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 3), )
if mibBuilder.loadTexts: sysSnoopVlanRouterTable.setStatus('current')
sysSnoopVlanRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnoopVlanRouterInstId"), (0, "AT-GS950-24-MIB", "sysSnoopVlanRouterVlanId"), (0, "AT-GS950-24-MIB", "sysSnoopVlanRouterInetAddressType"))
if mibBuilder.loadTexts: sysSnoopVlanRouterEntry.setStatus('current')
sysSnoopVlanRouterInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: sysSnoopVlanRouterInstId.setStatus('current')
sysSnoopVlanRouterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: sysSnoopVlanRouterVlanId.setStatus('current')
sysSnoopVlanRouterInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 3, 1, 3), InetAddressType())
if mibBuilder.loadTexts: sysSnoopVlanRouterInetAddressType.setStatus('current')
sysSnoopVlanRouterPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 3, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopVlanRouterPortList.setStatus('current')
sysSnoopVlanFilterTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4), )
if mibBuilder.loadTexts: sysSnoopVlanFilterTable.setStatus('current')
sysSnoopVlanFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnoopVlanFilterInstId"), (0, "AT-GS950-24-MIB", "sysSnoopVlanFilterVlanId"), (0, "AT-GS950-24-MIB", "sysSnoopVlanFilterInetAddressType"))
if mibBuilder.loadTexts: sysSnoopVlanFilterEntry.setStatus('current')
sysSnoopVlanFilterInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: sysSnoopVlanFilterInstId.setStatus('current')
sysSnoopVlanFilterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: sysSnoopVlanFilterVlanId.setStatus('current')
sysSnoopVlanFilterInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 3), InetAddressType())
if mibBuilder.loadTexts: sysSnoopVlanFilterInetAddressType.setStatus('current')
sysSnoopVlanSnoopStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopVlanSnoopStatus.setStatus('current')
sysSnoopVlanOperatingVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2))).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopVlanOperatingVersion.setStatus('current')
sysSnoopVlanFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopVlanFastLeave.setStatus('current')
sysSnoopVlanQuerier = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopVlanQuerier.setStatus('current')
sysSnoopVlanCfgQuerier = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopVlanCfgQuerier.setStatus('current')
sysSnoopVlanQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 600)).clone(125)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopVlanQueryInterval.setStatus('current')
sysSnoopVlanRtrPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 11), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSnoopVlanRtrPortList.setStatus('current')
sysSnoopVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 3, 4, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sysSnoopVlanRowStatus.setStatus('current')
sysSnoopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1), )
if mibBuilder.loadTexts: sysSnoopStatsTable.setStatus('current')
sysSnoopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "sysSnoopStatsInstId"), (0, "AT-GS950-24-MIB", "sysSnoopStatsVlanId"), (0, "AT-GS950-24-MIB", "sysSnoopStatsInetAddressType"))
if mibBuilder.loadTexts: sysSnoopStatsEntry.setStatus('current')
sysSnoopStatsInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: sysSnoopStatsInstId.setStatus('current')
sysSnoopStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: sysSnoopStatsVlanId.setStatus('current')
sysSnoopStatsInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 3), InetAddressType())
if mibBuilder.loadTexts: sysSnoopStatsInetAddressType.setStatus('current')
sysSnoopStatsRxGenQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsRxGenQueries.setStatus('current')
sysSnoopStatsRxGrpQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsRxGrpQueries.setStatus('current')
sysSnoopStatsRxAsmReports = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsRxAsmReports.setStatus('current')
sysSnoopStatsRxAsmLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsRxAsmLeaves.setStatus('current')
sysSnoopStatsTxGenQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsTxGenQueries.setStatus('current')
sysSnoopStatsTxGrpQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsTxGrpQueries.setStatus('current')
sysSnoopStatsTxAsmReports = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsTxAsmReports.setStatus('current')
sysSnoopStatsTxAsmLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsTxAsmLeaves.setStatus('current')
sysSnoopStatsDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 105, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysSnoopStatsDroppedPkts.setStatus('current')
class BridgeId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class Timeout(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd4'

dot1dNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 0))
dot1dBase = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1))
l2Dot1dStp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2))
dot1dSr = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 3))
dot1dTp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4))
dot1dStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5))
dot1dBaseTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 1), )
if mibBuilder.loadTexts: dot1dBaseTable.setStatus('current')
dot1dBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBaseContextId"))
if mibBuilder.loadTexts: dot1dBaseEntry.setStatus('current')
dot1dBaseContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1dBaseContextId.setStatus('current')
dot1dBaseBridgeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBaseBridgeAddress.setStatus('current')
dot1dBaseNumPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBaseNumPorts.setStatus('current')
dot1dBaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("transparentonly", 2), ("sourcerouteonly", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBaseType.setStatus('current')
dot1dBasePortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2), )
if mibBuilder.loadTexts: dot1dBasePortTable.setStatus('current')
dot1dBasePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: dot1dBasePortEntry.setStatus('current')
dot1dBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dot1dBasePort.setStatus('current')
dot1dBasePortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBasePortIfIndex.setStatus('current')
dot1dBasePortCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBasePortCircuit.setStatus('current')
dot1dBasePortDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBasePortDelayExceededDiscards.setStatus('current')
dot1dBasePortMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dBasePortMtuExceededDiscards.setStatus('current')
dot1dStpTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1), )
if mibBuilder.loadTexts: dot1dStpTable.setStatus('current')
dot1dStpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dStpContextId"))
if mibBuilder.loadTexts: dot1dStpEntry.setStatus('current')
dot1dStpContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1dStpContextId.setStatus('current')
dot1dStpProtocolSpecification = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("decLb100", 2), ("ieee8021d", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpProtocolSpecification.setStatus('current')
dot1dStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPriority.setStatus('current')
dot1dStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpTimeSinceTopologyChange.setStatus('current')
dot1dStpTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpTopChanges.setStatus('current')
dot1dStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpDesignatedRoot.setStatus('current')
dot1dStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpRootCost.setStatus('current')
dot1dStpRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpRootPort.setStatus('current')
dot1dStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 9), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpMaxAge.setStatus('current')
dot1dStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 10), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpHelloTime.setStatus('current')
dot1dStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpHoldTime.setStatus('current')
dot1dStpForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 12), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpForwardDelay.setStatus('current')
dot1dStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 13), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpBridgeMaxAge.setStatus('current')
dot1dStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 14), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpBridgeHelloTime.setStatus('current')
dot1dStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 1, 1, 15), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpBridgeForwardDelay.setStatus('current')
dot1dStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2), )
if mibBuilder.loadTexts: dot1dStpPortTable.setStatus('current')
dot1dStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dStpPort"))
if mibBuilder.loadTexts: dot1dStpPortEntry.setStatus('current')
dot1dStpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dot1dStpPort.setStatus('current')
dot1dStpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPortPriority.setStatus('current')
dot1dStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortState.setStatus('current')
dot1dStpPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPortEnable.setStatus('current')
dot1dStpPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPortPathCost.setStatus('current')
dot1dStpPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortDesignatedRoot.setStatus('current')
dot1dStpPortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortDesignatedCost.setStatus('current')
dot1dStpPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 8), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortDesignatedBridge.setStatus('current')
dot1dStpPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortDesignatedPort.setStatus('current')
dot1dStpPortForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortForwardTransitions.setStatus('current')
dot1dTpTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 1), )
if mibBuilder.loadTexts: dot1dTpTable.setStatus('current')
dot1dTpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBaseContextId"))
if mibBuilder.loadTexts: dot1dTpEntry.setStatus('current')
dot1dTpLearnedEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpLearnedEntryDiscards.setStatus('current')
dot1dTpAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dTpAgingTime.setStatus('current')
dot1dTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 2), )
if mibBuilder.loadTexts: dot1dTpFdbTable.setStatus('current')
dot1dTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBaseContextId"), (0, "AT-GS950-24-MIB", "dot1dTpFdbAddress"))
if mibBuilder.loadTexts: dot1dTpFdbEntry.setStatus('current')
dot1dTpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: dot1dTpFdbAddress.setStatus('current')
dot1dTpFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpFdbPort.setStatus('current')
dot1dTpFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("learned", 3), ("self", 4), ("mgmt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpFdbStatus.setStatus('current')
dot1dTpPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3), )
if mibBuilder.loadTexts: dot1dTpPortTable.setStatus('current')
dot1dTpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dTpPort"))
if mibBuilder.loadTexts: dot1dTpPortEntry.setStatus('current')
dot1dTpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dot1dTpPort.setStatus('current')
dot1dTpPortMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortMaxInfo.setStatus('current')
dot1dTpPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortInFrames.setStatus('current')
dot1dTpPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortOutFrames.setStatus('current')
dot1dTpPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortInDiscards.setStatus('current')
dot1dStaticTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 1), )
if mibBuilder.loadTexts: dot1dStaticTable.setStatus('current')
dot1dStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBaseContextId"), (0, "AT-GS950-24-MIB", "dot1dStaticAddress"), (0, "AT-GS950-24-MIB", "dot1dStaticReceivePort"))
if mibBuilder.loadTexts: dot1dStaticEntry.setStatus('current')
dot1dStaticAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: dot1dStaticAddress.setStatus('current')
dot1dStaticReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1dStaticReceivePort.setStatus('current')
dot1dStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1dStaticRowStatus.setStatus('current')
dot1dStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStaticStatus.setStatus('current')
dot1dStaticAllowedToGoTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 2), )
if mibBuilder.loadTexts: dot1dStaticAllowedToGoTable.setStatus('current')
dot1dStaticAllowedToGoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBaseContextId"), (0, "AT-GS950-24-MIB", "dot1dStaticAddress"), (0, "AT-GS950-24-MIB", "dot1dStaticReceivePort"), (0, "AT-GS950-24-MIB", "dot1dTpPort"))
if mibBuilder.loadTexts: dot1dStaticAllowedToGoEntry.setStatus('current')
dot1dStaticAllowedIsMember = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 5, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStaticAllowedIsMember.setStatus('current')
newRoot = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 0, 1))
if mibBuilder.loadTexts: newRoot.setStatus('current')
topologyChange = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 0, 2))
if mibBuilder.loadTexts: topologyChange.setStatus('current')
dot1dStpExtTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 3), )
if mibBuilder.loadTexts: dot1dStpExtTable.setStatus('current')
dot1dStpExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 3, 1), )
dot1dStpEntry.registerAugmentions(("AT-GS950-24-MIB", "dot1dStpExtEntry"))
dot1dStpExtEntry.setIndexNames(*dot1dStpEntry.getIndexNames())
if mibBuilder.loadTexts: dot1dStpExtEntry.setStatus('current')
dot1dStpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("stpCompatible", 0), ("rstp", 2))).clone('rstp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpVersion.setStatus('current')
dot1dStpTxHoldCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpTxHoldCount.setStatus('current')
dot1dStpPathCostDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stp8021d1998", 1), ("stp8021t2001", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPathCostDefault.setStatus('current')
dot1dStpExtPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4), )
if mibBuilder.loadTexts: dot1dStpExtPortTable.setStatus('current')
dot1dStpExtPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4, 1), )
dot1dStpPortEntry.registerAugmentions(("AT-GS950-24-MIB", "dot1dStpExtPortEntry"))
dot1dStpExtPortEntry.setIndexNames(*dot1dStpPortEntry.getIndexNames())
if mibBuilder.loadTexts: dot1dStpExtPortEntry.setStatus('current')
dot1dStpPortProtocolMigration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPortProtocolMigration.setStatus('current')
dot1dStpPortAdminEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPortAdminEdgePort.setStatus('current')
dot1dStpPortOperEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortOperEdgePort.setStatus('current')
dot1dStpPortAdminPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("forceTrue", 0), ("forceFalse", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dStpPortAdminPointToPoint.setStatus('current')
dot1dStpPortOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 2, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dStpPortOperPointToPoint.setStatus('current')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

dot1dMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1))
dot1dExtBase = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1))
dot1dPriority = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2))
dot1dGarp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 3))
dot1dConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2))
dot1dGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1))
dot1dCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 2))
dot1dExtBaseTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 1), )
if mibBuilder.loadTexts: dot1dExtBaseTable.setStatus('current')
dot1dExtBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBridgeContextId"))
if mibBuilder.loadTexts: dot1dExtBaseEntry.setStatus('current')
dot1dBridgeContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1dBridgeContextId.setStatus('current')
dot1dDeviceCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 1, 1, 2), Bits().clone(namedValues=NamedValues(("dot1dExtendedFilteringServices", 0), ("dot1dTrafficClasses", 1), ("dot1qStaticEntryIndividualPort", 2), ("dot1qIVLCapable", 3), ("dot1qSVLCapable", 4), ("dot1qHybridCapable", 5), ("dot1qConfigurablePvidTagging", 6), ("dot1dLocalVlanCapable", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dDeviceCapabilities.setStatus('current')
dot1dTrafficClassesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dTrafficClassesEnabled.setStatus('current')
dot1dGmrpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 1, 1, 4), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dGmrpStatus.setStatus('current')
dot1dPortCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 2), )
if mibBuilder.loadTexts: dot1dPortCapabilitiesTable.setStatus('current')
dot1dPortCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 2, 1), )
dot1dBasePortEntry.registerAugmentions(("AT-GS950-24-MIB", "dot1dPortCapabilitiesEntry"))
dot1dPortCapabilitiesEntry.setIndexNames(*dot1dBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: dot1dPortCapabilitiesEntry.setStatus('current')
dot1dPortCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 1, 2, 1, 1), Bits().clone(namedValues=NamedValues(("dot1qDot1qTagging", 0), ("dot1qConfigurableAcceptableFrameTypes", 1), ("dot1qIngressFiltering", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dPortCapabilities.setStatus('current')
dot1dPortPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 1), )
if mibBuilder.loadTexts: dot1dPortPriorityTable.setStatus('current')
dot1dPortPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 1, 1), )
dot1dBasePortEntry.registerAugmentions(("AT-GS950-24-MIB", "dot1dPortPriorityEntry"))
dot1dPortPriorityEntry.setIndexNames(*dot1dBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: dot1dPortPriorityEntry.setStatus('current')
dot1dPortDefaultUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dPortDefaultUserPriority.setStatus('current')
dot1dPortNumTrafficClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dPortNumTrafficClasses.setStatus('current')
dot1dUserPriorityRegenTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 2), )
if mibBuilder.loadTexts: dot1dUserPriorityRegenTable.setStatus('current')
dot1dUserPriorityRegenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBasePort"), (0, "AT-GS950-24-MIB", "dot1dUserPriority"))
if mibBuilder.loadTexts: dot1dUserPriorityRegenEntry.setStatus('current')
dot1dUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: dot1dUserPriority.setStatus('current')
dot1dRegenUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dRegenUserPriority.setStatus('current')
dot1dTrafficClassTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 3), )
if mibBuilder.loadTexts: dot1dTrafficClassTable.setStatus('current')
dot1dTrafficClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBasePort"), (0, "AT-GS950-24-MIB", "dot1dTrafficClassPriority"))
if mibBuilder.loadTexts: dot1dTrafficClassEntry.setStatus('current')
dot1dTrafficClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: dot1dTrafficClassPriority.setStatus('current')
dot1dTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dTrafficClass.setStatus('current')
dot1dPortOutboundAccessPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 4), )
if mibBuilder.loadTexts: dot1dPortOutboundAccessPriorityTable.setStatus('current')
dot1dPortOutboundAccessPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBasePort"), (0, "AT-GS950-24-MIB", "dot1dRegenUserPriority"))
if mibBuilder.loadTexts: dot1dPortOutboundAccessPriorityEntry.setStatus('current')
dot1dPortOutboundAccessPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dPortOutboundAccessPriority.setStatus('current')
dot1dPortGarpTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 3, 1), )
if mibBuilder.loadTexts: dot1dPortGarpTable.setStatus('current')
dot1dPortGarpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 3, 1, 1), )
dot1dBasePortEntry.registerAugmentions(("AT-GS950-24-MIB", "dot1dPortGarpEntry"))
dot1dPortGarpEntry.setIndexNames(*dot1dBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: dot1dPortGarpEntry.setStatus('current')
dot1dPortGarpJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 3, 1, 1, 1), TimeInterval().clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dPortGarpJoinTime.setStatus('current')
dot1dPortGarpLeaveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 3, 1, 1, 2), TimeInterval().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dPortGarpLeaveTime.setStatus('current')
dot1dPortGarpLeaveAllTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 1, 3, 1, 1, 3), TimeInterval().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1dPortGarpLeaveAllTime.setStatus('current')
dot1dTpHCPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 5), )
if mibBuilder.loadTexts: dot1dTpHCPortTable.setStatus('current')
dot1dTpHCPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dTpPort"))
if mibBuilder.loadTexts: dot1dTpHCPortEntry.setStatus('current')
dot1dTpHCPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpHCPortInFrames.setStatus('current')
dot1dTpHCPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpHCPortOutFrames.setStatus('current')
dot1dTpHCPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpHCPortInDiscards.setStatus('current')
dot1dTpPortOverflowTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 6), )
if mibBuilder.loadTexts: dot1dTpPortOverflowTable.setStatus('current')
dot1dTpPortOverflowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 6, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dTpPort"))
if mibBuilder.loadTexts: dot1dTpPortOverflowEntry.setStatus('current')
dot1dTpPortInOverflowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortInOverflowFrames.setStatus('current')
dot1dTpPortOutOverflowFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortOutOverflowFrames.setStatus('current')
dot1dTpPortInOverflowDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 4, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1dTpPortInOverflowDiscards.setStatus('current')
dot1dExtCapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 1)).setObjects(("AT-GS950-24-MIB", "dot1dDeviceCapabilities"), ("AT-GS950-24-MIB", "dot1dPortCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dExtCapGroup = dot1dExtCapGroup.setStatus('current')
dot1dDeviceGmrpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 2)).setObjects(("AT-GS950-24-MIB", "dot1dGmrpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dDeviceGmrpGroup = dot1dDeviceGmrpGroup.setStatus('current')
dot1dDevicePriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 3)).setObjects(("AT-GS950-24-MIB", "dot1dTrafficClassesEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dDevicePriorityGroup = dot1dDevicePriorityGroup.setStatus('current')
dot1dDefaultPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 4)).setObjects(("AT-GS950-24-MIB", "dot1dPortDefaultUserPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dDefaultPriorityGroup = dot1dDefaultPriorityGroup.setStatus('current')
dot1dRegenPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 5)).setObjects(("AT-GS950-24-MIB", "dot1dRegenUserPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dRegenPriorityGroup = dot1dRegenPriorityGroup.setStatus('current')
dot1dPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 6)).setObjects(("AT-GS950-24-MIB", "dot1dPortNumTrafficClasses"), ("AT-GS950-24-MIB", "dot1dTrafficClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dPriorityGroup = dot1dPriorityGroup.setStatus('current')
dot1dAccessPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 7)).setObjects(("AT-GS950-24-MIB", "dot1dPortOutboundAccessPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dAccessPriorityGroup = dot1dAccessPriorityGroup.setStatus('current')
dot1dPortGarpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 8)).setObjects(("AT-GS950-24-MIB", "dot1dPortGarpJoinTime"), ("AT-GS950-24-MIB", "dot1dPortGarpLeaveTime"), ("AT-GS950-24-MIB", "dot1dPortGarpLeaveAllTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dPortGarpGroup = dot1dPortGarpGroup.setStatus('current')
dot1dHCPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 10)).setObjects(("AT-GS950-24-MIB", "dot1dTpHCPortInFrames"), ("AT-GS950-24-MIB", "dot1dTpHCPortOutFrames"), ("AT-GS950-24-MIB", "dot1dTpHCPortInDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dHCPortGroup = dot1dHCPortGroup.setStatus('current')
dot1dPortOverflowGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 1, 11)).setObjects(("AT-GS950-24-MIB", "dot1dTpPortInOverflowFrames"), ("AT-GS950-24-MIB", "dot1dTpPortOutOverflowFrames"), ("AT-GS950-24-MIB", "dot1dTpPortInOverflowDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dPortOverflowGroup = dot1dPortOverflowGroup.setStatus('current')
dot1dCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 6, 2, 2, 1)).setObjects(("AT-GS950-24-MIB", "dot1dExtCapGroup"), ("AT-GS950-24-MIB", "dot1dDeviceGmrpGroup"), ("AT-GS950-24-MIB", "dot1dDevicePriorityGroup"), ("AT-GS950-24-MIB", "dot1dDefaultPriorityGroup"), ("AT-GS950-24-MIB", "dot1dRegenPriorityGroup"), ("AT-GS950-24-MIB", "dot1dPriorityGroup"), ("AT-GS950-24-MIB", "dot1dAccessPriorityGroup"), ("AT-GS950-24-MIB", "dot1dPortGarpGroup"), ("AT-GS950-24-MIB", "dot1dHCPortGroup"), ("AT-GS950-24-MIB", "dot1dPortOverflowGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot1dCompliance = dot1dCompliance.setStatus('current')
class VlanIndex(TextualConvention, Unsigned32):
    status = 'current'

class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

dot1qMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1))
dot1qBase = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1))
dot1qTp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2))
dot1qStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3))
dot1qVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4))
dot1qBaseTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1), )
if mibBuilder.loadTexts: dot1qBaseTable.setStatus('current')
dot1qBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"))
if mibBuilder.loadTexts: dot1qBaseEntry.setStatus('current')
dot1qVlanContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1qVlanContextId.setStatus('current')
dot1qVlanVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("version1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanVersionNumber.setStatus('current')
dot1qMaxVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qMaxVlanId.setStatus('current')
dot1qMaxSupportedVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qMaxSupportedVlans.setStatus('current')
dot1qNumVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qNumVlans.setStatus('current')
dot1qGvrpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qGvrpStatus.setStatus('current')
dot1qFdbTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 1), )
if mibBuilder.loadTexts: dot1qFdbTable.setStatus('current')
dot1qFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qFdbId"))
if mibBuilder.loadTexts: dot1qFdbEntry.setStatus('current')
dot1qFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dot1qFdbId.setStatus('current')
dot1qFdbDynamicCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qFdbDynamicCount.setStatus('current')
dot1qTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 2), )
if mibBuilder.loadTexts: dot1qTpFdbTable.setStatus('current')
dot1qTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qFdbId"), (0, "AT-GS950-24-MIB", "dot1qTpFdbAddress"))
if mibBuilder.loadTexts: dot1qTpFdbEntry.setStatus('current')
dot1qTpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qTpFdbAddress.setStatus('current')
dot1qTpFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qTpFdbPort.setStatus('current')
dot1qTpFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("learned", 3), ("self", 4), ("mgmt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qTpFdbStatus.setStatus('current')
dot1qTpFdbPw = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qTpFdbPw.setStatus('current')
dot1qStaticUnicastTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 1), )
if mibBuilder.loadTexts: dot1qStaticUnicastTable.setStatus('current')
dot1qStaticUnicastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qFdbId"), (0, "AT-GS950-24-MIB", "dot1qStaticUnicastAddress"), (0, "AT-GS950-24-MIB", "dot1qStaticUnicastReceivePort"))
if mibBuilder.loadTexts: dot1qStaticUnicastEntry.setStatus('current')
dot1qStaticUnicastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qStaticUnicastAddress.setStatus('current')
dot1qStaticUnicastReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qStaticUnicastReceivePort.setStatus('current')
dot1qStaticUnicastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qStaticUnicastRowStatus.setStatus('current')
dot1qStaticUnicastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qStaticUnicastStatus.setStatus('current')
dot1qStaticAllowedToGoTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 2), )
if mibBuilder.loadTexts: dot1qStaticAllowedToGoTable.setStatus('current')
dot1qStaticAllowedToGoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qFdbId"), (0, "AT-GS950-24-MIB", "dot1qStaticUnicastAddress"), (0, "AT-GS950-24-MIB", "dot1qStaticUnicastReceivePort"), (0, "AT-GS950-24-MIB", "dot1qTpPort"))
if mibBuilder.loadTexts: dot1qStaticAllowedToGoEntry.setStatus('current')
dot1qStaticAllowedIsMember = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qStaticAllowedIsMember.setStatus('current')
dot1qTpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dot1qTpPort.setStatus('current')
dot1qStaticMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 3), )
if mibBuilder.loadTexts: dot1qStaticMulticastTable.setStatus('current')
dot1qStaticMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qVlanIndex"), (0, "AT-GS950-24-MIB", "dot1qStaticMulticastAddress"), (0, "AT-GS950-24-MIB", "dot1qStaticMulticastReceivePort"))
if mibBuilder.loadTexts: dot1qStaticMulticastEntry.setStatus('current')
dot1qStaticMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qStaticMulticastAddress.setStatus('current')
dot1qStaticMulticastReceivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qStaticMulticastReceivePort.setStatus('current')
dot1qStaticMulticastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qStaticMulticastRowStatus.setStatus('current')
dot1qStaticMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qStaticMulticastStatus.setStatus('current')
dot1qStaticMcastPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 4), )
if mibBuilder.loadTexts: dot1qStaticMcastPortTable.setStatus('current')
dot1qStaticMcastPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qVlanIndex"), (0, "AT-GS950-24-MIB", "dot1qStaticMulticastAddress"), (0, "AT-GS950-24-MIB", "dot1qStaticMulticastReceivePort"), (0, "AT-GS950-24-MIB", "dot1qTpPort"))
if mibBuilder.loadTexts: dot1qStaticMcastPortEntry.setStatus('current')
dot1qStaticMcastPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("addMember", 1), ("addForbidden", 2), ("delMember", 3), ("delForbidden", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qStaticMcastPort.setStatus('current')
dot1qVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 3, 4, 1, 2), VlanIndex())
if mibBuilder.loadTexts: dot1qVlanIndex.setStatus('current')
dot1qVlanNumDeletesTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 1), )
if mibBuilder.loadTexts: dot1qVlanNumDeletesTable.setStatus('current')
dot1qVlanNumDeletesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"))
if mibBuilder.loadTexts: dot1qVlanNumDeletesEntry.setStatus('current')
dot1qVlanNumDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanNumDeletes.setStatus('current')
dot1qVlanCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 2), )
if mibBuilder.loadTexts: dot1qVlanCurrentTable.setStatus('current')
dot1qVlanCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qVlanTimeMark"), (0, "AT-GS950-24-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: dot1qVlanCurrentEntry.setStatus('current')
dot1qVlanTimeMark = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: dot1qVlanTimeMark.setStatus('current')
dot1qVlanFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanFdbId.setStatus('current')
dot1qVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("permanent", 2), ("dynamicGvrp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanStatus.setStatus('current')
dot1qVlanCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanCreationTime.setStatus('current')
dot1qVlanEgressPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 3), )
if mibBuilder.loadTexts: dot1qVlanEgressPortTable.setStatus('current')
dot1qVlanEgressPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qVlanTimeMark"), (0, "AT-GS950-24-MIB", "dot1qVlanIndex"), (0, "AT-GS950-24-MIB", "dot1qTpPort"))
if mibBuilder.loadTexts: dot1qVlanEgressPortEntry.setStatus('current')
dot1qVlanCurrentEgressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tagged", 1), ("untagged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanCurrentEgressPort.setStatus('current')
dot1qVlanStaticTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 4), )
if mibBuilder.loadTexts: dot1qVlanStaticTable.setStatus('current')
dot1qVlanStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: dot1qVlanStaticEntry.setStatus('current')
dot1qVlanStaticName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qVlanStaticName.setStatus('current')
dot1qVlanStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot1qVlanStaticRowStatus.setStatus('current')
dot1qVlanStaticPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 5), )
if mibBuilder.loadTexts: dot1qVlanStaticPortConfigTable.setStatus('current')
dot1qVlanStaticPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanContextId"), (0, "AT-GS950-24-MIB", "dot1qVlanIndex"), (0, "AT-GS950-24-MIB", "dot1qTpPort"))
if mibBuilder.loadTexts: dot1qVlanStaticPortConfigEntry.setStatus('current')
dot1qVlanStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("addTagged", 1), ("addUntagged", 2), ("addForbidden", 3), ("delTagged", 4), ("delUntagged", 5), ("delForbidden", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qVlanStaticPort.setStatus('current')
dot1qPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7), )
if mibBuilder.loadTexts: dot1qPortVlanTable.setStatus('current')
dot1qPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: dot1qPortVlanEntry.setStatus('current')
dot1qPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 1), VlanIndex().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qPvid.setStatus('current')
dot1qPortAcceptableFrameTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("admitAll", 1), ("admitOnlyVlanTagged", 2), ("admitOnlyUntaggedAndPriorityTagged", 3))).clone('admitAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qPortAcceptableFrameTypes.setStatus('current')
dot1qPortIngressFiltering = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qPortIngressFiltering.setStatus('current')
dot1qPortGvrpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 4), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qPortGvrpStatus.setStatus('current')
dot1qPortGvrpFailedRegistrations = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qPortGvrpFailedRegistrations.setStatus('current')
dot1qPortGvrpLastPduOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qPortGvrpLastPduOrigin.setStatus('current')
dot1qPortRestrictedVlanRegistration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 116, 7, 1, 4, 7, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qPortRestrictedVlanRegistration.setStatus('current')
dot1sMst = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1))
dot1sMstTrapsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2))
dot1sMstTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3))
dot1sMstTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3), )
if mibBuilder.loadTexts: dot1sMstTable.setStatus('current')
dot1sMstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sMstContextId"))
if mibBuilder.loadTexts: dot1sMstEntry.setStatus('current')
dot1sMstContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1sMstContextId.setStatus('current')
dot1sSystemControl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("shutdown", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sSystemControl.setStatus('current')
dot1sModuleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sModuleStatus.setStatus('current')
dot1sMaxMstInstanceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMaxMstInstanceNumber.setStatus('current')
dot1sNoOfMstiSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sNoOfMstiSupported.setStatus('current')
dot1sMaxHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMaxHopCount.setStatus('current')
dot1sBrgAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sBrgAddress.setStatus('current')
dot1sCistRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 8), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistRoot.setStatus('current')
dot1sCistRegionalRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 9), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistRegionalRoot.setStatus('current')
dot1sCistRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistRootCost.setStatus('current')
dot1sCistRegionalRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistRegionalRootCost.setStatus('current')
dot1sCistRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistRootPort.setStatus('current')
dot1sCistBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistBridgePriority.setStatus('current')
dot1sCistBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 14), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistBridgeMaxAge.setStatus('current')
dot1sCistBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 15), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistBridgeForwardDelay.setStatus('current')
dot1sCistHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistHoldTime.setStatus('current')
dot1sCistMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 17), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistMaxAge.setStatus('current')
dot1sCistForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 18), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistForwardDelay.setStatus('current')
dot1sMstpUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstpUpCount.setStatus('current')
dot1sMstpDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstpDownCount.setStatus('current')
dot1sPathCostDefaultType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stp8021d1998", 1), ("stp8021t2001", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sPathCostDefaultType.setStatus('current')
dot1sTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sTrace.setStatus('current')
dot1sDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131071))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sDebug.setStatus('current')
dot1sForceProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stpCompatible", 0), ("rstp", 2), ("mstp", 3))).clone('mstp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sForceProtocolVersion.setStatus('current')
dot1sTxHoldCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sTxHoldCount.setStatus('current')
dot1sMstiConfigIdSel = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiConfigIdSel.setStatus('current')
dot1sMstiRegionName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiRegionName.setStatus('current')
dot1sMstiRegionVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiRegionVersion.setStatus('current')
dot1sMstiConfigDigest = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiConfigDigest.setStatus('current')
dot1sBufferOverFlowCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sBufferOverFlowCount.setStatus('current')
dot1sMemAllocFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMemAllocFailureCount.setStatus('current')
dot1sRegionConfigChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sRegionConfigChangeCount.setStatus('current')
dot1sCistBridgeRoleSelectionSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("initbridge", 0), ("roleselection", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistBridgeRoleSelectionSemState.setStatus('current')
dot1sCistTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 34), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistTimeSinceTopologyChange.setStatus('current')
dot1sCistTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistTopChanges.setStatus('current')
dot1sCistNewRootBridgeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistNewRootBridgeCount.setStatus('current')
dot1sCistHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 37), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistHelloTime.setStatus('current')
dot1sCistBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 38), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistBridgeHelloTime.setStatus('current')
dot1sCistDynamicPathcostCalculation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 39), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistDynamicPathcostCalculation.setStatus('current')
dot1sContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 3, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sContextName.setStatus('current')
dot1sMstiBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4), )
if mibBuilder.loadTexts: dot1sMstiBridgeTable.setStatus('current')
dot1sMstiBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sMstContextId"), (0, "AT-GS950-24-MIB", "dot1sMstiInstanceIndex"))
if mibBuilder.loadTexts: dot1sMstiBridgeEntry.setStatus('current')
dot1sMstiInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: dot1sMstiInstanceIndex.setStatus('current')
dot1sMstiBridgeRegionalRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 2), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiBridgeRegionalRoot.setStatus('current')
dot1sMstiBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 61440)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiBridgePriority.setStatus('current')
dot1sMstiRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiRootCost.setStatus('current')
dot1sMstiRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiRootPort.setStatus('current')
dot1sMstiTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiTimeSinceTopologyChange.setStatus('current')
dot1sMstiTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiTopChanges.setStatus('current')
dot1sMstiNewRootBridgeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiNewRootBridgeCount.setStatus('current')
dot1sMstiBridgeRoleSelectionSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("initbridge", 0), ("roleselection", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiBridgeRoleSelectionSemState.setStatus('current')
dot1sInstanceUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sInstanceUpCount.setStatus('current')
dot1sInstanceDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sInstanceDownCount.setStatus('current')
dot1sOldDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 4, 1, 12), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sOldDesignatedRoot.setStatus('current')
dot1sVlanInstanceMappingTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5), )
if mibBuilder.loadTexts: dot1sVlanInstanceMappingTable.setStatus('current')
dot1sVlanInstanceMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sMstContextId"), (0, "AT-GS950-24-MIB", "dot1sInstanceIndex"))
if mibBuilder.loadTexts: dot1sVlanInstanceMappingEntry.setStatus('current')
dot1sInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: dot1sInstanceIndex.setStatus('current')
dot1sMapVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMapVlanIndex.setStatus('current')
dot1sUnMapVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 3), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sUnMapVlanIndex.setStatus('current')
dot1sSetVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sSetVlanList.setStatus('current')
dot1sResetVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sResetVlanList.setStatus('current')
dot1sInstanceVlanMapped = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sInstanceVlanMapped.setStatus('current')
dot1sInstanceVlanMapped2k = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sInstanceVlanMapped2k.setStatus('current')
dot1sInstanceVlanMapped3k = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sInstanceVlanMapped3k.setStatus('current')
dot1sInstanceVlanMapped4k = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 5, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sInstanceVlanMapped4k.setStatus('current')
dot1sCistPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6), )
if mibBuilder.loadTexts: dot1sCistPortTable.setStatus('current')
dot1sCistPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sCistPort"))
if mibBuilder.loadTexts: dot1sCistPortEntry.setStatus('current')
dot1sCistPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dot1sCistPort.setStatus('current')
dot1sCistPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortPathCost.setStatus('current')
dot1sCistPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortPriority.setStatus('current')
dot1sCistPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortDesignatedRoot.setStatus('current')
dot1sCistPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortDesignatedBridge.setStatus('current')
dot1sCistPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortDesignatedPort.setStatus('current')
dot1sCistPortAdminP2P = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("forceTrue", 0), ("forceFalse", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortAdminP2P.setStatus('current')
dot1sCistPortOperP2P = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortOperP2P.setStatus('current')
dot1sCistPortAdminEdgeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortAdminEdgeStatus.setStatus('current')
dot1sCistPortOperEdgeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortOperEdgeStatus.setStatus('current')
dot1sCistPortProtocolMigration = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortProtocolMigration.setStatus('current')
dot1sCistPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 4), ("forwarding", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortState.setStatus('current')
dot1sCistForcePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistForcePortState.setStatus('current')
dot1sCistPortForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortForwardTransitions.setStatus('current')
dot1sCistPortRxMstBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRxMstBpduCount.setStatus('current')
dot1sCistPortRxRstBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRxRstBpduCount.setStatus('current')
dot1sCistPortRxConfigBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRxConfigBpduCount.setStatus('current')
dot1sCistPortRxTcnBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRxTcnBpduCount.setStatus('current')
dot1sCistPortTxMstBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortTxMstBpduCount.setStatus('current')
dot1sCistPortTxRstBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortTxRstBpduCount.setStatus('current')
dot1sCistPortTxConfigBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortTxConfigBpduCount.setStatus('current')
dot1sCistPortTxTcnBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortTxTcnBpduCount.setStatus('current')
dot1sCistPortInvalidMstBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortInvalidMstBpduRxCount.setStatus('current')
dot1sCistPortInvalidRstBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortInvalidRstBpduRxCount.setStatus('current')
dot1sCistPortInvalidConfigBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortInvalidConfigBpduRxCount.setStatus('current')
dot1sCistPortInvalidTcnBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortInvalidTcnBpduRxCount.setStatus('current')
dot1sCistPortTransmitSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("transmitinit", 0), ("transmitperiodic", 1), ("transmitconfig", 2), ("transmittcn", 3), ("transmitrstp", 4), ("idle", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortTransmitSemState.setStatus('current')
dot1sCistPortReceiveSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("discard", 0), ("receive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortReceiveSemState.setStatus('current')
dot1sCistPortProtMigrationSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("init", 0), ("sendrstp", 1), ("sendingrstp", 2), ("sendstp", 3), ("sendingstp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortProtMigrationSemState.setStatus('current')
dot1sCistProtocolMigrationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistProtocolMigrationCount.setStatus('current')
dot1sCistPortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortDesignatedCost.setStatus('current')
dot1sCistPortRegionalRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 32), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRegionalRoot.setStatus('current')
dot1sCistPortRegionalPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRegionalPathCost.setStatus('current')
dot1sCistSelectedPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("alternate", 1), ("backup", 2), ("root", 3), ("designated", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistSelectedPortRole.setStatus('current')
dot1sCistCurrentPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("alternate", 1), ("backup", 2), ("root", 3), ("designated", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistCurrentPortRole.setStatus('current')
dot1sCistPortInfoSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 0), ("aged", 1), ("update", 2), ("superiordesg", 3), ("repeatdesg", 4), ("inferiordesg", 5), ("notdesg", 6), ("current", 7), ("receive", 8), ("other", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortInfoSemState.setStatus('current')
dot1sCistPortRoleTransitionSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("init", 0), ("disableport", 1), ("disabledport", 2), ("rootport", 3), ("designatedport", 4), ("alternateport", 5), ("masterport", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortRoleTransitionSemState.setStatus('current')
dot1sCistPortStateTransitionSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discarding", 0), ("learning", 1), ("forwarding", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortStateTransitionSemState.setStatus('current')
dot1sCistPortTopologyChangeSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inactive", 0), ("learning", 1), ("detected", 2), ("active", 3), ("notifiedtcn", 4), ("notifiedtc", 5), ("propagating", 6), ("acknowledged", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortTopologyChangeSemState.setStatus('current')
dot1sCistPortHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 40), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortHelloTime.setStatus('current')
dot1sCistPortOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stpCompatible", 0), ("rstp", 2), ("mstp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortOperVersion.setStatus('current')
dot1sCistPortEffectivePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 42), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sCistPortEffectivePortState.setStatus('current')
dot1sCistPortAutoEdgeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 43), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortAutoEdgeStatus.setStatus('current')
dot1sCistPortRestrictedRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 44), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortRestrictedRole.setStatus('current')
dot1sCistPortRestrictedTCN = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 6, 1, 45), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sCistPortRestrictedTCN.setStatus('current')
dot1sMstiPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7), )
if mibBuilder.loadTexts: dot1sMstiPortTable.setStatus('current')
dot1sMstiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sMstiPort"), (0, "AT-GS950-24-MIB", "dot1sInstanceIndex"))
if mibBuilder.loadTexts: dot1sMstiPortEntry.setStatus('current')
dot1sMstiPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dot1sMstiPort.setStatus('current')
dot1sMstiPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiPortPathCost.setStatus('current')
dot1sMstiPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiPortPriority.setStatus('current')
dot1sMstiPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 4), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortDesignatedRoot.setStatus('current')
dot1sMstiPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 5), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortDesignatedBridge.setStatus('current')
dot1sMstiPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortDesignatedPort.setStatus('current')
dot1sMstiPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 4), ("forwarding", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortState.setStatus('current')
dot1sMstiForcePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstiForcePortState.setStatus('current')
dot1sMstiPortForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortForwardTransitions.setStatus('current')
dot1sMstiPortReceivedBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortReceivedBPDUs.setStatus('current')
dot1sMstiPortTransmittedBPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortTransmittedBPDUs.setStatus('current')
dot1sMstiPortInvalidBPDUsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortInvalidBPDUsRcvd.setStatus('current')
dot1sMstiPortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortDesignatedCost.setStatus('current')
dot1sMstiSelectedPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 0), ("alternate", 1), ("backup", 2), ("root", 3), ("designated", 4), ("master", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiSelectedPortRole.setStatus('current')
dot1sMstiCurrentPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 0), ("alternate", 1), ("backup", 2), ("root", 3), ("designated", 4), ("master", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiCurrentPortRole.setStatus('current')
dot1sMstiPortInfoSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 0), ("aged", 1), ("update", 2), ("superiordesg", 3), ("repeatdesg", 4), ("inferiordesg", 5), ("notdesg", 6), ("current", 7), ("receive", 8), ("other", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortInfoSemState.setStatus('current')
dot1sMstiPortRoleTransitionSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("init", 0), ("disableport", 1), ("disabledport", 2), ("rootport", 3), ("designatedport", 4), ("alternateport", 5), ("masterport", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortRoleTransitionSemState.setStatus('current')
dot1sMstiPortStateTransitionSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discarding", 0), ("learning", 1), ("forwarding", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortStateTransitionSemState.setStatus('current')
dot1sMstiPortTopologyChangeSemState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inactive", 0), ("learning", 1), ("detected", 2), ("active", 3), ("notifiedtcn", 4), ("notifiedtc", 5), ("propagating", 6), ("acknowledged", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortTopologyChangeSemState.setStatus('current')
dot1sMstiPortEffectivePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 1, 7, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sMstiPortEffectivePortState.setStatus('current')
dot1sMstSetGlobalTrapOption = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sMstSetGlobalTrapOption.setStatus('current')
dot1sGlobalErrTrapType = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("memfail", 1), ("bufffail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sGlobalErrTrapType.setStatus('current')
dot1sMstTrapsControlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 3), )
if mibBuilder.loadTexts: dot1sMstTrapsControlTable.setStatus('current')
dot1sMstTrapsControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sMstContextId"))
if mibBuilder.loadTexts: dot1sMstTrapsControlEntry.setStatus('current')
dot1sSetTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1sSetTraps.setStatus('current')
dot1sGenTrapType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sGenTrapType.setStatus('current')
dot1sPortTrapNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 4), )
if mibBuilder.loadTexts: dot1sPortTrapNotificationTable.setStatus('current')
dot1sPortTrapNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sPortTrapIndex"))
if mibBuilder.loadTexts: dot1sPortTrapNotificationEntry.setStatus('current')
dot1sPortTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: dot1sPortTrapIndex.setStatus('current')
dot1sPortMigrationType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sendstp", 0), ("sendrstp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sPortMigrationType.setStatus('current')
dot1sPktErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("protocolIdErr", 0), ("invalidBpdu", 1), ("configLengthErr", 2), ("tcnLengthErr", 3), ("rstpLengthErr", 4), ("maxAgeErr", 5), ("fwdDelayErr", 6), ("helloTimeErr", 7), ("mstpLengthErr", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sPktErrType.setStatus('current')
dot1sPktErrVal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sPktErrVal.setStatus('current')
dot1sPortRoleTrapNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 5), )
if mibBuilder.loadTexts: dot1sPortRoleTrapNotificationTable.setStatus('current')
dot1sPortRoleTrapNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1sPortTrapIndex"), (0, "AT-GS950-24-MIB", "dot1sMstiInstanceIndex"))
if mibBuilder.loadTexts: dot1sPortRoleTrapNotificationEntry.setStatus('current')
dot1sPortRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabledPort", 0), ("alternatePort", 1), ("backupPort", 2), ("rootPort", 3), ("designatedPort", 4), ("masterport", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sPortRoleType.setStatus('current')
dot1sOldRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabledPort", 0), ("alternatePort", 1), ("backupPort", 2), ("rootPort", 3), ("designatedPort", 4), ("masterport", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1sOldRoleType.setStatus('current')
dot1sTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0))
dot1sGlobalErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 1)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sGlobalErrTrapType"))
if mibBuilder.loadTexts: dot1sGlobalErrTrap.setStatus('current')
dot1sGenTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 2)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sContextName"), ("AT-GS950-24-MIB", "dot1sGenTrapType"))
if mibBuilder.loadTexts: dot1sGenTrap.setStatus('current')
dot1sNewRootTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 3)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sContextName"), ("AT-GS950-24-MIB", "dot1sOldDesignatedRoot"), ("AT-GS950-24-MIB", "dot1sMstiBridgeRegionalRoot"))
if mibBuilder.loadTexts: dot1sNewRootTrap.setStatus('current')
dot1sTopologyChgTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 4)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sContextName"), ("AT-GS950-24-MIB", "dot1sMstiTopChanges"))
if mibBuilder.loadTexts: dot1sTopologyChgTrap.setStatus('current')
dot1sProtocolMigrationTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 5)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sContextName"), ("AT-GS950-24-MIB", "dot1sForceProtocolVersion"), ("AT-GS950-24-MIB", "dot1sPortMigrationType"))
if mibBuilder.loadTexts: dot1sProtocolMigrationTrap.setStatus('current')
dot1sInvalidBpduRxdTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 6)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sContextName"), ("AT-GS950-24-MIB", "dot1sPktErrType"), ("AT-GS950-24-MIB", "dot1sPktErrVal"))
if mibBuilder.loadTexts: dot1sInvalidBpduRxdTrap.setStatus('current')
dot1sRegionConfigChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 7)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sContextName"), ("AT-GS950-24-MIB", "dot1sMstiConfigIdSel"), ("AT-GS950-24-MIB", "dot1sMstiRegionName"), ("AT-GS950-24-MIB", "dot1sMstiRegionVersion"), ("AT-GS950-24-MIB", "dot1sMstiConfigDigest"))
if mibBuilder.loadTexts: dot1sRegionConfigChangeTrap.setStatus('current')
dot1sNewPortRoleTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 118, 3, 0, 8)).setObjects(("AT-GS950-24-MIB", "dot1sBrgAddress"), ("AT-GS950-24-MIB", "dot1sPortRoleType"), ("AT-GS950-24-MIB", "dot1sOldRoleType"))
if mibBuilder.loadTexts: dot1sNewPortRoleTrap.setStatus('current')
dot1wRst = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1))
dot1wRstTrapsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2))
dot1wRstTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3))
dot1wRstTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3), )
if mibBuilder.loadTexts: dot1wRstTable.setStatus('current')
dot1wRstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1wRstContextId"))
if mibBuilder.loadTexts: dot1wRstEntry.setStatus('current')
dot1wRstContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1wRstContextId.setStatus('current')
dot1wSystemControl = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("shutdown", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wSystemControl.setStatus('current')
dot1wModuleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wModuleStatus.setStatus('current')
dot1wTraceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wTraceOption.setStatus('current')
dot1wDebugOption = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 262143))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wDebugOption.setStatus('current')
dot1wRstpUpCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wRstpUpCount.setStatus('current')
dot1wRstpDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wRstpDownCount.setStatus('current')
dot1wBufferFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wBufferFailureCount.setStatus('current')
dot1wMemAllocFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wMemAllocFailureCount.setStatus('current')
dot1wNewRootIdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wNewRootIdCount.setStatus('current')
dot1wPortRoleSelSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("initbridge", 0), ("roleselection", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRoleSelSmState.setStatus('current')
dot1wOldDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 12), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wOldDesignatedRoot.setStatus('current')
dot1wDynamicPathcostCalculation = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wDynamicPathcostCalculation.setStatus('current')
dot1wContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wContextName.setStatus('current')
dot1wPortExtTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4), )
if mibBuilder.loadTexts: dot1wPortExtTable.setStatus('current')
dot1wPortExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1wPort"))
if mibBuilder.loadTexts: dot1wPortExtEntry.setStatus('current')
dot1wPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: dot1wPort.setStatus('current')
dot1wPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabledPort", 0), ("alternatePort", 1), ("backupPort", 2), ("rootPort", 3), ("designatedPort", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRole.setStatus('current')
dot1wPortOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("stpCompatible", 0), ("rstp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortOperVersion.setStatus('current')
dot1wPortInfoSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("disabled", 0), ("aged", 1), ("update", 2), ("superior", 3), ("repeat", 4), ("notdesignated", 5), ("present", 6), ("receive", 7), ("inferiordesignated", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortInfoSmState.setStatus('current')
dot1wPortMigSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("checkingrstp", 0), ("selectingstp", 1), ("sensing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortMigSmState.setStatus('current')
dot1wPortRoleTransSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("init", 0), ("disableport", 1), ("disabledport", 2), ("rootport", 3), ("designatedport", 4), ("backupport", 5), ("rootproposed", 6), ("rootagreed", 7), ("reroot", 8), ("rootforward", 9), ("rootlearn", 10), ("rerooted", 11), ("designatedpropose", 12), ("designatedsynced", 13), ("designatedretired", 14), ("designatedforward", 15), ("designatedlearn", 16), ("designatedlisten", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRoleTransSmState.setStatus('current')
dot1wPortStateTransSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discarding", 0), ("learning", 1), ("forwarding", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortStateTransSmState.setStatus('current')
dot1wPortTopoChSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("inactive", 0), ("learning", 1), ("detected", 2), ("active", 3), ("notifiedtcn", 4), ("notifiedtc", 5), ("propagating", 6), ("acknowledged", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortTopoChSmState.setStatus('current')
dot1wPortTxSmState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("transmitinit", 0), ("transmitperiodic", 1), ("transmitconfig", 2), ("transmittcn", 3), ("transmitrstp", 4), ("idle", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortTxSmState.setStatus('current')
dot1wPortRxRstBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRxRstBpduCount.setStatus('current')
dot1wPortRxConfigBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRxConfigBpduCount.setStatus('current')
dot1wPortRxTcnBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRxTcnBpduCount.setStatus('current')
dot1wPortTxRstBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortTxRstBpduCount.setStatus('current')
dot1wPortTxConfigBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortTxConfigBpduCount.setStatus('current')
dot1wPortTxTcnBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortTxTcnBpduCount.setStatus('current')
dot1wPortInvalidRstBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortInvalidRstBpduRxCount.setStatus('current')
dot1wPortInvalidConfigBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortInvalidConfigBpduRxCount.setStatus('current')
dot1wPortInvalidTcnBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortInvalidTcnBpduRxCount.setStatus('current')
dot1wPortProtocolMigrationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortProtocolMigrationCount.setStatus('current')
dot1wPortEffectivePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortEffectivePortState.setStatus('current')
dot1wPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wPortAutoEdge.setStatus('current')
dot1wPortRestrictedRole = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wPortRestrictedRole.setStatus('current')
dot1wPortRestrictedTCN = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 1, 4, 1, 23), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wPortRestrictedTCN.setStatus('current')
dot1wSetGlobalTraps = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wSetGlobalTraps.setStatus('current')
dot1wGlobalErrTrapType = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("memfail", 1), ("bufffail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wGlobalErrTrapType.setStatus('current')
dot1wRstTrapsControlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 3), )
if mibBuilder.loadTexts: dot1wRstTrapsControlTable.setStatus('current')
dot1wRstTrapsControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1wRstContextId"))
if mibBuilder.loadTexts: dot1wRstTrapsControlEntry.setStatus('current')
dot1wSetTraps = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1wSetTraps.setStatus('current')
dot1wGenTrapType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wGenTrapType.setStatus('current')
dot1wPortTrapNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4), )
if mibBuilder.loadTexts: dot1wPortTrapNotificationTable.setStatus('current')
dot1wPortTrapNotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1wPortTrapIndex"))
if mibBuilder.loadTexts: dot1wPortTrapNotificationEntry.setStatus('current')
dot1wPortTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: dot1wPortTrapIndex.setStatus('current')
dot1wPortMigrationType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sendstp", 0), ("sendrstp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortMigrationType.setStatus('current')
dot1wPktErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("protocolIdErr", 0), ("invalidBpdu", 1), ("configLengthErr", 2), ("tcnLengthErr", 3), ("rstpLengthErr", 4), ("maxAgeErr", 5), ("fwdDelayErr", 6), ("helloTimeErr", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPktErrType.setStatus('current')
dot1wPktErrVal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPktErrVal.setStatus('current')
dot1wPortRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabledPort", 0), ("alternatePort", 1), ("backupPort", 2), ("rootPort", 3), ("designatedPort", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wPortRoleType.setStatus('current')
dot1wOldRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabledPort", 0), ("alternatePort", 1), ("backupPort", 2), ("rootPort", 3), ("designatedPort", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1wOldRoleType.setStatus('current')
dot1wTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0))
dot1wGlobalErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 1)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wGlobalErrTrapType"))
if mibBuilder.loadTexts: dot1wGlobalErrTrap.setStatus('current')
dot1wGenTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 2)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wContextName"), ("AT-GS950-24-MIB", "dot1wGenTrapType"))
if mibBuilder.loadTexts: dot1wGenTrap.setStatus('current')
dot1wNewRootTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 3)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wContextName"), ("AT-GS950-24-MIB", "dot1wOldDesignatedRoot"), ("AT-GS950-24-MIB", "dot1dStpDesignatedRoot"))
if mibBuilder.loadTexts: dot1wNewRootTrap.setStatus('current')
dot1wTopologyChgTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 4)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wContextName"))
if mibBuilder.loadTexts: dot1wTopologyChgTrap.setStatus('current')
dot1wProtocolMigrationTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 5)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wContextName"), ("AT-GS950-24-MIB", "dot1dStpVersion"), ("AT-GS950-24-MIB", "dot1wPortMigrationType"))
if mibBuilder.loadTexts: dot1wProtocolMigrationTrap.setStatus('current')
dot1wInvalidBpduRxdTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 6)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wContextName"), ("AT-GS950-24-MIB", "dot1wPktErrType"), ("AT-GS950-24-MIB", "dot1wPktErrVal"))
if mibBuilder.loadTexts: dot1wInvalidBpduRxdTrap.setStatus('current')
dot1wNewPortRoleTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 119, 3, 0, 7)).setObjects(("AT-GS950-24-MIB", "dot1dBaseBridgeAddress"), ("AT-GS950-24-MIB", "dot1wPortRoleType"), ("AT-GS950-24-MIB", "dot1wOldRoleType"))
if mibBuilder.loadTexts: dot1wNewPortRoleTrap.setStatus('current')
l2Dot1qVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1))
portBaseVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3))
portBaseStatic = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4))
dot1qVlanGlobalTrace = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qVlanGlobalTrace.setStatus('current')
dot1qVlanGlobalsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2), )
if mibBuilder.loadTexts: dot1qVlanGlobalsTable.setStatus('current')
dot1qVlanGlobalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dot1qVlanGlobalsContextId"))
if mibBuilder.loadTexts: dot1qVlanGlobalsEntry.setStatus('current')
dot1qVlanGlobalsContextId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: dot1qVlanGlobalsContextId.setStatus('current')
dot1qGarpShutdownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qGarpShutdownStatus.setStatus('current')
dot1qVlanDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 524287))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qVlanDebug.setStatus('current')
dot1qVlanLearningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ivl", 1), ("svl", 2))).clone('ivl')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1qVlanLearningMode.setStatus('current')
dot1qVlanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1, 10), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qVlanOperStatus.setStatus('current')
dot1qGvrpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 1, 2, 1, 11), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot1qGvrpOperStatus.setStatus('current')
portBaseVlanEnablePerPort = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 1), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseVlanEnablePerPort.setStatus('current')
portBaseVlanCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2), )
if mibBuilder.loadTexts: portBaseVlanCurrentTable.setStatus('current')
tabPortBaseVlanCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "portBaseVlanIndex"))
if mibBuilder.loadTexts: tabPortBaseVlanCurrentEntry.setStatus('current')
portBaseVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: portBaseVlanIndex.setStatus('current')
portBaseVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseVlanName.setStatus('current')
portBaseVlanCurrentEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseVlanCurrentEgressPorts.setStatus('current')
portBaseVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("permanent", 2), ("dynamicGvrp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseVlanStatus.setStatus('current')
portBaseVlanCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1, 5), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseVlanCreationTime.setStatus('current')
portBaseVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 3, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portBaseVlanRowStatus.setStatus('current')
portBaseStaticUnicastTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1), )
if mibBuilder.loadTexts: portBaseStaticUnicastTable.setStatus('current')
tabPortBaseStaticUnicastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "portBaseStaticUnicastIndex"))
if mibBuilder.loadTexts: tabPortBaseStaticUnicastEntry.setStatus('current')
portBaseStaticUnicastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: portBaseStaticUnicastIndex.setStatus('current')
portBaseStaticUnicastVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticUnicastVlanIndex.setStatus('current')
portBaseStaticUnicastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticUnicastAddress.setStatus('current')
portBaseStaticUnicastAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticUnicastAllowedToGoTo.setStatus('current')
portBaseStaticUnicastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticUnicastStatus.setStatus('current')
portBaseStaticUnicastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portBaseStaticUnicastRowStatus.setStatus('current')
portBaseStaticMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2), )
if mibBuilder.loadTexts: portBaseStaticMulticastTable.setStatus('current')
tabPortBaseStaticMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "portBaseStaticMulticastIndex"))
if mibBuilder.loadTexts: tabPortBaseStaticMulticastEntry.setStatus('current')
portBaseStaticMulticastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: portBaseStaticMulticastIndex.setStatus('current')
portBaseStaticMulticastVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticMulticastVlanIndex.setStatus('current')
portBaseStaticMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticMulticastAddress.setStatus('current')
portBaseStaticMulticastStaticEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticMulticastStaticEgressPorts.setStatus('current')
portBaseStaticMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permanent", 3), ("deleteOnReset", 4), ("deleteOnTimeout", 5))).clone('permanent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portBaseStaticMulticastStatus.setStatus('current')
portBaseStaticMulticastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 120, 4, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portBaseStaticMulticastRowStatus.setStatus('current')
fsLldpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 1))
fsLldpTLV = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2))
fsLldpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 3))
fsLldpNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4))
fsLldpSystemControl = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("shutdownInProgress", 2), ("shutdown", 3))).clone('start')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLldpSystemControl.setStatus('current')
fsLldpModuleStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLldpModuleStatus.setStatus('current')
fsLldpTraceInput = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 280)).clone('critical')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLldpTraceInput.setStatus('current')
fsLldpTraceOption = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 1, 4), Integer32().clone(8192)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLldpTraceOption.setStatus('current')
fsLldpLocChassisIdSubtype = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("chassiscomp", 1), ("ifalias", 2), ("portcomp", 3), ("macaddr", 4), ("nwaddr", 5), ("ifname", 6), ("local", 7))).clone('macaddr')).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLldpLocChassisIdSubtype.setStatus('current')
fsLldpLocChassisId = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLldpLocChassisId.setStatus('current')
fsLldpLocPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 3), )
if mibBuilder.loadTexts: fsLldpLocPortTable.setStatus('current')
fsLldpLocPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 3, 1), ).setIndexNames((0, "LLDP-MIB", "lldpLocPortNum"))
if mibBuilder.loadTexts: fsLldpLocPortEntry.setStatus('current')
fsLldpLocPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ifalias", 1), ("portcomp", 2), ("macaddr", 3), ("nwaddr", 4), ("ifname", 5), ("agentcircuitid", 6), ("local", 7))).clone('ifalias')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLldpLocPortIdSubtype.setStatus('current')
fsLldpLocPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLldpLocPortId.setStatus('current')
fsLldpPortConfigNotificationType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("remTabChg", 1), ("misCfg", 2), ("remTabChgAndMisCfg", 3))).clone('misCfg')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsLldpPortConfigNotificationType.setStatus('current')
fsLldpMemAllocFailure = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLldpMemAllocFailure.setStatus('current')
fsLldpInputQOverFlows = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLldpInputQOverFlows.setStatus('current')
fsLldpStatsRemTablesUpdates = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 3, 3), ZeroBasedCounter32()).setUnits('table entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: fsLldpStatsRemTablesUpdates.setStatus('current')
fsLldpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0))
fsLldpRemTablesChange = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 1)).setObjects(("LLDP-MIB", "lldpStatsRemTablesInserts"), ("LLDP-MIB", "lldpStatsRemTablesDeletes"), ("LLDP-MIB", "lldpStatsRemTablesDrops"), ("LLDP-MIB", "lldpStatsRemTablesAgeouts"), ("AT-GS950-24-MIB", "fsLldpStatsRemTablesUpdates"))
if mibBuilder.loadTexts: fsLldpRemTablesChange.setStatus('current')
fsLldpExceedsMaxFrameSize = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 2)).setObjects(("LLDP-MIB", "lldpLocPortId"))
if mibBuilder.loadTexts: fsLldpExceedsMaxFrameSize.setStatus('current')
fsLldpDupChasisId = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 3)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"))
if mibBuilder.loadTexts: fsLldpDupChasisId.setStatus('current')
fsLldpDupSystemName = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 4)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-MIB", "lldpRemSysName"))
if mibBuilder.loadTexts: fsLldpDupSystemName.setStatus('current')
fsLldpDupManagmentAddress = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 5)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-MIB", "lldpRemManAddr"))
if mibBuilder.loadTexts: fsLldpDupManagmentAddress.setStatus('current')
fsLldpMisConfigPortVlanID = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 6)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT1-MIB", "lldpXdot1RemPortVlanId"))
if mibBuilder.loadTexts: fsLldpMisConfigPortVlanID.setStatus('current')
fsLldpMisConfigPortProtoVlanID = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 7)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT1-MIB", "lldpXdot1RemProtoVlanSupported"))
if mibBuilder.loadTexts: fsLldpMisConfigPortProtoVlanID.setStatus('current')
fsLldpMisConfigVlanName = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 8)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT1-MIB", "lldpXdot1RemVlanName"))
if mibBuilder.loadTexts: fsLldpMisConfigVlanName.setStatus('current')
fsLldpMisConfigProtocolIdentity = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 9)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT1-MIB", "lldpXdot1RemProtocolId"))
if mibBuilder.loadTexts: fsLldpMisConfigProtocolIdentity.setStatus('current')
fsLldpMisConfigLinkAggStatus = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 10)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT3-MIB", "lldpXdot3RemLinkAggStatus"))
if mibBuilder.loadTexts: fsLldpMisConfigLinkAggStatus.setStatus('current')
fsLldpMisConfigPowerMDI = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 11)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT3-MIB", "lldpXdot3RemPowerClass"))
if mibBuilder.loadTexts: fsLldpMisConfigPowerMDI.setStatus('current')
fsLldpMisConfigMaxFrameSize = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 12)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT3-MIB", "lldpXdot3RemMaxFrameSize"))
if mibBuilder.loadTexts: fsLldpMisConfigMaxFrameSize.setStatus('current')
fsLldpMisConfigOperMauType = NotificationType((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 158, 4, 0, 13)).setObjects(("LLDP-MIB", "lldpRemChassisId"), ("LLDP-MIB", "lldpRemPortId"), ("LLDP-EXT-DOT3-MIB", "lldpXdot3RemPortOperMauType"))
if mibBuilder.loadTexts: fsLldpMisConfigOperMauType.setStatus('current')
voicevlanSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1))
voicevlanOUI = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2))
voiceVlanMode = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceVlanMode.setStatus('current')
voiceVlanId = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceVlanId.setStatus('current')
voiceVlanTimeout = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceVlanTimeout.setStatus('current')
voiceVlanPriority = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("highest", 0), ("high", 1), ("medium", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voiceVlanPriority.setStatus('current')
voicevlanPortControlTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 6), )
if mibBuilder.loadTexts: voicevlanPortControlTable.setStatus('current')
voicevlanPortControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 6, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "voicevlanPortControlIndex"))
if mibBuilder.loadTexts: voicevlanPortControlEntry.setStatus('current')
voicevlanPortControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 6, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voicevlanPortControlIndex.setStatus('current')
voicevlanPortAutoDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voicevlanPortAutoDetection.setStatus('current')
voicevlanPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("dynamic", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: voicevlanPortState.setStatus('current')
voicevlanOUITable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2, 1), )
if mibBuilder.loadTexts: voicevlanOUITable.setStatus('current')
voicevlanOUIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "voicevlanOUITelephonyOUI"))
if mibBuilder.loadTexts: voicevlanOUIEntry.setStatus('current')
voicevlanOUITelephonyOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voicevlanOUITelephonyOUI.setStatus('current')
voicevlanOUIDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voicevlanOUIDescription.setStatus('current')
voicevlanOUIMask = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voicevlanOUIMask.setStatus('current')
voicevlanOUIStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 163, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: voicevlanOUIStatus.setStatus('current')
trafficSegTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 165, 1), )
if mibBuilder.loadTexts: trafficSegTable.setStatus('current')
trafficSegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 165, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "trafficSegIfIndex"))
if mibBuilder.loadTexts: trafficSegEntry.setStatus('current')
trafficSegIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 165, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trafficSegIfIndex.setStatus('current')
trafficSegMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 165, 1, 1, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trafficSegMemberList.setStatus('current')
atiAcl = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1))
atiMacFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 2))
atiAclClassifierTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1), )
if mibBuilder.loadTexts: atiAclClassifierTable.setStatus('current')
atiAclClassifierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiAclClassifierIndex"))
if mibBuilder.loadTexts: atiAclClassifierEntry.setStatus('current')
atiAclClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiAclClassifierIndex.setStatus('current')
atiAclClassifierSrcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierSrcMac.setStatus('current')
atiAclClassifierSrcMacMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierSrcMacMaskLen.setStatus('current')
atiAclClassifierDstMac = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierDstMac.setStatus('current')
atiAclClassifierDstMacMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierDstMacMaskLen.setStatus('current')
atiAclClassifierVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierVlanId.setStatus('current')
atiAclClassifierCos = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierCos.setStatus('current')
atiAclClassifierEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierEtherType.setStatus('current')
atiAclClassifierSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierSrcIp.setStatus('current')
atiAclClassifierSrcIpMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierSrcIpMaskLen.setStatus('current')
atiAclClassifierDstIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierDstIp.setStatus('current')
atiAclClassifierDstIpMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierDstIpMaskLen.setStatus('current')
atiAclClassifierDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierDscp.setStatus('current')
atiAclClassifierProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierProtocol.setStatus('current')
atiAclClassifierSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierSrcPort.setStatus('current')
atiAclClassifierDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclClassifierDstPort.setStatus('current')
atiAclClassifierRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 1, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiAclClassifierRowStatus.setStatus('current')
atiAclProfileActionTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 2), )
if mibBuilder.loadTexts: atiAclProfileActionTable.setStatus('current')
atiAclProfileActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 2, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiAclProfileActionIndex"))
if mibBuilder.loadTexts: atiAclProfileActionEntry.setStatus('current')
atiAclProfileActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 72))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiAclProfileActionIndex.setStatus('current')
atiAclProfileActionCos = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclProfileActionCos.setStatus('current')
atiAclProfileActionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclProfileActionDscp.setStatus('current')
atiAclProfileActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiAclProfileActionRowStatus.setStatus('current')
atiAclInProfileActionTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 3), )
if mibBuilder.loadTexts: atiAclInProfileActionTable.setStatus('current')
atiAclInProfileActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 3, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiAclInProfileActionIndex"))
if mibBuilder.loadTexts: atiAclInProfileActionEntry.setStatus('current')
atiAclInProfileActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiAclInProfileActionIndex.setStatus('current')
atiAclInProfileActionPermitDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclInProfileActionPermitDeny.setStatus('current')
atiAclInProfileActionActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 72))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclInProfileActionActionId.setStatus('current')
atiAclInProfileActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiAclInProfileActionRowStatus.setStatus('current')
atiAclOutProfileActionTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4), )
if mibBuilder.loadTexts: atiAclOutProfileActionTable.setStatus('current')
atiAclOutProfileActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiAclOutProfileActionIndex"))
if mibBuilder.loadTexts: atiAclOutProfileActionEntry.setStatus('current')
atiAclOutProfileActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiAclOutProfileActionIndex.setStatus('current')
atiAclOutProfileActionPermitDeny = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclOutProfileActionPermitDeny.setStatus('current')
atiAclOutProfileActionCommittedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclOutProfileActionCommittedRate.setStatus('current')
atiAclOutProfileActionBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclOutProfileActionBurstSize.setStatus('current')
atiAclOutProfileActionActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 72))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclOutProfileActionActionId.setStatus('current')
atiAclOutProfileActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiAclOutProfileActionRowStatus.setStatus('current')
atiAclPortListTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 5), )
if mibBuilder.loadTexts: atiAclPortListTable.setStatus('current')
atiAclPortListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 5, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiAclPortListIndex"))
if mibBuilder.loadTexts: atiAclPortListEntry.setStatus('current')
atiAclPortListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiAclPortListIndex.setStatus('current')
atiAclPortListString = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclPortListString.setStatus('current')
atiAclPortListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiAclPortListRowStatus.setStatus('current')
atiAclPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6), )
if mibBuilder.loadTexts: atiAclPolicyTable.setStatus('current')
atiAclPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiAclPolicyIndex"))
if mibBuilder.loadTexts: atiAclPolicyEntry.setStatus('current')
atiAclPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiAclPolicyIndex.setStatus('current')
atiAclPolicyClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclPolicyClassifierIndex.setStatus('current')
atiAclPolicySequence = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclPolicySequence.setStatus('current')
atiAclPolicyInProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclPolicyInProfileIndex.setStatus('current')
atiAclPolicyOutProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclPolicyOutProfileIndex.setStatus('current')
atiAclPolicyPortListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiAclPolicyPortListIndex.setStatus('current')
atiAclPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiAclPolicyRowStatus.setStatus('current')
atiDstMacFilterTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 2, 1), )
if mibBuilder.loadTexts: atiDstMacFilterTable.setStatus('current')
atiDstMacFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 2, 1, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "atiDstMacFilterIndex"))
if mibBuilder.loadTexts: atiDstMacFilterEntry.setStatus('current')
atiDstMacFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiDstMacFilterIndex.setStatus('current')
atiDstMacFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 2, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiDstMacFilterAddress.setStatus('current')
atiDstMacFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 166, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atiDstMacFilterRowStatus.setStatus('current')
dhcpSnoopSystemStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopSystemStatus.setStatus('current')
dhcpSnoopOption82Insertion = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopOption82Insertion.setStatus('current')
dhcpSnoopPassThroughOption82 = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopPassThroughOption82.setStatus('current')
dhcpSnoopVerifyMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopVerifyMACAddress.setStatus('current')
dhcpSnoopBackupDatabase = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBackupDatabase.setStatus('current')
dhcpSnoopBackupDatabaseInterval = MibScalar((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(600, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBackupDatabaseInterval.setStatus('current')
dhcpSnoopVLANSettingTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 7), )
if mibBuilder.loadTexts: dhcpSnoopVLANSettingTable.setStatus('current')
dhcpSnoopVLANSettingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 7, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dhcpSnoopVLANSettingVID"))
if mibBuilder.loadTexts: dhcpSnoopVLANSettingEntry.setStatus('current')
dhcpSnoopVLANSettingVID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSnoopVLANSettingVID.setStatus('current')
dhcpSnoopVLANSettingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopVLANSettingStatus.setStatus('current')
dhcpSnoopPortSettingTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 8), )
if mibBuilder.loadTexts: dhcpSnoopPortSettingTable.setStatus('current')
dhcpSnoopPortSettingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 8, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dhcpSnoopPortSettingIndex"))
if mibBuilder.loadTexts: dhcpSnoopPortSettingEntry.setStatus('current')
dhcpSnoopPortSettingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSnoopPortSettingIndex.setStatus('current')
dhcpSnoopPortSettingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("untrusted", 0), ("trusted", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopPortSettingStatus.setStatus('current')
dhcpSnoopBindindDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9), )
if mibBuilder.loadTexts: dhcpSnoopBindindDatabaseTable.setStatus('current')
dhcpSnoopBindindDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1), ).setIndexNames((0, "AT-GS950-24-MIB", "dhcpSnoopBindindDBMacAddress"))
if mibBuilder.loadTexts: dhcpSnoopBindindDatabaseEntry.setStatus('current')
dhcpSnoopBindindDBMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSnoopBindindDBMacAddress.setStatus('current')
dhcpSnoopBindindDBVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBindindDBVLANID.setStatus('current')
dhcpSnoopBindindDBIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBindindDBIPAddress.setStatus('current')
dhcpSnoopBindindDBPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBindindDBPortNumber.setStatus('current')
dhcpSnoopBindindDBType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynamic", 0), ("static", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBindindDBType.setStatus('current')
dhcpSnoopBindindDBLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpSnoopBindindDBLeaseTime.setStatus('current')
dhcpSnoopBindindDBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 1, 4, 167, 181, 9, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpSnoopBindindDBRowStatus.setStatus('current')
mibBuilder.exportSymbols("AT-GS950-24-MIB", sysSntpPollInterval=sysSntpPollInterval, sysDscpType30=sysDscpType30, sysSnoopQuerierQueryInterval=sysSnoopQuerierQueryInterval, dot1wPortRxRstBpduCount=dot1wPortRxRstBpduCount, trafficSegMemberList=trafficSegMemberList, dhcpSnoopBindindDBVLANID=dhcpSnoopBindindDBVLANID, dot1qGvrpOperStatus=dot1qGvrpOperStatus, dot1sCistPortTable=dot1sCistPortTable, dot1qBase=dot1qBase, sysSnmpsnmpCommunityStatus=sysSnmpsnmpCommunityStatus, sysSnoopInstanceConfigTable=sysSnoopInstanceConfigTable, dot1dPortDefaultUserPriority=dot1dPortDefaultUserPriority, dot1qVlanStaticPort=dot1qVlanStaticPort, sysLaPortSelectAggregator=sysLaPortSelectAggregator, dot1qPortRestrictedVlanRegistration=dot1qPortRestrictedVlanRegistration, sysDscpType15=sysDscpType15, sysDscpType48=sysDscpType48, sysDscpType04=sysDscpType04, dot1dStpPortEntry=dot1dStpPortEntry, L2snmpLevel=L2snmpLevel, dot1sInstanceVlanMapped=dot1sInstanceVlanMapped, dot1sMstiConfigDigest=dot1sMstiConfigDigest, sysMirrorCtrlIndex=sysMirrorCtrlIndex, sysDscpType06=sysDscpType06, sysHttpStatus=sysHttpStatus, dot1sCistHelloTime=dot1sCistHelloTime, dot1sCistPortRegionalPathCost=dot1sCistPortRegionalPathCost, dot1dTpPortInDiscards=dot1dTpPortInDiscards, sysLaTraceOption=sysLaTraceOption, dot1sRegionConfigChangeTrap=dot1sRegionConfigChangeTrap, dot1dTrafficClassTable=dot1dTrafficClassTable, dot1sProtocolMigrationTrap=dot1sProtocolMigrationTrap, sysLBDCtrlIndex=sysLBDCtrlIndex, dot1sInstanceVlanMapped4k=dot1sInstanceVlanMapped4k, dot1sMstTrapsControl=dot1sMstTrapsControl, dot1sGenTrap=dot1sGenTrap, sysDscpType57=sysDscpType57, sysLaActorSystemID=sysLaActorSystemID, dot1dBasePortDelayExceededDiscards=dot1dBasePortDelayExceededDiscards, sysPortCtrlEAPPassThrough=sysPortCtrlEAPPassThrough, dot1qTpFdbPw=dot1qTpFdbPw, sysRadiusExtServerMaximumRetransmission=sysRadiusExtServerMaximumRetransmission, dot1dCompliances=dot1dCompliances, dot1sTrace=dot1sTrace, sysSslCiphers=sysSslCiphers, sysSnoopStatsInstId=sysSnoopStatsInstId, InetAddressIPv6=InetAddressIPv6, fsLldpMisConfigLinkAggStatus=fsLldpMisConfigLinkAggStatus, sysPortSecurityIndex=sysPortSecurityIndex, ifIpAddrAllocMethod=ifIpAddrAllocMethod, ifIpForwardingEnable=ifIpForwardingEnable, dot1sCistPortProtocolMigration=dot1sCistPortProtocolMigration, dot1dStpForwardDelay=dot1dStpForwardDelay, dot1qVlanStaticName=dot1qVlanStaticName, dot1wRstpUpCount=dot1wRstpUpCount, sysPnacGuestVlanTable=sysPnacGuestVlanTable, voicevlanOUI=voicevlanOUI, dot1wPortTrapIndex=dot1wPortTrapIndex, dot1wPortRole=dot1wPortRole, ifResetMgmtVlanList=ifResetMgmtVlanList, sysSnoopVlanFilterEntry=sysSnoopVlanFilterEntry, sysPnacPaeSystem=sysPnacPaeSystem, dot1dAccessPriorityGroup=dot1dAccessPriorityGroup, dot1sInstanceDownCount=dot1sInstanceDownCount, dot1dTpTable=dot1dTpTable, dot1sMstiPortEntry=dot1sMstiPortEntry, portBaseStatic=portBaseStatic, dot1dStpPortProtocolMigration=dot1dStpPortProtocolMigration, fsLldpLocPortId=fsLldpLocPortId, sysSnmpGroupStatus=sysSnmpGroupStatus, topologyChange=topologyChange, dot1sModuleStatus=dot1sModuleStatus, sysSnmpViewTreeEntry=sysSnmpViewTreeEntry, dhcpSnoopPortSettingTable=dhcpSnoopPortSettingTable, trafficSeg=trafficSeg, sysConfigSaveStatus=sysConfigSaveStatus, fsLldpTraceOption=fsLldpTraceOption, dot1wPortTxRstBpduCount=dot1wPortTxRstBpduCount, dot1wPortEffectivePortState=dot1wPortEffectivePortState, dot1sMstiRegionName=dot1sMstiRegionName, l2Rmon=l2Rmon, sysDfsMeter=sysDfsMeter, sysSnoopVlanMcastMacFwdInstId=sysSnoopVlanMcastMacFwdInstId, fsLldpExceedsMaxFrameSize=fsLldpExceedsMaxFrameSize, atiAclClassifierDscp=atiAclClassifierDscp, dot1dSr=dot1dSr, sysSntpPrimarySrvAddr=sysSntpPrimarySrvAddr, LacpState=LacpState, dot1dTpFdbAddress=dot1dTpFdbAddress, dot1qVlanEgressPortTable=dot1qVlanEgressPortTable, dot1dStpHelloTime=dot1dStpHelloTime, dot1sMstiPortDesignatedCost=dot1sMstiPortDesignatedCost, sysDfsMultiFieldClfrId=sysDfsMultiFieldClfrId, dot1sMstiBridgeEntry=dot1sMstiBridgeEntry, dot1qTpFdbPort=dot1qTpFdbPort, dot1sInstanceVlanMapped3k=dot1sInstanceVlanMapped3k, dot1wOldDesignatedRoot=dot1wOldDesignatedRoot, dot1qPortGvrpLastPduOrigin=dot1qPortGvrpLastPduOrigin, dhcpSnoopVLANSettingVID=dhcpSnoopVLANSettingVID, dot1dStaticAllowedToGoEntry=dot1dStaticAllowedToGoEntry, sysSnoopStats=sysSnoopStats, sysDscpMIBObjects=sysDscpMIBObjects, dot1qStaticMcastPort=dot1qStaticMcastPort, voicevlanOUIMask=voicevlanOUIMask, sysHttpPort=sysHttpPort, l2Mst=l2Mst, sysLaPortEntry=sysLaPortEntry, atiAclProfileActionRowStatus=atiAclProfileActionRowStatus, dot1dPortPriorityEntry=dot1dPortPriorityEntry, sysDfsInProfileActionNewPrio=sysDfsInProfileActionNewPrio, sysDfsMeterRefreshCount=sysDfsMeterRefreshCount, sysSntpTimeZoneMappingIndex=sysSntpTimeZoneMappingIndex, dot1sRegionConfigChangeCount=dot1sRegionConfigChangeCount, l2Radius=l2Radius, dot1wPortRxConfigBpduCount=dot1wPortRxConfigBpduCount, dot1qGarpShutdownStatus=dot1qGarpShutdownStatus, dot1sCistPortHelloTime=dot1sCistPortHelloTime, dot1sMstiPortTable=dot1sMstiPortTable, dot1qFdbId=dot1qFdbId, sysSnmpUserStatus=sysSnmpUserStatus, ifMaxInterfaces=ifMaxInterfaces, sysPortSecurityTable=sysPortSecurityTable, dot1dStpPriority=dot1dStpPriority, sysSysLocation=sysSysLocation, dot1sCistHoldTime=dot1sCistHoldTime, sysSnmpSecurityModel=sysSnmpSecurityModel, sysSnmpGroupAccessTable=sysSnmpGroupAccessTable, dot1dTpHCPortOutFrames=dot1dTpHCPortOutFrames, atiAclOutProfileActionTable=atiAclOutProfileActionTable, dot1sMstiRegionVersion=dot1sMstiRegionVersion, dot1qMaxSupportedVlans=dot1qMaxSupportedVlans, sysSslPort=sysSslPort, sysDefaultIpAddr=sysDefaultIpAddr, dot1sCistPortTransmitSemState=dot1sCistPortTransmitSemState, ifMainBrgPortType=ifMainBrgPortType, dot1qTpFdbAddress=dot1qTpFdbAddress, dot1wRstTraps=dot1wRstTraps, sysSnoopStatsRxAsmLeaves=sysSnoopStatsRxAsmLeaves, sysSnmpaccessWriteViewName=sysSnmpaccessWriteViewName, l2Rst=l2Rst, ifIpAddrAllocProtocol=ifIpAddrAllocProtocol, sysSnmpViewTree=sysSnmpViewTree, sysUploadLogFileToIp=sysUploadLogFileToIp, sysSnmpGroupAccessEntry=sysSnmpGroupAccessEntry, sysDscpType43=sysDscpType43, ifIvrEntry=ifIvrEntry, sysLoggingOption=sysLoggingOption, sysSnoopStatsTxAsmLeaves=sysSnoopStatsTxAsmLeaves, sysSnmpCommunityTable=sysSnmpCommunityTable, atiAclMib=atiAclMib, dot1sSystemControl=dot1sSystemControl, dot1sCistProtocolMigrationCount=dot1sCistProtocolMigrationCount, sysDscpType08=sysDscpType08, dot1dTpFdbStatus=dot1dTpFdbStatus, dot1sDebug=dot1sDebug, sysRmonHwEventSupp=sysRmonHwEventSupp, sysDscpType52=sysDscpType52, dot1dPortGarpGroup=dot1dPortGarpGroup, sysPnacSystemControl=sysPnacSystemControl, sysLaSystemControl=sysLaSystemControl, dot1dTpPortEntry=dot1dTpPortEntry, sysDfsMultiFieldClfrEntry=sysDfsMultiFieldClfrEntry, dot1qVlanStaticPortConfigTable=dot1qVlanStaticPortConfigTable, dot1sMaxHopCount=dot1sMaxHopCount, sysDscpType17=sysDscpType17, dot1wPortMigrationType=dot1wPortMigrationType, portBaseStaticUnicastRowStatus=portBaseStaticUnicastRowStatus, sysRadiusExtServerTable=sysRadiusExtServerTable, sysSnoopInetAddressType=sysSnoopInetAddressType, dot1dConformance=dot1dConformance, dot1sGlobalErrTrap=dot1sGlobalErrTrap, sysRemoteConfigRestoreIpAddr=sysRemoteConfigRestoreIpAddr, sysDfsClfrId=sysDfsClfrId, sysDscpType20=sysDscpType20, dot1wTraps=dot1wTraps, trafficSegEntry=trafficSegEntry, fsLldpSystem=fsLldpSystem, sysIpAuthMgrStatus=sysIpAuthMgrStatus, dot1sSetVlanList=dot1sSetVlanList, sysSnoopGrpQueryInterval=sysSnoopGrpQueryInterval, atiAclClassifierSrcMacMaskLen=atiAclClassifierSrcMacMaskLen, dhcpSnoopBindindDBLeaseTime=dhcpSnoopBindindDBLeaseTime, atiAclPortListString=atiAclPortListString, sysConfigSaveFileName=sysConfigSaveFileName, sysLaPortChannelSelectionPolicy=sysLaPortChannelSelectionPolicy, sysPortCtrlSpeed=sysPortCtrlSpeed, dot1dPortGarpEntry=dot1dPortGarpEntry, dot1qStaticAllowedToGoEntry=dot1qStaticAllowedToGoEntry, dot1dStaticTable=dot1dStaticTable, sysSnmpUser=sysSnmpUser, dot1qVlanStaticTable=dot1qVlanStaticTable, sysDfsPortId=sysDfsPortId, sysSnoopVlanCfgQuerier=sysSnoopVlanCfgQuerier, dot1sCistPortTxRstBpduCount=dot1sCistPortTxRstBpduCount, l2Security=l2Security, dhcpSnoopVerifyMACAddress=dhcpSnoopVerifyMACAddress, dot1sCistBridgeMaxAge=dot1sCistBridgeMaxAge, dot1dStpExtTable=dot1dStpExtTable, dot1sCistPort=dot1sCistPort, atiAclProfileActionTable=atiAclProfileActionTable, sysSshVersionCompatibility=sysSshVersionCompatibility, dot1sMstiPortEffectivePortState=dot1sMstiPortEffectivePortState, sysPortSecurityState=sysPortSecurityState, dot1sMstEntry=dot1sMstEntry, sysSnmpaccessReadViewName=sysSnmpaccessReadViewName, dot1wPktErrType=dot1wPktErrType, dot1qTpPort=dot1qTpPort, atiAclClassifierSrcIpMaskLen=atiAclClassifierSrcIpMaskLen, dot1dBaseNumPorts=dot1dBaseNumPorts, dot1wMemAllocFailureCount=dot1wMemAllocFailureCount, sysLaPortChannelGroup=sysLaPortChannelGroup, dot1dTpHCPortInFrames=dot1dTpHCPortInFrames, sysPnacASUserConfigAuthTimeout=sysPnacASUserConfigAuthTimeout, voiceVlanId=voiceVlanId, ifMainType=ifMainType, sysDfsInProfileActionTable=sysDfsInProfileActionTable, dot1sCistPortDesignatedPort=dot1sCistPortDesignatedPort, atiAclInProfileActionRowStatus=atiAclInProfileActionRowStatus, dot1sVlanInstanceMappingTable=dot1sVlanInstanceMappingTable, dot1dStpTxHoldCount=dot1dStpTxHoldCount, sysPnacPaePiggybackMode=sysPnacPaePiggybackMode, sysDscpType51=sysDscpType51, sysRmonHwStatsSupp=sysRmonHwStatsSupp, sysTrapEnable=sysTrapEnable, atiAclInProfileActionTable=atiAclInProfileActionTable, dot1dStpPortDesignatedRoot=dot1dStpPortDesignatedRoot, dot1qStaticMulticastAddress=dot1qStaticMulticastAddress, sysDscpType31=sysDscpType31, dot1qNumVlans=dot1qNumVlans, sysSnmpUserName=sysSnmpUserName, sysInitiateConfigSave=sysInitiateConfigSave, ifAvailableIndex=ifAvailableIndex, voicevlanOUITelephonyOUI=voicevlanOUITelephonyOUI, ifIpAddr=ifIpAddr, sysPnacPaePortStatus=sysPnacPaePortStatus, dot1sMstiInstanceIndex=dot1sMstiInstanceIndex, dot1dBasePortIfIndex=dot1dBasePortIfIndex, dot1sCistPortAutoEdgeStatus=dot1sCistPortAutoEdgeStatus, dot1sPortTrapNotificationEntry=dot1sPortTrapNotificationEntry, dot1qVlanGlobalsEntry=dot1qVlanGlobalsEntry, dot1sCistSelectedPortRole=dot1sCistSelectedPortRole, sysPnacAuthServer=sysPnacAuthServer, dot1sCistPortProtMigrationSemState=dot1sCistPortProtMigrationSemState, sysConfigCtrlStatsCollection=sysConfigCtrlStatsCollection, atiAclClassifierDstPort=atiAclClassifierDstPort, dot1wDebugOption=dot1wDebugOption, dot1wRstTrapsControlTable=dot1wRstTrapsControlTable, sysDscpType39=sysDscpType39, sysStormCtrlIndex=sysStormCtrlIndex, sysPnacPaePortTable=sysPnacPaePortTable, atiAclOutProfileActionCommittedRate=atiAclOutProfileActionCommittedRate, dot1dStpPortDesignatedCost=dot1dStpPortDesignatedCost, dot1dStpPortForwardTransitions=dot1dStpPortForwardTransitions, dot1wRst=dot1wRst)
mibBuilder.exportSymbols("AT-GS950-24-MIB", dot1sMst=dot1sMst, sysSnoopOperStatus=sysSnoopOperStatus, voicevlanOUIEntry=voicevlanOUIEntry, sysLaPortChannelActivePortCount=sysLaPortChannelActivePortCount, voicevlanPortAutoDetection=voicevlanPortAutoDetection, ifSecondaryIpAddressTable=ifSecondaryIpAddressTable, l2Ssl=l2Ssl, dhcpSnoopPortSettingEntry=dhcpSnoopPortSettingEntry, dot1qStaticMcastPortEntry=dot1qStaticMcastPortEntry, sysSnmpaccessNotifyViewName=sysSnmpaccessNotifyViewName, sysLaPortChannelPortCount=sysLaPortChannelPortCount, dot1sTxHoldCount=dot1sTxHoldCount, dot1wSetGlobalTraps=dot1wSetGlobalTraps, dot1dPortGarpTable=dot1dPortGarpTable, dot1sSetTraps=dot1sSetTraps, sysSnmpviewTreeName=sysSnmpviewTreeName, sysPowerSavingEnable=sysPowerSavingEnable, sysDfsMeterEntry=sysDfsMeterEntry, dot1dStpTable=dot1dStpTable, sysRadiusExtServerIndex=sysRadiusExtServerIndex, sysPortCtrlMDI=sysPortCtrlMDI, sysDefaultVlanId=sysDefaultVlanId, dot1dTrafficClassEntry=dot1dTrafficClassEntry, ifMainEntry=ifMainEntry, l2Pnac=l2Pnac, dot1dStpExtPortEntry=dot1dStpExtPortEntry, dot1qQBridge=dot1qQBridge, sysBroadcastOnOff=sysBroadcastOnOff, dot1dDeviceGmrpGroup=dot1dDeviceGmrpGroup, dot1wPortTxSmState=dot1wPortTxSmState, dot1sCistPortInvalidMstBpduRxCount=dot1sCistPortInvalidMstBpduRxCount, dot1sMstiPortDesignatedPort=dot1sMstiPortDesignatedPort, dot1dBaseType=dot1dBaseType, dot1dPriority=dot1dPriority, InetAddressDNS=InetAddressDNS, portBaseVlanIndex=portBaseVlanIndex, dot1dRegenUserPriority=dot1dRegenUserPriority, sysSnoopVlanOperatingVersion=sysSnoopVlanOperatingVersion, dot1dTpPortOverflowEntry=dot1dTpPortOverflowEntry, atiAclPolicyOutProfileIndex=atiAclPolicyOutProfileIndex, dot1wProtocolMigrationTrap=dot1wProtocolMigrationTrap, dot1dStpPathCostDefault=dot1dStpPathCostDefault, IfDirection=IfDirection, dot1sCistPortDesignatedCost=dot1sCistPortDesignatedCost, dot1dTpPortTable=dot1dTpPortTable, sysDscpType03=sysDscpType03, sysDscpType64=sysDscpType64, dot1dTpHCPortEntry=dot1dTpHCPortEntry, dot1sMstiBridgeRoleSelectionSemState=dot1sMstiBridgeRoleSelectionSemState, dot1wModuleStatus=dot1wModuleStatus, dot1wPortRestrictedRole=dot1wPortRestrictedRole, sysDscpType47=sysDscpType47, dot1sNoOfMstiSupported=dot1sNoOfMstiSupported, voicevlanPortControlTable=voicevlanPortControlTable, dot1sCistRootCost=dot1sCistRootCost, sysPortCtrlDuplex=sysPortCtrlDuplex, dot1sBrgAddress=dot1sBrgAddress, portBaseStaticUnicastAllowedToGoTo=portBaseStaticUnicastAllowedToGoTo, dot1dPortNumTrafficClasses=dot1dPortNumTrafficClasses, sysDfsCoSqAlgorithmEntry=sysDfsCoSqAlgorithmEntry, dot1qVlanDebug=dot1qVlanDebug, dot1sMemAllocFailureCount=dot1sMemAllocFailureCount, dot1qStaticMulticastTable=dot1qStaticMulticastTable, l2Snmp=l2Snmp, dot1dHCPortGroup=dot1dHCPortGroup, atiAclPolicyTable=atiAclPolicyTable, dot1dTpEntry=dot1dTpEntry, sysSnoopVlanQueryInterval=sysSnoopVlanQueryInterval, dot1sCistPortTxConfigBpduCount=dot1sCistPortTxConfigBpduCount, dot1wRstTable=dot1wRstTable, dot1wPortExtTable=dot1wPortExtTable, sysPnacGuestVlanEntry=sysPnacGuestVlanEntry, sysPnacASUserConfigRowStatus=sysPnacASUserConfigRowStatus, dot1qVlanLearningMode=dot1qVlanLearningMode, dot1sCistPortRxTcnBpduCount=dot1sCistPortRxTcnBpduCount, atiAclClassifierSrcPort=atiAclClassifierSrcPort, dot1qTpFdbStatus=dot1qTpFdbStatus, sysSnmpsnmpTrapManagerSecurityLevel=sysSnmpsnmpTrapManagerSecurityLevel, sysSnoopVlanFilterInetAddressType=sysSnoopVlanFilterInetAddressType, atiAclClassifierDstMacMaskLen=atiAclClassifierDstMacMaskLen, dot1wRstEntry=dot1wRstEntry, sysPnacPaePortNo=sysPnacPaePortNo, dot1sCistTimeSinceTopologyChange=dot1sCistTimeSinceTopologyChange, at_GS95024v3=at_GS95024v3, sysSntpSecondSrvAddr=sysSntpSecondSrvAddr, l2Dscp=l2Dscp, sysSnmpGroupEntry=sysSnmpGroupEntry, ifMainTable=ifMainTable, sysLaPortChannelEntry=sysLaPortChannelEntry, dot1wNewPortRoleTrap=dot1wNewPortRoleTrap, sysSntpTzDSTStartDay=sysSntpTzDSTStartDay, dot1sOldRoleType=dot1sOldRoleType, sysDscpType26=sysDscpType26, dot1qVlanGlobalsTable=dot1qVlanGlobalsTable, dhcpSnoopOption82Insertion=dhcpSnoopOption82Insertion, dot1sNewPortRoleTrap=dot1sNewPortRoleTrap, dot1sCistPortEntry=dot1sCistPortEntry, dot1wPortMigSmState=dot1wPortMigSmState, ifSecondaryIpSubnetMask=ifSecondaryIpSubnetMask, sysIpAuthMgrAllowedServices=sysIpAuthMgrAllowedServices, sysDfsMeterStatus=sysDfsMeterStatus, sysRadiusExtServerSharedSecret=sysRadiusExtServerSharedSecret, sysSntpTzMinutesWest=sysSntpTzMinutesWest, sysSntpTzDSTStartMon=sysSntpTzDSTStartMon, sysSnoopInstanceGlobalInstId=sysSnoopInstanceGlobalInstId, sysPortSecurityEntry=sysPortSecurityEntry, sysIpAuthMgrRowStatus=sysIpAuthMgrRowStatus, dot1dStpRootCost=dot1dStpRootCost, dot1dExtBaseTable=dot1dExtBaseTable, dot1sPktErrType=dot1sPktErrType, tabPortBaseStaticUnicastEntry=tabPortBaseStaticUnicastEntry, dot1dStpPortOperPointToPoint=dot1dStpPortOperPointToPoint, ifMainOperStatus=ifMainOperStatus, sysSnoopVlanRouterInetAddressType=sysSnoopVlanRouterInetAddressType, portBaseStaticUnicastVlanIndex=portBaseStaticUnicastVlanIndex, sysPortCtrlTable=sysPortCtrlTable, dot1qVlanCurrentEntry=dot1qVlanCurrentEntry, portBaseStaticMulticastAddress=portBaseStaticMulticastAddress, dot1qVlanCreationTime=dot1qVlanCreationTime, sysSnoopStatsEntry=sysSnoopStatsEntry, dot1dStpPortPriority=dot1dStpPortPriority, dot1qStaticUnicastTable=dot1qStaticUnicastTable, sysSslTrace=sysSslTrace, sysLaMaxPortChannels=sysLaMaxPortChannels, dot1qVlanCurrentEgressPort=dot1qVlanCurrentEgressPort, dot1wPortRoleSelSmState=dot1wPortRoleSelSmState, dot1wPortInvalidConfigBpduRxCount=dot1wPortInvalidConfigBpduRxCount, voicevlanPortState=voicevlanPortState, dot1dTrafficClassesEnabled=dot1dTrafficClassesEnabled, dot1sTopologyChgTrap=dot1sTopologyChgTrap, sysDefaultIpSubnetMask=sysDefaultIpSubnetMask, dot1sCistPortRegionalRoot=dot1sCistPortRegionalRoot, dot1wNewRootIdCount=dot1wNewRootIdCount, atiAclProfileActionIndex=atiAclProfileActionIndex, dot1dTpHCPortInDiscards=dot1dTpHCPortInDiscards, sysPortCtrlBPDUPassThrough=sysPortCtrlBPDUPassThrough, dot1wPktErrVal=dot1wPktErrVal, portBaseStaticMulticastStatus=portBaseStaticMulticastStatus, voicevlanPortControlEntry=voicevlanPortControlEntry, dot1sCistRegionalRootCost=dot1sCistRegionalRootCost, dot1sPortMigrationType=dot1sPortMigrationType, dot1sMstiPortTransmittedBPDUs=dot1sMstiPortTransmittedBPDUs, sysSnmpviewTreeMask=sysSnmpviewTreeMask, sysSnmpsnmpTrapManagerStatus=sysSnmpsnmpTrapManagerStatus, sysSnoopReportForwardInterval=sysSnoopReportForwardInterval, dot1dPortOutboundAccessPriority=dot1dPortOutboundAccessPriority, ifSecondaryIpRowStatus=ifSecondaryIpRowStatus, dot1qVlanOperStatus=dot1qVlanOperStatus, dot1dStpPortState=dot1dStpPortState, dot1qStaticAllowedIsMember=dot1qStaticAllowedIsMember, dot1sMstiPortState=dot1sMstiPortState, ifIvrBridgedIface=ifIvrBridgedIface, sysSnmpaccessStatus=sysSnmpaccessStatus, sysSyslogSysBuffers=sysSyslogSysBuffers, sysDscpType21=sysDscpType21, dot1qVlanStaticEntry=dot1qVlanStaticEntry, dot1sCistRegionalRoot=dot1sCistRegionalRoot, fsLldpDupSystemName=fsLldpDupSystemName, dot1qStaticMulticastReceivePort=dot1qStaticMulticastReceivePort, dot1sMstiPortPathCost=dot1sMstiPortPathCost, dot1dBase=dot1dBase, dot1dStpPort=dot1dStpPort, fsLldpMisConfigPortVlanID=fsLldpMisConfigPortVlanID, dot1qTpFdbTable=dot1qTpFdbTable, portBaseVlanRowStatus=portBaseVlanRowStatus, dot1dRegenPriorityGroup=dot1dRegenPriorityGroup, VlanIndex=VlanIndex, sysDfsOutProfileActionStatus=sysDfsOutProfileActionStatus, dot1wPortTxTcnBpduCount=dot1wPortTxTcnBpduCount, ifSecondaryIpAddress=ifSecondaryIpAddress, dot1dStpPortOperEdgePort=dot1dStpPortOperEdgePort, sysSnmpUserPrivProtocol=sysSnmpUserPrivProtocol, dot1dStaticReceivePort=dot1dStaticReceivePort, sysConfigRestoreOption=sysConfigRestoreOption, sysDscpType58=sysDscpType58, fsLldpMisConfigVlanName=fsLldpMisConfigVlanName, voicevlanOUIDescription=voicevlanOUIDescription, sysSnoopStatus=sysSnoopStatus, sysRmonEnableStatus=sysRmonEnableStatus, portBaseStaticUnicastStatus=portBaseStaticUnicastStatus, ifMainEncapType=ifMainEncapType, sysSnmpsnmpTrapManagerAddress=sysSnmpsnmpTrapManagerAddress, atiAclPolicyRowStatus=atiAclPolicyRowStatus, sysSshTrace=sysSshTrace, dot1wRstpDownCount=dot1wRstpDownCount, sysSnoopStatsTxAsmReports=sysSnoopStatsTxAsmReports, sysRateCtrlEntry=sysRateCtrlEntry, dot1sMstiPortDesignatedBridge=dot1sMstiPortDesignatedBridge, dot1dTpPortMaxInfo=dot1dTpPortMaxInfo, dhcpSnoopPassThroughOption82=dhcpSnoopPassThroughOption82, sysSyslogLogSrvAddr=sysSyslogLogSrvAddr, dot1qVlanNumDeletesEntry=dot1qVlanNumDeletesEntry, atiAclProfileActionDscp=atiAclProfileActionDscp, sysDfsClfrInProActionId=sysDfsClfrInProActionId, sysSyslogConfigTable=sysSyslogConfigTable, sysDscpType02=sysDscpType02, sysSnoopStatsTxGrpQueries=sysSnoopStatsTxGrpQueries, dot1sMstiPortDesignatedRoot=dot1sMstiPortDesignatedRoot, portBaseStaticMulticastRowStatus=portBaseStaticMulticastRowStatus, dot1sGenTrapType=dot1sGenTrapType, sysSnoopVlanFastLeave=sysSnoopVlanFastLeave, sysSnoopStatsDroppedPkts=sysSnoopStatsDroppedPkts, sysLaPortChannelMode=sysLaPortChannelMode, pysmi_if=pysmi_if, sysDfsMFClassifier=sysDfsMFClassifier, dot1sCistPortAdminP2P=dot1sCistPortAdminP2P, dot1sCistPortTopologyChangeSemState=dot1sCistPortTopologyChangeSemState, sysSntpTzDSTEndDay=sysSntpTzDSTEndDay, sysSnoopInstanceGlobalSystemControl=sysSnoopInstanceGlobalSystemControl, sysLaPortChannelTable=sysLaPortChannelTable, sysPnacPaePortNumber=sysPnacPaePortNumber, dot1dPortGarpJoinTime=dot1dPortGarpJoinTime, sysDscpType32=sysDscpType32, sysPnacModuleOperStatus=sysPnacModuleOperStatus, portBaseVlanName=portBaseVlanName, sysConfigSaveOption=sysConfigSaveOption, fsLldpInputQOverFlows=fsLldpInputQOverFlows, sysLBDRecoverTime=sysLBDRecoverTime, sysFDResetStateEnable=sysFDResetStateEnable, dhcpSnoopBindindDBIPAddress=dhcpSnoopBindindDBIPAddress, sysSnmpviewTreeSubtree=sysSnmpviewTreeSubtree, l2La=l2La, l2Syslog=l2Syslog, sysRateCtrlIngressLimitValue=sysRateCtrlIngressLimitValue, sysStormCtrlTable=sysStormCtrlTable, sysDscpType22=sysDscpType22, sysRateControl=sysRateControl, ifMainMtu=ifMainMtu, dot1qBaseEntry=dot1qBaseEntry, dot1wPortRoleTransSmState=dot1wPortRoleTransSmState, atiDstMacFilterAddress=atiDstMacFilterAddress, dot1sCistPortRxMstBpduCount=dot1sCistPortRxMstBpduCount, dhcpSnoopVLANSettingTable=dhcpSnoopVLANSettingTable, dot1sMstiCurrentPortRole=dot1sMstiCurrentPortRole, sysSnmpTrapManagerTable=sysSnmpTrapManagerTable, dhcpSnoopVLANSettingEntry=dhcpSnoopVLANSettingEntry, sysConfigRestoreStatus=sysConfigRestoreStatus, PermissionType=PermissionType, ifSecondaryIpAddressEntry=ifSecondaryIpAddressEntry, dot1dGmrpStatus=dot1dGmrpStatus, dot1qVlan=dot1qVlan, sysSwitchName=sysSwitchName, sysIpAuthMgrIpAddr=sysIpAuthMgrIpAddr, sysDlFirmwareFromIp=sysDlFirmwareFromIp, sysSslCipherList=sysSslCipherList, dot1wInvalidBpduRxdTrap=dot1wInvalidBpduRxdTrap, dot1sPathCostDefaultType=dot1sPathCostDefaultType, atiDstMacFilterRowStatus=atiDstMacFilterRowStatus, dot1sCistForwardDelay=dot1sCistForwardDelay, fsLldpPortConfigNotificationType=fsLldpPortConfigNotificationType, portBaseVlan=portBaseVlan, dot1wPortRxTcnBpduCount=dot1wPortRxTcnBpduCount, sysLaPortAggregateWaitTime=sysLaPortAggregateWaitTime, dot1sCistPortInvalidRstBpduRxCount=dot1sCistPortInvalidRstBpduRxCount)
mibBuilder.exportSymbols("AT-GS950-24-MIB", sysLaPortMode=sysLaPortMode, l2Ssh=l2Ssh, atiAclPolicyEntry=atiAclPolicyEntry, dot1sBufferOverFlowCount=dot1sBufferOverFlowCount, dhcpSnoopBindindDBPortNumber=dhcpSnoopBindindDBPortNumber, fsLldpMemAllocFailure=fsLldpMemAllocFailure, sysDscpType44=sysDscpType44, portBaseStaticMulticastTable=portBaseStaticMulticastTable, dot1dStpExtPortTable=dot1dStpExtPortTable, sysSntpTimeSeconds=sysSntpTimeSeconds, voiceVlanPriority=voiceVlanPriority, sysRateCtrlEgressLimitValue=sysRateCtrlEgressLimitValue, sysSyslogConfigLogLevel=sysSyslogConfigLogLevel, dot1dStpContextId=dot1dStpContextId, dot1dGroups=dot1dGroups, dot1wTraceOption=dot1wTraceOption, dot1sInstanceUpCount=dot1sInstanceUpCount, dot1sCistPortRestrictedRole=dot1sCistPortRestrictedRole, sysConfigCtrlEntry=sysConfigCtrlEntry, sysSntpGeneralGroup=sysSntpGeneralGroup, dot1sCistBridgeHelloTime=dot1sCistBridgeHelloTime, fsLldpMisConfigMaxFrameSize=fsLldpMisConfigMaxFrameSize, sysMirror=sysMirror, sysDscpType01=sysDscpType01, atiAclClassifierEntry=atiAclClassifierEntry, atiAclInProfileActionActionId=atiAclInProfileActionActionId, sysRadiusExtServerAuthPortNum=sysRadiusExtServerAuthPortNum, sysDfsClfrEntry=sysDfsClfrEntry, dhcpSnoopVLANSettingStatus=dhcpSnoopVLANSettingStatus, sysSnoopVlanMcastMacFwdEntry=sysSnoopVlanMcastMacFwdEntry, dot1qVlanVersionNumber=dot1qVlanVersionNumber, sysStormCtrlRowStatus=sysStormCtrlRowStatus, sysDfsMultiFieldClfrFilterId=sysDfsMultiFieldClfrFilterId, atiAclClassifierRowStatus=atiAclClassifierRowStatus, dot1sMstiPort=dot1sMstiPort, sysCliAutoTimeoutInterval=sysCliAutoTimeoutInterval, sysSntpTzDSTForwardOffset=sysSntpTzDSTForwardOffset, dot1sCistPortForwardTransitions=dot1sCistPortForwardTransitions, atiAclOutProfileActionActionId=atiAclOutProfileActionActionId, sysDscpType10=sysDscpType10, dot1qFdbDynamicCount=dot1qFdbDynamicCount, dot1dTpPortInFrames=dot1dTpPortInFrames, dot1qTp=dot1qTp, sysSnmpUserAuthProtocol=sysSnmpUserAuthProtocol, sysSystemInfo=sysSystemInfo, sysSntpTzDSTEndMinute=sysSntpTzDSTEndMinute, dot1dTpPort=dot1dTpPort, sysSwitchDate=sysSwitchDate, sysSnmpSecurityName=sysSnmpSecurityName, dot1sCistPortTxTcnBpduCount=dot1sCistPortTxTcnBpduCount, dot1sCistPortState=dot1sCistPortState, atiAclPolicyPortListIndex=atiAclPolicyPortListIndex, l2System=l2System, Timeout=Timeout, dot1qVlanStatus=dot1qVlanStatus, sysDscpType35=sysDscpType35, dot1qPortGvrpFailedRegistrations=dot1qPortGvrpFailedRegistrations, sysSnoopInst=sysSnoopInst, sysPortSecurityMLA=sysPortSecurityMLA, portBaseVlanCurrentTable=portBaseVlanCurrentTable, dot1sMstSetGlobalTrapOption=dot1sMstSetGlobalTrapOption, sysSshMacList=sysSshMacList, fsLldpModuleStatus=fsLldpModuleStatus, dot1dMIBObjects=dot1dMIBObjects, dot1sCistBridgeRoleSelectionSemState=dot1sCistBridgeRoleSelectionSemState, dot1dBaseTable=dot1dBaseTable, sysSnmpsnmpCommunityIndex=sysSnmpsnmpCommunityIndex, dot1sMstiPortForwardTransitions=dot1sMstiPortForwardTransitions, dot1wPortStateTransSmState=dot1wPortStateTransSmState, sysSnmpUserTable=sysSnmpUserTable, portBaseStaticMulticastIndex=portBaseStaticMulticastIndex, dhcpSnoopBindindDBType=dhcpSnoopBindindDBType, sysSnoopVlanRouterPortList=sysSnoopVlanRouterPortList, atiAclPolicyIndex=atiAclPolicyIndex, sysMirrorStatus=sysMirrorStatus, dot1dExtCapGroup=dot1dExtCapGroup, newRoot=newRoot, dot1sMapVlanIndex=dot1sMapVlanIndex, sysLBDCtrlEntry=sysLBDCtrlEntry, sysSyslogConfigEntry=sysSyslogConfigEntry, sysDfsClfrMFClfrId=sysDfsClfrMFClfrId, sysSnoopVlanRtrPortList=sysSnoopVlanRtrPortList, sysDlfOnOff=sysDlfOnOff, dot1dStpEntry=dot1dStpEntry, dot1qVlanNumDeletesTable=dot1qVlanNumDeletesTable, dot1sCistPortInvalidTcnBpduRxCount=dot1sCistPortInvalidTcnBpduRxCount, sysDscpType33=sysDscpType33, dot1sNewRootTrap=dot1sNewRootTrap, portBaseVlanCurrentEgressPorts=portBaseVlanCurrentEgressPorts, portBaseStaticUnicastIndex=portBaseStaticUnicastIndex, dot1dTpHCPortTable=dot1dTpHCPortTable, sysPortCtrlIndex=sysPortCtrlIndex, sysAsyVLANEnable=sysAsyVLANEnable, sysDfsOutProfileActionEntry=sysDfsOutProfileActionEntry, sysSnmpGroupAccess=sysSnmpGroupAccess, dot1qStaticMulticastRowStatus=dot1qStaticMulticastRowStatus, dot1qVlanEgressPortEntry=dot1qVlanEgressPortEntry, fsLldpTraps=fsLldpTraps, sysPnacPaeMultiAuthEnable=sysPnacPaeMultiAuthEnable, sysIpAuthMgr=sysIpAuthMgr, PortLaMode=PortLaMode, sysGuestVlan=sysGuestVlan, dot1qVlanContextId=dot1qVlanContextId, sysDscpType45=sysDscpType45, dot1wBufferFailureCount=dot1wBufferFailureCount, dot1wPortProtocolMigrationCount=dot1wPortProtocolMigrationCount, sysPortCtrlEntry=sysPortCtrlEntry, dot1qStaticUnicastStatus=dot1qStaticUnicastStatus, dot1sCistPortRxConfigBpduCount=dot1sCistPortRxConfigBpduCount, dot1qStatic=dot1qStatic, dot1dTpPortOutFrames=dot1dTpPortOutFrames, dot1sPortRoleTrapNotificationEntry=dot1sPortRoleTrapNotificationEntry, ifIvrTable=ifIvrTable, dot1qStaticAllowedToGoTable=dot1qStaticAllowedToGoTable, atiAclPortListEntry=atiAclPortListEntry, dot1qFdbEntry=dot1qFdbEntry, sysSnmpsnmpCommunityName=sysSnmpsnmpCommunityName, dhcpSnoopBindindDBMacAddress=dhcpSnoopBindindDBMacAddress, dot1dUserPriority=dot1dUserPriority, dot1dStpBridgeForwardDelay=dot1dStpBridgeForwardDelay, atiAclClassifierSrcIp=atiAclClassifierSrcIp, l2Bridge=l2Bridge, issCosEnable=issCosEnable, sysRadiusExtServerEntry=sysRadiusExtServerEntry, sysDfsCoSqAlgorithm=sysDfsCoSqAlgorithm, sysSyslogTimeStamp=sysSyslogTimeStamp, sysSnoopVlanRouterTable=sysSnoopVlanRouterTable, dot1wPortAutoEdge=dot1wPortAutoEdge, sysSnmpCommunityEntry=sysSnmpCommunityEntry, sysSnoopStatsRxGenQueries=sysSnoopStatsRxGenQueries, dot1sCistPortReceiveSemState=dot1sCistPortReceiveSemState, sysDscpType61=sysDscpType61, sysMirrorCtrlEntry=sysMirrorCtrlEntry, sysCpuPolicerStatus=sysCpuPolicerStatus, sysIpAuthMgrVlanList=sysIpAuthMgrVlanList, atiAclProfileActionCos=atiAclProfileActionCos, dot1dPortGarpLeaveTime=dot1dPortGarpLeaveTime, l2Snoop=l2Snoop, l2Cfa=l2Cfa, sysSnoopVlanMcastMacFwdInetAddressType=sysSnoopVlanMcastMacFwdInetAddressType, dot1qPortVlanEntry=dot1qPortVlanEntry, sysLaPortChannelIfIndex=sysLaPortChannelIfIndex, sysSnoopVlanFilterTable=sysSnoopVlanFilterTable, dot1dStpBridgeMaxAge=dot1dStpBridgeMaxAge, sysSnmpTrapManager=sysSnmpTrapManager, sysDfsInProfileActionDscp=sysDfsInProfileActionDscp, sysDscpType28=sysDscpType28, l2DhcpSnoop=l2DhcpSnoop, dot1dStaticEntry=dot1dStaticEntry, dot1dStpVersion=dot1dStpVersion, sysSntpStatus=sysSntpStatus, sysSnoopVlanFilterInstId=sysSnoopVlanFilterInstId, sysMirrorToPort=sysMirrorToPort, dot1dUserPriorityRegenEntry=dot1dUserPriorityRegenEntry, portBaseVlanCreationTime=portBaseVlanCreationTime, fsLldpLocChassisIdSubtype=fsLldpLocChassisIdSubtype, sysSnoopVlanRouterEntry=sysSnoopVlanRouterEntry, dot1sForceProtocolVersion=dot1sForceProtocolVersion, sysFDRInputPw=sysFDRInputPw, dot1dStaticAllowedIsMember=dot1dStaticAllowedIsMember, l2Dot1dStp=l2Dot1dStp, sysDfsOutProfileActionFlag=sysDfsOutProfileActionFlag, fsLldpDupChasisId=fsLldpDupChasisId, dot1sMstiPortRoleTransitionSemState=dot1sMstiPortRoleTransitionSemState, sysSnmpsnmpCommunityPolicy=sysSnmpsnmpCommunityPolicy, dot1dStpRootPort=dot1dStpRootPort, dot1sMstTraps=dot1sMstTraps, dhcpSnoopPortSettingIndex=dhcpSnoopPortSettingIndex, fsLldpLocChassisId=fsLldpLocChassisId, dot1qPortAcceptableFrameTypes=dot1qPortAcceptableFrameTypes, sysLaPortRestoreMtu=sysLaPortRestoreMtu, sysPnacASUserConfigAuthProtocol=sysPnacASUserConfigAuthProtocol, dot1sMaxMstInstanceNumber=dot1sMaxMstInstanceNumber, dot1sMstTrapsControlTable=dot1sMstTrapsControlTable, fsLldpNotification=fsLldpNotification, dot1dStpProtocolSpecification=dot1dStpProtocolSpecification, sysSntpTzGroup=sysSntpTzGroup, sysSnoopInstanceGlobalEntry=sysSnoopInstanceGlobalEntry, sysConfigControl=sysConfigControl, dot1wPortTrapNotificationEntry=dot1wPortTrapNotificationEntry, sysSntpTzDSTStartHour=sysSntpTzDSTStartHour, fsLldpStatsRemTablesUpdates=fsLldpStatsRemTablesUpdates, voiceVlanMode=voiceVlanMode, sysDscpType09=sysDscpType09, dot1sCistPortTxMstBpduCount=dot1sCistPortTxMstBpduCount, atiDstMacFilterTable=atiDstMacFilterTable, dot1sMstiPortPriority=dot1sMstiPortPriority, sysLaStatus=sysLaStatus, sysDfsInProfileActionEntry=sysDfsInProfileActionEntry, sysIpAuthMgrEntry=sysIpAuthMgrEntry, snmpGlobalState=snmpGlobalState, dot1dStpPortDesignatedBridge=dot1dStpPortDesignatedBridge, sysLaPortChannelAdminMacAddress=sysLaPortChannelAdminMacAddress, dot1sCistPortRxRstBpduCount=dot1sCistPortRxRstBpduCount, sysSnmpGroupName=sysSnmpGroupName, sysSnmpCommunity=sysSnmpCommunity, sysDfsInProfileAction=sysDfsInProfileAction, dot1sCistPortInvalidConfigBpduRxCount=dot1sCistPortInvalidConfigBpduRxCount, dot1sCistNewRootBridgeCount=dot1sCistNewRootBridgeCount, dot1dPBridge=dot1dPBridge, issJumboFramePerPortEnable=issJumboFramePerPortEnable, dot1wGenTrapType=dot1wGenTrapType, ifMainRowStatus=ifMainRowStatus, sysDefaultIpAddrCfgMode=sysDefaultIpAddrCfgMode, sysDfsMeterId=sysDfsMeterId, sysSnoopStatsInetAddressType=sysSnoopStatsInetAddressType, sysLBDCtrlTable=sysLBDCtrlTable, dot1wDynamicPathcostCalculation=dot1wDynamicPathcostCalculation, sysDscpType19=sysDscpType19, dot1wGlobalErrTrapType=dot1wGlobalErrTrapType, sysSnoopVlanRouterVlanId=sysSnoopVlanRouterVlanId, atiAclClassifierEtherType=atiAclClassifierEtherType, sysStormCtrlEntry=sysStormCtrlEntry, sysRadiusExtClient=sysRadiusExtClient, sysLaPortTable=sysLaPortTable, sysDhcpAutoConfiguration=sysDhcpAutoConfiguration, sysRadiusExtServerResponseTime=sysRadiusExtServerResponseTime, sysSslSecureHttpStatus=sysSslSecureHttpStatus, atiAclInProfileActionIndex=atiAclInProfileActionIndex, fslldp=fslldp, sysSnoopVlanQuerier=sysSnoopVlanQuerier, sysSwitchBaseMacAddress=sysSwitchBaseMacAddress, sysUserAuthMgrId=sysUserAuthMgrId, sysSnoopInstanceConfigInstId=sysSnoopInstanceConfigInstId, dot1sMstiBridgePriority=dot1sMstiBridgePriority, dot1wPortRoleType=dot1wPortRoleType, dot1qPvid=dot1qPvid, dhcpSnoopBindindDBRowStatus=dhcpSnoopBindindDBRowStatus, atiAclClassifierTable=atiAclClassifierTable, dot1sCistPortRestrictedTCN=dot1sCistPortRestrictedTCN, dhcpSnoopBindindDatabaseEntry=dhcpSnoopBindindDatabaseEntry, fsLldpLocPortTable=fsLldpLocPortTable, atiAclProfileActionEntry=atiAclProfileActionEntry, dot1sCistDynamicPathcostCalculation=dot1sCistDynamicPathcostCalculation, sysConfigCtrlEgressStatus=sysConfigCtrlEgressStatus, sysRateCtrlIndex=sysRateCtrlIndex, dot1dBasePort=dot1dBasePort, dot1dTpPortOutOverflowFrames=dot1dTpPortOutOverflowFrames, dot1dCompliance=dot1dCompliance, trafficSegIfIndex=trafficSegIfIndex, sysDscpType13=sysDscpType13, dot1dBridgeContextId=dot1dBridgeContextId, sysPnacPaeVlanAssignment=sysPnacPaeVlanAssignment, sysSnmpaccessSecurityLevel=sysSnmpaccessSecurityLevel, sysPortCtrlMode=sysPortCtrlMode, dot1qPortIngressFiltering=dot1qPortIngressFiltering, sysStormControl=sysStormControl, dot1wPortOperVersion=dot1wPortOperVersion, sysSnmpaccessGroupIndex=sysSnmpaccessGroupIndex, sysSntpTzDSTStatus=sysSntpTzDSTStatus, sysUserAuthMgrName=sysUserAuthMgrName, dot1sGlobalErrTrapType=dot1sGlobalErrTrapType, atiMacFilter=atiMacFilter, atiAclOutProfileActionBurstSize=atiAclOutProfileActionBurstSize)
mibBuilder.exportSymbols("AT-GS950-24-MIB", sysPnacASUserConfigTable=sysPnacASUserConfigTable, dot1dTpPortOverflowTable=dot1dTpPortOverflowTable, dot1wPortTrapNotificationTable=dot1wPortTrapNotificationTable, sysLaPortActorResetAdminState=sysLaPortActorResetAdminState, dot1dUserPriorityRegenTable=dot1dUserPriorityRegenTable, sysSnoopStatsTable=sysSnoopStatsTable, dhcpSnoopPortSettingStatus=dhcpSnoopPortSettingStatus, dot1sCistPortPathCost=dot1sCistPortPathCost, dot1wPortInvalidRstBpduRxCount=dot1wPortInvalidRstBpduRxCount, dot1wOldRoleType=dot1wOldRoleType, ifMaxPhysInterfaces=ifMaxPhysInterfaces, dot1sMstiBridgeRegionalRoot=dot1sMstiBridgeRegionalRoot, dot1sCistPortOperEdgeStatus=dot1sCistPortOperEdgeStatus, dhcpSnoopBindindDatabaseTable=dhcpSnoopBindindDatabaseTable, atiAclClassifierDstMac=atiAclClassifierDstMac, sysSnoopVlanRowStatus=sysSnoopVlanRowStatus, sysPortSecurity=sysPortSecurity, voicevlanOUITable=voicevlanOUITable, sysPnacPaePortEntry=sysPnacPaePortEntry, sysUserAuthMgrTable=sysUserAuthMgrTable, l2Dfs=l2Dfs, sysPortCtrlFlowControl=sysPortCtrlFlowControl, dot1dTpFdbEntry=dot1dTpFdbEntry, dot1dPortCapabilitiesTable=dot1dPortCapabilitiesTable, dot1sCistTopChanges=dot1sCistTopChanges, atiAclClassifierSrcMac=atiAclClassifierSrcMac, atiDstMacFilterIndex=atiDstMacFilterIndex, dot1dStpPortAdminPointToPoint=dot1dStpPortAdminPointToPoint, sysSnoopInstanceConfigEntry=sysSnoopInstanceConfigEntry, sysDscpType18=sysDscpType18, dot1sMstiPortInfoSemState=dot1sMstiPortInfoSemState, dot1sTraps=dot1sTraps, atiDstMacFilterEntry=atiDstMacFilterEntry, sysDfsClfrOutProActionId=sysDfsClfrOutProActionId, dot1sMstiRootCost=dot1sMstiRootCost, sysLaMaxPortsPerPortChannel=sysLaMaxPortsPerPortChannel, sysSnoopVlanMcastMacFwdTable=sysSnoopVlanMcastMacFwdTable, sysConfigSaveIpAddr=sysConfigSaveIpAddr, sysDscpType60=sysDscpType60, sysDscpType16=sysDscpType16, sysDscpType54=sysDscpType54, dot1dTpPortInOverflowDiscards=dot1dTpPortInOverflowDiscards, sysPnacASUserConfigEntry=sysPnacASUserConfigEntry, sysConfigCtrlStatus=sysConfigCtrlStatus, sysSnmpViewTreeTable=sysSnmpViewTreeTable, sysSnoopVlanMcastMacFwdPortList=sysSnoopVlanMcastMacFwdPortList, portBaseVlanEnablePerPort=portBaseVlanEnablePerPort, dhcpSnoopBackupDatabaseInterval=dhcpSnoopBackupDatabaseInterval, dot1dPortCapabilities=dot1dPortCapabilities, ifSetMgmtVlanList=ifSetMgmtVlanList, DscpOrAny=DscpOrAny, dot1dPortOutboundAccessPriorityTable=dot1dPortOutboundAccessPriorityTable, dot1sMstiConfigIdSel=dot1sMstiConfigIdSel, atiAclPolicyInProfileIndex=atiAclPolicyInProfileIndex, sysDscpType24=sysDscpType24, dot1wTopologyChgTrap=dot1wTopologyChgTrap, sysDfsOutProfileAction=sysDfsOutProfileAction, sysSnoopStatsRxAsmReports=sysSnoopStatsRxAsmReports, dot1sCistMaxAge=dot1sCistMaxAge, sysInitiateRemoteConfigRestore=sysInitiateRemoteConfigRestore, dot1sCistPortDesignatedRoot=dot1sCistPortDesignatedRoot, dot1sInvalidBpduRxdTrap=dot1sInvalidBpduRxdTrap, dot1dDevicePriorityGroup=dot1dDevicePriorityGroup, dot1qGvrpStatus=dot1qGvrpStatus, atiAclClassifierProtocol=atiAclClassifierProtocol, dot1dStpPortDesignatedPort=dot1dStpPortDesignatedPort, dot1sMstiSelectedPortRole=dot1sMstiSelectedPortRole, sysSnoopStatsVlanId=sysSnoopStatsVlanId, sysDscpType62=sysDscpType62, sysDscpType11=sysDscpType11, sysLogFileName=sysLogFileName, dot1qFdbTable=dot1qFdbTable, dot1dStpPortAdminEdgePort=dot1dStpPortAdminEdgePort, atiAclClassifierVlanId=atiAclClassifierVlanId, fsLldpLocPortEntry=fsLldpLocPortEntry, PYSNMP_MODULE_ID=at_GS95024v3, dot1qStaticMcastPortTable=dot1qStaticMcastPortTable, sysSshCipherList=sysSshCipherList, sysDscpType40=sysDscpType40, sysUserAuthMgrRowStatus=sysUserAuthMgrRowStatus, sysDscpType55=sysDscpType55, sysDfsClfrTable=sysDfsClfrTable, dot1wPortExtEntry=dot1wPortExtEntry, sysSnoopVlanRouterInstId=sysSnoopVlanRouterInstId, dot1qStaticUnicastAddress=dot1qStaticUnicastAddress, sysLBDPortLoopStatus=sysLBDPortLoopStatus, dot1dBaseBridgeAddress=dot1dBaseBridgeAddress, sysSysContact=sysSysContact, dot1dTrafficClass=dot1dTrafficClass, dot1sMstiTimeSinceTopologyChange=dot1sMstiTimeSinceTopologyChange, sysDscpType07=sysDscpType07, dot1qVlanFdbId=dot1qVlanFdbId, dot1wPortRestrictedTCN=dot1wPortRestrictedTCN, dot1qStaticUnicastReceivePort=dot1qStaticUnicastReceivePort, fsLldpRemTablesChange=fsLldpRemTablesChange, portBaseVlanStatus=portBaseVlanStatus, sysRmonHwHistorySupp=sysRmonHwHistorySupp, sysLaPortChannelMacSelection=sysLaPortChannelMacSelection, sysSnmpviewTreeType=sysSnmpviewTreeType, sysPnacASUserConfigPortList=sysPnacASUserConfigPortList, voicevlanPortControlIndex=voicevlanPortControlIndex, atiAclInProfileActionPermitDeny=atiAclInProfileActionPermitDeny, sysLaOperStatus=sysLaOperStatus, dot1dStpMaxAge=dot1dStpMaxAge, dot1qVlanIndex=dot1qVlanIndex, sysDscpType46=sysDscpType46, sysSnmpGroupTable=sysSnmpGroupTable, sysPnacPaeProtocolMode=sysPnacPaeProtocolMode, sysSyslogFacility=sysSyslogFacility, sysRadiusExtServerEntryStatus=sysRadiusExtServerEntryStatus, dot1sPortRoleTrapNotificationTable=dot1sPortRoleTrapNotificationTable, sysLaPortChannelDefaultPortIndex=sysLaPortChannelDefaultPortIndex, dot1dStpHoldTime=dot1dStpHoldTime, sysSshGeneralGroup=sysSshGeneralGroup, sysDscpType05=sysDscpType05, sysLaPortBundleState=sysLaPortBundleState, dot1qVlanStaticRowStatus=dot1qVlanStaticRowStatus, dot1dStaticAddress=dot1dStaticAddress, sysDfsOutProfileActionMID=sysDfsOutProfileActionMID, dot1wNewRootTrap=dot1wNewRootTrap, sysRmonHwAlarmSupp=sysRmonHwAlarmSupp, dot1sMstpUpCount=dot1sMstpUpCount, sysLaSystem=sysLaSystem, fsLldpTraceInput=fsLldpTraceInput, dot1sCistPortInfoSemState=dot1sCistPortInfoSemState, sysLaPortActorAdminPort=sysLaPortActorAdminPort, sysSnoopReportFwdOnAllPorts=sysSnoopReportFwdOnAllPorts, sysRateCtrlTable=sysRateCtrlTable, sysMirrorCtrlTable=sysMirrorCtrlTable, sysMirrorCtrlEgressMirroring=sysMirrorCtrlEgressMirroring, dot1dBaseEntry=dot1dBaseEntry, sysDfsMultiFieldClfrStatus=sysDfsMultiFieldClfrStatus, dot1sPortTrapIndex=dot1sPortTrapIndex, dot1sInstanceVlanMapped2k=dot1sInstanceVlanMapped2k, sysDfsCoSqAlgorithmTable=sysDfsCoSqAlgorithmTable, l2Dot1qVlan=l2Dot1qVlan, portBaseStaticUnicastTable=portBaseStaticUnicastTable, atiAclOutProfileActionPermitDeny=atiAclOutProfileActionPermitDeny, sysFirmwareVersion=sysFirmwareVersion, dot1qVlanGlobalTrace=dot1qVlanGlobalTrace, fsLldpMisConfigProtocolIdentity=fsLldpMisConfigProtocolIdentity, ifIpTable=ifIpTable, atiAclPortListTable=atiAclPortListTable, issJumboFramePerPortMtu=issJumboFramePerPortMtu, traps=traps, dot1dBasePortTable=dot1dBasePortTable, sysSnmpUserEntry=sysSnmpUserEntry, EnabledStatus=EnabledStatus, dot1sCistPortDesignatedBridge=dot1sCistPortDesignatedBridge, PaeControlledPortStatus=PaeControlledPortStatus, dot1dStaticRowStatus=dot1dStaticRowStatus, dot1sCistRootPort=dot1sCistRootPort, sysSnoopVlan=sysSnoopVlan, sysMirrorCtrlStatus=sysMirrorCtrlStatus, dot1sCistBridgePriority=dot1sCistBridgePriority, dot1qMaxVlanId=dot1qMaxVlanId, dot1sUnMapVlanIndex=dot1sUnMapVlanIndex, sysStormCtrlThreshold=sysStormCtrlThreshold, dot1sOldDesignatedRoot=dot1sOldDesignatedRoot, voicevlanSystem=voicevlanSystem, dot1dStpExtEntry=dot1dStpExtEntry, sysPnacPaeSecureVlan=sysPnacPaeSecureVlan, dot1dStaticStatus=dot1dStaticStatus, atiAclInProfileActionEntry=atiAclInProfileActionEntry, sysDfsMeterTable=sysDfsMeterTable, dot1dTpFdbPort=dot1dTpFdbPort, dot1dStpTimeSinceTopologyChange=dot1dStpTimeSinceTopologyChange, sysSslGeneralGroup=sysSslGeneralGroup, sysSyslogClearLog=sysSyslogClearLog, dot1dTpPortInOverflowFrames=dot1dTpPortInOverflowFrames, sysRadiusExtServerAddress=sysRadiusExtServerAddress, sysDfsMultiFieldClfrFilterType=sysDfsMultiFieldClfrFilterType, sysSslDefaultCipherList=sysSslDefaultCipherList, dot1qTpFdbEntry=dot1qTpFdbEntry, dot1sCistRoot=dot1sCistRoot, dot1qStaticMulticastEntry=dot1qStaticMulticastEntry, dot1sCistForcePortState=dot1sCistForcePortState, sysLaPort=sysLaPort, fsLldpSystemControl=fsLldpSystemControl, dot1dPortOverflowGroup=dot1dPortOverflowGroup, dot1dGarp=dot1dGarp, sysSnoopSendQueryOnTopoChange=sysSnoopSendQueryOnTopoChange, sysLBDPortStatus=sysLBDPortStatus, dot1qStaticUnicastEntry=dot1qStaticUnicastEntry, sysSnmpTrapManagerEntry=sysSnmpTrapManagerEntry, sysSyslogConfigModule=sysSyslogConfigModule, dot1qVlanNumDeletes=dot1qVlanNumDeletes, sysPnacASUserConfigPassword=sysPnacASUserConfigPassword, sysSyslogLogs=sysSyslogLogs, sysSntpTzDSTEndMon=sysSntpTzDSTEndMon, dot1qPortVlanTable=dot1qPortVlanTable, dot1wPortInvalidTcnBpduRxCount=dot1wPortInvalidTcnBpduRxCount, fsLldpMisConfigOperMauType=fsLldpMisConfigOperMauType, dot1sCistBridgeForwardDelay=dot1sCistBridgeForwardDelay, voiceVlanTimeout=voiceVlanTimeout, dot1qStaticMulticastStatus=dot1qStaticMulticastStatus, l2Sntp=l2Sntp, dot1qVlanTimeMark=dot1qVlanTimeMark, atiAclOutProfileActionIndex=atiAclOutProfileActionIndex, dot1wRstTrapsControlEntry=dot1wRstTrapsControlEntry, sysDfsMultiFieldClfrTable=sysDfsMultiFieldClfrTable, dot1dPortCapabilitiesEntry=dot1dPortCapabilitiesEntry, atiAclOutProfileActionEntry=atiAclOutProfileActionEntry, atiAclPolicyClassifierIndex=atiAclPolicyClassifierIndex, dot1sMstiPortInvalidBPDUsRcvd=dot1sMstiPortInvalidBPDUsRcvd, ifIpBroadcastAddr=ifIpBroadcastAddr, sysUserAuthMgrEntry=sysUserAuthMgrEntry, tabPortBaseStaticMulticastEntry=tabPortBaseStaticMulticastEntry, dot1sCistPortOperVersion=dot1sCistPortOperVersion, sysDscpType14=sysDscpType14, dot1sPktErrVal=dot1sPktErrVal, sysSnoopVlanFilterVlanId=sysSnoopVlanFilterVlanId, fsLldpLocPortIdSubtype=fsLldpLocPortIdSubtype, dot1sResetVlanList=dot1sResetVlanList, dot1wPortTxConfigBpduCount=dot1wPortTxConfigBpduCount, sysDscpType49=sysDscpType49, dot1dTpFdbTable=dot1dTpFdbTable, dot1sMstiPortReceivedBPDUs=dot1sMstiPortReceivedBPDUs, atiAcl=atiAcl, dot1dPortOutboundAccessPriorityEntry=dot1dPortOutboundAccessPriorityEntry, sysDscpType59=sysDscpType59, sysPnacGuestVlanId=sysPnacGuestVlanId, sysSshStatus=sysSshStatus, sysDfsInProfileActionId=sysDfsInProfileActionId, dot1dBasePortCircuit=dot1dBasePortCircuit, sysIpAuthMgrTable=sysIpAuthMgrTable, dot1sMstTable=dot1sMstTable, dot1dStpTopChanges=dot1dStpTopChanges, sysDscpEnable=sysDscpEnable, atiAclClassifierDstIp=atiAclClassifierDstIp, sysIpAuthMgrIpMask=sysIpAuthMgrIpMask, dot1dNotifications=dot1dNotifications, sysSnoopVlanSnoopStatus=sysSnoopVlanSnoopStatus, sysSnoopPortPurgeInterval=sysSnoopPortPurgeInterval, dot1qPortGvrpStatus=dot1qPortGvrpStatus, atiAclClassifierDstIpMaskLen=atiAclClassifierDstIpMaskLen, fsLldpTLV=fsLldpTLV, dot1dStaticAllowedToGoTable=dot1dStaticAllowedToGoTable, sysRadiusExtServerAccPort=sysRadiusExtServerAccPort, sysLBDdetect=sysLBDdetect, sysSnoopVlanMcastMacFwdGroupAddress=sysSnoopVlanMcastMacFwdGroupAddress, dot1dPortGarpLeaveAllTime=dot1dPortGarpLeaveAllTime, sysDscpType41=sysDscpType41, dot1wPortTopoChSmState=dot1wPortTopoChSmState, sysLoginAuthentication=sysLoginAuthentication, dot1sMstiRootPort=dot1sMstiRootPort, tabPortBaseVlanCurrentEntry=tabPortBaseVlanCurrentEntry, dot1sVlanInstanceMappingEntry=dot1sVlanInstanceMappingEntry, dot1dStpPortTable=dot1dStpPortTable, l2Vlan=l2Vlan, atiAclPolicySequence=atiAclPolicySequence, sysDscpType38=sysDscpType38, dot1wSetTraps=dot1wSetTraps, dot1dBasePortMtuExceededDiscards=dot1dBasePortMtuExceededDiscards)
mibBuilder.exportSymbols("AT-GS950-24-MIB", dot1wContextName=dot1wContextName, sysSnmpGroup=sysSnmpGroup, sysPnacAuthenticServer=sysPnacAuthenticServer, sysSnmpsnmpTrapManagerName=sysSnmpsnmpTrapManagerName, dot1sPortRoleType=dot1sPortRoleType, portBaseStaticUnicastAddress=portBaseStaticUnicastAddress, dot1sMstpDownCount=dot1sMstpDownCount, sysSnoopStatsRxGrpQueries=sysSnoopStatsRxGrpQueries, dot1sMstTrapsControlEntry=dot1sMstTrapsControlEntry, dot1dTpLearnedEntryDiscards=dot1dTpLearnedEntryDiscards, sysMirrorCtrlIngressMirroring=sysMirrorCtrlIngressMirroring, sysRestart=sysRestart, sysDfsClassifier=sysDfsClassifier, dot1sMstiForcePortState=dot1sMstiForcePortState, sysIpAuthMgrPortList=sysIpAuthMgrPortList, dot1dExtBaseEntry=dot1dExtBaseEntry, dot1wGenTrap=dot1wGenTrap, dot1wGlobalErrTrap=dot1wGlobalErrTrap, fsLldpMisConfigPowerMDI=fsLldpMisConfigPowerMDI, sysSyslogLogging=sysSyslogLogging, dot1dTpAgingTime=dot1dTpAgingTime, sysMulticastOnOff=sysMulticastOnOff, sysDscpType53=sysDscpType53, ifMainAdminStatus=ifMainAdminStatus, BridgeId=BridgeId, dot1sMstiPortStateTransitionSemState=dot1sMstiPortStateTransitionSemState, sysSyslogGeneralGroup=sysSyslogGeneralGroup, sysDfsClfrStatus=sysDfsClfrStatus, sysInitiateUlLogFile=sysInitiateUlLogFile, sysDscpType50=sysDscpType50, dot1dPortPriorityTable=dot1dPortPriorityTable, sysSnmpEngineID=sysSnmpEngineID, sysDfsEnterpriseCoSqAlgorithm=sysDfsEnterpriseCoSqAlgorithm, dot1qVlanCurrentTable=dot1qVlanCurrentTable, dot1wPort=dot1wPort, sysHardwareVersion=sysHardwareVersion, dot1dTrafficClassPriority=dot1dTrafficClassPriority, dot1sCistPortAdminEdgeStatus=dot1sCistPortAdminEdgeStatus, dot1qBaseTable=dot1qBaseTable, sysDfsOutProfileActionId=sysDfsOutProfileActionId, VlanId=VlanId, dot1sCistPortEffectivePortState=dot1sCistPortEffectivePortState, InetAddressIPv4=InetAddressIPv4, sysSnoopStatsTxGenQueries=sysSnoopStatsTxGenQueries, fsLldpStatistics=fsLldpStatistics, dot1qVlanGlobalsContextId=dot1qVlanGlobalsContextId, dot1dPriorityGroup=dot1dPriorityGroup, sysLBDInterval=sysLBDInterval, voicevlanOUIStatus=voicevlanOUIStatus, ifIpEntry=ifIpEntry, trafficSegTable=trafficSegTable, AuthenticMethod=AuthenticMethod, sysDscpType56=sysDscpType56, dot1dBaseContextId=dot1dBaseContextId, dot1dDefaultPriorityGroup=dot1dDefaultPriorityGroup, dot1qMIBObjects=dot1qMIBObjects, sysInitiateDlFirmware=sysInitiateDlFirmware, sysConfigRestoreFileName=sysConfigRestoreFileName, sysLedEcoModeStatus=sysLedEcoModeStatus, dot1sMstiTopChanges=dot1sMstiTopChanges, dot1sPortTrapNotificationTable=dot1sPortTrapNotificationTable, sysDscpType34=sysDscpType34, dot1dBasePortEntry=dot1dBasePortEntry, sysDscpTypeGroup=sysDscpTypeGroup, fsLldpMisConfigPortProtoVlanID=fsLldpMisConfigPortProtoVlanID, sysWebAutoTimeoutInterval=sysWebAutoTimeoutInterval, dot1dExtBase=dot1dExtBase, sysDlFirmwareName=sysDlFirmwareName, dot1dStpDesignatedRoot=dot1dStpDesignatedRoot, fsLldpDupManagmentAddress=fsLldpDupManagmentAddress, sysLaPortPartnerResetAdminState=sysLaPortPartnerResetAdminState, dot1qStaticUnicastRowStatus=dot1qStaticUnicastRowStatus, ifMainIndex=ifMainIndex, sysSntpTzDSTStartMinute=sysSntpTzDSTStartMinute, sysDscpType37=sysDscpType37, dot1sMstiPortTopologyChangeSemState=dot1sMstiPortTopologyChangeSemState, atiAclOutProfileActionRowStatus=atiAclOutProfileActionRowStatus, sysDfsMIBObjects=sysDfsMIBObjects, sysDfsOutProfileActionTable=sysDfsOutProfileActionTable, dot1dStpPortPathCost=dot1dStpPortPathCost, sysDscpType25=sysDscpType25, sysPnacASUserConfigPermission=sysPnacASUserConfigPermission, sysDscpType42=sysDscpType42, sysPnacASUserConfigDynamicVlanID=sysPnacASUserConfigDynamicVlanID, sysLBDStateEnable=sysLBDStateEnable, sysSnmpviewTreeStatus=sysSnmpviewTreeStatus, sysPnacASUserConfigUserName=sysPnacASUserConfigUserName, dot1sInstanceIndex=dot1sInstanceIndex, sysDscpType23=sysDscpType23, dot1sCistPortPriority=dot1sCistPortPriority, dhcpSnoopBackupDatabase=dhcpSnoopBackupDatabase, sysConfigCtrlTable=sysConfigCtrlTable, dot1sMstiNewRootBridgeCount=dot1sMstiNewRootBridgeCount, dot1sCistPortStateTransitionSemState=dot1sCistPortStateTransitionSemState, sysSnmpaccessSecurityModel=sysSnmpaccessSecurityModel, dot1dTp=dot1dTp, sysDscpType12=sysDscpType12, dot1sContextName=dot1sContextName, dot1sMstiBridgeTable=dot1sMstiBridgeTable, sysUserAuthMgr=sysUserAuthMgr, dot1sCistCurrentPortRole=dot1sCistCurrentPortRole, atiAclPortListIndex=atiAclPortListIndex, LacpKey=LacpKey, l2VoiceVlan=l2VoiceVlan, sysDscpType63=sysDscpType63, atiAclClassifierIndex=atiAclClassifierIndex, sysLaPortChannel=sysLaPortChannel, sysPnacNasId=sysPnacNasId, sysDscpType29=sysDscpType29, sysSnoopInstanceGlobalTable=sysSnoopInstanceGlobalTable, sysSnoopRouterPortPurgeInterval=sysSnoopRouterPortPurgeInterval, dot1wRstContextId=dot1wRstContextId, sysDfsInProfileActionStatus=sysDfsInProfileActionStatus, dot1sCistPortOperP2P=dot1sCistPortOperP2P, atiAclClassifierCos=atiAclClassifierCos, dot1sCistPortRoleTransitionSemState=dot1sCistPortRoleTransitionSemState, dot1wPortInfoSmState=dot1wPortInfoSmState, portBaseStaticMulticastVlanIndex=portBaseStaticMulticastVlanIndex, sysSnoopRetryCount=sysSnoopRetryCount, dot1dStpBridgeHelloTime=dot1dStpBridgeHelloTime, sysSnoopVlanMcastMacFwdVlanId=sysSnoopVlanMcastMacFwdVlanId, dot1dStatic=dot1dStatic, dot1dStpPortEnable=dot1dStpPortEnable, sysSntpTzDSTEndHour=sysSntpTzDSTEndHour, dot1sMstContextId=dot1sMstContextId, dot1wSystemControl=dot1wSystemControl, dot1wRstTrapsControl=dot1wRstTrapsControl, dhcpSnoopSystemStatus=dhcpSnoopSystemStatus, ifSecondaryIpBroadcastAddr=ifSecondaryIpBroadcastAddr, sysConfigCtrlIndex=sysConfigCtrlIndex, sysDscpType36=sysDscpType36, dot1dDeviceCapabilities=dot1dDeviceCapabilities, dot1qVlanStaticPortConfigEntry=dot1qVlanStaticPortConfigEntry, sysDfsInProfileActionFlag=sysDfsInProfileActionFlag, sysDscpType27=sysDscpType27, portBaseStaticMulticastStaticEgressPorts=portBaseStaticMulticastStaticEgressPorts, ifIpSubnetMask=ifIpSubnetMask, sysLaPortIndex=sysLaPortIndex, atiAclPortListRowStatus=atiAclPortListRowStatus)
