#
# PySNMP MIB module Nortel-Magellan-Passport-VnetEuroIsdnMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-VnetEuroIsdnMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
Counter32, Gauge32, Unsigned32, RowStatus, StorageType, DisplayString = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Counter32", "Gauge32", "Unsigned32", "RowStatus", "StorageType", "DisplayString")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
sigChanIndex, sigChan = mibBuilder.importSymbols("Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex", "sigChan")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter32, NotificationType, TimeTicks, Bits, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, iso, ObjectIdentity, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "NotificationType", "TimeTicks", "Bits", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "iso", "ObjectIdentity", "Integer32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vnetEuroIsdnMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138))
sigChanEIsdn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14))
sigChanEIsdnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 1), )
if mibBuilder.loadTexts: sigChanEIsdnRowStatusTable.setStatus('mandatory')
sigChanEIsdnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnRowStatusEntry.setStatus('mandatory')
sigChanEIsdnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnRowStatus.setStatus('mandatory')
sigChanEIsdnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnComponentName.setStatus('mandatory')
sigChanEIsdnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnStorageType.setStatus('mandatory')
sigChanEIsdnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanEIsdnIndex.setStatus('mandatory')
sigChanEIsdnL2Table = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11), )
if mibBuilder.loadTexts: sigChanEIsdnL2Table.setStatus('mandatory')
sigChanEIsdnL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnL2Entry.setStatus('mandatory')
sigChanEIsdnT23 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnT23.setStatus('mandatory')
sigChanEIsdnT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnT200.setStatus('mandatory')
sigChanEIsdnN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnN200.setStatus('mandatory')
sigChanEIsdnT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnT203.setStatus('mandatory')
sigChanEIsdnCircuitSwitchedK = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnCircuitSwitchedK.setStatus('mandatory')
sigChanEIsdnL3Table = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 12), )
if mibBuilder.loadTexts: sigChanEIsdnL3Table.setStatus('mandatory')
sigChanEIsdnL3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnL3Entry.setStatus('mandatory')
sigChanEIsdnT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnT310.setStatus('mandatory')
sigChanEIsdnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 13), )
if mibBuilder.loadTexts: sigChanEIsdnProvTable.setStatus('mandatory')
sigChanEIsdnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnProvEntry.setStatus('mandatory')
sigChanEIsdnSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnSide.setStatus('mandatory')
sigChanEIsdnMaxNonCallConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnMaxNonCallConcurrent.setStatus('mandatory')
sigChanEIsdnOverlapSending = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnOverlapSending.setStatus('mandatory')
sigChanEIsdnOverlapReceiving = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnOverlapReceiving.setStatus('mandatory')
sigChanEIsdnStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 14), )
if mibBuilder.loadTexts: sigChanEIsdnStateTable.setStatus('mandatory')
sigChanEIsdnStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnStateEntry.setStatus('mandatory')
sigChanEIsdnAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnAdminState.setStatus('mandatory')
sigChanEIsdnOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnOperationalState.setStatus('mandatory')
sigChanEIsdnUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnUsageState.setStatus('mandatory')
sigChanEIsdnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 15), )
if mibBuilder.loadTexts: sigChanEIsdnStatsTable.setStatus('mandatory')
sigChanEIsdnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnStatsEntry.setStatus('mandatory')
sigChanEIsdnTotalCallsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnTotalCallsToIf.setStatus('mandatory')
sigChanEIsdnTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnTotalCallsFromIf.setStatus('mandatory')
sigChanEIsdnNonCallAssocSessionsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnNonCallAssocSessionsToIf.setStatus('mandatory')
sigChanEIsdnNonCallAssocSessionsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnNonCallAssocSessionsFromIf.setStatus('mandatory')
sigChanEIsdnOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16), )
if mibBuilder.loadTexts: sigChanEIsdnOperTable.setStatus('mandatory')
sigChanEIsdnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnOperEntry.setStatus('mandatory')
sigChanEIsdnActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnActiveChannels.setStatus('mandatory')
sigChanEIsdnActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnActiveVoiceChannels.setStatus('mandatory')
sigChanEIsdnActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnActiveDataChannels.setStatus('mandatory')
sigChanEIsdnPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnPeakActiveChannels.setStatus('mandatory')
sigChanEIsdnPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnPeakActiveVoiceChannels.setStatus('mandatory')
sigChanEIsdnPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnPeakActiveDataChannels.setStatus('mandatory')
sigChanEIsdnDChanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("outOfService", 0), ("establishing", 1), ("established", 2), ("enabling", 3), ("inService", 4), ("restarting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnDChanStatus.setStatus('mandatory')
sigChanEIsdnToolsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 17), )
if mibBuilder.loadTexts: sigChanEIsdnToolsTable.setStatus('mandatory')
sigChanEIsdnToolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnToolsEntry.setStatus('mandatory')
sigChanEIsdnTracing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnTracing.setStatus('mandatory')
sigChanEIsdnOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 18), )
if mibBuilder.loadTexts: sigChanEIsdnOptTable.setStatus('mandatory')
sigChanEIsdnOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"))
if mibBuilder.loadTexts: sigChanEIsdnOptEntry.setStatus('mandatory')
sigChanEIsdnVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("etsiGeneric", 0), ("austria", 1), ("germany", 2))).clone('etsiGeneric')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnVariant.setStatus('mandatory')
sigChanEIsdnConnectServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 18, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnConnectServiceTimer.setStatus('mandatory')
sigChanEIsdnResponseServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 18, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnResponseServiceTimer.setStatus('mandatory')
sigChanEIsdnLifetimeServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnLifetimeServiceTimer.setStatus('mandatory')
sigChanEIsdnFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2))
sigChanEIsdnFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 1), )
if mibBuilder.loadTexts: sigChanEIsdnFramerRowStatusTable.setStatus('mandatory')
sigChanEIsdnFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: sigChanEIsdnFramerRowStatusEntry.setStatus('mandatory')
sigChanEIsdnFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerRowStatus.setStatus('mandatory')
sigChanEIsdnFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerComponentName.setStatus('mandatory')
sigChanEIsdnFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerStorageType.setStatus('mandatory')
sigChanEIsdnFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanEIsdnFramerIndex.setStatus('mandatory')
sigChanEIsdnFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 10), )
if mibBuilder.loadTexts: sigChanEIsdnFramerProvTable.setStatus('mandatory')
sigChanEIsdnFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: sigChanEIsdnFramerProvEntry.setStatus('mandatory')
sigChanEIsdnFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanEIsdnFramerInterfaceName.setStatus('mandatory')
sigChanEIsdnFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 12), )
if mibBuilder.loadTexts: sigChanEIsdnFramerStateTable.setStatus('mandatory')
sigChanEIsdnFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: sigChanEIsdnFramerStateEntry.setStatus('mandatory')
sigChanEIsdnFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerAdminState.setStatus('mandatory')
sigChanEIsdnFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerOperationalState.setStatus('mandatory')
sigChanEIsdnFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerUsageState.setStatus('mandatory')
sigChanEIsdnFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13), )
if mibBuilder.loadTexts: sigChanEIsdnFramerStatsTable.setStatus('mandatory')
sigChanEIsdnFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnIndex"), (0, "Nortel-Magellan-Passport-VnetEuroIsdnMIB", "sigChanEIsdnFramerIndex"))
if mibBuilder.loadTexts: sigChanEIsdnFramerStatsEntry.setStatus('mandatory')
sigChanEIsdnFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerFrmToIf.setStatus('mandatory')
sigChanEIsdnFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerFrmFromIf.setStatus('mandatory')
sigChanEIsdnFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerOctetFromIf.setStatus('mandatory')
sigChanEIsdnFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerAborts.setStatus('mandatory')
sigChanEIsdnFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerCrcErrors.setStatus('mandatory')
sigChanEIsdnFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerLrcErrors.setStatus('mandatory')
sigChanEIsdnFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerNonOctetErrors.setStatus('mandatory')
sigChanEIsdnFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerOverruns.setStatus('mandatory')
sigChanEIsdnFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerUnderruns.setStatus('mandatory')
sigChanEIsdnFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 14, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanEIsdnFramerLargeFrmErrors.setStatus('mandatory')
vnetEuroIsdnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 1))
vnetEuroIsdnGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 1, 5))
vnetEuroIsdnGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 1, 5, 2))
vnetEuroIsdnGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 1, 5, 2, 2))
vnetEuroIsdnCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 3))
vnetEuroIsdnCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 3, 5))
vnetEuroIsdnCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 3, 5, 2))
vnetEuroIsdnCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 138, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VnetEuroIsdnMIB", sigChanEIsdnStatsEntry=sigChanEIsdnStatsEntry, sigChanEIsdnFramerStatsEntry=sigChanEIsdnFramerStatsEntry, sigChanEIsdnOptTable=sigChanEIsdnOptTable, sigChanEIsdnFramerComponentName=sigChanEIsdnFramerComponentName, sigChanEIsdnFramerStatsTable=sigChanEIsdnFramerStatsTable, sigChanEIsdnFramerFrmToIf=sigChanEIsdnFramerFrmToIf, sigChanEIsdnUsageState=sigChanEIsdnUsageState, vnetEuroIsdnCapabilitiesBE=vnetEuroIsdnCapabilitiesBE, sigChanEIsdnFramerRowStatus=sigChanEIsdnFramerRowStatus, sigChanEIsdnTotalCallsToIf=sigChanEIsdnTotalCallsToIf, sigChanEIsdnCircuitSwitchedK=sigChanEIsdnCircuitSwitchedK, sigChanEIsdnNonCallAssocSessionsToIf=sigChanEIsdnNonCallAssocSessionsToIf, sigChanEIsdnRowStatusTable=sigChanEIsdnRowStatusTable, vnetEuroIsdnGroup=vnetEuroIsdnGroup, sigChanEIsdnStatsTable=sigChanEIsdnStatsTable, sigChanEIsdnDChanStatus=sigChanEIsdnDChanStatus, sigChanEIsdnOperationalState=sigChanEIsdnOperationalState, sigChanEIsdnProvEntry=sigChanEIsdnProvEntry, sigChanEIsdnIndex=sigChanEIsdnIndex, sigChanEIsdnActiveChannels=sigChanEIsdnActiveChannels, sigChanEIsdnN200=sigChanEIsdnN200, sigChanEIsdnOperEntry=sigChanEIsdnOperEntry, sigChanEIsdnFramerInterfaceName=sigChanEIsdnFramerInterfaceName, sigChanEIsdnFramerAborts=sigChanEIsdnFramerAborts, sigChanEIsdnAdminState=sigChanEIsdnAdminState, sigChanEIsdnActiveDataChannels=sigChanEIsdnActiveDataChannels, sigChanEIsdnT23=sigChanEIsdnT23, vnetEuroIsdnCapabilitiesBE01=vnetEuroIsdnCapabilitiesBE01, sigChanEIsdnToolsTable=sigChanEIsdnToolsTable, vnetEuroIsdnMIB=vnetEuroIsdnMIB, sigChanEIsdnFramerProvEntry=sigChanEIsdnFramerProvEntry, sigChanEIsdnFramerStateEntry=sigChanEIsdnFramerStateEntry, sigChanEIsdnT203=sigChanEIsdnT203, sigChanEIsdnRowStatus=sigChanEIsdnRowStatus, sigChanEIsdnFramerNonOctetErrors=sigChanEIsdnFramerNonOctetErrors, sigChanEIsdnOverlapReceiving=sigChanEIsdnOverlapReceiving, sigChanEIsdnVariant=sigChanEIsdnVariant, sigChanEIsdnFramerUnderruns=sigChanEIsdnFramerUnderruns, sigChanEIsdnOverlapSending=sigChanEIsdnOverlapSending, sigChanEIsdnPeakActiveChannels=sigChanEIsdnPeakActiveChannels, vnetEuroIsdnGroupBE01=vnetEuroIsdnGroupBE01, sigChanEIsdnPeakActiveVoiceChannels=sigChanEIsdnPeakActiveVoiceChannels, sigChanEIsdnFramerProvTable=sigChanEIsdnFramerProvTable, sigChanEIsdn=sigChanEIsdn, sigChanEIsdnPeakActiveDataChannels=sigChanEIsdnPeakActiveDataChannels, sigChanEIsdnL3Entry=sigChanEIsdnL3Entry, sigChanEIsdnFramerAdminState=sigChanEIsdnFramerAdminState, sigChanEIsdnComponentName=sigChanEIsdnComponentName, sigChanEIsdnFramerStateTable=sigChanEIsdnFramerStateTable, sigChanEIsdnFramerFrmFromIf=sigChanEIsdnFramerFrmFromIf, sigChanEIsdnConnectServiceTimer=sigChanEIsdnConnectServiceTimer, sigChanEIsdnFramerUsageState=sigChanEIsdnFramerUsageState, sigChanEIsdnStorageType=sigChanEIsdnStorageType, sigChanEIsdnL2Table=sigChanEIsdnL2Table, sigChanEIsdnToolsEntry=sigChanEIsdnToolsEntry, sigChanEIsdnT200=sigChanEIsdnT200, sigChanEIsdnL2Entry=sigChanEIsdnL2Entry, sigChanEIsdnT310=sigChanEIsdnT310, sigChanEIsdnProvTable=sigChanEIsdnProvTable, sigChanEIsdnFramerLrcErrors=sigChanEIsdnFramerLrcErrors, sigChanEIsdnFramerIndex=sigChanEIsdnFramerIndex, sigChanEIsdnMaxNonCallConcurrent=sigChanEIsdnMaxNonCallConcurrent, sigChanEIsdnOptEntry=sigChanEIsdnOptEntry, sigChanEIsdnFramerOctetFromIf=sigChanEIsdnFramerOctetFromIf, sigChanEIsdnStateTable=sigChanEIsdnStateTable, sigChanEIsdnFramerOverruns=sigChanEIsdnFramerOverruns, sigChanEIsdnRowStatusEntry=sigChanEIsdnRowStatusEntry, sigChanEIsdnResponseServiceTimer=sigChanEIsdnResponseServiceTimer, sigChanEIsdnSide=sigChanEIsdnSide, sigChanEIsdnActiveVoiceChannels=sigChanEIsdnActiveVoiceChannels, sigChanEIsdnNonCallAssocSessionsFromIf=sigChanEIsdnNonCallAssocSessionsFromIf, sigChanEIsdnTotalCallsFromIf=sigChanEIsdnTotalCallsFromIf, sigChanEIsdnLifetimeServiceTimer=sigChanEIsdnLifetimeServiceTimer, sigChanEIsdnFramer=sigChanEIsdnFramer, sigChanEIsdnFramerRowStatusEntry=sigChanEIsdnFramerRowStatusEntry, vnetEuroIsdnGroupBE=vnetEuroIsdnGroupBE, sigChanEIsdnFramerRowStatusTable=sigChanEIsdnFramerRowStatusTable, vnetEuroIsdnGroupBE01A=vnetEuroIsdnGroupBE01A, vnetEuroIsdnCapabilitiesBE01A=vnetEuroIsdnCapabilitiesBE01A, sigChanEIsdnFramerOperationalState=sigChanEIsdnFramerOperationalState, vnetEuroIsdnCapabilities=vnetEuroIsdnCapabilities, sigChanEIsdnOperTable=sigChanEIsdnOperTable, sigChanEIsdnStateEntry=sigChanEIsdnStateEntry, sigChanEIsdnTracing=sigChanEIsdnTracing, sigChanEIsdnFramerStorageType=sigChanEIsdnFramerStorageType, sigChanEIsdnL3Table=sigChanEIsdnL3Table, sigChanEIsdnFramerLargeFrmErrors=sigChanEIsdnFramerLargeFrmErrors, sigChanEIsdnFramerCrcErrors=sigChanEIsdnFramerCrcErrors)
