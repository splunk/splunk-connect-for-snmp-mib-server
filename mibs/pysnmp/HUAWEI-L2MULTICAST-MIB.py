#
# PySNMP MIB module HUAWEI-L2MULTICAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-L2MULTICAST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIdOrAny, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrAny")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, TimeTicks, MibIdentifier, Unsigned32, Gauge32, Counter32, Counter64, Integer32, Bits, NotificationType, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "TimeTicks", "MibIdentifier", "Unsigned32", "Gauge32", "Counter32", "Counter64", "Integer32", "Bits", "NotificationType", "ModuleIdentity", "ObjectIdentity")
RowStatus, TextualConvention, TruthValue, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString", "MacAddress")
hwL2MultiCastMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181))
if mibBuilder.loadTexts: hwL2MultiCastMIB.setLastUpdated('200812300000Z')
if mibBuilder.loadTexts: hwL2MultiCastMIB.setOrganization('Huawei Technologies co.,Ltd.')
class HWPortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("invalid", 1), ("pw", 2), ("switchport", 3), ("dot1q", 4), ("termination", 5))

hwIgspMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1))
hwIgspSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 1))
hwIgmpSnoopingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwIgmpSnoopingEnabled.setStatus('current')
hwSendQueryEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSendQueryEnabled.setStatus('current')
hwSendQuerySourceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSendQuerySourceIpAddr.setStatus('current')
hwL2mcCacTrapInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2mcCacTrapInterval.setStatus('current')
hwL2mcCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2))
hwL2mcCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1), )
if mibBuilder.loadTexts: hwL2mcCfgTable.setStatus('current')
hwL2mcCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcVsiName"))
if mibBuilder.loadTexts: hwL2mcCfgEntry.setStatus('current')
hwL2mcVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcVlanIndex.setStatus('current')
hwL2mcVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcVsiName.setStatus('current')
hwL2mcEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 3), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcEnabled.setStatus('current')
hwL2mcRouterAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcRouterAgingTime.setStatus('current')
hwL2mcMaxQueryRespTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcMaxQueryRespTime.setStatus('current')
hwL2mcLastMemQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcLastMemQueryInterval.setStatus('current')
hwL2mcQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcQueryInterval.setStatus('current')
hwL2mcRobustCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 5))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcRobustCount.setStatus('current')
hwL2mcCheckRouterAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcCheckRouterAlert.setStatus('current')
hwL2mcSendRouterAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcSendRouterAlert.setStatus('current')
hwL2mcIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("version1", 1), ("version2", 2), ("version3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcIgmpVersion.setStatus('current')
hwL2mcFwdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("mac", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcFwdMode.setStatus('current')
hwL2mcPromptLeaveEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 13), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcPromptLeaveEnable.setStatus('current')
hwL2mcPromptLeaveAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcPromptLeaveAclNum.setStatus('current')
hwL2mcRouterPortLearningEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 15), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcRouterPortLearningEnable.setStatus('current')
hwL2mcReportSuppressEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 16), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcReportSuppressEnable.setStatus('current')
hwL2mcIgmpQuerierEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 17), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcIgmpQuerierEnable.setStatus('current')
hwL2mcIgmpSsmMappingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 18), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcIgmpSsmMappingEnable.setStatus('current')
hwL2mcSsmAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcSsmAclNum.setStatus('current')
hwL2mcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 2, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcRowStatus.setStatus('current')
hwL2mcStatisticsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3))
hwL2mcStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1), )
if mibBuilder.loadTexts: hwL2mcStatisticsTable.setStatus('current')
hwL2mcStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcStatsVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcStatsVsiName"))
if mibBuilder.loadTexts: hwL2mcStatisticsEntry.setStatus('current')
hwL2mcStatsVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcStatsVlanIndex.setStatus('current')
hwL2mcStatsVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcStatsVsiName.setStatus('current')
hwL2mcRecvIgmpV1ReportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpV1ReportNum.setStatus('current')
hwL2mcRecvIgmpV2ReportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpV2ReportNum.setStatus('current')
hwL2mcRecvIgmpV3ReportNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpV3ReportNum.setStatus('current')
hwL2mcRecvIgmpLeaveNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpLeaveNum.setStatus('current')
hwL2mcRecvIgmpV1QueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpV1QueryNum.setStatus('current')
hwL2mcRecvIgmpV2QueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpV2QueryNum.setStatus('current')
hwL2mcRecvIgmpV3QueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvIgmpV3QueryNum.setStatus('current')
hwL2mcRecvPimHelloNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRecvPimHelloNum.setStatus('current')
hwL2mcSendQueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcSendQueryNum.setStatus('current')
hwL2mcSendQuerySourceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcSendQuerySourceNum.setStatus('current')
hwL2mcProxyGenQueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcProxyGenQueryNum.setStatus('current')
hwL2mcProxyGroupQueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcProxyGroupQueryNum.setStatus('current')
hwL2mcProxyGroupSourceQueryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcProxyGroupSourceQueryNum.setStatus('current')
hwL2mcIgmpPacketClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 3, 1, 1, 30), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2mcIgmpPacketClearStats.setStatus('current')
hwL2mcFwdInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4))
hwL2mcFwdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1), )
if mibBuilder.loadTexts: hwL2mcFwdTable.setStatus('current')
hwL2mcFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdGroupAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdSourceAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdPortIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdPortPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdPortCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdVcOrSiteId"))
if mibBuilder.loadTexts: hwL2mcFwdEntry.setStatus('current')
hwL2mcFwdVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcFwdVlanIndex.setStatus('current')
hwL2mcFwdVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcFwdVsiName.setStatus('current')
hwL2mcFwdGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwL2mcFwdGroupAddress.setStatus('current')
hwL2mcFwdSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwL2mcFwdSourceAddress.setStatus('current')
hwL2mcFwdPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 5), HWPortType())
if mibBuilder.loadTexts: hwL2mcFwdPortType.setStatus('current')
hwL2mcFwdPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 6), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwL2mcFwdPortIfIndex.setStatus('current')
hwL2mcFwdPortPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 7), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcFwdPortPeId.setStatus('current')
hwL2mcFwdPortCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 8), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcFwdPortCeId.setStatus('current')
hwL2mcFwdPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 9), IpAddress())
if mibBuilder.loadTexts: hwL2mcFwdPeerAddress.setStatus('current')
hwL2mcFwdVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwL2mcFwdVcOrSiteId.setStatus('current')
hwL2mcFwdAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("mac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcFwdAddressType.setStatus('current')
hwL2mcFwdHostFlag1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticDynamic", 3), ("invalid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcFwdHostFlag1.setStatus('current')
hwL2mcFwdHostFlag2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonMapping", 1), ("mapping", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcFwdHostFlag2.setStatus('current')
hwL2mcFwdHostFlag3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("host", 1), ("router", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcFwdHostFlag3.setStatus('current')
hwL2mcFwdHostFlag4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 4, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("port", 1), ("static", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcFwdHostFlag4.setStatus('current')
hwL2mcGroupInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5))
hwL2mcGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1), )
if mibBuilder.loadTexts: hwL2mcGroupInfoTable.setStatus('current')
hwL2mcGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupGroupAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupSourceAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupPortIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupPortPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupPortCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupVcOrSiteId"))
if mibBuilder.loadTexts: hwL2mcGroupInfoEntry.setStatus('current')
hwL2mcGroupVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcGroupVlanIndex.setStatus('current')
hwL2mcGroupVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcGroupVsiName.setStatus('current')
hwL2mcGroupGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwL2mcGroupGroupAddress.setStatus('current')
hwL2mcGroupSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwL2mcGroupSourceAddress.setStatus('current')
hwL2mcPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 5), HWPortType())
if mibBuilder.loadTexts: hwL2mcPortType.setStatus('current')
hwL2mcGroupPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 6), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwL2mcGroupPortIfIndex.setStatus('current')
hwL2mcGroupPortPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 7), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcGroupPortPeId.setStatus('current')
hwL2mcGroupPortCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 8), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcGroupPortCeId.setStatus('current')
hwL2mcGroupPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 9), IpAddress())
if mibBuilder.loadTexts: hwL2mcGroupPeerAddress.setStatus('current')
hwL2mcGroupVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwL2mcGroupVcOrSiteId.setStatus('current')
hwL2mcSourceUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcSourceUpTime.setStatus('current')
hwL2mcSourceExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcSourceExpires.setStatus('current')
hwL2mcGroupUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcGroupUpTime.setStatus('current')
hwL2mcGroupExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcGroupExpires.setStatus('current')
hwL2mcGroupFilterFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2), ("invalid", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcGroupFilterFlag.setStatus('current')
hwL2mcGroupHostFlag1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticDynamic", 3), ("invalid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcGroupHostFlag1.setStatus('current')
hwL2mcGroupHostFlag2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonMapping", 1), ("mapping", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcGroupHostFlag2.setStatus('current')
hwL2mcGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 5, 1, 1, 100), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcGroupRowStatus.setStatus('current')
hwL2mcGroupCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6))
hwL2mcGroupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1), )
if mibBuilder.loadTexts: hwL2mcGroupCfgTable.setStatus('current')
hwL2mcGroupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgPortIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgPortPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgPortCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgVcOrSiteId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgGroupAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupCfgSourceAddress"))
if mibBuilder.loadTexts: hwL2mcGroupCfgEntry.setStatus('current')
hwGroupCfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 1), HWPortType())
if mibBuilder.loadTexts: hwGroupCfgPortType.setStatus('current')
hwGroupCfgPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwGroupCfgPortIfIndex.setStatus('current')
hwGroupCfgPortPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 3), VlanIdOrAny())
if mibBuilder.loadTexts: hwGroupCfgPortPeId.setStatus('current')
hwGroupCfgPortCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 4), VlanIdOrAny())
if mibBuilder.loadTexts: hwGroupCfgPortCeId.setStatus('current')
hwGroupCfgPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: hwGroupCfgPeerAddress.setStatus('current')
hwGroupCfgVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwGroupCfgVcOrSiteId.setStatus('current')
hwGroupCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 7), VlanIdOrAny())
if mibBuilder.loadTexts: hwGroupCfgVlanIndex.setStatus('current')
hwGroupCfgVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwGroupCfgVsiName.setStatus('current')
hwGroupCfgGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 9), IpAddress())
if mibBuilder.loadTexts: hwGroupCfgGroupAddress.setStatus('current')
hwGroupCfgSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: hwGroupCfgSourceAddress.setStatus('current')
hwGroupCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 6, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGroupCfgRowStatus.setStatus('current')
hwL2mcSsmSourceInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7))
hwL2mcSsmSourceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1), )
if mibBuilder.loadTexts: hwL2mcSsmSourceTable.setStatus('current')
hwL2mcSsmSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmSourceVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmSourceVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmGroupAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmGroupLen"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmSourceAddress"))
if mibBuilder.loadTexts: hwL2mcSsmSourceEntry.setStatus('current')
hwL2mcSsmSourceVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcSsmSourceVlanIndex.setStatus('current')
hwL2mcSsmSourceVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcSsmSourceVsiName.setStatus('current')
hwL2mcSsmGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwL2mcSsmGroupAddress.setStatus('current')
hwL2mcSsmGroupLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 32)))
if mibBuilder.loadTexts: hwL2mcSsmGroupLen.setStatus('current')
hwL2mcSsmSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: hwL2mcSsmSourceAddress.setStatus('current')
hwL2mcSsmSourceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 7, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcSsmSourceRowStatus.setStatus('current')
hwL2mcPortGroupPolicyCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8))
hwL2mcPortGroupPolicyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1), )
if mibBuilder.loadTexts: hwL2mcPortGroupPolicyCfgTable.setStatus('current')
hwL2mcPortGroupPolicyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyPortIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyPortPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyPortCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyVcOrSiteId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyVsiName"))
if mibBuilder.loadTexts: hwL2mcPortGroupPolicyCfgEntry.setStatus('current')
hwPortGroupPolicyPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 1), HWPortType())
if mibBuilder.loadTexts: hwPortGroupPolicyPortType.setStatus('current')
hwPortGroupPolicyPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwPortGroupPolicyPortIfIndex.setStatus('current')
hwPortGroupPolicyPortPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 3), VlanIdOrAny())
if mibBuilder.loadTexts: hwPortGroupPolicyPortPeId.setStatus('current')
hwPortGroupPolicyPortCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 4), VlanIdOrAny())
if mibBuilder.loadTexts: hwPortGroupPolicyPortCeId.setStatus('current')
hwPortGroupPolicyPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: hwPortGroupPolicyPeerAddress.setStatus('current')
hwPortGroupPolicyVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwPortGroupPolicyVcOrSiteId.setStatus('current')
hwPortGroupPolicyVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 7), VlanIdOrAny())
if mibBuilder.loadTexts: hwPortGroupPolicyVlanIndex.setStatus('current')
hwPortGroupPolicyVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwPortGroupPolicyVsiName.setStatus('current')
hwPortGroupPolicyAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortGroupPolicyAclNum.setStatus('current')
hwPortGroupPolicyIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("versionAll", 0), ("version1", 1), ("version2", 2), ("version3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortGroupPolicyIgmpVersion.setStatus('current')
hwPortGroupPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 8, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortGroupPolicyRowStatus.setStatus('current')
hwL2mcChnlCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9))
hwL2mcChnlCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1), )
if mibBuilder.loadTexts: hwL2mcChnlCfgTable.setStatus('current')
hwL2mcChnlCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwChnlCfgVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlCfgVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlCfgChnlName"))
if mibBuilder.loadTexts: hwL2mcChnlCfgEntry.setStatus('current')
hwChnlCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwChnlCfgVlanIndex.setStatus('current')
hwChnlCfgVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwChnlCfgVsiName.setStatus('current')
hwChnlCfgChnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwChnlCfgChnlName.setStatus('current')
hwChnlCfgChnlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ssm", 1), ("asm", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwChnlCfgChnlType.setStatus('current')
hwChnlCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 9, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwChnlCfgRowStatus.setStatus('current')
hwL2mcLimitInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10))
hwL2mcLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1), )
if mibBuilder.loadTexts: hwL2mcLimitTable.setStatus('current')
hwL2mcLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitChnlName"))
if mibBuilder.loadTexts: hwL2mcLimitEntry.setStatus('current')
hwL2mcLimitVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcLimitVlanIndex.setStatus('current')
hwL2mcLimitVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcLimitVsiName.setStatus('current')
hwL2mcLimitChnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcLimitChnlName.setStatus('current')
hwL2mcLimitMaxEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcLimitMaxEntry.setStatus('current')
hwL2mcLimitEntryCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcLimitEntryCnt.setStatus('current')
hwL2mcLimitMaxBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4194304))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcLimitMaxBandWidth.setStatus('current')
hwL2mcLimitBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcLimitBandWidth.setStatus('current')
hwL2mcLimitAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcLimitAcl.setStatus('current')
hwL2mcLimitCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 10, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcLimitCfgRowStatus.setStatus('current')
hwL2mcPortLimitInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11))
hwL2mcPortLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1), )
if mibBuilder.loadTexts: hwL2mcPortLimitTable.setStatus('current')
hwL2mcPortLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitVcOrSiteId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwPortLimitChnlName"))
if mibBuilder.loadTexts: hwL2mcPortLimitEntry.setStatus('current')
hwPortLimitVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwPortLimitVlanIndex.setStatus('current')
hwPortLimitVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwPortLimitVsiName.setStatus('current')
hwPortLimitPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 3), HWPortType())
if mibBuilder.loadTexts: hwPortLimitPortType.setStatus('current')
hwPortLimitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 4), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwPortLimitIfIndex.setStatus('current')
hwPortLimitPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 5), VlanIdOrAny())
if mibBuilder.loadTexts: hwPortLimitPeId.setStatus('current')
hwPortLimitCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 6), VlanIdOrAny())
if mibBuilder.loadTexts: hwPortLimitCeId.setStatus('current')
hwPortLimitPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 7), IpAddress())
if mibBuilder.loadTexts: hwPortLimitPeerAddress.setStatus('current')
hwPortLimitVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwPortLimitVcOrSiteId.setStatus('current')
hwPortLimitChnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwPortLimitChnlName.setStatus('current')
hwPortLimitAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortLimitAcl.setStatus('current')
hwPortLimitMaxEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortLimitMaxEntry.setStatus('current')
hwPortLimitEntryCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortLimitEntryCnt.setStatus('current')
hwPortLimitMaxBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4194304))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortLimitMaxBandWidth.setStatus('current')
hwPortLimitBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortLimitBandWidth.setStatus('current')
hwPortLimitCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 11, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortLimitCfgRowStatus.setStatus('current')
hwL2mcFastChnlCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12))
hwL2mcFastChnlCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1), )
if mibBuilder.loadTexts: hwL2mcFastChnlCfgTable.setStatus('current')
hwL2mcFastChnlCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgGroupAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgGroupLen"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgSourceAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgSourceLen"))
if mibBuilder.loadTexts: hwL2mcFastChnlCfgEntry.setStatus('current')
hwL2mcFastChnlCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcFastChnlCfgVlanIndex.setStatus('current')
hwL2mcFastChnlCfgVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcFastChnlCfgVsiName.setStatus('current')
hwL2mcFastChnlCfgGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwL2mcFastChnlCfgGroupAddress.setStatus('current')
hwL2mcFastChnlCfgGroupLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 32)))
if mibBuilder.loadTexts: hwL2mcFastChnlCfgGroupLen.setStatus('current')
hwL2mcFastChnlCfgSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: hwL2mcFastChnlCfgSourceAddress.setStatus('current')
hwL2mcFastChnlCfgSourceLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(8, 32), )))
if mibBuilder.loadTexts: hwL2mcFastChnlCfgSourceLen.setStatus('current')
hwL2mcFastChnlCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 12, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcFastChnlCfgRowStatus.setStatus('current')
hwL2mcRouterPortInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13))
hwL2mcRouterPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1), )
if mibBuilder.loadTexts: hwL2mcRouterPortInfoTable.setStatus('current')
hwL2mcRouterPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortVcOrSiteId"))
if mibBuilder.loadTexts: hwL2mcRouterPortInfoEntry.setStatus('current')
hwL2mcRouterPortVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcRouterPortVlanIndex.setStatus('current')
hwL2mcRouterPortVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcRouterPortVsiName.setStatus('current')
hwL2mcRouterPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 3), HWPortType())
if mibBuilder.loadTexts: hwL2mcRouterPortType.setStatus('current')
hwL2mcRouterPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 4), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwL2mcRouterPortIfIndex.setStatus('current')
hwL2mcRouterPortPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 5), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcRouterPortPeId.setStatus('current')
hwL2mcRouterPortCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 6), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcRouterPortCeId.setStatus('current')
hwL2mcRouterPortPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 7), IpAddress())
if mibBuilder.loadTexts: hwL2mcRouterPortPeerAddress.setStatus('current')
hwL2mcRouterPortVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwL2mcRouterPortVcOrSiteId.setStatus('current')
hwL2mcRouterPortGroupUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRouterPortGroupUpTime.setStatus('current')
hwL2mcRouterPortGroupExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRouterPortGroupExpires.setStatus('current')
hwL2mcRouterPortGroupHostFlag1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 13, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticDynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2mcRouterPortGroupHostFlag1.setStatus('current')
hwL2mcRouterPortCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14))
hwL2mcRouterPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1), )
if mibBuilder.loadTexts: hwL2mcRouterPortCfgTable.setStatus('current')
hwL2mcRouterPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgPortType"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgPortIfIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgPortPeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgPortCeId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgPeerAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgVcOrSiteId"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgVsiName"))
if mibBuilder.loadTexts: hwL2mcRouterPortCfgEntry.setStatus('current')
hwL2mcRouterPortCfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 1), HWPortType())
if mibBuilder.loadTexts: hwL2mcRouterPortCfgPortType.setStatus('current')
hwL2mcRouterPortCfgPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwL2mcRouterPortCfgPortIfIndex.setStatus('current')
hwL2mcRouterPortCfgPortPeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 3), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcRouterPortCfgPortPeId.setStatus('current')
hwL2mcRouterPortCfgPortCeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 4), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcRouterPortCfgPortCeId.setStatus('current')
hwL2mcRouterPortCfgPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 5), IpAddress())
if mibBuilder.loadTexts: hwL2mcRouterPortCfgPeerAddress.setStatus('current')
hwL2mcRouterPortCfgVcOrSiteId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hwL2mcRouterPortCfgVcOrSiteId.setStatus('current')
hwL2mcRouterPortCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 7), VlanIdOrAny())
if mibBuilder.loadTexts: hwL2mcRouterPortCfgVlanIndex.setStatus('current')
hwL2mcRouterPortCfgVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwL2mcRouterPortCfgVsiName.setStatus('current')
hwL2mcRouterPortCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 14, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2mcRouterPortCfgRowStatus.setStatus('current')
hwL2mcChnlGroupCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15))
hwL2mcChnlGroupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1), )
if mibBuilder.loadTexts: hwL2mcChnlGroupCfgTable.setStatus('current')
hwL2mcChnlGroupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgVsiName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlCfgGroupChnlName"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgGroupAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgGroupLen"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgSourceAddress"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgSourceLen"))
if mibBuilder.loadTexts: hwL2mcChnlGroupCfgEntry.setStatus('current')
hwChnlGroupCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwChnlGroupCfgVlanIndex.setStatus('current')
hwChnlGroupCfgVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwChnlGroupCfgVsiName.setStatus('current')
hwChnlCfgGroupChnlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwChnlCfgGroupChnlName.setStatus('current')
hwChnlGroupCfgGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: hwChnlGroupCfgGroupAddress.setStatus('current')
hwChnlGroupCfgGroupLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 32)))
if mibBuilder.loadTexts: hwChnlGroupCfgGroupLen.setStatus('current')
hwChnlGroupCfgSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 6), IpAddress())
if mibBuilder.loadTexts: hwChnlGroupCfgSourceAddress.setStatus('current')
hwChnlGroupCfgSourceLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(8, 32), )))
if mibBuilder.loadTexts: hwChnlGroupCfgSourceLen.setStatus('current')
hwChnlGroupCfgPerBand = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwChnlGroupCfgPerBand.setStatus('current')
hwChnlGroupCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 15, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwChnlGroupCfgRowStatus.setStatus('current')
hwL2mcGroupPolicyCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16))
hwL2mcGroupPolicyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1), )
if mibBuilder.loadTexts: hwL2mcGroupPolicyCfgTable.setStatus('current')
hwL2mcGroupPolicyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwGroupPolicyVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwGroupPolicyVsiName"))
if mibBuilder.loadTexts: hwL2mcGroupPolicyCfgEntry.setStatus('current')
hwGroupPolicyVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwGroupPolicyVlanIndex.setStatus('current')
hwGroupPolicyVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwGroupPolicyVsiName.setStatus('current')
hwGroupPolicyAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGroupPolicyAclNum.setStatus('current')
hwGroupPolicyIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("versionAll", 0), ("version1", 1), ("version2", 2), ("version3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGroupPolicyIgmpVersion.setStatus('current')
hwGroupPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 16, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwGroupPolicyRowStatus.setStatus('current')
hwL2mcChnlDenyCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17))
hwL2mcChnlDenyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17, 1), )
if mibBuilder.loadTexts: hwL2mcChnlDenyCfgTable.setStatus('current')
hwL2mcChnlDenyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17, 1, 1), ).setIndexNames((0, "HUAWEI-L2MULTICAST-MIB", "hwChnlDenyCfgVlanIndex"), (0, "HUAWEI-L2MULTICAST-MIB", "hwChnlDenyCfgVsiName"))
if mibBuilder.loadTexts: hwL2mcChnlDenyCfgEntry.setStatus('current')
hwChnlDenyCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17, 1, 1, 1), VlanIdOrAny())
if mibBuilder.loadTexts: hwChnlDenyCfgVlanIndex.setStatus('current')
hwChnlDenyCfgVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwChnlDenyCfgVsiName.setStatus('current')
hwChnlDenyCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwChnlDenyCfg.setStatus('current')
hwChnlDenyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 1, 17, 1, 1, 100), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwChnlDenyCfgRowStatus.setStatus('current')
hwL2mcMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100))
hwL2mcMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 1))
hwL2mcMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2))
hwIgspMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 1, 1)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwIgspSystemInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcStatisticsInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmSourceInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcPortGroupPolicyCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcChnlCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcPortLimitInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcChnlGroupCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupPolicyCfgInfoGroup"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcChnlDenyCfgInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIgspMibCompliance = hwIgspMibCompliance.setStatus('current')
hwIgspSystemInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 1)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwIgmpSnoopingEnabled"), ("HUAWEI-L2MULTICAST-MIB", "hwSendQueryEnabled"), ("HUAWEI-L2MULTICAST-MIB", "hwSendQuerySourceIpAddr"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcCacTrapInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIgspSystemInfoGroup = hwIgspSystemInfoGroup.setStatus('current')
hwL2mcCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 2)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcEnabled"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterAgingTime"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcMaxQueryRespTime"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLastMemQueryInterval"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcQueryInterval"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRobustCount"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcCheckRouterAlert"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcSendRouterAlert"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcIgmpVersion"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdMode"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcPromptLeaveEnable"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcPromptLeaveAclNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortLearningEnable"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcReportSuppressEnable"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcIgmpQuerierEnable"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcIgmpSsmMappingEnable"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmAclNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcCfgInfoGroup = hwL2mcCfgInfoGroup.setStatus('current')
hwL2mcStatisticsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 3)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpV1ReportNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpV2ReportNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpV3ReportNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpLeaveNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpV1QueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpV2QueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvIgmpV3QueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRecvPimHelloNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcSendQueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcSendQuerySourceNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcProxyGenQueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcProxyGroupQueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcProxyGroupSourceQueryNum"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcIgmpPacketClearStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcStatisticsInfoGroup = hwL2mcStatisticsInfoGroup.setStatus('current')
hwL2mcFwdInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 4)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdAddressType"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdHostFlag1"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdHostFlag2"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdHostFlag3"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcFwdHostFlag4"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcFwdInfoGroup = hwL2mcFwdInfoGroup.setStatus('current')
hwL2mcGroupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 5)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcSourceUpTime"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcSourceExpires"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupUpTime"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupExpires"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupFilterFlag"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupHostFlag1"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupHostFlag2"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcGroupInfoGroup = hwL2mcGroupInfoGroup.setStatus('current')
hwL2mcGroupCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 6)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwGroupCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcGroupCfgInfoGroup = hwL2mcGroupCfgInfoGroup.setStatus('current')
hwL2mcSsmSourceInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 7)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcSsmSourceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcSsmSourceInfoGroup = hwL2mcSsmSourceInfoGroup.setStatus('current')
hwL2mcPortGroupPolicyCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 8)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyAclNum"), ("HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyIgmpVersion"), ("HUAWEI-L2MULTICAST-MIB", "hwPortGroupPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcPortGroupPolicyCfgInfoGroup = hwL2mcPortGroupPolicyCfgInfoGroup.setStatus('current')
hwL2mcChnlCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 9)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwChnlCfgChnlType"), ("HUAWEI-L2MULTICAST-MIB", "hwChnlCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcChnlCfgInfoGroup = hwL2mcChnlCfgInfoGroup.setStatus('current')
hwL2mcLimitInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 10)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitMaxEntry"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitEntryCnt"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitMaxBandWidth"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitBandWidth"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitAcl"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcLimitCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcLimitInfoGroup = hwL2mcLimitInfoGroup.setStatus('current')
hwL2mcPortLimitInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 11)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwPortLimitAcl"), ("HUAWEI-L2MULTICAST-MIB", "hwPortLimitMaxEntry"), ("HUAWEI-L2MULTICAST-MIB", "hwPortLimitEntryCnt"), ("HUAWEI-L2MULTICAST-MIB", "hwPortLimitMaxBandWidth"), ("HUAWEI-L2MULTICAST-MIB", "hwPortLimitBandWidth"), ("HUAWEI-L2MULTICAST-MIB", "hwPortLimitCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcPortLimitInfoGroup = hwL2mcPortLimitInfoGroup.setStatus('current')
hwL2mcFastChnlCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 12)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcFastChnlCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcFastChnlCfgInfoGroup = hwL2mcFastChnlCfgInfoGroup.setStatus('current')
hwL2mcRouterPortInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 13)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortGroupUpTime"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortGroupExpires"), ("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortGroupHostFlag1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcRouterPortInfoGroup = hwL2mcRouterPortInfoGroup.setStatus('current')
hwL2mcRouterPortCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 14)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwL2mcRouterPortCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcRouterPortCfgInfoGroup = hwL2mcRouterPortCfgInfoGroup.setStatus('current')
hwL2mcChnlGroupCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 15)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgPerBand"), ("HUAWEI-L2MULTICAST-MIB", "hwChnlGroupCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcChnlGroupCfgInfoGroup = hwL2mcChnlGroupCfgInfoGroup.setStatus('current')
hwL2mcGroupPolicyCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 16)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwGroupPolicyAclNum"), ("HUAWEI-L2MULTICAST-MIB", "hwGroupPolicyIgmpVersion"), ("HUAWEI-L2MULTICAST-MIB", "hwGroupPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcGroupPolicyCfgInfoGroup = hwL2mcGroupPolicyCfgInfoGroup.setStatus('current')
hwL2mcChnlDenyCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 181, 100, 2, 17)).setObjects(("HUAWEI-L2MULTICAST-MIB", "hwChnlDenyCfg"), ("HUAWEI-L2MULTICAST-MIB", "hwChnlDenyCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2mcChnlDenyCfgInfoGroup = hwL2mcChnlDenyCfgInfoGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-L2MULTICAST-MIB", hwL2mcSsmSourceEntry=hwL2mcSsmSourceEntry, hwL2mcRouterPortPeId=hwL2mcRouterPortPeId, hwGroupCfgPortCeId=hwGroupCfgPortCeId, hwGroupPolicyIgmpVersion=hwGroupPolicyIgmpVersion, hwL2mcRouterPortCfgVlanIndex=hwL2mcRouterPortCfgVlanIndex, hwL2mcChnlCfgEntry=hwL2mcChnlCfgEntry, hwL2mcLimitChnlName=hwL2mcLimitChnlName, hwPortLimitBandWidth=hwPortLimitBandWidth, hwL2mcRouterPortType=hwL2mcRouterPortType, hwL2mcMibConformance=hwL2mcMibConformance, hwL2mcFwdHostFlag2=hwL2mcFwdHostFlag2, hwL2mcVlanIndex=hwL2mcVlanIndex, hwL2mcGroupCfgInfo=hwL2mcGroupCfgInfo, hwPortLimitVcOrSiteId=hwPortLimitVcOrSiteId, hwL2mcRouterPortCfgPortType=hwL2mcRouterPortCfgPortType, hwL2mcRouterPortCfgPortPeId=hwL2mcRouterPortCfgPortPeId, hwL2mcPortGroupPolicyCfgInfo=hwL2mcPortGroupPolicyCfgInfo, hwL2mcSourceUpTime=hwL2mcSourceUpTime, hwPortGroupPolicyVcOrSiteId=hwPortGroupPolicyVcOrSiteId, hwL2mcFwdHostFlag4=hwL2mcFwdHostFlag4, hwPortLimitCeId=hwPortLimitCeId, hwL2mcLimitMaxBandWidth=hwL2mcLimitMaxBandWidth, hwGroupCfgRowStatus=hwGroupCfgRowStatus, hwL2mcLimitInfoGroup=hwL2mcLimitInfoGroup, hwGroupCfgPeerAddress=hwGroupCfgPeerAddress, hwL2mcStatisticsEntry=hwL2mcStatisticsEntry, hwL2mcRecvIgmpV2ReportNum=hwL2mcRecvIgmpV2ReportNum, hwL2mcQueryInterval=hwL2mcQueryInterval, hwPortGroupPolicyPortType=hwPortGroupPolicyPortType, hwChnlDenyCfgRowStatus=hwChnlDenyCfgRowStatus, hwPortLimitAcl=hwPortLimitAcl, hwL2mcCheckRouterAlert=hwL2mcCheckRouterAlert, hwChnlGroupCfgSourceLen=hwChnlGroupCfgSourceLen, hwL2mcChnlDenyCfgInfoGroup=hwL2mcChnlDenyCfgInfoGroup, hwL2mcSsmSourceTable=hwL2mcSsmSourceTable, hwL2mcLimitVsiName=hwL2mcLimitVsiName, hwPortLimitCfgRowStatus=hwPortLimitCfgRowStatus, hwL2mcRouterPortInfoTable=hwL2mcRouterPortInfoTable, hwL2MultiCastMIB=hwL2MultiCastMIB, hwL2mcCfgTable=hwL2mcCfgTable, hwL2mcGroupPortCeId=hwL2mcGroupPortCeId, hwL2mcSsmSourceVlanIndex=hwL2mcSsmSourceVlanIndex, hwL2mcPortLimitTable=hwL2mcPortLimitTable, hwL2mcRouterPortGroupHostFlag1=hwL2mcRouterPortGroupHostFlag1, hwL2mcSendRouterAlert=hwL2mcSendRouterAlert, hwIgspSystemInfoGroup=hwIgspSystemInfoGroup, hwL2mcGroupFilterFlag=hwL2mcGroupFilterFlag, hwL2mcGroupCfgTable=hwL2mcGroupCfgTable, hwL2mcGroupSourceAddress=hwL2mcGroupSourceAddress, hwChnlDenyCfgVlanIndex=hwChnlDenyCfgVlanIndex, hwL2mcRouterPortIfIndex=hwL2mcRouterPortIfIndex, hwChnlGroupCfgGroupAddress=hwChnlGroupCfgGroupAddress, hwL2mcPromptLeaveEnable=hwL2mcPromptLeaveEnable, hwPortLimitEntryCnt=hwPortLimitEntryCnt, hwL2mcSsmGroupAddress=hwL2mcSsmGroupAddress, hwL2mcRouterPortGroupUpTime=hwL2mcRouterPortGroupUpTime, hwL2mcFwdVsiName=hwL2mcFwdVsiName, hwL2mcLimitTable=hwL2mcLimitTable, hwPortLimitMaxBandWidth=hwPortLimitMaxBandWidth, hwL2mcGroupInfoEntry=hwL2mcGroupInfoEntry, hwL2mcGroupPolicyCfgInfo=hwL2mcGroupPolicyCfgInfo, hwL2mcFwdPortPeId=hwL2mcFwdPortPeId, hwChnlGroupCfgVsiName=hwChnlGroupCfgVsiName, hwL2mcFwdPortIfIndex=hwL2mcFwdPortIfIndex, HWPortType=HWPortType, hwGroupPolicyAclNum=hwGroupPolicyAclNum, hwSendQuerySourceIpAddr=hwSendQuerySourceIpAddr, hwL2mcGroupInfo=hwL2mcGroupInfo, hwPortGroupPolicyAclNum=hwPortGroupPolicyAclNum, hwL2mcLimitBandWidth=hwL2mcLimitBandWidth, hwL2mcPortGroupPolicyCfgEntry=hwL2mcPortGroupPolicyCfgEntry, hwL2mcIgmpSsmMappingEnable=hwL2mcIgmpSsmMappingEnable, hwL2mcGroupHostFlag2=hwL2mcGroupHostFlag2, hwL2mcLimitEntryCnt=hwL2mcLimitEntryCnt, hwL2mcRouterPortCfgPortIfIndex=hwL2mcRouterPortCfgPortIfIndex, hwL2mcRouterPortGroupExpires=hwL2mcRouterPortGroupExpires, hwL2mcRouterPortInfo=hwL2mcRouterPortInfo, hwL2mcFwdInfo=hwL2mcFwdInfo, hwL2mcChnlDenyCfgTable=hwL2mcChnlDenyCfgTable, hwL2mcRouterPortVcOrSiteId=hwL2mcRouterPortVcOrSiteId, hwPortGroupPolicyPortCeId=hwPortGroupPolicyPortCeId, hwL2mcFwdAddressType=hwL2mcFwdAddressType, hwL2mcSsmSourceInfo=hwL2mcSsmSourceInfo, hwL2mcChnlGroupCfgEntry=hwL2mcChnlGroupCfgEntry, hwPortLimitVsiName=hwPortLimitVsiName, hwL2mcGroupGroupAddress=hwL2mcGroupGroupAddress, hwChnlGroupCfgVlanIndex=hwChnlGroupCfgVlanIndex, hwL2mcFwdVcOrSiteId=hwL2mcFwdVcOrSiteId, hwChnlDenyCfgVsiName=hwChnlDenyCfgVsiName, hwL2mcCfgInfo=hwL2mcCfgInfo, hwPortLimitVlanIndex=hwPortLimitVlanIndex, hwL2mcRouterPortCeId=hwL2mcRouterPortCeId, hwL2mcIgmpVersion=hwL2mcIgmpVersion, hwChnlCfgChnlName=hwChnlCfgChnlName, hwL2mcChnlCfgInfoGroup=hwL2mcChnlCfgInfoGroup, hwL2mcRobustCount=hwL2mcRobustCount, hwL2mcFwdHostFlag3=hwL2mcFwdHostFlag3, hwChnlDenyCfg=hwChnlDenyCfg, hwL2mcProxyGroupSourceQueryNum=hwL2mcProxyGroupSourceQueryNum, hwL2mcRouterPortVlanIndex=hwL2mcRouterPortVlanIndex, hwL2mcRecvIgmpV1ReportNum=hwL2mcRecvIgmpV1ReportNum, hwGroupPolicyVsiName=hwGroupPolicyVsiName, hwL2mcRouterPortInfoGroup=hwL2mcRouterPortInfoGroup, hwL2mcFastChnlCfgEntry=hwL2mcFastChnlCfgEntry, hwL2mcFwdPortCeId=hwL2mcFwdPortCeId, hwPortGroupPolicyVlanIndex=hwPortGroupPolicyVlanIndex, hwChnlCfgChnlType=hwChnlCfgChnlType, hwL2mcPortLimitEntry=hwL2mcPortLimitEntry, hwPortLimitChnlName=hwPortLimitChnlName, hwL2mcGroupHostFlag1=hwL2mcGroupHostFlag1, hwL2mcGroupVlanIndex=hwL2mcGroupVlanIndex, hwL2mcRouterPortCfgTable=hwL2mcRouterPortCfgTable, hwL2mcGroupInfoTable=hwL2mcGroupInfoTable, hwL2mcChnlDenyCfgInfo=hwL2mcChnlDenyCfgInfo, hwL2mcFwdPeerAddress=hwL2mcFwdPeerAddress, hwL2mcFwdGroupAddress=hwL2mcFwdGroupAddress, hwPortGroupPolicyVsiName=hwPortGroupPolicyVsiName, hwL2mcRecvIgmpV2QueryNum=hwL2mcRecvIgmpV2QueryNum, hwL2mcFastChnlCfgRowStatus=hwL2mcFastChnlCfgRowStatus, hwL2mcStatsVsiName=hwL2mcStatsVsiName, hwChnlCfgVlanIndex=hwChnlCfgVlanIndex, hwL2mcRouterPortCfgVsiName=hwL2mcRouterPortCfgVsiName, hwL2mcPromptLeaveAclNum=hwL2mcPromptLeaveAclNum, hwL2mcRecvPimHelloNum=hwL2mcRecvPimHelloNum, hwL2mcRouterPortCfgVcOrSiteId=hwL2mcRouterPortCfgVcOrSiteId, hwL2mcFastChnlCfgTable=hwL2mcFastChnlCfgTable, hwL2mcGroupExpires=hwL2mcGroupExpires, hwL2mcLastMemQueryInterval=hwL2mcLastMemQueryInterval, PYSNMP_MODULE_ID=hwL2MultiCastMIB, hwL2mcGroupPeerAddress=hwL2mcGroupPeerAddress, hwL2mcMibGroups=hwL2mcMibGroups, hwL2mcGroupRowStatus=hwL2mcGroupRowStatus, hwL2mcFastChnlCfgInfoGroup=hwL2mcFastChnlCfgInfoGroup, hwL2mcFwdSourceAddress=hwL2mcFwdSourceAddress, hwL2mcLimitAcl=hwL2mcLimitAcl, hwL2mcFastChnlCfgVlanIndex=hwL2mcFastChnlCfgVlanIndex, hwL2mcRouterPortCfgPortCeId=hwL2mcRouterPortCfgPortCeId, hwL2mcLimitCfgRowStatus=hwL2mcLimitCfgRowStatus, hwL2mcRecvIgmpLeaveNum=hwL2mcRecvIgmpLeaveNum, hwL2mcRouterPortCfgInfo=hwL2mcRouterPortCfgInfo, hwIgmpSnoopingEnabled=hwIgmpSnoopingEnabled, hwL2mcGroupCfgEntry=hwL2mcGroupCfgEntry, hwL2mcPortGroupPolicyCfgTable=hwL2mcPortGroupPolicyCfgTable, hwL2mcChnlGroupCfgInfo=hwL2mcChnlGroupCfgInfo, hwL2mcEnabled=hwL2mcEnabled, hwL2mcFwdVlanIndex=hwL2mcFwdVlanIndex, hwChnlCfgRowStatus=hwChnlCfgRowStatus, hwL2mcGroupInfoGroup=hwL2mcGroupInfoGroup, hwGroupCfgPortType=hwGroupCfgPortType, hwL2mcGroupPortPeId=hwL2mcGroupPortPeId, hwL2mcRouterPortPeerAddress=hwL2mcRouterPortPeerAddress, hwPortLimitMaxEntry=hwPortLimitMaxEntry, hwL2mcRouterPortCfgPeerAddress=hwL2mcRouterPortCfgPeerAddress, hwL2mcRecvIgmpV3QueryNum=hwL2mcRecvIgmpV3QueryNum, hwL2mcGroupUpTime=hwL2mcGroupUpTime, hwL2mcChnlDenyCfgEntry=hwL2mcChnlDenyCfgEntry, hwChnlCfgVsiName=hwChnlCfgVsiName, hwL2mcProxyGroupQueryNum=hwL2mcProxyGroupQueryNum, hwL2mcMibCompliances=hwL2mcMibCompliances, hwL2mcChnlGroupCfgTable=hwL2mcChnlGroupCfgTable, hwIgspSystemInfo=hwIgspSystemInfo, hwL2mcGroupVsiName=hwL2mcGroupVsiName, hwL2mcFwdHostFlag1=hwL2mcFwdHostFlag1, hwIgspMibObject=hwIgspMibObject, hwL2mcFwdPortType=hwL2mcFwdPortType, hwL2mcRouterPortCfgRowStatus=hwL2mcRouterPortCfgRowStatus, hwL2mcPortLimitInfoGroup=hwL2mcPortLimitInfoGroup, hwL2mcRouterPortCfgInfoGroup=hwL2mcRouterPortCfgInfoGroup, hwL2mcStatisticsInfoGroup=hwL2mcStatisticsInfoGroup, hwL2mcFwdInfoGroup=hwL2mcFwdInfoGroup, hwIgspMibCompliance=hwIgspMibCompliance, hwL2mcGroupPortIfIndex=hwL2mcGroupPortIfIndex, hwL2mcMaxQueryRespTime=hwL2mcMaxQueryRespTime, hwL2mcFwdMode=hwL2mcFwdMode, hwL2mcIgmpQuerierEnable=hwL2mcIgmpQuerierEnable, hwL2mcRouterPortVsiName=hwL2mcRouterPortVsiName, hwL2mcStatisticsTable=hwL2mcStatisticsTable, hwL2mcSendQuerySourceNum=hwL2mcSendQuerySourceNum, hwL2mcFastChnlCfgGroupLen=hwL2mcFastChnlCfgGroupLen, hwL2mcFwdEntry=hwL2mcFwdEntry, hwChnlGroupCfgRowStatus=hwChnlGroupCfgRowStatus, hwChnlGroupCfgSourceAddress=hwChnlGroupCfgSourceAddress, hwPortGroupPolicyIgmpVersion=hwPortGroupPolicyIgmpVersion, hwL2mcRouterPortLearningEnable=hwL2mcRouterPortLearningEnable, hwL2mcRecvIgmpV3ReportNum=hwL2mcRecvIgmpV3ReportNum, hwL2mcPortType=hwL2mcPortType, hwGroupCfgVcOrSiteId=hwGroupCfgVcOrSiteId, hwPortGroupPolicyPeerAddress=hwPortGroupPolicyPeerAddress, hwGroupPolicyRowStatus=hwGroupPolicyRowStatus, hwL2mcSourceExpires=hwL2mcSourceExpires, hwPortLimitPeId=hwPortLimitPeId, hwL2mcRecvIgmpV1QueryNum=hwL2mcRecvIgmpV1QueryNum, hwL2mcFastChnlCfgInfo=hwL2mcFastChnlCfgInfo, hwL2mcRouterAgingTime=hwL2mcRouterAgingTime, hwL2mcRowStatus=hwL2mcRowStatus, hwL2mcIgmpPacketClearStats=hwL2mcIgmpPacketClearStats, hwPortGroupPolicyPortIfIndex=hwPortGroupPolicyPortIfIndex, hwL2mcLimitInfo=hwL2mcLimitInfo, hwL2mcGroupPolicyCfgInfoGroup=hwL2mcGroupPolicyCfgInfoGroup, hwL2mcSsmSourceVsiName=hwL2mcSsmSourceVsiName, hwL2mcProxyGenQueryNum=hwL2mcProxyGenQueryNum, hwL2mcRouterPortCfgEntry=hwL2mcRouterPortCfgEntry, hwL2mcStatisticsInfo=hwL2mcStatisticsInfo, hwL2mcPortLimitInfo=hwL2mcPortLimitInfo, hwL2mcSendQueryNum=hwL2mcSendQueryNum, hwPortLimitPeerAddress=hwPortLimitPeerAddress, hwL2mcGroupPolicyCfgEntry=hwL2mcGroupPolicyCfgEntry, hwGroupCfgPortIfIndex=hwGroupCfgPortIfIndex, hwL2mcSsmGroupLen=hwL2mcSsmGroupLen, hwGroupCfgGroupAddress=hwGroupCfgGroupAddress, hwL2mcRouterPortInfoEntry=hwL2mcRouterPortInfoEntry, hwL2mcFastChnlCfgSourceLen=hwL2mcFastChnlCfgSourceLen, hwL2mcPortGroupPolicyCfgInfoGroup=hwL2mcPortGroupPolicyCfgInfoGroup, hwChnlGroupCfgPerBand=hwChnlGroupCfgPerBand, hwGroupCfgVsiName=hwGroupCfgVsiName, hwL2mcChnlGroupCfgInfoGroup=hwL2mcChnlGroupCfgInfoGroup, hwGroupCfgVlanIndex=hwGroupCfgVlanIndex, hwL2mcChnlCfgInfo=hwL2mcChnlCfgInfo, hwL2mcSsmSourceInfoGroup=hwL2mcSsmSourceInfoGroup, hwChnlGroupCfgGroupLen=hwChnlGroupCfgGroupLen, hwL2mcLimitMaxEntry=hwL2mcLimitMaxEntry, hwL2mcCfgInfoGroup=hwL2mcCfgInfoGroup, hwL2mcGroupCfgInfoGroup=hwL2mcGroupCfgInfoGroup, hwGroupPolicyVlanIndex=hwGroupPolicyVlanIndex, hwGroupCfgSourceAddress=hwGroupCfgSourceAddress, hwL2mcReportSuppressEnable=hwL2mcReportSuppressEnable, hwL2mcFastChnlCfgGroupAddress=hwL2mcFastChnlCfgGroupAddress, hwL2mcChnlCfgTable=hwL2mcChnlCfgTable, hwL2mcSsmSourceRowStatus=hwL2mcSsmSourceRowStatus, hwSendQueryEnabled=hwSendQueryEnabled, hwPortGroupPolicyPortPeId=hwPortGroupPolicyPortPeId, hwL2mcLimitEntry=hwL2mcLimitEntry, hwL2mcFastChnlCfgSourceAddress=hwL2mcFastChnlCfgSourceAddress, hwL2mcCacTrapInterval=hwL2mcCacTrapInterval, hwL2mcGroupVcOrSiteId=hwL2mcGroupVcOrSiteId, hwPortGroupPolicyRowStatus=hwPortGroupPolicyRowStatus, hwPortLimitIfIndex=hwPortLimitIfIndex, hwL2mcFastChnlCfgVsiName=hwL2mcFastChnlCfgVsiName, hwL2mcFwdTable=hwL2mcFwdTable, hwPortLimitPortType=hwPortLimitPortType, hwL2mcLimitVlanIndex=hwL2mcLimitVlanIndex, hwL2mcSsmAclNum=hwL2mcSsmAclNum, hwChnlCfgGroupChnlName=hwChnlCfgGroupChnlName, hwGroupCfgPortPeId=hwGroupCfgPortPeId, hwL2mcVsiName=hwL2mcVsiName, hwL2mcStatsVlanIndex=hwL2mcStatsVlanIndex, hwL2mcGroupPolicyCfgTable=hwL2mcGroupPolicyCfgTable, hwL2mcCfgEntry=hwL2mcCfgEntry, hwL2mcSsmSourceAddress=hwL2mcSsmSourceAddress)
