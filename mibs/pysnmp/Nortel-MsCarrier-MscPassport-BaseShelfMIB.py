#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-BaseShelfMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-BaseShelfMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
Unsigned32, Integer32, DisplayString, StorageType, RowStatus, RowPointer, Gauge32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "Integer32", "DisplayString", "StorageType", "RowStatus", "RowPointer", "Gauge32")
NonReplicated, Hex, Link, ExtendedAsciiString, AsciiString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "Hex", "Link", "ExtendedAsciiString", "AsciiString")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, MibIdentifier, NotificationType, Unsigned32, Integer32, Bits, TimeTicks, ObjectIdentity, IpAddress, Counter32, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "MibIdentifier", "NotificationType", "Unsigned32", "Integer32", "Bits", "TimeTicks", "ObjectIdentity", "IpAddress", "Counter32", "Gauge32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
baseShelfMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146))
mscShelf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13))
mscShelfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 1), )
if mibBuilder.loadTexts: mscShelfRowStatusTable.setStatus('mandatory')
mscShelfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"))
if mibBuilder.loadTexts: mscShelfRowStatusEntry.setStatus('mandatory')
mscShelfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfRowStatus.setStatus('mandatory')
mscShelfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfComponentName.setStatus('mandatory')
mscShelfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfStorageType.setStatus('mandatory')
mscShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfIndex.setStatus('mandatory')
mscShelfProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 10), )
if mibBuilder.loadTexts: mscShelfProvTable.setStatus('mandatory')
mscShelfProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"))
if mibBuilder.loadTexts: mscShelfProvEntry.setStatus('mandatory')
mscShelfCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 80)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCommentText.setStatus('mandatory')
mscShelfOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11), )
if mibBuilder.loadTexts: mscShelfOperTable.setStatus('mandatory')
mscShelfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"))
if mibBuilder.loadTexts: mscShelfOperEntry.setStatus('mandatory')
mscShelfBusOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noBus", 0), ("singleBusX", 1), ("singleBusY", 2), ("dualBus", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusOperatingMode.setStatus('obsolete')
mscShelfHardwareFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfHardwareFailures.setStatus('mandatory')
mscShelfNumberOfSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfNumberOfSlots.setStatus('mandatory')
mscShelfShelfType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("busBasedShelf", 0), ("fabricBasedShelf", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfShelfType.setStatus('mandatory')
mscShelfBackplaneOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noBus", 0), ("singleBusX", 1), ("singleBusY", 2), ("dualBus", 3), ("noFabric", 4), ("singleFabricX", 5), ("singleFabricY", 6), ("dualFabric", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBackplaneOperatingMode.setStatus('mandatory')
mscShelfCard = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2))
mscShelfCardRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 1), )
if mibBuilder.loadTexts: mscShelfCardRowStatusTable.setStatus('mandatory')
mscShelfCardRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardRowStatusEntry.setStatus('mandatory')
mscShelfCardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardRowStatus.setStatus('mandatory')
mscShelfCardComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardComponentName.setStatus('mandatory')
mscShelfCardStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardStorageType.setStatus('mandatory')
mscShelfCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfCardIndex.setStatus('mandatory')
mscShelfCardProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 10), )
if mibBuilder.loadTexts: mscShelfCardProvTable.setStatus('mandatory')
mscShelfCardProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardProvEntry.setStatus('mandatory')
mscShelfCardCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88))).clone(namedValues=NamedValues(("cP", 0), ("v11", 1), ("v35", 2), ("dS1", 3), ("dS1V", 4), ("dS3", 5), ("e1", 6), ("e1V", 7), ("e3", 8), ("none", 9), ("n1pFddiMultiMode", 10), ("n4pTokenRing", 11), ("n6pEth10BaseT", 12), ("dS1C", 13), ("e1C", 14), ("n3pE3Atm", 15), ("n3pDS3Atm", 16), ("n3pOC3MmAtm", 17), ("n3pOC3SmAtm", 19), ("n3pE1Atm", 20), ("n3pDS1Atm", 21), ("j2MV", 22), ("n4pEthAui", 23), ("n1pFddiSingleMode", 24), ("n1pDS1V", 25), ("n1pE1V", 26), ("n2pJ6MAtm", 27), ("hSSI", 33), ("n8pDS1", 34), ("cFP1", 35), ("dEV1", 36), ("cFP2", 37), ("dEV2", 38), ("n4pDS1Aal1", 39), ("n4pE1Aal1", 40), ("n1pDS3C", 41), ("ilsForwarder", 42), ("n8pDS1Atm", 43), ("n8pE1Atm", 44), ("n1pE1Mvp", 45), ("n1pDS1Mvp", 46), ("n1pTTC2mMvp", 47), ("n1pDS3cAal", 51), ("n2pDS3cAal", 52), ("n12mVspAal", 53), ("n2pEth100BaseT", 54), ("n2pOC3MmAtm2", 55), ("n2pOC3SmAtm2", 56), ("n3pDS3Atm2", 57), ("n3pE3Atm2", 58), ("cPeD", 59), ("cPeE", 60), ("n4pOC3SmIrAtm", 61), ("n4pOC3MmAtm", 62), ("n12pDS3Atm", 63), ("n12pE3Atm", 64), ("n1pOC12SmLrAtm", 65), ("n1pE1Mvpe", 66), ("n1pDS1Mvpe", 67), ("n1pTTC2mMvpe", 68), ("n32pDS1Msa", 69), ("n32pDS1MsaMt", 70), ("n32pDS1MsaMtp", 71), ("n32pDS1MsaSt", 72), ("n32pDS1MsaStp", 73), ("n32pE1Aal", 74), ("n1pOC48SmSrAtm", 75), ("n4pDS3Ch", 76), ("n4pDS3ChAtm", 77), ("n1pSTM1ChSmIr", 78), ("n1pSTM1ChSmIrAtm", 79), ("n4pOC12SmIrAtm", 80), ("n4pOC12SmLrAtm", 81), ("n12mPcusp", 82), ("n32pE1Msa", 84), ("n32pE1MsaMt", 85), ("n32pE1MsaMtp", 86), ("n32pE1MsaSt", 87), ("n32pE1MsaStp", 88))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardCardType.setStatus('mandatory')
mscShelfCardSparingConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 16))).clone(namedValues=NamedValues(("notApplicable", 0), ("mainA", 1), ("mainB", 2), ("mainC", 3), ("mainD", 4), ("mainE", 5), ("mainF", 6), ("spare", 16))).clone('notApplicable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardSparingConnection.setStatus('mandatory')
mscShelfCardCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 10, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 80)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardCommentText.setStatus('mandatory')
mscShelfCardStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11), )
if mibBuilder.loadTexts: mscShelfCardStateTable.setStatus('mandatory')
mscShelfCardStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardStateEntry.setStatus('mandatory')
mscShelfCardAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardAdminState.setStatus('mandatory')
mscShelfCardOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardOperationalState.setStatus('mandatory')
mscShelfCardUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardUsageState.setStatus('mandatory')
mscShelfCardAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardAvailabilityStatus.setStatus('mandatory')
mscShelfCardProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardProceduralStatus.setStatus('mandatory')
mscShelfCardControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardControlStatus.setStatus('mandatory')
mscShelfCardAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardAlarmStatus.setStatus('mandatory')
mscShelfCardStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardStandbyStatus.setStatus('mandatory')
mscShelfCardUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardUnknownStatus.setStatus('mandatory')
mscShelfCardOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12), )
if mibBuilder.loadTexts: mscShelfCardOperTable.setStatus('mandatory')
mscShelfCardOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardOperEntry.setStatus('mandatory')
mscShelfCardCurrentLP = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardCurrentLP.setStatus('obsolete')
mscShelfCardFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("wrongCardType", 1), ("notConfigured", 2), ("cannotLoadSoftware", 3), ("failedSelfTests", 4), ("notResponding", 5), ("backplaneConnectivityProblem", 6), ("unsupportedPecCode", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardFailureCause.setStatus('mandatory')
mscShelfCardSelfTestFault = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardSelfTestFault.setStatus('mandatory')
mscShelfCardSparingConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notApplicable", 0), ("n1for1Ok", 1), ("n1forNOk", 2), ("unconfirmed", 3), ("notConnected", 4), ("incorrectlyConnected", 5), ("inconsistentlyConnected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardSparingConnectionStatus.setStatus('mandatory')
mscShelfCardHardwareAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("batteryFeedFailure", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardHardwareAlarm.setStatus('mandatory')
mscShelfCardPropTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13), )
if mibBuilder.loadTexts: mscShelfCardPropTable.setStatus('mandatory')
mscShelfCardPropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardPropEntry.setStatus('mandatory')
mscShelfCardInsertedCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88))).clone(namedValues=NamedValues(("cP", 0), ("v11", 1), ("v35", 2), ("dS1", 3), ("dS1V", 4), ("dS3", 5), ("e1", 6), ("e1V", 7), ("e3", 8), ("none", 9), ("n1pFddiMultiMode", 10), ("n4pTokenRing", 11), ("n6pEth10BaseT", 12), ("dS1C", 13), ("e1C", 14), ("n3pE3Atm", 15), ("n3pDS3Atm", 16), ("n3pOC3MmAtm", 17), ("n1pOC3MmAtm", 18), ("n3pOC3SmAtm", 19), ("n3pE1Atm", 20), ("n3pDS1Atm", 21), ("j2MV", 22), ("n4pEthAui", 23), ("n1pFddiSingleMode", 24), ("n1pDS1V", 25), ("n1pE1V", 26), ("n2pJ6MAtm", 27), ("hSSI", 33), ("n8pDS1", 34), ("cFP1", 35), ("dEV1", 36), ("cFP2", 37), ("dEV2", 38), ("n4pDS1Aal1", 39), ("n4pE1Aal1", 40), ("n1pDS3C", 41), ("ilsForwarder", 42), ("n8pDS1Atm", 43), ("n8pE1Atm", 44), ("n1pE1Mvp", 45), ("n1pDS1Mvp", 46), ("n1pTTC2mMvp", 47), ("n1pDS3cAal", 51), ("n2pDS3cAal", 52), ("n12mVspAal", 53), ("n2pEth100BaseT", 54), ("n2pOC3MmAtm2", 55), ("n2pOC3SmAtm2", 56), ("n3pDS3Atm2", 57), ("n3pE3Atm2", 58), ("cPeD", 59), ("cPeE", 60), ("n4pOC3SmIrAtm", 61), ("n4pOC3MmAtm", 62), ("n12pDS3Atm", 63), ("n12pE3Atm", 64), ("n1pOC12SmLrAtm", 65), ("n1pE1Mvpe", 66), ("n1pDS1Mvpe", 67), ("n1pTTC2mMvpe", 68), ("n32pDS1Msa", 69), ("n32pDS1MsaMt", 70), ("n32pDS1MsaMtp", 71), ("n32pDS1MsaSt", 72), ("n32pDS1MsaStp", 73), ("n32pE1Aal", 74), ("n1pOC48SmSrAtm", 75), ("n4pDS3Ch", 76), ("n4pDS3ChAtm", 77), ("n1pSTM1ChSmIr", 78), ("n1pSTM1ChSmIrAtm", 79), ("n4pOC12SmIrAtm", 80), ("n4pOC12SmLrAtm", 81), ("n12mPcusp", 82), ("n32pE1Msa", 84), ("n32pE1MsaMt", 85), ("n32pE1MsaMtp", 86), ("n32pE1MsaSt", 87), ("n32pE1MsaStp", 88)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardInsertedCardType.setStatus('mandatory')
mscShelfCardPmRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardPmRevisionCode.setStatus('mandatory')
mscShelfCardImRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardImRevisionCode.setStatus('mandatory')
mscShelfCardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 4), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardSerialNumber.setStatus('mandatory')
mscShelfCardActiveFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardActiveFirmwareVersion.setStatus('mandatory')
mscShelfCardInactiveFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 6), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardInactiveFirmwareVersion.setStatus('mandatory')
mscShelfCardProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 13, 1, 7), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardProductCode.setStatus('mandatory')
mscShelfCardUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14), )
if mibBuilder.loadTexts: mscShelfCardUtilTable.setStatus('mandatory')
mscShelfCardUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardUtilEntry.setStatus('mandatory')
mscShelfCardTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTimeInterval.setStatus('mandatory')
mscShelfCardCpuUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardCpuUtil.setStatus('mandatory')
mscShelfCardCpuUtilAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardCpuUtilAvg.setStatus('mandatory')
mscShelfCardCpuUtilAvgMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardCpuUtilAvgMin.setStatus('mandatory')
mscShelfCardCpuUtilAvgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardCpuUtilAvgMax.setStatus('mandatory')
mscShelfCardMsgBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMsgBlockUsage.setStatus('mandatory')
mscShelfCardMsgBlockUsageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMsgBlockUsageAvg.setStatus('mandatory')
mscShelfCardMsgBlockUsageAvgMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMsgBlockUsageAvgMin.setStatus('mandatory')
mscShelfCardMsgBlockUsageAvgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMsgBlockUsageAvgMax.setStatus('mandatory')
mscShelfCardLocalMsgBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardLocalMsgBlockUsage.setStatus('mandatory')
mscShelfCardLocalMsgBlockUsageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardLocalMsgBlockUsageAvg.setStatus('mandatory')
mscShelfCardLocalMsgBlockUsageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardLocalMsgBlockUsageMin.setStatus('mandatory')
mscShelfCardLocalMsgBlockUsageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 14, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardLocalMsgBlockUsageMax.setStatus('mandatory')
mscShelfCardCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 15), )
if mibBuilder.loadTexts: mscShelfCardCapTable.setStatus('mandatory')
mscShelfCardCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"))
if mibBuilder.loadTexts: mscShelfCardCapEntry.setStatus('mandatory')
mscShelfCardMsgBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMsgBlockCapacity.setStatus('mandatory')
mscShelfCardLocalMsgBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardLocalMsgBlockCapacity.setStatus('mandatory')
mscShelfCardConfiguredLPsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 243), )
if mibBuilder.loadTexts: mscShelfCardConfiguredLPsTable.setStatus('mandatory')
mscShelfCardConfiguredLPsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 243, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardConfiguredLPsValue"))
if mibBuilder.loadTexts: mscShelfCardConfiguredLPsEntry.setStatus('mandatory')
mscShelfCardConfiguredLPsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 243, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardConfiguredLPsValue.setStatus('mandatory')
mscShelfCardMemoryCapacityTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 244), )
if mibBuilder.loadTexts: mscShelfCardMemoryCapacityTable.setStatus('mandatory')
mscShelfCardMemoryCapacityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 244, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardMemoryCapacityIndex"))
if mibBuilder.loadTexts: mscShelfCardMemoryCapacityEntry.setStatus('mandatory')
mscShelfCardMemoryCapacityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 244, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: mscShelfCardMemoryCapacityIndex.setStatus('mandatory')
mscShelfCardMemoryCapacityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 244, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMemoryCapacityValue.setStatus('mandatory')
mscShelfCardMemoryUsageTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 245), )
if mibBuilder.loadTexts: mscShelfCardMemoryUsageTable.setStatus('mandatory')
mscShelfCardMemoryUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 245, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardMemoryUsageIndex"))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageEntry.setStatus('mandatory')
mscShelfCardMemoryUsageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 245, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageIndex.setStatus('mandatory')
mscShelfCardMemoryUsageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 245, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMemoryUsageValue.setStatus('mandatory')
mscShelfCardMemoryUsageAvgTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 276), )
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgTable.setStatus('mandatory')
mscShelfCardMemoryUsageAvgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 276, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardMemoryUsageAvgIndex"))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgEntry.setStatus('mandatory')
mscShelfCardMemoryUsageAvgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 276, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgIndex.setStatus('mandatory')
mscShelfCardMemoryUsageAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 276, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgValue.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMinTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 277), )
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMinTable.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 277, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardMemoryUsageAvgMinIndex"))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMinEntry.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 277, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMinIndex.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 277, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMinValue.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMaxTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 278), )
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMaxTable.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMaxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 278, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardMemoryUsageAvgMaxIndex"))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMaxEntry.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 278, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("fastRam", 0), ("normalRam", 1), ("sharedRam", 2))))
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMaxIndex.setStatus('mandatory')
mscShelfCardMemoryUsageAvgMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 278, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardMemoryUsageAvgMaxValue.setStatus('mandatory')
mscShelfCardCurrentLpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 406), )
if mibBuilder.loadTexts: mscShelfCardCurrentLpTable.setStatus('mandatory')
mscShelfCardCurrentLpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 406, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardCurrentLpValue"))
if mibBuilder.loadTexts: mscShelfCardCurrentLpEntry.setStatus('mandatory')
mscShelfCardCurrentLpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 406, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardCurrentLpValue.setStatus('mandatory')
mscShelfCardTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3))
mscShelfCardTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 1), )
if mibBuilder.loadTexts: mscShelfCardTestRowStatusTable.setStatus('mandatory')
mscShelfCardTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"))
if mibBuilder.loadTexts: mscShelfCardTestRowStatusEntry.setStatus('mandatory')
mscShelfCardTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestRowStatus.setStatus('mandatory')
mscShelfCardTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestComponentName.setStatus('mandatory')
mscShelfCardTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestStorageType.setStatus('mandatory')
mscShelfCardTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfCardTestIndex.setStatus('mandatory')
mscShelfCardTestStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 10), )
if mibBuilder.loadTexts: mscShelfCardTestStateTable.setStatus('mandatory')
mscShelfCardTestStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"))
if mibBuilder.loadTexts: mscShelfCardTestStateEntry.setStatus('mandatory')
mscShelfCardTestAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestAdminState.setStatus('mandatory')
mscShelfCardTestOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestOperationalState.setStatus('mandatory')
mscShelfCardTestUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestUsageState.setStatus('mandatory')
mscShelfCardTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11), )
if mibBuilder.loadTexts: mscShelfCardTestSetupTable.setStatus('mandatory')
mscShelfCardTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"))
if mibBuilder.loadTexts: mscShelfCardTestSetupEntry.setStatus('mandatory')
mscShelfCardTestTargetCard = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestTargetCard.setStatus('mandatory')
mscShelfCardTestFrmTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="c0")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestFrmTypes.setStatus('mandatory')
mscShelfCardTestFrmPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestFrmPriorities.setStatus('mandatory')
mscShelfCardTestFrmPatternType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ccitt32kBitPattern", 0), ("ccitt8MBitPattern", 1), ("customizedPattern", 2))).clone('ccitt32kBitPattern')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestFrmPatternType.setStatus('mandatory')
mscShelfCardTestCustomizedPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1, 5), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1431655765)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestCustomizedPattern.setStatus('mandatory')
mscShelfCardTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 43200)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestDuration.setStatus('mandatory')
mscShelfCardTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 12), )
if mibBuilder.loadTexts: mscShelfCardTestResultsTable.setStatus('mandatory')
mscShelfCardTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"))
if mibBuilder.loadTexts: mscShelfCardTestResultsEntry.setStatus('mandatory')
mscShelfCardTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestElapsedTime.setStatus('mandatory')
mscShelfCardTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestTimeRemaining.setStatus('mandatory')
mscShelfCardTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("neverStarted", 0), ("testRunning", 1), ("testTimeExpired", 2), ("stoppedByOperator", 3), ("targetFailed", 4), ("becameActive", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestCauseOfTermination.setStatus('mandatory')
mscShelfCardTestSizeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 253), )
if mibBuilder.loadTexts: mscShelfCardTestSizeTable.setStatus('mandatory')
mscShelfCardTestSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 253, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestSizeIndex"))
if mibBuilder.loadTexts: mscShelfCardTestSizeEntry.setStatus('mandatory')
mscShelfCardTestSizeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 253, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowPriority", 0), ("highPriority", 1))))
if mibBuilder.loadTexts: mscShelfCardTestSizeIndex.setStatus('mandatory')
mscShelfCardTestSizeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 253, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 16000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfCardTestSizeValue.setStatus('mandatory')
mscShelfCardTestLoadingFrmDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 254), )
if mibBuilder.loadTexts: mscShelfCardTestLoadingFrmDataTable.setStatus('mandatory')
mscShelfCardTestLoadingFrmDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 254, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestLoadingFrmDataResultsIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestLoadingFrmDataPriorityIndex"))
if mibBuilder.loadTexts: mscShelfCardTestLoadingFrmDataEntry.setStatus('mandatory')
mscShelfCardTestLoadingFrmDataResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 254, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("framesSent", 0), ("framesLost", 1))))
if mibBuilder.loadTexts: mscShelfCardTestLoadingFrmDataResultsIndex.setStatus('mandatory')
mscShelfCardTestLoadingFrmDataPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 254, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1))))
if mibBuilder.loadTexts: mscShelfCardTestLoadingFrmDataPriorityIndex.setStatus('mandatory')
mscShelfCardTestLoadingFrmDataValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 254, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestLoadingFrmDataValue.setStatus('mandatory')
mscShelfCardTestVerificationFrmDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 255), )
if mibBuilder.loadTexts: mscShelfCardTestVerificationFrmDataTable.setStatus('mandatory')
mscShelfCardTestVerificationFrmDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 255, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestVerificationFrmDataResultsIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardTestVerificationFrmDataPriorityIndex"))
if mibBuilder.loadTexts: mscShelfCardTestVerificationFrmDataEntry.setStatus('mandatory')
mscShelfCardTestVerificationFrmDataResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 255, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("framesTested", 0), ("framesBad", 1))))
if mibBuilder.loadTexts: mscShelfCardTestVerificationFrmDataResultsIndex.setStatus('mandatory')
mscShelfCardTestVerificationFrmDataPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 255, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("low", 0), ("high", 1))))
if mibBuilder.loadTexts: mscShelfCardTestVerificationFrmDataPriorityIndex.setStatus('mandatory')
mscShelfCardTestVerificationFrmDataValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 3, 255, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardTestVerificationFrmDataValue.setStatus('mandatory')
mscShelfCardDiag = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4))
mscShelfCardDiagRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 1), )
if mibBuilder.loadTexts: mscShelfCardDiagRowStatusTable.setStatus('mandatory')
mscShelfCardDiagRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagRowStatusEntry.setStatus('mandatory')
mscShelfCardDiagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRowStatus.setStatus('mandatory')
mscShelfCardDiagComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagComponentName.setStatus('mandatory')
mscShelfCardDiagStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagStorageType.setStatus('mandatory')
mscShelfCardDiagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfCardDiagIndex.setStatus('mandatory')
mscShelfCardDiagTrapData = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2))
mscShelfCardDiagTrapDataRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 1), )
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataRowStatusTable.setStatus('mandatory')
mscShelfCardDiagTrapDataRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagTrapDataIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataRowStatusEntry.setStatus('mandatory')
mscShelfCardDiagTrapDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataRowStatus.setStatus('mandatory')
mscShelfCardDiagTrapDataComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataComponentName.setStatus('mandatory')
mscShelfCardDiagTrapDataStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataStorageType.setStatus('mandatory')
mscShelfCardDiagTrapDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataIndex.setStatus('mandatory')
mscShelfCardDiagTrapDataLine = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2))
mscShelfCardDiagTrapDataLineRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 1), )
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineRowStatusTable.setStatus('mandatory')
mscShelfCardDiagTrapDataLineRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagTrapDataIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagTrapDataLineIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineRowStatusEntry.setStatus('mandatory')
mscShelfCardDiagTrapDataLineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineRowStatus.setStatus('mandatory')
mscShelfCardDiagTrapDataLineComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineComponentName.setStatus('mandatory')
mscShelfCardDiagTrapDataLineStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineStorageType.setStatus('mandatory')
mscShelfCardDiagTrapDataLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineIndex.setStatus('mandatory')
mscShelfCardDiagTrapDataLineOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 10), )
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineOperTable.setStatus('mandatory')
mscShelfCardDiagTrapDataLineOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagTrapDataIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagTrapDataLineIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineOperEntry.setStatus('mandatory')
mscShelfCardDiagTrapDataLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 2, 2, 10, 1, 1), ExtendedAsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagTrapDataLineData.setStatus('mandatory')
mscShelfCardDiagRecErr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3))
mscShelfCardDiagRecErrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 1), )
if mibBuilder.loadTexts: mscShelfCardDiagRecErrRowStatusTable.setStatus('mandatory')
mscShelfCardDiagRecErrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagRecErrIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagRecErrRowStatusEntry.setStatus('mandatory')
mscShelfCardDiagRecErrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrRowStatus.setStatus('mandatory')
mscShelfCardDiagRecErrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrComponentName.setStatus('mandatory')
mscShelfCardDiagRecErrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrStorageType.setStatus('mandatory')
mscShelfCardDiagRecErrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfCardDiagRecErrIndex.setStatus('mandatory')
mscShelfCardDiagRecErrLine = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2))
mscShelfCardDiagRecErrLineRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 1), )
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineRowStatusTable.setStatus('mandatory')
mscShelfCardDiagRecErrLineRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagRecErrIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagRecErrLineIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineRowStatusEntry.setStatus('mandatory')
mscShelfCardDiagRecErrLineRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineRowStatus.setStatus('mandatory')
mscShelfCardDiagRecErrLineComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineComponentName.setStatus('mandatory')
mscShelfCardDiagRecErrLineStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineStorageType.setStatus('mandatory')
mscShelfCardDiagRecErrLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 500)))
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineIndex.setStatus('mandatory')
mscShelfCardDiagRecErrLineOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 10), )
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineOperTable.setStatus('mandatory')
mscShelfCardDiagRecErrLineOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagRecErrIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDiagRecErrLineIndex"))
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineOperEntry.setStatus('mandatory')
mscShelfCardDiagRecErrLineData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 4, 3, 2, 10, 1, 1), ExtendedAsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDiagRecErrLineData.setStatus('mandatory')
mscShelfCardDcard = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16))
mscShelfCardDcardRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 1), )
if mibBuilder.loadTexts: mscShelfCardDcardRowStatusTable.setStatus('mandatory')
mscShelfCardDcardRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDcardIndex"))
if mibBuilder.loadTexts: mscShelfCardDcardRowStatusEntry.setStatus('mandatory')
mscShelfCardDcardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDcardRowStatus.setStatus('mandatory')
mscShelfCardDcardComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDcardComponentName.setStatus('mandatory')
mscShelfCardDcardStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDcardStorageType.setStatus('mandatory')
mscShelfCardDcardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)))
if mibBuilder.loadTexts: mscShelfCardDcardIndex.setStatus('mandatory')
mscShelfCardDcardDcardOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 17), )
if mibBuilder.loadTexts: mscShelfCardDcardDcardOperTable.setStatus('mandatory')
mscShelfCardDcardDcardOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardDcardIndex"))
if mibBuilder.loadTexts: mscShelfCardDcardDcardOperEntry.setStatus('mandatory')
mscShelfCardDcardType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("ram", 1), ("aqm", 2), ("pqc", 3), ("aqmpqc", 4), ("processor", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDcardType.setStatus('mandatory')
mscShelfCardDcardMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 17, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDcardMemorySize.setStatus('mandatory')
mscShelfCardDcardProductCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 16, 17, 1, 3), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardDcardProductCode.setStatus('mandatory')
mscMod = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16))
mscModRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 1), )
if mibBuilder.loadTexts: mscModRowStatusTable.setStatus('mandatory')
mscModRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"))
if mibBuilder.loadTexts: mscModRowStatusEntry.setStatus('mandatory')
mscModRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModRowStatus.setStatus('mandatory')
mscModComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModComponentName.setStatus('mandatory')
mscModStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModStorageType.setStatus('mandatory')
mscModIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscModIndex.setStatus('mandatory')
mscModProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10), )
if mibBuilder.loadTexts: mscModProvTable.setStatus('mandatory')
mscModProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"))
if mibBuilder.loadTexts: mscModProvEntry.setStatus('mandatory')
mscModNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModNodeId.setStatus('mandatory')
mscModNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="4e4f4e414d45")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModNodeName.setStatus('mandatory')
mscModNamsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 49151)).clone(49151)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModNamsId.setStatus('mandatory')
mscModRegionId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 126))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModRegionId.setStatus('mandatory')
mscModNodePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 10, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 26)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModNodePrefix.setStatus('mandatory')
mscModNodePrefixesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 338), )
if mibBuilder.loadTexts: mscModNodePrefixesTable.setStatus('obsolete')
mscModNodePrefixesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 338, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModNodePrefixesIndex"))
if mibBuilder.loadTexts: mscModNodePrefixesEntry.setStatus('obsolete')
mscModNodePrefixesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 338, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: mscModNodePrefixesIndex.setStatus('obsolete')
mscModNodePrefixesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 338, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModNodePrefixesValue.setStatus('obsolete')
mscModAlternatePorsPrefixesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 405), )
if mibBuilder.loadTexts: mscModAlternatePorsPrefixesTable.setStatus('mandatory')
mscModAlternatePorsPrefixesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 405, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModAlternatePorsPrefixesIndex"))
if mibBuilder.loadTexts: mscModAlternatePorsPrefixesEntry.setStatus('mandatory')
mscModAlternatePorsPrefixesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 405, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscModAlternatePorsPrefixesIndex.setStatus('mandatory')
mscModAlternatePorsPrefixesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 405, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModAlternatePorsPrefixesValue.setStatus('mandatory')
baseShelfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 1))
baseShelfGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 1, 1))
baseShelfGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 1, 1, 3))
baseShelfGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 1, 1, 3, 2))
baseShelfCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 3))
baseShelfCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 3, 1))
baseShelfCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 3, 1, 3))
baseShelfCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 146, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BaseShelfMIB", baseShelfMIB=baseShelfMIB, mscModNodePrefix=mscModNodePrefix, mscShelfCardTestAdminState=mscShelfCardTestAdminState, mscShelfCardComponentName=mscShelfCardComponentName, mscShelfCardDiagTrapDataLineComponentName=mscShelfCardDiagTrapDataLineComponentName, mscShelfCardSparingConnectionStatus=mscShelfCardSparingConnectionStatus, mscShelfCardMemoryUsageAvgEntry=mscShelfCardMemoryUsageAvgEntry, mscShelfCardDiagRecErrRowStatusEntry=mscShelfCardDiagRecErrRowStatusEntry, mscShelfCardDcardProductCode=mscShelfCardDcardProductCode, mscShelfCardDcardRowStatusEntry=mscShelfCardDcardRowStatusEntry, mscShelfCardTestFrmTypes=mscShelfCardTestFrmTypes, mscShelfCardStandbyStatus=mscShelfCardStandbyStatus, mscShelfCardTestVerificationFrmDataResultsIndex=mscShelfCardTestVerificationFrmDataResultsIndex, mscShelfCardLocalMsgBlockCapacity=mscShelfCardLocalMsgBlockCapacity, mscShelfCardCpuUtilAvg=mscShelfCardCpuUtilAvg, mscModRowStatus=mscModRowStatus, mscShelfCardUtilEntry=mscShelfCardUtilEntry, mscShelfCardDcard=mscShelfCardDcard, mscShelfCardTestResultsEntry=mscShelfCardTestResultsEntry, mscModIndex=mscModIndex, mscModAlternatePorsPrefixesValue=mscModAlternatePorsPrefixesValue, mscShelfCardMemoryCapacityTable=mscShelfCardMemoryCapacityTable, mscShelfCardPmRevisionCode=mscShelfCardPmRevisionCode, mscShelfCardDiagTrapDataLineOperEntry=mscShelfCardDiagTrapDataLineOperEntry, mscShelfCardLocalMsgBlockUsageAvg=mscShelfCardLocalMsgBlockUsageAvg, mscShelfCardDiagTrapDataLine=mscShelfCardDiagTrapDataLine, mscShelfCardTestLoadingFrmDataValue=mscShelfCardTestLoadingFrmDataValue, mscShelfCardHardwareAlarm=mscShelfCardHardwareAlarm, mscShelfCardMemoryUsageIndex=mscShelfCardMemoryUsageIndex, mscShelfCardMemoryCapacityIndex=mscShelfCardMemoryCapacityIndex, mscShelfCardMsgBlockUsageAvgMin=mscShelfCardMsgBlockUsageAvgMin, mscShelfShelfType=mscShelfShelfType, mscShelfProvEntry=mscShelfProvEntry, mscShelfCardCpuUtilAvgMax=mscShelfCardCpuUtilAvgMax, mscShelfCardMemoryUsageAvgMinValue=mscShelfCardMemoryUsageAvgMinValue, mscShelfCardTestSetupEntry=mscShelfCardTestSetupEntry, mscShelfCardCardType=mscShelfCardCardType, mscShelfCardPropTable=mscShelfCardPropTable, mscShelfCardDiagRecErrRowStatus=mscShelfCardDiagRecErrRowStatus, mscShelfCardOperationalState=mscShelfCardOperationalState, mscShelfCardTestStateEntry=mscShelfCardTestStateEntry, mscShelfCardTestLoadingFrmDataPriorityIndex=mscShelfCardTestLoadingFrmDataPriorityIndex, baseShelfGroupCA02A=baseShelfGroupCA02A, mscModProvEntry=mscModProvEntry, mscShelfCardConfiguredLPsTable=mscShelfCardConfiguredLPsTable, mscShelfCardCommentText=mscShelfCardCommentText, mscShelfCardTestVerificationFrmDataTable=mscShelfCardTestVerificationFrmDataTable, mscShelfCardTestLoadingFrmDataResultsIndex=mscShelfCardTestLoadingFrmDataResultsIndex, mscShelfCardTestLoadingFrmDataTable=mscShelfCardTestLoadingFrmDataTable, mscShelfCardControlStatus=mscShelfCardControlStatus, mscShelfCardAlarmStatus=mscShelfCardAlarmStatus, mscShelfHardwareFailures=mscShelfHardwareFailures, mscShelfCardTestSizeEntry=mscShelfCardTestSizeEntry, mscShelfCardRowStatusTable=mscShelfCardRowStatusTable, mscShelfRowStatus=mscShelfRowStatus, mscShelfCardMsgBlockUsageAvg=mscShelfCardMsgBlockUsageAvg, mscShelfCardTestCustomizedPattern=mscShelfCardTestCustomizedPattern, mscShelfCardStateEntry=mscShelfCardStateEntry, mscShelfCardUtilTable=mscShelfCardUtilTable, mscShelfCardDiagTrapDataRowStatusEntry=mscShelfCardDiagTrapDataRowStatusEntry, mscShelfCardDiagTrapDataLineIndex=mscShelfCardDiagTrapDataLineIndex, mscShelfBackplaneOperatingMode=mscShelfBackplaneOperatingMode, mscModNodePrefixesValue=mscModNodePrefixesValue, mscShelfCardMemoryUsageTable=mscShelfCardMemoryUsageTable, mscShelfCardTestIndex=mscShelfCardTestIndex, mscShelfCardMsgBlockUsageAvgMax=mscShelfCardMsgBlockUsageAvgMax, mscShelfCardDiagStorageType=mscShelfCardDiagStorageType, mscShelfCardMemoryUsageAvgMinIndex=mscShelfCardMemoryUsageAvgMinIndex, mscShelfCardTestTimeRemaining=mscShelfCardTestTimeRemaining, mscShelfCardDiag=mscShelfCardDiag, mscShelfCardDiagComponentName=mscShelfCardDiagComponentName, mscShelfCardDiagTrapDataStorageType=mscShelfCardDiagTrapDataStorageType, mscModComponentName=mscModComponentName, mscShelfCardCpuUtil=mscShelfCardCpuUtil, mscShelfCardMemoryUsageAvgMaxEntry=mscShelfCardMemoryUsageAvgMaxEntry, mscShelfCardDiagTrapDataLineRowStatusTable=mscShelfCardDiagTrapDataLineRowStatusTable, mscShelfCardSerialNumber=mscShelfCardSerialNumber, mscShelfCardDcardDcardOperTable=mscShelfCardDcardDcardOperTable, mscShelfCardTestUsageState=mscShelfCardTestUsageState, mscShelfCardStateTable=mscShelfCardStateTable, mscShelfCardTestStorageType=mscShelfCardTestStorageType, mscShelfCardTestVerificationFrmDataPriorityIndex=mscShelfCardTestVerificationFrmDataPriorityIndex, mscShelfCardCurrentLpEntry=mscShelfCardCurrentLpEntry, mscShelfCardDiagTrapDataRowStatusTable=mscShelfCardDiagTrapDataRowStatusTable, mscShelfCardDiagRecErrComponentName=mscShelfCardDiagRecErrComponentName, mscShelfCardMemoryUsageEntry=mscShelfCardMemoryUsageEntry, mscShelfCardDcardRowStatusTable=mscShelfCardDcardRowStatusTable, mscShelfCardConfiguredLPsEntry=mscShelfCardConfiguredLPsEntry, mscShelfCardLocalMsgBlockUsageMin=mscShelfCardLocalMsgBlockUsageMin, mscShelfCardCurrentLpValue=mscShelfCardCurrentLpValue, mscShelfCardTestSizeValue=mscShelfCardTestSizeValue, mscShelfCardTestStateTable=mscShelfCardTestStateTable, mscShelfCardTestRowStatus=mscShelfCardTestRowStatus, mscShelfStorageType=mscShelfStorageType, mscModNodePrefixesIndex=mscModNodePrefixesIndex, mscShelfCardDiagRecErrLineData=mscShelfCardDiagRecErrLineData, mscShelfCardCapTable=mscShelfCardCapTable, mscShelfCardConfiguredLPsValue=mscShelfCardConfiguredLPsValue, mscShelfCardDiagRowStatusTable=mscShelfCardDiagRowStatusTable, mscShelfCardDiagTrapDataLineData=mscShelfCardDiagTrapDataLineData, mscModRegionId=mscModRegionId, mscShelfComponentName=mscShelfComponentName, mscShelfCardAdminState=mscShelfCardAdminState, mscShelfCardProceduralStatus=mscShelfCardProceduralStatus, mscModProvTable=mscModProvTable, mscShelfCardDcardMemorySize=mscShelfCardDcardMemorySize, mscModNodePrefixesEntry=mscModNodePrefixesEntry, mscShelfCardDcardComponentName=mscShelfCardDcardComponentName, mscShelfCardDcardType=mscShelfCardDcardType, mscShelfCardTestRowStatusEntry=mscShelfCardTestRowStatusEntry, mscShelfCardDiagTrapData=mscShelfCardDiagTrapData, mscModStorageType=mscModStorageType, mscModAlternatePorsPrefixesEntry=mscModAlternatePorsPrefixesEntry, mscModNodeId=mscModNodeId, mscShelfCardOperTable=mscShelfCardOperTable, mscShelfCardDiagRecErrLineRowStatusEntry=mscShelfCardDiagRecErrLineRowStatusEntry, mscShelfCardActiveFirmwareVersion=mscShelfCardActiveFirmwareVersion, mscShelfCardTestVerificationFrmDataValue=mscShelfCardTestVerificationFrmDataValue, mscShelfCardSparingConnection=mscShelfCardSparingConnection, mscShelfOperTable=mscShelfOperTable, mscShelfCardProductCode=mscShelfCardProductCode, mscShelfCardDiagRecErrLineOperEntry=mscShelfCardDiagRecErrLineOperEntry, mscShelfCardDcardStorageType=mscShelfCardDcardStorageType, mscShelfCardMemoryUsageAvgMinTable=mscShelfCardMemoryUsageAvgMinTable, mscShelfCardDiagTrapDataLineRowStatus=mscShelfCardDiagTrapDataLineRowStatus, mscShelfIndex=mscShelfIndex, mscShelfCardDiagRowStatusEntry=mscShelfCardDiagRowStatusEntry, baseShelfCapabilitiesCA=baseShelfCapabilitiesCA, mscShelfCardUnknownStatus=mscShelfCardUnknownStatus, mscShelfCardPropEntry=mscShelfCardPropEntry, mscShelfCardDiagIndex=mscShelfCardDiagIndex, mscShelfCardMsgBlockUsage=mscShelfCardMsgBlockUsage, mscShelfCardDiagRecErrRowStatusTable=mscShelfCardDiagRecErrRowStatusTable, mscShelfRowStatusEntry=mscShelfRowStatusEntry, mscShelfCardSelfTestFault=mscShelfCardSelfTestFault, mscShelfCardLocalMsgBlockUsage=mscShelfCardLocalMsgBlockUsage, mscShelfCardTestRowStatusTable=mscShelfCardTestRowStatusTable, mscShelfCardMemoryUsageAvgValue=mscShelfCardMemoryUsageAvgValue, mscShelfCardRowStatusEntry=mscShelfCardRowStatusEntry, baseShelfCapabilitiesCA02=baseShelfCapabilitiesCA02, mscShelfCardMemoryUsageAvgIndex=mscShelfCardMemoryUsageAvgIndex, mscShelfCardDiagTrapDataLineStorageType=mscShelfCardDiagTrapDataLineStorageType, mscShelfCardTest=mscShelfCardTest, mscShelfCardDiagRecErrLine=mscShelfCardDiagRecErrLine, mscMod=mscMod, mscShelfCardTestSetupTable=mscShelfCardTestSetupTable, mscShelfCardTestFrmPatternType=mscShelfCardTestFrmPatternType, mscShelfCardDiagRecErrLineComponentName=mscShelfCardDiagRecErrLineComponentName, mscShelfCardMemoryUsageValue=mscShelfCardMemoryUsageValue, mscShelfCardCapEntry=mscShelfCardCapEntry, mscShelfCardMemoryUsageAvgTable=mscShelfCardMemoryUsageAvgTable, mscShelfCardTimeInterval=mscShelfCardTimeInterval, mscShelfCardDcardRowStatus=mscShelfCardDcardRowStatus, mscShelfCardDiagTrapDataLineOperTable=mscShelfCardDiagTrapDataLineOperTable, mscShelfCardTestTargetCard=mscShelfCardTestTargetCard, mscShelfCardAvailabilityStatus=mscShelfCardAvailabilityStatus, mscShelfCardMemoryUsageAvgMaxValue=mscShelfCardMemoryUsageAvgMaxValue, mscShelfCardTestFrmPriorities=mscShelfCardTestFrmPriorities, mscShelfCardDiagRecErr=mscShelfCardDiagRecErr, mscModAlternatePorsPrefixesTable=mscModAlternatePorsPrefixesTable, mscShelfCardDiagRowStatus=mscShelfCardDiagRowStatus, mscModRowStatusEntry=mscModRowStatusEntry, mscShelfCardMemoryUsageAvgMinEntry=mscShelfCardMemoryUsageAvgMinEntry, mscShelfCardDiagRecErrLineOperTable=mscShelfCardDiagRecErrLineOperTable, baseShelfCapabilitiesCA02A=baseShelfCapabilitiesCA02A, mscShelfProvTable=mscShelfProvTable, mscShelfCardTestComponentName=mscShelfCardTestComponentName, mscShelfCardDcardDcardOperEntry=mscShelfCardDcardDcardOperEntry, mscShelfCardImRevisionCode=mscShelfCardImRevisionCode, mscShelfRowStatusTable=mscShelfRowStatusTable, mscShelfCardCpuUtilAvgMin=mscShelfCardCpuUtilAvgMin, mscShelfCardDiagRecErrLineRowStatusTable=mscShelfCardDiagRecErrLineRowStatusTable, mscShelfCardCurrentLP=mscShelfCardCurrentLP, mscShelfCardTestResultsTable=mscShelfCardTestResultsTable, mscShelfCardMemoryCapacityEntry=mscShelfCardMemoryCapacityEntry, mscShelfCardProvTable=mscShelfCardProvTable, mscShelfCardDcardIndex=mscShelfCardDcardIndex, mscShelfCardIndex=mscShelfCardIndex, mscShelfCardInsertedCardType=mscShelfCardInsertedCardType, mscShelfCardTestCauseOfTermination=mscShelfCardTestCauseOfTermination, mscShelfCardDiagRecErrLineIndex=mscShelfCardDiagRecErrLineIndex, mscShelf=mscShelf, mscShelfCard=mscShelfCard, mscShelfCardMsgBlockCapacity=mscShelfCardMsgBlockCapacity, mscShelfCardLocalMsgBlockUsageMax=mscShelfCardLocalMsgBlockUsageMax, mscShelfCardMemoryUsageAvgMaxTable=mscShelfCardMemoryUsageAvgMaxTable, mscShelfCardDiagTrapDataLineRowStatusEntry=mscShelfCardDiagTrapDataLineRowStatusEntry, mscShelfCardDiagRecErrStorageType=mscShelfCardDiagRecErrStorageType, mscModNamsId=mscModNamsId, mscShelfCardTestOperationalState=mscShelfCardTestOperationalState, baseShelfGroupCA=baseShelfGroupCA, mscShelfCardDiagTrapDataComponentName=mscShelfCardDiagTrapDataComponentName, mscShelfNumberOfSlots=mscShelfNumberOfSlots, mscShelfOperEntry=mscShelfOperEntry, mscShelfCardCurrentLpTable=mscShelfCardCurrentLpTable, mscShelfCardTestDuration=mscShelfCardTestDuration, mscShelfCardProvEntry=mscShelfCardProvEntry, mscModNodePrefixesTable=mscModNodePrefixesTable, baseShelfCapabilities=baseShelfCapabilities, mscShelfCardTestSizeIndex=mscShelfCardTestSizeIndex, mscShelfCardTestElapsedTime=mscShelfCardTestElapsedTime, mscShelfCardMemoryUsageAvgMaxIndex=mscShelfCardMemoryUsageAvgMaxIndex, mscShelfCardDiagTrapDataRowStatus=mscShelfCardDiagTrapDataRowStatus, baseShelfGroup=baseShelfGroup, mscShelfCardStorageType=mscShelfCardStorageType, mscShelfCardTestSizeTable=mscShelfCardTestSizeTable, mscShelfCardMemoryCapacityValue=mscShelfCardMemoryCapacityValue, mscShelfCardTestVerificationFrmDataEntry=mscShelfCardTestVerificationFrmDataEntry, mscModNodeName=mscModNodeName, mscShelfCardTestLoadingFrmDataEntry=mscShelfCardTestLoadingFrmDataEntry, mscShelfCardRowStatus=mscShelfCardRowStatus, mscShelfCardInactiveFirmwareVersion=mscShelfCardInactiveFirmwareVersion, mscShelfCardUsageState=mscShelfCardUsageState, mscShelfCommentText=mscShelfCommentText, mscModRowStatusTable=mscModRowStatusTable, baseShelfGroupCA02=baseShelfGroupCA02, mscShelfCardDiagTrapDataIndex=mscShelfCardDiagTrapDataIndex, mscShelfCardDiagRecErrLineStorageType=mscShelfCardDiagRecErrLineStorageType, mscShelfCardDiagRecErrIndex=mscShelfCardDiagRecErrIndex, mscModAlternatePorsPrefixesIndex=mscModAlternatePorsPrefixesIndex, mscShelfCardDiagRecErrLineRowStatus=mscShelfCardDiagRecErrLineRowStatus, mscShelfCardFailureCause=mscShelfCardFailureCause, mscShelfBusOperatingMode=mscShelfBusOperatingMode, mscShelfCardOperEntry=mscShelfCardOperEntry)
