#
# PySNMP MIB module Nortel-Magellan-Passport-GsmIwfMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-GsmIwfMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
StorageType, Unsigned32, RowStatus, Counter32, RowPointer, DisplayString, Gauge32, Integer32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "Unsigned32", "RowStatus", "Counter32", "RowPointer", "DisplayString", "Gauge32", "Integer32")
FixedPoint2, AsciiString, Link, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "FixedPoint2", "AsciiString", "Link", "NonReplicated")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter64, ModuleIdentity, Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, Integer32, ObjectIdentity, Gauge32, TimeTicks, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "ModuleIdentity", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "Integer32", "ObjectIdentity", "Gauge32", "TimeTicks", "Bits", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gsmIwfMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129))
gsmCs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127))
gsmCsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 1), )
if mibBuilder.loadTexts: gsmCsRowStatusTable.setStatus('mandatory')
gsmCsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: gsmCsRowStatusEntry.setStatus('mandatory')
gsmCsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRowStatus.setStatus('mandatory')
gsmCsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsComponentName.setStatus('mandatory')
gsmCsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsStorageType.setStatus('mandatory')
gsmCsTrunkGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: gsmCsTrunkGrpIndex.setStatus('mandatory')
gsmCsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 100), )
if mibBuilder.loadTexts: gsmCsProvTable.setStatus('mandatory')
gsmCsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: gsmCsProvEntry.setStatus('mandatory')
gsmCsCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 100, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsCommentText.setStatus('mandatory')
gsmCsMscIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 100, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsMscIpAddress.setStatus('mandatory')
gsmCsVirtualRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 100, 1, 4), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsVirtualRouterName.setStatus('mandatory')
gsmCsVoiceLaw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 100, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aLaw", 0), ("muLaw", 1))).clone('aLaw')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsVoiceLaw.setStatus('mandatory')
gsmCsCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 103), )
if mibBuilder.loadTexts: gsmCsCidDataTable.setStatus('mandatory')
gsmCsCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 103, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: gsmCsCidDataEntry.setStatus('mandatory')
gsmCsCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 103, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsCustomerIdentifier.setStatus('mandatory')
gsmCsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 104), )
if mibBuilder.loadTexts: gsmCsStateTable.setStatus('mandatory')
gsmCsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 104, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: gsmCsStateEntry.setStatus('mandatory')
gsmCsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 104, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsAdminState.setStatus('mandatory')
gsmCsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 104, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsOperationalState.setStatus('mandatory')
gsmCsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 104, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsUsageState.setStatus('mandatory')
gsmCsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121), )
if mibBuilder.loadTexts: gsmCsStatsTable.setStatus('mandatory')
gsmCsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"))
if mibBuilder.loadTexts: gsmCsStatsEntry.setStatus('mandatory')
gsmCsCurrentCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsCurrentCalls.setStatus('mandatory')
gsmCsCallsRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsCallsRequested.setStatus('mandatory')
gsmCsCallsSetup = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsCallsSetup.setStatus('mandatory')
gsmCsCallsActivated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsCallsActivated.setStatus('mandatory')
gsmCsCallsReleasedNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsCallsReleasedNormal.setStatus('mandatory')
gsmCsCallsReleasedAbnormal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsCallsReleasedAbnormal.setStatus('mandatory')
gsmCsChannelConfigChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsChannelConfigChanges.setStatus('mandatory')
gsmCsChannelModeModifyRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsChannelModeModifyRequests.setStatus('mandatory')
gsmCsStatusMessagesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsStatusMessagesRx.setStatus('mandatory')
gsmCsErroredMipFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 121, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsErroredMipFrames.setStatus('mandatory')
gsmCsModem = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2))
gsmCsModemRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2, 1), )
if mibBuilder.loadTexts: gsmCsModemRowStatusTable.setStatus('mandatory')
gsmCsModemRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsModemIndex"))
if mibBuilder.loadTexts: gsmCsModemRowStatusEntry.setStatus('mandatory')
gsmCsModemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsModemRowStatus.setStatus('mandatory')
gsmCsModemComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsModemComponentName.setStatus('mandatory')
gsmCsModemStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsModemStorageType.setStatus('mandatory')
gsmCsModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("v17", 0), ("v21", 1), ("v22", 2), ("v22bis", 3), ("v23", 4), ("v27ter", 6), ("v29", 7), ("v32", 8), ("v32bis", 9))))
if mibBuilder.loadTexts: gsmCsModemIndex.setStatus('mandatory')
gsmCsRlp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3))
gsmCsRlpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 1), )
if mibBuilder.loadTexts: gsmCsRlpRowStatusTable.setStatus('mandatory')
gsmCsRlpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsRlpIndex"))
if mibBuilder.loadTexts: gsmCsRlpRowStatusEntry.setStatus('mandatory')
gsmCsRlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsRlpRowStatus.setStatus('mandatory')
gsmCsRlpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsRlpComponentName.setStatus('mandatory')
gsmCsRlpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsRlpStorageType.setStatus('mandatory')
gsmCsRlpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("half6kRate", 0), ("full6kRate", 1), ("full12kRate", 2), ("full14k5Rate", 3))))
if mibBuilder.loadTexts: gsmCsRlpIndex.setStatus('mandatory')
gsmCsRlpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10), )
if mibBuilder.loadTexts: gsmCsRlpProvTable.setStatus('mandatory')
gsmCsRlpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsRlpIndex"))
if mibBuilder.loadTexts: gsmCsRlpProvEntry.setStatus('mandatory')
gsmCsRlpHighestVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRlpHighestVersion.setStatus('mandatory')
gsmCsRlpIwfToMsWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61)).clone(61)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRlpIwfToMsWindowSize.setStatus('mandatory')
gsmCsRlpMsToIwfWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61)).clone(61)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRlpMsToIwfWindowSize.setStatus('mandatory')
gsmCsRlpT1AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(380, 1020))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRlpT1AckTimer.setStatus('mandatory')
gsmCsRlpT2AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 79)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRlpT2AckDelayTimer.setStatus('mandatory')
gsmCsRlpN2RetransmitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsRlpN2RetransmitCount.setStatus('mandatory')
gsmCsFax = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4))
gsmCsFaxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 1), )
if mibBuilder.loadTexts: gsmCsFaxRowStatusTable.setStatus('mandatory')
gsmCsFaxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsFaxIndex"))
if mibBuilder.loadTexts: gsmCsFaxRowStatusEntry.setStatus('mandatory')
gsmCsFaxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsFaxRowStatus.setStatus('mandatory')
gsmCsFaxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsFaxComponentName.setStatus('mandatory')
gsmCsFaxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsFaxStorageType.setStatus('mandatory')
gsmCsFaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmCsFaxIndex.setStatus('mandatory')
gsmCsFaxProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 10), )
if mibBuilder.loadTexts: gsmCsFaxProvTable.setStatus('mandatory')
gsmCsFaxProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsFaxIndex"))
if mibBuilder.loadTexts: gsmCsFaxProvEntry.setStatus('mandatory')
gsmCsFaxT1CalledToneTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 4, 10, 1, 1), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(150, 300)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsFaxT1CalledToneTimer.setStatus('mandatory')
gsmCsV42 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5))
gsmCsV42RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 1), )
if mibBuilder.loadTexts: gsmCsV42RowStatusTable.setStatus('mandatory')
gsmCsV42RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsV42Index"))
if mibBuilder.loadTexts: gsmCsV42RowStatusEntry.setStatus('mandatory')
gsmCsV42RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsV42RowStatus.setStatus('mandatory')
gsmCsV42ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsV42ComponentName.setStatus('mandatory')
gsmCsV42StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsV42StorageType.setStatus('mandatory')
gsmCsV42Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmCsV42Index.setStatus('mandatory')
gsmCsV42ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10), )
if mibBuilder.loadTexts: gsmCsV42ProvTable.setStatus('mandatory')
gsmCsV42ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsV42Index"))
if mibBuilder.loadTexts: gsmCsV42ProvEntry.setStatus('mandatory')
gsmCsV42T400DetectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 1), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(75, 254)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42T400DetectTimer.setStatus('mandatory')
gsmCsV42T401AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 2), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(50, 900)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42T401AckTimer.setStatus('mandatory')
gsmCsV42T402AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 3), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(25, 450)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42T402AckDelayTimer.setStatus('mandatory')
gsmCsV42T403IdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 90)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42T403IdleProbeTimer.setStatus('mandatory')
gsmCsV42TxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42TxN401FrameSize.setStatus('mandatory')
gsmCsV42RxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42RxN401FrameSize.setStatus('mandatory')
gsmCsV42TxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42TxKwindowSize.setStatus('mandatory')
gsmCsV42RxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42RxKwindowSize.setStatus('mandatory')
gsmCsV42N400RetransLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42N400RetransLimit.setStatus('mandatory')
gsmCsV42bis = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6))
gsmCsV42bisRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 1), )
if mibBuilder.loadTexts: gsmCsV42bisRowStatusTable.setStatus('mandatory')
gsmCsV42bisRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsV42bisIndex"))
if mibBuilder.loadTexts: gsmCsV42bisRowStatusEntry.setStatus('mandatory')
gsmCsV42bisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsV42bisRowStatus.setStatus('mandatory')
gsmCsV42bisComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsV42bisComponentName.setStatus('mandatory')
gsmCsV42bisStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsV42bisStorageType.setStatus('mandatory')
gsmCsV42bisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmCsV42bisIndex.setStatus('mandatory')
gsmCsV42bisProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 10), )
if mibBuilder.loadTexts: gsmCsV42bisProvTable.setStatus('mandatory')
gsmCsV42bisProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsV42bisIndex"))
if mibBuilder.loadTexts: gsmCsV42bisProvEntry.setStatus('mandatory')
gsmCsV42bisCompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("encode", 1), ("decode", 2), ("both", 3))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42bisCompressionDirection.setStatus('mandatory')
gsmCsV42bisMaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(512, 512), ValueRangeConstraint(1024, 1024), ValueRangeConstraint(2048, 2048), ValueRangeConstraint(4096, 4096), )).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42bisMaximumCodewords.setStatus('mandatory')
gsmCsV42bisMaximumStringSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42bisMaximumStringSize.setStatus('mandatory')
gsmCsV42bisActionOnError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("resetLink", 0), ("takeDownCall", 1))).clone('resetLink')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsV42bisActionOnError.setStatus('mandatory')
gsmCsLp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7))
gsmCsLpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 1), )
if mibBuilder.loadTexts: gsmCsLpRowStatusTable.setStatus('mandatory')
gsmCsLpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsLpIndex"))
if mibBuilder.loadTexts: gsmCsLpRowStatusEntry.setStatus('mandatory')
gsmCsLpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmCsLpRowStatus.setStatus('mandatory')
gsmCsLpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsLpComponentName.setStatus('mandatory')
gsmCsLpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsLpStorageType.setStatus('mandatory')
gsmCsLpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: gsmCsLpIndex.setStatus('mandatory')
gsmCsLpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 10), )
if mibBuilder.loadTexts: gsmCsLpOperTable.setStatus('mandatory')
gsmCsLpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmCsLpIndex"))
if mibBuilder.loadTexts: gsmCsLpOperEntry.setStatus('mandatory')
gsmCsLpConfiguredBearerChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsLpConfiguredBearerChannels.setStatus('mandatory')
gsmCsLpActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsLpActiveCalls.setStatus('mandatory')
gsmCsLpAssignedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsLpAssignedCapacity.setStatus('mandatory')
gsmCsLpModemsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 127, 7, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmCsLpModemsSupported.setStatus('mandatory')
gsmBc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128))
gsmBcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1), )
if mibBuilder.loadTexts: gsmBcRowStatusTable.setStatus('mandatory')
gsmBcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"))
if mibBuilder.loadTexts: gsmBcRowStatusEntry.setStatus('mandatory')
gsmBcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmBcRowStatus.setStatus('mandatory')
gsmBcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcComponentName.setStatus('mandatory')
gsmBcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcStorageType.setStatus('mandatory')
gsmBcTrunkGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: gsmBcTrunkGrpIndex.setStatus('mandatory')
gsmBcCicIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047)))
if mibBuilder.loadTexts: gsmBcCicIndex.setStatus('mandatory')
gsmBcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101), )
if mibBuilder.loadTexts: gsmBcOperTable.setStatus('mandatory')
gsmBcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"))
if mibBuilder.loadTexts: gsmBcOperEntry.setStatus('mandatory')
gsmBcMipState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 0), ("pendingSetup", 1), ("setup", 2), ("pendingActivation", 3), ("activated", 4), ("holdDisconnect", 5), ("suspended", 6))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcMipState.setStatus('mandatory')
gsmBcMaxUserDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("n300", 0), ("n600", 1), ("n1200", 2), ("n120075", 3), ("n2400", 4), ("n4800", 5), ("n7200", 6), ("n9600", 7), ("n12000", 8), ("n14400", 9), ("n16800", 10), ("n19200", 11), ("n21600", 12), ("n24000", 13), ("n26400", 14), ("n28800", 15), ("n31200", 16), ("n32000", 17), ("n33600", 18), ("n38400", 19), ("n43200", 20), ("n48000", 21), ("n56000", 22), ("n57600", 23), ("n64000", 24), ("none", 25))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcMaxUserDataRate.setStatus('mandatory')
gsmBcConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("synchronous", 0), ("asynchronous", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcConnectionType.setStatus('mandatory')
gsmBcDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 99))).clone(namedValues=NamedValues(("n7", 0), ("n8", 1), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcDataBits.setStatus('mandatory')
gsmBcStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 99))).clone(namedValues=NamedValues(("n1", 0), ("n2", 1), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcStopBits.setStatus('mandatory')
gsmBcParity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2), ("forced0", 3), ("forced1", 4), ("notApplicable", 99))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcParity.setStatus('mandatory')
gsmBcFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noFlowControlActive", 0), ("inband", 1), ("v110FlowCntrl", 2), ("errorCntrl", 3))).clone('noFlowControlActive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFlowControl.setStatus('mandatory')
gsmBcCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("faxG3", 0), ("cda31khz", 1), ("cdaUdi", 2), ("cdsUdi", 3), ("cds31khz", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcCallType.setStatus('mandatory')
gsmBcLastResponseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 99))).clone(namedValues=NamedValues(("requestDone", 0), ("systemError", 1), ("applicationError", 2), ("noResources", 3), ("msgSizeMismatch", 4), ("protocolViolation", 5), ("requestNotSupported", 6), ("requestDenied", 7), ("invalidMessage", 8), ("bufferNotFlushed", 9), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLastResponseCode.setStatus('mandatory')
gsmBcMateBearerChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 101, 1, 10), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcMateBearerChannel.setStatus('mandatory')
gsmBcCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 104), )
if mibBuilder.loadTexts: gsmBcCidDataTable.setStatus('mandatory')
gsmBcCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 104, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"))
if mibBuilder.loadTexts: gsmBcCidDataEntry.setStatus('mandatory')
gsmBcCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 104, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmBcCustomerIdentifier.setStatus('mandatory')
gsmBcStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 105), )
if mibBuilder.loadTexts: gsmBcStateTable.setStatus('mandatory')
gsmBcStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 105, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"))
if mibBuilder.loadTexts: gsmBcStateEntry.setStatus('mandatory')
gsmBcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 105, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcAdminState.setStatus('mandatory')
gsmBcOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 105, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcOperationalState.setStatus('mandatory')
gsmBcUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 105, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUsageState.setStatus('mandatory')
gsmBcFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2))
gsmBcFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 1), )
if mibBuilder.loadTexts: gsmBcFramerRowStatusTable.setStatus('mandatory')
gsmBcFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFramerIndex"))
if mibBuilder.loadTexts: gsmBcFramerRowStatusEntry.setStatus('mandatory')
gsmBcFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerRowStatus.setStatus('mandatory')
gsmBcFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerComponentName.setStatus('mandatory')
gsmBcFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerStorageType.setStatus('mandatory')
gsmBcFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcFramerIndex.setStatus('mandatory')
gsmBcFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 10), )
if mibBuilder.loadTexts: gsmBcFramerProvTable.setStatus('mandatory')
gsmBcFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFramerIndex"))
if mibBuilder.loadTexts: gsmBcFramerProvEntry.setStatus('mandatory')
gsmBcFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmBcFramerInterfaceName.setStatus('mandatory')
gsmBcFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11), )
if mibBuilder.loadTexts: gsmBcFramerStatsTable.setStatus('mandatory')
gsmBcFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFramerIndex"))
if mibBuilder.loadTexts: gsmBcFramerStatsEntry.setStatus('mandatory')
gsmBcFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerFrmToIf.setStatus('mandatory')
gsmBcFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerFrmFromIf.setStatus('mandatory')
gsmBcFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerOctetFromIf.setStatus('mandatory')
gsmBcFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerCrcErrors.setStatus('mandatory')
gsmBcFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerLrcErrors.setStatus('mandatory')
gsmBcFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerNonOctetErrors.setStatus('mandatory')
gsmBcFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerOverruns.setStatus('mandatory')
gsmBcFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerUnderruns.setStatus('mandatory')
gsmBcFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 12), )
if mibBuilder.loadTexts: gsmBcFramerLinkTable.setStatus('mandatory')
gsmBcFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFramerIndex"))
if mibBuilder.loadTexts: gsmBcFramerLinkEntry.setStatus('mandatory')
gsmBcFramerFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 8))).clone(namedValues=NamedValues(("btdsFraming", 2), ("gsmFraming", 8))).clone('gsmFraming')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmBcFramerFramingType.setStatus('mandatory')
gsmBcFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 13), )
if mibBuilder.loadTexts: gsmBcFramerStateTable.setStatus('mandatory')
gsmBcFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFramerIndex"))
if mibBuilder.loadTexts: gsmBcFramerStateEntry.setStatus('mandatory')
gsmBcFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerAdminState.setStatus('mandatory')
gsmBcFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerOperationalState.setStatus('mandatory')
gsmBcFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFramerUsageState.setStatus('mandatory')
gsmBcLayer1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3))
gsmBcLayer1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 1), )
if mibBuilder.loadTexts: gsmBcLayer1RowStatusTable.setStatus('mandatory')
gsmBcLayer1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcLayer1Index"))
if mibBuilder.loadTexts: gsmBcLayer1RowStatusEntry.setStatus('mandatory')
gsmBcLayer1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1RowStatus.setStatus('mandatory')
gsmBcLayer1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1ComponentName.setStatus('mandatory')
gsmBcLayer1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1StorageType.setStatus('mandatory')
gsmBcLayer1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcLayer1Index.setStatus('mandatory')
gsmBcLayer1OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 10), )
if mibBuilder.loadTexts: gsmBcLayer1OperTable.setStatus('mandatory')
gsmBcLayer1OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcLayer1Index"))
if mibBuilder.loadTexts: gsmBcLayer1OperEntry.setStatus('mandatory')
gsmBcLayer1ActiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("v110", 0), ("aTrau", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1ActiveMode.setStatus('mandatory')
gsmBcLayer1Connection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("nonTransparent", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1Connection.setStatus('mandatory')
gsmBcLayer1DataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1DataRate.setStatus('mandatory')
gsmBcLayer1IntermediateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1IntermediateRate.setStatus('mandatory')
gsmBcLayer1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11), )
if mibBuilder.loadTexts: gsmBcLayer1StatsTable.setStatus('mandatory')
gsmBcLayer1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcLayer1Index"))
if mibBuilder.loadTexts: gsmBcLayer1StatsEntry.setStatus('mandatory')
gsmBcLayer1FramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1FramesTx.setStatus('mandatory')
gsmBcLayer1FramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1FramesRx.setStatus('mandatory')
gsmBcLayer1BytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1BytesTx.setStatus('mandatory')
gsmBcLayer1BytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1BytesRx.setStatus('mandatory')
gsmBcLayer1UnderRunsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1UnderRunsTx.setStatus('mandatory')
gsmBcLayer1OverRunsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1OverRunsRx.setStatus('mandatory')
gsmBcLayer1NonOctetErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1NonOctetErrorsRx.setStatus('mandatory')
gsmBcLayer1LargeFrameErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1LargeFrameErrorsRx.setStatus('mandatory')
gsmBcLayer1FramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1FramesDiscarded.setStatus('mandatory')
gsmBcLayer1LrcErrorsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 3, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcLayer1LrcErrorsTx.setStatus('mandatory')
gsmBcModem = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4))
gsmBcModemRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 1), )
if mibBuilder.loadTexts: gsmBcModemRowStatusTable.setStatus('mandatory')
gsmBcModemRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcModemIndex"))
if mibBuilder.loadTexts: gsmBcModemRowStatusEntry.setStatus('mandatory')
gsmBcModemRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemRowStatus.setStatus('mandatory')
gsmBcModemComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemComponentName.setStatus('mandatory')
gsmBcModemStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemStorageType.setStatus('mandatory')
gsmBcModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcModemIndex.setStatus('mandatory')
gsmBcModemOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10), )
if mibBuilder.loadTexts: gsmBcModemOperTable.setStatus('mandatory')
gsmBcModemOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcModemIndex"))
if mibBuilder.loadTexts: gsmBcModemOperEntry.setStatus('mandatory')
gsmBcModemRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("n300", 0), ("n600", 1), ("n1200", 2), ("n120075", 3), ("n2400", 4), ("n4800", 5), ("n7200", 6), ("n9600", 7), ("n12000", 8), ("n14400", 9), ("n16800", 10), ("n19200", 11), ("n21600", 12), ("n24000", 13), ("n26400", 14), ("n28800", 15), ("n31200", 16), ("n32000", 17), ("n33600", 18), ("n38400", 19), ("n43200", 20), ("n48000", 21), ("n56000", 22), ("n57600", 23), ("n64000", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemRate.setStatus('mandatory')
gsmBcModemAlgorithmInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemAlgorithmInUse.setStatus('mandatory')
gsmBcModemProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("training", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemProtocolState.setStatus('mandatory')
gsmBcModemReceiverTransmitter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 0), ("rxOnTxOff", 1), ("rxOffTxOn", 2), ("rxTxOn", 3))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemReceiverTransmitter.setStatus('mandatory')
gsmBcModemTraining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 99))).clone(namedValues=NamedValues(("short", 0), ("long", 1), ("notApplicable", 99))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemTraining.setStatus('mandatory')
gsmBcModemToUpperFlowControlActive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemToUpperFlowControlActive.setStatus('mandatory')
gsmBcModemToDspFlowControlActive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemToDspFlowControlActive.setStatus('mandatory')
gsmBcModemAsyncMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemAsyncMode.setStatus('mandatory')
gsmBcModemAutoHdlcMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemAutoHdlcMode.setStatus('mandatory')
gsmBcModemOutbandFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemOutbandFlowControl.setStatus('mandatory')
gsmBcModemOutbandBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemOutbandBreak.setStatus('mandatory')
gsmBcModemAutobaud = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemAutobaud.setStatus('mandatory')
gsmBcModemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 11), )
if mibBuilder.loadTexts: gsmBcModemStatsTable.setStatus('mandatory')
gsmBcModemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcModemIndex"))
if mibBuilder.loadTexts: gsmBcModemStatsEntry.setStatus('mandatory')
gsmBcModemBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemBytesTx.setStatus('mandatory')
gsmBcModemBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemBytesRx.setStatus('mandatory')
gsmBcModemFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 4, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcModemFramingErrors.setStatus('mandatory')
gsmBcV110 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5))
gsmBcV110RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 1), )
if mibBuilder.loadTexts: gsmBcV110RowStatusTable.setStatus('mandatory')
gsmBcV110RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV110Index"))
if mibBuilder.loadTexts: gsmBcV110RowStatusEntry.setStatus('mandatory')
gsmBcV110RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110RowStatus.setStatus('mandatory')
gsmBcV110ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110ComponentName.setStatus('mandatory')
gsmBcV110StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110StorageType.setStatus('mandatory')
gsmBcV110Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcV110Index.setStatus('mandatory')
gsmBcV110OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 10), )
if mibBuilder.loadTexts: gsmBcV110OperTable.setStatus('mandatory')
gsmBcV110OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV110Index"))
if mibBuilder.loadTexts: gsmBcV110OperEntry.setStatus('mandatory')
gsmBcV110DataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110DataRate.setStatus('mandatory')
gsmBcV110IntermediateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n8KbitS", 0), ("n16KbitS", 1), ("n32KbitS", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110IntermediateRate.setStatus('mandatory')
gsmBcV110StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11), )
if mibBuilder.loadTexts: gsmBcV110StatsTable.setStatus('mandatory')
gsmBcV110StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV110Index"))
if mibBuilder.loadTexts: gsmBcV110StatsEntry.setStatus('mandatory')
gsmBcV110FramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110FramesTx.setStatus('mandatory')
gsmBcV110FramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110FramesRx.setStatus('mandatory')
gsmBcV110BytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110BytesTx.setStatus('mandatory')
gsmBcV110BytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110BytesRx.setStatus('mandatory')
gsmBcV110UnderRunsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110UnderRunsTx.setStatus('mandatory')
gsmBcV110OverRunsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110OverRunsRx.setStatus('mandatory')
gsmBcV110NonOctetErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110NonOctetErrorsRx.setStatus('mandatory')
gsmBcV110LargeFrameErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110LargeFrameErrorsRx.setStatus('mandatory')
gsmBcV110FramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110FramesDiscarded.setStatus('mandatory')
gsmBcV110LrcErrorsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 5, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV110LrcErrorsTx.setStatus('mandatory')
gsmBcFax = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6))
gsmBcFaxRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 1), )
if mibBuilder.loadTexts: gsmBcFaxRowStatusTable.setStatus('mandatory')
gsmBcFaxRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFaxIndex"))
if mibBuilder.loadTexts: gsmBcFaxRowStatusEntry.setStatus('mandatory')
gsmBcFaxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxRowStatus.setStatus('mandatory')
gsmBcFaxComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxComponentName.setStatus('mandatory')
gsmBcFaxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxStorageType.setStatus('mandatory')
gsmBcFaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcFaxIndex.setStatus('mandatory')
gsmBcFaxOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 10), )
if mibBuilder.loadTexts: gsmBcFaxOperTable.setStatus('mandatory')
gsmBcFaxOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFaxIndex"))
if mibBuilder.loadTexts: gsmBcFaxOperEntry.setStatus('mandatory')
gsmBcFaxActiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("ecm", 1))).clone('normal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxActiveMode.setStatus('mandatory')
gsmBcFaxProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("setup", 0), ("idle", 1), ("bcsRx", 2), ("bcsTx", 3), ("msgRx", 4), ("msgTx", 5))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxProtocolState.setStatus('mandatory')
gsmBcFaxMessageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxMessageRate.setStatus('mandatory')
gsmBcFaxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11), )
if mibBuilder.loadTexts: gsmBcFaxStatsTable.setStatus('mandatory')
gsmBcFaxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcFaxIndex"))
if mibBuilder.loadTexts: gsmBcFaxStatsEntry.setStatus('mandatory')
gsmBcFaxMessageFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxMessageFramesRx.setStatus('mandatory')
gsmBcFaxMessageFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxMessageFramesTx.setStatus('mandatory')
gsmBcFaxBcsFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxBcsFramesRx.setStatus('mandatory')
gsmBcFaxBcsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxBcsFramesTx.setStatus('mandatory')
gsmBcFaxPagesRxFromMobile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxPagesRxFromMobile.setStatus('mandatory')
gsmBcFaxPagesTxToMobile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxPagesTxToMobile.setStatus('mandatory')
gsmBcFaxChannelModeModify = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxChannelModeModify.setStatus('mandatory')
gsmBcFaxBcsFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 6, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcFaxBcsFrameErrors.setStatus('mandatory')
gsmBcRlp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7))
gsmBcRlpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 1), )
if mibBuilder.loadTexts: gsmBcRlpRowStatusTable.setStatus('mandatory')
gsmBcRlpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcRlpIndex"))
if mibBuilder.loadTexts: gsmBcRlpRowStatusEntry.setStatus('mandatory')
gsmBcRlpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpRowStatus.setStatus('mandatory')
gsmBcRlpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpComponentName.setStatus('mandatory')
gsmBcRlpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpStorageType.setStatus('mandatory')
gsmBcRlpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcRlpIndex.setStatus('mandatory')
gsmBcRlpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10), )
if mibBuilder.loadTexts: gsmBcRlpOperTable.setStatus('mandatory')
gsmBcRlpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcRlpIndex"))
if mibBuilder.loadTexts: gsmBcRlpOperEntry.setStatus('mandatory')
gsmBcRlpProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("detached", 0), ("disconnected", 1), ("connPending", 2), ("discPending", 3), ("connectEstablished", 4), ("synchronized", 5))).clone('detached')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpProtocolState.setStatus('mandatory')
gsmBcRlpFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpFrameSize.setStatus('mandatory')
gsmBcRlpHighestVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpHighestVersion.setStatus('mandatory')
gsmBcRlpIwfToMsWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpIwfToMsWindowSize.setStatus('mandatory')
gsmBcRlpMsToIwfWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 61))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpMsToIwfWindowSize.setStatus('mandatory')
gsmBcRlpT1AckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(380, 1020))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpT1AckTimer.setStatus('mandatory')
gsmBcRlpT2AckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpT2AckDelayTimer.setStatus('mandatory')
gsmBcRlpN2RetransmitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gsmBcRlpN2RetransmitCount.setStatus('mandatory')
gsmBcRlpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11), )
if mibBuilder.loadTexts: gsmBcRlpStatsTable.setStatus('mandatory')
gsmBcRlpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcRlpIndex"))
if mibBuilder.loadTexts: gsmBcRlpStatsEntry.setStatus('mandatory')
gsmBcRlpIFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpIFramesTx.setStatus('mandatory')
gsmBcRlpIFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpIFramesRx.setStatus('mandatory')
gsmBcRlpFramesRetransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpFramesRetransmitted.setStatus('mandatory')
gsmBcRlpT1AckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpT1AckTimeouts.setStatus('mandatory')
gsmBcRlpInvalidFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpInvalidFrames.setStatus('mandatory')
gsmBcRlpCrcErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpCrcErrorsRx.setStatus('mandatory')
gsmBcRlpOutOfSequenceFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpOutOfSequenceFrames.setStatus('mandatory')
gsmBcRlpRemoteBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpRemoteBusyIndications.setStatus('mandatory')
gsmBcRlpLocalBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpLocalBusyIndications.setStatus('mandatory')
gsmBcRlpIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpIFramesTxDiscarded.setStatus('mandatory')
gsmBcRlpResetsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 7, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcRlpResetsRx.setStatus('mandatory')
gsmBcV42 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8))
gsmBcV42RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 1), )
if mibBuilder.loadTexts: gsmBcV42RowStatusTable.setStatus('mandatory')
gsmBcV42RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV42Index"))
if mibBuilder.loadTexts: gsmBcV42RowStatusEntry.setStatus('mandatory')
gsmBcV42RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42RowStatus.setStatus('mandatory')
gsmBcV42ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42ComponentName.setStatus('mandatory')
gsmBcV42StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42StorageType.setStatus('mandatory')
gsmBcV42Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcV42Index.setStatus('mandatory')
gsmBcV42OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10), )
if mibBuilder.loadTexts: gsmBcV42OperTable.setStatus('mandatory')
gsmBcV42OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV42Index"))
if mibBuilder.loadTexts: gsmBcV42OperEntry.setStatus('mandatory')
gsmBcV42ProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notActive", 0), ("disconnected", 1), ("linksetup", 2), ("frameReject", 3), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 6))).clone('notActive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42ProtocolState.setStatus('mandatory')
gsmBcV42TxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65355))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42TxN401FrameSize.setStatus('mandatory')
gsmBcV42RxN401FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42RxN401FrameSize.setStatus('mandatory')
gsmBcV42TxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42TxKwindowSize.setStatus('mandatory')
gsmBcV42RxKwindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42RxKwindowSize.setStatus('mandatory')
gsmBcV42StatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11), )
if mibBuilder.loadTexts: gsmBcV42StatsTable.setStatus('mandatory')
gsmBcV42StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV42Index"))
if mibBuilder.loadTexts: gsmBcV42StatsEntry.setStatus('mandatory')
gsmBcV42IBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42IBytesRx.setStatus('mandatory')
gsmBcV42IBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42IBytesTx.setStatus('mandatory')
gsmBcV42IFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42IFramesRx.setStatus('mandatory')
gsmBcV42IFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42IFramesTx.setStatus('mandatory')
gsmBcV42FramesRetransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42FramesRetransmitted.setStatus('mandatory')
gsmBcV42T1AckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42T1AckTimeouts.setStatus('mandatory')
gsmBcV42RemoteBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42RemoteBusyIndications.setStatus('mandatory')
gsmBcV42LocalBusyIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42LocalBusyIndications.setStatus('mandatory')
gsmBcV42BadFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42BadFramesRx.setStatus('mandatory')
gsmBcV42CrcErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 8, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42CrcErrorsRx.setStatus('mandatory')
gsmBcV42bis = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9))
gsmBcV42bisRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 1), )
if mibBuilder.loadTexts: gsmBcV42bisRowStatusTable.setStatus('mandatory')
gsmBcV42bisRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV42bisIndex"))
if mibBuilder.loadTexts: gsmBcV42bisRowStatusEntry.setStatus('mandatory')
gsmBcV42bisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisRowStatus.setStatus('mandatory')
gsmBcV42bisComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisComponentName.setStatus('mandatory')
gsmBcV42bisStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisStorageType.setStatus('mandatory')
gsmBcV42bisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcV42bisIndex.setStatus('mandatory')
gsmBcV42bisOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10), )
if mibBuilder.loadTexts: gsmBcV42bisOperTable.setStatus('mandatory')
gsmBcV42bisOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV42bisIndex"))
if mibBuilder.loadTexts: gsmBcV42bisOperEntry.setStatus('mandatory')
gsmBcV42bisProtocolModeEncoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("compressed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisProtocolModeEncoder.setStatus('mandatory')
gsmBcV42bisProtocolModeDecoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transparent", 0), ("compressed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisProtocolModeDecoder.setStatus('mandatory')
gsmBcV42bisCompressionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("encode", 1), ("decode", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisCompressionDirection.setStatus('mandatory')
gsmBcV42bisMaximumCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisMaximumCodewords.setStatus('mandatory')
gsmBcV42bisMaximumStringSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisMaximumStringSize.setStatus('mandatory')
gsmBcV42bisLastDecodeError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("badStepup", 1), ("codewordEqC1", 2), ("emptyCodeword", 3), ("reservedCommand", 4), ("generalError", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisLastDecodeError.setStatus('mandatory')
gsmBcV42bisCompRatioEncoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 7), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisCompRatioEncoder.setStatus('mandatory')
gsmBcV42bisCompRatioDecoder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 10, 1, 8), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisCompRatioDecoder.setStatus('mandatory')
gsmBcV42bisStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11), )
if mibBuilder.loadTexts: gsmBcV42bisStatsTable.setStatus('mandatory')
gsmBcV42bisStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcV42bisIndex"))
if mibBuilder.loadTexts: gsmBcV42bisStatsEntry.setStatus('mandatory')
gsmBcV42bisModeChangesEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisModeChangesEncode.setStatus('mandatory')
gsmBcV42bisModeChangesDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisModeChangesDecode.setStatus('mandatory')
gsmBcV42bisResetsEncode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisResetsEncode.setStatus('mandatory')
gsmBcV42bisResetsDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisResetsDecode.setStatus('mandatory')
gsmBcV42bisReInitializations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisReInitializations.setStatus('mandatory')
gsmBcV42bisErrorsInDecode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 9, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcV42bisErrorsInDecode.setStatus('mandatory')
gsmBcL2RCop = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10))
gsmBcL2RCopRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 1), )
if mibBuilder.loadTexts: gsmBcL2RCopRowStatusTable.setStatus('mandatory')
gsmBcL2RCopRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcL2RCopIndex"))
if mibBuilder.loadTexts: gsmBcL2RCopRowStatusEntry.setStatus('mandatory')
gsmBcL2RCopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopRowStatus.setStatus('mandatory')
gsmBcL2RCopComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopComponentName.setStatus('mandatory')
gsmBcL2RCopStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopStorageType.setStatus('mandatory')
gsmBcL2RCopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcL2RCopIndex.setStatus('mandatory')
gsmBcL2RCopOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 10), )
if mibBuilder.loadTexts: gsmBcL2RCopOperTable.setStatus('mandatory')
gsmBcL2RCopOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcL2RCopIndex"))
if mibBuilder.loadTexts: gsmBcL2RCopOperEntry.setStatus('mandatory')
gsmBcL2RCopFlowControlStateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopFlowControlStateTx.setStatus('mandatory')
gsmBcL2RCopFlowControlStateRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopFlowControlStateRx.setStatus('mandatory')
gsmBcL2RCopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 11), )
if mibBuilder.loadTexts: gsmBcL2RCopStatsTable.setStatus('mandatory')
gsmBcL2RCopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcL2RCopIndex"))
if mibBuilder.loadTexts: gsmBcL2RCopStatsEntry.setStatus('mandatory')
gsmBcL2RCopBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopBytesTx.setStatus('mandatory')
gsmBcL2RCopBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopBytesRx.setStatus('mandatory')
gsmBcL2RCopBreakCountRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopBreakCountRx.setStatus('mandatory')
gsmBcL2RCopBreakCountTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 10, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcL2RCopBreakCountTx.setStatus('mandatory')
gsmBcUpperRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11))
gsmBcUpperRelayRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 1), )
if mibBuilder.loadTexts: gsmBcUpperRelayRowStatusTable.setStatus('mandatory')
gsmBcUpperRelayRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcUpperRelayIndex"))
if mibBuilder.loadTexts: gsmBcUpperRelayRowStatusEntry.setStatus('mandatory')
gsmBcUpperRelayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayRowStatus.setStatus('mandatory')
gsmBcUpperRelayComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayComponentName.setStatus('mandatory')
gsmBcUpperRelayStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayStorageType.setStatus('mandatory')
gsmBcUpperRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: gsmBcUpperRelayIndex.setStatus('mandatory')
gsmBcUpperRelayOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 10), )
if mibBuilder.loadTexts: gsmBcUpperRelayOperTable.setStatus('mandatory')
gsmBcUpperRelayOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcUpperRelayIndex"))
if mibBuilder.loadTexts: gsmBcUpperRelayOperEntry.setStatus('mandatory')
gsmBcUpperRelayBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayBufferSize.setStatus('mandatory')
gsmBcUpperRelayFlowControlStateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayFlowControlStateTx.setStatus('mandatory')
gsmBcUpperRelayFlowControlStateRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayFlowControlStateRx.setStatus('mandatory')
gsmBcUpperRelayStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 11), )
if mibBuilder.loadTexts: gsmBcUpperRelayStatsTable.setStatus('mandatory')
gsmBcUpperRelayStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcTrunkGrpIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcCicIndex"), (0, "Nortel-Magellan-Passport-GsmIwfMIB", "gsmBcUpperRelayIndex"))
if mibBuilder.loadTexts: gsmBcUpperRelayStatsEntry.setStatus('mandatory')
gsmBcUpperRelayFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayFramesTx.setStatus('mandatory')
gsmBcUpperRelayFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayFramesRx.setStatus('mandatory')
gsmBcUpperRelayUnacknowledgedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 128, 11, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gsmBcUpperRelayUnacknowledgedFrames.setStatus('mandatory')
gsmIwfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 1))
gsmIwfGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 1, 5))
gsmIwfGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 1, 5, 2))
gsmIwfGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 1, 5, 2, 2))
gsmIwfCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 3))
gsmIwfCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 3, 5))
gsmIwfCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 3, 5, 2))
gsmIwfCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 129, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-GsmIwfMIB", gsmBcL2RCopComponentName=gsmBcL2RCopComponentName, gsmBcModemAlgorithmInUse=gsmBcModemAlgorithmInUse, gsmBcV42bisIndex=gsmBcV42bisIndex, gsmIwfMIB=gsmIwfMIB, gsmBcRlpCrcErrorsRx=gsmBcRlpCrcErrorsRx, gsmBcLayer1UnderRunsTx=gsmBcLayer1UnderRunsTx, gsmCsFaxProvTable=gsmCsFaxProvTable, gsmBcLayer1LrcErrorsTx=gsmBcLayer1LrcErrorsTx, gsmBcFramerStorageType=gsmBcFramerStorageType, gsmBcV110OverRunsRx=gsmBcV110OverRunsRx, gsmCsProvEntry=gsmCsProvEntry, gsmBcLayer1RowStatusTable=gsmBcLayer1RowStatusTable, gsmBcFaxOperTable=gsmBcFaxOperTable, gsmBcV110ComponentName=gsmBcV110ComponentName, gsmBcMateBearerChannel=gsmBcMateBearerChannel, gsmBcV42bisStatsEntry=gsmBcV42bisStatsEntry, gsmBcLayer1=gsmBcLayer1, gsmCsRlpProvEntry=gsmCsRlpProvEntry, gsmBcRlpRemoteBusyIndications=gsmBcRlpRemoteBusyIndications, gsmBcFramerCrcErrors=gsmBcFramerCrcErrors, gsmBcV110NonOctetErrorsRx=gsmBcV110NonOctetErrorsRx, gsmCsRlpRowStatus=gsmCsRlpRowStatus, gsmBcCustomerIdentifier=gsmBcCustomerIdentifier, gsmBcV42bisOperTable=gsmBcV42bisOperTable, gsmCsV42bisMaximumCodewords=gsmCsV42bisMaximumCodewords, gsmBcFaxPagesRxFromMobile=gsmBcFaxPagesRxFromMobile, gsmBcFramerFramingType=gsmBcFramerFramingType, gsmCsLpAssignedCapacity=gsmCsLpAssignedCapacity, gsmCsV42T403IdleProbeTimer=gsmCsV42T403IdleProbeTimer, gsmCsModemComponentName=gsmCsModemComponentName, gsmBcModemStorageType=gsmBcModemStorageType, gsmCsV42RowStatus=gsmCsV42RowStatus, gsmBcV110FramesDiscarded=gsmBcV110FramesDiscarded, gsmCsRlpMsToIwfWindowSize=gsmCsRlpMsToIwfWindowSize, gsmBcOperEntry=gsmBcOperEntry, gsmCsModemIndex=gsmCsModemIndex, gsmCsV42bisComponentName=gsmCsV42bisComponentName, gsmBcAdminState=gsmBcAdminState, gsmBcV110StorageType=gsmBcV110StorageType, gsmBcV110OperEntry=gsmBcV110OperEntry, gsmCsV42ComponentName=gsmCsV42ComponentName, gsmIwfCapabilitiesBE01A=gsmIwfCapabilitiesBE01A, gsmBcModemRate=gsmBcModemRate, gsmBcFaxBcsFramesRx=gsmBcFaxBcsFramesRx, gsmBcOperTable=gsmBcOperTable, gsmBcFramerStatsEntry=gsmBcFramerStatsEntry, gsmBcV110=gsmBcV110, gsmBcRlpRowStatusEntry=gsmBcRlpRowStatusEntry, gsmBcL2RCopStatsEntry=gsmBcL2RCopStatsEntry, gsmBcV42bisLastDecodeError=gsmBcV42bisLastDecodeError, gsmBcCicIndex=gsmBcCicIndex, gsmBcUpperRelayFramesTx=gsmBcUpperRelayFramesTx, gsmBcFaxMessageRate=gsmBcFaxMessageRate, gsmCsV42N400RetransLimit=gsmCsV42N400RetransLimit, gsmCsCallsActivated=gsmCsCallsActivated, gsmCs=gsmCs, gsmBcV110FramesTx=gsmBcV110FramesTx, gsmCsAdminState=gsmCsAdminState, gsmCsRlpRowStatusTable=gsmCsRlpRowStatusTable, gsmBcFramerStateTable=gsmBcFramerStateTable, gsmBcLayer1IntermediateRate=gsmBcLayer1IntermediateRate, gsmBcV42bisCompRatioEncoder=gsmBcV42bisCompRatioEncoder, gsmBcV42Index=gsmBcV42Index, gsmBcModemOperTable=gsmBcModemOperTable, gsmBcV42bisRowStatusTable=gsmBcV42bisRowStatusTable, gsmCsStatsTable=gsmCsStatsTable, gsmBcV42bisMaximumCodewords=gsmBcV42bisMaximumCodewords, gsmBcRlpOperEntry=gsmBcRlpOperEntry, gsmBcV110OperTable=gsmBcV110OperTable, gsmBcV42RowStatus=gsmBcV42RowStatus, gsmBcModemToUpperFlowControlActive=gsmBcModemToUpperFlowControlActive, gsmBcModemTraining=gsmBcModemTraining, gsmCsStateTable=gsmCsStateTable, gsmBcV42OperEntry=gsmBcV42OperEntry, gsmBcFaxPagesTxToMobile=gsmBcFaxPagesTxToMobile, gsmBcFramerUnderruns=gsmBcFramerUnderruns, gsmBcFaxBcsFramesTx=gsmBcFaxBcsFramesTx, gsmBcUpperRelayComponentName=gsmBcUpperRelayComponentName, gsmCsUsageState=gsmCsUsageState, gsmCsModem=gsmCsModem, gsmCsV42ProvTable=gsmCsV42ProvTable, gsmBcV42bisOperEntry=gsmBcV42bisOperEntry, gsmBcMipState=gsmBcMipState, gsmBcV110RowStatus=gsmBcV110RowStatus, gsmCsV42StorageType=gsmCsV42StorageType, gsmCsRlpHighestVersion=gsmCsRlpHighestVersion, gsmBcV42bisModeChangesDecode=gsmBcV42bisModeChangesDecode, gsmCsStateEntry=gsmCsStateEntry, gsmCsCallsReleasedNormal=gsmCsCallsReleasedNormal, gsmBcModemComponentName=gsmBcModemComponentName, gsmBcL2RCopBytesRx=gsmBcL2RCopBytesRx, gsmCsCallsSetup=gsmCsCallsSetup, gsmBcFramerIndex=gsmBcFramerIndex, gsmBcV110StatsEntry=gsmBcV110StatsEntry, gsmBcFaxStorageType=gsmBcFaxStorageType, gsmBcRlp=gsmBcRlp, gsmBcV110LargeFrameErrorsRx=gsmBcV110LargeFrameErrorsRx, gsmBcFaxRowStatusEntry=gsmBcFaxRowStatusEntry, gsmBcModemRowStatus=gsmBcModemRowStatus, gsmBcV42ComponentName=gsmBcV42ComponentName, gsmBcRlpLocalBusyIndications=gsmBcRlpLocalBusyIndications, gsmBcUpperRelayRowStatusEntry=gsmBcUpperRelayRowStatusEntry, gsmBcUpperRelayBufferSize=gsmBcUpperRelayBufferSize, gsmCsRlpIwfToMsWindowSize=gsmCsRlpIwfToMsWindowSize, gsmCsV42=gsmCsV42, gsmCsV42bis=gsmCsV42bis, gsmBcRlpFrameSize=gsmBcRlpFrameSize, gsmBcLayer1FramesDiscarded=gsmBcLayer1FramesDiscarded, gsmBcRlpOperTable=gsmBcRlpOperTable, gsmBcV42BadFramesRx=gsmBcV42BadFramesRx, gsmCsModemStorageType=gsmCsModemStorageType, gsmCsV42bisRowStatusEntry=gsmCsV42bisRowStatusEntry, gsmBcFramerLrcErrors=gsmBcFramerLrcErrors, gsmBcL2RCopRowStatusTable=gsmBcL2RCopRowStatusTable, gsmBcV42bisCompRatioDecoder=gsmBcV42bisCompRatioDecoder, gsmBcV42=gsmBcV42, gsmCsRowStatusTable=gsmCsRowStatusTable, gsmBcLayer1NonOctetErrorsRx=gsmBcLayer1NonOctetErrorsRx, gsmBcUpperRelayRowStatus=gsmBcUpperRelayRowStatus, gsmCsV42RowStatusTable=gsmCsV42RowStatusTable, gsmBcV42RowStatusTable=gsmBcV42RowStatusTable, gsmCsErroredMipFrames=gsmCsErroredMipFrames, gsmCsFaxRowStatusEntry=gsmCsFaxRowStatusEntry, gsmBcLayer1LargeFrameErrorsRx=gsmBcLayer1LargeFrameErrorsRx, gsmBcModemToDspFlowControlActive=gsmBcModemToDspFlowControlActive, gsmBcV42bisStorageType=gsmBcV42bisStorageType, gsmBcLayer1RowStatusEntry=gsmBcLayer1RowStatusEntry, gsmBcLayer1ActiveMode=gsmBcLayer1ActiveMode, gsmBcRlpIFramesTx=gsmBcRlpIFramesTx, gsmBcModemOutbandFlowControl=gsmBcModemOutbandFlowControl, gsmCsLpConfiguredBearerChannels=gsmCsLpConfiguredBearerChannels, gsmBcRlpRowStatusTable=gsmBcRlpRowStatusTable, gsmBcStateTable=gsmBcStateTable, gsmBcV42StatsEntry=gsmBcV42StatsEntry, gsmCsLpRowStatusTable=gsmCsLpRowStatusTable, gsmBcV42T1AckTimeouts=gsmBcV42T1AckTimeouts, gsmBcL2RCopStorageType=gsmBcL2RCopStorageType, gsmBcRlpHighestVersion=gsmBcRlpHighestVersion, gsmBcFaxRowStatusTable=gsmBcFaxRowStatusTable, gsmBcModemAsyncMode=gsmBcModemAsyncMode, gsmBcFaxProtocolState=gsmBcFaxProtocolState, gsmCsFax=gsmCsFax, gsmCsStatusMessagesRx=gsmCsStatusMessagesRx, gsmBcLayer1Index=gsmBcLayer1Index, gsmCsCidDataEntry=gsmCsCidDataEntry, gsmBcL2RCopRowStatus=gsmBcL2RCopRowStatus, gsmBcL2RCopRowStatusEntry=gsmBcL2RCopRowStatusEntry, gsmBcFax=gsmBcFax, gsmBcV42IFramesTx=gsmBcV42IFramesTx, gsmCsRlpIndex=gsmCsRlpIndex, gsmBcUpperRelayOperTable=gsmBcUpperRelayOperTable, gsmBcV42StatsTable=gsmBcV42StatsTable, gsmBcRlpOutOfSequenceFrames=gsmBcRlpOutOfSequenceFrames, gsmBcRlpStatsEntry=gsmBcRlpStatsEntry, gsmBcModem=gsmBcModem, gsmBcComponentName=gsmBcComponentName, gsmBcRlpIFramesRx=gsmBcRlpIFramesRx, gsmBcFramerNonOctetErrors=gsmBcFramerNonOctetErrors, gsmCsLp=gsmCsLp, gsmCsFaxRowStatusTable=gsmCsFaxRowStatusTable, gsmBcUsageState=gsmBcUsageState, gsmBcFramerOperationalState=gsmBcFramerOperationalState, gsmBcRlpFramesRetransmitted=gsmBcRlpFramesRetransmitted, gsmCsCustomerIdentifier=gsmCsCustomerIdentifier, gsmBcCallType=gsmBcCallType, gsmIwfCapabilitiesBE=gsmIwfCapabilitiesBE, gsmBcTrunkGrpIndex=gsmBcTrunkGrpIndex, gsmBcV110StatsTable=gsmBcV110StatsTable, gsmCsRlpComponentName=gsmCsRlpComponentName, gsmBcRowStatus=gsmBcRowStatus, gsmCsV42bisProvEntry=gsmCsV42bisProvEntry, gsmBcUpperRelayStorageType=gsmBcUpperRelayStorageType, gsmCsFaxProvEntry=gsmCsFaxProvEntry, gsmBcRlpComponentName=gsmBcRlpComponentName, gsmCsV42T401AckTimer=gsmCsV42T401AckTimer, gsmCsLpStorageType=gsmCsLpStorageType, gsmCsVoiceLaw=gsmCsVoiceLaw, gsmBcFramerComponentName=gsmBcFramerComponentName, gsmBcFaxMessageFramesTx=gsmBcFaxMessageFramesTx, gsmIwfGroupBE01A=gsmIwfGroupBE01A, gsmBcFaxChannelModeModify=gsmBcFaxChannelModeModify, gsmBcUpperRelayOperEntry=gsmBcUpperRelayOperEntry, gsmBcModemAutobaud=gsmBcModemAutobaud, gsmCsV42bisRowStatusTable=gsmCsV42bisRowStatusTable, gsmBcV42bisProtocolModeDecoder=gsmBcV42bisProtocolModeDecoder, gsmBcL2RCopStatsTable=gsmBcL2RCopStatsTable, gsmBcRlpMsToIwfWindowSize=gsmBcRlpMsToIwfWindowSize, gsmBcV42bisStatsTable=gsmBcV42bisStatsTable, gsmBcFramerRowStatusEntry=gsmBcFramerRowStatusEntry, gsmBcV110RowStatusEntry=gsmBcV110RowStatusEntry, gsmBcV42bisComponentName=gsmBcV42bisComponentName, gsmBcV42ProtocolState=gsmBcV42ProtocolState, gsmBcLayer1ComponentName=gsmBcLayer1ComponentName, gsmBcLayer1OperEntry=gsmBcLayer1OperEntry, gsmBcConnectionType=gsmBcConnectionType, gsmCsCommentText=gsmCsCommentText, gsmIwfGroupBE=gsmIwfGroupBE, gsmBcV42IBytesTx=gsmBcV42IBytesTx, gsmBcFramerFrmToIf=gsmBcFramerFrmToIf, gsmBcLayer1BytesTx=gsmBcLayer1BytesTx, gsmCsModemRowStatusEntry=gsmCsModemRowStatusEntry, gsmBcV42IBytesRx=gsmBcV42IBytesRx, gsmCsV42T400DetectTimer=gsmCsV42T400DetectTimer, gsmBcRlpT2AckDelayTimer=gsmBcRlpT2AckDelayTimer, gsmBcFaxStatsEntry=gsmBcFaxStatsEntry, gsmBcRlpProtocolState=gsmBcRlpProtocolState, gsmCsStatsEntry=gsmCsStatsEntry, gsmBcModemIndex=gsmBcModemIndex, gsmBcFramerProvTable=gsmBcFramerProvTable, gsmBcFramerUsageState=gsmBcFramerUsageState, gsmCsV42bisRowStatus=gsmCsV42bisRowStatus, gsmCsV42bisProvTable=gsmCsV42bisProvTable, gsmCsCallsRequested=gsmCsCallsRequested, gsmBcL2RCopBreakCountRx=gsmBcL2RCopBreakCountRx, gsmBcFramerStatsTable=gsmBcFramerStatsTable, gsmCsFaxRowStatus=gsmCsFaxRowStatus, gsmBcRlpIwfToMsWindowSize=gsmBcRlpIwfToMsWindowSize, gsmBcParity=gsmBcParity, gsmCsV42TxKwindowSize=gsmCsV42TxKwindowSize, gsmBcFramerRowStatus=gsmBcFramerRowStatus, gsmCsTrunkGrpIndex=gsmCsTrunkGrpIndex, gsmCsRowStatus=gsmCsRowStatus, gsmCsCidDataTable=gsmCsCidDataTable, gsmBcV42bisResetsEncode=gsmBcV42bisResetsEncode, gsmBcRlpStatsTable=gsmBcRlpStatsTable, gsmCsLpRowStatusEntry=gsmCsLpRowStatusEntry, gsmBc=gsmBc, gsmBcV110IntermediateRate=gsmBcV110IntermediateRate, gsmBcV42RowStatusEntry=gsmBcV42RowStatusEntry, gsmBcModemReceiverTransmitter=gsmBcModemReceiverTransmitter, gsmBcModemOperEntry=gsmBcModemOperEntry, gsmCsComponentName=gsmCsComponentName, gsmBcFramerRowStatusTable=gsmBcFramerRowStatusTable, gsmBcLayer1StatsEntry=gsmBcLayer1StatsEntry, gsmBcLayer1FramesRx=gsmBcLayer1FramesRx, gsmCsRlpRowStatusEntry=gsmCsRlpRowStatusEntry, gsmBcUpperRelayRowStatusTable=gsmBcUpperRelayRowStatusTable, gsmBcLayer1Connection=gsmBcLayer1Connection, gsmBcOperationalState=gsmBcOperationalState, gsmBcV42bisErrorsInDecode=gsmBcV42bisErrorsInDecode, gsmCsLpOperTable=gsmCsLpOperTable, gsmCsV42bisCompressionDirection=gsmCsV42bisCompressionDirection, gsmBcFramerLinkEntry=gsmBcFramerLinkEntry, gsmBcV42bisReInitializations=gsmBcV42bisReInitializations, gsmBcLayer1OperTable=gsmBcLayer1OperTable, gsmCsLpModemsSupported=gsmCsLpModemsSupported, gsmBcModemStatsEntry=gsmBcModemStatsEntry, gsmBcV42bisRowStatusEntry=gsmBcV42bisRowStatusEntry, gsmBcV42CrcErrorsRx=gsmBcV42CrcErrorsRx, gsmCsLpRowStatus=gsmCsLpRowStatus, gsmBcStorageType=gsmBcStorageType, gsmBcModemRowStatusTable=gsmBcModemRowStatusTable, gsmBcUpperRelayStatsTable=gsmBcUpperRelayStatsTable, gsmCsFaxComponentName=gsmCsFaxComponentName)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-GsmIwfMIB", gsmBcV42RemoteBusyIndications=gsmBcV42RemoteBusyIndications, gsmBcUpperRelayFlowControlStateRx=gsmBcUpperRelayFlowControlStateRx, gsmCsOperationalState=gsmCsOperationalState, gsmBcFlowControl=gsmBcFlowControl, gsmBcUpperRelayIndex=gsmBcUpperRelayIndex, gsmBcUpperRelay=gsmBcUpperRelay, gsmIwfCapabilities=gsmIwfCapabilities, gsmBcFaxBcsFrameErrors=gsmBcFaxBcsFrameErrors, gsmBcFramerLinkTable=gsmBcFramerLinkTable, gsmCsRlpProvTable=gsmCsRlpProvTable, gsmBcLayer1OverRunsRx=gsmBcLayer1OverRunsRx, gsmBcL2RCopBytesTx=gsmBcL2RCopBytesTx, gsmBcUpperRelayFramesRx=gsmBcUpperRelayFramesRx, gsmBcFaxActiveMode=gsmBcFaxActiveMode, gsmBcV110FramesRx=gsmBcV110FramesRx, gsmBcV42RxN401FrameSize=gsmBcV42RxN401FrameSize, gsmCsStorageType=gsmCsStorageType, gsmBcV42LocalBusyIndications=gsmBcV42LocalBusyIndications, gsmBcLayer1DataRate=gsmBcLayer1DataRate, gsmBcModemFramingErrors=gsmBcModemFramingErrors, gsmBcV110BytesRx=gsmBcV110BytesRx, gsmBcRlpRowStatus=gsmBcRlpRowStatus, gsmCsModemRowStatus=gsmCsModemRowStatus, gsmBcDataBits=gsmBcDataBits, gsmBcV110LrcErrorsTx=gsmBcV110LrcErrorsTx, gsmBcV110Index=gsmBcV110Index, gsmCsV42ProvEntry=gsmCsV42ProvEntry, gsmBcRlpT1AckTimeouts=gsmBcRlpT1AckTimeouts, gsmBcV42bisMaximumStringSize=gsmBcV42bisMaximumStringSize, gsmCsLpActiveCalls=gsmCsLpActiveCalls, gsmBcRowStatusEntry=gsmBcRowStatusEntry, gsmBcFaxIndex=gsmBcFaxIndex, gsmBcUpperRelayFlowControlStateTx=gsmBcUpperRelayFlowControlStateTx, gsmBcFramerStateEntry=gsmBcFramerStateEntry, gsmBcModemAutoHdlcMode=gsmBcModemAutoHdlcMode, gsmBcFaxComponentName=gsmBcFaxComponentName, gsmCsRlpN2RetransmitCount=gsmCsRlpN2RetransmitCount, gsmBcRowStatusTable=gsmBcRowStatusTable, gsmBcUpperRelayStatsEntry=gsmBcUpperRelayStatsEntry, gsmBcL2RCopFlowControlStateTx=gsmBcL2RCopFlowControlStateTx, gsmCsChannelConfigChanges=gsmCsChannelConfigChanges, gsmBcLayer1StatsTable=gsmBcLayer1StatsTable, gsmCsRlpT1AckTimer=gsmCsRlpT1AckTimer, gsmBcRlpIFramesTxDiscarded=gsmBcRlpIFramesTxDiscarded, gsmBcV42TxKwindowSize=gsmBcV42TxKwindowSize, gsmBcFramer=gsmBcFramer, gsmBcCidDataEntry=gsmBcCidDataEntry, gsmCsRlpT2AckDelayTimer=gsmCsRlpT2AckDelayTimer, gsmBcV42bisResetsDecode=gsmBcV42bisResetsDecode, gsmBcL2RCopFlowControlStateRx=gsmBcL2RCopFlowControlStateRx, gsmBcV110UnderRunsTx=gsmBcV110UnderRunsTx, gsmBcV42RxKwindowSize=gsmBcV42RxKwindowSize, gsmIwfCapabilitiesBE01=gsmIwfCapabilitiesBE01, gsmBcV42bisProtocolModeEncoder=gsmBcV42bisProtocolModeEncoder, gsmCsVirtualRouterName=gsmCsVirtualRouterName, gsmCsProvTable=gsmCsProvTable, gsmBcL2RCopOperTable=gsmBcL2RCopOperTable, gsmCsRowStatusEntry=gsmCsRowStatusEntry, gsmBcFramerFrmFromIf=gsmBcFramerFrmFromIf, gsmCsV42TxN401FrameSize=gsmCsV42TxN401FrameSize, gsmBcV110DataRate=gsmBcV110DataRate, gsmCsMscIpAddress=gsmCsMscIpAddress, gsmBcModemProtocolState=gsmBcModemProtocolState, gsmBcFramerInterfaceName=gsmBcFramerInterfaceName, gsmBcV42OperTable=gsmBcV42OperTable, gsmBcV110RowStatusTable=gsmBcV110RowStatusTable, gsmBcV42FramesRetransmitted=gsmBcV42FramesRetransmitted, gsmCsRlp=gsmCsRlp, gsmBcV42bisCompressionDirection=gsmBcV42bisCompressionDirection, gsmBcStopBits=gsmBcStopBits, gsmCsFaxIndex=gsmCsFaxIndex, gsmCsV42T402AckDelayTimer=gsmCsV42T402AckDelayTimer, gsmCsRlpStorageType=gsmCsRlpStorageType, gsmBcLayer1StorageType=gsmBcLayer1StorageType, gsmBcRlpT1AckTimer=gsmBcRlpT1AckTimer, gsmBcFramerAdminState=gsmBcFramerAdminState, gsmCsModemRowStatusTable=gsmCsModemRowStatusTable, gsmBcFramerProvEntry=gsmBcFramerProvEntry, gsmBcLayer1FramesTx=gsmBcLayer1FramesTx, gsmBcStateEntry=gsmBcStateEntry, gsmBcFramerOctetFromIf=gsmBcFramerOctetFromIf, gsmBcV42StorageType=gsmBcV42StorageType, gsmBcL2RCopOperEntry=gsmBcL2RCopOperEntry, gsmCsV42bisMaximumStringSize=gsmCsV42bisMaximumStringSize, gsmBcRlpInvalidFrames=gsmBcRlpInvalidFrames, gsmBcFaxRowStatus=gsmBcFaxRowStatus, gsmBcFaxOperEntry=gsmBcFaxOperEntry, gsmBcV110BytesTx=gsmBcV110BytesTx, gsmCsV42Index=gsmCsV42Index, gsmBcRlpN2RetransmitCount=gsmBcRlpN2RetransmitCount, gsmCsV42bisIndex=gsmCsV42bisIndex, gsmIwfGroup=gsmIwfGroup, gsmCsChannelModeModifyRequests=gsmCsChannelModeModifyRequests, gsmBcL2RCopBreakCountTx=gsmBcL2RCopBreakCountTx, gsmBcCidDataTable=gsmBcCidDataTable, gsmCsCurrentCalls=gsmCsCurrentCalls, gsmBcV42bisRowStatus=gsmBcV42bisRowStatus, gsmCsV42bisActionOnError=gsmCsV42bisActionOnError, gsmBcV42bis=gsmBcV42bis, gsmBcMaxUserDataRate=gsmBcMaxUserDataRate, gsmIwfGroupBE01=gsmIwfGroupBE01, gsmBcModemStatsTable=gsmBcModemStatsTable, gsmCsLpComponentName=gsmCsLpComponentName, gsmBcL2RCop=gsmBcL2RCop, gsmBcModemOutbandBreak=gsmBcModemOutbandBreak, gsmBcLayer1RowStatus=gsmBcLayer1RowStatus, gsmBcFaxStatsTable=gsmBcFaxStatsTable, gsmCsFaxT1CalledToneTimer=gsmCsFaxT1CalledToneTimer, gsmCsLpIndex=gsmCsLpIndex, gsmBcModemBytesRx=gsmBcModemBytesRx, gsmBcModemBytesTx=gsmBcModemBytesTx, gsmBcL2RCopIndex=gsmBcL2RCopIndex, gsmCsCallsReleasedAbnormal=gsmCsCallsReleasedAbnormal, gsmBcFaxMessageFramesRx=gsmBcFaxMessageFramesRx, gsmBcUpperRelayUnacknowledgedFrames=gsmBcUpperRelayUnacknowledgedFrames, gsmCsV42RxN401FrameSize=gsmCsV42RxN401FrameSize, gsmBcFramerOverruns=gsmBcFramerOverruns, gsmBcLayer1BytesRx=gsmBcLayer1BytesRx, gsmBcModemRowStatusEntry=gsmBcModemRowStatusEntry, gsmBcLastResponseCode=gsmBcLastResponseCode, gsmCsV42RowStatusEntry=gsmCsV42RowStatusEntry, gsmBcRlpIndex=gsmBcRlpIndex, gsmBcV42bisModeChangesEncode=gsmBcV42bisModeChangesEncode, gsmCsV42RxKwindowSize=gsmCsV42RxKwindowSize, gsmCsV42bisStorageType=gsmCsV42bisStorageType, gsmCsFaxStorageType=gsmCsFaxStorageType, gsmBcV42IFramesRx=gsmBcV42IFramesRx, gsmCsLpOperEntry=gsmCsLpOperEntry, gsmBcRlpStorageType=gsmBcRlpStorageType, gsmBcV42TxN401FrameSize=gsmBcV42TxN401FrameSize, gsmBcRlpResetsRx=gsmBcRlpResetsRx)
