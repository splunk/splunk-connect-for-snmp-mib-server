#
# PySNMP MIB module NSCHippiSonet-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NSCHippiSonet-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:15:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
nscHippiSonet, = mibBuilder.importSymbols("NSC-MIB", "nscHippiSonet")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, NotificationType, ModuleIdentity, Unsigned32, Counter64, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, Gauge32, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "NotificationType", "ModuleIdentity", "Unsigned32", "Counter64", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "Gauge32", "MibIdentifier", "Counter32")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
nscHippiSonetEngineStatus = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetEngineStatus.setStatus('mandatory')
nscHippiSonetRegisters = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2))
nscHippiSonetMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3))
nscHippiSonetAtoD = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 4))
nscHippiSonetSourceIField = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetSourceIField.setStatus('mandatory')
nscHippiSonetProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6))
nscHippiSonetUnframer = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 1))
nscHippiSonetUnframerStatus = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetUnframerStatus.setStatus('mandatory')
nscHippiSonetUnframerOHdma = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetUnframerOHdma.setStatus('mandatory')
nscHippiSonetFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 2))
nscHippiSonetFramerStatus = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetFramerStatus.setStatus('mandatory')
nscHippiSonetFramerAdaptID = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetFramerAdaptID.setStatus('mandatory')
nscHippiSonetFramerInput = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetFramerInput.setStatus('mandatory')
nscHippiSonetFramerData = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetFramerData.setStatus('mandatory')
nscHippiSonetFramerIField = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetFramerIField.setStatus('mandatory')
nscHippiSonetMegaFifo = MibIdentifier((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 3))
nscHippiSonetMFcontrol = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMFcontrol.setStatus('mandatory')
nscHippiSonetMFstatus = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMFstatus.setStatus('mandatory')
nscHippiSonetMFtimeout = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMFtimeout.setStatus('mandatory')
nscHippiSonetMFConnectStatus = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 2, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMFConnectStatus.setStatus('mandatory')
nscHippiSonetMonClock = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonClock.setStatus('mandatory')
nscHippiSonetMonMFFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonMFFlowControl.setStatus('mandatory')
nscHippiSonetMonDLFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDLFlowControl.setStatus('mandatory')
nscHippiSonetMonBIPErrors = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonBIPErrors.setStatus('mandatory')
nscHippiSonetMonSrcBusy = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcBusy.setStatus('mandatory')
nscHippiSonetMonSrcSOC = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcSOC.setStatus('mandatory')
nscHippiSonetMonSrcEOC = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcEOC.setStatus('mandatory')
nscHippiSonetMonDstConnectDuration = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstConnectDuration.setStatus('mandatory')
nscHippiSonetMonSrcConnectDuration = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcConnectDuration.setStatus('mandatory')
nscHippiSonetMonDstConnectReject = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstConnectReject.setStatus('mandatory')
nscHippiSonetMonSrcConnectFail = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcConnectFail.setStatus('mandatory')
nscHippiSonetMonLOF = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonLOF.setStatus('mandatory')
nscHippiSonetMonLOS = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonLOS.setStatus('mandatory')
nscHippiSonetMonDstBursts = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstBursts.setStatus('mandatory')
nscHippiSonetMonDstPackets = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstPackets.setStatus('mandatory')
nscHippiSonetMonDstSync = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstSync.setStatus('mandatory')
nscHippiSonetMonDstLLRC = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstLLRC.setStatus('mandatory')
nscHippiSonetMonDstPE = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstPE.setStatus('mandatory')
nscHippiSonetMonDstConnect = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstConnect.setStatus('mandatory')
nscHippiSonetMonSrcConnect = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcConnect.setStatus('mandatory')
nscHippiSonetMonSrcPackets = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcPackets.setStatus('mandatory')
nscHippiSonetMonSrcBursts = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcBursts.setStatus('mandatory')
nscHippiSonetMonSrcForceErrors = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcForceErrors.setStatus('mandatory')
nscHippiSonetMonSrcCRC = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcCRC.setStatus('mandatory')
nscHippiSonetMonDstWords = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonDstWords.setStatus('mandatory')
nscHippiSonetMonSrcWords = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetMonSrcWords.setStatus('mandatory')
nscHippiSonetADRecvOpticalPower = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetADRecvOpticalPower.setStatus('mandatory')
nscHippiSonetADLaserBias = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetADLaserBias.setStatus('mandatory')
nscHippiSonetADLaserBackface = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetADLaserBackface.setStatus('mandatory')
nscHippiSonetADInternalTemp = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetADInternalTemp.setStatus('mandatory')
nscHippiSonetADExhaustTemp = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetADExhaustTemp.setStatus('mandatory')
nscHippiSonetOpticalRcvOffset = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetOpticalRcvOffset.setStatus('mandatory')
nscHippiSonetOpticalRcvSlope = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetOpticalRcvSlope.setStatus('mandatory')
nscHippiSonetBiasCurrent = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetBiasCurrent.setStatus('mandatory')
nscHippiSonetBiasTemp = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetBiasTemp.setStatus('mandatory')
nscHippiSonetBackfaceVoltage = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nscHippiSonetBackfaceVoltage.setStatus('mandatory')
nscHippiSonetIField = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nscHippiSonetIField.setStatus('mandatory')
nscHippiSonetBootPort = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nscHippiSonetBootPort.setStatus('mandatory')
nscHippiSonetPortSpeed = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nscHippiSonetPortSpeed.setStatus('mandatory')
nscHippiSonetThreshold = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nscHippiSonetThreshold.setStatus('mandatory')
nscHippiTimeout = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nscHippiTimeout.setStatus('mandatory')
nscHippiSonetDipSwitch = MibScalar((1, 3, 6, 1, 4, 1, 10, 2, 1, 5, 6, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nscHippiSonetDipSwitch.setStatus('mandatory')
mibBuilder.exportSymbols("NSCHippiSonet-MIB", nscHippiSonetMonDstLLRC=nscHippiSonetMonDstLLRC, nscHippiSonetMonSrcEOC=nscHippiSonetMonSrcEOC, nscHippiSonetMonDstConnectDuration=nscHippiSonetMonDstConnectDuration, nscHippiSonetMonSrcWords=nscHippiSonetMonSrcWords, nscHippiSonetMonLOS=nscHippiSonetMonLOS, nscHippiSonetRegisters=nscHippiSonetRegisters, nscHippiSonetEngineStatus=nscHippiSonetEngineStatus, nscHippiSonetOpticalRcvOffset=nscHippiSonetOpticalRcvOffset, nscHippiSonetBackfaceVoltage=nscHippiSonetBackfaceVoltage, nscHippiSonetOpticalRcvSlope=nscHippiSonetOpticalRcvSlope, nscHippiSonetMFtimeout=nscHippiSonetMFtimeout, nscHippiSonetBiasTemp=nscHippiSonetBiasTemp, nscHippiSonetMFcontrol=nscHippiSonetMFcontrol, nscHippiSonetMonDstSync=nscHippiSonetMonDstSync, nscHippiSonetMonSrcBursts=nscHippiSonetMonSrcBursts, nscHippiSonetMonDLFlowControl=nscHippiSonetMonDLFlowControl, nscHippiSonetMonDstConnect=nscHippiSonetMonDstConnect, nscHippiSonetFramerAdaptID=nscHippiSonetFramerAdaptID, nscHippiSonetMFstatus=nscHippiSonetMFstatus, nscHippiSonetMegaFifo=nscHippiSonetMegaFifo, nscHippiSonetSourceIField=nscHippiSonetSourceIField, nscHippiSonetIField=nscHippiSonetIField, nscHippiSonetMonDstConnectReject=nscHippiSonetMonDstConnectReject, nscHippiSonetMonClock=nscHippiSonetMonClock, nscHippiSonetFramerInput=nscHippiSonetFramerInput, nscHippiSonetFramerData=nscHippiSonetFramerData, nscHippiSonetADLaserBias=nscHippiSonetADLaserBias, nscHippiSonetFramerStatus=nscHippiSonetFramerStatus, nscHippiSonetMonMFFlowControl=nscHippiSonetMonMFFlowControl, nscHippiSonetMonSrcSOC=nscHippiSonetMonSrcSOC, nscHippiSonetMonSrcForceErrors=nscHippiSonetMonSrcForceErrors, nscHippiSonetADLaserBackface=nscHippiSonetADLaserBackface, nscHippiSonetMonDstBursts=nscHippiSonetMonDstBursts, nscHippiSonetBiasCurrent=nscHippiSonetBiasCurrent, nscHippiSonetDipSwitch=nscHippiSonetDipSwitch, nscHippiSonetMonDstPackets=nscHippiSonetMonDstPackets, nscHippiSonetMonSrcConnect=nscHippiSonetMonSrcConnect, nscHippiSonetMonSrcConnectDuration=nscHippiSonetMonSrcConnectDuration, nscHippiSonetMonLOF=nscHippiSonetMonLOF, nscHippiSonetProfile=nscHippiSonetProfile, nscHippiSonetBootPort=nscHippiSonetBootPort, nscHippiSonetAtoD=nscHippiSonetAtoD, nscHippiSonetFramer=nscHippiSonetFramer, nscHippiSonetADInternalTemp=nscHippiSonetADInternalTemp, nscHippiSonetFramerIField=nscHippiSonetFramerIField, nscHippiSonetPortSpeed=nscHippiSonetPortSpeed, nscHippiSonetMonBIPErrors=nscHippiSonetMonBIPErrors, nscHippiSonetMFConnectStatus=nscHippiSonetMFConnectStatus, nscHippiSonetUnframerStatus=nscHippiSonetUnframerStatus, nscHippiSonetUnframer=nscHippiSonetUnframer, nscHippiSonetMonDstPE=nscHippiSonetMonDstPE, nscHippiSonetThreshold=nscHippiSonetThreshold, nscHippiSonetMonSrcCRC=nscHippiSonetMonSrcCRC, nscHippiSonetMonDstWords=nscHippiSonetMonDstWords, nscHippiSonetADExhaustTemp=nscHippiSonetADExhaustTemp, nscHippiSonetMonSrcPackets=nscHippiSonetMonSrcPackets, nscHippiSonetMonSrcBusy=nscHippiSonetMonSrcBusy, nscHippiSonetADRecvOpticalPower=nscHippiSonetADRecvOpticalPower, nscHippiTimeout=nscHippiTimeout, nscHippiSonetMonitor=nscHippiSonetMonitor, nscHippiSonetUnframerOHdma=nscHippiSonetUnframerOHdma, nscHippiSonetMonSrcConnectFail=nscHippiSonetMonSrcConnectFail)
