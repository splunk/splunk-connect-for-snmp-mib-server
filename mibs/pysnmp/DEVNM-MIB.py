#
# PySNMP MIB module DEVNM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEVNM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
device, = mibBuilder.importSymbols("ANIROOT-MIB", "device")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, IpAddress, Bits, Gauge32, NotificationType, Counter64, Counter32, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "IpAddress", "Bits", "Gauge32", "NotificationType", "Counter64", "Counter32", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aniDevNetworkManager = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 2, 7))
if mibBuilder.loadTexts: aniDevNetworkManager.setLastUpdated('0105091130Z')
if mibBuilder.loadTexts: aniDevNetworkManager.setOrganization('Aperto Networks')
aniDevNumManagingHosts = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevNumManagingHosts.setStatus('current')
aniDevNetworkMgrAccessTable = MibTable((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2), )
if mibBuilder.loadTexts: aniDevNetworkMgrAccessTable.setStatus('current')
aniDevNetworkMgrAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2, 1), ).setIndexNames((0, "DEVNM-MIB", "aniDevNMAccessIndex"))
if mibBuilder.loadTexts: aniDevNetworkMgrAccessEntry.setStatus('current')
aniDevNMAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: aniDevNMAccessIndex.setStatus('current')
aniDevNMAccessIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevNMAccessIp.setStatus('current')
aniDevNMReadAccessCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevNMReadAccessCommunity.setStatus('current')
aniDevNMWriteAccessCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevNMWriteAccessCommunity.setStatus('current')
aniDevNMAccessControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 2, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("read", 1), ("readWrite", 2), ("roWithTraps", 3), ("rwWithTraps", 4), ("trapsOnly", 5))).clone('readWrite')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aniDevNMAccessControl.setStatus('current')
mibBuilder.exportSymbols("DEVNM-MIB", aniDevNumManagingHosts=aniDevNumManagingHosts, aniDevNMAccessIp=aniDevNMAccessIp, aniDevNMReadAccessCommunity=aniDevNMReadAccessCommunity, aniDevNetworkMgrAccessEntry=aniDevNetworkMgrAccessEntry, aniDevNetworkMgrAccessTable=aniDevNetworkMgrAccessTable, aniDevNMAccessControl=aniDevNMAccessControl, aniDevNMAccessIndex=aniDevNMAccessIndex, aniDevNetworkManager=aniDevNetworkManager, aniDevNMWriteAccessCommunity=aniDevNMWriteAccessCommunity, PYSNMP_MODULE_ID=aniDevNetworkManager)
