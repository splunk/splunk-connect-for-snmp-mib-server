#
# PySNMP MIB module MSRIPSAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSRIPSAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
software, microsoft = mibBuilder.importSymbols("MSFT-MIB", "software", "microsoft")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, NotificationType, TimeTicks, NotificationType, Bits, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, enterprises, Unsigned32, iso, Counter32, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "TimeTicks", "NotificationType", "Bits", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "enterprises", "Unsigned32", "iso", "Counter32", "Counter64", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ripsap = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 9))
ripsapBase = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 9, 1))
ripsapInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 9, 2))
ripsapBaseRipOperState = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapBaseRipOperState.setStatus('mandatory')
ripsapBaseSapOperState = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapBaseSapOperState.setStatus('mandatory')
ripIfTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1), )
if mibBuilder.loadTexts: ripIfTable.setStatus('mandatory')
ripIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1), ).setIndexNames((0, "MSRIPSAP-MIB", "ripIfIndex"))
if mibBuilder.loadTexts: ripIfEntry.setStatus('mandatory')
ripIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIfIndex.setStatus('mandatory')
ripIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIfAdminState.setStatus('mandatory')
ripIfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("sleeping", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIfOperState.setStatus('mandatory')
ripIfUpdateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("standard", 1), ("none", 2), ("autostatic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIfUpdateMode.setStatus('mandatory')
ripIfUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIfUpdateInterval.setStatus('mandatory')
ripIfAgeMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIfAgeMultiplier.setStatus('mandatory')
ripIfSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIfSupply.setStatus('mandatory')
ripIfListen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ripIfListen.setStatus('mandatory')
ripIfOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIfOutPackets.setStatus('mandatory')
ripIfInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripIfInPackets.setStatus('mandatory')
sapIfTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2), )
if mibBuilder.loadTexts: sapIfTable.setStatus('mandatory')
sapIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1), ).setIndexNames((0, "MSRIPSAP-MIB", "sapIfIndex"))
if mibBuilder.loadTexts: sapIfEntry.setStatus('mandatory')
sapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapIfIndex.setStatus('mandatory')
sapIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfAdminState.setStatus('mandatory')
sapIfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("sleeping", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapIfOperState.setStatus('mandatory')
sapIfUpdateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("standard", 1), ("none", 2), ("autostatic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfUpdateMode.setStatus('mandatory')
sapIfUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfUpdateInterval.setStatus('mandatory')
sapIfAgeMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfAgeMultiplier.setStatus('mandatory')
sapIfSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfSupply.setStatus('mandatory')
sapIfListen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfListen.setStatus('mandatory')
sapIfGetNearestServerReply = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sapIfGetNearestServerReply.setStatus('mandatory')
sapIfOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapIfOutPackets.setStatus('mandatory')
sapIfInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 9, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapIfInPackets.setStatus('mandatory')
mibBuilder.exportSymbols("MSRIPSAP-MIB", sapIfIndex=sapIfIndex, sapIfUpdateMode=sapIfUpdateMode, sapIfListen=sapIfListen, ripsap=ripsap, ripsapInterface=ripsapInterface, ripIfInPackets=ripIfInPackets, ripIfOutPackets=ripIfOutPackets, sapIfOutPackets=sapIfOutPackets, ripIfEntry=ripIfEntry, ripIfAgeMultiplier=ripIfAgeMultiplier, ripIfOperState=ripIfOperState, ripsapBase=ripsapBase, ripIfSupply=ripIfSupply, ripsapBaseSapOperState=ripsapBaseSapOperState, ripIfAdminState=ripIfAdminState, sapIfOperState=sapIfOperState, sapIfInPackets=sapIfInPackets, ripIfListen=ripIfListen, sapIfTable=sapIfTable, sapIfGetNearestServerReply=sapIfGetNearestServerReply, sapIfAdminState=sapIfAdminState, ripIfUpdateMode=ripIfUpdateMode, ripsapBaseRipOperState=ripsapBaseRipOperState, ripIfTable=ripIfTable, ripIfIndex=ripIfIndex, sapIfUpdateInterval=sapIfUpdateInterval, sapIfEntry=sapIfEntry, sapIfSupply=sapIfSupply, ripIfUpdateInterval=ripIfUpdateInterval, sapIfAgeMultiplier=sapIfAgeMultiplier)
