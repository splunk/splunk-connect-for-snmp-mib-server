#
# PySNMP MIB module HUAWEI-TACACS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-TACACS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
huaweiDatacomm, huawei, huaweiMgmt = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "huaweiDatacomm", "huawei", "huaweiMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Counter64, NotificationType, NotificationType, ObjectIdentity, Integer32, MibIdentifier, Bits, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Counter64", "NotificationType", "NotificationType", "ObjectIdentity", "Integer32", "MibIdentifier", "Bits", "Unsigned32", "TimeTicks")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
hwTACACS = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20))
hwTACACSServerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1))
hwTACACSServerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1), )
if mibBuilder.loadTexts: hwTACACSServerGroupTable.setStatus('current')
hwTACACSServerGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1), ).setIndexNames((0, "HUAWEI-TACACS-MIB", "hwTACACSServerGroupName"))
if mibBuilder.loadTexts: hwTACACSServerGroupTableEntry.setStatus('current')
hwTACACSServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupName.setStatus('current')
hwTACACSServerGroupSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupSourceIP.setStatus('current')
hwTACACSServerGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupKey.setStatus('current')
hwTACACSServerGroupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupTimer.setStatus('current')
hwTACACSServerGroupDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("close", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupDomain.setStatus('current')
hwTACACSServerGroupPriAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthen.setStatus('current')
hwTACACSServerGroupPriAuthor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAuthor.setStatus('current')
hwTACACSServerGroupPriAccout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupPriAccout.setStatus('current')
hwTACACSServerGroupCurAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupCurAuthen.setStatus('current')
hwTACACSServerGroupCurAuthor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupCurAuthor.setStatus('current')
hwTACACSServerGroupCurAccout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerGroupCurAccout.setStatus('current')
hwTACACSServerGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerGroupRowStatus.setStatus('current')
hwTACACSServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2), )
if mibBuilder.loadTexts: hwTACACSServerTable.setStatus('current')
hwTACACSServerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1), ).setIndexNames((0, "HUAWEI-TACACS-MIB", "hwTACACSGroupName"), (0, "HUAWEI-TACACS-MIB", "hwTACACSServerAddr"))
if mibBuilder.loadTexts: hwTACACSServerTableEntry.setStatus('current')
hwTACACSGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSGroupName.setStatus('current')
hwTACACSServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSServerAddr.setStatus('current')
hwTACACSServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerPort.setStatus('current')
hwTACACSTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSTimeout.setStatus('current')
hwTACACSServerKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerKey.setStatus('current')
hwTACACSServerPriAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerPriAuthen.setStatus('current')
hwTACACSServerPriAuthor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerPriAuthor.setStatus('current')
hwTACACSServerPriAcct = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerPriAcct.setStatus('current')
hwTACACSAuthenClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientRoundTripTime.setStatus('current')
hwTACACSAuthenClientAccessReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessReqPacket.setStatus('current')
hwTACACSAuthenClientAccessReqLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessReqLogin.setStatus('current')
hwTACACSAuthenClientAccessReqChaPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessReqChaPass.setStatus('current')
hwTACACSAuthenClientAccessReqSendPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessReqSendPass.setStatus('current')
hwTACACSAuthenClientAccessReqSendAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessReqSendAuth.setStatus('current')
hwTACACSAuthenClientAccessResPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResPack.setStatus('current')
hwTACACSAuthenClientAccessResPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResPass.setStatus('current')
hwTACACSAuthenClientAccessResFail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResFail.setStatus('current')
hwTACACSAuthenClientAccessResGetData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResGetData.setStatus('current')
hwTACACSAuthenClientAccessResGetUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResGetUser.setStatus('current')
hwTACACSAuthenClientAccessResGetPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResGetPass.setStatus('current')
hwTACACSAuthenClientAccessResRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResRestart.setStatus('current')
hwTACACSAuthenClientAccessResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResError.setStatus('current')
hwTACACSAuthenClientAccessResFollow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessResFollow.setStatus('current')
hwTACACSAuthenClientMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientMalformedAccessResponses.setStatus('current')
hwTACACSAuthenClientAccessConPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessConPack.setStatus('current')
hwTACACSAuthenClientAccessConAbort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientAccessConAbort.setStatus('current')
hwTACACSAuthenClientPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientPendingRequests.setStatus('current')
hwTACACSAuthenClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientTimeouts.setStatus('current')
hwTACACSAuthenClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientUnknownTypes.setStatus('current')
hwTACACSAuthenClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthenClientPacketsDropped.setStatus('current')
hwTACACSAuthorClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientRoundTripTime.setStatus('current')
hwTACACSAuthorClientReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqPacket.setStatus('current')
hwTACACSAuthorClientReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqEXEC.setStatus('current')
hwTACACSAuthorClientReqLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqLCP.setStatus('current')
hwTACACSAuthorClientReqIPCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqIPCP.setStatus('current')
hwTACACSAuthorClientReqVPDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqVPDN.setStatus('current')
hwTACACSAuthorClientReqCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqCommandLevel.setStatus('current')
hwTACACSAuthorClientResPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResPack.setStatus('current')
hwTACACSAuthorClientResEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResEXEC.setStatus('current')
hwTACACSAuthorClientResLCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResLCP.setStatus('current')
hwTACACSAuthorClientResIPCP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResIPCP.setStatus('current')
hwTACACSAuthorClientResVPDN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResVPDN.setStatus('current')
hwTACACSAuthorClientResCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResCommandLevel.setStatus('current')
hwTACACSAuthorClientResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientResError.setStatus('current')
hwTACACSAuthorClientReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientReqPending.setStatus('current')
hwTACACSAuthorClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientTimeouts.setStatus('current')
hwTACACSAuthorClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientUnknownTypes.setStatus('current')
hwTACACSAuthorClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAuthorClientPacketsDropped.setStatus('current')
hwTACACSAccClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientRoundTripTime.setStatus('current')
hwTACACSAccClientReqPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqPacket.setStatus('current')
hwTACACSAccClientReqNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqNetwork.setStatus('current')
hwTACACSAccClientReqConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqConnection.setStatus('current')
hwTACACSAccClientReqEXEC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqEXEC.setStatus('current')
hwTACACSAccClientReqSysEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqSysEvent.setStatus('current')
hwTACACSAccClientReqCommandLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqCommandLevel.setStatus('current')
hwTACACSAccClientReqUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqUpdate.setStatus('current')
hwTACACSAccClientResPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientResPacket.setStatus('current')
hwTACACSAccClientResError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientResError.setStatus('current')
hwTACACSAccClientReqPending = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientReqPending.setStatus('current')
hwTACACSAccClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientTimeouts.setStatus('current')
hwTACACSAccClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientUnknownTypes.setStatus('current')
hwTACACSAccClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTACACSAccClientPacketsDropped.setStatus('current')
hwTACACSServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 20, 1, 2, 1, 63), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwTACACSServerRowStatus.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-TACACS-MIB", hwTACACSAccClientResError=hwTACACSAccClientResError, hwTACACSAuthenClientAccessResGetData=hwTACACSAuthenClientAccessResGetData, hwTACACSAuthorClientResEXEC=hwTACACSAuthorClientResEXEC, hwTACACSServerGroupTimer=hwTACACSServerGroupTimer, hwTACACSAuthorClientReqEXEC=hwTACACSAuthorClientReqEXEC, hwTACACSServerGroupTableEntry=hwTACACSServerGroupTableEntry, hwTACACSAuthenClientAccessReqSendAuth=hwTACACSAuthenClientAccessReqSendAuth, hwTACACSAuthenClientAccessResPass=hwTACACSAuthenClientAccessResPass, hwTACACSServerKey=hwTACACSServerKey, hwTACACSAuthenClientAccessResRestart=hwTACACSAuthenClientAccessResRestart, hwTACACSAuthorClientRoundTripTime=hwTACACSAuthorClientRoundTripTime, hwTACACSServerTableEntry=hwTACACSServerTableEntry, hwTACACSAuthorClientReqLCP=hwTACACSAuthorClientReqLCP, hwTACACSServerGroupRowStatus=hwTACACSServerGroupRowStatus, hwTACACSAuthorClientResIPCP=hwTACACSAuthorClientResIPCP, hwTACACSAccClientReqSysEvent=hwTACACSAccClientReqSysEvent, hwTACACSAccClientReqCommandLevel=hwTACACSAccClientReqCommandLevel, hwTACACSServerAddr=hwTACACSServerAddr, hwTACACSServerGroupSourceIP=hwTACACSServerGroupSourceIP, hwTACACSAuthenClientAccessResFail=hwTACACSAuthenClientAccessResFail, hwTACACSServerPriAuthor=hwTACACSServerPriAuthor, hwTACACSTimeout=hwTACACSTimeout, hwTACACSServerGroupName=hwTACACSServerGroupName, hwTACACSAccClientPacketsDropped=hwTACACSAccClientPacketsDropped, hwTACACSAuthorClientReqIPCP=hwTACACSAuthorClientReqIPCP, hwTACACSAuthenClientAccessReqLogin=hwTACACSAuthenClientAccessReqLogin, hwTACACSAuthenClientAccessReqSendPass=hwTACACSAuthenClientAccessReqSendPass, hwTACACSServerGroupTable=hwTACACSServerGroupTable, hwTACACSAccClientReqEXEC=hwTACACSAccClientReqEXEC, hwTACACSAccClientTimeouts=hwTACACSAccClientTimeouts, hwTACACSServerGroupPriAuthen=hwTACACSServerGroupPriAuthen, hwTACACSServerPriAuthen=hwTACACSServerPriAuthen, hwTACACSAuthorClientResPack=hwTACACSAuthorClientResPack, hwTACACSAuthorClientResError=hwTACACSAuthorClientResError, hwTACACSServerTable=hwTACACSServerTable, hwTACACSServerGroupPriAuthor=hwTACACSServerGroupPriAuthor, hwTACACSAuthorClientReqCommandLevel=hwTACACSAuthorClientReqCommandLevel, hwTACACSServerGroupCurAccout=hwTACACSServerGroupCurAccout, hwTACACSAuthenClientAccessReqChaPass=hwTACACSAuthenClientAccessReqChaPass, hwTACACSAuthenClientAccessResPack=hwTACACSAuthenClientAccessResPack, hwTACACSAuthenClientRoundTripTime=hwTACACSAuthenClientRoundTripTime, hwTACACSAuthenClientTimeouts=hwTACACSAuthenClientTimeouts, hwTACACSServerPriAcct=hwTACACSServerPriAcct, hwTACACSAuthorClientUnknownTypes=hwTACACSAuthorClientUnknownTypes, hwTACACSAccClientResPacket=hwTACACSAccClientResPacket, hwTACACSAuthenClientPendingRequests=hwTACACSAuthenClientPendingRequests, hwTACACSAuthorClientTimeouts=hwTACACSAuthorClientTimeouts, hwTACACSAccClientReqUpdate=hwTACACSAccClientReqUpdate, hwTACACSAccClientUnknownTypes=hwTACACSAccClientUnknownTypes, hwTACACSAuthenClientUnknownTypes=hwTACACSAuthenClientUnknownTypes, hwTACACSAuthenClientAccessResFollow=hwTACACSAuthenClientAccessResFollow, hwTACACSAccClientReqNetwork=hwTACACSAccClientReqNetwork, hwTACACSServerGroupDomain=hwTACACSServerGroupDomain, hwTACACSServerConfig=hwTACACSServerConfig, hwTACACSServerPort=hwTACACSServerPort, hwTACACSAccClientReqPending=hwTACACSAccClientReqPending, hwTACACSAuthorClientPacketsDropped=hwTACACSAuthorClientPacketsDropped, hwTACACSAuthorClientReqPending=hwTACACSAuthorClientReqPending, hwTACACSGroupName=hwTACACSGroupName, hwTACACSAccClientReqConnection=hwTACACSAccClientReqConnection, hwTACACSAccClientReqPacket=hwTACACSAccClientReqPacket, hwTACACSAuthenClientAccessResGetPass=hwTACACSAuthenClientAccessResGetPass, hwTACACSAuthenClientAccessReqPacket=hwTACACSAuthenClientAccessReqPacket, hwTACACS=hwTACACS, hwTACACSAuthorClientReqPacket=hwTACACSAuthorClientReqPacket, hwTACACSAuthenClientAccessResError=hwTACACSAuthenClientAccessResError, hwTACACSAuthenClientAccessConPack=hwTACACSAuthenClientAccessConPack, hwTACACSAuthorClientResLCP=hwTACACSAuthorClientResLCP, hwTACACSAuthenClientMalformedAccessResponses=hwTACACSAuthenClientMalformedAccessResponses, hwTACACSAuthorClientResVPDN=hwTACACSAuthorClientResVPDN, hwTACACSAuthenClientPacketsDropped=hwTACACSAuthenClientPacketsDropped, hwTACACSAuthenClientAccessConAbort=hwTACACSAuthenClientAccessConAbort, hwTACACSAuthorClientReqVPDN=hwTACACSAuthorClientReqVPDN, hwTACACSServerGroupCurAuthor=hwTACACSServerGroupCurAuthor, hwTACACSServerGroupKey=hwTACACSServerGroupKey, hwTACACSAuthenClientAccessResGetUser=hwTACACSAuthenClientAccessResGetUser, hwTACACSAccClientRoundTripTime=hwTACACSAccClientRoundTripTime, hwTACACSServerGroupCurAuthen=hwTACACSServerGroupCurAuthen, hwTACACSServerGroupPriAccout=hwTACACSServerGroupPriAccout, hwTACACSServerRowStatus=hwTACACSServerRowStatus, hwTACACSAuthorClientResCommandLevel=hwTACACSAuthorClientResCommandLevel)
