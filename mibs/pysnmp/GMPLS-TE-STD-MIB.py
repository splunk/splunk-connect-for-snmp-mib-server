#
# PySNMP MIB module GMPLS-TE-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GMPLS-TE-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
IANAGmplsSwitchingTypeTC, IANAGmplsGeneralizedPidTC, IANAGmplsLSPEncodingTypeTC, IANAGmplsAdminStatusInformationTC = mibBuilder.importSymbols("IANA-GMPLS-TC-MIB", "IANAGmplsSwitchingTypeTC", "IANAGmplsGeneralizedPidTC", "IANAGmplsLSPEncodingTypeTC", "IANAGmplsAdminStatusInformationTC")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
mplsStdMIB, = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "mplsStdMIB")
mplsTunnelOperStatus, mplsTunnelIndex, mplsTunnelIngressLSRId, mplsTunnelInstance, mplsTunnelARHopIndex, mplsTunnelEntry, mplsTunnelEgressLSRId, mplsTunnelCHopListIndex, mplsTunnelCHopIndex, mplsTunnelGroup, mplsTunnelScalarGroup, mplsTunnelHopPathOptionIndex, mplsTunnelARHopListIndex, mplsTunnelHopListIndex, mplsTunnelHopIndex, mplsTunnelAdminStatus = mibBuilder.importSymbols("MPLS-TE-STD-MIB", "mplsTunnelOperStatus", "mplsTunnelIndex", "mplsTunnelIngressLSRId", "mplsTunnelInstance", "mplsTunnelARHopIndex", "mplsTunnelEntry", "mplsTunnelEgressLSRId", "mplsTunnelCHopListIndex", "mplsTunnelCHopIndex", "mplsTunnelGroup", "mplsTunnelScalarGroup", "mplsTunnelHopPathOptionIndex", "mplsTunnelARHopListIndex", "mplsTunnelHopListIndex", "mplsTunnelHopIndex", "mplsTunnelAdminStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Counter32, zeroDotZero, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, IpAddress, Unsigned32, iso, ModuleIdentity, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Counter32", "zeroDotZero", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "IpAddress", "Unsigned32", "iso", "ModuleIdentity", "Counter64", "NotificationType")
TruthValue, TextualConvention, DisplayString, TimeStamp, RowPointer = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeStamp", "RowPointer")
gmplsTeStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 13))
gmplsTeStdMIB.setRevisions(('2007-02-27 00:00',))
if mibBuilder.loadTexts: gmplsTeStdMIB.setLastUpdated('200702270000Z')
if mibBuilder.loadTexts: gmplsTeStdMIB.setOrganization('IETF Common Control and Measurement Plane (CCAMP) Working Group')
gmplsTeNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 13, 0))
gmplsTeScalars = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 13, 1))
gmplsTeObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 13, 2))
gmplsTeConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 13, 3))
gmplsTunnelsConfigured = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 13, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelsConfigured.setStatus('current')
gmplsTunnelsActive = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 13, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelsActive.setStatus('current')
gmplsTunnelTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1), )
if mibBuilder.loadTexts: gmplsTunnelTable.setStatus('current')
gmplsTunnelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelInstance"), (0, "MPLS-TE-STD-MIB", "mplsTunnelIngressLSRId"), (0, "MPLS-TE-STD-MIB", "mplsTunnelEgressLSRId"))
if mibBuilder.loadTexts: gmplsTunnelEntry.setStatus('current')
gmplsTunnelUnnumIf = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelUnnumIf.setStatus('current')
gmplsTunnelAttributes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 2), Bits().clone(namedValues=NamedValues(("labelRecordingDesired", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelAttributes.setStatus('current')
gmplsTunnelLSPEncoding = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 3), IANAGmplsLSPEncodingTypeTC().clone('tunnelLspNotGmpls')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelLSPEncoding.setStatus('current')
gmplsTunnelSwitchingType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 4), IANAGmplsSwitchingTypeTC().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelSwitchingType.setStatus('current')
gmplsTunnelLinkProtection = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 5), Bits().clone(namedValues=NamedValues(("extraTraffic", 0), ("unprotected", 1), ("shared", 2), ("dedicatedOneToOne", 3), ("dedicatedOnePlusOne", 4), ("enhanced", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelLinkProtection.setStatus('current')
gmplsTunnelGPid = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 6), IANAGmplsGeneralizedPidTC().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelGPid.setStatus('current')
gmplsTunnelSecondary = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelSecondary.setStatus('current')
gmplsTunnelDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("forward", 0), ("bidirectional", 1))).clone('forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelDirection.setStatus('current')
gmplsTunnelPathComp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dynamicFull", 1), ("explicit", 2), ("dynamicPartial", 3))).clone('dynamicFull')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelPathComp.setStatus('current')
gmplsTunnelUpstreamNotifyRecipientType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 10), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelUpstreamNotifyRecipientType.setStatus('current')
gmplsTunnelUpstreamNotifyRecipient = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 11), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelUpstreamNotifyRecipient.setStatus('current')
gmplsTunnelSendResvNotifyRecipientType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 12), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelSendResvNotifyRecipientType.setStatus('current')
gmplsTunnelSendResvNotifyRecipient = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 13), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelSendResvNotifyRecipient.setStatus('current')
gmplsTunnelDownstreamNotifyRecipientType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 14), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelDownstreamNotifyRecipientType.setStatus('current')
gmplsTunnelDownstreamNotifyRecipient = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 15), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelDownstreamNotifyRecipient.setStatus('current')
gmplsTunnelSendPathNotifyRecipientType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 16), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelSendPathNotifyRecipientType.setStatus('current')
gmplsTunnelSendPathNotifyRecipient = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 17), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelSendPathNotifyRecipient.setStatus('current')
gmplsTunnelAdminStatusFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 18), IANAGmplsAdminStatusInformationTC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelAdminStatusFlags.setStatus('current')
gmplsTunnelExtraParamsPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 1, 1, 19), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelExtraParamsPtr.setStatus('current')
gmplsTunnelHopTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2), )
if mibBuilder.loadTexts: gmplsTunnelHopTable.setStatus('current')
gmplsTunnelHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelHopListIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelHopPathOptionIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelHopIndex"))
if mibBuilder.loadTexts: gmplsTunnelHopEntry.setStatus('current')
gmplsTunnelHopLabelStatuses = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("forwardPresent", 0), ("reversePresent", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelHopLabelStatuses.setStatus('current')
gmplsTunnelHopExplicitForwardLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelHopExplicitForwardLabel.setStatus('current')
gmplsTunnelHopExplicitForwardLabelPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2, 1, 3), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelHopExplicitForwardLabelPtr.setStatus('current')
gmplsTunnelHopExplicitReverseLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelHopExplicitReverseLabel.setStatus('current')
gmplsTunnelHopExplicitReverseLabelPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 2, 1, 5), RowPointer().clone((0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gmplsTunnelHopExplicitReverseLabelPtr.setStatus('current')
gmplsTunnelARHopTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3), )
if mibBuilder.loadTexts: gmplsTunnelARHopTable.setStatus('current')
gmplsTunnelARHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelARHopListIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelARHopIndex"))
if mibBuilder.loadTexts: gmplsTunnelARHopEntry.setStatus('current')
gmplsTunnelARHopLabelStatuses = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1, 1), Bits().clone(namedValues=NamedValues(("forwardPresent", 0), ("reversePresent", 1), ("forwardGlobal", 2), ("reverseGlobal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelARHopLabelStatuses.setStatus('current')
gmplsTunnelARHopExplicitForwardLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelARHopExplicitForwardLabel.setStatus('current')
gmplsTunnelARHopExplicitForwardLabelPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelARHopExplicitForwardLabelPtr.setStatus('current')
gmplsTunnelARHopExplicitReverseLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelARHopExplicitReverseLabel.setStatus('current')
gmplsTunnelARHopExplicitReverseLabelPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelARHopExplicitReverseLabelPtr.setStatus('current')
gmplsTunnelARHopProtection = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 3, 1, 6), Bits().clone(namedValues=NamedValues(("localAvailable", 0), ("localInUse", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelARHopProtection.setStatus('current')
gmplsTunnelCHopTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4), )
if mibBuilder.loadTexts: gmplsTunnelCHopTable.setStatus('current')
gmplsTunnelCHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4, 1), ).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelCHopListIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelCHopIndex"))
if mibBuilder.loadTexts: gmplsTunnelCHopEntry.setStatus('current')
gmplsTunnelCHopLabelStatuses = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4, 1, 1), Bits().clone(namedValues=NamedValues(("forwardPresent", 0), ("reversePresent", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelCHopLabelStatuses.setStatus('current')
gmplsTunnelCHopExplicitForwardLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelCHopExplicitForwardLabel.setStatus('current')
gmplsTunnelCHopExplicitForwardLabelPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelCHopExplicitForwardLabelPtr.setStatus('current')
gmplsTunnelCHopExplicitReverseLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelCHopExplicitReverseLabel.setStatus('current')
gmplsTunnelCHopExplicitReverseLabelPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 4, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelCHopExplicitReverseLabelPtr.setStatus('current')
gmplsTunnelReversePerfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5), )
if mibBuilder.loadTexts: gmplsTunnelReversePerfTable.setStatus('current')
gmplsTunnelReversePerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5, 1), )
gmplsTunnelEntry.registerAugmentions(("GMPLS-TE-STD-MIB", "gmplsTunnelReversePerfEntry"))
gmplsTunnelReversePerfEntry.setIndexNames(*gmplsTunnelEntry.getIndexNames())
if mibBuilder.loadTexts: gmplsTunnelReversePerfEntry.setStatus('current')
gmplsTunnelReversePerfPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelReversePerfPackets.setStatus('current')
gmplsTunnelReversePerfHCPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelReversePerfHCPackets.setStatus('current')
gmplsTunnelReversePerfErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelReversePerfErrors.setStatus('current')
gmplsTunnelReversePerfBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelReversePerfBytes.setStatus('current')
gmplsTunnelReversePerfHCBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelReversePerfHCBytes.setStatus('current')
gmplsTunnelErrorTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6), )
if mibBuilder.loadTexts: gmplsTunnelErrorTable.setStatus('current')
gmplsTunnelErrorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1), )
mplsTunnelEntry.registerAugmentions(("GMPLS-TE-STD-MIB", "gmplsTunnelErrorEntry"))
gmplsTunnelErrorEntry.setIndexNames(*mplsTunnelEntry.getIndexNames())
if mibBuilder.loadTexts: gmplsTunnelErrorEntry.setStatus('current')
gmplsTunnelErrorLastErrorType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noError", 0), ("unknown", 1), ("protocol", 2), ("pathComputation", 3), ("localConfiguration", 4), ("localResources", 5), ("localOther", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorLastErrorType.setStatus('current')
gmplsTunnelErrorLastTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorLastTime.setStatus('current')
gmplsTunnelErrorReporterType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorReporterType.setStatus('current')
gmplsTunnelErrorReporter = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorReporter.setStatus('current')
gmplsTunnelErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorCode.setStatus('current')
gmplsTunnelErrorSubcode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorSubcode.setStatus('current')
gmplsTunnelErrorTLVs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorTLVs.setStatus('current')
gmplsTunnelErrorHelpString = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 13, 2, 6, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gmplsTunnelErrorHelpString.setStatus('current')
gmplsTunnelDown = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 13, 0, 1)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorLastErrorType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorReporterType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorReporter"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorCode"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorSubcode"))
if mibBuilder.loadTexts: gmplsTunnelDown.setStatus('current')
gmplsTeGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 1))
gmplsTeCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 2))
gmplsTeModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 2, 1)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelGroup"), ("MPLS-TE-STD-MIB", "mplsTunnelScalarGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelScalarGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSignaledGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelOptionalGroup"), ("GMPLS-TE-STD-MIB", "gmplsTeNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTeModuleFullCompliance = gmplsTeModuleFullCompliance.setStatus('current')
gmplsTeModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 2, 2)).setObjects(("GMPLS-TE-STD-MIB", "gmplsTunnelGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelScalarGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSignaledGroup"), ("GMPLS-TE-STD-MIB", "gmplsTunnelOptionalGroup"), ("GMPLS-TE-STD-MIB", "gmplsTeNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTeModuleReadOnlyCompliance = gmplsTeModuleReadOnlyCompliance.setStatus('current')
gmplsTunnelGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 1, 1)).setObjects(("GMPLS-TE-STD-MIB", "gmplsTunnelDirection"), ("GMPLS-TE-STD-MIB", "gmplsTunnelReversePerfPackets"), ("GMPLS-TE-STD-MIB", "gmplsTunnelReversePerfHCPackets"), ("GMPLS-TE-STD-MIB", "gmplsTunnelReversePerfErrors"), ("GMPLS-TE-STD-MIB", "gmplsTunnelReversePerfBytes"), ("GMPLS-TE-STD-MIB", "gmplsTunnelReversePerfHCBytes"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorLastErrorType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorLastTime"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorReporterType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorReporter"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorCode"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorSubcode"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorTLVs"), ("GMPLS-TE-STD-MIB", "gmplsTunnelErrorHelpString"), ("GMPLS-TE-STD-MIB", "gmplsTunnelUnnumIf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTunnelGroup = gmplsTunnelGroup.setStatus('current')
gmplsTunnelSignaledGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 1, 2)).setObjects(("GMPLS-TE-STD-MIB", "gmplsTunnelAttributes"), ("GMPLS-TE-STD-MIB", "gmplsTunnelLSPEncoding"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSwitchingType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelLinkProtection"), ("GMPLS-TE-STD-MIB", "gmplsTunnelGPid"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSecondary"), ("GMPLS-TE-STD-MIB", "gmplsTunnelPathComp"), ("GMPLS-TE-STD-MIB", "gmplsTunnelUpstreamNotifyRecipientType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelUpstreamNotifyRecipient"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSendResvNotifyRecipientType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSendResvNotifyRecipient"), ("GMPLS-TE-STD-MIB", "gmplsTunnelDownstreamNotifyRecipientType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelDownstreamNotifyRecipient"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSendPathNotifyRecipientType"), ("GMPLS-TE-STD-MIB", "gmplsTunnelSendPathNotifyRecipient"), ("GMPLS-TE-STD-MIB", "gmplsTunnelAdminStatusFlags"), ("GMPLS-TE-STD-MIB", "gmplsTunnelHopLabelStatuses"), ("GMPLS-TE-STD-MIB", "gmplsTunnelHopExplicitForwardLabel"), ("GMPLS-TE-STD-MIB", "gmplsTunnelHopExplicitForwardLabelPtr"), ("GMPLS-TE-STD-MIB", "gmplsTunnelHopExplicitReverseLabel"), ("GMPLS-TE-STD-MIB", "gmplsTunnelHopExplicitReverseLabelPtr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTunnelSignaledGroup = gmplsTunnelSignaledGroup.setStatus('current')
gmplsTunnelScalarGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 1, 3)).setObjects(("GMPLS-TE-STD-MIB", "gmplsTunnelsConfigured"), ("GMPLS-TE-STD-MIB", "gmplsTunnelsActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTunnelScalarGroup = gmplsTunnelScalarGroup.setStatus('current')
gmplsTunnelOptionalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 1, 4)).setObjects(("GMPLS-TE-STD-MIB", "gmplsTunnelExtraParamsPtr"), ("GMPLS-TE-STD-MIB", "gmplsTunnelARHopLabelStatuses"), ("GMPLS-TE-STD-MIB", "gmplsTunnelARHopExplicitForwardLabel"), ("GMPLS-TE-STD-MIB", "gmplsTunnelARHopExplicitForwardLabelPtr"), ("GMPLS-TE-STD-MIB", "gmplsTunnelARHopExplicitReverseLabel"), ("GMPLS-TE-STD-MIB", "gmplsTunnelARHopExplicitReverseLabelPtr"), ("GMPLS-TE-STD-MIB", "gmplsTunnelARHopProtection"), ("GMPLS-TE-STD-MIB", "gmplsTunnelCHopLabelStatuses"), ("GMPLS-TE-STD-MIB", "gmplsTunnelCHopExplicitForwardLabel"), ("GMPLS-TE-STD-MIB", "gmplsTunnelCHopExplicitForwardLabelPtr"), ("GMPLS-TE-STD-MIB", "gmplsTunnelCHopExplicitReverseLabel"), ("GMPLS-TE-STD-MIB", "gmplsTunnelCHopExplicitReverseLabelPtr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTunnelOptionalGroup = gmplsTunnelOptionalGroup.setStatus('current')
gmplsTeNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 166, 13, 3, 1, 5)).setObjects(("GMPLS-TE-STD-MIB", "gmplsTunnelDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gmplsTeNotificationGroup = gmplsTeNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("GMPLS-TE-STD-MIB", gmplsTunnelsConfigured=gmplsTunnelsConfigured, gmplsTunnelExtraParamsPtr=gmplsTunnelExtraParamsPtr, gmplsTeObjects=gmplsTeObjects, PYSNMP_MODULE_ID=gmplsTeStdMIB, gmplsTunnelCHopExplicitForwardLabelPtr=gmplsTunnelCHopExplicitForwardLabelPtr, gmplsTunnelHopEntry=gmplsTunnelHopEntry, gmplsTunnelHopExplicitReverseLabelPtr=gmplsTunnelHopExplicitReverseLabelPtr, gmplsTunnelErrorTable=gmplsTunnelErrorTable, gmplsTunnelHopTable=gmplsTunnelHopTable, gmplsTunnelARHopEntry=gmplsTunnelARHopEntry, gmplsTunnelCHopEntry=gmplsTunnelCHopEntry, gmplsTunnelTable=gmplsTunnelTable, gmplsTunnelsActive=gmplsTunnelsActive, gmplsTunnelErrorReporterType=gmplsTunnelErrorReporterType, gmplsTunnelEntry=gmplsTunnelEntry, gmplsTunnelAdminStatusFlags=gmplsTunnelAdminStatusFlags, gmplsTeNotifications=gmplsTeNotifications, gmplsTeGroups=gmplsTeGroups, gmplsTunnelErrorEntry=gmplsTunnelErrorEntry, gmplsTunnelUpstreamNotifyRecipient=gmplsTunnelUpstreamNotifyRecipient, gmplsTunnelReversePerfBytes=gmplsTunnelReversePerfBytes, gmplsTeModuleFullCompliance=gmplsTeModuleFullCompliance, gmplsTunnelSendResvNotifyRecipient=gmplsTunnelSendResvNotifyRecipient, gmplsTeModuleReadOnlyCompliance=gmplsTeModuleReadOnlyCompliance, gmplsTunnelARHopExplicitForwardLabelPtr=gmplsTunnelARHopExplicitForwardLabelPtr, gmplsTeNotificationGroup=gmplsTeNotificationGroup, gmplsTunnelUpstreamNotifyRecipientType=gmplsTunnelUpstreamNotifyRecipientType, gmplsTunnelErrorLastErrorType=gmplsTunnelErrorLastErrorType, gmplsTunnelCHopExplicitReverseLabel=gmplsTunnelCHopExplicitReverseLabel, gmplsTunnelARHopExplicitReverseLabelPtr=gmplsTunnelARHopExplicitReverseLabelPtr, gmplsTunnelUnnumIf=gmplsTunnelUnnumIf, gmplsTunnelLinkProtection=gmplsTunnelLinkProtection, gmplsTunnelSecondary=gmplsTunnelSecondary, gmplsTunnelErrorReporter=gmplsTunnelErrorReporter, gmplsTunnelReversePerfErrors=gmplsTunnelReversePerfErrors, gmplsTunnelARHopLabelStatuses=gmplsTunnelARHopLabelStatuses, gmplsTunnelHopExplicitForwardLabelPtr=gmplsTunnelHopExplicitForwardLabelPtr, gmplsTunnelReversePerfHCPackets=gmplsTunnelReversePerfHCPackets, gmplsTunnelSendPathNotifyRecipientType=gmplsTunnelSendPathNotifyRecipientType, gmplsTunnelReversePerfHCBytes=gmplsTunnelReversePerfHCBytes, gmplsTunnelDown=gmplsTunnelDown, gmplsTunnelCHopExplicitForwardLabel=gmplsTunnelCHopExplicitForwardLabel, gmplsTunnelHopExplicitReverseLabel=gmplsTunnelHopExplicitReverseLabel, gmplsTunnelARHopExplicitForwardLabel=gmplsTunnelARHopExplicitForwardLabel, gmplsTunnelReversePerfEntry=gmplsTunnelReversePerfEntry, gmplsTunnelReversePerfTable=gmplsTunnelReversePerfTable, gmplsTeScalars=gmplsTeScalars, gmplsTunnelErrorHelpString=gmplsTunnelErrorHelpString, gmplsTeCompliances=gmplsTeCompliances, gmplsTunnelDirection=gmplsTunnelDirection, gmplsTunnelErrorTLVs=gmplsTunnelErrorTLVs, gmplsTeStdMIB=gmplsTeStdMIB, gmplsTunnelAttributes=gmplsTunnelAttributes, gmplsTunnelHopLabelStatuses=gmplsTunnelHopLabelStatuses, gmplsTunnelARHopExplicitReverseLabel=gmplsTunnelARHopExplicitReverseLabel, gmplsTunnelPathComp=gmplsTunnelPathComp, gmplsTunnelScalarGroup=gmplsTunnelScalarGroup, gmplsTunnelDownstreamNotifyRecipientType=gmplsTunnelDownstreamNotifyRecipientType, gmplsTunnelSignaledGroup=gmplsTunnelSignaledGroup, gmplsTunnelErrorSubcode=gmplsTunnelErrorSubcode, gmplsTunnelGPid=gmplsTunnelGPid, gmplsTunnelErrorCode=gmplsTunnelErrorCode, gmplsTunnelCHopTable=gmplsTunnelCHopTable, gmplsTunnelARHopTable=gmplsTunnelARHopTable, gmplsTeConformance=gmplsTeConformance, gmplsTunnelReversePerfPackets=gmplsTunnelReversePerfPackets, gmplsTunnelARHopProtection=gmplsTunnelARHopProtection, gmplsTunnelErrorLastTime=gmplsTunnelErrorLastTime, gmplsTunnelGroup=gmplsTunnelGroup, gmplsTunnelDownstreamNotifyRecipient=gmplsTunnelDownstreamNotifyRecipient, gmplsTunnelCHopExplicitReverseLabelPtr=gmplsTunnelCHopExplicitReverseLabelPtr, gmplsTunnelLSPEncoding=gmplsTunnelLSPEncoding, gmplsTunnelOptionalGroup=gmplsTunnelOptionalGroup, gmplsTunnelHopExplicitForwardLabel=gmplsTunnelHopExplicitForwardLabel, gmplsTunnelSendResvNotifyRecipientType=gmplsTunnelSendResvNotifyRecipientType, gmplsTunnelCHopLabelStatuses=gmplsTunnelCHopLabelStatuses, gmplsTunnelSwitchingType=gmplsTunnelSwitchingType, gmplsTunnelSendPathNotifyRecipient=gmplsTunnelSendPathNotifyRecipient)
