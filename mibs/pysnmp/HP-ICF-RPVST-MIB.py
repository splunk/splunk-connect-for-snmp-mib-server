#
# PySNMP MIB module HP-ICF-RPVST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-RPVST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
BridgeId, = mibBuilder.importSymbols("BRIDGE-MIB", "BridgeId")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
StpPortRole, = mibBuilder.importSymbols("HP-ICF-TC", "StpPortRole")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, Counter64, Counter32, ModuleIdentity, TimeTicks, iso, MibIdentifier, NotificationType, Gauge32, IpAddress, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "Counter64", "Counter32", "ModuleIdentity", "TimeTicks", "iso", "MibIdentifier", "NotificationType", "Gauge32", "IpAddress", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, TruthValue, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "MacAddress", "DisplayString", "TextualConvention")
hpicfRpvstMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88))
hpicfRpvstMIB.setRevisions(('2017-08-08 00:00', '2013-03-21 00:28', '2011-08-08 00:00',))
if mibBuilder.loadTexts: hpicfRpvstMIB.setLastUpdated('201708080000Z')
if mibBuilder.loadTexts: hpicfRpvstMIB.setOrganization(' HP Networking')
class PointToPoint(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("forceTrue", 1), ("forceFalse", 2), ("auto", 3))

hpicfRpvstNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0))
hpicfRpvstObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1))
hpicfRpvstConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2))
hpicfRpvstGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 1))
hpicfRpvstResetCounters = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstResetCounters.setStatus('current')
hpicfRpvstExtendedSystemID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstExtendedSystemID.setStatus('current')
hpicfRpvstIgnorePVIDInconsistency = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstIgnorePVIDInconsistency.setStatus('current')
hpicfRpvstPathCostMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pathCost8021d", 1), ("pathCost8021t", 2), ("proprietary", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPathCostMode.setStatus('current')
hpicfRpvstVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2), )
if mibBuilder.loadTexts: hpicfRpvstVlanTable.setStatus('current')
hpicfRpvstVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"))
if mibBuilder.loadTexts: hpicfRpvstVlanEntry.setStatus('current')
hpicfRpvstVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: hpicfRpvstVlanId.setStatus('current')
hpicfRpvstVlanHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanHelloTime.setStatus('current')
hpicfRpvstVlanForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanForwardDelay.setStatus('current')
hpicfRpvstVlanMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanMaxAge.setStatus('current')
hpicfRpvstVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanPriority.setStatus('current')
hpicfRpvstVlanRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("primary", 1), ("secondary", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanRoot.setStatus('current')
hpicfRpvstVlanRpvstStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanRpvstStatus.setStatus('current')
hpicfRpvstVlanResetCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstVlanResetCounters.setStatus('current')
hpicfRpvstVlanOperHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanOperHelloTime.setStatus('current')
hpicfRpvstVlanRootPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootPriority.setStatus('current')
hpicfRpvstVlanRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootPort.setStatus('current')
hpicfRpvstVlanRootPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootPathCost.setStatus('current')
hpicfRpvstVlanRootMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootMacAddress.setStatus('current')
hpicfRpvstVlanRootChangeCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootChangeCounter.setStatus('current')
hpicfRpvstVlanTimeSinceLastTopoChange = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTimeSinceLastTopoChange.setStatus('current')
hpicfVlanTopoChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfVlanTopoChangeCount.setStatus('current')
hpicfRpvstSendTopoChangeCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstSendTopoChangeCtrl.setStatus('current')
hpicfRpvstLogPortStateTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 2, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstLogPortStateTransitions.setStatus('current')
hpicfRpvstPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3), )
if mibBuilder.loadTexts: hpicfRpvstPortTable.setStatus('current')
hpicfRpvstPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstPortIndex"))
if mibBuilder.loadTexts: hpicfRpvstPortEntry.setStatus('current')
hpicfRpvstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfRpvstPortIndex.setStatus('current')
hpicfRpvstPortAdminEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortAdminEdge.setStatus('current')
hpicfRpvstPortAdminPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 3), PointToPoint()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortAdminPointToPoint.setStatus('current')
hpicfRpvstPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortAutoEdge.setStatus('current')
hpicfRpvstPortBpduFiltering = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortBpduFiltering.setStatus('current')
hpicfRpvstPortRestrictedTcn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortRestrictedTcn.setStatus('current')
hpicfRpvstPortRootGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortRootGuard.setStatus('current')
hpicfRpvstPortLoopGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortLoopGuard.setStatus('current')
hpicfRpvstPortBpduProtection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortBpduProtection.setStatus('current')
hpicfRpvstPortIeeeRstBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortIeeeRstBpdu.setStatus('current')
hpicfRpvstPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4), )
if mibBuilder.loadTexts: hpicfRpvstPortVlanTable.setStatus('current')
hpicfRpvstPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstPortIndex"))
if mibBuilder.loadTexts: hpicfRpvstPortVlanEntry.setStatus('current')
hpicfRpvstPortVlanPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortVlanPathCost.setStatus('current')
hpicfRpvstPortVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortVlanPriority.setStatus('current')
hpicfRpvstPortVlanResetCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfRpvstPortVlanResetCounters.setStatus('current')
hpicfRpvstPortVlanRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 4), StpPortRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRole.setStatus('current')
hpicfRpvstPortVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6), ("bpduError", 7), ("loopInconsistent", 8), ("pvidInconsistent", 9), ("rootGuard", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanState.setStatus('current')
hpicfRpvstPortVlanDesigBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanDesigBridge.setStatus('current')
hpicfRpvstPortVlanOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanOperPointToPoint.setStatus('current')
hpicfRpvstPortVlanOperEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanOperEdge.setStatus('current')
hpicfRpvstPortVlanInconsistencyReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rootProtected", 1), ("loopProtected", 2), ("inconsistentPvidprotected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanInconsistencyReason.setStatus('current')
hpicfRpvstPortVlanRxCountersTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5), )
if mibBuilder.loadTexts: hpicfRpvstPortVlanRxCountersTable.setStatus('current')
hpicfRpvstPortVlanRxCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstPortIndex"))
if mibBuilder.loadTexts: hpicfRpvstPortVlanRxCountersEntry.setStatus('current')
hpicfRpvstPortVlanRpvstBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRpvstBpduRx.setStatus('current')
hpicfRpvstPortVlanRpvstBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRpvstBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanRstBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRstBpduRx.setStatus('current')
hpicfRpvstPortVlanRstBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRstBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanConfigBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanConfigBpduRx.setStatus('current')
hpicfRpvstPortVlanConfigBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanConfigBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcnBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcnBpduRx.setStatus('current')
hpicfRpvstPortVlanTcnBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcnBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcDetectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcDetectCount.setStatus('current')
hpicfRpvstPortVlanTcDetectCountLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcDetectCountLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcFlagRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcFlagRx.setStatus('current')
hpicfRpvstPortVlanTcFlagRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcFlagRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcAckFlagRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcAckFlagRx.setStatus('current')
hpicfRpvstPortVlanTcAckFlagRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcAckFlagRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanStarvedBpduCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanStarvedBpduCount.setStatus('current')
hpicfRpvstPortVlanStarvedBpduCountLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanStarvedBpduCountLastUpdated.setStatus('current')
hpicfRpvstPortVlanInvalidBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanInvalidBpduRx.setStatus('current')
hpicfRpvstPortVlanInvalidBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanInvalidBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanLoopedBackBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanLoopedBackBpduRx.setStatus('current')
hpicfRpvstPortVlanLoopedBackBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanLoopedBackBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanErrantBpduRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanErrantBpduRxCount.setStatus('current')
hpicfRpvstPortVlanErrantBpduRxCountLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 22), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanErrantBpduRxCountLastUpdated.setStatus('current')
hpicfRpvstPortVlanAgedBpduRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanAgedBpduRx.setStatus('current')
hpicfRpvstPortVlanAgedBpduRxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 5, 1, 24), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanAgedBpduRxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTxCountersTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6), )
if mibBuilder.loadTexts: hpicfRpvstPortVlanTxCountersTable.setStatus('current')
hpicfRpvstPortVlanTxCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstPortIndex"))
if mibBuilder.loadTexts: hpicfRpvstPortVlanTxCountersEntry.setStatus('current')
hpicfRpvstPortVlanRpvstBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRpvstBpduTx.setStatus('current')
hpicfRpvstPortVlanRpvstBpduTxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRpvstBpduTxLastUpdated.setStatus('current')
hpicfRpvstPortVlanRstBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRstBpduTx.setStatus('current')
hpicfRpvstPortVlanRstBpduTxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanRstBpduTxLastUpdated.setStatus('current')
hpicfRpvstPortVlanConfigBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanConfigBpduTx.setStatus('current')
hpicfRpvstPortVlanConfigBpduTxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanConfigBpduTxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcnBpduTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcnBpduTx.setStatus('current')
hpicfRpvstPortVlanTcnBpduTxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcnBpduTxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcFlagTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcFlagTx.setStatus('current')
hpicfRpvstPortVlanTcFlagTxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcFlagTxLastUpdated.setStatus('current')
hpicfRpvstPortVlanTcAckFlagTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcAckFlagTx.setStatus('current')
hpicfRpvstPortVlanTcAckFlagTxLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 6, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortVlanTcAckFlagTxLastUpdated.setStatus('current')
hpicfRpvstVlanRootHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 7), )
if mibBuilder.loadTexts: hpicfRpvstVlanRootHistoryTable.setStatus('current')
hpicfRpvstVlanRootHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 7, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootHistoryIndex"))
if mibBuilder.loadTexts: hpicfRpvstVlanRootHistoryEntry.setStatus('current')
hpicfRpvstVlanRootHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: hpicfRpvstVlanRootHistoryIndex.setStatus('current')
hpicfRpvstVlanRootBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 7, 1, 2), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootBridgeId.setStatus('current')
hpicfRpvstVlanRootHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 7, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanRootHistoryTime.setStatus('current')
hpicfRpvstVlanTopologyChangeRxTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 8), )
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeRxTable.setStatus('current')
hpicfRpvstVlanTopologyChangeRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 8, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeRxIndex"))
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeRxEntry.setStatus('current')
hpicfRpvstVlanTopologyChangeRxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeRxIndex.setStatus('current')
hpicfRpvstVlanTopologyChangeRxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 8, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeRxTime.setStatus('current')
hpicfRpvstVlanTopologyChangeRxMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 8, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeRxMacAddress.setStatus('current')
hpicfRpvstVlanTopologyChangeRxPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeRxPortId.setStatus('current')
hpicfRpvstVlanTopologyChangeTxTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9), )
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxTable.setStatus('current')
hpicfRpvstVlanTopologyChangeTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeTxIndex"))
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxEntry.setStatus('current')
hpicfRpvstVlanTopologyChangeTxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxIndex.setStatus('current')
hpicfRpvstVlanTopologyChangeTxCurrentPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9, 1, 2), StpPortRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxCurrentPortRole.setStatus('current')
hpicfRpvstVlanTopologyChangeTxPreviousPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9, 1, 3), StpPortRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxPreviousPortRole.setStatus('current')
hpicfRpvstVlanTopologyChangeTxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxTime.setStatus('current')
hpicfRpvstVlanTopologyChangeTxPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstVlanTopologyChangeTxPortId.setStatus('current')
hpicfRpvstPortRoleChangeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 10), )
if mibBuilder.loadTexts: hpicfRpvstPortRoleChangeTable.setStatus('current')
hpicfRpvstPortRoleChangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 10, 1), ).setIndexNames((0, "HP-ICF-RPVST-MIB", "hpicfRpvstVlanId"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstPortIndex"), (0, "HP-ICF-RPVST-MIB", "hpicfRpvstPortRoleChangeIndex"))
if mibBuilder.loadTexts: hpicfRpvstPortRoleChangeEntry.setStatus('current')
hpicfRpvstPortRoleChangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfRpvstPortRoleChangeIndex.setStatus('current')
hpicfRpvstPortRoleChangeCurrentPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 10, 1, 2), StpPortRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortRoleChangeCurrentPortRole.setStatus('current')
hpicfRpvstPortRoleChangePreviousPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 10, 1, 3), StpPortRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortRoleChangePreviousPortRole.setStatus('current')
hpicfRpvstPortRoleChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 1, 10, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfRpvstPortRoleChangeTime.setStatus('current')
hpicfRpvstErrantBpduDetector = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bpduFilter", 1), ("bpduProtection", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstErrantBpduDetector.setStatus('current')
hpicfRpvstErrantBpduSrcMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstErrantBpduSrcMac.setStatus('current')
hpicfRpvstNewRootBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 3), BridgeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstNewRootBridgeId.setStatus('current')
hpicfRpvstPreviousRootBridgeId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 4), BridgeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstPreviousRootBridgeId.setStatus('current')
hpicfRpvstDesignatedPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstDesignatedPort.setStatus('current')
hpicfRpvstVlanIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 6), VlanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstVlanIndex.setStatus('current')
hpicfRpvstPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstPortNumber.setStatus('current')
hpicfRpvstRootBridgeChangeTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 8), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstRootBridgeChangeTimeStamp.setStatus('current')
hpicfRpvstSuperiorBpduSrcMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 9), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstSuperiorBpduSrcMac.setStatus('current')
hpicfRpvstSuperiorBpduSrcPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstSuperiorBpduSrcPort.setStatus('current')
hpicfRpvstErrantBpduReceived = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 11)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanIndex"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortNumber"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanErrantBpduRxCount"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanState"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanDesigBridge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstDesignatedPort"), ("HP-ICF-RPVST-MIB", "hpicfRpvstErrantBpduSrcMac"), ("HP-ICF-RPVST-MIB", "hpicfRpvstErrantBpduDetector"))
if mibBuilder.loadTexts: hpicfRpvstErrantBpduReceived.setStatus('current')
hpicfRpvstNewRoot = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 12)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanIndex"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNewRootBridgeId"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPreviousRootBridgeId"), ("HP-ICF-RPVST-MIB", "hpicfRpvstRootBridgeChangeTimeStamp"))
if mibBuilder.loadTexts: hpicfRpvstNewRoot.setStatus('current')
hpicfRpvstRootGuardInconsistency = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 13)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanIndex"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortNumber"), ("HP-ICF-RPVST-MIB", "hpicfRpvstSuperiorBpduSrcMac"), ("HP-ICF-RPVST-MIB", "hpicfRpvstSuperiorBpduSrcPort"))
if mibBuilder.loadTexts: hpicfRpvstRootGuardInconsistency.setStatus('current')
hpicfRpvstLoopGuardInconsistency = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 14)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanIndex"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortNumber"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanDesigBridge"))
if mibBuilder.loadTexts: hpicfRpvstLoopGuardInconsistency.setStatus('current')
hpicfRpvstOldPortRole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstOldPortRole.setStatus('current')
hpicfRpvstNewPortRole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstNewPortRole.setStatus('current')
hpicfRpvstTopoChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 17), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfRpvstTopoChangeTime.setStatus('current')
hpicfRpvstTopologyChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 0, 18)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanIndex"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortNumber"), ("HP-ICF-RPVST-MIB", "hpicfRpvstOldPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNewPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstTopoChangeTime"))
if mibBuilder.loadTexts: hpicfRpvstTopologyChange.setStatus('current')
hpicfRpvstGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1))
hpicfRpvstCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 2))
hpicfRpvstCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 2, 1)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanCounterGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstRootHistoryGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNotificationObjectGrp"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstCompliance1 = hpicfRpvstCompliance1.setStatus('deprecated')
hpicfRpvstCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 2, 2)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPvst1"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNotificationGroupPvst1"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNotificationObjectGrpPvst1"), ("HP-ICF-RPVST-MIB", "hpicfRpvstTopologyRxGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstTopologyTxGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRoleChangeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstCompliance2 = hpicfRpvstCompliance2.setStatus('current')
hpicfRpvstCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 2, 3)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortGroup1"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanCounterGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstRootHistoryGroup"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNotificationObjectGrp"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstCompliance3 = hpicfRpvstCompliance3.setStatus('current')
hpicfRpvstGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 1)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstResetCounters"), ("HP-ICF-RPVST-MIB", "hpicfRpvstExtendedSystemID"), ("HP-ICF-RPVST-MIB", "hpicfRpvstIgnorePVIDInconsistency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstGroup = hpicfRpvstGroup.setStatus('current')
hpicfRpvstVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 2)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanHelloTime"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanForwardDelay"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanMaxAge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanPriority"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRoot"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRpvstStatus"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanResetCounters"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanOperHelloTime"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootPriority"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootPort"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootPathCost"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootMacAddress"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootChangeCounter"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTimeSinceLastTopoChange"), ("HP-ICF-RPVST-MIB", "hpicfVlanTopoChangeCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstVlanGroup = hpicfRpvstVlanGroup.setStatus('current')
hpicfRpvstPortVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 3)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanPathCost"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanPriority"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanResetCounters"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanState"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanDesigBridge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanOperPointToPoint"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanOperEdge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstPortVlanGroup = hpicfRpvstPortVlanGroup.setStatus('current')
hpicfRpvstPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 4)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPortAdminEdge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortAdminPointToPoint"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortAutoEdge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortBpduFiltering"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRestrictedTcn"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRootGuard"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortLoopGuard"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortBpduProtection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstPortGroup = hpicfRpvstPortGroup.setStatus('deprecated')
hpicfRpvstPortVlanCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 5)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRpvstBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRpvstBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRpvstBpduTx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRpvstBpduTxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRstBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRstBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRstBpduTx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanRstBpduTxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanConfigBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanConfigBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanConfigBpduTx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanConfigBpduTxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcnBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcnBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcnBpduTx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcnBpduTxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcDetectCount"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcDetectCountLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcFlagRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcFlagRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcFlagTx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcFlagTxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcAckFlagRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcAckFlagRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcAckFlagTx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanTcAckFlagTxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanAgedBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanAgedBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanStarvedBpduCount"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanStarvedBpduCountLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanInvalidBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanInvalidBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanLoopedBackBpduRx"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanLoopedBackBpduRxLastUpdated"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanErrantBpduRxCount"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanErrantBpduRxCountLastUpdated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstPortVlanCounterGroup = hpicfRpvstPortVlanCounterGroup.setStatus('current')
hpicfRpvstRootHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 6)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootBridgeId"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanRootHistoryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstRootHistoryGroup = hpicfRpvstRootHistoryGroup.setStatus('current')
hpicfRpvstNotificationObjectGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 7)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstErrantBpduDetector"), ("HP-ICF-RPVST-MIB", "hpicfRpvstErrantBpduSrcMac"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanIndex"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortNumber"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNewRootBridgeId"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPreviousRootBridgeId"), ("HP-ICF-RPVST-MIB", "hpicfRpvstDesignatedPort"), ("HP-ICF-RPVST-MIB", "hpicfRpvstRootBridgeChangeTimeStamp"), ("HP-ICF-RPVST-MIB", "hpicfRpvstSuperiorBpduSrcMac"), ("HP-ICF-RPVST-MIB", "hpicfRpvstSuperiorBpduSrcPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstNotificationObjectGrp = hpicfRpvstNotificationObjectGrp.setStatus('current')
hpicfRpvstNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 8)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstErrantBpduReceived"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNewRoot"), ("HP-ICF-RPVST-MIB", "hpicfRpvstRootGuardInconsistency"), ("HP-ICF-RPVST-MIB", "hpicfRpvstLoopGuardInconsistency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstNotificationGroup = hpicfRpvstNotificationGroup.setStatus('current')
hpicfRpvstPvst1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 9)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPathCostMode"), ("HP-ICF-RPVST-MIB", "hpicfRpvstSendTopoChangeCtrl"), ("HP-ICF-RPVST-MIB", "hpicfRpvstLogPortStateTransitions"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortVlanInconsistencyReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstPvst1 = hpicfRpvstPvst1.setStatus('current')
hpicfRpvstNotificationGroupPvst1 = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 10)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstTopologyChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstNotificationGroupPvst1 = hpicfRpvstNotificationGroupPvst1.setStatus('current')
hpicfRpvstNotificationObjectGrpPvst1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 11)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstOldPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstNewPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstTopoChangeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstNotificationObjectGrpPvst1 = hpicfRpvstNotificationObjectGrpPvst1.setStatus('current')
hpicfRpvstTopologyRxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 12)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeRxTime"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeRxMacAddress"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeRxPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstTopologyRxGroup = hpicfRpvstTopologyRxGroup.setStatus('current')
hpicfRpvstTopologyTxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 13)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeTxCurrentPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeTxPreviousPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeTxTime"), ("HP-ICF-RPVST-MIB", "hpicfRpvstVlanTopologyChangeTxPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstTopologyTxGroup = hpicfRpvstTopologyTxGroup.setStatus('current')
hpicfRpvstPortRoleChangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 14)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPortRoleChangeCurrentPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRoleChangePreviousPortRole"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRoleChangeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstPortRoleChangeGroup = hpicfRpvstPortRoleChangeGroup.setStatus('current')
hpicfRpvstPortGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88, 2, 1, 15)).setObjects(("HP-ICF-RPVST-MIB", "hpicfRpvstPortAdminEdge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortAdminPointToPoint"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortAutoEdge"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortBpduFiltering"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRestrictedTcn"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortRootGuard"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortLoopGuard"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortBpduProtection"), ("HP-ICF-RPVST-MIB", "hpicfRpvstPortIeeeRstBpdu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfRpvstPortGroup1 = hpicfRpvstPortGroup1.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-RPVST-MIB", hpicfRpvstOldPortRole=hpicfRpvstOldPortRole, hpicfRpvstPortVlanTable=hpicfRpvstPortVlanTable, hpicfRpvstCompliance1=hpicfRpvstCompliance1, hpicfRpvstPortVlanCounterGroup=hpicfRpvstPortVlanCounterGroup, hpicfRpvstVlanTopologyChangeRxEntry=hpicfRpvstVlanTopologyChangeRxEntry, hpicfRpvstVlanTopologyChangeTxCurrentPortRole=hpicfRpvstVlanTopologyChangeTxCurrentPortRole, hpicfRpvstNewRoot=hpicfRpvstNewRoot, hpicfRpvstPortVlanPriority=hpicfRpvstPortVlanPriority, hpicfRpvstPortAutoEdge=hpicfRpvstPortAutoEdge, hpicfRpvstRootHistoryGroup=hpicfRpvstRootHistoryGroup, hpicfRpvstPortAdminPointToPoint=hpicfRpvstPortAdminPointToPoint, hpicfRpvstPortVlanTcAckFlagRxLastUpdated=hpicfRpvstPortVlanTcAckFlagRxLastUpdated, hpicfRpvstPortRoleChangeTime=hpicfRpvstPortRoleChangeTime, hpicfRpvstPreviousRootBridgeId=hpicfRpvstPreviousRootBridgeId, hpicfRpvstVlanTopologyChangeTxPreviousPortRole=hpicfRpvstVlanTopologyChangeTxPreviousPortRole, hpicfRpvstPortGroup1=hpicfRpvstPortGroup1, hpicfRpvstPortVlanRstBpduRxLastUpdated=hpicfRpvstPortVlanRstBpduRxLastUpdated, hpicfRpvstPortVlanRpvstBpduTx=hpicfRpvstPortVlanRpvstBpduTx, hpicfRpvstVlanForwardDelay=hpicfRpvstVlanForwardDelay, hpicfRpvstPvst1=hpicfRpvstPvst1, hpicfRpvstPortVlanTxCountersTable=hpicfRpvstPortVlanTxCountersTable, hpicfRpvstPortVlanLoopedBackBpduRx=hpicfRpvstPortVlanLoopedBackBpduRx, hpicfRpvstVlanTopologyChangeRxMacAddress=hpicfRpvstVlanTopologyChangeRxMacAddress, hpicfRpvstVlanTable=hpicfRpvstVlanTable, hpicfRpvstGeneralGroup=hpicfRpvstGeneralGroup, hpicfRpvstPortVlanEntry=hpicfRpvstPortVlanEntry, hpicfRpvstPortVlanStarvedBpduCountLastUpdated=hpicfRpvstPortVlanStarvedBpduCountLastUpdated, hpicfRpvstPortVlanTcFlagRx=hpicfRpvstPortVlanTcFlagRx, hpicfRpvstVlanTopologyChangeTxPortId=hpicfRpvstVlanTopologyChangeTxPortId, hpicfRpvstIgnorePVIDInconsistency=hpicfRpvstIgnorePVIDInconsistency, hpicfRpvstPortRoleChangeCurrentPortRole=hpicfRpvstPortRoleChangeCurrentPortRole, hpicfRpvstNewRootBridgeId=hpicfRpvstNewRootBridgeId, hpicfRpvstRootBridgeChangeTimeStamp=hpicfRpvstRootBridgeChangeTimeStamp, hpicfRpvstVlanId=hpicfRpvstVlanId, hpicfRpvstVlanTopologyChangeTxIndex=hpicfRpvstVlanTopologyChangeTxIndex, hpicfRpvstGroups=hpicfRpvstGroups, hpicfRpvstPortVlanTcnBpduRxLastUpdated=hpicfRpvstPortVlanTcnBpduRxLastUpdated, hpicfRpvstVlanResetCounters=hpicfRpvstVlanResetCounters, hpicfRpvstPortVlanConfigBpduRx=hpicfRpvstPortVlanConfigBpduRx, hpicfRpvstSuperiorBpduSrcPort=hpicfRpvstSuperiorBpduSrcPort, hpicfRpvstPortVlanConfigBpduTx=hpicfRpvstPortVlanConfigBpduTx, hpicfRpvstTopoChangeTime=hpicfRpvstTopoChangeTime, hpicfRpvstPortVlanTcAckFlagTx=hpicfRpvstPortVlanTcAckFlagTx, hpicfRpvstErrantBpduDetector=hpicfRpvstErrantBpduDetector, hpicfRpvstPortVlanRstBpduTx=hpicfRpvstPortVlanRstBpduTx, hpicfRpvstVlanTopologyChangeRxTime=hpicfRpvstVlanTopologyChangeRxTime, hpicfRpvstVlanTopologyChangeTxTime=hpicfRpvstVlanTopologyChangeTxTime, hpicfRpvstPortEntry=hpicfRpvstPortEntry, hpicfRpvstPortVlanOperPointToPoint=hpicfRpvstPortVlanOperPointToPoint, hpicfRpvstPortVlanTcAckFlagTxLastUpdated=hpicfRpvstPortVlanTcAckFlagTxLastUpdated, hpicfRpvstSuperiorBpduSrcMac=hpicfRpvstSuperiorBpduSrcMac, hpicfRpvstPortBpduProtection=hpicfRpvstPortBpduProtection, hpicfRpvstVlanTopologyChangeRxTable=hpicfRpvstVlanTopologyChangeRxTable, hpicfRpvstPortGroup=hpicfRpvstPortGroup, hpicfRpvstPortVlanRole=hpicfRpvstPortVlanRole, hpicfRpvstExtendedSystemID=hpicfRpvstExtendedSystemID, hpicfRpvstPortVlanTcnBpduTx=hpicfRpvstPortVlanTcnBpduTx, hpicfRpvstPortVlanRpvstBpduRxLastUpdated=hpicfRpvstPortVlanRpvstBpduRxLastUpdated, hpicfRpvstPortVlanTcFlagTx=hpicfRpvstPortVlanTcFlagTx, hpicfRpvstPortRestrictedTcn=hpicfRpvstPortRestrictedTcn, hpicfRpvstPortVlanTcAckFlagRx=hpicfRpvstPortVlanTcAckFlagRx, hpicfRpvstVlanRpvstStatus=hpicfRpvstVlanRpvstStatus, hpicfRpvstPortVlanInconsistencyReason=hpicfRpvstPortVlanInconsistencyReason, hpicfRpvstVlanHelloTime=hpicfRpvstVlanHelloTime, hpicfRpvstPortRoleChangeIndex=hpicfRpvstPortRoleChangeIndex, hpicfRpvstPortVlanResetCounters=hpicfRpvstPortVlanResetCounters, hpicfRpvstVlanRootChangeCounter=hpicfRpvstVlanRootChangeCounter, hpicfRpvstPortVlanTxCountersEntry=hpicfRpvstPortVlanTxCountersEntry, hpicfRpvstPortVlanGroup=hpicfRpvstPortVlanGroup, hpicfRpvstPortVlanRpvstBpduRx=hpicfRpvstPortVlanRpvstBpduRx, hpicfRpvstNotificationObjectGrpPvst1=hpicfRpvstNotificationObjectGrpPvst1, hpicfRpvstPortRootGuard=hpicfRpvstPortRootGuard, hpicfRpvstPortVlanConfigBpduRxLastUpdated=hpicfRpvstPortVlanConfigBpduRxLastUpdated, hpicfRpvstVlanOperHelloTime=hpicfRpvstVlanOperHelloTime, hpicfRpvstPortRoleChangePreviousPortRole=hpicfRpvstPortRoleChangePreviousPortRole, hpicfRpvstVlanTopologyChangeTxTable=hpicfRpvstVlanTopologyChangeTxTable, hpicfRpvstErrantBpduSrcMac=hpicfRpvstErrantBpduSrcMac, hpicfRpvstVlanRootHistoryTable=hpicfRpvstVlanRootHistoryTable, hpicfRpvstRootGuardInconsistency=hpicfRpvstRootGuardInconsistency, hpicfRpvstVlanGroup=hpicfRpvstVlanGroup, hpicfRpvstPortVlanErrantBpduRxCount=hpicfRpvstPortVlanErrantBpduRxCount, PYSNMP_MODULE_ID=hpicfRpvstMIB, hpicfRpvstCompliance2=hpicfRpvstCompliance2, hpicfRpvstObjects=hpicfRpvstObjects, hpicfRpvstPortVlanRpvstBpduTxLastUpdated=hpicfRpvstPortVlanRpvstBpduTxLastUpdated, hpicfVlanTopoChangeCount=hpicfVlanTopoChangeCount, hpicfRpvstVlanMaxAge=hpicfRpvstVlanMaxAge, hpicfRpvstPortIndex=hpicfRpvstPortIndex, hpicfRpvstPortVlanState=hpicfRpvstPortVlanState, hpicfRpvstVlanTopologyChangeRxPortId=hpicfRpvstVlanTopologyChangeRxPortId, hpicfRpvstPortVlanInvalidBpduRx=hpicfRpvstPortVlanInvalidBpduRx, PointToPoint=PointToPoint, hpicfRpvstVlanRootHistoryIndex=hpicfRpvstVlanRootHistoryIndex, hpicfRpvstNewPortRole=hpicfRpvstNewPortRole, hpicfRpvstNotificationGroupPvst1=hpicfRpvstNotificationGroupPvst1, hpicfRpvstNotificationObjectGrp=hpicfRpvstNotificationObjectGrp, hpicfRpvstResetCounters=hpicfRpvstResetCounters, hpicfRpvstPortVlanDesigBridge=hpicfRpvstPortVlanDesigBridge, hpicfRpvstGroup=hpicfRpvstGroup, hpicfRpvstLoopGuardInconsistency=hpicfRpvstLoopGuardInconsistency, hpicfRpvstConformance=hpicfRpvstConformance, hpicfRpvstPortVlanLoopedBackBpduRxLastUpdated=hpicfRpvstPortVlanLoopedBackBpduRxLastUpdated, hpicfRpvstPortVlanTcDetectCountLastUpdated=hpicfRpvstPortVlanTcDetectCountLastUpdated, hpicfRpvstPortNumber=hpicfRpvstPortNumber, hpicfRpvstPathCostMode=hpicfRpvstPathCostMode, hpicfRpvstCompliance3=hpicfRpvstCompliance3, hpicfRpvstVlanRootPathCost=hpicfRpvstVlanRootPathCost, hpicfRpvstPortVlanTcFlagTxLastUpdated=hpicfRpvstPortVlanTcFlagTxLastUpdated, hpicfRpvstVlanTopologyChangeTxEntry=hpicfRpvstVlanTopologyChangeTxEntry, hpicfRpvstPortAdminEdge=hpicfRpvstPortAdminEdge, hpicfRpvstPortVlanPathCost=hpicfRpvstPortVlanPathCost, hpicfRpvstVlanRootHistoryEntry=hpicfRpvstVlanRootHistoryEntry, hpicfRpvstVlanTimeSinceLastTopoChange=hpicfRpvstVlanTimeSinceLastTopoChange, hpicfRpvstVlanRootMacAddress=hpicfRpvstVlanRootMacAddress, hpicfRpvstVlanRootHistoryTime=hpicfRpvstVlanRootHistoryTime, hpicfRpvstVlanIndex=hpicfRpvstVlanIndex, hpicfRpvstVlanRootPort=hpicfRpvstVlanRootPort, hpicfRpvstSendTopoChangeCtrl=hpicfRpvstSendTopoChangeCtrl, hpicfRpvstTopologyTxGroup=hpicfRpvstTopologyTxGroup, hpicfRpvstDesignatedPort=hpicfRpvstDesignatedPort, hpicfRpvstVlanRootBridgeId=hpicfRpvstVlanRootBridgeId, hpicfRpvstTopologyRxGroup=hpicfRpvstTopologyRxGroup, hpicfRpvstPortBpduFiltering=hpicfRpvstPortBpduFiltering, hpicfRpvstPortVlanTcnBpduRx=hpicfRpvstPortVlanTcnBpduRx, hpicfRpvstPortRoleChangeGroup=hpicfRpvstPortRoleChangeGroup, hpicfRpvstPortTable=hpicfRpvstPortTable, hpicfRpvstLogPortStateTransitions=hpicfRpvstLogPortStateTransitions, hpicfRpvstCompliances=hpicfRpvstCompliances, hpicfRpvstNotifications=hpicfRpvstNotifications, hpicfRpvstErrantBpduReceived=hpicfRpvstErrantBpduReceived, hpicfRpvstPortVlanInvalidBpduRxLastUpdated=hpicfRpvstPortVlanInvalidBpduRxLastUpdated, hpicfRpvstPortVlanAgedBpduRx=hpicfRpvstPortVlanAgedBpduRx, hpicfRpvstTopologyChange=hpicfRpvstTopologyChange, hpicfRpvstPortVlanRstBpduRx=hpicfRpvstPortVlanRstBpduRx, hpicfRpvstPortVlanTcFlagRxLastUpdated=hpicfRpvstPortVlanTcFlagRxLastUpdated, hpicfRpvstPortVlanRstBpduTxLastUpdated=hpicfRpvstPortVlanRstBpduTxLastUpdated, hpicfRpvstPortVlanTcnBpduTxLastUpdated=hpicfRpvstPortVlanTcnBpduTxLastUpdated, hpicfRpvstPortRoleChangeTable=hpicfRpvstPortRoleChangeTable, hpicfRpvstVlanRoot=hpicfRpvstVlanRoot, hpicfRpvstPortVlanOperEdge=hpicfRpvstPortVlanOperEdge, hpicfRpvstVlanRootPriority=hpicfRpvstVlanRootPriority, hpicfRpvstPortRoleChangeEntry=hpicfRpvstPortRoleChangeEntry, hpicfRpvstMIB=hpicfRpvstMIB, hpicfRpvstVlanPriority=hpicfRpvstVlanPriority, hpicfRpvstNotificationGroup=hpicfRpvstNotificationGroup, hpicfRpvstVlanTopologyChangeRxIndex=hpicfRpvstVlanTopologyChangeRxIndex, hpicfRpvstPortVlanConfigBpduTxLastUpdated=hpicfRpvstPortVlanConfigBpduTxLastUpdated, hpicfRpvstPortVlanRxCountersTable=hpicfRpvstPortVlanRxCountersTable, hpicfRpvstPortIeeeRstBpdu=hpicfRpvstPortIeeeRstBpdu, hpicfRpvstPortLoopGuard=hpicfRpvstPortLoopGuard, hpicfRpvstVlanEntry=hpicfRpvstVlanEntry, hpicfRpvstPortVlanTcDetectCount=hpicfRpvstPortVlanTcDetectCount, hpicfRpvstPortVlanAgedBpduRxLastUpdated=hpicfRpvstPortVlanAgedBpduRxLastUpdated, hpicfRpvstPortVlanRxCountersEntry=hpicfRpvstPortVlanRxCountersEntry, hpicfRpvstPortVlanStarvedBpduCount=hpicfRpvstPortVlanStarvedBpduCount, hpicfRpvstPortVlanErrantBpduRxCountLastUpdated=hpicfRpvstPortVlanErrantBpduRxCountLastUpdated)
