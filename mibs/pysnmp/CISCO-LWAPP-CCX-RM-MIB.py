#
# PySNMP MIB module CISCO-LWAPP-CCX-RM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-CCX-RM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:47:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
cLApDot11IfSlotId, cLApSysMacAddress, cLApDot11IfEntry = mibBuilder.importSymbols("CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId", "cLApSysMacAddress", "cLApDot11IfEntry")
cLWlanConfigEntry, = mibBuilder.importSymbols("CISCO-LWAPP-WLAN-MIB", "cLWlanConfigEntry")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Bits, Counter64, Unsigned32, NotificationType, Gauge32, TimeTicks, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Bits", "Counter64", "Unsigned32", "NotificationType", "Gauge32", "TimeTicks", "ObjectIdentity", "IpAddress")
TimeStamp, DisplayString, TimeInterval, TextualConvention, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TimeInterval", "TextualConvention", "MacAddress", "TruthValue")
ciscoLwappCcxRmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 520))
ciscoLwappCcxRmMIB.setRevisions(('2012-02-21 00:00', '2006-04-11 00:00',))
if mibBuilder.loadTexts: ciscoLwappCcxRmMIB.setLastUpdated('201202210000Z')
if mibBuilder.loadTexts: ciscoLwappCcxRmMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappCcxRmMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 0))
ciscoLwappCcxRmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 1))
ciscoLwappCcxRmMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 2))
clcrDot11aConfigGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 1))
clcrDot11bConfigGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 2))
clcrApIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3))
clcrClientMeasurementReport = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 4))
clcrWlanConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 5))
clcrdot11aBeaconEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrdot11aBeaconEnabled.setStatus('current')
clcrdot11aBeaconInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 1, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(6000, 3240000)).clone(6000)).setUnits('hundredths-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrdot11aBeaconInterval.setStatus('deprecated')
clcrdot11aBeaconIntvl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 1, 3), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrdot11aBeaconIntvl.setStatus('current')
clcrdot11bBeaconEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrdot11bBeaconEnabled.setStatus('current')
clcrdot11bBeaconInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 2, 2), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(6000, 3240000)).clone(6000)).setUnits('hundredths-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrdot11bBeaconInterval.setStatus('deprecated')
clcrdot11bBeaconIntvl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 2, 3), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrdot11bBeaconIntvl.setStatus('current')
clcrAPIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3, 1), )
if mibBuilder.loadTexts: clcrAPIfTable.setStatus('current')
clcrAPIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3, 1, 1), )
cLApDot11IfEntry.registerAugmentions(("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfEntry"))
clcrAPIfEntry.setIndexNames(*cLApDot11IfEntry.getIndexNames())
if mibBuilder.loadTexts: clcrAPIfEntry.setStatus('current')
clcrAPIfOverrideGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrAPIfOverrideGlobal.setStatus('current')
clcrAPIfBeaconEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrAPIfBeaconEnabled.setStatus('current')
clcrAPIfBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3, 1, 1, 3), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(6000, 3240000)).clone(6000)).setUnits('hundredths-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrAPIfBeaconInterval.setStatus('deprecated')
clcrAPIfBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 3, 1, 1, 4), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrAPIfBeaconIntvl.setStatus('current')
clcrClientBeaconReportTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 4, 1), )
if mibBuilder.loadTexts: clcrClientBeaconReportTable.setStatus('current')
clcrClientBeaconReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-CCX-RM-MIB", "clcrClientMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"))
if mibBuilder.loadTexts: clcrClientBeaconReportEntry.setStatus('current')
clcrClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: clcrClientMacAddress.setStatus('current')
clcrClientRxPowerSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, 30))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: clcrClientRxPowerSignal.setStatus('current')
clcrClientTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 4, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clcrClientTimeStamp.setStatus('current')
clcrWlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 5, 1), )
if mibBuilder.loadTexts: clcrWlanTable.setStatus('current')
clcrWlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 5, 1, 1), )
cLWlanConfigEntry.registerAugmentions(("CISCO-LWAPP-CCX-RM-MIB", "clcrWlanEntry"))
clcrWlanEntry.setIndexNames(*cLWlanConfigEntry.getIndexNames())
if mibBuilder.loadTexts: clcrWlanEntry.setStatus('current')
clcrVersionIESupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 5, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clcrVersionIESupport.setStatus('current')
clcrAironetIESupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 520, 1, 5, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clcrAironetIESupport.setStatus('current')
ciscoLwappCcxRmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 1))
ciscoLwappCcxRmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2))
ciscoLwappCcxRmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 1, 1)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmDot11aConfigGroup"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmDot11bConfigGroup"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmApIfConfigGroup"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmBeaconReportGroup"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmD11WlanConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmMIBCompliance = ciscoLwappCcxRmMIBCompliance.setStatus('deprecated')
ciscoLwappCcxRmMIBComplianceVer1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 1, 2)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmDot11aConfigGroupVer1"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmDot11bConfigGroupVer1"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmApIfConfigGroupVer1"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmBeaconReportGroup"), ("CISCO-LWAPP-CCX-RM-MIB", "ciscoLwappCcxRmD11WlanConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmMIBComplianceVer1 = ciscoLwappCcxRmMIBComplianceVer1.setStatus('current')
ciscoLwappCcxRmDot11aConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 1)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11aBeaconEnabled"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11aBeaconInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmDot11aConfigGroup = ciscoLwappCcxRmDot11aConfigGroup.setStatus('deprecated')
ciscoLwappCcxRmDot11bConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 2)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11bBeaconEnabled"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11bBeaconInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmDot11bConfigGroup = ciscoLwappCcxRmDot11bConfigGroup.setStatus('deprecated')
ciscoLwappCcxRmApIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 3)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfOverrideGlobal"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfBeaconEnabled"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfBeaconInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmApIfConfigGroup = ciscoLwappCcxRmApIfConfigGroup.setStatus('deprecated')
ciscoLwappCcxRmBeaconReportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 4)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrClientRxPowerSignal"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrClientTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmBeaconReportGroup = ciscoLwappCcxRmBeaconReportGroup.setStatus('current')
ciscoLwappCcxRmD11WlanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 5)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrVersionIESupport"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrAironetIESupport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmD11WlanConfigGroup = ciscoLwappCcxRmD11WlanConfigGroup.setStatus('current')
ciscoLwappCcxRmDot11aConfigGroupVer1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 6)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11aBeaconEnabled"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11aBeaconIntvl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmDot11aConfigGroupVer1 = ciscoLwappCcxRmDot11aConfigGroupVer1.setStatus('current')
ciscoLwappCcxRmDot11bConfigGroupVer1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 7)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11bBeaconEnabled"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrdot11bBeaconIntvl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmDot11bConfigGroupVer1 = ciscoLwappCcxRmDot11bConfigGroupVer1.setStatus('current')
ciscoLwappCcxRmApIfConfigGroupVer1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 520, 2, 2, 8)).setObjects(("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfOverrideGlobal"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfBeaconEnabled"), ("CISCO-LWAPP-CCX-RM-MIB", "clcrAPIfBeaconIntvl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappCcxRmApIfConfigGroupVer1 = ciscoLwappCcxRmApIfConfigGroupVer1.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-CCX-RM-MIB", clcrdot11bBeaconIntvl=clcrdot11bBeaconIntvl, ciscoLwappCcxRmMIB=ciscoLwappCcxRmMIB, clcrClientBeaconReportTable=clcrClientBeaconReportTable, ciscoLwappCcxRmApIfConfigGroupVer1=ciscoLwappCcxRmApIfConfigGroupVer1, clcrWlanTable=clcrWlanTable, clcrVersionIESupport=clcrVersionIESupport, clcrdot11aBeaconInterval=clcrdot11aBeaconInterval, clcrClientTimeStamp=clcrClientTimeStamp, clcrDot11aConfigGlobal=clcrDot11aConfigGlobal, ciscoLwappCcxRmDot11bConfigGroup=ciscoLwappCcxRmDot11bConfigGroup, ciscoLwappCcxRmMIBObjects=ciscoLwappCcxRmMIBObjects, ciscoLwappCcxRmMIBConform=ciscoLwappCcxRmMIBConform, ciscoLwappCcxRmDot11bConfigGroupVer1=ciscoLwappCcxRmDot11bConfigGroupVer1, clcrdot11aBeaconEnabled=clcrdot11aBeaconEnabled, ciscoLwappCcxRmMIBGroups=ciscoLwappCcxRmMIBGroups, clcrWlanEntry=clcrWlanEntry, clcrAPIfEntry=clcrAPIfEntry, clcrAironetIESupport=clcrAironetIESupport, clcrdot11bBeaconInterval=clcrdot11bBeaconInterval, ciscoLwappCcxRmMIBComplianceVer1=ciscoLwappCcxRmMIBComplianceVer1, clcrAPIfBeaconInterval=clcrAPIfBeaconInterval, ciscoLwappCcxRmDot11aConfigGroup=ciscoLwappCcxRmDot11aConfigGroup, ciscoLwappCcxRmD11WlanConfigGroup=ciscoLwappCcxRmD11WlanConfigGroup, ciscoLwappCcxRmMIBCompliance=ciscoLwappCcxRmMIBCompliance, clcrWlanConfig=clcrWlanConfig, clcrAPIfBeaconEnabled=clcrAPIfBeaconEnabled, clcrAPIfTable=clcrAPIfTable, clcrAPIfOverrideGlobal=clcrAPIfOverrideGlobal, clcrClientBeaconReportEntry=clcrClientBeaconReportEntry, clcrdot11bBeaconEnabled=clcrdot11bBeaconEnabled, ciscoLwappCcxRmBeaconReportGroup=ciscoLwappCcxRmBeaconReportGroup, clcrDot11bConfigGlobal=clcrDot11bConfigGlobal, clcrdot11aBeaconIntvl=clcrdot11aBeaconIntvl, ciscoLwappCcxRmMIBCompliances=ciscoLwappCcxRmMIBCompliances, ciscoLwappCcxRmMIBNotifs=ciscoLwappCcxRmMIBNotifs, clcrClientMeasurementReport=clcrClientMeasurementReport, clcrClientMacAddress=clcrClientMacAddress, PYSNMP_MODULE_ID=ciscoLwappCcxRmMIB, clcrClientRxPowerSignal=clcrClientRxPowerSignal, clcrAPIfBeaconIntvl=clcrAPIfBeaconIntvl, ciscoLwappCcxRmDot11aConfigGroupVer1=ciscoLwappCcxRmDot11aConfigGroupVer1, ciscoLwappCcxRmApIfConfigGroup=ciscoLwappCcxRmApIfConfigGroup, clcrApIfConfig=clcrApIfConfig)
