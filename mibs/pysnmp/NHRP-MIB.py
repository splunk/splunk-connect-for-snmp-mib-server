#
# PySNMP MIB module NHRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NHRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:51:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, Counter32, Integer32, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, IpAddress, ObjectIdentity, mib_2, TimeTicks, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Counter32", "Integer32", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "IpAddress", "ObjectIdentity", "mib-2", "TimeTicks", "ModuleIdentity", "Gauge32")
StorageType, TextualConvention, RowStatus, TimeStamp, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "RowStatus", "TimeStamp", "TruthValue", "DisplayString")
nhrpMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 71))
nhrpMIB.setRevisions(('1999-08-26 00:00',))
if mibBuilder.loadTexts: nhrpMIB.setLastUpdated('9908260000Z')
if mibBuilder.loadTexts: nhrpMIB.setOrganization('Internetworking Over NBMA (ion) Working Group')
class NhrpGenAddr(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

nhrpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 1))
nhrpGeneralObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 1, 1))
nhrpNextIndex = MibScalar((1, 3, 6, 1, 2, 1, 71, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpNextIndex.setStatus('current')
nhrpCacheTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 1, 2), )
if mibBuilder.loadTexts: nhrpCacheTable.setStatus('current')
nhrpCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpCacheInternetworkAddrType"), (0, "NHRP-MIB", "nhrpCacheInternetworkAddr"), (0, "IF-MIB", "ifIndex"), (0, "NHRP-MIB", "nhrpCacheIndex"))
if mibBuilder.loadTexts: nhrpCacheEntry.setStatus('current')
nhrpCacheInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 1), AddressFamilyNumbers())
if mibBuilder.loadTexts: nhrpCacheInternetworkAddrType.setStatus('current')
nhrpCacheInternetworkAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 2), NhrpGenAddr())
if mibBuilder.loadTexts: nhrpCacheInternetworkAddr.setStatus('current')
nhrpCacheIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpCacheIndex.setStatus('current')
nhrpCachePrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpCachePrefixLength.setStatus('current')
nhrpCacheNextHopInternetworkAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 5), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheNextHopInternetworkAddr.setStatus('current')
nhrpCacheNbmaAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 6), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheNbmaAddrType.setStatus('current')
nhrpCacheNbmaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 7), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheNbmaAddr.setStatus('current')
nhrpCacheNbmaSubaddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 8), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheNbmaSubaddr.setStatus('current')
nhrpCacheType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("register", 2), ("resolveAuthoritative", 3), ("resoveNonauthoritative", 4), ("transit", 5), ("administrativelyAdded", 6), ("atmarp", 7), ("scsp", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheType.setStatus('current')
nhrpCacheState = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incomplete", 1), ("ackReply", 2), ("nakReply", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpCacheState.setStatus('current')
nhrpCacheHoldingTimeValid = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpCacheHoldingTimeValid.setStatus('current')
nhrpCacheHoldingTime = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpCacheHoldingTime.setStatus('current')
nhrpCacheNegotiatedMtu = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpCacheNegotiatedMtu.setStatus('current')
nhrpCachePreference = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCachePreference.setStatus('current')
nhrpCacheStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 15), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheStorageType.setStatus('current')
nhrpCacheRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 2, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpCacheRowStatus.setStatus('current')
nhrpPurgeReqTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 1, 3), )
if mibBuilder.loadTexts: nhrpPurgeReqTable.setStatus('current')
nhrpPurgeReqEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpPurgeIndex"))
if mibBuilder.loadTexts: nhrpPurgeReqEntry.setStatus('current')
nhrpPurgeIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpPurgeIndex.setStatus('current')
nhrpPurgeCacheIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpPurgeCacheIdentifier.setStatus('current')
nhrpPurgePrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpPurgePrefixLength.setStatus('current')
nhrpPurgeRequestID = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpPurgeRequestID.setStatus('current')
nhrpPurgeReplyExpected = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpPurgeReplyExpected.setStatus('current')
nhrpPurgeRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpPurgeRowStatus.setStatus('current')
nhrpClientObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 1, 2))
nhrpClientTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 2, 1), )
if mibBuilder.loadTexts: nhrpClientTable.setStatus('current')
nhrpClientEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpClientIndex"))
if mibBuilder.loadTexts: nhrpClientEntry.setStatus('current')
nhrpClientIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpClientIndex.setStatus('current')
nhrpClientInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 2), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientInternetworkAddrType.setStatus('current')
nhrpClientInternetworkAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 3), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientInternetworkAddr.setStatus('current')
nhrpClientNbmaAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 4), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNbmaAddrType.setStatus('current')
nhrpClientNbmaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 5), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNbmaAddr.setStatus('current')
nhrpClientNbmaSubaddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 6), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNbmaSubaddr.setStatus('current')
nhrpClientInitialRequestTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientInitialRequestTimeout.setStatus('current')
nhrpClientRegistrationRequestRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientRegistrationRequestRetries.setStatus('current')
nhrpClientResolutionRequestRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientResolutionRequestRetries.setStatus('current')
nhrpClientPurgeRequestRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientPurgeRequestRetries.setStatus('current')
nhrpClientDefaultMtu = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(9180)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientDefaultMtu.setStatus('current')
nhrpClientHoldTime = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(900)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientHoldTime.setStatus('current')
nhrpClientRequestID = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientRequestID.setStatus('current')
nhrpClientStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 14), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientStorageType.setStatus('current')
nhrpClientRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 1, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientRowStatus.setStatus('current')
nhrpClientRegistrationTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 2, 2), )
if mibBuilder.loadTexts: nhrpClientRegistrationTable.setStatus('current')
nhrpClientRegistrationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpClientIndex"), (0, "NHRP-MIB", "nhrpClientRegIndex"))
if mibBuilder.loadTexts: nhrpClientRegistrationEntry.setStatus('current')
nhrpClientRegIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpClientRegIndex.setStatus('current')
nhrpClientRegUniqueness = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("requestUnique", 1), ("requestNotUnique", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientRegUniqueness.setStatus('current')
nhrpClientRegState = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("registering", 2), ("ackRegisterReply", 3), ("nakRegisterReply", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientRegState.setStatus('current')
nhrpClientRegRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientRegRowStatus.setStatus('current')
nhrpClientNhsTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 2, 3), )
if mibBuilder.loadTexts: nhrpClientNhsTable.setStatus('current')
nhrpClientNhsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpClientIndex"), (0, "NHRP-MIB", "nhrpClientNhsIndex"))
if mibBuilder.loadTexts: nhrpClientNhsEntry.setStatus('current')
nhrpClientNhsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpClientNhsIndex.setStatus('current')
nhrpClientNhsInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 2), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNhsInternetworkAddrType.setStatus('current')
nhrpClientNhsInternetworkAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 3), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNhsInternetworkAddr.setStatus('current')
nhrpClientNhsNbmaAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 4), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNhsNbmaAddrType.setStatus('current')
nhrpClientNhsNbmaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 5), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNhsNbmaAddr.setStatus('current')
nhrpClientNhsNbmaSubaddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 6), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNhsNbmaSubaddr.setStatus('current')
nhrpClientNhsInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientNhsInUse.setStatus('current')
nhrpClientNhsRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpClientNhsRowStatus.setStatus('current')
nhrpClientStatTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 2, 4), )
if mibBuilder.loadTexts: nhrpClientStatTable.setStatus('current')
nhrpClientStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpClientIndex"))
if mibBuilder.loadTexts: nhrpClientStatEntry.setStatus('current')
nhrpClientStatTxResolveReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatTxResolveReq.setStatus('current')
nhrpClientStatRxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxResolveReplyAck.setStatus('current')
nhrpClientStatRxResolveReplyNakProhibited = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxResolveReplyNakProhibited.setStatus('current')
nhrpClientStatRxResolveReplyNakInsufResources = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxResolveReplyNakInsufResources.setStatus('current')
nhrpClientStatRxResolveReplyNakNoBinding = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxResolveReplyNakNoBinding.setStatus('current')
nhrpClientStatRxResolveReplyNakNotUnique = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxResolveReplyNakNotUnique.setStatus('current')
nhrpClientStatTxRegisterReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatTxRegisterReq.setStatus('current')
nhrpClientStatRxRegisterAck = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxRegisterAck.setStatus('current')
nhrpClientStatRxRegisterNakProhibited = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxRegisterNakProhibited.setStatus('current')
nhrpClientStatRxRegisterNakInsufResources = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxRegisterNakInsufResources.setStatus('current')
nhrpClientStatRxRegisterNakAlreadyReg = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxRegisterNakAlreadyReg.setStatus('current')
nhrpClientStatRxPurgeReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxPurgeReq.setStatus('current')
nhrpClientStatTxPurgeReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatTxPurgeReq.setStatus('current')
nhrpClientStatRxPurgeReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxPurgeReply.setStatus('current')
nhrpClientStatTxPurgeReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatTxPurgeReply.setStatus('current')
nhrpClientStatTxErrorIndication = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatTxErrorIndication.setStatus('current')
nhrpClientStatRxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrUnrecognizedExtension.setStatus('current')
nhrpClientStatRxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrLoopDetected.setStatus('current')
nhrpClientStatRxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrProtoAddrUnreachable.setStatus('current')
nhrpClientStatRxErrProtoError = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrProtoError.setStatus('current')
nhrpClientStatRxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrSduSizeExceeded.setStatus('current')
nhrpClientStatRxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrInvalidExtension.setStatus('current')
nhrpClientStatRxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrAuthenticationFailure.setStatus('current')
nhrpClientStatRxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatRxErrHopCountExceeded.setStatus('current')
nhrpClientStatDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 2, 4, 1, 25), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpClientStatDiscontinuityTime.setStatus('current')
nhrpServerObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 1, 3))
nhrpServerTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 3, 1), )
if mibBuilder.loadTexts: nhrpServerTable.setStatus('current')
nhrpServerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpServerIndex"))
if mibBuilder.loadTexts: nhrpServerEntry.setStatus('current')
nhrpServerIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpServerIndex.setStatus('current')
nhrpServerInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 2), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerInternetworkAddrType.setStatus('current')
nhrpServerInternetworkAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 3), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerInternetworkAddr.setStatus('current')
nhrpServerNbmaAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 4), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNbmaAddrType.setStatus('current')
nhrpServerNbmaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 5), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNbmaAddr.setStatus('current')
nhrpServerNbmaSubaddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 6), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNbmaSubaddr.setStatus('current')
nhrpServerStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 7), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerStorageType.setStatus('current')
nhrpServerRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerRowStatus.setStatus('current')
nhrpServerCacheTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 3, 2), )
if mibBuilder.loadTexts: nhrpServerCacheTable.setStatus('current')
nhrpServerCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 3, 2, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpCacheInternetworkAddrType"), (0, "NHRP-MIB", "nhrpCacheInternetworkAddr"), (0, "IF-MIB", "ifIndex"), (0, "NHRP-MIB", "nhrpCacheIndex"))
if mibBuilder.loadTexts: nhrpServerCacheEntry.setStatus('current')
nhrpServerCacheAuthoritative = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerCacheAuthoritative.setStatus('current')
nhrpServerCacheUniqueness = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerCacheUniqueness.setStatus('current')
nhrpServerNhcTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 3, 3), )
if mibBuilder.loadTexts: nhrpServerNhcTable.setStatus('current')
nhrpServerNhcEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpServerIndex"), (0, "NHRP-MIB", "nhrpServerNhcIndex"))
if mibBuilder.loadTexts: nhrpServerNhcEntry.setStatus('current')
nhrpServerNhcIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: nhrpServerNhcIndex.setStatus('current')
nhrpServerNhcPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcPrefixLength.setStatus('current')
nhrpServerNhcInternetworkAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 3), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcInternetworkAddrType.setStatus('current')
nhrpServerNhcInternetworkAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 4), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcInternetworkAddr.setStatus('current')
nhrpServerNhcNbmaAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 5), AddressFamilyNumbers()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcNbmaAddrType.setStatus('current')
nhrpServerNhcNbmaAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 6), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcNbmaAddr.setStatus('current')
nhrpServerNhcNbmaSubaddr = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 7), NhrpGenAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcNbmaSubaddr.setStatus('current')
nhrpServerNhcInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerNhcInUse.setStatus('current')
nhrpServerNhcRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 3, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nhrpServerNhcRowStatus.setStatus('current')
nhrpServerStatTable = MibTable((1, 3, 6, 1, 2, 1, 71, 1, 3, 4), )
if mibBuilder.loadTexts: nhrpServerStatTable.setStatus('current')
nhrpServerStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1), ).setIndexNames((0, "NHRP-MIB", "nhrpServerIndex"))
if mibBuilder.loadTexts: nhrpServerStatEntry.setStatus('current')
nhrpServerStatRxResolveReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxResolveReq.setStatus('current')
nhrpServerStatTxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxResolveReplyAck.setStatus('current')
nhrpServerStatTxResolveReplyNakProhibited = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxResolveReplyNakProhibited.setStatus('current')
nhrpServerStatTxResolveReplyNakInsufResources = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxResolveReplyNakInsufResources.setStatus('current')
nhrpServerStatTxResolveReplyNakNoBinding = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxResolveReplyNakNoBinding.setStatus('current')
nhrpServerStatTxResolveReplyNakNotUnique = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxResolveReplyNakNotUnique.setStatus('current')
nhrpServerStatRxRegisterReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxRegisterReq.setStatus('current')
nhrpServerStatTxRegisterAck = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxRegisterAck.setStatus('current')
nhrpServerStatTxRegisterNakProhibited = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxRegisterNakProhibited.setStatus('current')
nhrpServerStatTxRegisterNakInsufResources = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxRegisterNakInsufResources.setStatus('current')
nhrpServerStatTxRegisterNakAlreadyReg = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxRegisterNakAlreadyReg.setStatus('current')
nhrpServerStatRxPurgeReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxPurgeReq.setStatus('current')
nhrpServerStatTxPurgeReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxPurgeReq.setStatus('current')
nhrpServerStatRxPurgeReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxPurgeReply.setStatus('current')
nhrpServerStatTxPurgeReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxPurgeReply.setStatus('current')
nhrpServerStatRxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrUnrecognizedExtension.setStatus('current')
nhrpServerStatRxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrLoopDetected.setStatus('current')
nhrpServerStatRxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrProtoAddrUnreachable.setStatus('current')
nhrpServerStatRxErrProtoError = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrProtoError.setStatus('current')
nhrpServerStatRxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrSduSizeExceeded.setStatus('current')
nhrpServerStatRxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrInvalidExtension.setStatus('current')
nhrpServerStatRxErrInvalidResReplyReceived = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrInvalidResReplyReceived.setStatus('current')
nhrpServerStatRxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrAuthenticationFailure.setStatus('current')
nhrpServerStatRxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatRxErrHopCountExceeded.setStatus('current')
nhrpServerStatTxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrUnrecognizedExtension.setStatus('current')
nhrpServerStatTxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrLoopDetected.setStatus('current')
nhrpServerStatTxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrProtoAddrUnreachable.setStatus('current')
nhrpServerStatTxErrProtoError = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrProtoError.setStatus('current')
nhrpServerStatTxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrSduSizeExceeded.setStatus('current')
nhrpServerStatTxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrInvalidExtension.setStatus('current')
nhrpServerStatTxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrAuthenticationFailure.setStatus('current')
nhrpServerStatTxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatTxErrHopCountExceeded.setStatus('current')
nhrpServerStatFwResolveReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwResolveReq.setStatus('current')
nhrpServerStatFwResolveReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwResolveReply.setStatus('current')
nhrpServerStatFwRegisterReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwRegisterReq.setStatus('current')
nhrpServerStatFwRegisterReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwRegisterReply.setStatus('current')
nhrpServerStatFwPurgeReq = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwPurgeReq.setStatus('current')
nhrpServerStatFwPurgeReply = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwPurgeReply.setStatus('current')
nhrpServerStatFwErrorIndication = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatFwErrorIndication.setStatus('current')
nhrpServerStatDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 71, 1, 3, 4, 1, 40), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nhrpServerStatDiscontinuityTime.setStatus('current')
nhrpConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 2))
nhrpCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 2, 1))
nhrpGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 71, 2, 2))
nhrpModuleCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 71, 2, 1, 1)).setObjects(("NHRP-MIB", "nhrpGeneralGroup"), ("NHRP-MIB", "nhrpClientGroup"), ("NHRP-MIB", "nhrpServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nhrpModuleCompliance = nhrpModuleCompliance.setStatus('current')
nhrpGeneralGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 71, 2, 2, 1)).setObjects(("NHRP-MIB", "nhrpNextIndex"), ("NHRP-MIB", "nhrpCachePrefixLength"), ("NHRP-MIB", "nhrpCacheNextHopInternetworkAddr"), ("NHRP-MIB", "nhrpCacheNbmaAddrType"), ("NHRP-MIB", "nhrpCacheNbmaAddr"), ("NHRP-MIB", "nhrpCacheNbmaSubaddr"), ("NHRP-MIB", "nhrpCacheType"), ("NHRP-MIB", "nhrpCacheState"), ("NHRP-MIB", "nhrpCacheHoldingTimeValid"), ("NHRP-MIB", "nhrpCacheHoldingTime"), ("NHRP-MIB", "nhrpCacheNegotiatedMtu"), ("NHRP-MIB", "nhrpCachePreference"), ("NHRP-MIB", "nhrpCacheStorageType"), ("NHRP-MIB", "nhrpCacheRowStatus"), ("NHRP-MIB", "nhrpPurgeCacheIdentifier"), ("NHRP-MIB", "nhrpPurgePrefixLength"), ("NHRP-MIB", "nhrpPurgeRequestID"), ("NHRP-MIB", "nhrpPurgeReplyExpected"), ("NHRP-MIB", "nhrpPurgeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nhrpGeneralGroup = nhrpGeneralGroup.setStatus('current')
nhrpClientGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 71, 2, 2, 2)).setObjects(("NHRP-MIB", "nhrpClientInternetworkAddrType"), ("NHRP-MIB", "nhrpClientInternetworkAddr"), ("NHRP-MIB", "nhrpClientNbmaAddrType"), ("NHRP-MIB", "nhrpClientNbmaAddr"), ("NHRP-MIB", "nhrpClientNbmaSubaddr"), ("NHRP-MIB", "nhrpClientInitialRequestTimeout"), ("NHRP-MIB", "nhrpClientRegistrationRequestRetries"), ("NHRP-MIB", "nhrpClientResolutionRequestRetries"), ("NHRP-MIB", "nhrpClientPurgeRequestRetries"), ("NHRP-MIB", "nhrpClientDefaultMtu"), ("NHRP-MIB", "nhrpClientHoldTime"), ("NHRP-MIB", "nhrpClientRequestID"), ("NHRP-MIB", "nhrpClientStorageType"), ("NHRP-MIB", "nhrpClientRowStatus"), ("NHRP-MIB", "nhrpClientRegUniqueness"), ("NHRP-MIB", "nhrpClientRegState"), ("NHRP-MIB", "nhrpClientRegRowStatus"), ("NHRP-MIB", "nhrpClientNhsInternetworkAddrType"), ("NHRP-MIB", "nhrpClientNhsInternetworkAddr"), ("NHRP-MIB", "nhrpClientNhsNbmaAddrType"), ("NHRP-MIB", "nhrpClientNhsNbmaAddr"), ("NHRP-MIB", "nhrpClientNhsNbmaSubaddr"), ("NHRP-MIB", "nhrpClientNhsInUse"), ("NHRP-MIB", "nhrpClientNhsRowStatus"), ("NHRP-MIB", "nhrpClientStatTxResolveReq"), ("NHRP-MIB", "nhrpClientStatRxResolveReplyAck"), ("NHRP-MIB", "nhrpClientStatRxResolveReplyNakProhibited"), ("NHRP-MIB", "nhrpClientStatRxResolveReplyNakInsufResources"), ("NHRP-MIB", "nhrpClientStatRxResolveReplyNakNoBinding"), ("NHRP-MIB", "nhrpClientStatRxResolveReplyNakNotUnique"), ("NHRP-MIB", "nhrpClientStatTxRegisterReq"), ("NHRP-MIB", "nhrpClientStatRxRegisterAck"), ("NHRP-MIB", "nhrpClientStatRxRegisterNakProhibited"), ("NHRP-MIB", "nhrpClientStatRxRegisterNakInsufResources"), ("NHRP-MIB", "nhrpClientStatRxRegisterNakAlreadyReg"), ("NHRP-MIB", "nhrpClientStatRxPurgeReq"), ("NHRP-MIB", "nhrpClientStatTxPurgeReq"), ("NHRP-MIB", "nhrpClientStatRxPurgeReply"), ("NHRP-MIB", "nhrpClientStatTxPurgeReply"), ("NHRP-MIB", "nhrpClientStatTxErrorIndication"), ("NHRP-MIB", "nhrpClientStatRxErrUnrecognizedExtension"), ("NHRP-MIB", "nhrpClientStatRxErrLoopDetected"), ("NHRP-MIB", "nhrpClientStatRxErrProtoAddrUnreachable"), ("NHRP-MIB", "nhrpClientStatRxErrProtoError"), ("NHRP-MIB", "nhrpClientStatRxErrSduSizeExceeded"), ("NHRP-MIB", "nhrpClientStatRxErrInvalidExtension"), ("NHRP-MIB", "nhrpClientStatRxErrAuthenticationFailure"), ("NHRP-MIB", "nhrpClientStatRxErrHopCountExceeded"), ("NHRP-MIB", "nhrpClientStatDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nhrpClientGroup = nhrpClientGroup.setStatus('current')
nhrpServerGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 71, 2, 2, 3)).setObjects(("NHRP-MIB", "nhrpServerInternetworkAddrType"), ("NHRP-MIB", "nhrpServerInternetworkAddr"), ("NHRP-MIB", "nhrpServerNbmaAddrType"), ("NHRP-MIB", "nhrpServerNbmaAddr"), ("NHRP-MIB", "nhrpServerNbmaSubaddr"), ("NHRP-MIB", "nhrpServerStorageType"), ("NHRP-MIB", "nhrpServerRowStatus"), ("NHRP-MIB", "nhrpServerCacheAuthoritative"), ("NHRP-MIB", "nhrpServerCacheUniqueness"), ("NHRP-MIB", "nhrpServerNhcPrefixLength"), ("NHRP-MIB", "nhrpServerNhcInternetworkAddrType"), ("NHRP-MIB", "nhrpServerNhcInternetworkAddr"), ("NHRP-MIB", "nhrpServerNhcNbmaAddrType"), ("NHRP-MIB", "nhrpServerNhcNbmaAddr"), ("NHRP-MIB", "nhrpServerNhcNbmaSubaddr"), ("NHRP-MIB", "nhrpServerNhcInUse"), ("NHRP-MIB", "nhrpServerNhcRowStatus"), ("NHRP-MIB", "nhrpServerStatRxResolveReq"), ("NHRP-MIB", "nhrpServerStatTxResolveReplyAck"), ("NHRP-MIB", "nhrpServerStatTxResolveReplyNakProhibited"), ("NHRP-MIB", "nhrpServerStatTxResolveReplyNakInsufResources"), ("NHRP-MIB", "nhrpServerStatTxResolveReplyNakNoBinding"), ("NHRP-MIB", "nhrpServerStatTxResolveReplyNakNotUnique"), ("NHRP-MIB", "nhrpServerStatRxRegisterReq"), ("NHRP-MIB", "nhrpServerStatTxRegisterAck"), ("NHRP-MIB", "nhrpServerStatTxRegisterNakProhibited"), ("NHRP-MIB", "nhrpServerStatTxRegisterNakInsufResources"), ("NHRP-MIB", "nhrpServerStatTxRegisterNakAlreadyReg"), ("NHRP-MIB", "nhrpServerStatRxPurgeReq"), ("NHRP-MIB", "nhrpServerStatTxPurgeReq"), ("NHRP-MIB", "nhrpServerStatRxPurgeReply"), ("NHRP-MIB", "nhrpServerStatTxPurgeReply"), ("NHRP-MIB", "nhrpServerStatRxErrUnrecognizedExtension"), ("NHRP-MIB", "nhrpServerStatRxErrLoopDetected"), ("NHRP-MIB", "nhrpServerStatRxErrProtoAddrUnreachable"), ("NHRP-MIB", "nhrpServerStatRxErrProtoError"), ("NHRP-MIB", "nhrpServerStatRxErrSduSizeExceeded"), ("NHRP-MIB", "nhrpServerStatRxErrInvalidExtension"), ("NHRP-MIB", "nhrpServerStatRxErrInvalidResReplyReceived"), ("NHRP-MIB", "nhrpServerStatRxErrAuthenticationFailure"), ("NHRP-MIB", "nhrpServerStatRxErrHopCountExceeded"), ("NHRP-MIB", "nhrpServerStatTxErrUnrecognizedExtension"), ("NHRP-MIB", "nhrpServerStatTxErrLoopDetected"), ("NHRP-MIB", "nhrpServerStatTxErrProtoAddrUnreachable"), ("NHRP-MIB", "nhrpServerStatTxErrProtoError"), ("NHRP-MIB", "nhrpServerStatTxErrSduSizeExceeded"), ("NHRP-MIB", "nhrpServerStatTxErrInvalidExtension"), ("NHRP-MIB", "nhrpServerStatTxErrAuthenticationFailure"), ("NHRP-MIB", "nhrpServerStatTxErrHopCountExceeded"), ("NHRP-MIB", "nhrpServerStatFwResolveReq"), ("NHRP-MIB", "nhrpServerStatFwResolveReply"), ("NHRP-MIB", "nhrpServerStatFwRegisterReq"), ("NHRP-MIB", "nhrpServerStatFwRegisterReply"), ("NHRP-MIB", "nhrpServerStatFwPurgeReq"), ("NHRP-MIB", "nhrpServerStatFwPurgeReply"), ("NHRP-MIB", "nhrpServerStatFwErrorIndication"), ("NHRP-MIB", "nhrpServerStatDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nhrpServerGroup = nhrpServerGroup.setStatus('current')
mibBuilder.exportSymbols("NHRP-MIB", nhrpClientStatTxErrorIndication=nhrpClientStatTxErrorIndication, nhrpClientStatRxResolveReplyNakNoBinding=nhrpClientStatRxResolveReplyNakNoBinding, nhrpClientStatRxResolveReplyAck=nhrpClientStatRxResolveReplyAck, nhrpCacheNbmaSubaddr=nhrpCacheNbmaSubaddr, nhrpPurgeCacheIdentifier=nhrpPurgeCacheIdentifier, nhrpClientPurgeRequestRetries=nhrpClientPurgeRequestRetries, nhrpServerStatTxResolveReplyAck=nhrpServerStatTxResolveReplyAck, nhrpServerStatTxPurgeReply=nhrpServerStatTxPurgeReply, nhrpServerStatFwResolveReq=nhrpServerStatFwResolveReq, nhrpCacheInternetworkAddrType=nhrpCacheInternetworkAddrType, nhrpClientNhsEntry=nhrpClientNhsEntry, nhrpServerObjects=nhrpServerObjects, nhrpServerStatFwErrorIndication=nhrpServerStatFwErrorIndication, nhrpGeneralObjects=nhrpGeneralObjects, nhrpServerStorageType=nhrpServerStorageType, nhrpClientStatRxErrInvalidExtension=nhrpClientStatRxErrInvalidExtension, nhrpClientRegUniqueness=nhrpClientRegUniqueness, nhrpClientStatRxErrUnrecognizedExtension=nhrpClientStatRxErrUnrecognizedExtension, nhrpCacheInternetworkAddr=nhrpCacheInternetworkAddr, nhrpServerStatFwPurgeReply=nhrpServerStatFwPurgeReply, nhrpCacheNextHopInternetworkAddr=nhrpCacheNextHopInternetworkAddr, nhrpClientInternetworkAddr=nhrpClientInternetworkAddr, nhrpServerStatRxRegisterReq=nhrpServerStatRxRegisterReq, nhrpCacheTable=nhrpCacheTable, nhrpServerStatDiscontinuityTime=nhrpServerStatDiscontinuityTime, nhrpServerStatEntry=nhrpServerStatEntry, nhrpServerStatTxRegisterNakAlreadyReg=nhrpServerStatTxRegisterNakAlreadyReg, nhrpPurgeIndex=nhrpPurgeIndex, nhrpClientStatRxPurgeReq=nhrpClientStatRxPurgeReq, nhrpServerNbmaAddr=nhrpServerNbmaAddr, nhrpClientNhsIndex=nhrpClientNhsIndex, nhrpServerNhcIndex=nhrpServerNhcIndex, nhrpServerStatRxPurgeReply=nhrpServerStatRxPurgeReply, nhrpServerNbmaSubaddr=nhrpServerNbmaSubaddr, nhrpClientStatRxResolveReplyNakNotUnique=nhrpClientStatRxResolveReplyNakNotUnique, nhrpServerStatFwPurgeReq=nhrpServerStatFwPurgeReq, nhrpConformance=nhrpConformance, nhrpNextIndex=nhrpNextIndex, nhrpClientNhsNbmaSubaddr=nhrpClientNhsNbmaSubaddr, nhrpServerNhcTable=nhrpServerNhcTable, nhrpServerStatTxResolveReplyNakNotUnique=nhrpServerStatTxResolveReplyNakNotUnique, nhrpClientRegState=nhrpClientRegState, nhrpClientResolutionRequestRetries=nhrpClientResolutionRequestRetries, nhrpCacheState=nhrpCacheState, nhrpClientStatRxResolveReplyNakInsufResources=nhrpClientStatRxResolveReplyNakInsufResources, nhrpServerStatRxErrInvalidExtension=nhrpServerStatRxErrInvalidExtension, nhrpServerStatRxErrHopCountExceeded=nhrpServerStatRxErrHopCountExceeded, nhrpServerStatFwResolveReply=nhrpServerStatFwResolveReply, nhrpCacheStorageType=nhrpCacheStorageType, PYSNMP_MODULE_ID=nhrpMIB, nhrpCacheHoldingTime=nhrpCacheHoldingTime, nhrpClientStatRxRegisterAck=nhrpClientStatRxRegisterAck, nhrpClientStatTxResolveReq=nhrpClientStatTxResolveReq, nhrpServerNhcNbmaSubaddr=nhrpServerNhcNbmaSubaddr, nhrpServerStatFwRegisterReply=nhrpServerStatFwRegisterReply, nhrpServerTable=nhrpServerTable, nhrpServerCacheAuthoritative=nhrpServerCacheAuthoritative, nhrpServerStatTxRegisterAck=nhrpServerStatTxRegisterAck, nhrpClientNhsTable=nhrpClientNhsTable, nhrpMIB=nhrpMIB, nhrpClientStatRxErrSduSizeExceeded=nhrpClientStatRxErrSduSizeExceeded, nhrpServerStatTxErrProtoAddrUnreachable=nhrpServerStatTxErrProtoAddrUnreachable, nhrpClientStatDiscontinuityTime=nhrpClientStatDiscontinuityTime, nhrpServerStatTxErrHopCountExceeded=nhrpServerStatTxErrHopCountExceeded, nhrpClientTable=nhrpClientTable, nhrpServerInternetworkAddr=nhrpServerInternetworkAddr, nhrpClientStatRxErrProtoAddrUnreachable=nhrpClientStatRxErrProtoAddrUnreachable, nhrpServerRowStatus=nhrpServerRowStatus, nhrpServerStatTxResolveReplyNakProhibited=nhrpServerStatTxResolveReplyNakProhibited, nhrpServerStatTxResolveReplyNakNoBinding=nhrpServerStatTxResolveReplyNakNoBinding, nhrpCacheRowStatus=nhrpCacheRowStatus, nhrpServerStatRxErrAuthenticationFailure=nhrpServerStatRxErrAuthenticationFailure, nhrpClientNhsInternetworkAddr=nhrpClientNhsInternetworkAddr, nhrpClientInternetworkAddrType=nhrpClientInternetworkAddrType, nhrpServerNhcNbmaAddr=nhrpServerNhcNbmaAddr, nhrpServerStatTxErrLoopDetected=nhrpServerStatTxErrLoopDetected, nhrpServerEntry=nhrpServerEntry, nhrpClientRegistrationEntry=nhrpClientRegistrationEntry, nhrpClientNhsNbmaAddrType=nhrpClientNhsNbmaAddrType, nhrpServerStatRxErrProtoAddrUnreachable=nhrpServerStatRxErrProtoAddrUnreachable, nhrpServerIndex=nhrpServerIndex, nhrpServerStatRxErrInvalidResReplyReceived=nhrpServerStatRxErrInvalidResReplyReceived, nhrpClientNbmaSubaddr=nhrpClientNbmaSubaddr, nhrpClientNhsNbmaAddr=nhrpClientNhsNbmaAddr, NhrpGenAddr=NhrpGenAddr, nhrpClientStatTxPurgeReply=nhrpClientStatTxPurgeReply, nhrpClientStatTable=nhrpClientStatTable, nhrpServerStatRxErrSduSizeExceeded=nhrpServerStatRxErrSduSizeExceeded, nhrpClientRegRowStatus=nhrpClientRegRowStatus, nhrpClientRequestID=nhrpClientRequestID, nhrpServerCacheUniqueness=nhrpServerCacheUniqueness, nhrpClientStatRxErrLoopDetected=nhrpClientStatRxErrLoopDetected, nhrpClientStatRxRegisterNakInsufResources=nhrpClientStatRxRegisterNakInsufResources, nhrpServerStatRxPurgeReq=nhrpServerStatRxPurgeReq, nhrpServerStatRxErrLoopDetected=nhrpServerStatRxErrLoopDetected, nhrpCacheIndex=nhrpCacheIndex, nhrpPurgeRequestID=nhrpPurgeRequestID, nhrpServerStatTxErrProtoError=nhrpServerStatTxErrProtoError, nhrpCompliances=nhrpCompliances, nhrpCacheNbmaAddrType=nhrpCacheNbmaAddrType, nhrpServerStatTxErrUnrecognizedExtension=nhrpServerStatTxErrUnrecognizedExtension, nhrpObjects=nhrpObjects, nhrpClientStatRxRegisterNakAlreadyReg=nhrpClientStatRxRegisterNakAlreadyReg, nhrpClientStatRxRegisterNakProhibited=nhrpClientStatRxRegisterNakProhibited, nhrpClientNbmaAddrType=nhrpClientNbmaAddrType, nhrpServerStatTxRegisterNakProhibited=nhrpServerStatTxRegisterNakProhibited, nhrpServerCacheTable=nhrpServerCacheTable, nhrpClientStatRxPurgeReply=nhrpClientStatRxPurgeReply, nhrpServerStatTxErrAuthenticationFailure=nhrpServerStatTxErrAuthenticationFailure, nhrpServerNhcInUse=nhrpServerNhcInUse, nhrpServerNhcNbmaAddrType=nhrpServerNhcNbmaAddrType, nhrpPurgeReqEntry=nhrpPurgeReqEntry, nhrpClientRegistrationRequestRetries=nhrpClientRegistrationRequestRetries, nhrpClientEntry=nhrpClientEntry, nhrpClientStatRxErrProtoError=nhrpClientStatRxErrProtoError, nhrpClientObjects=nhrpClientObjects, nhrpClientRowStatus=nhrpClientRowStatus, nhrpClientHoldTime=nhrpClientHoldTime, nhrpCacheType=nhrpCacheType, nhrpServerStatTxRegisterNakInsufResources=nhrpServerStatTxRegisterNakInsufResources, nhrpCacheEntry=nhrpCacheEntry, nhrpCachePreference=nhrpCachePreference, nhrpServerNhcInternetworkAddr=nhrpServerNhcInternetworkAddr, nhrpClientRegistrationTable=nhrpClientRegistrationTable, nhrpServerStatTxPurgeReq=nhrpServerStatTxPurgeReq, nhrpServerStatTxErrInvalidExtension=nhrpServerStatTxErrInvalidExtension, nhrpPurgeRowStatus=nhrpPurgeRowStatus, nhrpModuleCompliance=nhrpModuleCompliance, nhrpPurgePrefixLength=nhrpPurgePrefixLength, nhrpPurgeReqTable=nhrpPurgeReqTable, nhrpGeneralGroup=nhrpGeneralGroup, nhrpClientStatRxErrAuthenticationFailure=nhrpClientStatRxErrAuthenticationFailure, nhrpServerCacheEntry=nhrpServerCacheEntry, nhrpClientNbmaAddr=nhrpClientNbmaAddr, nhrpServerStatRxErrProtoError=nhrpServerStatRxErrProtoError, nhrpClientNhsInUse=nhrpClientNhsInUse, nhrpClientStatTxRegisterReq=nhrpClientStatTxRegisterReq, nhrpServerNhcEntry=nhrpServerNhcEntry, nhrpServerGroup=nhrpServerGroup, nhrpClientNhsInternetworkAddrType=nhrpClientNhsInternetworkAddrType, nhrpServerNhcPrefixLength=nhrpServerNhcPrefixLength, nhrpServerStatTxResolveReplyNakInsufResources=nhrpServerStatTxResolveReplyNakInsufResources, nhrpCachePrefixLength=nhrpCachePrefixLength, nhrpClientStatTxPurgeReq=nhrpClientStatTxPurgeReq, nhrpClientStorageType=nhrpClientStorageType, nhrpServerStatTable=nhrpServerStatTable, nhrpCacheNegotiatedMtu=nhrpCacheNegotiatedMtu, nhrpServerStatRxResolveReq=nhrpServerStatRxResolveReq, nhrpClientGroup=nhrpClientGroup, nhrpClientStatRxErrHopCountExceeded=nhrpClientStatRxErrHopCountExceeded, nhrpClientIndex=nhrpClientIndex, nhrpServerStatRxErrUnrecognizedExtension=nhrpServerStatRxErrUnrecognizedExtension, nhrpCacheNbmaAddr=nhrpCacheNbmaAddr, nhrpCacheHoldingTimeValid=nhrpCacheHoldingTimeValid, nhrpClientInitialRequestTimeout=nhrpClientInitialRequestTimeout, nhrpGroups=nhrpGroups, nhrpServerNhcInternetworkAddrType=nhrpServerNhcInternetworkAddrType, nhrpServerStatTxErrSduSizeExceeded=nhrpServerStatTxErrSduSizeExceeded, nhrpClientRegIndex=nhrpClientRegIndex, nhrpClientStatRxResolveReplyNakProhibited=nhrpClientStatRxResolveReplyNakProhibited, nhrpServerStatFwRegisterReq=nhrpServerStatFwRegisterReq, nhrpPurgeReplyExpected=nhrpPurgeReplyExpected, nhrpServerNhcRowStatus=nhrpServerNhcRowStatus, nhrpClientStatEntry=nhrpClientStatEntry, nhrpClientNhsRowStatus=nhrpClientNhsRowStatus, nhrpClientDefaultMtu=nhrpClientDefaultMtu, nhrpServerInternetworkAddrType=nhrpServerInternetworkAddrType, nhrpServerNbmaAddrType=nhrpServerNbmaAddrType)
