#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-IpNhrpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-IpNhrpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
mscVrPpIpPortIndex, mscVrPpIpPortLogicalIf, mscVrIp, mscVrPpIpPortLogicalIfAddressIndex, mscVrIpIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex", "mscVrPpIpPortLogicalIf", "mscVrIp", "mscVrPpIpPortLogicalIfAddressIndex", "mscVrIpIndex")
DisplayString, Unsigned32, RowPointer, RowStatus, StorageType, Integer32, Counter32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "DisplayString", "Unsigned32", "RowPointer", "RowStatus", "StorageType", "Integer32", "Counter32")
NonReplicated, HexString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "HexString")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscVrPpIndex, mscVrIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex", "mscVrIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, TimeTicks, Unsigned32, IpAddress, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, NotificationType, ModuleIdentity, iso, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Unsigned32", "IpAddress", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "NotificationType", "ModuleIdentity", "iso", "Integer32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipNhrpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77))
mscVrPpIpPortLogicalIfNhrpIf = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4))
mscVrPpIpPortLogicalIfNhrpIfRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4, 1), )
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNhrpIfRowStatusTable.setStatus('mandatory')
mscVrPpIpPortLogicalIfNhrpIfRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrPpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrPpIpPortLogicalIfAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrPpIpPortLogicalIfNhrpIfIndex"))
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNhrpIfRowStatusEntry.setStatus('mandatory')
mscVrPpIpPortLogicalIfNhrpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNhrpIfRowStatus.setStatus('mandatory')
mscVrPpIpPortLogicalIfNhrpIfComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNhrpIfComponentName.setStatus('mandatory')
mscVrPpIpPortLogicalIfNhrpIfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNhrpIfStorageType.setStatus('mandatory')
mscVrPpIpPortLogicalIfNhrpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 3, 5, 2, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrPpIpPortLogicalIfNhrpIfIndex.setStatus('mandatory')
mscVrIpNhrp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19))
mscVrIpNhrpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 1), )
if mibBuilder.loadTexts: mscVrIpNhrpRowStatusTable.setStatus('mandatory')
mscVrIpNhrpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpRowStatusEntry.setStatus('mandatory')
mscVrIpNhrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpRowStatus.setStatus('mandatory')
mscVrIpNhrpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpComponentName.setStatus('mandatory')
mscVrIpNhrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpStorageType.setStatus('mandatory')
mscVrIpNhrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpNhrpIndex.setStatus('mandatory')
mscVrIpNhrpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 10), )
if mibBuilder.loadTexts: mscVrIpNhrpAdminControlTable.setStatus('mandatory')
mscVrIpNhrpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpAdminControlEntry.setStatus('mandatory')
mscVrIpNhrpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpSnmpAdminStatus.setStatus('mandatory')
mscVrIpNhrpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 11), )
if mibBuilder.loadTexts: mscVrIpNhrpProvTable.setStatus('mandatory')
mscVrIpNhrpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpProvEntry.setStatus('mandatory')
mscVrIpNhrpMaxResCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(32, 1024)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpMaxResCacheEntries.setStatus('mandatory')
mscVrIpNhrpFwdTransitRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpFwdTransitRecord.setStatus('mandatory')
mscVrIpNhrpRevTransitRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpRevTransitRecord.setStatus('mandatory')
mscVrIpNhrpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 13), )
if mibBuilder.loadTexts: mscVrIpNhrpStateTable.setStatus('mandatory')
mscVrIpNhrpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpStateEntry.setStatus('mandatory')
mscVrIpNhrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpAdminState.setStatus('mandatory')
mscVrIpNhrpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpOperationalState.setStatus('mandatory')
mscVrIpNhrpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpUsageState.setStatus('mandatory')
mscVrIpNhrpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 14), )
if mibBuilder.loadTexts: mscVrIpNhrpOperStatusTable.setStatus('mandatory')
mscVrIpNhrpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpOperStatusEntry.setStatus('mandatory')
mscVrIpNhrpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpSnmpOperStatus.setStatus('mandatory')
mscVrIpNhrpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 15), )
if mibBuilder.loadTexts: mscVrIpNhrpOperTable.setStatus('mandatory')
mscVrIpNhrpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpOperEntry.setStatus('mandatory')
mscVrIpNhrpCurrResCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4292967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpCurrResCacheEntries.setStatus('mandatory')
mscVrIpNhrpPeakResCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4292967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpPeakResCacheEntries.setStatus('mandatory')
mscVrIpNhrpNhs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2))
mscVrIpNhrpNhsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 1), )
if mibBuilder.loadTexts: mscVrIpNhrpNhsRowStatusTable.setStatus('mandatory')
mscVrIpNhrpNhsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhsRowStatusEntry.setStatus('mandatory')
mscVrIpNhrpNhsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRowStatus.setStatus('mandatory')
mscVrIpNhrpNhsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsComponentName.setStatus('mandatory')
mscVrIpNhrpNhsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsStorageType.setStatus('mandatory')
mscVrIpNhrpNhsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpNhrpNhsIndex.setStatus('mandatory')
mscVrIpNhrpNhsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10), )
if mibBuilder.loadTexts: mscVrIpNhrpNhsStatsTable.setStatus('mandatory')
mscVrIpNhrpNhsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhsStatsEntry.setStatus('mandatory')
mscVrIpNhrpNhsRxResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxResolveReq.setStatus('mandatory')
mscVrIpNhrpNhsTxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxResolveReplyAck.setStatus('mandatory')
mscVrIpNhrpNhsTxResolveReplyNakProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxResolveReplyNakProhibited.setStatus('mandatory')
mscVrIpNhrpNhsTxResolveReplyNakInsufResources = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxResolveReplyNakInsufResources.setStatus('mandatory')
mscVrIpNhrpNhsTxResolveReplyNakNoBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxResolveReplyNakNoBinding.setStatus('mandatory')
mscVrIpNhrpNhsTxResolveReplyNakNotUnique = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxResolveReplyNakNotUnique.setStatus('mandatory')
mscVrIpNhrpNhsRxRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxRegisterReq.setStatus('mandatory')
mscVrIpNhrpNhsRxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxPurgeReq.setStatus('mandatory')
mscVrIpNhrpNhsTxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxPurgeReq.setStatus('mandatory')
mscVrIpNhrpNhsRxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxPurgeReply.setStatus('mandatory')
mscVrIpNhrpNhsTxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxPurgeReply.setStatus('mandatory')
mscVrIpNhrpNhsRxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrUnrecognizedExtension.setStatus('mandatory')
mscVrIpNhrpNhsRxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrLoopDetected.setStatus('mandatory')
mscVrIpNhrpNhsRxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrProtoAddrUnreachable.setStatus('mandatory')
mscVrIpNhrpNhsRxErrProtoError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrProtoError.setStatus('mandatory')
mscVrIpNhrpNhsRxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrSduSizeExceeded.setStatus('mandatory')
mscVrIpNhrpNhsRxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrInvalidExtension.setStatus('mandatory')
mscVrIpNhrpNhsRxErrInvalidResReplyReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrInvalidResReplyReceived.setStatus('mandatory')
mscVrIpNhrpNhsRxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrAuthenticationFailure.setStatus('mandatory')
mscVrIpNhrpNhsRxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsRxErrHopCountExceeded.setStatus('mandatory')
mscVrIpNhrpNhsTxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrUnrecognizedExtension.setStatus('mandatory')
mscVrIpNhrpNhsTxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrLoopDetected.setStatus('mandatory')
mscVrIpNhrpNhsTxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrProtoAddrUnreachable.setStatus('mandatory')
mscVrIpNhrpNhsTxErrProtoError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrProtoError.setStatus('mandatory')
mscVrIpNhrpNhsTxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrSduSizeExceeded.setStatus('mandatory')
mscVrIpNhrpNhsTxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrInvalidExtension.setStatus('mandatory')
mscVrIpNhrpNhsTxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrAuthenticationFailure.setStatus('mandatory')
mscVrIpNhrpNhsTxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsTxErrHopCountExceeded.setStatus('mandatory')
mscVrIpNhrpNhsFwdResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdResolveReq.setStatus('mandatory')
mscVrIpNhrpNhsFwdResolveReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdResolveReply.setStatus('mandatory')
mscVrIpNhrpNhsFwdRegisterReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdRegisterReq.setStatus('mandatory')
mscVrIpNhrpNhsFwdRegisterReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdRegisterReply.setStatus('mandatory')
mscVrIpNhrpNhsFwdPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdPurgeReq.setStatus('mandatory')
mscVrIpNhrpNhsFwdPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdPurgeReply.setStatus('mandatory')
mscVrIpNhrpNhsFwdErrorIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 10, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsFwdErrorIndication.setStatus('mandatory')
mscVrIpNhrpNhsEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2))
mscVrIpNhrpNhsEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpRowStatusTable.setStatus('mandatory')
mscVrIpNhrpNhsEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsEpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpRowStatusEntry.setStatus('mandatory')
mscVrIpNhrpNhsEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpRowStatus.setStatus('mandatory')
mscVrIpNhrpNhsEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpComponentName.setStatus('mandatory')
mscVrIpNhrpNhsEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpStorageType.setStatus('mandatory')
mscVrIpNhrpNhsEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpIndex.setStatus('mandatory')
mscVrIpNhrpNhsEpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpProvTable.setStatus('mandatory')
mscVrIpNhrpNhsEpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsEpIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpProvEntry.setStatus('mandatory')
mscVrIpNhrpNhsEpAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ack", 1), ("nak", 2))).clone('nak')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpAction.setStatus('mandatory')
mscVrIpNhrpNhsEpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("staticLocal", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpProtocol.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2))
mscVrIpNhrpNhsEpNetAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 1), )
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrRowStatusTable.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsEpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsEpNetAddrIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrRowStatusEntry.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrRowStatus.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrComponentName.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrStorageType.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrIndex.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 10), )
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrProvTable.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsEpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhsEpNetAddrIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrProvEntry.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrSourceAddress.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrSourceMask.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 10, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrDestinationAddress.setStatus('mandatory')
mscVrIpNhrpNhsEpNetAddrDestinationMask = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 2, 2, 2, 10, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhsEpNetAddrDestinationMask.setStatus('mandatory')
mscVrIpNhrpNhc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3))
mscVrIpNhrpNhcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 1), )
if mibBuilder.loadTexts: mscVrIpNhrpNhcRowStatusTable.setStatus('mandatory')
mscVrIpNhrpNhcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhcIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhcRowStatusEntry.setStatus('mandatory')
mscVrIpNhrpNhcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRowStatus.setStatus('mandatory')
mscVrIpNhrpNhcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcComponentName.setStatus('mandatory')
mscVrIpNhrpNhcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcStorageType.setStatus('mandatory')
mscVrIpNhrpNhcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVrIpNhrpNhcIndex.setStatus('mandatory')
mscVrIpNhrpNhcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10), )
if mibBuilder.loadTexts: mscVrIpNhrpNhcProvTable.setStatus('mandatory')
mscVrIpNhrpNhcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhcIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhcProvEntry.setStatus('mandatory')
mscVrIpNhrpNhcFlowDetectPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4292967295)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhcFlowDetectPacketCount.setStatus('mandatory')
mscVrIpNhrpNhcFlowDetectTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(20, 20), ValueRangeConstraint(30, 30), ValueRangeConstraint(40, 40), ValueRangeConstraint(50, 50), ValueRangeConstraint(60, 60), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhcFlowDetectTimePeriod.setStatus('mandatory')
mscVrIpNhrpNhcIdleDetectPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4292967295)).clone(900)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhcIdleDetectPacketCount.setStatus('mandatory')
mscVrIpNhrpNhcIdleDetectTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhcIdleDetectTimePeriod.setStatus('mandatory')
mscVrIpNhrpNhcAtmFlowDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVrIpNhrpNhcAtmFlowDetection.setStatus('mandatory')
mscVrIpNhrpNhcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11), )
if mibBuilder.loadTexts: mscVrIpNhrpNhcStatsTable.setStatus('mandatory')
mscVrIpNhrpNhcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpNhcIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpNhcStatsEntry.setStatus('mandatory')
mscVrIpNhrpNhcTxResolveReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcTxResolveReq.setStatus('mandatory')
mscVrIpNhrpNhcRxResolveReplyAck = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxResolveReplyAck.setStatus('mandatory')
mscVrIpNhrpNhcRxResolveReplyNakProhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxResolveReplyNakProhibited.setStatus('mandatory')
mscVrIpNhrpNhcRxResolveReplyNakInsufResources = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxResolveReplyNakInsufResources.setStatus('mandatory')
mscVrIpNhrpNhcRxResolveReplyNakNoBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxResolveReplyNakNoBinding.setStatus('mandatory')
mscVrIpNhrpNhcRxResolveReplyNakNotUnique = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxResolveReplyNakNotUnique.setStatus('mandatory')
mscVrIpNhrpNhcRxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxPurgeReq.setStatus('mandatory')
mscVrIpNhrpNhcTxPurgeReq = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcTxPurgeReq.setStatus('mandatory')
mscVrIpNhrpNhcRxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxPurgeReply.setStatus('mandatory')
mscVrIpNhrpNhcTxPurgeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcTxPurgeReply.setStatus('mandatory')
mscVrIpNhrpNhcTxErrIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcTxErrIndication.setStatus('mandatory')
mscVrIpNhrpNhcRxErrUnrecognizedExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrUnrecognizedExtension.setStatus('mandatory')
mscVrIpNhrpNhcRxErrLoopDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrLoopDetected.setStatus('mandatory')
mscVrIpNhrpNhcRxErrProtoAddrUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrProtoAddrUnreachable.setStatus('mandatory')
mscVrIpNhrpNhcRxErrProtoError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrProtoError.setStatus('mandatory')
mscVrIpNhrpNhcRxErrSduSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrSduSizeExceeded.setStatus('mandatory')
mscVrIpNhrpNhcRxErrInvalidExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrInvalidExtension.setStatus('mandatory')
mscVrIpNhrpNhcRxErrAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrAuthenticationFailure.setStatus('mandatory')
mscVrIpNhrpNhcRxErrHopCountExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 3, 11, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpNhcRxErrHopCountExceeded.setStatus('mandatory')
mscVrIpNhrpRce = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4))
mscVrIpNhrpRceRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1), )
if mibBuilder.loadTexts: mscVrIpNhrpRceRowStatusTable.setStatus('mandatory')
mscVrIpNhrpRceRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpRceDestAddrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpRceDestMaskIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpRceRowStatusEntry.setStatus('mandatory')
mscVrIpNhrpRceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceRowStatus.setStatus('mandatory')
mscVrIpNhrpRceComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceComponentName.setStatus('mandatory')
mscVrIpNhrpRceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceStorageType.setStatus('mandatory')
mscVrIpNhrpRceDestAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: mscVrIpNhrpRceDestAddrIndex.setStatus('mandatory')
mscVrIpNhrpRceDestMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 1, 1, 11), IpAddress())
if mibBuilder.loadTexts: mscVrIpNhrpRceDestMaskIndex.setStatus('mandatory')
mscVrIpNhrpRceOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 10), )
if mibBuilder.loadTexts: mscVrIpNhrpRceOperTable.setStatus('mandatory')
mscVrIpNhrpRceOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VirtualRouterMIB", "mscVrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpMIB", "mscVrIpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpRceDestAddrIndex"), (0, "Nortel-MsCarrier-MscPassport-IpNhrpMIB", "mscVrIpNhrpRceDestMaskIndex"))
if mibBuilder.loadTexts: mscVrIpNhrpRceOperEntry.setStatus('mandatory')
mscVrIpNhrpRceNbmaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 10, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceNbmaAddress.setStatus('mandatory')
mscVrIpNhrpRceEntryState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 11))).clone(namedValues=NamedValues(("incomplete", 1), ("ackReply", 2), ("nakReply", 3), ("noReply", 10), ("localReply", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceEntryState.setStatus('mandatory')
mscVrIpNhrpRceHoldingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceHoldingTime.setStatus('mandatory')
mscVrIpNhrpRceShortcut = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 100, 6, 19, 4, 10, 1, 8), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVrIpNhrpRceShortcut.setStatus('mandatory')
ipNhrpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 1))
ipNhrpGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 1, 1))
ipNhrpGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 1, 1, 3))
ipNhrpGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 1, 1, 3, 2))
ipNhrpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 3))
ipNhrpCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 3, 1))
ipNhrpCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 3, 1, 3))
ipNhrpCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 77, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-IpNhrpMIB", mscVrIpNhrpNhsFwdErrorIndication=mscVrIpNhrpNhsFwdErrorIndication, mscVrIpNhrpNhsEpNetAddrDestinationMask=mscVrIpNhrpNhsEpNetAddrDestinationMask, mscVrIpNhrpStateEntry=mscVrIpNhrpStateEntry, mscVrIpNhrpNhsStatsTable=mscVrIpNhrpNhsStatsTable, mscVrIpNhrpNhcTxErrIndication=mscVrIpNhrpNhcTxErrIndication, mscVrIpNhrpNhsTxResolveReplyNakInsufResources=mscVrIpNhrpNhsTxResolveReplyNakInsufResources, mscVrIpNhrpRowStatusTable=mscVrIpNhrpRowStatusTable, mscVrIpNhrpNhcRxPurgeReply=mscVrIpNhrpNhcRxPurgeReply, mscVrIpNhrpProvTable=mscVrIpNhrpProvTable, mscVrIpNhrpNhsFwdRegisterReply=mscVrIpNhrpNhsFwdRegisterReply, mscVrIpNhrpNhsTxErrProtoAddrUnreachable=mscVrIpNhrpNhsTxErrProtoAddrUnreachable, mscVrIpNhrpRceDestAddrIndex=mscVrIpNhrpRceDestAddrIndex, mscVrPpIpPortLogicalIfNhrpIfIndex=mscVrPpIpPortLogicalIfNhrpIfIndex, mscVrIpNhrpNhsEpRowStatusTable=mscVrIpNhrpNhsEpRowStatusTable, mscVrIpNhrpNhsRxErrHopCountExceeded=mscVrIpNhrpNhsRxErrHopCountExceeded, mscVrIpNhrpRceOperTable=mscVrIpNhrpRceOperTable, mscVrIpNhrpSnmpAdminStatus=mscVrIpNhrpSnmpAdminStatus, mscVrIpNhrpNhsTxErrHopCountExceeded=mscVrIpNhrpNhsTxErrHopCountExceeded, mscVrIpNhrpNhcRxErrHopCountExceeded=mscVrIpNhrpNhcRxErrHopCountExceeded, ipNhrpGroup=ipNhrpGroup, mscVrIpNhrpNhsFwdPurgeReq=mscVrIpNhrpNhsFwdPurgeReq, mscVrIpNhrpNhcRxResolveReplyNakProhibited=mscVrIpNhrpNhcRxResolveReplyNakProhibited, mscVrIpNhrpNhcRxErrUnrecognizedExtension=mscVrIpNhrpNhcRxErrUnrecognizedExtension, mscVrIpNhrpNhsEpComponentName=mscVrIpNhrpNhsEpComponentName, mscVrIpNhrpRevTransitRecord=mscVrIpNhrpRevTransitRecord, mscVrPpIpPortLogicalIfNhrpIfRowStatus=mscVrPpIpPortLogicalIfNhrpIfRowStatus, mscVrIpNhrpNhsTxPurgeReply=mscVrIpNhrpNhsTxPurgeReply, mscVrIpNhrpNhsEpNetAddrComponentName=mscVrIpNhrpNhsEpNetAddrComponentName, mscVrIpNhrpFwdTransitRecord=mscVrIpNhrpFwdTransitRecord, mscVrIpNhrpNhsRxErrProtoAddrUnreachable=mscVrIpNhrpNhsRxErrProtoAddrUnreachable, ipNhrpGroupCA02A=ipNhrpGroupCA02A, mscVrIpNhrpStateTable=mscVrIpNhrpStateTable, ipNhrpCapabilitiesCA02A=ipNhrpCapabilitiesCA02A, mscVrIpNhrpRceComponentName=mscVrIpNhrpRceComponentName, mscVrIpNhrpNhcAtmFlowDetection=mscVrIpNhrpNhcAtmFlowDetection, mscVrIpNhrpNhsEpNetAddrRowStatus=mscVrIpNhrpNhsEpNetAddrRowStatus, mscVrIpNhrpNhsEpNetAddrSourceMask=mscVrIpNhrpNhsEpNetAddrSourceMask, ipNhrpCapabilities=ipNhrpCapabilities, mscVrIpNhrpNhsRowStatus=mscVrIpNhrpNhsRowStatus, mscVrIpNhrpNhcTxPurgeReq=mscVrIpNhrpNhcTxPurgeReq, mscVrIpNhrpRceRowStatusTable=mscVrIpNhrpRceRowStatusTable, mscVrIpNhrpNhcIdleDetectTimePeriod=mscVrIpNhrpNhcIdleDetectTimePeriod, mscVrIpNhrpNhcRxPurgeReq=mscVrIpNhrpNhcRxPurgeReq, mscVrIpNhrpNhcStatsTable=mscVrIpNhrpNhcStatsTable, mscVrIpNhrpNhsRxErrProtoError=mscVrIpNhrpNhsRxErrProtoError, mscVrPpIpPortLogicalIfNhrpIfRowStatusEntry=mscVrPpIpPortLogicalIfNhrpIfRowStatusEntry, mscVrIpNhrpNhcFlowDetectPacketCount=mscVrIpNhrpNhcFlowDetectPacketCount, mscVrIpNhrpNhcComponentName=mscVrIpNhrpNhcComponentName, ipNhrpGroupCA=ipNhrpGroupCA, mscVrIpNhrpNhsRxErrSduSizeExceeded=mscVrIpNhrpNhsRxErrSduSizeExceeded, mscVrIpNhrpNhcRowStatusTable=mscVrIpNhrpNhcRowStatusTable, mscVrIpNhrpNhcRxErrAuthenticationFailure=mscVrIpNhrpNhcRxErrAuthenticationFailure, mscVrIpNhrpNhcProvTable=mscVrIpNhrpNhcProvTable, mscVrIpNhrpNhsRxResolveReq=mscVrIpNhrpNhsRxResolveReq, mscVrPpIpPortLogicalIfNhrpIfComponentName=mscVrPpIpPortLogicalIfNhrpIfComponentName, mscVrIpNhrpNhsEp=mscVrIpNhrpNhsEp, mscVrIpNhrpAdminControlTable=mscVrIpNhrpAdminControlTable, mscVrIpNhrpNhsFwdResolveReply=mscVrIpNhrpNhsFwdResolveReply, mscVrIpNhrpPeakResCacheEntries=mscVrIpNhrpPeakResCacheEntries, ipNhrpCapabilitiesCA=ipNhrpCapabilitiesCA, mscVrIpNhrpNhsTxErrProtoError=mscVrIpNhrpNhsTxErrProtoError, mscVrIpNhrpNhsRxErrLoopDetected=mscVrIpNhrpNhsRxErrLoopDetected, mscVrIpNhrpNhsTxResolveReplyNakProhibited=mscVrIpNhrpNhsTxResolveReplyNakProhibited, mscVrIpNhrpNhsFwdPurgeReply=mscVrIpNhrpNhsFwdPurgeReply, mscVrIpNhrpNhsTxResolveReplyNakNotUnique=mscVrIpNhrpNhsTxResolveReplyNakNotUnique, mscVrIpNhrpNhsEpNetAddrRowStatusTable=mscVrIpNhrpNhsEpNetAddrRowStatusTable, mscVrIpNhrpNhcRxErrProtoError=mscVrIpNhrpNhcRxErrProtoError, mscVrIpNhrpNhsTxPurgeReq=mscVrIpNhrpNhsTxPurgeReq, mscVrIpNhrpNhcIdleDetectPacketCount=mscVrIpNhrpNhcIdleDetectPacketCount, mscVrIpNhrpNhsFwdResolveReq=mscVrIpNhrpNhsFwdResolveReq, mscVrIpNhrpRce=mscVrIpNhrpRce, mscVrIpNhrpRceRowStatus=mscVrIpNhrpRceRowStatus, mscVrIpNhrpRceShortcut=mscVrIpNhrpRceShortcut, mscVrIpNhrpNhcIndex=mscVrIpNhrpNhcIndex, mscVrIpNhrpNhcTxPurgeReply=mscVrIpNhrpNhcTxPurgeReply, mscVrIpNhrpOperEntry=mscVrIpNhrpOperEntry, mscVrIpNhrpNhsEpNetAddrStorageType=mscVrIpNhrpNhsEpNetAddrStorageType, mscVrIpNhrpNhsRowStatusEntry=mscVrIpNhrpNhsRowStatusEntry, mscVrIpNhrpNhsTxResolveReplyNakNoBinding=mscVrIpNhrpNhsTxResolveReplyNakNoBinding, mscVrIpNhrpNhsEpNetAddrIndex=mscVrIpNhrpNhsEpNetAddrIndex, mscVrIpNhrpNhsEpNetAddrSourceAddress=mscVrIpNhrpNhsEpNetAddrSourceAddress, mscVrIpNhrpNhcStorageType=mscVrIpNhrpNhcStorageType, mscVrIpNhrpOperationalState=mscVrIpNhrpOperationalState, mscVrIpNhrpOperStatusTable=mscVrIpNhrpOperStatusTable, mscVrIpNhrpNhsRxErrAuthenticationFailure=mscVrIpNhrpNhsRxErrAuthenticationFailure, mscVrIpNhrpRowStatus=mscVrIpNhrpRowStatus, mscVrIpNhrpMaxResCacheEntries=mscVrIpNhrpMaxResCacheEntries, mscVrIpNhrpIndex=mscVrIpNhrpIndex, mscVrIpNhrpNhsEpNetAddr=mscVrIpNhrpNhsEpNetAddr, mscVrIpNhrpNhsEpStorageType=mscVrIpNhrpNhsEpStorageType, mscVrIpNhrpNhsEpNetAddrProvEntry=mscVrIpNhrpNhsEpNetAddrProvEntry, mscVrIpNhrpNhsComponentName=mscVrIpNhrpNhsComponentName, mscVrIpNhrpNhsRowStatusTable=mscVrIpNhrpNhsRowStatusTable, mscVrIpNhrpNhcRxResolveReplyNakInsufResources=mscVrIpNhrpNhcRxResolveReplyNakInsufResources, mscVrIpNhrpNhsEpNetAddrDestinationAddress=mscVrIpNhrpNhsEpNetAddrDestinationAddress, mscVrPpIpPortLogicalIfNhrpIf=mscVrPpIpPortLogicalIfNhrpIf, mscVrIpNhrpRceNbmaAddress=mscVrIpNhrpRceNbmaAddress, mscVrIpNhrpNhsEpIndex=mscVrIpNhrpNhsEpIndex, mscVrIpNhrpNhsEpRowStatusEntry=mscVrIpNhrpNhsEpRowStatusEntry, mscVrIpNhrpNhsRxErrInvalidExtension=mscVrIpNhrpNhsRxErrInvalidExtension, mscVrIpNhrpNhs=mscVrIpNhrpNhs, mscVrIpNhrpNhsEpProvEntry=mscVrIpNhrpNhsEpProvEntry, mscVrIpNhrpUsageState=mscVrIpNhrpUsageState, mscVrIpNhrpAdminState=mscVrIpNhrpAdminState, mscVrIpNhrpNhcRxErrInvalidExtension=mscVrIpNhrpNhcRxErrInvalidExtension, mscVrIpNhrpNhsRxErrUnrecognizedExtension=mscVrIpNhrpNhsRxErrUnrecognizedExtension, mscVrIpNhrpNhcRxResolveReplyNakNotUnique=mscVrIpNhrpNhcRxResolveReplyNakNotUnique, mscVrIpNhrpOperStatusEntry=mscVrIpNhrpOperStatusEntry, mscVrIpNhrpNhsTxErrInvalidExtension=mscVrIpNhrpNhsTxErrInvalidExtension, mscVrIpNhrpNhsRxErrInvalidResReplyReceived=mscVrIpNhrpNhsRxErrInvalidResReplyReceived, mscVrIpNhrpNhsFwdRegisterReq=mscVrIpNhrpNhsFwdRegisterReq, mscVrIpNhrpNhsStatsEntry=mscVrIpNhrpNhsStatsEntry, mscVrIpNhrpRceRowStatusEntry=mscVrIpNhrpRceRowStatusEntry, mscVrIpNhrpStorageType=mscVrIpNhrpStorageType, mscVrPpIpPortLogicalIfNhrpIfStorageType=mscVrPpIpPortLogicalIfNhrpIfStorageType, mscVrIpNhrpNhcTxResolveReq=mscVrIpNhrpNhcTxResolveReq, mscVrIpNhrpNhsTxErrAuthenticationFailure=mscVrIpNhrpNhsTxErrAuthenticationFailure, mscVrIpNhrpRceDestMaskIndex=mscVrIpNhrpRceDestMaskIndex, mscVrIpNhrpNhc=mscVrIpNhrpNhc, mscVrIpNhrpAdminControlEntry=mscVrIpNhrpAdminControlEntry, mscVrIpNhrpNhsStorageType=mscVrIpNhrpNhsStorageType, mscVrIpNhrpNhsIndex=mscVrIpNhrpNhsIndex, ipNhrpCapabilitiesCA02=ipNhrpCapabilitiesCA02, mscVrIpNhrpNhsEpProvTable=mscVrIpNhrpNhsEpProvTable, mscVrIpNhrpNhsEpAction=mscVrIpNhrpNhsEpAction, mscVrIpNhrpNhsRxRegisterReq=mscVrIpNhrpNhsRxRegisterReq, mscVrIpNhrpNhcRxResolveReplyNakNoBinding=mscVrIpNhrpNhcRxResolveReplyNakNoBinding, mscVrPpIpPortLogicalIfNhrpIfRowStatusTable=mscVrPpIpPortLogicalIfNhrpIfRowStatusTable, mscVrIpNhrpNhcFlowDetectTimePeriod=mscVrIpNhrpNhcFlowDetectTimePeriod, mscVrIpNhrpNhcRxErrProtoAddrUnreachable=mscVrIpNhrpNhcRxErrProtoAddrUnreachable, mscVrIpNhrpNhsEpNetAddrProvTable=mscVrIpNhrpNhsEpNetAddrProvTable, mscVrIpNhrpRceStorageType=mscVrIpNhrpRceStorageType, mscVrIpNhrpNhsTxErrUnrecognizedExtension=mscVrIpNhrpNhsTxErrUnrecognizedExtension, mscVrIpNhrpSnmpOperStatus=mscVrIpNhrpSnmpOperStatus, mscVrIpNhrpRceEntryState=mscVrIpNhrpRceEntryState, mscVrIpNhrp=mscVrIpNhrp, mscVrIpNhrpNhcStatsEntry=mscVrIpNhrpNhcStatsEntry, mscVrIpNhrpNhsRxPurgeReq=mscVrIpNhrpNhsRxPurgeReq, mscVrIpNhrpNhcRowStatusEntry=mscVrIpNhrpNhcRowStatusEntry, mscVrIpNhrpRceHoldingTime=mscVrIpNhrpRceHoldingTime, mscVrIpNhrpProvEntry=mscVrIpNhrpProvEntry, mscVrIpNhrpNhcProvEntry=mscVrIpNhrpNhcProvEntry, mscVrIpNhrpNhsEpNetAddrRowStatusEntry=mscVrIpNhrpNhsEpNetAddrRowStatusEntry, mscVrIpNhrpOperTable=mscVrIpNhrpOperTable, mscVrIpNhrpNhsTxErrLoopDetected=mscVrIpNhrpNhsTxErrLoopDetected, mscVrIpNhrpNhsEpRowStatus=mscVrIpNhrpNhsEpRowStatus, mscVrIpNhrpNhcRxErrLoopDetected=mscVrIpNhrpNhcRxErrLoopDetected, mscVrIpNhrpNhcRxErrSduSizeExceeded=mscVrIpNhrpNhcRxErrSduSizeExceeded, mscVrIpNhrpNhsTxErrSduSizeExceeded=mscVrIpNhrpNhsTxErrSduSizeExceeded, mscVrIpNhrpRceOperEntry=mscVrIpNhrpRceOperEntry, mscVrIpNhrpCurrResCacheEntries=mscVrIpNhrpCurrResCacheEntries, ipNhrpMIB=ipNhrpMIB, mscVrIpNhrpNhcRowStatus=mscVrIpNhrpNhcRowStatus, mscVrIpNhrpNhcRxResolveReplyAck=mscVrIpNhrpNhcRxResolveReplyAck, mscVrIpNhrpRowStatusEntry=mscVrIpNhrpRowStatusEntry, mscVrIpNhrpNhsEpProtocol=mscVrIpNhrpNhsEpProtocol, mscVrIpNhrpNhsRxPurgeReply=mscVrIpNhrpNhsRxPurgeReply, mscVrIpNhrpNhsTxResolveReplyAck=mscVrIpNhrpNhsTxResolveReplyAck, mscVrIpNhrpComponentName=mscVrIpNhrpComponentName, ipNhrpGroupCA02=ipNhrpGroupCA02)
