#
# PySNMP MIB module ASCEND-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-RESOURCES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:13:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
resourcesGroup, = mibBuilder.importSymbols("ASCEND-MIB", "resourcesGroup")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter32, IpAddress, MibIdentifier, Integer32, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Unsigned32, Bits, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "IpAddress", "MibIdentifier", "Integer32", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Unsigned32", "Bits", "TimeTicks", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
resourceUsageTable = MibTable((1, 3, 6, 1, 4, 1, 529, 27, 1), )
if mibBuilder.loadTexts: resourceUsageTable.setStatus('mandatory')
resourceUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 27, 1, 1), ).setIndexNames((0, "ASCEND-RESOURCES-MIB", "usageSlotIndex"))
if mibBuilder.loadTexts: resourceUsageEntry.setStatus('mandatory')
usageSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usageSlotIndex.setStatus('mandatory')
usageAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usageAvailable.setStatus('mandatory')
usageBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usageBusy.setStatus('mandatory')
usageSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usageSuspect.setStatus('mandatory')
usageDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usageDisabled.setStatus('mandatory')
usageDead = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usageDead.setStatus('mandatory')
resourceTable = MibTable((1, 3, 6, 1, 4, 1, 529, 27, 2), )
if mibBuilder.loadTexts: resourceTable.setStatus('mandatory')
resourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 27, 2, 1), ).setIndexNames((0, "ASCEND-RESOURCES-MIB", "resourceSlotIndex"), (0, "ASCEND-RESOURCES-MIB", "resourcePortIndex"))
if mibBuilder.loadTexts: resourceEntry.setStatus('mandatory')
resourceSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceSlotIndex.setStatus('mandatory')
resourcePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourcePortIndex.setStatus('mandatory')
resourceConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3), ("disableAndChannel", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resourceConfig.setStatus('mandatory')
resourceState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("notApplicable", 1), ("other", 2), ("failedPost", 3), ("idle", 4), ("online", 5), ("virtualConnect", 6), ("disabled", 7), ("disabledChan", 8), ("reserved", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceState.setStatus('mandatory')
resourceCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("notApplicable", 1), ("other", 2), ("async", 3), ("sync", 4), ("isdnSync", 5), ("isdnAsyncV120", 6), ("isdnAsyncV110", 7), ("virtual", 8), ("isdnAsyncV32", 9), ("isdnAsyncVdsp", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceCallType.setStatus('mandatory')
resourceCallDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("other", 2), ("originated", 3), ("answered", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceCallDirection.setStatus('mandatory')
resourceUsedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceUsedCounts.setStatus('mandatory')
resourceBadCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceBadCounts.setStatus('mandatory')
resourceLast32 = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 27, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resourceLast32.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-RESOURCES-MIB", usageBusy=usageBusy, resourceUsageEntry=resourceUsageEntry, resourceEntry=resourceEntry, resourcePortIndex=resourcePortIndex, resourceBadCounts=resourceBadCounts, resourceUsageTable=resourceUsageTable, usageSuspect=usageSuspect, resourceSlotIndex=resourceSlotIndex, resourceLast32=resourceLast32, usageSlotIndex=usageSlotIndex, usageDisabled=usageDisabled, resourceCallDirection=resourceCallDirection, resourceCallType=resourceCallType, resourceUsedCounts=resourceUsedCounts, resourceConfig=resourceConfig, usageAvailable=usageAvailable, resourceTable=resourceTable, resourceState=resourceState, usageDead=usageDead)
