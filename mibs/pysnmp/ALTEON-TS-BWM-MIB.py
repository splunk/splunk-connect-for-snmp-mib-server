#
# PySNMP MIB module ALTEON-TS-BWM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTEON-TS-BWM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:05:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
switch, = mibBuilder.importSymbols("ALTEON-ROOT-MIB", "switch")
information, stats, operCmds = mibBuilder.importSymbols("ALTEON-TIGON-SWITCH-MIB", "information", "stats", "operCmds")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, ObjectIdentity, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, TimeTicks, Gauge32, Counter32, Counter64, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "ObjectIdentity", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "TimeTicks", "Gauge32", "Counter32", "Counter64", "ModuleIdentity", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bwm = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17))
bwmGeneralConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1))
bwmPolicyConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2))
bwmContractConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3))
bwmStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15))
bwmCurCfgGenState = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("on", 2), ("off", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenState.setStatus('mandatory')
bwmNewCfgGenState = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("on", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenState.setStatus('mandatory')
bwmCurCfgGenEnforcePolicy = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenEnforcePolicy.setStatus('mandatory')
bwmNewCfgGenEnforcePolicy = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenEnforcePolicy.setStatus('mandatory')
bwmCurCfgGenSmtpUser = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgGenSmtpUser.setStatus('mandatory')
bwmNewCfgGenSmtpUser = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgGenSmtpUser.setStatus('mandatory')
bwmPolicyTableMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmPolicyTableMaxEnt.setStatus('mandatory')
bwmCurCfgPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2), )
if mibBuilder.loadTexts: bwmCurCfgPolicyTable.setStatus('mandatory')
bwmCurCfgPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmCurCfgPolicyIndx"))
if mibBuilder.loadTexts: bwmCurCfgPolicyTableEntry.setStatus('mandatory')
bwmCurCfgPolicyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyIndx.setStatus('mandatory')
bwmCurCfgPolicyTosIn = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyTosIn.setStatus('mandatory')
bwmCurCfgPolicyTosOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyTosOut.setStatus('mandatory')
bwmCurCfgPolicyHard = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyHard.setStatus('mandatory')
bwmCurCfgPolicySoft = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicySoft.setStatus('mandatory')
bwmCurCfgPolicyResv = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyResv.setStatus('mandatory')
bwmCurCfgPolicyBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8192, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgPolicyBuffer.setStatus('mandatory')
bwmNewCfgPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3), )
if mibBuilder.loadTexts: bwmNewCfgPolicyTable.setStatus('mandatory')
bwmNewCfgPolicyTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmNewCfgPolicyIndx"))
if mibBuilder.loadTexts: bwmNewCfgPolicyTableEntry.setStatus('mandatory')
bwmNewCfgPolicyIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgPolicyIndx.setStatus('mandatory')
bwmNewCfgPolicyTosIn = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicyTosIn.setStatus('mandatory')
bwmNewCfgPolicyTosOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicyTosOut.setStatus('mandatory')
bwmNewCfgPolicyHard = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicyHard.setStatus('mandatory')
bwmNewCfgPolicySoft = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicySoft.setStatus('mandatory')
bwmNewCfgPolicyResv = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicyResv.setStatus('mandatory')
bwmNewCfgPolicyBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8192, 128000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicyBuffer.setStatus('mandatory')
bwmNewCfgPolicyDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgPolicyDelete.setStatus('mandatory')
bwmContractTableMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmContractTableMaxEnt.setStatus('mandatory')
bwmCurCfgContractTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2), )
if mibBuilder.loadTexts: bwmCurCfgContractTable.setStatus('mandatory')
bwmCurCfgContractTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmCurCfgContractIndx"))
if mibBuilder.loadTexts: bwmCurCfgContractTableEntry.setStatus('mandatory')
bwmCurCfgContractIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractIndx.setStatus('mandatory')
bwmCurCfgContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractName.setStatus('mandatory')
bwmCurCfgContractState = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractState.setStatus('mandatory')
bwmCurCfgContractPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractPolicy.setStatus('mandatory')
bwmCurCfgContractPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractPrec.setStatus('mandatory')
bwmCurCfgContractUseTos = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractUseTos.setStatus('mandatory')
bwmCurCfgContractHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmCurCfgContractHistory.setStatus('mandatory')
bwmNewCfgContractTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3), )
if mibBuilder.loadTexts: bwmNewCfgContractTable.setStatus('mandatory')
bwmNewCfgContractTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmNewCfgContractIndx"))
if mibBuilder.loadTexts: bwmNewCfgContractTableEntry.setStatus('mandatory')
bwmNewCfgContractIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmNewCfgContractIndx.setStatus('mandatory')
bwmNewCfgContractName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractName.setStatus('mandatory')
bwmNewCfgContractState = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractState.setStatus('mandatory')
bwmNewCfgContractPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractPolicy.setStatus('mandatory')
bwmNewCfgContractDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractDelete.setStatus('mandatory')
bwmNewCfgContractPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractPrec.setStatus('mandatory')
bwmNewCfgContractUseTos = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractUseTos.setStatus('mandatory')
bwmNewCfgContractHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 17, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmNewCfgContractHistory.setStatus('mandatory')
bwmStatTcTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1), )
if mibBuilder.loadTexts: bwmStatTcTable.setStatus('mandatory')
bwmStatTcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmStatTcContractIndex"))
if mibBuilder.loadTexts: bwmStatTcEntry.setStatus('mandatory')
bwmStatTcContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcContractIndex.setStatus('mandatory')
bwmStatTcName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcName.setStatus('mandatory')
bwmStatTcOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcOutoct.setStatus('mandatory')
bwmStatTcOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcOutdisoct.setStatus('mandatory')
bwmStatTcBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcBufferUsed.setStatus('mandatory')
bwmStatTcBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcBufferMax.setStatus('mandatory')
bwmStatTcrTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2), )
if mibBuilder.loadTexts: bwmStatTcrTable.setStatus('mandatory')
bwmStatTcrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmStatTcrContractIndex"))
if mibBuilder.loadTexts: bwmStatTcrEntry.setStatus('mandatory')
bwmStatTcrContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrContractIndex.setStatus('mandatory')
bwmStatTcrName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrName.setStatus('mandatory')
bwmStatTcrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrRate.setStatus('mandatory')
bwmStatTcrOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrOutoct.setStatus('mandatory')
bwmStatTcrOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrOutdisoct.setStatus('mandatory')
bwmStatTcrBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrBufferUsed.setStatus('mandatory')
bwmStatTcrBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatTcrBufferMax.setStatus('mandatory')
bwmStatSpTcTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3), )
if mibBuilder.loadTexts: bwmStatSpTcTable.setStatus('mandatory')
bwmStatSpTcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmStatSpTcPortIndex"), (0, "ALTEON-TS-BWM-MIB", "bwmStatSpTcContractIndex"))
if mibBuilder.loadTexts: bwmStatSpTcEntry.setStatus('mandatory')
bwmStatSpTcPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcPortIndex.setStatus('mandatory')
bwmStatSpTcContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcContractIndex.setStatus('mandatory')
bwmStatSpTcName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcName.setStatus('mandatory')
bwmStatSpTcOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcOutoct.setStatus('mandatory')
bwmStatSpTcOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcOutdisoct.setStatus('mandatory')
bwmStatSpTcBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcBufferUsed.setStatus('mandatory')
bwmStatSpTcBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcBufferMax.setStatus('mandatory')
bwmStatSpTcrTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4), )
if mibBuilder.loadTexts: bwmStatSpTcrTable.setStatus('mandatory')
bwmStatSpTcrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1), ).setIndexNames((0, "ALTEON-TS-BWM-MIB", "bwmStatSpTcrPortIndex"), (0, "ALTEON-TS-BWM-MIB", "bwmStatSpTcrContractIndex"))
if mibBuilder.loadTexts: bwmStatSpTcrEntry.setStatus('mandatory')
bwmStatSpTcrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrPortIndex.setStatus('mandatory')
bwmStatSpTcrContractIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrContractIndex.setStatus('mandatory')
bwmStatSpTcrName = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrName.setStatus('mandatory')
bwmStatSpTcrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrRate.setStatus('mandatory')
bwmStatSpTcrOutoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrOutoct.setStatus('mandatory')
bwmStatSpTcrOutdisoct = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrOutdisoct.setStatus('mandatory')
bwmStatSpTcrBufferUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrBufferUsed.setStatus('mandatory')
bwmStatSpTcrBufferMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 1, 8, 15, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwmStatSpTcrBufferMax.setStatus('mandatory')
bwmOper = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 1, 14, 2))
bwmOperSendSMTP = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 1, 14, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("send", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwmOperSendSMTP.setStatus('mandatory')
mibBuilder.exportSymbols("ALTEON-TS-BWM-MIB", bwmStatSpTcrOutoct=bwmStatSpTcrOutoct, bwmStatSpTcrRate=bwmStatSpTcrRate, bwmStatTcBufferUsed=bwmStatTcBufferUsed, bwmCurCfgPolicyHard=bwmCurCfgPolicyHard, bwmStatSpTcrBufferMax=bwmStatSpTcrBufferMax, bwmStatSpTcrContractIndex=bwmStatSpTcrContractIndex, bwmContractConfig=bwmContractConfig, bwmStatTcContractIndex=bwmStatTcContractIndex, bwmStatTcrEntry=bwmStatTcrEntry, bwmStatTcrOutdisoct=bwmStatTcrOutdisoct, bwmNewCfgPolicySoft=bwmNewCfgPolicySoft, bwmStatTcrRate=bwmStatTcrRate, bwmStatSpTcBufferUsed=bwmStatSpTcBufferUsed, bwmNewCfgPolicyIndx=bwmNewCfgPolicyIndx, bwmCurCfgContractTableEntry=bwmCurCfgContractTableEntry, bwmStatTcrOutoct=bwmStatTcrOutoct, bwmNewCfgContractPrec=bwmNewCfgContractPrec, bwmStatTcrBufferMax=bwmStatTcrBufferMax, bwmNewCfgPolicyResv=bwmNewCfgPolicyResv, bwmNewCfgPolicyTosOut=bwmNewCfgPolicyTosOut, bwmCurCfgGenEnforcePolicy=bwmCurCfgGenEnforcePolicy, bwmStatSpTcOutoct=bwmStatSpTcOutoct, bwmStatTcEntry=bwmStatTcEntry, bwmStats=bwmStats, bwmStatSpTcOutdisoct=bwmStatSpTcOutdisoct, bwmNewCfgPolicyBuffer=bwmNewCfgPolicyBuffer, bwmNewCfgPolicyDelete=bwmNewCfgPolicyDelete, bwmStatSpTcTable=bwmStatSpTcTable, bwmNewCfgPolicyTableEntry=bwmNewCfgPolicyTableEntry, bwmStatTcTable=bwmStatTcTable, bwmStatTcrName=bwmStatTcrName, bwmStatSpTcrOutdisoct=bwmStatSpTcrOutdisoct, bwmNewCfgContractIndx=bwmNewCfgContractIndx, bwmCurCfgContractIndx=bwmCurCfgContractIndx, bwmCurCfgContractUseTos=bwmCurCfgContractUseTos, bwmStatSpTcContractIndex=bwmStatSpTcContractIndex, bwmNewCfgContractTableEntry=bwmNewCfgContractTableEntry, bwmCurCfgPolicyTosIn=bwmCurCfgPolicyTosIn, bwmStatSpTcPortIndex=bwmStatSpTcPortIndex, bwmStatTcBufferMax=bwmStatTcBufferMax, bwmOperSendSMTP=bwmOperSendSMTP, bwmCurCfgPolicyBuffer=bwmCurCfgPolicyBuffer, bwmCurCfgPolicyTableEntry=bwmCurCfgPolicyTableEntry, bwmContractTableMaxEnt=bwmContractTableMaxEnt, bwmCurCfgPolicyResv=bwmCurCfgPolicyResv, bwmNewCfgPolicyTable=bwmNewCfgPolicyTable, bwmCurCfgContractPrec=bwmCurCfgContractPrec, bwmCurCfgPolicyIndx=bwmCurCfgPolicyIndx, bwmStatSpTcrTable=bwmStatSpTcrTable, bwmNewCfgContractDelete=bwmNewCfgContractDelete, bwmCurCfgContractPolicy=bwmCurCfgContractPolicy, bwmNewCfgPolicyTosIn=bwmNewCfgPolicyTosIn, bwmStatTcrTable=bwmStatTcrTable, bwmCurCfgPolicyTable=bwmCurCfgPolicyTable, bwmPolicyConfig=bwmPolicyConfig, bwmStatTcOutoct=bwmStatTcOutoct, bwmGeneralConfig=bwmGeneralConfig, bwmOper=bwmOper, bwmCurCfgContractName=bwmCurCfgContractName, bwmNewCfgContractPolicy=bwmNewCfgContractPolicy, bwmCurCfgPolicySoft=bwmCurCfgPolicySoft, bwm=bwm, bwmStatSpTcBufferMax=bwmStatSpTcBufferMax, bwmNewCfgContractName=bwmNewCfgContractName, bwmStatTcrContractIndex=bwmStatTcrContractIndex, bwmStatSpTcrName=bwmStatSpTcrName, bwmCurCfgGenState=bwmCurCfgGenState, bwmNewCfgContractTable=bwmNewCfgContractTable, bwmStatSpTcrBufferUsed=bwmStatSpTcrBufferUsed, bwmStatTcOutdisoct=bwmStatTcOutdisoct, bwmNewCfgGenSmtpUser=bwmNewCfgGenSmtpUser, bwmNewCfgContractUseTos=bwmNewCfgContractUseTos, bwmNewCfgContractHistory=bwmNewCfgContractHistory, bwmStatSpTcrPortIndex=bwmStatSpTcrPortIndex, bwmStatSpTcrEntry=bwmStatSpTcrEntry, bwmCurCfgContractHistory=bwmCurCfgContractHistory, bwmStatTcName=bwmStatTcName, bwmNewCfgContractState=bwmNewCfgContractState, bwmCurCfgContractState=bwmCurCfgContractState, bwmStatSpTcName=bwmStatSpTcName, bwmStatSpTcEntry=bwmStatSpTcEntry, bwmNewCfgGenState=bwmNewCfgGenState, bwmNewCfgPolicyHard=bwmNewCfgPolicyHard, bwmPolicyTableMaxEnt=bwmPolicyTableMaxEnt, bwmCurCfgGenSmtpUser=bwmCurCfgGenSmtpUser, bwmNewCfgGenEnforcePolicy=bwmNewCfgGenEnforcePolicy, bwmStatTcrBufferUsed=bwmStatTcrBufferUsed, bwmCurCfgPolicyTosOut=bwmCurCfgPolicyTosOut, bwmCurCfgContractTable=bwmCurCfgContractTable)
