#
# PySNMP MIB module CISCO-HW-MODULE-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-HW-MODULE-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:42:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoInterfaceIndexList, = mibBuilder.importSymbols("CISCO-TC", "CiscoInterfaceIndexList")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Counter32, MibIdentifier, ObjectIdentity, Bits, ModuleIdentity, TimeTicks, Integer32, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "MibIdentifier", "ObjectIdentity", "Bits", "ModuleIdentity", "TimeTicks", "Integer32", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoHwModuleControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 714))
ciscoHwModuleControlMIB.setRevisions(('2010-08-09 00:00', '2009-11-12 00:00',))
if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setLastUpdated('201008090000Z')
if mibBuilder.loadTexts: ciscoHwModuleControlMIB.setOrganization('Cisco Systems, Inc.')
ciscoHwModuleControlMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 0))
ciscoHwModuleControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 1))
ciscoHwModuleControlMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 2))
chmcOversubscription = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1))
chmcOperationalMode = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2))
chmcOversubModuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1), )
if mibBuilder.loadTexts: chmcOversubModuleTable.setStatus('current')
chmcOversubModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: chmcOversubModuleEntry.setStatus('current')
chmcOversubModuleCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("oversubConfigModuleLevel", 0), ("oversubConfigPortGroupLevel", 1), ("clearblockConfigPortGroupLevel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chmcOversubModuleCapabilities.setStatus('current')
chmcOversubModOversubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabledOnAllPortGroups", 1), ("disabledOnAllPortGroups", 2), ("portGroupSpecific", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOversubModOversubStatus.setStatus('current')
chmcOversubPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2), )
if mibBuilder.loadTexts: chmcOversubPortGroupTable.setStatus('current')
chmcOversubPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpIndex"))
if mibBuilder.loadTexts: chmcOversubPortGroupEntry.setStatus('current')
chmcOversubPortGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: chmcOversubPortGrpIndex.setStatus('current')
chmcOversubPortGrpIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 2), CiscoInterfaceIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chmcOversubPortGrpIfIndexList.setStatus('current')
chmcOversubPortGrpOversubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOversubPortGrpOversubStatus.setStatus('current')
chmcOversubPortGrpClearBlkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOversubPortGrpClearBlkStatus.setStatus('current')
chmcOperModePortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1), )
if mibBuilder.loadTexts: chmcOperModePortGroupTable.setStatus('current')
chmcOperModePortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-HW-MODULE-CONTROL-MIB", "chmcOperModePortGrpIndex"))
if mibBuilder.loadTexts: chmcOperModePortGroupEntry.setStatus('current')
chmcOperModePortGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: chmcOperModePortGrpIndex.setStatus('current')
chmcOperModePortGrpOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tenGigabitEthernet", 2), ("fortyGigabitEthernet", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chmcOperModePortGrpOperMode.setStatus('current')
chmcOperModePortGrpIfIndexList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 714, 1, 2, 1, 1, 3), CiscoInterfaceIndexList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chmcOperModePortGrpIfIndexList.setStatus('current')
chmcHwModuleControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 1))
chmcHwModuleControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2))
chmcHwModuleControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 1, 1)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubBaseGroup"), ("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubPgClearBlkGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chmcHwModuleControlMIBCompliance = chmcHwModuleControlMIBCompliance.setStatus('deprecated')
chmcHwModuleControlMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 1, 2)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubBaseGroup"), ("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOversubPgClearBlkGrp"), ("CISCO-HW-MODULE-CONTROL-MIB", "ciscoHmcMIBOperModeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    chmcHwModuleControlMIBCompliance1 = chmcHwModuleControlMIBCompliance1.setStatus('current')
ciscoHmcMIBOversubBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2, 1)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubModuleCapabilities"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubModOversubStatus"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpIfIndexList"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpOversubStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHmcMIBOversubBaseGroup = ciscoHmcMIBOversubBaseGroup.setStatus('current')
ciscoHmcMIBOversubPgClearBlkGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2, 2)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "chmcOversubPortGrpClearBlkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHmcMIBOversubPgClearBlkGrp = ciscoHmcMIBOversubPgClearBlkGrp.setStatus('current')
ciscoHmcMIBOperModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 714, 2, 2, 3)).setObjects(("CISCO-HW-MODULE-CONTROL-MIB", "chmcOperModePortGrpOperMode"), ("CISCO-HW-MODULE-CONTROL-MIB", "chmcOperModePortGrpIfIndexList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoHmcMIBOperModeGroup = ciscoHmcMIBOperModeGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-HW-MODULE-CONTROL-MIB", ciscoHwModuleControlMIBNotifs=ciscoHwModuleControlMIBNotifs, chmcHwModuleControlMIBCompliance=chmcHwModuleControlMIBCompliance, ciscoHmcMIBOversubPgClearBlkGrp=ciscoHmcMIBOversubPgClearBlkGrp, ciscoHmcMIBOperModeGroup=ciscoHmcMIBOperModeGroup, ciscoHwModuleControlMIBConform=ciscoHwModuleControlMIBConform, chmcOperModePortGroupTable=chmcOperModePortGroupTable, chmcOversubscription=chmcOversubscription, chmcOperModePortGrpIndex=chmcOperModePortGrpIndex, ciscoHwModuleControlMIBObjects=ciscoHwModuleControlMIBObjects, chmcOperationalMode=chmcOperationalMode, chmcOversubPortGrpIndex=chmcOversubPortGrpIndex, chmcHwModuleControlMIBCompliance1=chmcHwModuleControlMIBCompliance1, chmcOversubPortGroupTable=chmcOversubPortGroupTable, PYSNMP_MODULE_ID=ciscoHwModuleControlMIB, chmcOperModePortGrpOperMode=chmcOperModePortGrpOperMode, chmcOversubModuleEntry=chmcOversubModuleEntry, chmcOperModePortGroupEntry=chmcOperModePortGroupEntry, ciscoHwModuleControlMIB=ciscoHwModuleControlMIB, chmcOversubPortGrpIfIndexList=chmcOversubPortGrpIfIndexList, ciscoHmcMIBOversubBaseGroup=ciscoHmcMIBOversubBaseGroup, chmcOversubModOversubStatus=chmcOversubModOversubStatus, chmcHwModuleControlMIBGroups=chmcHwModuleControlMIBGroups, chmcOversubPortGrpOversubStatus=chmcOversubPortGrpOversubStatus, chmcOversubPortGroupEntry=chmcOversubPortGroupEntry, chmcOversubModuleTable=chmcOversubModuleTable, chmcOperModePortGrpIfIndexList=chmcOperModePortGrpIfIndexList, chmcHwModuleControlMIBCompliances=chmcHwModuleControlMIBCompliances, chmcOversubModuleCapabilities=chmcOversubModuleCapabilities, chmcOversubPortGrpClearBlkStatus=chmcOversubPortGrpClearBlkStatus)
