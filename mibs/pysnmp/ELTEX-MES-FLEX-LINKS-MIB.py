#
# PySNMP MIB module ELTEX-MES-FLEX-LINKS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-FLEX-LINKS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:46:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
eltMesMng, = mibBuilder.importSymbols("ELTEX-MES", "eltMesMng")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, Gauge32, NotificationType, Integer32, Counter64, ModuleIdentity, Unsigned32, ObjectIdentity, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Gauge32", "NotificationType", "Integer32", "Counter64", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
eltMesFlexLinksMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5))
eltMesFlexLinksMIB.setRevisions(('2015-11-19 00:00',))
if mibBuilder.loadTexts: eltMesFlexLinksMIB.setLastUpdated('201511190000Z')
if mibBuilder.loadTexts: eltMesFlexLinksMIB.setOrganization('Eltex Ltd.')
eltMesFlexLinksMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 0))
eltMesFlexLinksMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1))
eltMesFlexLinksMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2))
eltMesFlConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1))
eltMesFlStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 2))
eltFlIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 1), )
if mibBuilder.loadTexts: eltFlIfConfigTable.setStatus('deprecated')
eltFlIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 1, 1), ).setIndexNames((0, "ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfConfigPrimary"))
if mibBuilder.loadTexts: eltFlIfConfigEntry.setStatus('deprecated')
eltFlIfConfigPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: eltFlIfConfigPrimary.setStatus('deprecated')
eltFlIfConfigBackUp = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eltFlIfConfigBackUp.setStatus('deprecated')
eltFlEnableStatusChangeNotif = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltFlEnableStatusChangeNotif.setStatus('deprecated')
eltFlIfConfigExtTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 3), )
if mibBuilder.loadTexts: eltFlIfConfigExtTable.setStatus('deprecated')
eltFlIfConfigExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 3, 1), ).setIndexNames((0, "ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfConfigPrimary"))
if mibBuilder.loadTexts: eltFlIfConfigExtEntry.setStatus('deprecated')
eltFlIfConfigPreemptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("forced", 2), ("bandwidth", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltFlIfConfigPreemptionMode.setStatus('deprecated')
eltFlIfConfigPreemptionDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 1, 3, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltFlIfConfigPreemptionDelay.setStatus('deprecated')
eltFlIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: eltFlIfStatusTable.setStatus('deprecated')
eltFlIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfIndex"))
if mibBuilder.loadTexts: eltFlIfStatusEntry.setStatus('deprecated')
eltFlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 2, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltFlIfIndex.setStatus('deprecated')
eltFlIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forwarding", 1), ("blocking", 2), ("down", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltFlIfStatus.setStatus('deprecated')
eltFlIfStatusChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 0, 1)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfIndex"), ("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfStatus"))
if mibBuilder.loadTexts: eltFlIfStatusChangeNotif.setStatus('deprecated')
eltMesFlexLinksMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 1))
eltMesFlexLinksMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 2))
eltFlexLinksMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 1, 1)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlexLinksIfConfigGroup"), ("ELTEX-MES-FLEX-LINKS-MIB", "eltFlexLinksIfStatusGroup"), ("ELTEX-MES-FLEX-LINKS-MIB", "eltFlexLinksEnableNotifGroup"), ("ELTEX-MES-FLEX-LINKS-MIB", "eltFlexLinksNotifGroup"), ("ELTEX-MES-FLEX-LINKS-MIB", "eltFlexLinksPreemptionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltFlexLinksMIBCompliance = eltFlexLinksMIBCompliance.setStatus('deprecated')
eltFlexLinksIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 2, 1)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfConfigBackUp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltFlexLinksIfConfigGroup = eltFlexLinksIfConfigGroup.setStatus('deprecated')
eltFlexLinksIfStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 2, 2)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltFlexLinksIfStatusGroup = eltFlexLinksIfStatusGroup.setStatus('deprecated')
eltFlexLinksEnableNotifGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 2, 3)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlEnableStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltFlexLinksEnableNotifGroup = eltFlexLinksEnableNotifGroup.setStatus('deprecated')
eltFlexLinksNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 2, 4)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltFlexLinksNotifGroup = eltFlexLinksNotifGroup.setStatus('deprecated')
eltFlexLinksPreemptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 5, 2, 2, 5)).setObjects(("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfConfigPreemptionMode"), ("ELTEX-MES-FLEX-LINKS-MIB", "eltFlIfConfigPreemptionDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eltFlexLinksPreemptionGroup = eltFlexLinksPreemptionGroup.setStatus('deprecated')
mibBuilder.exportSymbols("ELTEX-MES-FLEX-LINKS-MIB", eltFlIfConfigExtEntry=eltFlIfConfigExtEntry, eltFlIfConfigExtTable=eltFlIfConfigExtTable, eltMesFlStatus=eltMesFlStatus, eltFlIfStatusChangeNotif=eltFlIfStatusChangeNotif, PYSNMP_MODULE_ID=eltMesFlexLinksMIB, eltMesFlexLinksMIBGroups=eltMesFlexLinksMIBGroups, eltFlIfStatus=eltFlIfStatus, eltFlIfStatusTable=eltFlIfStatusTable, eltFlIfStatusEntry=eltFlIfStatusEntry, eltMesFlConfig=eltMesFlConfig, eltFlIfIndex=eltFlIfIndex, eltMesFlexLinksMIBCompliances=eltMesFlexLinksMIBCompliances, eltFlexLinksEnableNotifGroup=eltFlexLinksEnableNotifGroup, eltFlEnableStatusChangeNotif=eltFlEnableStatusChangeNotif, eltFlexLinksNotifGroup=eltFlexLinksNotifGroup, eltFlexLinksIfStatusGroup=eltFlexLinksIfStatusGroup, eltFlexLinksIfConfigGroup=eltFlexLinksIfConfigGroup, eltFlIfConfigPrimary=eltFlIfConfigPrimary, eltFlIfConfigBackUp=eltFlIfConfigBackUp, eltFlIfConfigTable=eltFlIfConfigTable, eltFlIfConfigPreemptionDelay=eltFlIfConfigPreemptionDelay, eltMesFlexLinksMIB=eltMesFlexLinksMIB, eltMesFlexLinksMIBNotifs=eltMesFlexLinksMIBNotifs, eltFlIfConfigEntry=eltFlIfConfigEntry, eltMesFlexLinksMIBObjects=eltMesFlexLinksMIBObjects, eltFlexLinksPreemptionGroup=eltFlexLinksPreemptionGroup, eltFlexLinksMIBCompliance=eltFlexLinksMIBCompliance, eltFlIfConfigPreemptionMode=eltFlIfConfigPreemptionMode, eltMesFlexLinksMIBConformance=eltMesFlexLinksMIBConformance)
