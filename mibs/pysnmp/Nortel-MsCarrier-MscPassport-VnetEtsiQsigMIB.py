#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
DisplayString, RowStatus, StorageType, Unsigned32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "DisplayString", "RowStatus", "StorageType", "Unsigned32")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
mscSigChan, mscSigChanIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChan", "mscSigChanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, IpAddress, Counter64, Unsigned32, Counter32, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Integer32, TimeTicks, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "Counter64", "Unsigned32", "Counter32", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Integer32", "TimeTicks", "ObjectIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vnetEtsiQsigMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110))
mscSigChanEQsig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2))
mscSigChanEQsigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 1), )
if mibBuilder.loadTexts: mscSigChanEQsigRowStatusTable.setStatus('mandatory')
mscSigChanEQsigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigRowStatusEntry.setStatus('mandatory')
mscSigChanEQsigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigRowStatus.setStatus('mandatory')
mscSigChanEQsigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigComponentName.setStatus('mandatory')
mscSigChanEQsigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigStorageType.setStatus('mandatory')
mscSigChanEQsigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscSigChanEQsigIndex.setStatus('mandatory')
mscSigChanEQsigL2Table = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11), )
if mibBuilder.loadTexts: mscSigChanEQsigL2Table.setStatus('mandatory')
mscSigChanEQsigL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigL2Entry.setStatus('mandatory')
mscSigChanEQsigT23 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigT23.setStatus('mandatory')
mscSigChanEQsigT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigT200.setStatus('mandatory')
mscSigChanEQsigN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigN200.setStatus('mandatory')
mscSigChanEQsigT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigT203.setStatus('mandatory')
mscSigChanEQsigCircuitSwitchedK = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigCircuitSwitchedK.setStatus('mandatory')
mscSigChanEQsigL3Table = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 12), )
if mibBuilder.loadTexts: mscSigChanEQsigL3Table.setStatus('mandatory')
mscSigChanEQsigL3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigL3Entry.setStatus('mandatory')
mscSigChanEQsigT309 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 120)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigT309.setStatus('mandatory')
mscSigChanEQsigT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigT310.setStatus('mandatory')
mscSigChanEQsigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 13), )
if mibBuilder.loadTexts: mscSigChanEQsigProvTable.setStatus('mandatory')
mscSigChanEQsigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigProvEntry.setStatus('mandatory')
mscSigChanEQsigSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigSide.setStatus('mandatory')
mscSigChanEQsigMaxNonCallConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigMaxNonCallConcurrent.setStatus('mandatory')
mscSigChanEQsigOverlapSendingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigOverlapSendingEnabled.setStatus('mandatory')
mscSigChanEQsigOverlapReceivingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigOverlapReceivingEnabled.setStatus('mandatory')
mscSigChanEQsigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 14), )
if mibBuilder.loadTexts: mscSigChanEQsigStateTable.setStatus('mandatory')
mscSigChanEQsigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigStateEntry.setStatus('mandatory')
mscSigChanEQsigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigAdminState.setStatus('mandatory')
mscSigChanEQsigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigOperationalState.setStatus('mandatory')
mscSigChanEQsigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigUsageState.setStatus('mandatory')
mscSigChanEQsigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 15), )
if mibBuilder.loadTexts: mscSigChanEQsigStatsTable.setStatus('mandatory')
mscSigChanEQsigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigStatsEntry.setStatus('mandatory')
mscSigChanEQsigTotalCallsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigTotalCallsToIf.setStatus('mandatory')
mscSigChanEQsigTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigTotalCallsFromIf.setStatus('mandatory')
mscSigChanEQsigNonCallAssocSessionsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigNonCallAssocSessionsToIf.setStatus('mandatory')
mscSigChanEQsigNonCallAssocSessionsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigNonCallAssocSessionsFromIf.setStatus('mandatory')
mscSigChanEQsigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16), )
if mibBuilder.loadTexts: mscSigChanEQsigOperTable.setStatus('mandatory')
mscSigChanEQsigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigOperEntry.setStatus('mandatory')
mscSigChanEQsigActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigActiveChannels.setStatus('mandatory')
mscSigChanEQsigActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigActiveVoiceChannels.setStatus('mandatory')
mscSigChanEQsigActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigActiveDataChannels.setStatus('mandatory')
mscSigChanEQsigPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigPeakActiveChannels.setStatus('mandatory')
mscSigChanEQsigPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigPeakActiveVoiceChannels.setStatus('mandatory')
mscSigChanEQsigPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigPeakActiveDataChannels.setStatus('mandatory')
mscSigChanEQsigDChanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("outOfService", 0), ("establishing", 1), ("established", 2), ("enabling", 3), ("inService", 4), ("restarting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigDChanStatus.setStatus('mandatory')
mscSigChanEQsigToolsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 17), )
if mibBuilder.loadTexts: mscSigChanEQsigToolsTable.setStatus('mandatory')
mscSigChanEQsigToolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigToolsEntry.setStatus('mandatory')
mscSigChanEQsigTracing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigTracing.setStatus('mandatory')
mscSigChanEQsigEQsigSpecificProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 18), )
if mibBuilder.loadTexts: mscSigChanEQsigEQsigSpecificProvTable.setStatus('mandatory')
mscSigChanEQsigEQsigSpecificProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigEQsigSpecificProvEntry.setStatus('mandatory')
mscSigChanEQsigMsgSegmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigMsgSegmentation.setStatus('mandatory')
mscSigChanEQsigE1ChannelNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("skip16", 1), ("contiguous", 2))).clone('skip16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigE1ChannelNumbers.setStatus('mandatory')
mscSigChanEQsigEQsigSpecificOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 19), )
if mibBuilder.loadTexts: mscSigChanEQsigEQsigSpecificOpTable.setStatus('mandatory')
mscSigChanEQsigEQsigSpecificOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigEQsigSpecificOpEntry.setStatus('mandatory')
mscSigChanEQsigSegmentationAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 19, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigSegmentationAccepted.setStatus('mandatory')
mscSigChanEQsigSegmentationFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigSegmentationFailed.setStatus('mandatory')
mscSigChanEQsigFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2))
mscSigChanEQsigFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 1), )
if mibBuilder.loadTexts: mscSigChanEQsigFramerRowStatusTable.setStatus('mandatory')
mscSigChanEQsigFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigFramerRowStatusEntry.setStatus('mandatory')
mscSigChanEQsigFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerRowStatus.setStatus('mandatory')
mscSigChanEQsigFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerComponentName.setStatus('mandatory')
mscSigChanEQsigFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerStorageType.setStatus('mandatory')
mscSigChanEQsigFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscSigChanEQsigFramerIndex.setStatus('mandatory')
mscSigChanEQsigFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 10), )
if mibBuilder.loadTexts: mscSigChanEQsigFramerProvTable.setStatus('mandatory')
mscSigChanEQsigFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigFramerProvEntry.setStatus('mandatory')
mscSigChanEQsigFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscSigChanEQsigFramerInterfaceName.setStatus('mandatory')
mscSigChanEQsigFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 12), )
if mibBuilder.loadTexts: mscSigChanEQsigFramerStateTable.setStatus('mandatory')
mscSigChanEQsigFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigFramerStateEntry.setStatus('mandatory')
mscSigChanEQsigFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerAdminState.setStatus('mandatory')
mscSigChanEQsigFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerOperationalState.setStatus('mandatory')
mscSigChanEQsigFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerUsageState.setStatus('mandatory')
mscSigChanEQsigFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13), )
if mibBuilder.loadTexts: mscSigChanEQsigFramerStatsTable.setStatus('mandatory')
mscSigChanEQsigFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceNetworkingMIB", "mscSigChanIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigIndex"), (0, "Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", "mscSigChanEQsigFramerIndex"))
if mibBuilder.loadTexts: mscSigChanEQsigFramerStatsEntry.setStatus('mandatory')
mscSigChanEQsigFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerFrmToIf.setStatus('mandatory')
mscSigChanEQsigFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerFrmFromIf.setStatus('mandatory')
mscSigChanEQsigFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerOctetFromIf.setStatus('mandatory')
mscSigChanEQsigFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerAborts.setStatus('mandatory')
mscSigChanEQsigFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerCrcErrors.setStatus('mandatory')
mscSigChanEQsigFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerLrcErrors.setStatus('mandatory')
mscSigChanEQsigFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerNonOctetErrors.setStatus('mandatory')
mscSigChanEQsigFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerOverruns.setStatus('mandatory')
mscSigChanEQsigFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerUnderruns.setStatus('mandatory')
mscSigChanEQsigFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 115, 2, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscSigChanEQsigFramerLargeFrmErrors.setStatus('mandatory')
vnetEtsiQsigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 1))
vnetEtsiQsigGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 1, 1))
vnetEtsiQsigGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 1, 1, 3))
vnetEtsiQsigGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 1, 1, 3, 2))
vnetEtsiQsigCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 3))
vnetEtsiQsigCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 3, 1))
vnetEtsiQsigCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 3, 1, 3))
vnetEtsiQsigCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 110, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-VnetEtsiQsigMIB", mscSigChanEQsigT310=mscSigChanEQsigT310, mscSigChanEQsigEQsigSpecificProvEntry=mscSigChanEQsigEQsigSpecificProvEntry, mscSigChanEQsigFramerFrmToIf=mscSigChanEQsigFramerFrmToIf, mscSigChanEQsigComponentName=mscSigChanEQsigComponentName, mscSigChanEQsigRowStatus=mscSigChanEQsigRowStatus, mscSigChanEQsigProvTable=mscSigChanEQsigProvTable, mscSigChanEQsigFramerComponentName=mscSigChanEQsigFramerComponentName, vnetEtsiQsigGroup=vnetEtsiQsigGroup, mscSigChanEQsigFramerIndex=mscSigChanEQsigFramerIndex, mscSigChanEQsigT203=mscSigChanEQsigT203, mscSigChanEQsigRowStatusEntry=mscSigChanEQsigRowStatusEntry, mscSigChanEQsigFramerOctetFromIf=mscSigChanEQsigFramerOctetFromIf, mscSigChanEQsigOverlapReceivingEnabled=mscSigChanEQsigOverlapReceivingEnabled, vnetEtsiQsigCapabilities=vnetEtsiQsigCapabilities, mscSigChanEQsigN200=mscSigChanEQsigN200, mscSigChanEQsigMsgSegmentation=mscSigChanEQsigMsgSegmentation, mscSigChanEQsigIndex=mscSigChanEQsigIndex, mscSigChanEQsigOperTable=mscSigChanEQsigOperTable, mscSigChanEQsigFramerLrcErrors=mscSigChanEQsigFramerLrcErrors, mscSigChanEQsigSegmentationAccepted=mscSigChanEQsigSegmentationAccepted, mscSigChanEQsigFramerUnderruns=mscSigChanEQsigFramerUnderruns, vnetEtsiQsigGroupCA02=vnetEtsiQsigGroupCA02, mscSigChanEQsigEQsigSpecificProvTable=mscSigChanEQsigEQsigSpecificProvTable, mscSigChanEQsigFramerAdminState=mscSigChanEQsigFramerAdminState, mscSigChanEQsigPeakActiveChannels=mscSigChanEQsigPeakActiveChannels, mscSigChanEQsigFramerStateEntry=mscSigChanEQsigFramerStateEntry, mscSigChanEQsigFramerLargeFrmErrors=mscSigChanEQsigFramerLargeFrmErrors, mscSigChanEQsigActiveVoiceChannels=mscSigChanEQsigActiveVoiceChannels, mscSigChanEQsigFramerStateTable=mscSigChanEQsigFramerStateTable, mscSigChanEQsigMaxNonCallConcurrent=mscSigChanEQsigMaxNonCallConcurrent, mscSigChanEQsigPeakActiveDataChannels=mscSigChanEQsigPeakActiveDataChannels, mscSigChanEQsigFramerOperationalState=mscSigChanEQsigFramerOperationalState, mscSigChanEQsigActiveChannels=mscSigChanEQsigActiveChannels, mscSigChanEQsigEQsigSpecificOpEntry=mscSigChanEQsigEQsigSpecificOpEntry, mscSigChanEQsigFramerUsageState=mscSigChanEQsigFramerUsageState, mscSigChanEQsigTotalCallsToIf=mscSigChanEQsigTotalCallsToIf, mscSigChanEQsigDChanStatus=mscSigChanEQsigDChanStatus, vnetEtsiQsigGroupCA=vnetEtsiQsigGroupCA, mscSigChanEQsigAdminState=mscSigChanEQsigAdminState, mscSigChanEQsigL2Table=mscSigChanEQsigL2Table, mscSigChanEQsigL3Table=mscSigChanEQsigL3Table, mscSigChanEQsigNonCallAssocSessionsFromIf=mscSigChanEQsigNonCallAssocSessionsFromIf, mscSigChanEQsigE1ChannelNumbers=mscSigChanEQsigE1ChannelNumbers, mscSigChanEQsigFramerInterfaceName=mscSigChanEQsigFramerInterfaceName, mscSigChanEQsigSegmentationFailed=mscSigChanEQsigSegmentationFailed, mscSigChanEQsigToolsTable=mscSigChanEQsigToolsTable, mscSigChanEQsigOperEntry=mscSigChanEQsigOperEntry, mscSigChanEQsigActiveDataChannels=mscSigChanEQsigActiveDataChannels, mscSigChanEQsigTracing=mscSigChanEQsigTracing, vnetEtsiQsigCapabilitiesCA02A=vnetEtsiQsigCapabilitiesCA02A, mscSigChanEQsigT23=mscSigChanEQsigT23, mscSigChanEQsigProvEntry=mscSigChanEQsigProvEntry, vnetEtsiQsigGroupCA02A=vnetEtsiQsigGroupCA02A, mscSigChanEQsigCircuitSwitchedK=mscSigChanEQsigCircuitSwitchedK, mscSigChanEQsigFramerStatsTable=mscSigChanEQsigFramerStatsTable, mscSigChanEQsigT309=mscSigChanEQsigT309, mscSigChanEQsigStatsEntry=mscSigChanEQsigStatsEntry, mscSigChanEQsigUsageState=mscSigChanEQsigUsageState, mscSigChanEQsigT200=mscSigChanEQsigT200, mscSigChanEQsigFramerRowStatus=mscSigChanEQsigFramerRowStatus, mscSigChanEQsigFramerRowStatusTable=mscSigChanEQsigFramerRowStatusTable, mscSigChanEQsigTotalCallsFromIf=mscSigChanEQsigTotalCallsFromIf, vnetEtsiQsigCapabilitiesCA02=vnetEtsiQsigCapabilitiesCA02, mscSigChanEQsigRowStatusTable=mscSigChanEQsigRowStatusTable, mscSigChanEQsigFramer=mscSigChanEQsigFramer, mscSigChanEQsigNonCallAssocSessionsToIf=mscSigChanEQsigNonCallAssocSessionsToIf, mscSigChanEQsigStateTable=mscSigChanEQsigStateTable, mscSigChanEQsigFramerFrmFromIf=mscSigChanEQsigFramerFrmFromIf, mscSigChanEQsigStatsTable=mscSigChanEQsigStatsTable, mscSigChanEQsigFramerProvTable=mscSigChanEQsigFramerProvTable, mscSigChanEQsig=mscSigChanEQsig, mscSigChanEQsigSide=mscSigChanEQsigSide, mscSigChanEQsigFramerOverruns=mscSigChanEQsigFramerOverruns, mscSigChanEQsigOverlapSendingEnabled=mscSigChanEQsigOverlapSendingEnabled, mscSigChanEQsigFramerNonOctetErrors=mscSigChanEQsigFramerNonOctetErrors, mscSigChanEQsigFramerProvEntry=mscSigChanEQsigFramerProvEntry, mscSigChanEQsigFramerAborts=mscSigChanEQsigFramerAborts, vnetEtsiQsigMIB=vnetEtsiQsigMIB, mscSigChanEQsigL3Entry=mscSigChanEQsigL3Entry, mscSigChanEQsigFramerStorageType=mscSigChanEQsigFramerStorageType, mscSigChanEQsigFramerStatsEntry=mscSigChanEQsigFramerStatsEntry, mscSigChanEQsigL2Entry=mscSigChanEQsigL2Entry, mscSigChanEQsigFramerRowStatusEntry=mscSigChanEQsigFramerRowStatusEntry, mscSigChanEQsigOperationalState=mscSigChanEQsigOperationalState, mscSigChanEQsigPeakActiveVoiceChannels=mscSigChanEQsigPeakActiveVoiceChannels, mscSigChanEQsigEQsigSpecificOpTable=mscSigChanEQsigEQsigSpecificOpTable, mscSigChanEQsigFramerCrcErrors=mscSigChanEQsigFramerCrcErrors, mscSigChanEQsigToolsEntry=mscSigChanEQsigToolsEntry, vnetEtsiQsigCapabilitiesCA=vnetEtsiQsigCapabilitiesCA, mscSigChanEQsigStorageType=mscSigChanEQsigStorageType, mscSigChanEQsigStateEntry=mscSigChanEQsigStateEntry)
