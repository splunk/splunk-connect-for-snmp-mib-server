#
# PySNMP MIB module VERTICAL-std-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL-std-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, NotificationType, Counter64, IpAddress, enterprises, TimeTicks, iso, Counter32, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, Bits, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Counter64", "IpAddress", "enterprises", "TimeTicks", "iso", "Counter32", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "Bits", "NotificationType", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vertical = MibIdentifier((1, 3, 6, 1, 4, 1, 2338))
selfTestDaemon = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 8))
stdSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 8, 1))
sysOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 2338, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("running", 1), ("startUpInProgress", 2), ("upgradeInProgress", 3), ("restoreInProgress", 4), ("error", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysOperStatus.setStatus('mandatory')
sysCurrentVersion = MibScalar((1, 3, 6, 1, 4, 1, 2338, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCurrentVersion.setStatus('mandatory')
stdComponentGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 8, 2))
stdComponentTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1), )
if mibBuilder.loadTexts: stdComponentTable.setStatus('mandatory')
stdComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1), ).setIndexNames((0, "VERTICAL-std-MIB", "compIndex"))
if mibBuilder.loadTexts: stdComponentEntry.setStatus('mandatory')
compIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: compIndex.setStatus('mandatory')
compName = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compName.setStatus('mandatory')
compType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 2000, 2001, 2002, 2003))).clone(namedValues=NamedValues(("type-driver", 1), ("type-service", 16), ("type-executable", 2000), ("type-non-vni-driver", 2001), ("type-non-vni-service", 2002), ("type-non-vni-executable", 2003)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compType.setStatus('mandatory')
compInstallStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 1))).clone(namedValues=NamedValues(("uninstalled", 100), ("installed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compInstallStatus.setStatus('mandatory')
compOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 1025))).clone(namedValues=NamedValues(("stopped", 1), ("start-pending", 2), ("stop-pending", 3), ("running", 4), ("continue-pending", 5), ("pause-pending", 6), ("paused", 7), ("unknown", 8), ("disabled", 1025)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compOperStatus.setStatus('mandatory')
compEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(100, 1))).clone(namedValues=NamedValues(("enabled", 100), ("disabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compEnabled.setStatus('mandatory')
compLastStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 8, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: compLastStart.setStatus('mandatory')
stdCompFailedToStart = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,26)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdCompAttemptRestart = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,27)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdCompFailedToReStart = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,28)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdCompRestartComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,29)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdUpgradeStarted = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,30)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdUnpackingFiles = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,31)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdUnpackingComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,32)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdUpgradeBeingApplied = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,33)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdUpgradeInProgress = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,34)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdUpgradeComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,35)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdUpgradeError = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,36)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdRestoreStarted = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,37)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdRestoreInProgress = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,38)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdRestoreComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,39)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdRestoreError = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,40)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdRebootingMachine = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,41)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdVerifyingSystem = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,42)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdIOUptoDate = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,50)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdBadCABFile = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,51)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdNotEnoughDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,52)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"))
stdIoNotOperational = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,63)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdPrerequisiteMissing = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,67)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdPLDFailed = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,70)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdUnsupportedConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,71)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
stdInvalidConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,72)).setObjects(("VERTICAL-std-MIB", "sysCurrentVersion"), ("VERTICAL-std-MIB", "compName"))
mibBuilder.exportSymbols("VERTICAL-std-MIB", stdRestoreInProgress=stdRestoreInProgress, stdCompAttemptRestart=stdCompAttemptRestart, compInstallStatus=compInstallStatus, compOperStatus=compOperStatus, stdSystemGroup=stdSystemGroup, stdNotEnoughDiskSpace=stdNotEnoughDiskSpace, stdCompRestartComplete=stdCompRestartComplete, stdRestoreError=stdRestoreError, stdUnsupportedConfiguration=stdUnsupportedConfiguration, stdUnpackingComplete=stdUnpackingComplete, compIndex=compIndex, stdCompFailedToStart=stdCompFailedToStart, selfTestDaemon=selfTestDaemon, compEnabled=compEnabled, stdUpgradeComplete=stdUpgradeComplete, stdVerifyingSystem=stdVerifyingSystem, stdComponentGroup=stdComponentGroup, stdCompFailedToReStart=stdCompFailedToReStart, stdRestoreStarted=stdRestoreStarted, stdUpgradeBeingApplied=stdUpgradeBeingApplied, stdIoNotOperational=stdIoNotOperational, compType=compType, stdPLDFailed=stdPLDFailed, stdUpgradeStarted=stdUpgradeStarted, stdRebootingMachine=stdRebootingMachine, stdPrerequisiteMissing=stdPrerequisiteMissing, stdIOUptoDate=stdIOUptoDate, sysOperStatus=sysOperStatus, compLastStart=compLastStart, stdUnpackingFiles=stdUnpackingFiles, stdComponentEntry=stdComponentEntry, stdInvalidConfiguration=stdInvalidConfiguration, vertical=vertical, compName=compName, stdComponentTable=stdComponentTable, stdRestoreComplete=stdRestoreComplete, stdBadCABFile=stdBadCABFile, stdUpgradeError=stdUpgradeError, sysCurrentVersion=sysCurrentVersion, stdUpgradeInProgress=stdUpgradeInProgress)
