#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
mscLpIndex, mscLp = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex", "mscLp")
Integer32, StorageType, RowStatus, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "StorageType", "RowStatus", "DisplayString")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Gauge32, Integer32, ModuleIdentity, iso, IpAddress, MibIdentifier, Bits, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "Integer32", "ModuleIdentity", "iso", "IpAddress", "MibIdentifier", "Bits", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
externalTimingDS1MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151))
mscLpEDS1 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28))
mscLpEDS1RowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 1), )
if mibBuilder.loadTexts: mscLpEDS1RowStatusTable.setStatus('mandatory')
mscLpEDS1RowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB", "mscLpEDS1Index"))
if mibBuilder.loadTexts: mscLpEDS1RowStatusEntry.setStatus('mandatory')
mscLpEDS1RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEDS1RowStatus.setStatus('mandatory')
mscLpEDS1ComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1ComponentName.setStatus('mandatory')
mscLpEDS1StorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1StorageType.setStatus('mandatory')
mscLpEDS1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscLpEDS1Index.setStatus('mandatory')
mscLpEDS1ProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 10), )
if mibBuilder.loadTexts: mscLpEDS1ProvTable.setStatus('mandatory')
mscLpEDS1ProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB", "mscLpEDS1Index"))
if mibBuilder.loadTexts: mscLpEDS1ProvEntry.setStatus('mandatory')
mscLpEDS1LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("d4", 0), ("esf", 1))).clone('esf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscLpEDS1LineType.setStatus('mandatory')
mscLpEDS1OperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 14), )
if mibBuilder.loadTexts: mscLpEDS1OperStatusTable.setStatus('mandatory')
mscLpEDS1OperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB", "mscLpEDS1Index"))
if mibBuilder.loadTexts: mscLpEDS1OperStatusEntry.setStatus('mandatory')
mscLpEDS1SnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1SnmpOperStatus.setStatus('mandatory')
mscLpEDS1StateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15), )
if mibBuilder.loadTexts: mscLpEDS1StateTable.setStatus('mandatory')
mscLpEDS1StateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB", "mscLpEDS1Index"))
if mibBuilder.loadTexts: mscLpEDS1StateEntry.setStatus('mandatory')
mscLpEDS1AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1AdminState.setStatus('mandatory')
mscLpEDS1OperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1OperationalState.setStatus('mandatory')
mscLpEDS1UsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1UsageState.setStatus('mandatory')
mscLpEDS1AvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1AvailabilityStatus.setStatus('mandatory')
mscLpEDS1ProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1ProceduralStatus.setStatus('mandatory')
mscLpEDS1ControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1ControlStatus.setStatus('mandatory')
mscLpEDS1AlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1AlarmStatus.setStatus('mandatory')
mscLpEDS1StandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1StandbyStatus.setStatus('mandatory')
mscLpEDS1UnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1UnknownStatus.setStatus('mandatory')
mscLpEDS1OperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 16), )
if mibBuilder.loadTexts: mscLpEDS1OperTable.setStatus('mandatory')
mscLpEDS1OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-LogicalProcessorMIB", "mscLpIndex"), (0, "Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB", "mscLpEDS1Index"))
if mibBuilder.loadTexts: mscLpEDS1OperEntry.setStatus('mandatory')
mscLpEDS1LosAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1LosAlarm.setStatus('mandatory')
mscLpEDS1LofAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1LofAlarm.setStatus('mandatory')
mscLpEDS1RxAisAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 12, 28, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscLpEDS1RxAisAlarm.setStatus('mandatory')
externalTimingDS1Group = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 1))
externalTimingDS1GroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 1, 1))
externalTimingDS1GroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 1, 1, 3))
externalTimingDS1GroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 1, 1, 3, 2))
externalTimingDS1Capabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 3))
externalTimingDS1CapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 3, 1))
externalTimingDS1CapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 3, 1, 3))
externalTimingDS1CapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 151, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-ExternalTimingDS1MIB", mscLpEDS1StorageType=mscLpEDS1StorageType, mscLpEDS1OperStatusTable=mscLpEDS1OperStatusTable, externalTimingDS1GroupCA02=externalTimingDS1GroupCA02, externalTimingDS1MIB=externalTimingDS1MIB, mscLpEDS1StandbyStatus=mscLpEDS1StandbyStatus, mscLpEDS1ProvEntry=mscLpEDS1ProvEntry, mscLpEDS1UsageState=mscLpEDS1UsageState, mscLpEDS1RowStatusEntry=mscLpEDS1RowStatusEntry, mscLpEDS1LofAlarm=mscLpEDS1LofAlarm, mscLpEDS1SnmpOperStatus=mscLpEDS1SnmpOperStatus, mscLpEDS1LineType=mscLpEDS1LineType, mscLpEDS1AvailabilityStatus=mscLpEDS1AvailabilityStatus, mscLpEDS1OperEntry=mscLpEDS1OperEntry, externalTimingDS1CapabilitiesCA=externalTimingDS1CapabilitiesCA, externalTimingDS1GroupCA=externalTimingDS1GroupCA, mscLpEDS1Index=mscLpEDS1Index, mscLpEDS1RowStatus=mscLpEDS1RowStatus, mscLpEDS1RxAisAlarm=mscLpEDS1RxAisAlarm, externalTimingDS1Capabilities=externalTimingDS1Capabilities, mscLpEDS1StateTable=mscLpEDS1StateTable, externalTimingDS1GroupCA02A=externalTimingDS1GroupCA02A, mscLpEDS1AlarmStatus=mscLpEDS1AlarmStatus, mscLpEDS1OperationalState=mscLpEDS1OperationalState, mscLpEDS1ProceduralStatus=mscLpEDS1ProceduralStatus, mscLpEDS1=mscLpEDS1, externalTimingDS1CapabilitiesCA02A=externalTimingDS1CapabilitiesCA02A, mscLpEDS1RowStatusTable=mscLpEDS1RowStatusTable, mscLpEDS1UnknownStatus=mscLpEDS1UnknownStatus, mscLpEDS1OperTable=mscLpEDS1OperTable, mscLpEDS1StateEntry=mscLpEDS1StateEntry, mscLpEDS1ControlStatus=mscLpEDS1ControlStatus, externalTimingDS1CapabilitiesCA02=externalTimingDS1CapabilitiesCA02, externalTimingDS1Group=externalTimingDS1Group, mscLpEDS1ComponentName=mscLpEDS1ComponentName, mscLpEDS1ProvTable=mscLpEDS1ProvTable, mscLpEDS1AdminState=mscLpEDS1AdminState, mscLpEDS1OperStatusEntry=mscLpEDS1OperStatusEntry, mscLpEDS1LosAlarm=mscLpEDS1LosAlarm)
