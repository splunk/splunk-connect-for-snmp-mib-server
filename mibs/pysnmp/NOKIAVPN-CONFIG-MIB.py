#
# PySNMP MIB module NOKIAVPN-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NOKIAVPN-CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:13:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
nokiaVPNModules, config = mibBuilder.importSymbols("NOKIAVPN-MIB", "nokiaVPNModules", "config")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Bits, Unsigned32, TimeTicks, Gauge32, NotificationType, ObjectIdentity, IpAddress, MibIdentifier, Counter64, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Bits", "Unsigned32", "TimeTicks", "Gauge32", "NotificationType", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter64", "iso", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nokiaVPNConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 94, 1, 41, 5, 6))
nokiaVPNConfigMIB.setRevisions(('2001-01-18 00:00',))
if mibBuilder.loadTexts: nokiaVPNConfigMIB.setLastUpdated('200101180000Z')
if mibBuilder.loadTexts: nokiaVPNConfigMIB.setOrganization('Nokia Internet Communications.')
configDirtyBit = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: configDirtyBit.setStatus('current')
configCommit = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configCommit.setStatus('current')
configPollrate = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configPollrate.setStatus('current')
configTrapDelay = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTrapDelay.setStatus('current')
configTresholdCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTresholdCPUUsage.setStatus('current')
configTresholdIOLoad = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTresholdIOLoad.setStatus('current')
configTresholdUDPDrop = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTresholdUDPDrop.setStatus('current')
configTresholdIPDrop = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTresholdIPDrop.setStatus('current')
configTresholdMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configTresholdMemUsage.setStatus('current')
configValCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configValCPUUsage.setStatus('current')
configValIOLoad = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configValIOLoad.setStatus('current')
configValUDPDrop = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configValUDPDrop.setStatus('current')
configValIPDrop = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configValIPDrop.setStatus('current')
configValMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 41, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configValMemUsage.setStatus('current')
mibBuilder.exportSymbols("NOKIAVPN-CONFIG-MIB", configValUDPDrop=configValUDPDrop, configValIOLoad=configValIOLoad, configTresholdIPDrop=configTresholdIPDrop, configValCPUUsage=configValCPUUsage, configPollrate=configPollrate, configTresholdUDPDrop=configTresholdUDPDrop, configTresholdMemUsage=configTresholdMemUsage, configTresholdIOLoad=configTresholdIOLoad, configValIPDrop=configValIPDrop, configValMemUsage=configValMemUsage, configCommit=configCommit, configTresholdCPUUsage=configTresholdCPUUsage, nokiaVPNConfigMIB=nokiaVPNConfigMIB, configTrapDelay=configTrapDelay, configDirtyBit=configDirtyBit, PYSNMP_MODULE_ID=nokiaVPNConfigMIB)
