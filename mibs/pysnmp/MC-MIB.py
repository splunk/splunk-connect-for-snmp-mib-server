#
# PySNMP MIB module MC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:00:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
MmGlobalIdentifier, MmGatekeeperID, MmTAddressTag, MmEndpointID = mibBuilder.importSymbols("MULTI-MEDIA-MIB-TC", "MmGlobalIdentifier", "MmGatekeeperID", "MmTAddressTag", "MmEndpointID")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, enterprises, Gauge32, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, Counter32, Counter64, IpAddress, ModuleIdentity, Bits, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "enterprises", "Gauge32", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "Counter32", "Counter64", "IpAddress", "ModuleIdentity", "Bits", "Integer32", "MibIdentifier")
RowStatus, DateAndTime, TruthValue, DisplayString, TAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DateAndTime", "TruthValue", "DisplayString", "TAddress", "TextualConvention")
media = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2))
h323MC = ModuleIdentity((1, 3, 6, 1, 4, 1, 3011, 2, 2))
if mibBuilder.loadTexts: h323MC.setLastUpdated('9807202253Z')
if mibBuilder.loadTexts: h323MC.setOrganization('VideoServer')
mcConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1))
mcConference = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2))
mcStats = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3))
mcEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 4))
mcConfigMcCallSignalingTag = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 1), MmTAddressTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConfigMcCallSignalingTag.setStatus('current')
mcConfigMcCallSignalingAddress = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 2), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConfigMcCallSignalingAddress.setStatus('current')
mcConfigGatekeeperAddressTag = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 3), MmTAddressTag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcConfigGatekeeperAddressTag.setStatus('current')
mcConfigGatekeeperAddress = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 4), TAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcConfigGatekeeperAddress.setStatus('current')
mcConfigIsRegisteredWithGatekeeper = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcConfigIsRegisteredWithGatekeeper.setStatus('current')
mcConferenceTable = MibTable((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1), )
if mibBuilder.loadTexts: mcConferenceTable.setStatus('current')
mcConferenceTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1), ).setIndexNames((0, "MC-MIB", "mcConferenceConferenceId"))
if mibBuilder.loadTexts: mcConferenceTableEntry.setStatus('current')
mcConferenceConferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 1), MmGlobalIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceConferenceId.setStatus('current')
mcConferenceConferenceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceConferenceStartTime.setStatus('current')
mcConferenceConferenceEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceConferenceEndTime.setStatus('current')
mcConferenceCentralizedOrDistributed = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("centralized", 1), ("distributed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceCentralizedOrDistributed.setStatus('current')
mcConferenceUniOrMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unicast", 1), ("multicast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceUniOrMulticast.setStatus('current')
mcConferenceActiveMcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 1, 1, 6), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceActiveMcAddress.setStatus('current')
mcConferenceParticipantsTable = MibTable((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2), )
if mibBuilder.loadTexts: mcConferenceParticipantsTable.setStatus('current')
mcConferenceParticipantsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1), ).setIndexNames((0, "MC-MIB", "mcConferenceConferenceId"), (0, "MC-MIB", "mcConferenceParticipantsTableIndex"))
if mibBuilder.loadTexts: mcConferenceParticipantsTableEntry.setStatus('current')
mcConferenceParticipantsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsTableIndex.setStatus('current')
mcConferenceParticipantsTerminalLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsTerminalLabel.setStatus('current')
mcConferenceParticipantsCallSignalingtAddressTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 3), MmTAddressTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsCallSignalingtAddressTag.setStatus('current')
mcConferenceParticipantsCallSignalingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 4), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsCallSignalingAddress.setStatus('current')
mcConferenceParticipantsCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 5), MmGlobalIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsCallId.setStatus('current')
mcConferenceParticipantsControlChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsControlChannelIndex.setStatus('current')
mcConferenceParticipantsNumberOfLogicalChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsNumberOfLogicalChannels.setStatus('current')
mcConferenceParticipantsRtpSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3011, 2, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcConferenceParticipantsRtpSessionIndex.setStatus('current')
mcStatsTotalConferences = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcStatsTotalConferences.setStatus('current')
mcStatsSuccessfullyCompletedConferences = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcStatsSuccessfullyCompletedConferences.setStatus('current')
mcStatsAbnormalyTerminatedConferences = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcStatsAbnormalyTerminatedConferences.setStatus('current')
lastConferenceTerminationReason = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalTermination", 1), ("administrativelyTerminated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastConferenceTerminationReason.setStatus('current')
lastTerminatedConferenceId = MibScalar((1, 3, 6, 1, 4, 1, 3011, 2, 2, 4, 2), MmGlobalIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastTerminatedConferenceId.setStatus('current')
conferenceTermination = NotificationType((1, 3, 6, 1, 4, 1, 3011, 2, 2, 4, 3)).setObjects(("MC-MIB", "lastTerminatedConferenceId"), ("MC-MIB", "lastConferenceTerminationReason"))
if mibBuilder.loadTexts: conferenceTermination.setStatus('current')
mcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5))
mcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5, 1))
configGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5, 1, 1)).setObjects(("MC-MIB", "mcConfigMcCallSignalingTag"), ("MC-MIB", "mcConfigMcCallSignalingAddress"), ("MC-MIB", "mcConfigGatekeeperAddressTag"), ("MC-MIB", "mcConfigGatekeeperAddress"), ("MC-MIB", "mcConfigIsRegisteredWithGatekeeper"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    configGroup = configGroup.setStatus('current')
conferenceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5, 1, 2)).setObjects(("MC-MIB", "mcConferenceConferenceId"), ("MC-MIB", "mcConferenceConferenceStartTime"), ("MC-MIB", "mcConferenceConferenceEndTime"), ("MC-MIB", "mcConferenceCentralizedOrDistributed"), ("MC-MIB", "mcConferenceUniOrMulticast"), ("MC-MIB", "mcConferenceActiveMcAddress"), ("MC-MIB", "mcConferenceParticipantsTerminalLabel"), ("MC-MIB", "mcConferenceParticipantsCallSignalingtAddressTag"), ("MC-MIB", "mcConferenceParticipantsCallSignalingAddress"), ("MC-MIB", "mcConferenceParticipantsCallId"), ("MC-MIB", "mcConferenceParticipantsControlChannelIndex"), ("MC-MIB", "mcConferenceParticipantsNumberOfLogicalChannels"), ("MC-MIB", "mcConferenceParticipantsRtpSessionIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    conferenceGroup = conferenceGroup.setStatus('current')
mcStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5, 1, 4)).setObjects(("MC-MIB", "mcStatsTotalConferences"), ("MC-MIB", "mcStatsSuccessfullyCompletedConferences"), ("MC-MIB", "mcStatsAbnormalyTerminatedConferences"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mcStatsGroup = mcStatsGroup.setStatus('current')
mcEventsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5, 1, 5)).setObjects(("MC-MIB", "lastConferenceTerminationReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mcEventsGroup = mcEventsGroup.setStatus('current')
mcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3011, 2, 2, 5, 2)).setObjects(("MC-MIB", "configGroup"), ("MC-MIB", "mcConferenceGroup"), ("MC-MIB", "mcStatsGroup"), ("MC-MIB", "mcEventsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mcMIBCompliance = mcMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("MC-MIB", mcConferenceConferenceId=mcConferenceConferenceId, mcConferenceParticipantsCallId=mcConferenceParticipantsCallId, h323MC=h323MC, mcConferenceConferenceEndTime=mcConferenceConferenceEndTime, conferenceTermination=conferenceTermination, mcConfigGatekeeperAddressTag=mcConfigGatekeeperAddressTag, mcConfigMcCallSignalingTag=mcConfigMcCallSignalingTag, mcConferenceActiveMcAddress=mcConferenceActiveMcAddress, mcEvents=mcEvents, mcConferenceParticipantsControlChannelIndex=mcConferenceParticipantsControlChannelIndex, mcConferenceConferenceStartTime=mcConferenceConferenceStartTime, mcMIBConformance=mcMIBConformance, mcMIBGroups=mcMIBGroups, mcConferenceParticipantsRtpSessionIndex=mcConferenceParticipantsRtpSessionIndex, conferenceGroup=conferenceGroup, mcStatsGroup=mcStatsGroup, mcConferenceParticipantsCallSignalingtAddressTag=mcConferenceParticipantsCallSignalingtAddressTag, mcConferenceCentralizedOrDistributed=mcConferenceCentralizedOrDistributed, mcConfig=mcConfig, lastConferenceTerminationReason=lastConferenceTerminationReason, mcConferenceParticipantsTableIndex=mcConferenceParticipantsTableIndex, mcConfigMcCallSignalingAddress=mcConfigMcCallSignalingAddress, mcConferenceParticipantsCallSignalingAddress=mcConferenceParticipantsCallSignalingAddress, media=media, mcEventsGroup=mcEventsGroup, mcConferenceUniOrMulticast=mcConferenceUniOrMulticast, lastTerminatedConferenceId=lastTerminatedConferenceId, mcConferenceTableEntry=mcConferenceTableEntry, mcConfigIsRegisteredWithGatekeeper=mcConfigIsRegisteredWithGatekeeper, mcMIBCompliance=mcMIBCompliance, mcStats=mcStats, mcConferenceParticipantsTerminalLabel=mcConferenceParticipantsTerminalLabel, mcConference=mcConference, mcConferenceParticipantsTable=mcConferenceParticipantsTable, mcConferenceParticipantsNumberOfLogicalChannels=mcConferenceParticipantsNumberOfLogicalChannels, mcStatsAbnormalyTerminatedConferences=mcStatsAbnormalyTerminatedConferences, mcStatsSuccessfullyCompletedConferences=mcStatsSuccessfullyCompletedConferences, PYSNMP_MODULE_ID=h323MC, mcConfigGatekeeperAddress=mcConfigGatekeeperAddress, mcStatsTotalConferences=mcStatsTotalConferences, mcConferenceParticipantsTableEntry=mcConferenceParticipantsTableEntry, configGroup=configGroup, mcConferenceTable=mcConferenceTable)
