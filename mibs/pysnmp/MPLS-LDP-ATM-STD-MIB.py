#
# PySNMP MIB module MPLS-LDP-ATM-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MPLS-LDP-ATM-STD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:04:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
AtmVpIdentifier, = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
mplsLdpEntityLdpId, mplsLdpPeerLdpId, mplsLdpEntityIndex = mibBuilder.importSymbols("MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId", "mplsLdpPeerLdpId", "mplsLdpEntityIndex")
MplsAtmVcIdentifier, mplsStdMIB = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsAtmVcIdentifier", "mplsStdMIB")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, NotificationType, ObjectIdentity, MibIdentifier, IpAddress, Gauge32, Integer32, Counter64, TimeTicks, Bits, Unsigned32, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "ObjectIdentity", "MibIdentifier", "IpAddress", "Gauge32", "Integer32", "Counter64", "TimeTicks", "Bits", "Unsigned32", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
StorageType, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "DisplayString", "RowStatus", "TextualConvention")
mplsLdpAtmStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 5))
mplsLdpAtmStdMIB.setRevisions(('2004-06-03 00:00',))
if mibBuilder.loadTexts: mplsLdpAtmStdMIB.setLastUpdated('200406030000Z')
if mibBuilder.loadTexts: mplsLdpAtmStdMIB.setOrganization('Multiprotocol Label Switching (mpls) Working Group')
mplsLdpAtmObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 5, 1))
mplsLdpAtmConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 5, 2))
mplsLdpEntityAtmObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1))
mplsLdpEntityAtmTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1), )
if mibBuilder.loadTexts: mplsLdpEntityAtmTable.setStatus('current')
mplsLdpEntityAtmEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"))
if mibBuilder.loadTexts: mplsLdpEntityAtmEntry.setStatus('current')
mplsLdpEntityAtmIfIndexOrZero = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmIfIndexOrZero.setStatus('current')
mplsLdpEntityAtmMergeCap = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 0), ("vpMerge", 1), ("vcMerge", 2), ("vpAndVcMerge", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmMergeCap.setStatus('current')
mplsLdpEntityAtmLRComponents = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRComponents.setStatus('current')
mplsLdpEntityAtmVcDirectionality = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bidirectional", 0), ("unidirectional", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmVcDirectionality.setStatus('current')
mplsLdpEntityAtmLsrConnectivity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("direct", 1), ("indirect", 2))).clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmLsrConnectivity.setStatus('current')
mplsLdpEntityAtmDefaultControlVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 6), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmDefaultControlVpi.setStatus('current')
mplsLdpEntityAtmDefaultControlVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 7), MplsAtmVcIdentifier().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmDefaultControlVci.setStatus('current')
mplsLdpEntityAtmUnlabTrafVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 8), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmUnlabTrafVpi.setStatus('current')
mplsLdpEntityAtmUnlabTrafVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 9), MplsAtmVcIdentifier().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmUnlabTrafVci.setStatus('current')
mplsLdpEntityAtmStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 10), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmStorageType.setStatus('current')
mplsLdpEntityAtmRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmRowStatus.setStatus('current')
mplsLdpEntityAtmLRTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2), )
if mibBuilder.loadTexts: mplsLdpEntityAtmLRTable.setStatus('current')
mplsLdpEntityAtmLREntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRMinVpi"), (0, "MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRMinVci"))
if mibBuilder.loadTexts: mplsLdpEntityAtmLREntry.setStatus('current')
mplsLdpEntityAtmLRMinVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMinVpi.setStatus('current')
mplsLdpEntityAtmLRMinVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1, 2), MplsAtmVcIdentifier())
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMinVci.setStatus('current')
mplsLdpEntityAtmLRMaxVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1, 3), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMaxVpi.setStatus('current')
mplsLdpEntityAtmLRMaxVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1, 4), MplsAtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMaxVci.setStatus('current')
mplsLdpEntityAtmLRStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRStorageType.setStatus('current')
mplsLdpEntityAtmLRRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRRowStatus.setStatus('current')
mplsLdpAtmSessionObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2))
mplsLdpAtmSessionTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2, 1), )
if mibBuilder.loadTexts: mplsLdpAtmSessionTable.setStatus('current')
mplsLdpAtmSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2, 1, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"), (0, "MPLS-LDP-ATM-STD-MIB", "mplsLdpSessionAtmLRLowerBoundVpi"), (0, "MPLS-LDP-ATM-STD-MIB", "mplsLdpSessionAtmLRLowerBoundVci"))
if mibBuilder.loadTexts: mplsLdpAtmSessionEntry.setStatus('current')
mplsLdpSessionAtmLRLowerBoundVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2, 1, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: mplsLdpSessionAtmLRLowerBoundVpi.setStatus('current')
mplsLdpSessionAtmLRLowerBoundVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2, 1, 1, 2), MplsAtmVcIdentifier())
if mibBuilder.loadTexts: mplsLdpSessionAtmLRLowerBoundVci.setStatus('current')
mplsLdpSessionAtmLRUpperBoundVpi = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2, 1, 1, 3), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionAtmLRUpperBoundVpi.setStatus('current')
mplsLdpSessionAtmLRUpperBoundVci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 5, 1, 2, 1, 1, 4), MplsAtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionAtmLRUpperBoundVci.setStatus('current')
mplsLdpAtmGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 5, 2, 1))
mplsLdpAtmCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 5, 2, 2))
mplsLdpAtmModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 5, 2, 2, 1)).setObjects(("MPLS-LDP-ATM-STD-MIB", "mplsLdpAtmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpAtmModuleFullCompliance = mplsLdpAtmModuleFullCompliance.setStatus('current')
mplsLdpAtmModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 5, 2, 2, 2)).setObjects(("MPLS-LDP-ATM-STD-MIB", "mplsLdpAtmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpAtmModuleReadOnlyCompliance = mplsLdpAtmModuleReadOnlyCompliance.setStatus('current')
mplsLdpAtmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 5, 2, 1, 1)).setObjects(("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmIfIndexOrZero"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmMergeCap"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRComponents"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmVcDirectionality"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLsrConnectivity"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmDefaultControlVpi"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmDefaultControlVci"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmUnlabTrafVpi"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmUnlabTrafVci"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmStorageType"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmRowStatus"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRMaxVpi"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRMaxVci"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRStorageType"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpEntityAtmLRRowStatus"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpSessionAtmLRUpperBoundVpi"), ("MPLS-LDP-ATM-STD-MIB", "mplsLdpSessionAtmLRUpperBoundVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpAtmGroup = mplsLdpAtmGroup.setStatus('current')
mibBuilder.exportSymbols("MPLS-LDP-ATM-STD-MIB", PYSNMP_MODULE_ID=mplsLdpAtmStdMIB, mplsLdpEntityAtmLRMaxVpi=mplsLdpEntityAtmLRMaxVpi, mplsLdpAtmConformance=mplsLdpAtmConformance, mplsLdpEntityAtmIfIndexOrZero=mplsLdpEntityAtmIfIndexOrZero, mplsLdpAtmSessionTable=mplsLdpAtmSessionTable, mplsLdpEntityAtmLRComponents=mplsLdpEntityAtmLRComponents, mplsLdpAtmSessionEntry=mplsLdpAtmSessionEntry, mplsLdpEntityAtmUnlabTrafVpi=mplsLdpEntityAtmUnlabTrafVpi, mplsLdpEntityAtmUnlabTrafVci=mplsLdpEntityAtmUnlabTrafVci, mplsLdpEntityAtmTable=mplsLdpEntityAtmTable, mplsLdpAtmModuleFullCompliance=mplsLdpAtmModuleFullCompliance, mplsLdpAtmSessionObjects=mplsLdpAtmSessionObjects, mplsLdpAtmObjects=mplsLdpAtmObjects, mplsLdpEntityAtmLRTable=mplsLdpEntityAtmLRTable, mplsLdpEntityAtmLRMaxVci=mplsLdpEntityAtmLRMaxVci, mplsLdpEntityAtmLRMinVci=mplsLdpEntityAtmLRMinVci, mplsLdpSessionAtmLRLowerBoundVci=mplsLdpSessionAtmLRLowerBoundVci, mplsLdpEntityAtmLRStorageType=mplsLdpEntityAtmLRStorageType, mplsLdpAtmGroups=mplsLdpAtmGroups, mplsLdpEntityAtmDefaultControlVpi=mplsLdpEntityAtmDefaultControlVpi, mplsLdpSessionAtmLRUpperBoundVpi=mplsLdpSessionAtmLRUpperBoundVpi, mplsLdpAtmCompliances=mplsLdpAtmCompliances, mplsLdpEntityAtmDefaultControlVci=mplsLdpEntityAtmDefaultControlVci, mplsLdpAtmModuleReadOnlyCompliance=mplsLdpAtmModuleReadOnlyCompliance, mplsLdpAtmStdMIB=mplsLdpAtmStdMIB, mplsLdpEntityAtmLRRowStatus=mplsLdpEntityAtmLRRowStatus, mplsLdpAtmGroup=mplsLdpAtmGroup, mplsLdpEntityAtmVcDirectionality=mplsLdpEntityAtmVcDirectionality, mplsLdpEntityAtmStorageType=mplsLdpEntityAtmStorageType, mplsLdpEntityAtmRowStatus=mplsLdpEntityAtmRowStatus, mplsLdpSessionAtmLRUpperBoundVci=mplsLdpSessionAtmLRUpperBoundVci, mplsLdpSessionAtmLRLowerBoundVpi=mplsLdpSessionAtmLRLowerBoundVpi, mplsLdpEntityAtmEntry=mplsLdpEntityAtmEntry, mplsLdpEntityAtmLRMinVpi=mplsLdpEntityAtmLRMinVpi, mplsLdpEntityAtmLsrConnectivity=mplsLdpEntityAtmLsrConnectivity, mplsLdpEntityAtmLREntry=mplsLdpEntityAtmLREntry, mplsLdpEntityAtmObjects=mplsLdpEntityAtmObjects, mplsLdpEntityAtmMergeCap=mplsLdpEntityAtmMergeCap)
