#
# PySNMP MIB module HPN-ICF-FC-ZONE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FC-ZONE-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
HpnicfFcNameId, = mibBuilder.importSymbols("HPN-ICF-FC-TC-MIB", "HpnicfFcNameId")
hpnicfVsanIndex, hpnicfSan = mibBuilder.importSymbols("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex", "hpnicfSan")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, Counter64, MibIdentifier, iso, Bits, Counter32, Gauge32, Integer32, NotificationType, ObjectIdentity, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "Counter64", "MibIdentifier", "iso", "Bits", "Counter32", "Gauge32", "Integer32", "NotificationType", "ObjectIdentity", "Unsigned32", "IpAddress")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
t11ZsActiveZoneIndex, t11ZsActiveZoneMemberIndex = mibBuilder.importSymbols("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex", "t11ZsActiveZoneMemberIndex")
hpnicfFcZoneServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9))
hpnicfFcZoneServer.setRevisions(('2013-12-25 15:07',))
if mibBuilder.loadTexts: hpnicfFcZoneServer.setLastUpdated('201312251507Z')
if mibBuilder.loadTexts: hpnicfFcZoneServer.setOrganization('')
class HpnicfFcZsGenName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class HpnicfFcZsGenNameOrZero(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class HpnicfFcZsZoneMemberType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("fcid", 1), ("fwwn", 2), ("pwwn", 3), ("aliasName", 4))

hpnicfFcZoneMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1))
hpnicfFcZsConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1))
hpnicfFcZsServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfFcZsServerTable.setStatus('current')
hpnicfFcZsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsServerEntry.setStatus('current')
hpnicfFcZsZoneModeCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhanced", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsZoneModeCfg.setStatus('current')
hpnicfFcZsHardZoneEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsHardZoneEnable.setStatus('current')
hpnicfFcZsDistributeRule = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("activeOnly", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsDistributeRule.setStatus('current')
hpnicfFcZsDefaultZoneSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deny", 1), ("permit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsDefaultZoneSetting.setStatus('current')
hpnicfFcZsMergeControlSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("allow", 2), ("restrict", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsMergeControlSetting.setStatus('current')
hpnicfFcZsServerLastResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("busy", 3), ("noSupportInFabric", 4), ("noSupportInBasic", 5), ("noSupportInEnhanced", 6), ("activeZoneSetTooBig", 7), ("otherFault", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsServerLastResult.setStatus('current')
hpnicfFcZsZonesetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfFcZsZonesetTable.setStatus('current')
hpnicfFcZsZonesetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZonesetIndex"))
if mibBuilder.loadTexts: hpnicfFcZsZonesetEntry.setStatus('current')
hpnicfFcZsZonesetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfFcZsZonesetIndex.setStatus('current')
hpnicfFcZsZonesetName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 2, 1, 2), HpnicfFcZsGenName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZonesetName.setStatus('current')
hpnicfFcZsZonesetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZonesetRowStatus.setStatus('current')
hpnicfFcZsZoneTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfFcZsZoneTable.setStatus('current')
hpnicfFcZsZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneIndex"))
if mibBuilder.loadTexts: hpnicfFcZsZoneEntry.setStatus('current')
hpnicfFcZsZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfFcZsZoneIndex.setStatus('current')
hpnicfFcZsZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 3, 1, 2), HpnicfFcZsGenName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneName.setStatus('current')
hpnicfFcZsZonePairwiseEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 3, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZonePairwiseEnable.setStatus('current')
hpnicfFcZsZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneRowStatus.setStatus('current')
hpnicfFcZsSetZoneTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 4), )
if mibBuilder.loadTexts: hpnicfFcZsSetZoneTable.setStatus('current')
hpnicfFcZsSetZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZonesetIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneIndex"))
if mibBuilder.loadTexts: hpnicfFcZsSetZoneEntry.setStatus('current')
hpnicfFcZsSetZoneRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsSetZoneRowStatus.setStatus('current')
hpnicfFcZsZoneAliasTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 5), )
if mibBuilder.loadTexts: hpnicfFcZsZoneAliasTable.setStatus('current')
hpnicfFcZsZoneAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneAliasIndex"))
if mibBuilder.loadTexts: hpnicfFcZsZoneAliasEntry.setStatus('current')
hpnicfFcZsZoneAliasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfFcZsZoneAliasIndex.setStatus('current')
hpnicfFcZsZoneAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 5, 1, 2), HpnicfFcZsGenName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneAliasName.setStatus('current')
hpnicfFcZsZoneAliasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneAliasRowStatus.setStatus('current')
hpnicfFcZsZoneMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6), )
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberTable.setStatus('current')
hpnicfFcZsZoneMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneMemberParentType"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneMemberParentIndex"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneMemberIndex"))
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberEntry.setStatus('current')
hpnicfFcZsZoneMemberParentType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zone", 1), ("alias", 2))))
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberParentType.setStatus('current')
hpnicfFcZsZoneMemberParentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberParentIndex.setStatus('current')
hpnicfFcZsZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberIndex.setStatus('current')
hpnicfFcZsZoneMemberFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 4), HpnicfFcZsZoneMemberType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberFormat.setStatus('current')
hpnicfFcZsZoneMemberIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberIdentifier.setStatus('current')
hpnicfFcZsZoneMemberPairwiseRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("both", 2), ("initiator", 3), ("target", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberPairwiseRole.setStatus('current')
hpnicfFcZsZoneMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 1, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberRowStatus.setStatus('current')
hpnicfFcZsOperation = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2))
hpnicfFcZsActivateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfFcZsActivateTable.setStatus('current')
hpnicfFcZsActivateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsActivateEntry.setStatus('current')
hpnicfFcZsActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 1, 1, 1), HpnicfFcZsGenNameOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsActivate.setStatus('current')
hpnicfFcZsDeactivate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("deactivate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsDeactivate.setStatus('current')
hpnicfFcZsActivateResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("activateSuccess", 3), ("activateFailure", 4), ("deactivateSuccess", 5), ("deactivateFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsActivateResult.setStatus('current')
hpnicfFcZsActivateFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("busy", 2), ("activeZoneSetTooBig", 3), ("noZoneSet", 4), ("noMember", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsActivateFailReason.setStatus('current')
hpnicfFcZsDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfFcZsDistributeTable.setStatus('current')
hpnicfFcZsDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsDistributeEntry.setStatus('current')
hpnicfFcZsDistribute = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("distribute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsDistribute.setStatus('current')
hpnicfFcZsDistributeLastResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("rejectFailure", 4), ("otherFault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsDistributeLastResult.setStatus('current')
hpnicfFcZsDistributeReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsDistributeReasonCode.setStatus('current')
hpnicfFcZsDistributeExplainCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsDistributeExplainCode.setStatus('current')
hpnicfFcZsClearDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 3), )
if mibBuilder.loadTexts: hpnicfFcZsClearDatabaseTable.setStatus('current')
hpnicfFcZsClearDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsClearDatabaseEntry.setStatus('current')
hpnicfFcZsClearDatabase = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("clearDb", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsClearDatabase.setStatus('current')
hpnicfFcZsClearPktStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 4), )
if mibBuilder.loadTexts: hpnicfFcZsClearPktStatsTable.setStatus('current')
hpnicfFcZsClearPktStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsClearPktStatsEntry.setStatus('current')
hpnicfFcZsClearPktStats = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("clearStats", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsClearPktStats.setStatus('current')
hpnicfFcZsClearAllPktStats = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noOper", 1), ("clearStats", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsClearAllPktStats.setStatus('current')
hpnicfFcZsInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3))
hpnicfFcZsActiveZoneTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfFcZsActiveZoneTable.setStatus('current')
hpnicfFcZsActiveZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"))
if mibBuilder.loadTexts: hpnicfFcZsActiveZoneEntry.setStatus('current')
hpnicfFcZsActiveZonePairwiseEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsActiveZonePairwiseEnable.setStatus('current')
hpnicfFcZsActiveMemberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 2), )
if mibBuilder.loadTexts: hpnicfFcZsActiveMemberTable.setStatus('current')
hpnicfFcZsActiveMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberIndex"))
if mibBuilder.loadTexts: hpnicfFcZsActiveMemberEntry.setStatus('current')
hpnicfFcZsActiveMemberPairwiseRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("initiator", 2), ("target", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsActiveMemberPairwiseRole.setStatus('current')
hpnicfFcZsServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3), )
if mibBuilder.loadTexts: hpnicfFcZsServerStatusTable.setStatus('current')
hpnicfFcZsServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsServerStatusEntry.setStatus('current')
hpnicfFcZsServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("free", 1), ("distribute", 2), ("merge", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsServerStatus.setStatus('current')
hpnicfFcZsHardZoneStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("adminDisable", 2), ("noResourceDisable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsHardZoneStatus.setStatus('current')
hpnicfFcZsAliasCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsAliasCount.setStatus('current')
hpnicfFcZsZoneCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsZoneCount.setStatus('current')
hpnicfFcZsZonesetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsZonesetCount.setStatus('current')
hpnicfFcZsPktStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4), )
if mibBuilder.loadTexts: hpnicfFcZsPktStatsTable.setStatus('current')
hpnicfFcZsPktStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfFcZsPktStatsEntry.setStatus('current')
hpnicfFcZsPktInMergeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktInMergeReqCount.setStatus('current')
hpnicfFcZsPktOutMergeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktOutMergeReqCount.setStatus('current')
hpnicfFcZsPktInMergeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktInMergeAccCount.setStatus('current')
hpnicfFcZsPktOutMergeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktOutMergeAccCount.setStatus('current')
hpnicfFcZsPktInMergeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktInMergeRjtCount.setStatus('current')
hpnicfFcZsPktOutMergeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktOutMergeRjtCount.setStatus('current')
hpnicfFcZsPktInChangeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktInChangeReqCount.setStatus('current')
hpnicfFcZsPktOutChangeReqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktOutChangeReqCount.setStatus('current')
hpnicfFcZsPktInChangeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktInChangeAccCount.setStatus('current')
hpnicfFcZsPktOutChangeAccCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktOutChangeAccCount.setStatus('current')
hpnicfFcZsPktInChangeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktInChangeRjtCount.setStatus('current')
hpnicfFcZsPktOutChangeRjtCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsPktOutChangeRjtCount.setStatus('current')
hpnicfFcZsNextFreeIndexInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5))
hpnicfFcZsZonesetNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsZonesetNextFreeIndex.setStatus('current')
hpnicfFcZsZoneNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsZoneNextFreeIndex.setStatus('current')
hpnicfFcZsZoneAliasNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsZoneAliasNextFreeIndex.setStatus('current')
hpnicfFcZsZoneMemberNextFreeIndexTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5, 4), )
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberNextFreeIndexTable.setStatus('current')
hpnicfFcZsZoneMemberNextFreeIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5, 4, 1), ).setIndexNames((0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneMemberParentType"), (0, "HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsZoneMemberParentIndex"))
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberNextFreeIndexEntry.setStatus('current')
hpnicfFcZsZoneMemberNextFreeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 3, 5, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcZsZoneMemberNextFreeIndex.setStatus('current')
hpnicfFcZsNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4))
hpnicfFcZsNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 0))
hpnicfFcZsDefaultZoneChangedNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 0, 1)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsLocalSwitchWWN"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsDefaultZoneSetting"))
if mibBuilder.loadTexts: hpnicfFcZsDefaultZoneChangedNotify.setStatus('current')
hpnicfFcZsHardZoneChangedNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 0, 2)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsLocalSwitchWWN"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsHardZoneStatus"))
if mibBuilder.loadTexts: hpnicfFcZsHardZoneChangedNotify.setStatus('current')
hpnicfFcZsMergeFailedNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsLocalSwitchWWN"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsPeerSwitchWWN"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsMergeFailCause"))
if mibBuilder.loadTexts: hpnicfFcZsMergeFailedNotify.setStatus('current')
hpnicfFcZsMergeSucceededNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsLocalSwitchWWN"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsPeerSwitchWWN"))
if mibBuilder.loadTexts: hpnicfFcZsMergeSucceededNotify.setStatus('current')
hpnicfFcZsActivationCompletedNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 0, 5)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsLocalSwitchWWN"), ("HPN-ICF-FC-ZONE-SERVER-MIB", "hpnicfFcZsActivateResult"))
if mibBuilder.loadTexts: hpnicfFcZsActivationCompletedNotify.setStatus('current')
hpnicfFcZsNotificationSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 1))
hpnicfFcZsDefaultZoneChangedEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsDefaultZoneChangedEnable.setStatus('current')
hpnicfFcZsHardZoneChangedEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsHardZoneChangedEnable.setStatus('current')
hpnicfFcZsMergeFailedEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsMergeFailedEnable.setStatus('current')
hpnicfFcZsMergeSucceededEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsMergeSucceededEnable.setStatus('current')
hpnicfFcZsActivationCompletedEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcZsActivationCompletedEnable.setStatus('current')
hpnicfFcZsObjsForNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 2))
hpnicfFcZsLocalSwitchWWN = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 2, 1), HpnicfFcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcZsLocalSwitchWWN.setStatus('current')
hpnicfFcZsPeerSwitchWWN = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 2, 2), HpnicfFcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcZsPeerSwitchWWN.setStatus('current')
hpnicfFcZsMergeFailCause = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 9, 1, 4, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("zoneModeInconsistent", 1), ("zonePolicyNotEqual", 2), ("hardZoneInconsistent", 3), ("dataNotEqualInRestrict", 4), ("activeZoneSetMergeFailed", 5), ("zoneMergeDataTooBig", 6), ("zoningObjectNumberTooBig", 7), ("zoneDbMergeFaildInBasic", 8), ("zoneDbMergeFaildInEnhanced", 9), ("other", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcZsMergeFailCause.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-FC-ZONE-SERVER-MIB", hpnicfFcZsConfiguration=hpnicfFcZsConfiguration, hpnicfFcZsClearDatabaseTable=hpnicfFcZsClearDatabaseTable, hpnicfFcZsMergeFailCause=hpnicfFcZsMergeFailCause, hpnicfFcZsActiveZonePairwiseEnable=hpnicfFcZsActiveZonePairwiseEnable, hpnicfFcZsZoneAliasNextFreeIndex=hpnicfFcZsZoneAliasNextFreeIndex, hpnicfFcZsActivationCompletedNotify=hpnicfFcZsActivationCompletedNotify, hpnicfFcZsNotificationPrefix=hpnicfFcZsNotificationPrefix, hpnicfFcZsActivateFailReason=hpnicfFcZsActivateFailReason, hpnicfFcZsZoneMemberPairwiseRole=hpnicfFcZsZoneMemberPairwiseRole, hpnicfFcZsZonesetTable=hpnicfFcZsZonesetTable, hpnicfFcZsClearDatabase=hpnicfFcZsClearDatabase, hpnicfFcZsDistributeExplainCode=hpnicfFcZsDistributeExplainCode, hpnicfFcZsDeactivate=hpnicfFcZsDeactivate, hpnicfFcZsMergeFailedEnable=hpnicfFcZsMergeFailedEnable, hpnicfFcZsZoneMemberIndex=hpnicfFcZsZoneMemberIndex, hpnicfFcZsZoneEntry=hpnicfFcZsZoneEntry, hpnicfFcZsNextFreeIndexInfo=hpnicfFcZsNextFreeIndexInfo, hpnicfFcZsSetZoneTable=hpnicfFcZsSetZoneTable, hpnicfFcZsActiveMemberEntry=hpnicfFcZsActiveMemberEntry, hpnicfFcZsZoneAliasIndex=hpnicfFcZsZoneAliasIndex, hpnicfFcZsZonesetIndex=hpnicfFcZsZonesetIndex, hpnicfFcZsHardZoneEnable=hpnicfFcZsHardZoneEnable, hpnicfFcZsZoneMemberNextFreeIndexTable=hpnicfFcZsZoneMemberNextFreeIndexTable, hpnicfFcZsZonesetName=hpnicfFcZsZonesetName, hpnicfFcZsNotificationSwitch=hpnicfFcZsNotificationSwitch, hpnicfFcZsActiveZoneEntry=hpnicfFcZsActiveZoneEntry, hpnicfFcZsDistributeLastResult=hpnicfFcZsDistributeLastResult, hpnicfFcZsZonesetCount=hpnicfFcZsZonesetCount, hpnicfFcZsAliasCount=hpnicfFcZsAliasCount, hpnicfFcZsZoneTable=hpnicfFcZsZoneTable, PYSNMP_MODULE_ID=hpnicfFcZoneServer, hpnicfFcZsPktOutChangeReqCount=hpnicfFcZsPktOutChangeReqCount, hpnicfFcZsPktInChangeRjtCount=hpnicfFcZsPktInChangeRjtCount, hpnicfFcZsDefaultZoneChangedNotify=hpnicfFcZsDefaultZoneChangedNotify, hpnicfFcZsPeerSwitchWWN=hpnicfFcZsPeerSwitchWWN, hpnicfFcZsActivationCompletedEnable=hpnicfFcZsActivationCompletedEnable, hpnicfFcZsPktOutMergeRjtCount=hpnicfFcZsPktOutMergeRjtCount, hpnicfFcZsClearPktStats=hpnicfFcZsClearPktStats, hpnicfFcZsZoneModeCfg=hpnicfFcZsZoneModeCfg, hpnicfFcZsDistributeTable=hpnicfFcZsDistributeTable, hpnicfFcZsPktInMergeReqCount=hpnicfFcZsPktInMergeReqCount, hpnicfFcZsHardZoneStatus=hpnicfFcZsHardZoneStatus, hpnicfFcZsZoneCount=hpnicfFcZsZoneCount, hpnicfFcZsZoneMemberEntry=hpnicfFcZsZoneMemberEntry, HpnicfFcZsZoneMemberType=HpnicfFcZsZoneMemberType, hpnicfFcZsClearAllPktStats=hpnicfFcZsClearAllPktStats, hpnicfFcZsZoneAliasRowStatus=hpnicfFcZsZoneAliasRowStatus, hpnicfFcZsActivate=hpnicfFcZsActivate, hpnicfFcZsActivateResult=hpnicfFcZsActivateResult, hpnicfFcZsHardZoneChangedEnable=hpnicfFcZsHardZoneChangedEnable, hpnicfFcZsActiveMemberTable=hpnicfFcZsActiveMemberTable, hpnicfFcZsPktInChangeReqCount=hpnicfFcZsPktInChangeReqCount, hpnicfFcZsZoneMemberNextFreeIndexEntry=hpnicfFcZsZoneMemberNextFreeIndexEntry, hpnicfFcZsActivateTable=hpnicfFcZsActivateTable, hpnicfFcZsZoneMemberParentType=hpnicfFcZsZoneMemberParentType, hpnicfFcZsPktStatsTable=hpnicfFcZsPktStatsTable, hpnicfFcZsInformation=hpnicfFcZsInformation, hpnicfFcZsActiveMemberPairwiseRole=hpnicfFcZsActiveMemberPairwiseRole, hpnicfFcZsSetZoneEntry=hpnicfFcZsSetZoneEntry, hpnicfFcZsZoneMemberIdentifier=hpnicfFcZsZoneMemberIdentifier, hpnicfFcZoneServer=hpnicfFcZoneServer, hpnicfFcZsDefaultZoneSetting=hpnicfFcZsDefaultZoneSetting, hpnicfFcZsServerStatusEntry=hpnicfFcZsServerStatusEntry, hpnicfFcZsZoneMemberTable=hpnicfFcZsZoneMemberTable, hpnicfFcZsZoneMemberFormat=hpnicfFcZsZoneMemberFormat, hpnicfFcZsPktStatsEntry=hpnicfFcZsPktStatsEntry, hpnicfFcZsPktOutChangeAccCount=hpnicfFcZsPktOutChangeAccCount, hpnicfFcZsZonesetEntry=hpnicfFcZsZonesetEntry, hpnicfFcZsServerStatus=hpnicfFcZsServerStatus, hpnicfFcZsPktInChangeAccCount=hpnicfFcZsPktInChangeAccCount, hpnicfFcZsMergeSucceededNotify=hpnicfFcZsMergeSucceededNotify, hpnicfFcZsDistributeRule=hpnicfFcZsDistributeRule, hpnicfFcZsMergeControlSetting=hpnicfFcZsMergeControlSetting, hpnicfFcZsNotification=hpnicfFcZsNotification, hpnicfFcZsServerLastResult=hpnicfFcZsServerLastResult, hpnicfFcZsPktOutMergeAccCount=hpnicfFcZsPktOutMergeAccCount, hpnicfFcZsZoneNextFreeIndex=hpnicfFcZsZoneNextFreeIndex, hpnicfFcZsPktOutMergeReqCount=hpnicfFcZsPktOutMergeReqCount, hpnicfFcZsZoneName=hpnicfFcZsZoneName, hpnicfFcZsZonePairwiseEnable=hpnicfFcZsZonePairwiseEnable, hpnicfFcZsZonesetRowStatus=hpnicfFcZsZonesetRowStatus, hpnicfFcZsOperation=hpnicfFcZsOperation, hpnicfFcZsZonesetNextFreeIndex=hpnicfFcZsZonesetNextFreeIndex, hpnicfFcZsZoneMemberNextFreeIndex=hpnicfFcZsZoneMemberNextFreeIndex, hpnicfFcZsDefaultZoneChangedEnable=hpnicfFcZsDefaultZoneChangedEnable, hpnicfFcZsPktInMergeRjtCount=hpnicfFcZsPktInMergeRjtCount, hpnicfFcZoneMibObjects=hpnicfFcZoneMibObjects, hpnicfFcZsActiveZoneTable=hpnicfFcZsActiveZoneTable, hpnicfFcZsDistribute=hpnicfFcZsDistribute, hpnicfFcZsClearPktStatsEntry=hpnicfFcZsClearPktStatsEntry, HpnicfFcZsGenName=HpnicfFcZsGenName, hpnicfFcZsActivateEntry=hpnicfFcZsActivateEntry, hpnicfFcZsLocalSwitchWWN=hpnicfFcZsLocalSwitchWWN, hpnicfFcZsZoneAliasEntry=hpnicfFcZsZoneAliasEntry, hpnicfFcZsObjsForNotification=hpnicfFcZsObjsForNotification, hpnicfFcZsMergeFailedNotify=hpnicfFcZsMergeFailedNotify, hpnicfFcZsClearDatabaseEntry=hpnicfFcZsClearDatabaseEntry, hpnicfFcZsZoneAliasTable=hpnicfFcZsZoneAliasTable, hpnicfFcZsZoneRowStatus=hpnicfFcZsZoneRowStatus, HpnicfFcZsGenNameOrZero=HpnicfFcZsGenNameOrZero, hpnicfFcZsServerStatusTable=hpnicfFcZsServerStatusTable, hpnicfFcZsSetZoneRowStatus=hpnicfFcZsSetZoneRowStatus, hpnicfFcZsClearPktStatsTable=hpnicfFcZsClearPktStatsTable, hpnicfFcZsMergeSucceededEnable=hpnicfFcZsMergeSucceededEnable, hpnicfFcZsZoneMemberParentIndex=hpnicfFcZsZoneMemberParentIndex, hpnicfFcZsDistributeEntry=hpnicfFcZsDistributeEntry, hpnicfFcZsPktInMergeAccCount=hpnicfFcZsPktInMergeAccCount, hpnicfFcZsPktOutChangeRjtCount=hpnicfFcZsPktOutChangeRjtCount, hpnicfFcZsZoneMemberRowStatus=hpnicfFcZsZoneMemberRowStatus, hpnicfFcZsDistributeReasonCode=hpnicfFcZsDistributeReasonCode, hpnicfFcZsZoneAliasName=hpnicfFcZsZoneAliasName, hpnicfFcZsServerEntry=hpnicfFcZsServerEntry, hpnicfFcZsHardZoneChangedNotify=hpnicfFcZsHardZoneChangedNotify, hpnicfFcZsZoneIndex=hpnicfFcZsZoneIndex, hpnicfFcZsServerTable=hpnicfFcZsServerTable)
