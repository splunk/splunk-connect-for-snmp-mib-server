#
# PySNMP MIB module LIEBERT-GP-REGISTRATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LIEBERT-GP-REGISTRATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:56:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, enterprises, TimeTicks, MibIdentifier, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter32, IpAddress, Counter64, NotificationType, ObjectIdentity, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "enterprises", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter32", "IpAddress", "Counter64", "NotificationType", "ObjectIdentity", "Integer32", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
liebertGlobalProductsRegistrationModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1, 1))
liebertGlobalProductsRegistrationModule.setRevisions(('2015-02-02 00:00', '2014-09-17 00:00', '2014-06-24 00:00', '2014-03-27 00:00', '2013-07-10 00:00', '2013-05-14 00:00', '2009-04-17 00:00', '2008-07-02 00:00', '2008-01-10 00:00', '2006-02-22 00:00',))
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setLastUpdated('201403270000Z')
if mibBuilder.loadTexts: liebertGlobalProductsRegistrationModule.setOrganization('Liebert Corporation')
emerson = ObjectIdentity((1, 3, 6, 1, 4, 1, 476))
if mibBuilder.loadTexts: emerson.setStatus('current')
liebertCorp = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1))
if mibBuilder.loadTexts: liebertCorp.setStatus('current')
liebertGlobalProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42))
if mibBuilder.loadTexts: liebertGlobalProducts.setStatus('current')
lgpModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1))
if mibBuilder.loadTexts: lgpModuleReg.setStatus('current')
lgpAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2))
if mibBuilder.loadTexts: lgpAgent.setStatus('current')
lgpFoundation = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3))
if mibBuilder.loadTexts: lgpFoundation.setStatus('current')
lgpProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4))
if mibBuilder.loadTexts: lgpProductSpecific.setStatus('current')
liebertModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 1))
if mibBuilder.loadTexts: liebertModuleReg.setStatus('current')
liebertAgentModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 2))
if mibBuilder.loadTexts: liebertAgentModuleReg.setStatus('current')
liebertConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 3))
if mibBuilder.loadTexts: liebertConditionsModuleReg.setStatus('current')
liebertNotificationsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 4))
if mibBuilder.loadTexts: liebertNotificationsModuleReg.setStatus('current')
liebertEnvironmentalModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 5))
if mibBuilder.loadTexts: liebertEnvironmentalModuleReg.setStatus('current')
liebertPowerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 6))
if mibBuilder.loadTexts: liebertPowerModuleReg.setStatus('current')
liebertControllerModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 7))
if mibBuilder.loadTexts: liebertControllerModuleReg.setStatus('current')
liebertSystemModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 8))
if mibBuilder.loadTexts: liebertSystemModuleReg.setStatus('current')
liebertPduModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 9))
if mibBuilder.loadTexts: liebertPduModuleReg.setStatus('current')
liebertFlexibleModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 10))
if mibBuilder.loadTexts: liebertFlexibleModuleReg.setStatus('current')
liebertFlexibleConditionsModuleReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 1, 11))
if mibBuilder.loadTexts: liebertFlexibleConditionsModuleReg.setStatus('current')
lgpAgentIdent = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 1))
if mibBuilder.loadTexts: lgpAgentIdent.setStatus('current')
lgpAgentNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 3))
if mibBuilder.loadTexts: lgpAgentNotifications.setStatus('current')
lgpAgentDevice = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 4))
if mibBuilder.loadTexts: lgpAgentDevice.setStatus('current')
lgpAgentControl = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 2, 5))
if mibBuilder.loadTexts: lgpAgentControl.setStatus('current')
lgpConditions = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 2))
if mibBuilder.loadTexts: lgpConditions.setStatus('current')
lgpNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 3))
if mibBuilder.loadTexts: lgpNotifications.setStatus('current')
lgpEnvironmental = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 4))
if mibBuilder.loadTexts: lgpEnvironmental.setStatus('current')
lgpPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 5))
if mibBuilder.loadTexts: lgpPower.setStatus('current')
lgpController = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 6))
if mibBuilder.loadTexts: lgpController.setStatus('current')
lgpSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 7))
if mibBuilder.loadTexts: lgpSystem.setStatus('current')
lgpPdu = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 8))
if mibBuilder.loadTexts: lgpPdu.setStatus('current')
lgpFlexible = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 3, 9))
if mibBuilder.loadTexts: lgpFlexible.setStatus('current')
lgpUpsProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2))
if mibBuilder.loadTexts: lgpUpsProducts.setStatus('current')
lgpAcProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3))
if mibBuilder.loadTexts: lgpAcProducts.setStatus('current')
lgpPowerConditioningProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4))
if mibBuilder.loadTexts: lgpPowerConditioningProducts.setStatus('current')
lgpTransferSwitchProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5))
if mibBuilder.loadTexts: lgpTransferSwitchProducts.setStatus('current')
lgpMultiLinkProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7))
if mibBuilder.loadTexts: lgpMultiLinkProducts.setStatus('current')
lgpPowerDistributionProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8))
if mibBuilder.loadTexts: lgpPowerDistributionProducts.setStatus('current')
lgpCombinedSystemProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10))
if mibBuilder.loadTexts: lgpCombinedSystemProducts.setStatus('current')
lgpSeries7200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 1))
if mibBuilder.loadTexts: lgpSeries7200.setStatus('current')
lgpUPStationGXT = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 2))
if mibBuilder.loadTexts: lgpUPStationGXT.setStatus('current')
lgpPowerSureInteractive = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 3))
if mibBuilder.loadTexts: lgpPowerSureInteractive.setStatus('current')
lgpNfinity = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 4))
if mibBuilder.loadTexts: lgpNfinity.setStatus('current')
lgpNpower = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 5))
if mibBuilder.loadTexts: lgpNpower.setStatus('current')
lgpGXT2Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 6))
if mibBuilder.loadTexts: lgpGXT2Dual.setStatus('current')
lgpPowerSureInteractive2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 7))
if mibBuilder.loadTexts: lgpPowerSureInteractive2.setStatus('current')
lgpNX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 8))
if mibBuilder.loadTexts: lgpNX.setStatus('current')
lgpHiNet = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 9))
if mibBuilder.loadTexts: lgpHiNet.setStatus('current')
lgpNXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10))
if mibBuilder.loadTexts: lgpNXL.setStatus('current')
lgpSuper400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 11))
if mibBuilder.loadTexts: lgpSuper400.setStatus('current')
lgpSeries600or610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 12))
if mibBuilder.loadTexts: lgpSeries600or610.setStatus('current')
lgpSeries300 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 13))
if mibBuilder.loadTexts: lgpSeries300.setStatus('current')
lgpSeries610SMS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 14))
if mibBuilder.loadTexts: lgpSeries610SMS.setStatus('current')
lgpSeries610MMU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 15))
if mibBuilder.loadTexts: lgpSeries610MMU.setStatus('current')
lgpSeries610SCC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 16))
if mibBuilder.loadTexts: lgpSeries610SCC.setStatus('current')
lgpGXT3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 17))
if mibBuilder.loadTexts: lgpGXT3.setStatus('current')
lgpGXT3Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 18))
if mibBuilder.loadTexts: lgpGXT3Dual.setStatus('current')
lgpNXr = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19))
if mibBuilder.loadTexts: lgpNXr.setStatus('current')
lgpITA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 1))
if mibBuilder.loadTexts: lgpITA.setStatus('current')
lgpNXRb = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 2))
if mibBuilder.loadTexts: lgpNXRb.setStatus('current')
lgpNXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 3))
if mibBuilder.loadTexts: lgpNXC.setStatus('current')
lgpNXC30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 4))
if mibBuilder.loadTexts: lgpNXC30to40k.setStatus('current')
lgpITA30to40k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 19, 5))
if mibBuilder.loadTexts: lgpITA30to40k.setStatus('current')
lgpAPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 20))
if mibBuilder.loadTexts: lgpAPS.setStatus('current')
lgpMUNiMx = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22))
if mibBuilder.loadTexts: lgpMUNiMx.setStatus('current')
lgpGXT4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 23))
if mibBuilder.loadTexts: lgpGXT4.setStatus('current')
lgpGXT4Dual = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 24))
if mibBuilder.loadTexts: lgpGXT4Dual.setStatus('current')
lgpEXL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 25))
if mibBuilder.loadTexts: lgpEXL.setStatus('current')
lgpEXM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26))
if mibBuilder.loadTexts: lgpEXM.setStatus('current')
lgpEXM208v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 1))
if mibBuilder.loadTexts: lgpEXM208v.setStatus('current')
lgpEXM400v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 2))
if mibBuilder.loadTexts: lgpEXM400v.setStatus('current')
lgpEXM480v = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 26, 3))
if mibBuilder.loadTexts: lgpEXM480v.setStatus('current')
lgpEPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27))
if mibBuilder.loadTexts: lgpEPM.setStatus('current')
lgpEPM300k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 1))
if mibBuilder.loadTexts: lgpEPM300k.setStatus('current')
lgpEPM400k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 2))
if mibBuilder.loadTexts: lgpEPM400k.setStatus('current')
lgpEPM500k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 3))
if mibBuilder.loadTexts: lgpEPM500k.setStatus('current')
lgpEPM600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 4))
if mibBuilder.loadTexts: lgpEPM600k.setStatus('current')
lgpEPM800k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 27, 5))
if mibBuilder.loadTexts: lgpEPM800k.setStatus('current')
lgpEXMMSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 29))
if mibBuilder.loadTexts: lgpEXMMSR.setStatus('current')
lgpNXLJD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 10, 1))
if mibBuilder.loadTexts: lgpNXLJD.setStatus('current')
lgpNX225to600k = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 2, 22, 1))
if mibBuilder.loadTexts: lgpNX225to600k.setStatus('current')
lgpAdvancedMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 1))
if mibBuilder.loadTexts: lgpAdvancedMicroprocessor.setStatus('current')
lgpStandardMicroprocessor = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 2))
if mibBuilder.loadTexts: lgpStandardMicroprocessor.setStatus('current')
lgpMiniMate2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 3))
if mibBuilder.loadTexts: lgpMiniMate2.setStatus('current')
lgpHimod = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 4))
if mibBuilder.loadTexts: lgpHimod.setStatus('current')
lgpCEMS100orLECS15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 5))
if mibBuilder.loadTexts: lgpCEMS100orLECS15.setStatus('current')
lgpIcom = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 6))
if mibBuilder.loadTexts: lgpIcom.setStatus('current')
lgpIcomPA = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7))
if mibBuilder.loadTexts: lgpIcomPA.setStatus('current')
lgpIcomXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8))
if mibBuilder.loadTexts: lgpIcomXD.setStatus('current')
lgpIcomXP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9))
if mibBuilder.loadTexts: lgpIcomXP.setStatus('current')
lgpIcomSC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10))
if mibBuilder.loadTexts: lgpIcomSC.setStatus('current')
lgpIcomCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11))
if mibBuilder.loadTexts: lgpIcomCR.setStatus('current')
lgpIcomAH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12))
if mibBuilder.loadTexts: lgpIcomAH.setStatus('current')
lgpIcomDCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 13))
if mibBuilder.loadTexts: lgpIcomDCL.setStatus('current')
lgpIcomEEV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 14))
if mibBuilder.loadTexts: lgpIcomEEV.setStatus('current')
lgpIcomPAtypeDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDS.setStatus('current')
lgpIcomPAtypeHPM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeHPM.setStatus('current')
lgpIcomPAtypeChallenger = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 3))
if mibBuilder.loadTexts: lgpIcomPAtypeChallenger.setStatus('current')
lgpIcomPAtypePeX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 4))
if mibBuilder.loadTexts: lgpIcomPAtypePeX.setStatus('current')
lgpIcomPAtypeDeluxeSys3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSys3.setStatus('current')
lgpIcomPAtypeDeluxeSystem3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 1))
if mibBuilder.loadTexts: lgpIcomPAtypeDeluxeSystem3.setStatus('current')
lgpIcomPAtypeCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 5, 2))
if mibBuilder.loadTexts: lgpIcomPAtypeCW.setStatus('current')
lgpIcomPAtypeJumboCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 6))
if mibBuilder.loadTexts: lgpIcomPAtypeJumboCW.setStatus('current')
lgpIcomPAtypeDSE = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 7))
if mibBuilder.loadTexts: lgpIcomPAtypeDSE.setStatus('current')
lgpIcomPAtypePEXS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8))
if mibBuilder.loadTexts: lgpIcomPAtypePEXS.setStatus('current')
lgpIcomPAtypePDXsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXsmall.setStatus('current')
lgpIcomPAtypePCWsmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 8, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWsmall.setStatus('current')
lgpIcomPAtypePDX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9))
if mibBuilder.loadTexts: lgpIcomPAtypePDX.setStatus('current')
lgpIcomPAtypePDXlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 1))
if mibBuilder.loadTexts: lgpIcomPAtypePDXlarge.setStatus('current')
lgpIcomPAtypePCWlarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 9, 2))
if mibBuilder.loadTexts: lgpIcomPAtypePCWlarge.setStatus('current')
lgpIcomPAtypeHPS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 7, 10))
if mibBuilder.loadTexts: lgpIcomPAtypeHPS.setStatus('current')
lgpIcomXDtypeXDF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 1))
if mibBuilder.loadTexts: lgpIcomXDtypeXDF.setStatus('current')
lgpIcomXDtypeXDFN = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 8, 2))
if mibBuilder.loadTexts: lgpIcomXDtypeXDFN.setStatus('current')
lgpIcomXPtypeXDP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDP.setStatus('current')
lgpIcomXPtypeXDPCray = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 1, 1))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPCray.setStatus('current')
lgpIcomXPtypeXDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 2))
if mibBuilder.loadTexts: lgpIcomXPtypeXDC.setStatus('current')
lgpIcomXPtypeXDPW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 9, 3))
if mibBuilder.loadTexts: lgpIcomXPtypeXDPW.setStatus('current')
lgpIcomSCtypeHPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPC.setStatus('current')
lgpIcomSCtypeHPCSSmall = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 1))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSSmall.setStatus('current')
lgpIcomSCtypeHPCSLarge = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 2))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCSLarge.setStatus('current')
lgpIcomSCtypeHPCR = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 3))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCR.setStatus('current')
lgpIcomSCtypeHPCM = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 4))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCM.setStatus('current')
lgpIcomSCtypeHPCL = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 5))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCL.setStatus('current')
lgpIcomSCtypeHPCW = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 10, 1, 6))
if mibBuilder.loadTexts: lgpIcomSCtypeHPCW.setStatus('current')
lgpIcomCRtypeCRV = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 11, 1))
if mibBuilder.loadTexts: lgpIcomCRtypeCRV.setStatus('current')
lgpIcomAHStandard = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 3, 12, 1))
if mibBuilder.loadTexts: lgpIcomAHStandard.setStatus('current')
lgpPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 1))
if mibBuilder.loadTexts: lgpPMP.setStatus('current')
lgpEPMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 4, 2))
if mibBuilder.loadTexts: lgpEPMP.setStatus('current')
lgpStaticTransferSwitchEDS = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 1))
if mibBuilder.loadTexts: lgpStaticTransferSwitchEDS.setStatus('current')
lgpStaticTransferSwitch1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 2))
if mibBuilder.loadTexts: lgpStaticTransferSwitch1.setStatus('current')
lgpStaticTransferSwitch2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 3))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2.setStatus('current')
lgpStaticTransferSwitch2FourPole = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 5, 4))
if mibBuilder.loadTexts: lgpStaticTransferSwitch2FourPole.setStatus('current')
lgpMultiLinkBasicNotification = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 7, 1))
if mibBuilder.loadTexts: lgpMultiLinkBasicNotification.setStatus('current')
lgpRackPDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2))
if mibBuilder.loadTexts: lgpRackPDU.setStatus('current')
lgpMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 1))
if mibBuilder.loadTexts: lgpMPX.setStatus('current')
lgpMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 2, 2))
if mibBuilder.loadTexts: lgpMPH.setStatus('current')
lgpRackPDU2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4))
if mibBuilder.loadTexts: lgpRackPDU2.setStatus('current')
lgpRPC2kMPX = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 1))
if mibBuilder.loadTexts: lgpRPC2kMPX.setStatus('current')
lgpRPC2kMPH = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 8, 4, 2))
if mibBuilder.loadTexts: lgpRPC2kMPH.setStatus('current')
lgpPMPandLDMF = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1))
if mibBuilder.loadTexts: lgpPMPandLDMF.setStatus('current')
lgpPMPgeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 1))
if mibBuilder.loadTexts: lgpPMPgeneric.setStatus('current')
lgpPMPonFPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 2))
if mibBuilder.loadTexts: lgpPMPonFPC.setStatus('current')
lgpPMPonPPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 3))
if mibBuilder.loadTexts: lgpPMPonPPC.setStatus('current')
lgpPMPonFDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 4))
if mibBuilder.loadTexts: lgpPMPonFDC.setStatus('current')
lgpPMPonRDC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 5))
if mibBuilder.loadTexts: lgpPMPonRDC.setStatus('current')
lgpPMPonEXC = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 6))
if mibBuilder.loadTexts: lgpPMPonEXC.setStatus('current')
lgpPMPonSTS2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 7))
if mibBuilder.loadTexts: lgpPMPonSTS2.setStatus('current')
lgpPMPonSTS2PDU = ObjectIdentity((1, 3, 6, 1, 4, 1, 476, 1, 42, 4, 10, 1, 8))
if mibBuilder.loadTexts: lgpPMPonSTS2PDU.setStatus('current')
mibBuilder.exportSymbols("LIEBERT-GP-REGISTRATION-MIB", emerson=emerson, lgpAgentNotifications=lgpAgentNotifications, lgpIcomXD=lgpIcomXD, lgpEXMMSR=lgpEXMMSR, liebertCorp=liebertCorp, lgpRackPDU=lgpRackPDU, lgpRackPDU2=lgpRackPDU2, lgpStaticTransferSwitch2FourPole=lgpStaticTransferSwitch2FourPole, lgpAgentIdent=lgpAgentIdent, lgpNX=lgpNX, lgpAcProducts=lgpAcProducts, lgpNX225to600k=lgpNX225to600k, lgpPowerDistributionProducts=lgpPowerDistributionProducts, lgpGXT3Dual=lgpGXT3Dual, lgpPMPonSTS2=lgpPMPonSTS2, lgpEPMP=lgpEPMP, lgpIcomXPtypeXDC=lgpIcomXPtypeXDC, lgpNfinity=lgpNfinity, lgpRPC2kMPX=lgpRPC2kMPX, lgpPMP=lgpPMP, lgpPMPonFDC=lgpPMPonFDC, lgpGXT4Dual=lgpGXT4Dual, lgpIcomPAtypeHPS=lgpIcomPAtypeHPS, lgpIcomCRtypeCRV=lgpIcomCRtypeCRV, lgpSystem=lgpSystem, lgpIcomPAtypePDXsmall=lgpIcomPAtypePDXsmall, lgpGXT3=lgpGXT3, lgpEXM480v=lgpEXM480v, lgpEnvironmental=lgpEnvironmental, lgpIcomSCtypeHPC=lgpIcomSCtypeHPC, lgpStaticTransferSwitchEDS=lgpStaticTransferSwitchEDS, lgpCombinedSystemProducts=lgpCombinedSystemProducts, lgpIcomPAtypeDS=lgpIcomPAtypeDS, lgpMUNiMx=lgpMUNiMx, lgpNpower=lgpNpower, lgpPMPonFPC=lgpPMPonFPC, lgpIcomPAtypePeX=lgpIcomPAtypePeX, lgpPowerSureInteractive2=lgpPowerSureInteractive2, lgpStaticTransferSwitch2=lgpStaticTransferSwitch2, lgpUPStationGXT=lgpUPStationGXT, lgpITA=lgpITA, lgpIcomXPtypeXDPCray=lgpIcomXPtypeXDPCray, lgpPdu=lgpPdu, PYSNMP_MODULE_ID=liebertGlobalProductsRegistrationModule, lgpController=lgpController, lgpTransferSwitchProducts=lgpTransferSwitchProducts, lgpIcomSC=lgpIcomSC, lgpEPM600k=lgpEPM600k, lgpCEMS100orLECS15=lgpCEMS100orLECS15, lgpIcomSCtypeHPCSSmall=lgpIcomSCtypeHPCSSmall, lgpNXRb=lgpNXRb, lgpIcomPAtypeDeluxeSystem3=lgpIcomPAtypeDeluxeSystem3, lgpFoundation=lgpFoundation, liebertFlexibleConditionsModuleReg=liebertFlexibleConditionsModuleReg, lgpIcomSCtypeHPCL=lgpIcomSCtypeHPCL, lgpIcomSCtypeHPCM=lgpIcomSCtypeHPCM, lgpIcomSCtypeHPCW=lgpIcomSCtypeHPCW, lgpPMPonSTS2PDU=lgpPMPonSTS2PDU, lgpIcomPAtypeDeluxeSys3=lgpIcomPAtypeDeluxeSys3, lgpIcomPA=lgpIcomPA, liebertFlexibleModuleReg=liebertFlexibleModuleReg, liebertControllerModuleReg=liebertControllerModuleReg, lgpAPS=lgpAPS, lgpIcomAHStandard=lgpIcomAHStandard, lgpIcomPAtypePDXlarge=lgpIcomPAtypePDXlarge, lgpEXM=lgpEXM, lgpMultiLinkBasicNotification=lgpMultiLinkBasicNotification, lgpPMPgeneric=lgpPMPgeneric, lgpPMPonRDC=lgpPMPonRDC, liebertGlobalProductsRegistrationModule=liebertGlobalProductsRegistrationModule, lgpSeries610MMU=lgpSeries610MMU, lgpIcomSCtypeHPCSLarge=lgpIcomSCtypeHPCSLarge, lgpMPX=lgpMPX, lgpIcomCR=lgpIcomCR, lgpNXC=lgpNXC, liebertPowerModuleReg=liebertPowerModuleReg, lgpStandardMicroprocessor=lgpStandardMicroprocessor, lgpEPM300k=lgpEPM300k, lgpNXLJD=lgpNXLJD, lgpIcomXPtypeXDPW=lgpIcomXPtypeXDPW, lgpFlexible=lgpFlexible, lgpGXT4=lgpGXT4, lgpGXT2Dual=lgpGXT2Dual, liebertPduModuleReg=liebertPduModuleReg, lgpEPM400k=lgpEPM400k, lgpIcomPAtypeJumboCW=lgpIcomPAtypeJumboCW, lgpPMPonEXC=lgpPMPonEXC, liebertAgentModuleReg=liebertAgentModuleReg, lgpRPC2kMPH=lgpRPC2kMPH, lgpNXL=lgpNXL, lgpSeries300=lgpSeries300, lgpConditions=lgpConditions, lgpIcomPAtypeDSE=lgpIcomPAtypeDSE, lgpMPH=lgpMPH, liebertNotificationsModuleReg=liebertNotificationsModuleReg, lgpSeries610SCC=lgpSeries610SCC, lgpIcomPAtypePCWlarge=lgpIcomPAtypePCWlarge, lgpIcomPAtypePDX=lgpIcomPAtypePDX, lgpHiNet=lgpHiNet, lgpAgent=lgpAgent, lgpPowerSureInteractive=lgpPowerSureInteractive, lgpSuper400=lgpSuper400, lgpAgentControl=lgpAgentControl, lgpSeries600or610=lgpSeries600or610, lgpIcomXDtypeXDF=lgpIcomXDtypeXDF, lgpModuleReg=lgpModuleReg, lgpSeries610SMS=lgpSeries610SMS, lgpIcomSCtypeHPCR=lgpIcomSCtypeHPCR, lgpEXL=lgpEXL, lgpAdvancedMicroprocessor=lgpAdvancedMicroprocessor, lgpIcomAH=lgpIcomAH, lgpIcomXP=lgpIcomXP, liebertSystemModuleReg=liebertSystemModuleReg, lgpIcomPAtypePEXS=lgpIcomPAtypePEXS, lgpEXM208v=lgpEXM208v, lgpEXM400v=lgpEXM400v, lgpEPM500k=lgpEPM500k, lgpPMPonPPC=lgpPMPonPPC, lgpEPM=lgpEPM, lgpIcomPAtypePCWsmall=lgpIcomPAtypePCWsmall, lgpIcom=lgpIcom, lgpIcomPAtypeHPM=lgpIcomPAtypeHPM, lgpUpsProducts=lgpUpsProducts, lgpStaticTransferSwitch1=lgpStaticTransferSwitch1, lgpMiniMate2=lgpMiniMate2, lgpProductSpecific=lgpProductSpecific, lgpNXC30to40k=lgpNXC30to40k, lgpPower=lgpPower, lgpIcomPAtypeCW=lgpIcomPAtypeCW, lgpSeries7200=lgpSeries7200, lgpIcomEEV=lgpIcomEEV, liebertModuleReg=liebertModuleReg, lgpMultiLinkProducts=lgpMultiLinkProducts, lgpPMPandLDMF=lgpPMPandLDMF, lgpNotifications=lgpNotifications, liebertGlobalProducts=liebertGlobalProducts, lgpNXr=lgpNXr, lgpIcomXDtypeXDFN=lgpIcomXDtypeXDFN, lgpIcomXPtypeXDP=lgpIcomXPtypeXDP, lgpAgentDevice=lgpAgentDevice, lgpIcomDCL=lgpIcomDCL, liebertConditionsModuleReg=liebertConditionsModuleReg, lgpITA30to40k=lgpITA30to40k, lgpIcomPAtypeChallenger=lgpIcomPAtypeChallenger, lgpPowerConditioningProducts=lgpPowerConditioningProducts, lgpHimod=lgpHimod, lgpEPM800k=lgpEPM800k, liebertEnvironmentalModuleReg=liebertEnvironmentalModuleReg)
