#
# PySNMP MIB module CISCO-CALL-TRACKER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CALL-TRACKER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
AbsoluteCounter32, = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "AbsoluteCounter32")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, ObjectIdentity, Counter32, ModuleIdentity, MibIdentifier, Gauge32, Integer32, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "ObjectIdentity", "Counter32", "ModuleIdentity", "MibIdentifier", "Gauge32", "Integer32", "iso", "TimeTicks")
DisplayString, TimeStamp, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TruthValue", "TextualConvention")
ciscoCallTrackerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 163))
ciscoCallTrackerMIB.setRevisions(('2005-04-12 00:00', '2004-02-02 00:00', '2000-02-10 00:00',))
if mibBuilder.loadTexts: ciscoCallTrackerMIB.setLastUpdated('200504120000Z')
if mibBuilder.loadTexts: ciscoCallTrackerMIB.setOrganization('Cisco Systems, Inc.')
class CctCallId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class CctServiceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("none", 1), ("other", 2), ("slip", 3), ("ppp", 4), ("mp", 5), ("tcpClear", 6), ("telnet", 7), ("exec", 8), ("l2f", 9), ("l2tp", 10))

class CctCallCategory(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("none", 1), ("other", 2), ("modem", 3), ("isdnSync", 4), ("v110", 5), ("v120", 6), ("casDigital", 7), ("mgcpData", 8), ("syncData", 9), ("lapb-ta", 10))

class CctCallSigType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("external", 2), ("q931", 3), ("autoDetect", 4))

cctMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 1))
cctGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 1))
cctActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2))
cctHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3))
cctNotificationConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 4))
cctCallIdPrefix = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctCallIdPrefix.setStatus('current')
cctActiveTableNumberEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveTableNumberEntries.setStatus('current')
cctActiveTableHighWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveTableHighWaterMark.setStatus('current')
cctActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3), )
if mibBuilder.loadTexts: cctActiveTable.setStatus('current')
cctActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-CALL-TRACKER-MIB", "cctActiveCallId"))
if mibBuilder.loadTexts: cctActiveEntry.setStatus('current')
cctActiveCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 1), CctCallId())
if mibBuilder.loadTexts: cctActiveCallId.setStatus('current')
cctActiveSetupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveSetupTime.setStatus('current')
cctActiveOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("originate", 1), ("answer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveOrigin.setStatus('current')
cctActiveConnectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveConnectionTime.setStatus('current')
cctActivePhysicalLayerReadyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActivePhysicalLayerReadyTime.setStatus('current')
cctActiveServiceUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveServiceUpTime.setStatus('current')
cctActiveServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 7), CctServiceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveServiceType.setStatus('current')
cctActiveUserValidationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveUserValidationTime.setStatus('current')
cctActiveUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveUserId.setStatus('current')
cctActiveUserIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveUserIpAddr.setStatus('current')
cctActiveUserSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveUserSubnetMask.setStatus('current')
cctActiveAccountingSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveAccountingSessionId.setStatus('current')
cctActiveCallCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 13), CctCallCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveCallCategory.setStatus('current')
cctActiveInitialRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 14), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveInitialRxRate.setStatus('current')
cctActiveInitialTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 15), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveInitialTxRate.setStatus('current')
cctActiveResourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveResourceSlot.setStatus('current')
cctActiveResourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveResourcePort.setStatus('current')
cctActiveEntrySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveEntrySlot.setStatus('current')
cctActiveEntryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveEntryPort.setStatus('current')
cctActiveEntryDs1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveEntryDs1.setStatus('current')
cctActiveEntryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveEntryChannel.setStatus('current')
cctActiveCalledPartyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveCalledPartyId.setStatus('current')
cctActiveCallingPartyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveCallingPartyId.setStatus('current')
cctActiveMpBundleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveMpBundleId.setStatus('current')
cctActiveChargedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 25), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveChargedUnits.setStatus('current')
cctActiveReceiveBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 26), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveReceiveBytes.setStatus('current')
cctActiveTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 27), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveTransmitBytes.setStatus('current')
cctActiveCallSignalingType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 2, 3, 1, 28), CctCallSigType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctActiveCallSignalingType.setStatus('current')
cctHistoryTableEntriesLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cctHistoryTableEntriesLimit.setStatus('current')
cctHistoryTableMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryTableMaxEntries.setStatus('current')
cctHistoryTableRetainTimer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cctHistoryTableRetainTimer.setStatus('current')
cctHistoryTableNumberEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryTableNumberEntries.setStatus('current')
cctHistoryTableHighWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryTableHighWaterMark.setStatus('current')
cctHistoryTableNewestIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryTableNewestIndex.setStatus('current')
cctHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7), )
if mibBuilder.loadTexts: cctHistoryTable.setStatus('current')
cctHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1), ).setIndexNames((0, "CISCO-CALL-TRACKER-MIB", "cctHistoryIndex"))
if mibBuilder.loadTexts: cctHistoryEntry.setStatus('current')
cctHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cctHistoryIndex.setStatus('current')
cctHistoryCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 2), CctCallId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryCallId.setStatus('current')
cctHistorySetupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistorySetupTime.setStatus('current')
cctHistoryOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("originate", 1), ("answer", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryOrigin.setStatus('current')
cctHistoryConnectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryConnectionTime.setStatus('current')
cctHistoryPhysicalLayerReadyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryPhysicalLayerReadyTime.setStatus('current')
cctHistoryServiceUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryServiceUpTime.setStatus('current')
cctHistoryServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 8), CctServiceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryServiceType.setStatus('current')
cctHistoryUserValidationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryUserValidationTime.setStatus('current')
cctHistoryUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryUserId.setStatus('current')
cctHistoryUserIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryUserIpAddr.setStatus('current')
cctHistoryUserSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryUserSubnetMask.setStatus('current')
cctHistoryAccountingSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryAccountingSessionId.setStatus('current')
cctHistoryCallCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 14), CctCallCategory()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryCallCategory.setStatus('current')
cctHistoryInitialRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 15), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryInitialRxRate.setStatus('current')
cctHistoryInitialTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 16), Unsigned32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryInitialTxRate.setStatus('current')
cctHistoryResourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryResourceSlot.setStatus('current')
cctHistoryResourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryResourcePort.setStatus('current')
cctHistoryEntrySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryEntrySlot.setStatus('current')
cctHistoryEntryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryEntryPort.setStatus('current')
cctHistoryEntryDs1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryEntryDs1.setStatus('current')
cctHistoryEntryChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 214783647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryEntryChannel.setStatus('current')
cctHistoryCalledPartyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryCalledPartyId.setStatus('current')
cctHistoryCallingPartyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryCallingPartyId.setStatus('current')
cctHistoryMpBundleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryMpBundleId.setStatus('current')
cctHistoryChargedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryChargedUnits.setStatus('current')
cctHistoryReceiveBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 28), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryReceiveBytes.setStatus('current')
cctHistoryTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 29), Gauge32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryTransmitBytes.setStatus('current')
cctHistoryDisconnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 30), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryDisconnectTime.setStatus('current')
cctHistoryDisconnectReasonText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryDisconnectReasonText.setStatus('current')
cctHistoryCallSignalingType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 3, 7, 1, 32), CctCallSigType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cctHistoryCallSignalingType.setStatus('current')
cctCallSetupTermNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 163, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cctCallSetupTermNotifyEnable.setStatus('current')
cctMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 2))
cctMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 2, 0))
cctCallSetupNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 163, 2, 0, 1)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctActiveSetupTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCalledPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallingPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallCategory"))
if mibBuilder.loadTexts: cctCallSetupNotification.setStatus('current')
cctCallTerminateNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 163, 2, 0, 2)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctHistoryCallId"))
if mibBuilder.loadTexts: cctCallTerminateNotification.setStatus('current')
cctMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 3))
cctMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 1))
cctMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2))
cctMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 1, 1)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctGeneralGroup"), ("CISCO-CALL-TRACKER-MIB", "cctActiveGroup"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryGroup"), ("CISCO-CALL-TRACKER-MIB", "cctNotificationConfigGroup"), ("CISCO-CALL-TRACKER-MIB", "cctNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctMIBCompliance = cctMIBCompliance.setStatus('deprecated')
cctMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 1, 2)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctGeneralGroup"), ("CISCO-CALL-TRACKER-MIB", "cctActiveGroupRev1"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryGroupRev1"), ("CISCO-CALL-TRACKER-MIB", "cctNotificationConfigGroup"), ("CISCO-CALL-TRACKER-MIB", "cctNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctMIBComplianceRev1 = cctMIBComplianceRev1.setStatus('current')
cctGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 1)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctCallIdPrefix"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctGeneralGroup = cctGeneralGroup.setStatus('current')
cctActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 2)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctActiveTableNumberEntries"), ("CISCO-CALL-TRACKER-MIB", "cctActiveTableHighWaterMark"), ("CISCO-CALL-TRACKER-MIB", "cctActiveSetupTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveOrigin"), ("CISCO-CALL-TRACKER-MIB", "cctActiveConnectionTime"), ("CISCO-CALL-TRACKER-MIB", "cctActivePhysicalLayerReadyTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveServiceUpTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveServiceType"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserValidationTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserIpAddr"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserSubnetMask"), ("CISCO-CALL-TRACKER-MIB", "cctActiveAccountingSessionId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallCategory"), ("CISCO-CALL-TRACKER-MIB", "cctActiveInitialRxRate"), ("CISCO-CALL-TRACKER-MIB", "cctActiveInitialTxRate"), ("CISCO-CALL-TRACKER-MIB", "cctActiveResourceSlot"), ("CISCO-CALL-TRACKER-MIB", "cctActiveResourcePort"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntrySlot"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntryPort"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntryDs1"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntryChannel"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCalledPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallingPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveMpBundleId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveChargedUnits"), ("CISCO-CALL-TRACKER-MIB", "cctActiveReceiveBytes"), ("CISCO-CALL-TRACKER-MIB", "cctActiveTransmitBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctActiveGroup = cctActiveGroup.setStatus('deprecated')
cctHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 3)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctHistoryTableEntriesLimit"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableMaxEntries"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableRetainTimer"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableNumberEntries"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableHighWaterMark"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableNewestIndex"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallId"), ("CISCO-CALL-TRACKER-MIB", "cctHistorySetupTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryOrigin"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryConnectionTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryPhysicalLayerReadyTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryServiceUpTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryServiceType"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserValidationTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserIpAddr"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserSubnetMask"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryAccountingSessionId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallCategory"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryInitialRxRate"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryInitialTxRate"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryResourceSlot"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryResourcePort"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntrySlot"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntryPort"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntryDs1"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntryChannel"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCalledPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallingPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryMpBundleId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryChargedUnits"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryReceiveBytes"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTransmitBytes"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryDisconnectTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryDisconnectReasonText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctHistoryGroup = cctHistoryGroup.setStatus('deprecated')
cctNotificationConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 4)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctCallSetupTermNotifyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctNotificationConfigGroup = cctNotificationConfigGroup.setStatus('current')
cctNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 5)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctCallSetupNotification"), ("CISCO-CALL-TRACKER-MIB", "cctCallTerminateNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctNotificationGroup = cctNotificationGroup.setStatus('current')
cctActiveGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 6)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctActiveTableNumberEntries"), ("CISCO-CALL-TRACKER-MIB", "cctActiveTableHighWaterMark"), ("CISCO-CALL-TRACKER-MIB", "cctActiveSetupTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveOrigin"), ("CISCO-CALL-TRACKER-MIB", "cctActiveConnectionTime"), ("CISCO-CALL-TRACKER-MIB", "cctActivePhysicalLayerReadyTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveServiceUpTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveServiceType"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserValidationTime"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserIpAddr"), ("CISCO-CALL-TRACKER-MIB", "cctActiveUserSubnetMask"), ("CISCO-CALL-TRACKER-MIB", "cctActiveAccountingSessionId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallCategory"), ("CISCO-CALL-TRACKER-MIB", "cctActiveInitialRxRate"), ("CISCO-CALL-TRACKER-MIB", "cctActiveInitialTxRate"), ("CISCO-CALL-TRACKER-MIB", "cctActiveResourceSlot"), ("CISCO-CALL-TRACKER-MIB", "cctActiveResourcePort"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntrySlot"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntryPort"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntryDs1"), ("CISCO-CALL-TRACKER-MIB", "cctActiveEntryChannel"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCalledPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallingPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveMpBundleId"), ("CISCO-CALL-TRACKER-MIB", "cctActiveChargedUnits"), ("CISCO-CALL-TRACKER-MIB", "cctActiveReceiveBytes"), ("CISCO-CALL-TRACKER-MIB", "cctActiveTransmitBytes"), ("CISCO-CALL-TRACKER-MIB", "cctActiveCallSignalingType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctActiveGroupRev1 = cctActiveGroupRev1.setStatus('current')
cctHistoryGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 163, 3, 2, 7)).setObjects(("CISCO-CALL-TRACKER-MIB", "cctHistoryTableEntriesLimit"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableMaxEntries"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableRetainTimer"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableNumberEntries"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableHighWaterMark"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTableNewestIndex"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallId"), ("CISCO-CALL-TRACKER-MIB", "cctHistorySetupTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryOrigin"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryConnectionTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryPhysicalLayerReadyTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryServiceUpTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryServiceType"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserValidationTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserIpAddr"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryUserSubnetMask"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryAccountingSessionId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallCategory"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryInitialRxRate"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryInitialTxRate"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryResourceSlot"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryResourcePort"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntrySlot"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntryPort"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntryDs1"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryEntryChannel"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCalledPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallingPartyId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryMpBundleId"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryChargedUnits"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryReceiveBytes"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryTransmitBytes"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryDisconnectTime"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryDisconnectReasonText"), ("CISCO-CALL-TRACKER-MIB", "cctHistoryCallSignalingType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cctHistoryGroupRev1 = cctHistoryGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-CALL-TRACKER-MIB", cctActiveUserValidationTime=cctActiveUserValidationTime, cctNotificationConfigGroup=cctNotificationConfigGroup, cctCallSetupTermNotifyEnable=cctCallSetupTermNotifyEnable, cctActiveAccountingSessionId=cctActiveAccountingSessionId, cctHistoryCallingPartyId=cctHistoryCallingPartyId, CctCallId=CctCallId, CctServiceType=CctServiceType, cctHistoryTable=cctHistoryTable, cctActiveEntryPort=cctActiveEntryPort, cctHistoryAccountingSessionId=cctHistoryAccountingSessionId, cctActivePhysicalLayerReadyTime=cctActivePhysicalLayerReadyTime, cctHistoryCallId=cctHistoryCallId, cctHistoryTransmitBytes=cctHistoryTransmitBytes, cctHistoryServiceType=cctHistoryServiceType, cctHistoryInitialTxRate=cctHistoryInitialTxRate, cctHistoryServiceUpTime=cctHistoryServiceUpTime, cctActiveServiceUpTime=cctActiveServiceUpTime, cctNotificationGroup=cctNotificationGroup, cctMIBComplianceRev1=cctMIBComplianceRev1, cctActiveChargedUnits=cctActiveChargedUnits, cctHistoryTableHighWaterMark=cctHistoryTableHighWaterMark, cctActiveTableNumberEntries=cctActiveTableNumberEntries, cctMIBCompliance=cctMIBCompliance, cctHistoryEntryDs1=cctHistoryEntryDs1, cctGeneralGroup=cctGeneralGroup, ciscoCallTrackerMIB=ciscoCallTrackerMIB, cctActiveTable=cctActiveTable, cctHistory=cctHistory, cctHistoryCalledPartyId=cctHistoryCalledPartyId, cctHistoryConnectionTime=cctHistoryConnectionTime, cctActiveCallingPartyId=cctActiveCallingPartyId, cctActiveGroupRev1=cctActiveGroupRev1, cctHistoryUserSubnetMask=cctHistoryUserSubnetMask, cctActiveConnectionTime=cctActiveConnectionTime, CctCallCategory=CctCallCategory, cctActiveUserSubnetMask=cctActiveUserSubnetMask, cctHistoryEntryChannel=cctHistoryEntryChannel, cctHistoryEntry=cctHistoryEntry, cctActiveSetupTime=cctActiveSetupTime, cctActiveGroup=cctActiveGroup, cctActiveCalledPartyId=cctActiveCalledPartyId, cctHistoryGroupRev1=cctHistoryGroupRev1, PYSNMP_MODULE_ID=ciscoCallTrackerMIB, cctActiveResourcePort=cctActiveResourcePort, cctHistoryUserValidationTime=cctHistoryUserValidationTime, cctActiveCallCategory=cctActiveCallCategory, cctCallSetupNotification=cctCallSetupNotification, cctActiveEntrySlot=cctActiveEntrySlot, cctActiveUserId=cctActiveUserId, cctHistoryOrigin=cctHistoryOrigin, cctHistoryResourceSlot=cctHistoryResourceSlot, cctHistoryReceiveBytes=cctHistoryReceiveBytes, cctHistoryGroup=cctHistoryGroup, cctMIBCompliances=cctMIBCompliances, cctMIBObjects=cctMIBObjects, cctHistorySetupTime=cctHistorySetupTime, cctActiveEntryDs1=cctActiveEntryDs1, cctHistoryEntrySlot=cctHistoryEntrySlot, cctNotificationConfig=cctNotificationConfig, cctHistoryCallSignalingType=cctHistoryCallSignalingType, cctActiveTransmitBytes=cctActiveTransmitBytes, cctActiveEntry=cctActiveEntry, cctHistoryDisconnectReasonText=cctHistoryDisconnectReasonText, cctHistoryDisconnectTime=cctHistoryDisconnectTime, cctActiveCallId=cctActiveCallId, cctActiveResourceSlot=cctActiveResourceSlot, cctActiveServiceType=cctActiveServiceType, cctHistoryTableNumberEntries=cctHistoryTableNumberEntries, cctActiveInitialRxRate=cctActiveInitialRxRate, cctHistoryIndex=cctHistoryIndex, cctMIBNotifications=cctMIBNotifications, cctHistoryInitialRxRate=cctHistoryInitialRxRate, cctMIBNotificationPrefix=cctMIBNotificationPrefix, cctHistoryTableRetainTimer=cctHistoryTableRetainTimer, cctHistoryTableEntriesLimit=cctHistoryTableEntriesLimit, cctHistoryTableNewestIndex=cctHistoryTableNewestIndex, cctHistoryUserId=cctHistoryUserId, cctActiveOrigin=cctActiveOrigin, cctCallIdPrefix=cctCallIdPrefix, cctActiveUserIpAddr=cctActiveUserIpAddr, cctActiveCallSignalingType=cctActiveCallSignalingType, cctMIBGroups=cctMIBGroups, cctActiveMpBundleId=cctActiveMpBundleId, cctActiveReceiveBytes=cctActiveReceiveBytes, cctCallTerminateNotification=cctCallTerminateNotification, cctHistoryCallCategory=cctHistoryCallCategory, CctCallSigType=CctCallSigType, cctHistoryUserIpAddr=cctHistoryUserIpAddr, cctActiveEntryChannel=cctActiveEntryChannel, cctHistoryTableMaxEntries=cctHistoryTableMaxEntries, cctHistoryMpBundleId=cctHistoryMpBundleId, cctActiveInitialTxRate=cctActiveInitialTxRate, cctHistoryEntryPort=cctHistoryEntryPort, cctActiveTableHighWaterMark=cctActiveTableHighWaterMark, cctHistoryPhysicalLayerReadyTime=cctHistoryPhysicalLayerReadyTime, cctMIBConformance=cctMIBConformance, cctHistoryChargedUnits=cctHistoryChargedUnits, cctActive=cctActive, cctHistoryResourcePort=cctHistoryResourcePort, cctGeneral=cctGeneral)
