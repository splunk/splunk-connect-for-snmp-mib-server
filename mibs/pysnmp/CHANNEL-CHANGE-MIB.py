#
# PySNMP MIB module CHANNEL-CHANGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CHANNEL-CHANGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, ModuleIdentity, Gauge32, ObjectIdentity, MibIdentifier, Integer32, Counter32, Unsigned32, iso, enterprises, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibIdentifier", "Integer32", "Counter32", "Unsigned32", "iso", "enterprises", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "TimeTicks")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
channelChangeMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 1, 1, 1))
if mibBuilder.loadTexts: channelChangeMib.setLastUpdated('200205121638Z')
if mibBuilder.loadTexts: channelChangeMib.setOrganization('FS VDSL Architecture Experts Group')
fsan = MibIdentifier((1, 3, 6, 1, 4, 1, 1))
fsVdsl = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1))
channelChangeMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 1))
channelChangeMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 2))
channelTable = MibTable((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: channelTable.setStatus('current')
channelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "CHANNEL-CHANGE-MIB", "channelId"))
if mibBuilder.loadTexts: channelEntry.setStatus('current')
channelId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: channelId.setStatus('current')
entitlementIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: entitlementIndex.setStatus('current')
networkPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: networkPortId.setStatus('current')
vpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpi.setStatus('current')
vci = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vci.setStatus('current')
channelAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("locked", 1), ("unlocked", 2), ("shuttingDown", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelAdminStatus.setStatus('current')
channelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 1, 1, 8), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: channelRowStatus.setStatus('current')
customerTable = MibTable((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: customerTable.setStatus('current')
customerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "CHANNEL-CHANGE-MIB", "onuId"), (0, "CHANNEL-CHANGE-MIB", "customerPortId"))
if mibBuilder.loadTexts: customerEntry.setStatus('current')
onuId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: onuId.setStatus('current')
customerPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: customerPortId.setStatus('current')
maxMulticastTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: maxMulticastTraffic.setStatus('current')
maxMulticastStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: maxMulticastStreams.setStatus('current')
untimedEntitlements1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: untimedEntitlements1.setStatus('current')
untimedEntitlements2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: untimedEntitlements2.setStatus('current')
grantEntitlement = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: grantEntitlement.setStatus('current')
revokeEntitlement = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: revokeEntitlement.setStatus('current')
customerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("locked", 1), ("unlocked", 2), ("shuttingDown", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: customerAdminStatus.setStatus('current')
customerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 2, 1, 10), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: customerRowStatus.setStatus('current')
timedEntitlementTable = MibTable((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3), )
if mibBuilder.loadTexts: timedEntitlementTable.setStatus('current')
timedEntitlementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3, 1), ).setIndexNames((0, "CHANNEL-CHANGE-MIB", "timedEntitlementId"))
if mibBuilder.loadTexts: timedEntitlementEntry.setStatus('current')
timedEntitlementId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: timedEntitlementId.setStatus('current')
timedEntitlementChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: timedEntitlementChannelId.setStatus('current')
startTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: startTime.setStatus('current')
stopTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stopTime.setStatus('current')
entitlementRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 3, 1, 5), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: entitlementRowStatus.setStatus('current')
customerTimedEntitlementTable = MibTable((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 4), )
if mibBuilder.loadTexts: customerTimedEntitlementTable.setStatus('current')
customerTimedEntitlementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 4, 1), ).setIndexNames((0, "CHANNEL-CHANGE-MIB", "custOnuId"), (0, "CHANNEL-CHANGE-MIB", "custPortId"), (0, "CHANNEL-CHANGE-MIB", "custTimedEntitlementId"))
if mibBuilder.loadTexts: customerTimedEntitlementEntry.setStatus('current')
custOnuId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 4, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: custOnuId.setStatus('current')
custPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 4, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: custPortId.setStatus('current')
custTimedEntitlementId = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: custTimedEntitlementId.setStatus('current')
custTimedEntitlementRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 4, 1, 4), RowStatus().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: custTimedEntitlementRowStatus.setStatus('current')
channelChangeMibNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 2, 0))
channelChangeCAFailed = NotificationType((1, 3, 6, 1, 4, 1, 1, 1, 1, 2, 0, 1)).setObjects(("CHANNEL-CHANGE-MIB", "rejectedOnuId"), ("CHANNEL-CHANGE-MIB", "rejectedCustomerPortId"))
if mibBuilder.loadTexts: channelChangeCAFailed.setStatus('current')
rejectedOnuId = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rejectedOnuId.setStatus('current')
rejectedCustomerPortId = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 6), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rejectedCustomerPortId.setStatus('current')
caFailedNotificationStatus = MibScalar((1, 3, 6, 1, 4, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: caFailedNotificationStatus.setStatus('current')
channelChangeMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 3))
channelChangeMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 1))
channelChangeMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2))
channelChangeMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 1, 1)).setObjects(("CHANNEL-CHANGE-MIB", "channelChangeBasicGroup"), ("CHANNEL-CHANGE-MIB", "channelChangeCACGroup"), ("CHANNEL-CHANGE-MIB", "channelChangeBasicCAGroup"), ("CHANNEL-CHANGE-MIB", "channelChangeCA4095ChannelsGroup"), ("CHANNEL-CHANGE-MIB", "channelChangeCATimedEntitlementsGroup"), ("CHANNEL-CHANGE-MIB", "channelChangeCANotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeMibCompliance = channelChangeMibCompliance.setStatus('current')
channelChangeBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2, 1)).setObjects(("CHANNEL-CHANGE-MIB", "channelId"), ("CHANNEL-CHANGE-MIB", "networkPortId"), ("CHANNEL-CHANGE-MIB", "vpi"), ("CHANNEL-CHANGE-MIB", "vci"), ("CHANNEL-CHANGE-MIB", "channelAdminStatus"), ("CHANNEL-CHANGE-MIB", "channelRowStatus"), ("CHANNEL-CHANGE-MIB", "onuId"), ("CHANNEL-CHANGE-MIB", "customerPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeBasicGroup = channelChangeBasicGroup.setStatus('current')
channelChangeCACGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2, 2)).setObjects(("CHANNEL-CHANGE-MIB", "maxMulticastTraffic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeCACGroup = channelChangeCACGroup.setStatus('current')
channelChangeBasicCAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2, 3)).setObjects(("CHANNEL-CHANGE-MIB", "maxMulticastStreams"), ("CHANNEL-CHANGE-MIB", "entitlementIndex"), ("CHANNEL-CHANGE-MIB", "untimedEntitlements1"), ("CHANNEL-CHANGE-MIB", "grantEntitlement"), ("CHANNEL-CHANGE-MIB", "revokeEntitlement"), ("CHANNEL-CHANGE-MIB", "rejectedOnuId"), ("CHANNEL-CHANGE-MIB", "rejectedCustomerPortId"), ("CHANNEL-CHANGE-MIB", "caFailedNotificationStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeBasicCAGroup = channelChangeBasicCAGroup.setStatus('current')
channelChangeCA4095ChannelsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2, 4)).setObjects(("CHANNEL-CHANGE-MIB", "untimedEntitlements2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeCA4095ChannelsGroup = channelChangeCA4095ChannelsGroup.setStatus('current')
channelChangeCATimedEntitlementsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2, 5)).setObjects(("CHANNEL-CHANGE-MIB", "timedEntitlementId"), ("CHANNEL-CHANGE-MIB", "timedEntitlementChannelId"), ("CHANNEL-CHANGE-MIB", "startTime"), ("CHANNEL-CHANGE-MIB", "stopTime"), ("CHANNEL-CHANGE-MIB", "entitlementRowStatus"), ("CHANNEL-CHANGE-MIB", "custTimedEntitlementId"), ("CHANNEL-CHANGE-MIB", "custTimedEntitlementRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeCATimedEntitlementsGroup = channelChangeCATimedEntitlementsGroup.setStatus('current')
channelChangeCANotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1, 1, 1, 3, 2, 6)).setObjects(("CHANNEL-CHANGE-MIB", "channelChangeCAFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    channelChangeCANotificationsGroup = channelChangeCANotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("CHANNEL-CHANGE-MIB", networkPortId=networkPortId, timedEntitlementId=timedEntitlementId, customerTable=customerTable, channelChangeBasicCAGroup=channelChangeBasicCAGroup, channelAdminStatus=channelAdminStatus, channelChangeMibCompliance=channelChangeMibCompliance, customerRowStatus=customerRowStatus, customerTimedEntitlementEntry=customerTimedEntitlementEntry, customerPortId=customerPortId, timedEntitlementTable=timedEntitlementTable, channelRowStatus=channelRowStatus, channelEntry=channelEntry, channelChangeMibGroups=channelChangeMibGroups, entitlementIndex=entitlementIndex, customerAdminStatus=customerAdminStatus, untimedEntitlements2=untimedEntitlements2, grantEntitlement=grantEntitlement, channelChangeMibNotificationPrefix=channelChangeMibNotificationPrefix, fsVdsl=fsVdsl, customerTimedEntitlementTable=customerTimedEntitlementTable, channelId=channelId, timedEntitlementEntry=timedEntitlementEntry, channelTable=channelTable, channelChangeMibConformance=channelChangeMibConformance, maxMulticastTraffic=maxMulticastTraffic, channelChangeMibCompliances=channelChangeMibCompliances, channelChangeCA4095ChannelsGroup=channelChangeCA4095ChannelsGroup, stopTime=stopTime, channelChangeBasicGroup=channelChangeBasicGroup, channelChangeCAFailed=channelChangeCAFailed, channelChangeCACGroup=channelChangeCACGroup, custTimedEntitlementId=custTimedEntitlementId, maxMulticastStreams=maxMulticastStreams, channelChangeMib=channelChangeMib, vci=vci, untimedEntitlements1=untimedEntitlements1, channelChangeMibObjects=channelChangeMibObjects, timedEntitlementChannelId=timedEntitlementChannelId, rejectedCustomerPortId=rejectedCustomerPortId, caFailedNotificationStatus=caFailedNotificationStatus, onuId=onuId, custTimedEntitlementRowStatus=custTimedEntitlementRowStatus, startTime=startTime, vpi=vpi, channelChangeCATimedEntitlementsGroup=channelChangeCATimedEntitlementsGroup, PYSNMP_MODULE_ID=channelChangeMib, channelChangeMibNotifications=channelChangeMibNotifications, entitlementRowStatus=entitlementRowStatus, rejectedOnuId=rejectedOnuId, fsan=fsan, custOnuId=custOnuId, customerEntry=customerEntry, channelChangeCANotificationsGroup=channelChangeCANotificationsGroup, custPortId=custPortId, revokeEntitlement=revokeEntitlement)
