#
# PySNMP MIB module WWP-LEOS-DATAPLANE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-DATAPLANE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Gauge32, iso, Bits, TimeTicks, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Counter64, Integer32, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "iso", "Bits", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Counter64", "Integer32", "NotificationType", "Counter32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosDataplaneMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500))
wwpLeosDataplaneMIB.setRevisions(('2012-06-08 00:50', '2011-06-13 00:50', '2011-05-10 00:50', '2010-07-28 00:00', '2010-02-12 00:00', '2008-11-11 17:00',))
if mibBuilder.loadTexts: wwpLeosDataplaneMIB.setLastUpdated('201206080050Z')
if mibBuilder.loadTexts: wwpLeosDataplaneMIB.setOrganization('Ciena, Inc')
class DpTsQSredDropProbability(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("drop-100-percent", 1), ("drop-6-25-percent", 2), ("drop-3-125-percent", 3), ("drop-1-5625-percent", 4), ("drop-0-78125-percent", 5), ("drop-0-390625-percent", 6), ("drop-0-1953125-percent", 7), ("drop-0-0976562-percent", 8))

class DpTsQWredSimpleMaxDropProbability(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("drop-100-percent", 1), ("drop-75-percent", 2), ("drop-50-percent", 3), ("drop-25-percent", 4), ("drop-10-percent", 5), ("drop-9-percent", 6), ("drop-8-percent", 7), ("drop-7-percent", 8), ("drop-6-percent", 9), ("drop-5-percent", 10), ("drop-4-percent", 11), ("drop-3-percent", 12), ("drop-2-percent", 13), ("drop-1-percent", 14), ("drop-0-percent", 15))

class DpTsRCosMappingColor(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("green", 1), ("yellow", 2))

wwpLeosDpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1))
wwpLeosDpTs = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1))
wwpLeosDpTsQueuing = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1))
wwpLeosDpTsQCongestionAvoidanceProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1))
wwpLeosDpTsQEgressPortQueueGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2))
wwpLeosDpTsQRcosToCosQueueMap = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3))
wwpLeosDpTsCosMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2))
wwpLeosDpTsFrameCosMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3))
wwpLeosDpTsQCAProfileSREDTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDTable.setStatus('current')
wwpLeosDpTsQCAProfileSREDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQCAProfileSREDId"))
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDEntry.setStatus('current')
wwpLeosDpTsQCAProfileSREDId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDId.setStatus('current')
wwpLeosDpTsQCAProfileSREDName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDName.setStatus('current')
wwpLeosDpTsQCAProfileSREDGreenThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDGreenThreshold.setStatus('current')
wwpLeosDpTsQCAProfileSREDGreenDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 5), DpTsQSredDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDGreenDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileSREDYellowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDYellowThreshold.setStatus('current')
wwpLeosDpTsQCAProfileSREDYellowDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 7), DpTsQSredDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDYellowDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileSREDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileSREDRowStatus.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTable.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQCAProfileWREDSimpleId"))
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleEntry.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleId.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleName.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTCPGreenThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTCPGreenThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTCPGreenUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTCPGreenUpperThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTCPGreenMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 5), DpTsQWredSimpleMaxDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTCPGreenMaxDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTCPYellowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTCPYellowThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTCPYellowUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTCPYellowUpperThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleTCPYellowMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 8), DpTsQWredSimpleMaxDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleTCPYellowMaxDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleRowStatus.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleNonTCPThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleNonTCPThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleNonTCPUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleNonTCPUpperThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleNonTCPMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 12), DpTsQWredSimpleMaxDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleNonTCPMaxDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleGreenLowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleGreenLowerThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleGreenUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleGreenUpperThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleGreenMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 15), DpTsQWredSimpleMaxDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleGreenMaxDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleYellowLowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleYellowLowerThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleYellowUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleYellowUpperThreshold.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleYellowMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 18), DpTsQWredSimpleMaxDropProbability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleYellowMaxDropProbability.setStatus('current')
wwpLeosDpTsQCAProfileWREDSimpleYellowAdmitLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 1, 2, 1, 19), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQCAProfileWREDSimpleYellowAdmitLimit.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupTable.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQEgressPortQueueGroupId"))
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupEntry.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupId.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQCount.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupSchedulerAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("strictpriority", 1), ("weightedfairqueuing", 2), ("roundrobin", 3), ("weighteddeficitroundrobin", 4), ("weightedroundrobin", 5), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupSchedulerAlgorithm.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupShaperBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1, 4), Unsigned32()).setUnits('kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupShaperBandwidth.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 262144))).setUnits('kb').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupBurstSize.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupWdrrSchedulerGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50, 1600))).setUnits('kb').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupWdrrSchedulerGranularity.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQConfigTable.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQEgressPortQueueGroupId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQEgressPortQueueGroupQueueId"))
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQConfigEntry.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueId.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueCAPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueCAPId.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueuePriorityId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueuePriorityId.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueSchedulerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueSchedulerWeight.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueSize.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueCIR.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 262144))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueCBS.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueEIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueEIR.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 262144))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueEBS.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3), )
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQStatsTable.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQEgressPortQueueGroupId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQEgressPortQueueGroupStatsQueueId"))
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQStatsEntry.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupStatsQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupStatsQueueId.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxBytes.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxPkts.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedBytes.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedPkts.setStatus('current')
wwpLeosDpTsQEgressPortQueueGroupQueueStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 2, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsQEgressPortQueueGroupQueueStatsClear.setStatus('current')
wwpLeosDpTsQueueMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2), )
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapTable.setStatus('current')
wwpLeosDpTsQueueMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsQueueMapId"))
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapEntry.setStatus('current')
wwpLeosDpTsQueueMapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapId.setStatus('current')
wwpLeosDpTsQueueMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapName.setStatus('current')
wwpLeosDpTsQueueMapQCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapQCount.setStatus('current')
wwpLeosDpTsQueueMapRCOS0 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS0.setStatus('current')
wwpLeosDpTsQueueMapRCOS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS1.setStatus('current')
wwpLeosDpTsQueueMapRCOS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS2.setStatus('current')
wwpLeosDpTsQueueMapRCOS3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS3.setStatus('current')
wwpLeosDpTsQueueMapRCOS4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS4.setStatus('current')
wwpLeosDpTsQueueMapRCOS5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS5.setStatus('current')
wwpLeosDpTsQueueMapRCOS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS6.setStatus('current')
wwpLeosDpTsQueueMapRCOS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRCOS7.setStatus('current')
wwpLeosDpTsQueueMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 1, 3, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsQueueMapRowStatus.setStatus('current')
wwpLeosDpTsCosMapProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 1), )
if mibBuilder.loadTexts: wwpLeosDpTsCosMapProfileTable.setStatus('current')
wwpLeosDpTsCosMapProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 1, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsCosMapProfileId"))
if mibBuilder.loadTexts: wwpLeosDpTsCosMapProfileEntry.setStatus('current')
wwpLeosDpTsCosMapProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosDpTsCosMapProfileId.setStatus('current')
wwpLeosDpTsCosMapProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsCosMapProfileName.setStatus('current')
wwpLeosDpTsCosMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsCosMapRowStatus.setStatus('current')
wwpLeosDpTsDot1dCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 2), )
if mibBuilder.loadTexts: wwpLeosDpTsDot1dCosMapTable.setStatus('deprecated')
wwpLeosDpTsDot1dCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 2, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsCosMapProfileId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsDot1dCosMapDot1dValue"))
if mibBuilder.loadTexts: wwpLeosDpTsDot1dCosMapEntry.setStatus('deprecated')
wwpLeosDpTsDot1dCosMapDot1dValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wwpLeosDpTsDot1dCosMapDot1dValue.setStatus('current')
wwpLeosDpTsDot1dCosMapRCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsDot1dCosMapRCOS.setStatus('current')
wwpLeosDpTsDscpCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 3), )
if mibBuilder.loadTexts: wwpLeosDpTsDscpCosMapTable.setStatus('current')
wwpLeosDpTsDscpCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 3, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsCosMapProfileId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsDscpCosMapDscpValue"))
if mibBuilder.loadTexts: wwpLeosDpTsDscpCosMapEntry.setStatus('current')
wwpLeosDpTsDscpCosMapDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: wwpLeosDpTsDscpCosMapDscpValue.setStatus('current')
wwpLeosDpTsDscpCosMapRCOS = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsDscpCosMapRCOS.setStatus('current')
wwpLeosDpTsDscpCosMapRColorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 3, 1, 3), DpTsRCosMappingColor()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsDscpCosMapRColorValue.setStatus('current')
wwpLeosDpTsDot1dDeiCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 4), )
if mibBuilder.loadTexts: wwpLeosDpTsDot1dDeiCosMapTable.setStatus('current')
wwpLeosDpTsDot1dDeiCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 4, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsCosMapProfileId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsDot1dDeiCosMapDot1dValue"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsDot1dDeiCosMapDeiValue"))
if mibBuilder.loadTexts: wwpLeosDpTsDot1dDeiCosMapEntry.setStatus('current')
wwpLeosDpTsDot1dDeiCosMapDot1dValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wwpLeosDpTsDot1dDeiCosMapDot1dValue.setStatus('current')
wwpLeosDpTsDot1dDeiCosMapDeiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: wwpLeosDpTsDot1dDeiCosMapDeiValue.setStatus('current')
wwpLeosDpTsDot1dDeiCosMapRCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsDot1dDeiCosMapRCosValue.setStatus('current')
wwpLeosDpTsDot1dDeiCosMapRColorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 4, 1, 4), DpTsRCosMappingColor()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsDot1dDeiCosMapRColorValue.setStatus('current')
wwpLeosDpTsMplsTcCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 5), )
if mibBuilder.loadTexts: wwpLeosDpTsMplsTcCosMapTable.setStatus('current')
wwpLeosDpTsMplsTcCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 5, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsCosMapProfileId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsMplsTcCosMapMplsTcValue"))
if mibBuilder.loadTexts: wwpLeosDpTsMplsTcCosMapEntry.setStatus('current')
wwpLeosDpTsMplsTcCosMapMplsTcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wwpLeosDpTsMplsTcCosMapMplsTcValue.setStatus('current')
wwpLeosDpTsMplsTcCosMapRCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsMplsTcCosMapRCosValue.setStatus('current')
wwpLeosDpTsMplsTcCosMapRColorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 2, 5, 1, 3), DpTsRCosMappingColor()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsMplsTcCosMapRColorValue.setStatus('current')
wwpLeosDpTsFrameCosMapProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 1), )
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapProfileTable.setStatus('current')
wwpLeosDpTsFrameCosMapProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 1, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsFrameCosMapProfileId"))
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapProfileEntry.setStatus('current')
wwpLeosDpTsFrameCosMapProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapProfileId.setStatus('current')
wwpLeosDpTsFrameCosMapProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapProfileName.setStatus('current')
wwpLeosDpTsFrameCosMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapRowStatus.setStatus('current')
wwpLeosDpTsFrameCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2), )
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapTable.setStatus('current')
wwpLeosDpTsFrameCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2, 1), ).setIndexNames((0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsFrameCosMapProfileId"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsFrameCosMapRCosValue"), (0, "WWP-LEOS-DATAPLANE-MIB", "wwpLeosDpTsFrameCosMapRColorValue"))
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapEntry.setStatus('current')
wwpLeosDpTsFrameCosMapRCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapRCosValue.setStatus('current')
wwpLeosDpTsFrameCosMapRColorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2, 1, 2), DpTsRCosMappingColor())
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapRColorValue.setStatus('current')
wwpLeosDpTsFrameCosMapDot1dValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapDot1dValue.setStatus('current')
wwpLeosDpTsFrameCosMapDot1dDeiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapDot1dDeiValue.setStatus('current')
wwpLeosDpTsFrameCosMapMplsTcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 500, 1, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosDpTsFrameCosMapMplsTcValue.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-DATAPLANE-MIB", wwpLeosDpTsQCAProfileWREDSimpleYellowAdmitLimit=wwpLeosDpTsQCAProfileWREDSimpleYellowAdmitLimit, wwpLeosDpTsQEgressPortQueueGroupQueueId=wwpLeosDpTsQEgressPortQueueGroupQueueId, wwpLeosDpTsFrameCosMapRowStatus=wwpLeosDpTsFrameCosMapRowStatus, wwpLeosDpTsQCAProfileWREDSimpleNonTCPMaxDropProbability=wwpLeosDpTsQCAProfileWREDSimpleNonTCPMaxDropProbability, wwpLeosDpTsQueueMapId=wwpLeosDpTsQueueMapId, wwpLeosDpTsDscpCosMapEntry=wwpLeosDpTsDscpCosMapEntry, wwpLeosDpTsQCAProfileWREDSimpleNonTCPThreshold=wwpLeosDpTsQCAProfileWREDSimpleNonTCPThreshold, wwpLeosDpTsQCAProfileWREDSimpleGreenLowerThreshold=wwpLeosDpTsQCAProfileWREDSimpleGreenLowerThreshold, wwpLeosDpTsDot1dCosMapRCOS=wwpLeosDpTsDot1dCosMapRCOS, wwpLeosDpTsFrameCosMapRCosValue=wwpLeosDpTsFrameCosMapRCosValue, wwpLeosDpTsQCAProfileWREDSimpleId=wwpLeosDpTsQCAProfileWREDSimpleId, wwpLeosDpTsQueueMapQCount=wwpLeosDpTsQueueMapQCount, wwpLeosDpTsQEgressPortQueueGroupQueueCAPId=wwpLeosDpTsQEgressPortQueueGroupQueueCAPId, wwpLeosDpTsQueueMapRCOS6=wwpLeosDpTsQueueMapRCOS6, wwpLeosDpTsQCAProfileWREDSimpleEntry=wwpLeosDpTsQCAProfileWREDSimpleEntry, wwpLeosDpTsFrameCosMapDot1dDeiValue=wwpLeosDpTsFrameCosMapDot1dDeiValue, wwpLeosDpTsMplsTcCosMapTable=wwpLeosDpTsMplsTcCosMapTable, wwpLeosDpTsDot1dCosMapEntry=wwpLeosDpTsDot1dCosMapEntry, wwpLeosDpTsQueueMapTable=wwpLeosDpTsQueueMapTable, wwpLeosDpTsQueueMapRCOS7=wwpLeosDpTsQueueMapRCOS7, wwpLeosDpTsQEgressPortQueueGroupStatsQueueId=wwpLeosDpTsQEgressPortQueueGroupStatsQueueId, wwpLeosDpTsQCAProfileSREDName=wwpLeosDpTsQCAProfileSREDName, wwpLeosDpTsQueueMapName=wwpLeosDpTsQueueMapName, wwpLeosDpTsQRcosToCosQueueMap=wwpLeosDpTsQRcosToCosQueueMap, wwpLeosDpTsQEgressPortQueueGroupQueueCIR=wwpLeosDpTsQEgressPortQueueGroupQueueCIR, wwpLeosDpTsDscpCosMapRColorValue=wwpLeosDpTsDscpCosMapRColorValue, wwpLeosDpTsQCAProfileWREDSimpleTCPYellowMaxDropProbability=wwpLeosDpTsQCAProfileWREDSimpleTCPYellowMaxDropProbability, wwpLeosDpTsQCAProfileWREDSimpleName=wwpLeosDpTsQCAProfileWREDSimpleName, wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedBytes=wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedBytes, wwpLeosDpTsQEgressPortQueueGroupQStatsEntry=wwpLeosDpTsQEgressPortQueueGroupQStatsEntry, wwpLeosDpTsDscpCosMapDscpValue=wwpLeosDpTsDscpCosMapDscpValue, PYSNMP_MODULE_ID=wwpLeosDataplaneMIB, wwpLeosDpTsQCAProfileWREDSimpleTCPGreenThreshold=wwpLeosDpTsQCAProfileWREDSimpleTCPGreenThreshold, wwpLeosDpTsQueueMapRCOS3=wwpLeosDpTsQueueMapRCOS3, wwpLeosDpTsFrameCosMapProfileTable=wwpLeosDpTsFrameCosMapProfileTable, wwpLeosDpTsDot1dDeiCosMapDot1dValue=wwpLeosDpTsDot1dDeiCosMapDot1dValue, wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxBytes=wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxBytes, wwpLeosDpTsDot1dCosMapTable=wwpLeosDpTsDot1dCosMapTable, wwpLeosDpTsQEgressPortQueueGroupQStatsTable=wwpLeosDpTsQEgressPortQueueGroupQStatsTable, wwpLeosDpTsQCAProfileSREDRowStatus=wwpLeosDpTsQCAProfileSREDRowStatus, wwpLeosDpTsMplsTcCosMapRCosValue=wwpLeosDpTsMplsTcCosMapRCosValue, wwpLeosDpTsQEgressPortQueueGroupSchedulerAlgorithm=wwpLeosDpTsQEgressPortQueueGroupSchedulerAlgorithm, wwpLeosDpTsDot1dDeiCosMapDeiValue=wwpLeosDpTsDot1dDeiCosMapDeiValue, wwpLeosDpTsQEgressPortQueueGroupQueueEBS=wwpLeosDpTsQEgressPortQueueGroupQueueEBS, wwpLeosDpTsFrameCosMapDot1dValue=wwpLeosDpTsFrameCosMapDot1dValue, wwpLeosDpTsCosMapProfileTable=wwpLeosDpTsCosMapProfileTable, wwpLeosDpTsQEgressPortQueueGroupQConfigTable=wwpLeosDpTsQEgressPortQueueGroupQConfigTable, wwpLeosDpTsFrameCosMapEntry=wwpLeosDpTsFrameCosMapEntry, wwpLeosDpTsCosMapping=wwpLeosDpTsCosMapping, wwpLeosDpTsQEgressPortQueueGroupShaperBandwidth=wwpLeosDpTsQEgressPortQueueGroupShaperBandwidth, wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxPkts=wwpLeosDpTsQEgressPortQueueGroupQueueStatsTxPkts, wwpLeosDpTsQueueMapEntry=wwpLeosDpTsQueueMapEntry, wwpLeosDpTsQCAProfileWREDSimpleTCPYellowUpperThreshold=wwpLeosDpTsQCAProfileWREDSimpleTCPYellowUpperThreshold, DpTsQSredDropProbability=DpTsQSredDropProbability, wwpLeosDpTsFrameCosMapRColorValue=wwpLeosDpTsFrameCosMapRColorValue, wwpLeosDpTsQueueMapRCOS4=wwpLeosDpTsQueueMapRCOS4, wwpLeosDpTsQueueMapRCOS5=wwpLeosDpTsQueueMapRCOS5, wwpLeosDpTsQCAProfileWREDSimpleYellowUpperThreshold=wwpLeosDpTsQCAProfileWREDSimpleYellowUpperThreshold, wwpLeosDpTsQueueMapRCOS2=wwpLeosDpTsQueueMapRCOS2, wwpLeosDpTsQEgressPortQueueGroupQCount=wwpLeosDpTsQEgressPortQueueGroupQCount, wwpLeosDpTsQEgressPortQueueGroupId=wwpLeosDpTsQEgressPortQueueGroupId, wwpLeosDpTsDot1dDeiCosMapEntry=wwpLeosDpTsDot1dDeiCosMapEntry, DpTsQWredSimpleMaxDropProbability=DpTsQWredSimpleMaxDropProbability, wwpLeosDpTsQCAProfileWREDSimpleYellowLowerThreshold=wwpLeosDpTsQCAProfileWREDSimpleYellowLowerThreshold, wwpLeosDpTsQEgressPortQueueGroupQueueSize=wwpLeosDpTsQEgressPortQueueGroupQueueSize, wwpLeosDpTsQEgressPortQueueGroupEntry=wwpLeosDpTsQEgressPortQueueGroupEntry, wwpLeosDpTsFrameCosMapProfileEntry=wwpLeosDpTsFrameCosMapProfileEntry, wwpLeosDpTsQCAProfileSREDGreenDropProbability=wwpLeosDpTsQCAProfileSREDGreenDropProbability, wwpLeosDpTsQueueMapRowStatus=wwpLeosDpTsQueueMapRowStatus, wwpLeosDpTsMplsTcCosMapRColorValue=wwpLeosDpTsMplsTcCosMapRColorValue, DpTsRCosMappingColor=DpTsRCosMappingColor, wwpLeosDpTsQCAProfileSREDEntry=wwpLeosDpTsQCAProfileSREDEntry, wwpLeosDpTsQueueMapRCOS0=wwpLeosDpTsQueueMapRCOS0, wwpLeosDpTsCosMapProfileId=wwpLeosDpTsCosMapProfileId, wwpLeosDpTsQCAProfileSREDGreenThreshold=wwpLeosDpTsQCAProfileSREDGreenThreshold, wwpLeosDpTsDot1dDeiCosMapTable=wwpLeosDpTsDot1dDeiCosMapTable, wwpLeosDpTsQueuing=wwpLeosDpTsQueuing, wwpLeosDpTsQEgressPortQueueGroupBurstSize=wwpLeosDpTsQEgressPortQueueGroupBurstSize, wwpLeosDpTsQCAProfileWREDSimpleTCPGreenUpperThreshold=wwpLeosDpTsQCAProfileWREDSimpleTCPGreenUpperThreshold, wwpLeosDpMIBObjects=wwpLeosDpMIBObjects, wwpLeosDpTsFrameCosMapMplsTcValue=wwpLeosDpTsFrameCosMapMplsTcValue, wwpLeosDpTsQCAProfileSREDYellowThreshold=wwpLeosDpTsQCAProfileSREDYellowThreshold, wwpLeosDpTsQCAProfileWREDSimpleTCPGreenMaxDropProbability=wwpLeosDpTsQCAProfileWREDSimpleTCPGreenMaxDropProbability, wwpLeosDpTsFrameCosMapTable=wwpLeosDpTsFrameCosMapTable, wwpLeosDpTsDot1dDeiCosMapRColorValue=wwpLeosDpTsDot1dDeiCosMapRColorValue, wwpLeosDpTsQEgressPortQueueGroupQueueCBS=wwpLeosDpTsQEgressPortQueueGroupQueueCBS, wwpLeosDpTs=wwpLeosDpTs, wwpLeosDpTsQEgressPortQueueGroupQueuePriorityId=wwpLeosDpTsQEgressPortQueueGroupQueuePriorityId, wwpLeosDpTsCosMapRowStatus=wwpLeosDpTsCosMapRowStatus, wwpLeosDpTsQCAProfileWREDSimpleGreenUpperThreshold=wwpLeosDpTsQCAProfileWREDSimpleGreenUpperThreshold, wwpLeosDpTsQEgressPortQueueGroupQueueEIR=wwpLeosDpTsQEgressPortQueueGroupQueueEIR, wwpLeosDpTsFrameCosMapProfileName=wwpLeosDpTsFrameCosMapProfileName, wwpLeosDpTsQCAProfileWREDSimpleGreenMaxDropProbability=wwpLeosDpTsQCAProfileWREDSimpleGreenMaxDropProbability, wwpLeosDpTsQEgressPortQueueGroupQueueStatsClear=wwpLeosDpTsQEgressPortQueueGroupQueueStatsClear, wwpLeosDpTsMplsTcCosMapEntry=wwpLeosDpTsMplsTcCosMapEntry, wwpLeosDpTsQCongestionAvoidanceProfile=wwpLeosDpTsQCongestionAvoidanceProfile, wwpLeosDpTsCosMapProfileEntry=wwpLeosDpTsCosMapProfileEntry, wwpLeosDpTsDscpCosMapTable=wwpLeosDpTsDscpCosMapTable, wwpLeosDpTsQEgressPortQueueGroupQueueSchedulerWeight=wwpLeosDpTsQEgressPortQueueGroupQueueSchedulerWeight, wwpLeosDpTsQCAProfileWREDSimpleTCPYellowThreshold=wwpLeosDpTsQCAProfileWREDSimpleTCPYellowThreshold, wwpLeosDpTsQCAProfileWREDSimpleYellowMaxDropProbability=wwpLeosDpTsQCAProfileWREDSimpleYellowMaxDropProbability, wwpLeosDpTsQCAProfileSREDTable=wwpLeosDpTsQCAProfileSREDTable, wwpLeosDpTsMplsTcCosMapMplsTcValue=wwpLeosDpTsMplsTcCosMapMplsTcValue, wwpLeosDataplaneMIB=wwpLeosDataplaneMIB, wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedPkts=wwpLeosDpTsQEgressPortQueueGroupQueueStatsDroppedPkts, wwpLeosDpTsQCAProfileWREDSimpleRowStatus=wwpLeosDpTsQCAProfileWREDSimpleRowStatus, wwpLeosDpTsQCAProfileSREDYellowDropProbability=wwpLeosDpTsQCAProfileSREDYellowDropProbability, wwpLeosDpTsQCAProfileWREDSimpleNonTCPUpperThreshold=wwpLeosDpTsQCAProfileWREDSimpleNonTCPUpperThreshold, wwpLeosDpTsDot1dCosMapDot1dValue=wwpLeosDpTsDot1dCosMapDot1dValue, wwpLeosDpTsQCAProfileSREDId=wwpLeosDpTsQCAProfileSREDId, wwpLeosDpTsDot1dDeiCosMapRCosValue=wwpLeosDpTsDot1dDeiCosMapRCosValue, wwpLeosDpTsQEgressPortQueueGroup=wwpLeosDpTsQEgressPortQueueGroup, wwpLeosDpTsQEgressPortQueueGroupWdrrSchedulerGranularity=wwpLeosDpTsQEgressPortQueueGroupWdrrSchedulerGranularity, wwpLeosDpTsQEgressPortQueueGroupTable=wwpLeosDpTsQEgressPortQueueGroupTable, wwpLeosDpTsFrameCosMapping=wwpLeosDpTsFrameCosMapping, wwpLeosDpTsDscpCosMapRCOS=wwpLeosDpTsDscpCosMapRCOS, wwpLeosDpTsQEgressPortQueueGroupQConfigEntry=wwpLeosDpTsQEgressPortQueueGroupQConfigEntry, wwpLeosDpTsFrameCosMapProfileId=wwpLeosDpTsFrameCosMapProfileId, wwpLeosDpTsQCAProfileWREDSimpleTable=wwpLeosDpTsQCAProfileWREDSimpleTable, wwpLeosDpTsCosMapProfileName=wwpLeosDpTsCosMapProfileName, wwpLeosDpTsQueueMapRCOS1=wwpLeosDpTsQueueMapRCOS1)
