#
# PySNMP MIB module CISCO-IP-RAN-BACKHAUL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IP-RAN-BACKHAUL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, ifDescr, InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
PerfIntervalCount, PerfCurrentCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfIntervalCount", "PerfCurrentCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, ModuleIdentity, Bits, iso, ObjectIdentity, Gauge32, Counter64, IpAddress, NotificationType, Counter32, MibIdentifier, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "Bits", "iso", "ObjectIdentity", "Gauge32", "Counter64", "IpAddress", "NotificationType", "Counter32", "MibIdentifier", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, AutonomousType, TruthValue, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "AutonomousType", "TruthValue", "TimeStamp")
ciscoIpRanBackHaulMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 483))
ciscoIpRanBackHaulMIB.setRevisions(('2010-03-24 00:00', '2007-05-30 00:00', '2006-08-25 00:00', '2005-10-18 00:00', '2005-09-13 00:00',))
if mibBuilder.loadTexts: ciscoIpRanBackHaulMIB.setLastUpdated('201005040000Z')
if mibBuilder.loadTexts: ciscoIpRanBackHaulMIB.setOrganization('Cisco Systems, Inc.')
ciscoIpRanBackHaulMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 0))
ciscoIpRanBackHaulMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1))
ciscoIpRanBackHaulMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 2))
cirbhScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1))
cirbhObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2))
cirbhNotifEnables = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 3))
cirbhShortHaul = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1))
cirbhShortHaulInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1))
cirbhShortHaulAlarmInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2))
cirbhShortHaulStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3))
cirbhBackHaul = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2))
cirbhBackHaulInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1))
cirbhBackHaulStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2))
class CirbhAlarmState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("blue", 1), ("green", 2), ("red", 3), ("yellow", 4), ("unavailable", 5))

class CirbhBackHaulUtilization(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 100)

class CirbhBackHaulUtilizationState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("acceptable", 1), ("warning", 2), ("overloaded", 3))

class CirbhCommpressInterfaceRate(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class CirbhConnectGsmState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("connected", 1), ("disconnected", 2), ("sendConnect", 3), ("recConnect", 4), ("connectedRej", 5), ("ackConnect", 6), ("connectedCheck", 7))

class CirbhConnectUmtsState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("init", 1), ("starting", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stopping", 6), ("connectSent", 7), ("ackReceived", 8), ("ackSent", 9), ("open", 10))

class CirbhHistoryIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class CirbhProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("undefined", 1), ("gsmAbis", 2), ("umtsIub", 3))

class CirbhRawInterfaceRate(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class CirbhRedundancyState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("standby", 2))

class CirbhShortHaulUtilization(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class CirbhTrafficDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("receive", 1), ("transmit", 2))

class CirbhTrafficType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("all", 1), ("gsm", 2), ("umts", 3))

cirbhSnmpTrafficMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("inBand", 2), ("outOfBand", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhSnmpTrafficMode.setStatus('current')
cirbhLocation = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("aggSite", 2), ("cellSite", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhLocation.setStatus('current')
cirbhBackHaulStatsInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhBackHaulStatsInterval.setStatus('deprecated')
cirbhBackHaulStatsEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 100)).clone(100)).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhBackHaulStatsEntries.setStatus('deprecated')
cirbhBackHaulAcceptableThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 100)).clone(60)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhBackHaulAcceptableThreshold.setStatus('deprecated')
cirbhBackHaulWarningThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 100)).clone(70)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhBackHaulWarningThreshold.setStatus('deprecated')
cirbhBackHaulOverloadedThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(40, 100)).clone(80)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhBackHaulOverloadedThreshold.setStatus('deprecated')
cirbhBackHaulUtilInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 3600), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhBackHaulUtilInterval.setStatus('deprecated')
cirbhInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1), )
if mibBuilder.loadTexts: cirbhInfoTable.setStatus('current')
cirbhInfoTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhInfoTableEntry.setStatus('current')
cirbhInfoProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 1), CirbhProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoProtocol.setStatus('current')
cirbhInfoLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoLocalAddrType.setStatus('current')
cirbhInfoLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoLocalAddr.setStatus('current')
cirbhInfoLocalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoLocalPortNumber.setStatus('current')
cirbhInfoRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoRemoteAddrType.setStatus('current')
cirbhInfoRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoRemoteAddr.setStatus('current')
cirbhInfoRemotePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoRemotePortNumber.setStatus('current')
cirbhInfoAdjectSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoAdjectSerialNum.setStatus('current')
cirbhInfoAdjectVendorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 9), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoAdjectVendorType.setStatus('current')
cirbhInfoBackhaulRxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 10), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoBackhaulRxIfIndex.setStatus('current')
cirbhInfoBackhaulTxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoBackhaulTxIfIndex.setStatus('current')
cirbhInfoShBulkLastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 12), CirbhHistoryIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoShBulkLastIndex.setStatus('current')
cirbhInfoOptimizeTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 1, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhInfoOptimizeTraffic.setStatus('current')
cirbhGsmAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: cirbhGsmAlarmTable.setStatus('current')
cirbhGsmAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhGsmAlarmTableEntry.setStatus('current')
cirbhGsmAlarmConnectState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 1, 1, 1), CirbhConnectGsmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmAlarmConnectState.setStatus('current')
cirbhGsmAlarmLocalState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 1, 1, 2), CirbhAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmAlarmLocalState.setStatus('current')
cirbhGsmAlarmRemoteState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 1, 1, 3), CirbhAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmAlarmRemoteState.setStatus('current')
cirbhGsmAlarmRedundancyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 1, 1, 4), CirbhRedundancyState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmAlarmRedundancyState.setStatus('current')
cirbhUmtsConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 2), )
if mibBuilder.loadTexts: cirbhUmtsConnectionTable.setStatus('current')
cirbhUmtsConnectionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhUmtsConnectionTableEntry.setStatus('current')
cirbhUmtsConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 2, 1, 1), CirbhConnectUmtsState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsConnectionState.setStatus('current')
cirbhUmtsConnectionRedundState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 2, 1, 2), CirbhRedundancyState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsConnectionRedundState.setStatus('current')
cirbhUmtsConnectionRootIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsConnectionRootIfIndex.setStatus('current')
cirbhUmtsAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 3), )
if mibBuilder.loadTexts: cirbhUmtsAlarmTable.setStatus('current')
cirbhUmtsAlarmTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhUmtsAlarmTableEntry.setStatus('current')
cirbhUmtsAlarmRxLocalState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 3, 1, 1), CirbhAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsAlarmRxLocalState.setStatus('current')
cirbhUmtsAlarmRxRemoteState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 3, 1, 2), CirbhAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsAlarmRxRemoteState.setStatus('current')
cirbhUmtsAlarmTxLocalState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 3, 1, 3), CirbhAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsAlarmTxLocalState.setStatus('current')
cirbhUmtsAlarmTxRemoteState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 2, 3, 1, 4), CirbhAlarmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsAlarmTxRemoteState.setStatus('current')
cirbhStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1), )
if mibBuilder.loadTexts: cirbhStatsTable.setStatus('current')
cirbhStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhStatsTableEntry.setStatus('current')
cirbhStatsRcvdSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsRcvdSamples.setStatus('current')
cirbhStatsSentSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsSentSamples.setStatus('current')
cirbhStatsRcvdBackHaulPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsRcvdBackHaulPackets.setStatus('current')
cirbhStatsSentBackHaulPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsSentBackHaulPackets.setStatus('current')
cirbhStatsRcvdBackHaulBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsRcvdBackHaulBytes.setStatus('current')
cirbhStatsSentBackHaulBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 1, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsSentBackHaulBytes.setStatus('current')
cirbhErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2), )
if mibBuilder.loadTexts: cirbhErrorsTable.setStatus('deprecated')
cirbhErrorsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhErrorsTableEntry.setStatus('deprecated')
cirbhErrorsBhPeerNotReadyDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhPeerNotReadyDrops.setStatus('deprecated')
cirbhErrorsBhPeerNotActiveDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhPeerNotActiveDrops.setStatus('deprecated')
cirbhErrorsBhInvalidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhInvalidPackets.setStatus('deprecated')
cirbhErrorsBhLostRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhLostRcvdPackets.setStatus('deprecated')
cirbhErrorsBhLostSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhLostSentPackets.setStatus('deprecated')
cirbhErrorsBhMissedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhMissedPackets.setStatus('deprecated')
cirbhErrorsBhMissedLatePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhMissedLatePackets.setStatus('deprecated')
cirbhErrorsBhMissedLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhMissedLostPackets.setStatus('deprecated')
cirbhErrorsBhMissedNoMemPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhMissedNoMemPackets.setStatus('deprecated')
cirbhErrorsBhMissedResetPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsBhMissedResetPackets.setStatus('deprecated')
cirbhErrorsDecompFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 11), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsDecompFailures.setStatus('deprecated')
cirbhErrorsCompFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 12), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsCompFailures.setStatus('deprecated')
cirbhErrorsCompNoPacketFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 13), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsCompNoPacketFailures.setStatus('deprecated')
cirbhErrorsCompNoIntFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 14), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsCompNoIntFailures.setStatus('deprecated')
cirbhErrorsCompIntDownFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 15), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsCompIntDownFailures.setStatus('deprecated')
cirbhErrorsCompEncapFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 16), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsCompEncapFailures.setStatus('deprecated')
cirbhErrorsCompQosDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 2, 1, 17), Counter32()).setUnits('drops').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhErrorsCompQosDrops.setStatus('deprecated')
cirbhShortHaulHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3), )
if mibBuilder.loadTexts: cirbhShortHaulHistoryTable.setStatus('obsolete')
cirbhShortHaulHistoryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulHistory"))
if mibBuilder.loadTexts: cirbhShortHaulHistoryTableEntry.setStatus('obsolete')
cirbhShortHaulHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 1), CirbhHistoryIndex())
if mibBuilder.loadTexts: cirbhShortHaulHistory.setStatus('obsolete')
cirbhShortHaulRcvdRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 2), CirbhRawInterfaceRate()).setUnits('bytes/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulRcvdRate.setStatus('obsolete')
cirbhShortHaulSentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 3), CirbhRawInterfaceRate()).setUnits('bytes/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulSentRate.setStatus('obsolete')
cirbhShortHaulRcvdCompressRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 4), CirbhCommpressInterfaceRate()).setUnits('bytes/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulRcvdCompressRate.setStatus('obsolete')
cirbhShortHaulSentCompressRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 5), CirbhCommpressInterfaceRate()).setUnits('bytes/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulSentCompressRate.setStatus('obsolete')
cirbhShortHaulTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulTimeStamp.setStatus('obsolete')
cirbhShortHaulRcvdUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 7), CirbhShortHaulUtilization()).setUnits('percent of DS load').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulRcvdUtilization.setStatus('obsolete')
cirbhShortHaulSentUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 3, 1, 8), CirbhShortHaulUtilization()).setUnits('percent of DS load').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulSentUtilization.setStatus('obsolete')
cirbhCongestionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4), )
if mibBuilder.loadTexts: cirbhCongestionTable.setStatus('current')
cirbhCongestionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhCongestionTableEntry.setStatus('current')
cirbhCongestionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhCongestionEnabled.setStatus('current')
cirbhCongestionDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhCongestionDrops.setStatus('current')
cirbhCongestionDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1, 3), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhCongestionDroppedBytes.setStatus('current')
cirbhCongestionEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1, 4), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhCongestionEvents.setStatus('current')
cirbhCongestionActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhCongestionActive.setStatus('current')
cirbhCongestionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 4, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhCongestionDuration.setStatus('current')
cirbhGsmErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5), )
if mibBuilder.loadTexts: cirbhGsmErrorsTable.setStatus('current')
cirbhGsmErrorsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhGsmErrorsTableEntry.setStatus('current')
cirbhGsmErrorsPeerNotReadyDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsPeerNotReadyDrops.setStatus('current')
cirbhGsmErrorsPeerNotActiveDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsPeerNotActiveDrops.setStatus('current')
cirbhGsmErrorsInvalidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsInvalidPackets.setStatus('current')
cirbhGsmErrorsLostRcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsLostRcvdPackets.setStatus('current')
cirbhGsmErrorsLostSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsLostSentPackets.setStatus('current')
cirbhGsmErrorsMissedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsMissedPackets.setStatus('current')
cirbhGsmErrorsMissedLatePackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsMissedLatePackets.setStatus('current')
cirbhGsmErrorsMissedLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsMissedLostPackets.setStatus('current')
cirbhGsmErrorsMissedNoMemPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsMissedNoMemPackets.setStatus('current')
cirbhGsmErrorsMissedResetPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsMissedResetPackets.setStatus('current')
cirbhGsmErrorsDecompFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 11), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsDecompFailures.setStatus('current')
cirbhGsmErrorsCompFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 12), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsCompFailures.setStatus('current')
cirbhGsmErrorsCompNoPacketFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 13), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsCompNoPacketFailures.setStatus('current')
cirbhGsmErrorsCompNoIntFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 14), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsCompNoIntFailures.setStatus('current')
cirbhGsmErrorsCompIntDownFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 15), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsCompIntDownFailures.setStatus('current')
cirbhGsmErrorsCompEncapFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 16), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsCompEncapFailures.setStatus('current')
cirbhGsmErrorsCompQosDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 17), Counter32()).setUnits('drops').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsCompQosDrops.setStatus('current')
cirbhGsmErrorsFastSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 18), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsFastSendFailures.setStatus('current')
cirbhGsmErrorsTxPacketFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 19), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsTxPacketFailures.setStatus('current')
cirbhGsmErrorsTxNoBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 20), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsTxNoBuffers.setStatus('current')
cirbhGsmErrorsTxResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 21), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsTxResets.setStatus('current')
cirbhGsmErrorsOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 22), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsOverruns.setStatus('current')
cirbhGsmErrorsInterruptFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 23), Counter32()).setUnits('Failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsInterruptFailures.setStatus('current')
cirbhGsmErrorsLateArrivals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 24), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsLateArrivals.setStatus('current')
cirbhGsmErrorsEarlyArrivals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 5, 1, 25), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhGsmErrorsEarlyArrivals.setStatus('current')
cirbhUmtsErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6), )
if mibBuilder.loadTexts: cirbhUmtsErrorsTable.setStatus('current')
cirbhUmtsErrorsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhUmtsErrorsTableEntry.setStatus('current')
cirbhUmtsErrorsPeerNotReadyDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsPeerNotReadyDrops.setStatus('current')
cirbhUmtsErrorsInvalidPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsInvalidPackets.setStatus('current')
cirbhUmtsErrorsDecompFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 3), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsDecompFailures.setStatus('current')
cirbhUmtsErrorsCompFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 4), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsCompFailures.setStatus('current')
cirbhUmtsErrorsCompNoPacketFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 5), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsCompNoPacketFailures.setStatus('current')
cirbhUmtsErrorsCompNoIntFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 6), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsCompNoIntFailures.setStatus('current')
cirbhUmtsErrorsCompIntDownFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 7), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsCompIntDownFailures.setStatus('current')
cirbhUmtsErrorsCompEncapFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 8), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsCompEncapFailures.setStatus('current')
cirbhUmtsErrorsCompQosDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 9), Counter32()).setUnits('drops').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsCompQosDrops.setStatus('current')
cirbhUmtsErrorsShorthaulPakFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 10), Counter32()).setUnits('occurrences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsShorthaulPakFailures.setStatus('current')
cirbhUmtsErrorsUmtsEncapFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 11), Counter32()).setUnits('occurences').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsUmtsEncapFailures.setStatus('current')
cirbhUmtsErrorsLocalPvcDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsLocalPvcDrops.setStatus('current')
cirbhUmtsErrorsRemotePvcDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsRemotePvcDrops.setStatus('current')
cirbhUmtsErrorsBackhaulDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 6, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhUmtsErrorsBackhaulDrops.setStatus('current')
cirbhShortHaulBulkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 7), )
if mibBuilder.loadTexts: cirbhShortHaulBulkTable.setStatus('current')
cirbhShortHaulBulkTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkHistory"))
if mibBuilder.loadTexts: cirbhShortHaulBulkTableEntry.setStatus('current')
cirbhShortHaulBulkHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 7, 1, 1), CirbhHistoryIndex())
if mibBuilder.loadTexts: cirbhShortHaulBulkHistory.setStatus('current')
cirbhShortHaulBulkTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 7, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulBulkTimeStamp.setStatus('current')
cirbhShortHaulBulkBaseUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 2147483647))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulBulkBaseUnit.setStatus('current')
cirbhShortHaulBulkUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 1, 3, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setUnits('Bytes/Second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhShortHaulBulkUtil.setStatus('current')
cirbhBackHaulTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1), )
if mibBuilder.loadTexts: cirbhBackHaulTable.setStatus('obsolete')
cirbhBackHaulEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cirbhBackHaulEntry.setStatus('obsolete')
cirbhBackHaulAdjectSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulAdjectSerialNum.setStatus('obsolete')
cirbhBackHaulAdjectVendorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulAdjectVendorType.setStatus('obsolete')
cirbhBackHaulRcvdUtilState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1, 3), CirbhBackHaulUtilizationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulRcvdUtilState.setStatus('obsolete')
cirbhBackHaulSentUtilState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1, 4), CirbhBackHaulUtilizationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulSentUtilState.setStatus('obsolete')
cirbhBackHaulRcvdUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1, 5), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulRcvdUtil.setStatus('obsolete')
cirbhBackHaulSentUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 1, 1, 6), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulSentUtil.setStatus('obsolete')
cirbhBackHaulShortHaulTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 2), )
if mibBuilder.loadTexts: cirbhBackHaulShortHaulTable.setStatus('obsolete')
cirbhBackHaulShortHaulEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 2, 1), ).setIndexNames((0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulShortHaulBhIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulShortHaulShIndex"))
if mibBuilder.loadTexts: cirbhBackHaulShortHaulEntry.setStatus('obsolete')
cirbhBackHaulShortHaulBhIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cirbhBackHaulShortHaulBhIndex.setStatus('obsolete')
cirbhBackHaulShortHaulShIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 2, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: cirbhBackHaulShortHaulShIndex.setStatus('obsolete')
cirbhBackHaulShortHaulTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 1, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulShortHaulTimestamp.setStatus('obsolete')
cirbhBackHaulHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1), )
if mibBuilder.loadTexts: cirbhBackHaulHistoryTable.setStatus('obsolete')
cirbhBackHaulHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistoryIndex"))
if mibBuilder.loadTexts: cirbhBackHaulHistoryEntry.setStatus('obsolete')
cirbhBackHaulHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 1), CirbhHistoryIndex())
if mibBuilder.loadTexts: cirbhBackHaulHistoryIndex.setStatus('obsolete')
cirbhBackHaulHistoryRcvdUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 2), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistoryRcvdUtil.setStatus('obsolete')
cirbhBackHaulHistorySentUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 3), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistorySentUtil.setStatus('obsolete')
cirbhBackHaulHistoryRcvdAbisUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 4), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistoryRcvdAbisUtil.setStatus('obsolete')
cirbhBackHaulHistorySentAbisUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 5), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistorySentAbisUtil.setStatus('obsolete')
cirbhBackHaulHistoryRcvdUmtsUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 6), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistoryRcvdUmtsUtil.setStatus('obsolete')
cirbhBackHaulHistorySentUmtsUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 7), CirbhBackHaulUtilization()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistorySentUmtsUtil.setStatus('obsolete')
cirbhBackHaulHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 1, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhBackHaulHistoryTimeStamp.setStatus('obsolete')
cirbhBackHaulStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2), )
if mibBuilder.loadTexts: cirbhBackHaulStatsTable.setStatus('obsolete')
cirbhBackHaulStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsDirection"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsTrafficType"))
if mibBuilder.loadTexts: cirbhBackHaulStatsEntry.setStatus('obsolete')
cirbhStatsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 1), CirbhTrafficDirection())
if mibBuilder.loadTexts: cirbhStatsDirection.setStatus('obsolete')
cirbhStatsTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 2), CirbhTrafficType())
if mibBuilder.loadTexts: cirbhStatsTrafficType.setStatus('obsolete')
cirbhStats000to009Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 3), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats000to009Seconds.setStatus('obsolete')
cirbhStats010to019Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 4), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats010to019Seconds.setStatus('obsolete')
cirbhStats020to029Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 5), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats020to029Seconds.setStatus('obsolete')
cirbhStats030to039Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 6), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats030to039Seconds.setStatus('obsolete')
cirbhStats040to049Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 7), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats040to049Seconds.setStatus('obsolete')
cirbhStats050to059Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 8), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats050to059Seconds.setStatus('obsolete')
cirbhStats060to069Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 9), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats060to069Seconds.setStatus('obsolete')
cirbhStats070to079Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 10), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats070to079Seconds.setStatus('obsolete')
cirbhStats080to089Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 11), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats080to089Seconds.setStatus('obsolete')
cirbhStats090to100Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 12), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStats090to100Seconds.setStatus('obsolete')
cirbhStatsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsTimeStamp.setStatus('obsolete')
cirbhStatsMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 14), CirbhBackHaulUtilization()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsMaxUtilization.setStatus('obsolete')
cirbhStatsMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 2, 2, 2, 1, 15), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsMaxTimeStamp.setStatus('obsolete')
cirbhBackHaulStatsHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12), )
if mibBuilder.loadTexts: cirbhBackHaulStatsHistoryTable.setStatus('obsolete')
cirbhBackHaulStatsHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryIndex"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryDirection"), (0, "CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryTrafficType"))
if mibBuilder.loadTexts: cirbhBackHaulStatsHistoryEntry.setStatus('obsolete')
cirbhStatsHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 1), CirbhHistoryIndex())
if mibBuilder.loadTexts: cirbhStatsHistoryIndex.setStatus('obsolete')
cirbhStatsHistoryDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 2), CirbhTrafficDirection())
if mibBuilder.loadTexts: cirbhStatsHistoryDirection.setStatus('obsolete')
cirbhStatsHistoryTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 3), CirbhTrafficType())
if mibBuilder.loadTexts: cirbhStatsHistoryTrafficType.setStatus('obsolete')
cirbhStatsHistory000to009Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 4), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory000to009Seconds.setStatus('obsolete')
cirbhStatsHistory010to019Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 5), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory010to019Seconds.setStatus('obsolete')
cirbhStatsHistory020to029Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 6), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory020to029Seconds.setStatus('obsolete')
cirbhStatsHistory030to039Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 7), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory030to039Seconds.setStatus('obsolete')
cirbhStatsHistory040to049Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 8), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory040to049Seconds.setStatus('obsolete')
cirbhStatsHistory050to059Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 9), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory050to059Seconds.setStatus('obsolete')
cirbhStatsHistory060to069Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 10), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory060to069Seconds.setStatus('obsolete')
cirbhStatsHistory070to079Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 11), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory070to079Seconds.setStatus('obsolete')
cirbhStatsHistory080to089Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 12), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory080to089Seconds.setStatus('obsolete')
cirbhStatsHistory090to100Seconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 13), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistory090to100Seconds.setStatus('obsolete')
cirbhStatsHistoryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistoryTimeStamp.setStatus('obsolete')
cirbhStatsHistoryMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 15), CirbhBackHaulUtilization()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistoryMaxUtilization.setStatus('obsolete')
cirbhStatsHistoryMaxTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistoryMaxTimeStamp.setStatus('obsolete')
cirbhStatsHistoryAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 2, 12, 1, 17), CirbhBackHaulUtilization()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cirbhStatsHistoryAverage.setStatus('obsolete')
cirbhGsmAlarmNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhGsmAlarmNotifEnabled.setStatus('current')
cirbhUmtsAlarmNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 3, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhUmtsAlarmNotifEnabled.setStatus('current')
cirbhUtilNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 483, 1, 3, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cirbhUtilNotifEnabled.setStatus('deprecated')
ciscoIpRanBackHaulGsmAlarm = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 483, 0, 1)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmConnectState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmLocalState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmRemoteState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmRedundancyState"))
if mibBuilder.loadTexts: ciscoIpRanBackHaulGsmAlarm.setStatus('current')
ciscoIpRanBackHaulUmtsAlarm = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 483, 0, 2)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsConnectionState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmRxLocalState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmRxRemoteState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmTxLocalState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmTxRemoteState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsConnectionRedundState"))
if mibBuilder.loadTexts: ciscoIpRanBackHaulUmtsAlarm.setStatus('current')
ciscoIpRanBackHaulRcvdUtil = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 483, 0, 3)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulRcvdUtilState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulRcvdUtil"))
if mibBuilder.loadTexts: ciscoIpRanBackHaulRcvdUtil.setStatus('obsolete')
ciscoIpRanBackHaulSentUtil = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 483, 0, 4)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulSentUtilState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulSentUtil"))
if mibBuilder.loadTexts: ciscoIpRanBackHaulSentUtil.setStatus('obsolete')
ciscoIpRanBackHaulMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 1))
ciscoIpRanBackHaulMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2))
ciscoIpRanBackHaulMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 1, 1)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulScalarsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulStatsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulErrorsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulHistoryGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulMIBCompliance = ciscoIpRanBackHaulMIBCompliance.setStatus('obsolete')
ciscoIpRanBackHaulMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 1, 2)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulScalarsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulStatsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulErrorsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulHistoryGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulNotifGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulShortHaulGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulMIBComplianceRev1 = ciscoIpRanBackHaulMIBComplianceRev1.setStatus('obsolete')
ciscoIpRanBackHaulMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 1, 3)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulScalarsGroupRev2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroupSup2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroupSup3"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulStatsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulHistoryGroupRev2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulNotifGroupRev2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroupSup1"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulCongestionGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulGsmErrorsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulUmtsErrorsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulMIBComplianceRev2 = ciscoIpRanBackHaulMIBComplianceRev2.setStatus('obsolete')
ciscoIpRanBackHaulMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 1, 4)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulScalarsGroupRev2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroupSup2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulConfigGroupSup3"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulStatsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulHistoryGroupRev3"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulNotifGroupRev2"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulAlarmGroupSup1"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulCongestionGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulGsmErrorsGroup"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulUmtsErrorsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulMIBComplianceRev3 = ciscoIpRanBackHaulMIBComplianceRev3.setStatus('current')
ciscoIpRanBackHaulScalarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 1)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhSnmpTrafficMode"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhLocation"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulStatsInterval"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulStatsEntries"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulAcceptableThreshold"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulWarningThreshold"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulOverloadedThreshold"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulUtilInterval"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmNotifEnabled"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmNotifEnabled"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUtilNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulScalarsGroup = ciscoIpRanBackHaulScalarsGroup.setStatus('deprecated')
ciscoIpRanBackHaulConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 2)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoProtocol"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoLocalAddrType"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoLocalAddr"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoLocalPortNumber"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoRemoteAddrType"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoRemoteAddr"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoRemotePortNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulConfigGroup = ciscoIpRanBackHaulConfigGroup.setStatus('current')
ciscoIpRanBackHaulStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 3)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsRcvdSamples"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsSentSamples"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsRcvdBackHaulPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsSentBackHaulPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsRcvdBackHaulBytes"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsSentBackHaulBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulStatsGroup = ciscoIpRanBackHaulStatsGroup.setStatus('current')
ciscoIpRanBackHaulAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 4)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmConnectState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmLocalState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmRemoteState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmRedundancyState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsConnectionState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsConnectionRedundState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmRxLocalState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmRxRemoteState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmTxLocalState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmTxRemoteState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulAlarmGroup = ciscoIpRanBackHaulAlarmGroup.setStatus('current')
ciscoIpRanBackHaulErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 5)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhPeerNotReadyDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhPeerNotActiveDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhInvalidPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhLostRcvdPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhLostSentPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhMissedPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhMissedLatePackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhMissedLostPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhMissedNoMemPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsBhMissedResetPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsDecompFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsCompFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsCompNoPacketFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsCompNoIntFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsCompIntDownFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsCompEncapFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhErrorsCompQosDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulErrorsGroup = ciscoIpRanBackHaulErrorsGroup.setStatus('deprecated')
ciscoIpRanBackHaulHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 6)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulRcvdRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulSentRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulRcvdCompressRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulSentCompressRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulRcvdUtilization"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulSentUtilization"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulRcvdUtilState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulSentUtilState"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulRcvdUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulSentUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulAdjectSerialNum"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulAdjectVendorType"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistoryRcvdUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistorySentUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistoryRcvdAbisUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistorySentAbisUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistoryRcvdUmtsUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistorySentUmtsUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulHistoryTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats000to009Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats010to019Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats020to029Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats030to039Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats040to049Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats050to059Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats060to069Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats070to079Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats080to089Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStats090to100Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsMaxUtilization"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsMaxTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory000to009Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory010to019Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory020to029Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory030to039Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory040to049Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory050to059Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory060to069Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory070to079Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory080to089Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistory090to100Seconds"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryMaxUtilization"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryMaxTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhStatsHistoryAverage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulHistoryGroup = ciscoIpRanBackHaulHistoryGroup.setStatus('obsolete')
ciscoIpRanBackHaulNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 7)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulGsmAlarm"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulUmtsAlarm"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulRcvdUtil"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulSentUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulNotifGroup = ciscoIpRanBackHaulNotifGroup.setStatus('obsolete')
ciscoIpRanBackHaulShortHaulGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 8)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhBackHaulShortHaulTimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulShortHaulGroup = ciscoIpRanBackHaulShortHaulGroup.setStatus('obsolete')
ciscoIpRanBackHaulAlarmGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 9)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsConnectionRootIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulAlarmGroupSup1 = ciscoIpRanBackHaulAlarmGroupSup1.setStatus('current')
ciscoIpRanBackHaulScalarsGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 10)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhSnmpTrafficMode"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhLocation"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmAlarmNotifEnabled"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsAlarmNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulScalarsGroupRev2 = ciscoIpRanBackHaulScalarsGroupRev2.setStatus('current')
ciscoIpRanBackHaulConfigGroupSup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 11)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoAdjectSerialNum"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoAdjectVendorType"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoBackhaulRxIfIndex"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoBackhaulTxIfIndex"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoShBulkLastIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulConfigGroupSup2 = ciscoIpRanBackHaulConfigGroupSup2.setStatus('current')
ciscoIpRanBackHaulHistoryGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 12)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulRcvdRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulSentRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulRcvdCompressRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulSentCompressRate"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulRcvdUtilization"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulSentUtilization"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkBaseUnit"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulHistoryGroupRev2 = ciscoIpRanBackHaulHistoryGroupRev2.setStatus('obsolete')
ciscoIpRanBackHaulNotifGroupRev2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 13)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulGsmAlarm"), ("CISCO-IP-RAN-BACKHAUL-MIB", "ciscoIpRanBackHaulUmtsAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulNotifGroupRev2 = ciscoIpRanBackHaulNotifGroupRev2.setStatus('current')
ciscoIpRanBackHaulCongestionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 14)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhCongestionEnabled"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhCongestionDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhCongestionDroppedBytes"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhCongestionEvents"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhCongestionActive"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhCongestionDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulCongestionGroup = ciscoIpRanBackHaulCongestionGroup.setStatus('current')
ciscoIpRanBackHaulGsmErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 15)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsPeerNotReadyDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsPeerNotActiveDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsInvalidPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsLostRcvdPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsLostSentPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsMissedPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsMissedLatePackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsMissedLostPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsMissedNoMemPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsMissedResetPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsDecompFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsCompFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsCompNoPacketFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsCompNoIntFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsCompIntDownFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsCompEncapFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsCompQosDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsFastSendFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsTxPacketFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsTxNoBuffers"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsTxResets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsOverruns"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsInterruptFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsLateArrivals"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhGsmErrorsEarlyArrivals"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulGsmErrorsGroup = ciscoIpRanBackHaulGsmErrorsGroup.setStatus('current')
ciscoIpRanBackHaulUmtsErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 16)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsPeerNotReadyDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsInvalidPackets"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsDecompFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsCompFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsCompNoPacketFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsCompNoIntFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsCompIntDownFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsCompEncapFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsCompQosDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsShorthaulPakFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsUmtsEncapFailures"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsLocalPvcDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsRemotePvcDrops"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhUmtsErrorsBackhaulDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulUmtsErrorsGroup = ciscoIpRanBackHaulUmtsErrorsGroup.setStatus('current')
ciscoIpRanBackHaulConfigGroupSup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 17)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhInfoOptimizeTraffic"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulConfigGroupSup3 = ciscoIpRanBackHaulConfigGroupSup3.setStatus('current')
ciscoIpRanBackHaulHistoryGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 483, 2, 2, 18)).setObjects(("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkTimeStamp"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkBaseUnit"), ("CISCO-IP-RAN-BACKHAUL-MIB", "cirbhShortHaulBulkUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpRanBackHaulHistoryGroupRev3 = ciscoIpRanBackHaulHistoryGroupRev3.setStatus('current')
mibBuilder.exportSymbols("CISCO-IP-RAN-BACKHAUL-MIB", cirbhStatsHistoryIndex=cirbhStatsHistoryIndex, cirbhBackHaulAdjectVendorType=cirbhBackHaulAdjectVendorType, cirbhStats010to019Seconds=cirbhStats010to019Seconds, cirbhInfoOptimizeTraffic=cirbhInfoOptimizeTraffic, cirbhGsmAlarmLocalState=cirbhGsmAlarmLocalState, cirbhStatsTable=cirbhStatsTable, cirbhBackHaulShortHaulEntry=cirbhBackHaulShortHaulEntry, ciscoIpRanBackHaulAlarmGroup=ciscoIpRanBackHaulAlarmGroup, cirbhGsmErrorsFastSendFailures=cirbhGsmErrorsFastSendFailures, cirbhStatsTrafficType=cirbhStatsTrafficType, ciscoIpRanBackHaulMIB=ciscoIpRanBackHaulMIB, cirbhStatsSentSamples=cirbhStatsSentSamples, CirbhBackHaulUtilization=CirbhBackHaulUtilization, cirbhCongestionDrops=cirbhCongestionDrops, cirbhGsmErrorsEarlyArrivals=cirbhGsmErrorsEarlyArrivals, cirbhGsmErrorsCompNoIntFailures=cirbhGsmErrorsCompNoIntFailures, cirbhStats000to009Seconds=cirbhStats000to009Seconds, ciscoIpRanBackHaulMIBGroups=ciscoIpRanBackHaulMIBGroups, CirbhBackHaulUtilizationState=CirbhBackHaulUtilizationState, CirbhTrafficDirection=CirbhTrafficDirection, cirbhErrorsBhPeerNotReadyDrops=cirbhErrorsBhPeerNotReadyDrops, cirbhStatsHistory080to089Seconds=cirbhStatsHistory080to089Seconds, ciscoIpRanBackHaulMIBComplianceRev2=ciscoIpRanBackHaulMIBComplianceRev2, cirbhErrorsCompIntDownFailures=cirbhErrorsCompIntDownFailures, cirbhStatsMaxUtilization=cirbhStatsMaxUtilization, cirbhStatsHistory070to079Seconds=cirbhStatsHistory070to079Seconds, cirbhGsmAlarmRedundancyState=cirbhGsmAlarmRedundancyState, cirbhUmtsErrorsDecompFailures=cirbhUmtsErrorsDecompFailures, CirbhRawInterfaceRate=CirbhRawInterfaceRate, cirbhSnmpTrafficMode=cirbhSnmpTrafficMode, cirbhInfoRemoteAddrType=cirbhInfoRemoteAddrType, CirbhProtocol=CirbhProtocol, cirbhGsmErrorsTable=cirbhGsmErrorsTable, CirbhRedundancyState=CirbhRedundancyState, cirbhGsmErrorsCompIntDownFailures=cirbhGsmErrorsCompIntDownFailures, cirbhErrorsBhLostRcvdPackets=cirbhErrorsBhLostRcvdPackets, cirbhErrorsBhLostSentPackets=cirbhErrorsBhLostSentPackets, ciscoIpRanBackHaulGsmAlarm=ciscoIpRanBackHaulGsmAlarm, cirbhBackHaulHistoryIndex=cirbhBackHaulHistoryIndex, cirbhInfoBackhaulRxIfIndex=cirbhInfoBackhaulRxIfIndex, cirbhStatsRcvdBackHaulPackets=cirbhStatsRcvdBackHaulPackets, cirbhStatsSentBackHaulBytes=cirbhStatsSentBackHaulBytes, cirbhGsmAlarmNotifEnabled=cirbhGsmAlarmNotifEnabled, cirbhUmtsErrorsShorthaulPakFailures=cirbhUmtsErrorsShorthaulPakFailures, cirbhShortHaulRcvdCompressRate=cirbhShortHaulRcvdCompressRate, cirbhShortHaulSentCompressRate=cirbhShortHaulSentCompressRate, cirbhUmtsErrorsInvalidPackets=cirbhUmtsErrorsInvalidPackets, ciscoIpRanBackHaulMIBNotifs=ciscoIpRanBackHaulMIBNotifs, ciscoIpRanBackHaulGsmErrorsGroup=ciscoIpRanBackHaulGsmErrorsGroup, cirbhNotifEnables=cirbhNotifEnables, cirbhShortHaulBulkTimeStamp=cirbhShortHaulBulkTimeStamp, cirbhBackHaulRcvdUtil=cirbhBackHaulRcvdUtil, cirbhStatsHistory060to069Seconds=cirbhStatsHistory060to069Seconds, cirbhShortHaulRcvdRate=cirbhShortHaulRcvdRate, cirbhStatsTimeStamp=cirbhStatsTimeStamp, cirbhShortHaul=cirbhShortHaul, cirbhShortHaulBulkHistory=cirbhShortHaulBulkHistory, ciscoIpRanBackHaulMIBCompliances=ciscoIpRanBackHaulMIBCompliances, ciscoIpRanBackHaulCongestionGroup=ciscoIpRanBackHaulCongestionGroup, cirbhInfoShBulkLastIndex=cirbhInfoShBulkLastIndex, cirbhErrorsTableEntry=cirbhErrorsTableEntry, ciscoIpRanBackHaulConfigGroupSup2=ciscoIpRanBackHaulConfigGroupSup2, cirbhStatsHistory000to009Seconds=cirbhStatsHistory000to009Seconds, cirbhUmtsConnectionTable=cirbhUmtsConnectionTable, cirbhGsmErrorsLostRcvdPackets=cirbhGsmErrorsLostRcvdPackets, cirbhStatsHistory020to029Seconds=cirbhStatsHistory020to029Seconds, cirbhBackHaulStatsHistoryEntry=cirbhBackHaulStatsHistoryEntry, cirbhStatsHistoryMaxUtilization=cirbhStatsHistoryMaxUtilization, ciscoIpRanBackHaulScalarsGroup=ciscoIpRanBackHaulScalarsGroup, cirbhUtilNotifEnabled=cirbhUtilNotifEnabled, cirbhErrorsBhPeerNotActiveDrops=cirbhErrorsBhPeerNotActiveDrops, cirbhBackHaulStatsTable=cirbhBackHaulStatsTable, cirbhBackHaulShortHaulTable=cirbhBackHaulShortHaulTable, cirbhStats050to059Seconds=cirbhStats050to059Seconds, cirbhShortHaulRcvdUtilization=cirbhShortHaulRcvdUtilization, cirbhUmtsErrorsBackhaulDrops=cirbhUmtsErrorsBackhaulDrops, ciscoIpRanBackHaulHistoryGroupRev3=ciscoIpRanBackHaulHistoryGroupRev3, cirbhGsmErrorsMissedNoMemPackets=cirbhGsmErrorsMissedNoMemPackets, CirbhHistoryIndex=CirbhHistoryIndex, cirbhStatsHistory050to059Seconds=cirbhStatsHistory050to059Seconds, cirbhBackHaulShortHaulShIndex=cirbhBackHaulShortHaulShIndex, cirbhBackHaulHistoryRcvdAbisUtil=cirbhBackHaulHistoryRcvdAbisUtil, cirbhInfoRemotePortNumber=cirbhInfoRemotePortNumber, CirbhConnectUmtsState=CirbhConnectUmtsState, cirbhInfoTableEntry=cirbhInfoTableEntry, cirbhStatsHistory090to100Seconds=cirbhStatsHistory090to100Seconds, cirbhInfoLocalAddrType=cirbhInfoLocalAddrType, cirbhShortHaulBulkUtil=cirbhShortHaulBulkUtil, cirbhGsmErrorsMissedResetPackets=cirbhGsmErrorsMissedResetPackets, cirbhCongestionDroppedBytes=cirbhCongestionDroppedBytes, CirbhCommpressInterfaceRate=CirbhCommpressInterfaceRate, ciscoIpRanBackHaulHistoryGroup=ciscoIpRanBackHaulHistoryGroup, cirbhScalars=cirbhScalars, cirbhBackHaulHistoryTimeStamp=cirbhBackHaulHistoryTimeStamp, cirbhGsmErrorsMissedPackets=cirbhGsmErrorsMissedPackets, cirbhUmtsErrorsCompNoPacketFailures=cirbhUmtsErrorsCompNoPacketFailures, ciscoIpRanBackHaulConfigGroup=ciscoIpRanBackHaulConfigGroup, cirbhStatsHistory030to039Seconds=cirbhStatsHistory030to039Seconds, cirbhInfoAdjectVendorType=cirbhInfoAdjectVendorType, ciscoIpRanBackHaulScalarsGroupRev2=ciscoIpRanBackHaulScalarsGroupRev2, cirbhErrorsCompNoIntFailures=cirbhErrorsCompNoIntFailures, cirbhStats020to029Seconds=cirbhStats020to029Seconds, ciscoIpRanBackHaulUmtsAlarm=ciscoIpRanBackHaulUmtsAlarm, cirbhStatsRcvdSamples=cirbhStatsRcvdSamples, cirbhInfoAdjectSerialNum=cirbhInfoAdjectSerialNum, cirbhUmtsConnectionState=cirbhUmtsConnectionState, cirbhGsmErrorsTxNoBuffers=cirbhGsmErrorsTxNoBuffers, cirbhUmtsAlarmNotifEnabled=cirbhUmtsAlarmNotifEnabled, cirbhShortHaulBulkTableEntry=cirbhShortHaulBulkTableEntry, cirbhStatsSentBackHaulPackets=cirbhStatsSentBackHaulPackets, cirbhUmtsConnectionRedundState=cirbhUmtsConnectionRedundState, cirbhBackHaulRcvdUtilState=cirbhBackHaulRcvdUtilState, ciscoIpRanBackHaulRcvdUtil=ciscoIpRanBackHaulRcvdUtil, cirbhStatsHistoryMaxTimeStamp=cirbhStatsHistoryMaxTimeStamp, cirbhInfoLocalAddr=cirbhInfoLocalAddr, cirbhCongestionTable=cirbhCongestionTable, cirbhShortHaulHistory=cirbhShortHaulHistory, cirbhUmtsErrorsTableEntry=cirbhUmtsErrorsTableEntry, cirbhGsmErrorsPeerNotActiveDrops=cirbhGsmErrorsPeerNotActiveDrops, cirbhBackHaulSentUtilState=cirbhBackHaulSentUtilState, ciscoIpRanBackHaulShortHaulGroup=ciscoIpRanBackHaulShortHaulGroup, cirbhInfoBackhaulTxIfIndex=cirbhInfoBackhaulTxIfIndex, cirbhStatsRcvdBackHaulBytes=cirbhStatsRcvdBackHaulBytes, cirbhShortHaulSentUtilization=cirbhShortHaulSentUtilization, cirbhInfoTable=cirbhInfoTable, cirbhErrorsTable=cirbhErrorsTable, cirbhStatsTableEntry=cirbhStatsTableEntry, cirbhBackHaulEntry=cirbhBackHaulEntry, cirbhUmtsErrorsCompQosDrops=cirbhUmtsErrorsCompQosDrops, cirbhGsmErrorsCompFailures=cirbhGsmErrorsCompFailures, cirbhStatsHistoryTrafficType=cirbhStatsHistoryTrafficType, ciscoIpRanBackHaulSentUtil=ciscoIpRanBackHaulSentUtil, cirbhUmtsAlarmRxLocalState=cirbhUmtsAlarmRxLocalState, cirbhErrorsCompEncapFailures=cirbhErrorsCompEncapFailures, cirbhErrorsBhMissedLostPackets=cirbhErrorsBhMissedLostPackets, cirbhGsmErrorsCompNoPacketFailures=cirbhGsmErrorsCompNoPacketFailures, cirbhShortHaulStats=cirbhShortHaulStats, cirbhShortHaulHistoryTableEntry=cirbhShortHaulHistoryTableEntry, cirbhGsmAlarmConnectState=cirbhGsmAlarmConnectState, cirbhErrorsCompNoPacketFailures=cirbhErrorsCompNoPacketFailures, cirbhObjects=cirbhObjects, cirbhGsmErrorsInterruptFailures=cirbhGsmErrorsInterruptFailures, cirbhStats080to089Seconds=cirbhStats080to089Seconds, cirbhCongestionActive=cirbhCongestionActive, ciscoIpRanBackHaulMIBCompliance=ciscoIpRanBackHaulMIBCompliance, cirbhShortHaulBulkBaseUnit=cirbhShortHaulBulkBaseUnit, cirbhGsmErrorsCompQosDrops=cirbhGsmErrorsCompQosDrops, cirbhBackHaulHistoryRcvdUtil=cirbhBackHaulHistoryRcvdUtil, cirbhInfoRemoteAddr=cirbhInfoRemoteAddr, cirbhShortHaulInfo=cirbhShortHaulInfo, ciscoIpRanBackHaulNotifGroupRev2=ciscoIpRanBackHaulNotifGroupRev2, cirbhShortHaulHistoryTable=cirbhShortHaulHistoryTable, ciscoIpRanBackHaulUmtsErrorsGroup=ciscoIpRanBackHaulUmtsErrorsGroup, cirbhStats030to039Seconds=cirbhStats030to039Seconds, cirbhErrorsBhMissedLatePackets=cirbhErrorsBhMissedLatePackets, ciscoIpRanBackHaulAlarmGroupSup1=ciscoIpRanBackHaulAlarmGroupSup1, cirbhInfoLocalPortNumber=cirbhInfoLocalPortNumber, cirbhStatsHistoryDirection=cirbhStatsHistoryDirection, cirbhUmtsConnectionRootIfIndex=cirbhUmtsConnectionRootIfIndex, cirbhGsmErrorsOverruns=cirbhGsmErrorsOverruns, cirbhBackHaulStatsHistoryTable=cirbhBackHaulStatsHistoryTable, cirbhBackHaulStatsEntries=cirbhBackHaulStatsEntries, cirbhErrorsDecompFailures=cirbhErrorsDecompFailures, cirbhBackHaulShortHaulTimestamp=cirbhBackHaulShortHaulTimestamp, cirbhErrorsBhMissedPackets=cirbhErrorsBhMissedPackets, cirbhStatsHistory010to019Seconds=cirbhStatsHistory010to019Seconds, cirbhErrorsBhInvalidPackets=cirbhErrorsBhInvalidPackets, cirbhBackHaulInfo=cirbhBackHaulInfo, cirbhStatsHistory040to049Seconds=cirbhStatsHistory040to049Seconds, ciscoIpRanBackHaulMIBComplianceRev3=ciscoIpRanBackHaulMIBComplianceRev3, cirbhShortHaulTimeStamp=cirbhShortHaulTimeStamp, CirbhConnectGsmState=CirbhConnectGsmState, cirbhUmtsAlarmRxRemoteState=cirbhUmtsAlarmRxRemoteState, cirbhBackHaulUtilInterval=cirbhBackHaulUtilInterval, cirbhGsmErrorsTableEntry=cirbhGsmErrorsTableEntry, cirbhGsmErrorsLateArrivals=cirbhGsmErrorsLateArrivals, cirbhUmtsErrorsPeerNotReadyDrops=cirbhUmtsErrorsPeerNotReadyDrops, cirbhGsmErrorsTxResets=cirbhGsmErrorsTxResets, cirbhGsmErrorsLostSentPackets=cirbhGsmErrorsLostSentPackets, cirbhUmtsErrorsCompFailures=cirbhUmtsErrorsCompFailures, cirbhGsmErrorsInvalidPackets=cirbhGsmErrorsInvalidPackets, cirbhUmtsErrorsUmtsEncapFailures=cirbhUmtsErrorsUmtsEncapFailures, cirbhShortHaulBulkTable=cirbhShortHaulBulkTable, cirbhBackHaulHistorySentUtil=cirbhBackHaulHistorySentUtil, cirbhBackHaulStats=cirbhBackHaulStats, cirbhGsmErrorsDecompFailures=cirbhGsmErrorsDecompFailures, cirbhBackHaul=cirbhBackHaul, cirbhStatsHistoryTimeStamp=cirbhStatsHistoryTimeStamp, CirbhAlarmState=CirbhAlarmState, cirbhUmtsAlarmTableEntry=cirbhUmtsAlarmTableEntry, cirbhGsmAlarmTableEntry=cirbhGsmAlarmTableEntry, cirbhErrorsCompFailures=cirbhErrorsCompFailures, cirbhBackHaulHistoryTable=cirbhBackHaulHistoryTable, cirbhStats070to079Seconds=cirbhStats070to079Seconds, PYSNMP_MODULE_ID=ciscoIpRanBackHaulMIB, cirbhBackHaulSentUtil=cirbhBackHaulSentUtil, cirbhStats040to049Seconds=cirbhStats040to049Seconds, cirbhShortHaulSentRate=cirbhShortHaulSentRate, cirbhUmtsErrorsRemotePvcDrops=cirbhUmtsErrorsRemotePvcDrops, ciscoIpRanBackHaulConfigGroupSup3=ciscoIpRanBackHaulConfigGroupSup3, cirbhErrorsBhMissedNoMemPackets=cirbhErrorsBhMissedNoMemPackets, cirbhBackHaulWarningThreshold=cirbhBackHaulWarningThreshold, cirbhBackHaulOverloadedThreshold=cirbhBackHaulOverloadedThreshold, cirbhBackHaulHistoryRcvdUmtsUtil=cirbhBackHaulHistoryRcvdUmtsUtil, ciscoIpRanBackHaulMIBObjects=ciscoIpRanBackHaulMIBObjects, cirbhStatsDirection=cirbhStatsDirection, cirbhCongestionTableEntry=cirbhCongestionTableEntry, ciscoIpRanBackHaulMIBComplianceRev1=ciscoIpRanBackHaulMIBComplianceRev1, cirbhBackHaulHistorySentAbisUtil=cirbhBackHaulHistorySentAbisUtil, ciscoIpRanBackHaulNotifGroup=ciscoIpRanBackHaulNotifGroup, cirbhUmtsAlarmTxRemoteState=cirbhUmtsAlarmTxRemoteState, cirbhGsmAlarmTable=cirbhGsmAlarmTable, cirbhUmtsAlarmTable=cirbhUmtsAlarmTable, cirbhGsmErrorsCompEncapFailures=cirbhGsmErrorsCompEncapFailures, cirbhUmtsErrorsLocalPvcDrops=cirbhUmtsErrorsLocalPvcDrops, cirbhErrorsCompQosDrops=cirbhErrorsCompQosDrops, cirbhBackHaulShortHaulBhIndex=cirbhBackHaulShortHaulBhIndex, cirbhUmtsAlarmTxLocalState=cirbhUmtsAlarmTxLocalState, cirbhStatsHistoryAverage=cirbhStatsHistoryAverage, cirbhLocation=cirbhLocation, cirbhGsmErrorsMissedLostPackets=cirbhGsmErrorsMissedLostPackets, cirbhBackHaulHistoryEntry=cirbhBackHaulHistoryEntry, cirbhCongestionEnabled=cirbhCongestionEnabled, CirbhShortHaulUtilization=CirbhShortHaulUtilization, cirbhBackHaulAcceptableThreshold=cirbhBackHaulAcceptableThreshold, cirbhBackHaulTable=cirbhBackHaulTable, cirbhBackHaulAdjectSerialNum=cirbhBackHaulAdjectSerialNum, cirbhBackHaulStatsInterval=cirbhBackHaulStatsInterval, cirbhStats090to100Seconds=cirbhStats090to100Seconds, ciscoIpRanBackHaulHistoryGroupRev2=ciscoIpRanBackHaulHistoryGroupRev2, cirbhStatsMaxTimeStamp=cirbhStatsMaxTimeStamp, ciscoIpRanBackHaulMIBConform=ciscoIpRanBackHaulMIBConform, CirbhTrafficType=CirbhTrafficType, cirbhCongestionEvents=cirbhCongestionEvents, cirbhStats060to069Seconds=cirbhStats060to069Seconds, cirbhGsmAlarmRemoteState=cirbhGsmAlarmRemoteState, cirbhUmtsConnectionTableEntry=cirbhUmtsConnectionTableEntry, ciscoIpRanBackHaulErrorsGroup=ciscoIpRanBackHaulErrorsGroup, cirbhErrorsBhMissedResetPackets=cirbhErrorsBhMissedResetPackets, cirbhUmtsErrorsCompIntDownFailures=cirbhUmtsErrorsCompIntDownFailures, cirbhGsmErrorsMissedLatePackets=cirbhGsmErrorsMissedLatePackets, cirbhBackHaulHistorySentUmtsUtil=cirbhBackHaulHistorySentUmtsUtil, cirbhShortHaulAlarmInfo=cirbhShortHaulAlarmInfo, cirbhGsmErrorsTxPacketFailures=cirbhGsmErrorsTxPacketFailures, cirbhGsmErrorsPeerNotReadyDrops=cirbhGsmErrorsPeerNotReadyDrops, cirbhCongestionDuration=cirbhCongestionDuration, cirbhUmtsErrorsCompNoIntFailures=cirbhUmtsErrorsCompNoIntFailures, cirbhUmtsErrorsCompEncapFailures=cirbhUmtsErrorsCompEncapFailures, cirbhUmtsErrorsTable=cirbhUmtsErrorsTable, cirbhBackHaulStatsEntry=cirbhBackHaulStatsEntry, cirbhInfoProtocol=cirbhInfoProtocol, ciscoIpRanBackHaulStatsGroup=ciscoIpRanBackHaulStatsGroup)
