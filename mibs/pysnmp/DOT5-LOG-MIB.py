#
# PySNMP MIB module DOT5-LOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOT5-LOG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:26:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
dot5, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "dot5")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, TimeTicks, MibIdentifier, ObjectIdentity, ModuleIdentity, Integer32, Gauge32, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "TimeTicks", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Integer32", "Gauge32", "Counter32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dot5Rev1 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1))
tRing = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1))
tRingMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1))
tRingMgmtRing = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1))
tRingMgmtStn = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2))
tRingMgmtHost = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3))
tRingMgmtSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4))
tRingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2))
tRingStatsRing = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1))
tRingStatsRingErrs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1))
tRingStatsRingProtos = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2))
tRingStatsRingSizes = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3))
tRingStatsStn = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2))
tRingStatsReset = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 3))
tRingAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3))
tRingAlarmsRing = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1))
tRingAlarmsRingEnbl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1))
tRingAlarmsRingThrsh = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2))
tRingAlarmsStn = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2))
tRingAlarmsStnEnbl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1))
tRingAlarmsStnThrsh = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2))
tRingPortGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2))
tRingPort = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3))
tRingPortMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1))
tRingPortStn = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2))
tRingPortRing = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3))
tRingIf = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 4))
tRingMgmtRingName = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtRingName.setStatus('mandatory')
tRingMgmtStnPortCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnPortCount.setStatus('mandatory')
tRingMgmtRingPortCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtRingPortCount.setStatus('mandatory')
tRingMgmtStnPortsEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noEnable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtStnPortsEnable.setStatus('mandatory')
tRingMgmtRingPortsEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noEnable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtRingPortsEnable.setStatus('mandatory')
tRingMgmtStnPortsOn = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnPortsOn.setStatus('mandatory')
tRingMgmtRingPortsOn = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtRingPortsOn.setStatus('mandatory')
tRingMgmtStations = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStations.setStatus('mandatory')
tRingMgmtRingState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("closed", 2), ("normalTokenProtocols", 3), ("purge", 4), ("contention", 5), ("beaconing", 6), ("lobeFail", 7), ("ringPollFailure", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtRingState.setStatus('mandatory')
tRingMgmtRingSpeed = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtRingSpeed.setStatus('mandatory')
tRingMgmtActiveMonitor = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtActiveMonitor.setStatus('mandatory')
tRingMgmtRingNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtRingNumber.setStatus('mandatory')
tRingMgmtBeaconRecovery = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBeaconRecovery.setStatus('mandatory')
tRingMgmtBcnRecRingPortRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecRingPortRetryCount.setStatus('mandatory')
tRingMgmtBcnRecRingPortRetryDelay = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecRingPortRetryDelay.setStatus('mandatory')
tRingMgmtBcnRecStnPortRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecStnPortRetryCount.setStatus('mandatory')
tRingMgmtBcnRecStnPortRetryDelay = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecStnPortRetryDelay.setStatus('mandatory')
tRingMgmtBcnRecBrdBypassRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecBrdBypassRetryCount.setStatus('mandatory')
tRingMgmtBcnRecBrdBypassRetryDelay = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecBrdBypassRetryDelay.setStatus('mandatory')
tRingMgmtBcnRecBrdWrapRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecBrdWrapRetryCount.setStatus('mandatory')
tRingMgmtBcnRecBrdWrapRetryDelay = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtBcnRecBrdWrapRetryDelay.setStatus('mandatory')
tRingMgmtRingPollRecovery = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtRingPollRecovery.setStatus('mandatory')
tRingMgmtStnTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: tRingMgmtStnTable.setStatus('mandatory')
tRingMgmtStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingMgmtStnAddress"))
if mibBuilder.loadTexts: tRingMgmtStnEntry.setStatus('mandatory')
tRingMgmtStnAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnAddress.setStatus('mandatory')
tRingMgmtStnName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtStnName.setStatus('mandatory')
tRingMgmtStnBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnBoard.setStatus('mandatory')
tRingMgmtStnPort = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnPort.setStatus('mandatory')
tRingMgmtStnUNA = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnUNA.setStatus('mandatory')
tRingMgmtStnDNA = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtStnDNA.setStatus('mandatory')
tRingMgmtStnPhysLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtStnPhysLocation.setStatus('mandatory')
tRingMgmtStnFuncClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtStnFuncClasses.setStatus('mandatory')
tRingMgmtStnPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtStnPriority.setStatus('mandatory')
tRingMgmtStnRemoveStn = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noRemove", 1), ("remove", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtStnRemoveStn.setStatus('mandatory')
tRingMgmtHostCommands = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nop", 1), ("hwReset", 2), ("swReset", 3), ("open", 4), ("close", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtHostCommands.setStatus('mandatory')
tRingMgmtHostOpenStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noOpen", 1), ("badParam", 2), ("lobeTestFailed", 3), ("signalLoss", 4), ("insertionTimeout", 5), ("ringFailed", 6), ("beaconing", 7), ("duplicateMACAddress", 8), ("requestFailed", 9), ("removeReceived", 10), ("open", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtHostOpenStatus.setStatus('mandatory')
tRingMgmtHostErrorStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtHostErrorStatus.setStatus('mandatory')
tRingMgmtHostAMContention = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noContentionAllowed", 1), ("contentionAllowed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtHostAMContention.setStatus('mandatory')
tRingMgmtHostTErrorReport = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtHostTErrorReport.setStatus('mandatory')
tRingMgmtHostLocalAdminMac = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtHostLocalAdminMac.setStatus('deprecated')
tRingMgmtSecurityAdminState = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enableWithAlarm", 2), ("enableWithRemoveAndAlarm", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtSecurityAdminState.setStatus('mandatory')
tRingMgmtSecurityAddressAdd = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtSecurityAddressAdd.setStatus('mandatory')
tRingMgmtSecurityAddressRemove = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingMgmtSecurityAddressRemove.setStatus('mandatory')
tRingMgmtSecurityStnCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtSecurityStnCount.setStatus('mandatory')
tRingMgmtSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 5), )
if mibBuilder.loadTexts: tRingMgmtSecurityTable.setStatus('mandatory')
tRingMgmtSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 5, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingMgmtSecurityIfIndex"), (0, "DOT5-LOG-MIB", "tRingMgmtSecurityStnAddress"))
if mibBuilder.loadTexts: tRingMgmtSecurityEntry.setStatus('mandatory')
tRingMgmtSecurityIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtSecurityIfIndex.setStatus('mandatory')
tRingMgmtSecurityStnAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 1, 4, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingMgmtSecurityStnAddress.setStatus('mandatory')
tRingStatsRingFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFrames.setStatus('mandatory')
tRingStatsRingKBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingKBytes.setStatus('mandatory')
tRingStatsRingLineErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingLineErrors.setStatus('mandatory')
tRingStatsRingBurstErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingBurstErrors.setStatus('mandatory')
tRingStatsRingACErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingACErrors.setStatus('mandatory')
tRingStatsRingAbortSequences = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingAbortSequences.setStatus('mandatory')
tRingStatsRingInternalErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingInternalErrors.setStatus('mandatory')
tRingStatsRingLostFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingLostFrames.setStatus('mandatory')
tRingStatsRingCongestErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingCongestErrors.setStatus('mandatory')
tRingStatsRingFCErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFCErrors.setStatus('mandatory')
tRingStatsRingTokenErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingTokenErrors.setStatus('mandatory')
tRingStatsRingFreqErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFreqErrors.setStatus('mandatory')
tRingStatsRingTotalErrors = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingTotalErrors.setStatus('mandatory')
tRingStatsRingAMChanges = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingAMChanges.setStatus('mandatory')
tRingStatsRingRingPurges = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingRingPurges.setStatus('mandatory')
tRingStatsRingBeaconEvents = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingBeaconEvents.setStatus('mandatory')
tRingStatsRingLongestBeacon = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingLongestBeacon.setStatus('mandatory')
tRingStatsRingLastBeacon = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingLastBeacon.setStatus('mandatory')
tRingStatsRingLastBeaconType = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("recoveryModeSet", 1), ("signalLossError", 2), ("streamingSignalNotClaimToken", 3), ("streamingSignalClaimToken", 4), ("noBeaconFramesDetected", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingLastBeaconType.setStatus('mandatory')
tRingStatsRingPollFailureNoRecovery = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingPollFailureNoRecovery.setStatus('mandatory')
tRingStatsRingPollFailureNNIFrameCount = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingPollFailureNNIFrameCount.setStatus('mandatory')
tRingStatsRingPollFailureNNIFrameAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingPollFailureNNIFrameAddress.setStatus('mandatory')
tRingStatsRingPollFailureLastNNIFrameTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingPollFailureLastNNIFrameTime.setStatus('mandatory')
tRingStatsRingPollFailureLastDNAAddress = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingPollFailureLastDNAAddress.setStatus('mandatory')
tRingStatsRingProtocolSnaFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolSnaFrames.setStatus('mandatory')
tRingStatsRingProtocolXnsFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolXnsFrames.setStatus('mandatory')
tRingStatsRingProtocolTcpIpFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolTcpIpFrames.setStatus('mandatory')
tRingStatsRingProtocolBanyanFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolBanyanFrames.setStatus('mandatory')
tRingStatsRingProtocolIpxFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolIpxFrames.setStatus('mandatory')
tRingStatsRingProtocolNetbiosFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolNetbiosFrames.setStatus('mandatory')
tRingStatsRingProtocolLanNetMgrFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolLanNetMgrFrames.setStatus('mandatory')
tRingStatsRingProtocolOtherFrames = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingProtocolOtherFrames.setStatus('mandatory')
tRingStatsRingFramesizeUpTo63Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesizeUpTo63Bytes.setStatus('mandatory')
tRingStatsRingFramesize64To127Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize64To127Bytes.setStatus('mandatory')
tRingStatsRingFramesize128To255Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize128To255Bytes.setStatus('mandatory')
tRingStatsRingFramesize256To511Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize256To511Bytes.setStatus('mandatory')
tRingStatsRingFramesize512To1023Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize512To1023Bytes.setStatus('mandatory')
tRingStatsRingFramesize1024To2047Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize1024To2047Bytes.setStatus('mandatory')
tRingStatsRingFramesize2048To4095Bytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize2048To4095Bytes.setStatus('mandatory')
tRingStatsRingFramesize4096AndUpBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsRingFramesize4096AndUpBytes.setStatus('mandatory')
tRingStatsStnTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: tRingStatsStnTable.setStatus('mandatory')
tRingStatsStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingStatsStnAddress"))
if mibBuilder.loadTexts: tRingStatsStnEntry.setStatus('mandatory')
tRingStatsStnAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnAddress.setStatus('mandatory')
tRingStatsStnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnFrames.setStatus('mandatory')
tRingStatsStnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnBytes.setStatus('mandatory')
tRingStatsStnLineErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnLineErrors.setStatus('mandatory')
tRingStatsStnBurstErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnBurstErrors.setStatus('mandatory')
tRingStatsStnACErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnACErrors.setStatus('mandatory')
tRingStatsStnAbortSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnAbortSequences.setStatus('mandatory')
tRingStatsStnInternalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnInternalErrors.setStatus('mandatory')
tRingStatsStnLostFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnLostFrames.setStatus('mandatory')
tRingStatsStnCongestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnCongestErrors.setStatus('mandatory')
tRingStatsStnFCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnFCErrors.setStatus('mandatory')
tRingStatsStnTokenErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnTokenErrors.setStatus('mandatory')
tRingStatsStnFreqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnFreqErrors.setStatus('mandatory')
tRingStatsStnErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsStnErrors.setStatus('mandatory')
tRingStatsResetCounters = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noResetCounters", 1), ("resetCounters", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingStatsResetCounters.setStatus('mandatory')
tRingStatsResetTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 2, 3, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingStatsResetTime.setStatus('mandatory')
tRingAlarmsRingTimebase = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingTimebase.setStatus('mandatory')
tRingAlarmsRingRingPurgesEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingRingPurgesEnable.setStatus('mandatory')
tRingAlarmsRingAMPErrsEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingAMPErrsEnable.setStatus('mandatory')
tRingAlarmsRingTokenErrsEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingTokenErrsEnable.setStatus('mandatory')
tRingAlarmsRingClaimTknErrsEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingClaimTknErrsEnable.setStatus('mandatory')
tRingAlarmsRingLostFramesEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingLostFramesEnable.setStatus('mandatory')
tRingAlarmsRingBeaconStateEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingBeaconStateEnable.setStatus('mandatory')
tRingAlarmsRingFrameCountEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingFrameCountEnable.setStatus('mandatory')
tRingAlarmsRingRingPurgesThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingRingPurgesThreshold.setStatus('mandatory')
tRingAlarmsRingAMPErrsThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingAMPErrsThreshold.setStatus('mandatory')
tRingAlarmsRingTokenErrsThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingTokenErrsThreshold.setStatus('mandatory')
tRingAlarmsRingClaimTknThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingClaimTknThreshold.setStatus('mandatory')
tRingAlarmsRingLostFramesThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingLostFramesThreshold.setStatus('mandatory')
tRingAlarmsRingBeaconStateThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingBeaconStateThreshold.setStatus('mandatory')
tRingAlarmsRingFrameCountThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 1, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsRingFrameCountThreshold.setStatus('mandatory')
tRingAlarmsStnEnblTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1), )
if mibBuilder.loadTexts: tRingAlarmsStnEnblTable.setStatus('mandatory')
tRingAlarmsStnEnblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingAlarmsStnEnblAddress"))
if mibBuilder.loadTexts: tRingAlarmsStnEnblEntry.setStatus('mandatory')
tRingAlarmsStnEnblAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingAlarmsStnEnblAddress.setStatus('mandatory')
tRingAlarmsStnEnblLineErrsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnEnblLineErrsEnable.setStatus('mandatory')
tRingAlarmsStnEnblInternalErrsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnEnblInternalErrsEnable.setStatus('mandatory')
tRingAlarmsStnEnblBurstErrsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnEnblBurstErrsEnable.setStatus('mandatory')
tRingAlarmsStnEnblACErrsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnEnblACErrsEnable.setStatus('mandatory')
tRingAlarmsStnEnblRcvrCongestEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnEnblRcvrCongestEnable.setStatus('mandatory')
tRingAlarmsStnThrshTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1), )
if mibBuilder.loadTexts: tRingAlarmsStnThrshTable.setStatus('mandatory')
tRingAlarmsStnThrshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingAlarmsStnThrshAddress"))
if mibBuilder.loadTexts: tRingAlarmsStnThrshEntry.setStatus('mandatory')
tRingAlarmsStnThrshAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingAlarmsStnThrshAddress.setStatus('mandatory')
tRingAlarmsStnThrshLineErrsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnThrshLineErrsThreshold.setStatus('mandatory')
tRingAlarmsStnThrshInternalErrsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnThrshInternalErrsThreshold.setStatus('mandatory')
tRingAlarmsStnThrshBurstErrsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnThrshBurstErrsThreshold.setStatus('mandatory')
tRingAlarmsStnThrshACErrsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnThrshACErrsThreshold.setStatus('mandatory')
tRingAlarmsStnThrshRcvrCongestThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 1, 3, 2, 2, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingAlarmsStnThrshRcvrCongestThreshold.setStatus('mandatory')
tRingPortGrpTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1), )
if mibBuilder.loadTexts: tRingPortGrpTable.setStatus('mandatory')
tRingPortGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingPortGrpId"))
if mibBuilder.loadTexts: tRingPortGrpEntry.setStatus('mandatory')
tRingPortGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpId.setStatus('mandatory')
tRingPortGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortGrpName.setStatus('mandatory')
tRingPortGrpStnPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpStnPortCount.setStatus('mandatory')
tRingPortGrpRingPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpRingPortCount.setStatus('mandatory')
tRingPortGrpStnPortsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noEnable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortGrpStnPortsEnable.setStatus('mandatory')
tRingPortGrpRingPortsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noEnable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortGrpRingPortsEnable.setStatus('mandatory')
tRingPortGrpStnPortsOn = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpStnPortsOn.setStatus('mandatory')
tRingPortGrpRingPortsOn = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpRingPortsOn.setStatus('mandatory')
tRingPortGrpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("managementMode", 1), ("autoMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortGrpMode.setStatus('mandatory')
tRingPortGrpSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 16))).clone(namedValues=NamedValues(("fourMegaBits", 4), ("sixteenMegaBits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortGrpSpeed.setStatus('mandatory')
tRingPortGrpSpeedFault = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noFaultDetected", 1), ("faultDetected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpSpeedFault.setStatus('mandatory')
tRingPortGrpSpeedFaultLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("fnb", 2), ("ringIn", 3), ("ringOut", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortGrpSpeedFaultLocation.setStatus('mandatory')
tRingPortGrpBypassRingPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("off", 2), ("on", 3), ("illegal", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortGrpBypassRingPortState.setStatus('mandatory')
tRingPortMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1), )
if mibBuilder.loadTexts: tRingPortMgmtTable.setStatus('mandatory')
tRingPortMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingPortMgmtPortId"), (0, "DOT5-LOG-MIB", "tRingPortMgmtPortGrpId"))
if mibBuilder.loadTexts: tRingPortMgmtEntry.setStatus('mandatory')
tRingPortMgmtPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortMgmtPortId.setStatus('mandatory')
tRingPortMgmtPortGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortMgmtPortGrpId.setStatus('mandatory')
tRingPortMgmtPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortMgmtPortName.setStatus('mandatory')
tRingPortMgmtPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortMgmtPortAdminState.setStatus('mandatory')
tRingPortMgmtPortOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notOperational", 1), ("operational", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortMgmtPortOperState.setStatus('mandatory')
tRingPortMgmtPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortMgmtPortType.setStatus('mandatory')
tRingPortMgmtSpeedFaultDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDetectable", 1), ("noFaultDetected", 2), ("faultDetected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortMgmtSpeedFaultDetect.setStatus('mandatory')
tRingPortMgmtRingOutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortMgmtRingOutEnable.setStatus('mandatory')
tRingPortStnTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1), )
if mibBuilder.loadTexts: tRingPortStnTable.setStatus('mandatory')
tRingPortStnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingPortStnPortId"), (0, "DOT5-LOG-MIB", "tRingPortStnPortGrpId"))
if mibBuilder.loadTexts: tRingPortStnEntry.setStatus('mandatory')
tRingPortStnPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortStnPortId.setStatus('mandatory')
tRingPortStnPortGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortStnPortGrpId.setStatus('mandatory')
tRingPortStnPortLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noLink", 1), ("link", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortStnPortLinkState.setStatus('mandatory')
tRingPortStnPortLinkStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortStnPortLinkStateTime.setStatus('mandatory')
tRingPortStnPortMapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mappingEnabled", 1), ("mappingDisabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortStnPortMapEnable.setStatus('mandatory')
tRingPortStnPortMappedMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortStnPortMappedMacAddr.setStatus('mandatory')
tRingPortStnInsertionTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortStnInsertionTrapEnable.setStatus('mandatory')
tRingPortRingTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1), )
if mibBuilder.loadTexts: tRingPortRingTable.setStatus('mandatory')
tRingPortRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1), ).setIndexNames((0, "DOT5-LOG-MIB", "tRingPortRingPortId"), (0, "DOT5-LOG-MIB", "tRingPortRingPortGrpId"))
if mibBuilder.loadTexts: tRingPortRingEntry.setStatus('mandatory')
tRingPortRingPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortRingPortId.setStatus('mandatory')
tRingPortRingPortGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortRingPortGrpId.setStatus('mandatory')
tRingPortRingPortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAutowrap", 1), ("autowrap", 2), ("selectable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortRingPortClass.setStatus('mandatory')
tRingPortRingPortMediaSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noSelection", 1), ("stp", 2), ("fiber", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortRingPortMediaSelect.setStatus('mandatory')
tRingPortRingFaultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("noFaultDetected", 2), ("faultDetected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortRingFaultStatus.setStatus('mandatory')
tRingPortRingFaultStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortRingFaultStateTime.setStatus('mandatory')
tRingPortRingPhantomCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noPhantomAvailable", 1), ("activatePhantom", 2), ("deactivatePhantom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tRingPortRingPhantomCurrent.setStatus('mandatory')
tRingPortRingPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ringIn", 1), ("ringOut", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingPortRingPortType.setStatus('mandatory')
tRingIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 1, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tRingIfIndex.setStatus('mandatory')
mibBuilder.exportSymbols("DOT5-LOG-MIB", tRingMgmtStnDNA=tRingMgmtStnDNA, tRingMgmtStnPhysLocation=tRingMgmtStnPhysLocation, tRingMgmtHost=tRingMgmtHost, tRingAlarmsStnEnblRcvrCongestEnable=tRingAlarmsStnEnblRcvrCongestEnable, tRingPortStnPortLinkStateTime=tRingPortStnPortLinkStateTime, tRingPortGrpSpeedFault=tRingPortGrpSpeedFault, tRingMgmtStnPriority=tRingMgmtStnPriority, tRingStatsRingLastBeacon=tRingStatsRingLastBeacon, tRingAlarmsStnEnblInternalErrsEnable=tRingAlarmsStnEnblInternalErrsEnable, tRingPortGrpRingPortCount=tRingPortGrpRingPortCount, tRingPort=tRingPort, tRingStatsRingBeaconEvents=tRingStatsRingBeaconEvents, tRingStatsRingProtocolNetbiosFrames=tRingStatsRingProtocolNetbiosFrames, tRingPortGrpStnPortsEnable=tRingPortGrpStnPortsEnable, tRingAlarmsStnEnblEntry=tRingAlarmsStnEnblEntry, tRingStatsRingCongestErrors=tRingStatsRingCongestErrors, tRingMgmtHostErrorStatus=tRingMgmtHostErrorStatus, tRingAlarmsStnEnbl=tRingAlarmsStnEnbl, tRingPortMgmtRingOutEnable=tRingPortMgmtRingOutEnable, tRingStatsRingFramesize2048To4095Bytes=tRingStatsRingFramesize2048To4095Bytes, tRingMgmtHostLocalAdminMac=tRingMgmtHostLocalAdminMac, tRingAlarmsStn=tRingAlarmsStn, tRingStatsStnAbortSequences=tRingStatsStnAbortSequences, tRingStats=tRingStats, tRingAlarmsRingAMPErrsEnable=tRingAlarmsRingAMPErrsEnable, tRingStatsRingPollFailureNNIFrameAddress=tRingStatsRingPollFailureNNIFrameAddress, tRingPortStnPortGrpId=tRingPortStnPortGrpId, tRingPortGrpSpeedFaultLocation=tRingPortGrpSpeedFaultLocation, tRingMgmtActiveMonitor=tRingMgmtActiveMonitor, tRingStatsStnFrames=tRingStatsStnFrames, tRingMgmtBcnRecStnPortRetryDelay=tRingMgmtBcnRecStnPortRetryDelay, tRingPortRingPortGrpId=tRingPortRingPortGrpId, tRingStatsRingProtocolTcpIpFrames=tRingStatsRingProtocolTcpIpFrames, tRingPortStnEntry=tRingPortStnEntry, tRingIfIndex=tRingIfIndex, tRingAlarmsRingThrsh=tRingAlarmsRingThrsh, tRingStatsRingInternalErrors=tRingStatsRingInternalErrors, tRingMgmtStnRemoveStn=tRingMgmtStnRemoveStn, tRingMgmtSecurity=tRingMgmtSecurity, tRingMgmtBcnRecBrdWrapRetryDelay=tRingMgmtBcnRecBrdWrapRetryDelay, tRing=tRing, tRingPortGrpId=tRingPortGrpId, tRingPortRingEntry=tRingPortRingEntry, tRingPortGrpMode=tRingPortGrpMode, tRingStatsRingFramesize4096AndUpBytes=tRingStatsRingFramesize4096AndUpBytes, tRingMgmtRingSpeed=tRingMgmtRingSpeed, tRingStatsRingFramesize128To255Bytes=tRingStatsRingFramesize128To255Bytes, tRingMgmtRingName=tRingMgmtRingName, tRingStatsRingAbortSequences=tRingStatsRingAbortSequences, tRingAlarmsRingEnbl=tRingAlarmsRingEnbl, tRingStatsStnCongestErrors=tRingStatsStnCongestErrors, tRingMgmtRingNumber=tRingMgmtRingNumber, tRingMgmtRingPortsEnable=tRingMgmtRingPortsEnable, tRingStatsRingProtos=tRingStatsRingProtos, tRingPortGrpSpeed=tRingPortGrpSpeed, tRingPortStnInsertionTrapEnable=tRingPortStnInsertionTrapEnable, tRingAlarmsRingFrameCountEnable=tRingAlarmsRingFrameCountEnable, tRingAlarmsRingAMPErrsThreshold=tRingAlarmsRingAMPErrsThreshold, tRingAlarmsStnThrshLineErrsThreshold=tRingAlarmsStnThrshLineErrsThreshold, tRingPortStnPortMapEnable=tRingPortStnPortMapEnable, tRingMgmtStnAddress=tRingMgmtStnAddress, tRingStatsRingTotalErrors=tRingStatsRingTotalErrors, tRingAlarmsStnEnblAddress=tRingAlarmsStnEnblAddress, tRingMgmtStnPort=tRingMgmtStnPort, tRingPortStnTable=tRingPortStnTable, tRingMgmtBcnRecBrdBypassRetryCount=tRingMgmtBcnRecBrdBypassRetryCount, tRingMgmtHostTErrorReport=tRingMgmtHostTErrorReport, tRingPortRingPortMediaSelect=tRingPortRingPortMediaSelect, tRingStatsRingErrs=tRingStatsRingErrs, tRingAlarms=tRingAlarms, tRingMgmtBcnRecBrdBypassRetryDelay=tRingMgmtBcnRecBrdBypassRetryDelay, tRingAlarmsRingTimebase=tRingAlarmsRingTimebase, tRingAlarmsStnThrshTable=tRingAlarmsStnThrshTable, tRingMgmtBcnRecRingPortRetryDelay=tRingMgmtBcnRecRingPortRetryDelay, tRingMgmtBeaconRecovery=tRingMgmtBeaconRecovery, tRingStatsRingKBytes=tRingStatsRingKBytes, tRingPortGrp=tRingPortGrp, tRingAlarmsRingRingPurgesThreshold=tRingAlarmsRingRingPurgesThreshold, tRingPortRing=tRingPortRing, tRingMgmtSecurityIfIndex=tRingMgmtSecurityIfIndex, tRingStatsStnFCErrors=tRingStatsStnFCErrors, tRingPortMgmtPortOperState=tRingPortMgmtPortOperState, tRingStatsRingACErrors=tRingStatsRingACErrors, tRingAlarmsStnEnblTable=tRingAlarmsStnEnblTable, tRingAlarmsRingClaimTknThreshold=tRingAlarmsRingClaimTknThreshold, tRingStatsStnTokenErrors=tRingStatsStnTokenErrors, tRingAlarmsRingLostFramesEnable=tRingAlarmsRingLostFramesEnable, tRingPortMgmt=tRingPortMgmt, tRingStatsStnTable=tRingStatsStnTable, tRingMgmtHostOpenStatus=tRingMgmtHostOpenStatus, tRingStatsStnInternalErrors=tRingStatsStnInternalErrors, tRingStatsResetCounters=tRingStatsResetCounters, tRingPortStnPortId=tRingPortStnPortId, tRingPortMgmtPortName=tRingPortMgmtPortName, tRingStatsRingPollFailureLastDNAAddress=tRingStatsRingPollFailureLastDNAAddress, tRingPortRingPortId=tRingPortRingPortId, tRingStatsRingProtocolSnaFrames=tRingStatsRingProtocolSnaFrames, tRingAlarmsRingBeaconStateEnable=tRingAlarmsRingBeaconStateEnable, tRingPortGrpRingPortsEnable=tRingPortGrpRingPortsEnable, tRingAlarmsRingLostFramesThreshold=tRingAlarmsRingLostFramesThreshold, tRingPortMgmtSpeedFaultDetect=tRingPortMgmtSpeedFaultDetect, tRingAlarmsStnThrshEntry=tRingAlarmsStnThrshEntry, tRingMgmtBcnRecStnPortRetryCount=tRingMgmtBcnRecStnPortRetryCount, tRingPortMgmtPortAdminState=tRingPortMgmtPortAdminState, tRingMgmtSecurityAddressAdd=tRingMgmtSecurityAddressAdd, tRingStatsStnEntry=tRingStatsStnEntry, tRingMgmtBcnRecRingPortRetryCount=tRingMgmtBcnRecRingPortRetryCount, tRingStatsRingLineErrors=tRingStatsRingLineErrors, tRingPortGrpEntry=tRingPortGrpEntry, tRingMgmtStnPortsOn=tRingMgmtStnPortsOn, tRingAlarmsStnThrshAddress=tRingAlarmsStnThrshAddress, tRingStatsStnLineErrors=tRingStatsStnLineErrors, tRingAlarmsStnThrshRcvrCongestThreshold=tRingAlarmsStnThrshRcvrCongestThreshold, tRingPortStnPortLinkState=tRingPortStnPortLinkState, tRingPortRingPhantomCurrent=tRingPortRingPhantomCurrent, tRingMgmtStnName=tRingMgmtStnName, tRingStatsRingLongestBeacon=tRingStatsRingLongestBeacon, tRingStatsStnErrors=tRingStatsStnErrors, tRingStatsRingFrames=tRingStatsRingFrames, tRingPortMgmtPortType=tRingPortMgmtPortType, tRingStatsRingFramesizeUpTo63Bytes=tRingStatsRingFramesizeUpTo63Bytes, tRingMgmtSecurityStnCount=tRingMgmtSecurityStnCount, tRingStatsRingLostFrames=tRingStatsRingLostFrames, tRingPortRingFaultStateTime=tRingPortRingFaultStateTime, tRingAlarmsStnEnblACErrsEnable=tRingAlarmsStnEnblACErrsEnable, tRingAlarmsStnThrshInternalErrsThreshold=tRingAlarmsStnThrshInternalErrsThreshold, tRingStatsRingFramesize64To127Bytes=tRingStatsRingFramesize64To127Bytes, tRingStatsStn=tRingStatsStn, tRingMgmtBcnRecBrdWrapRetryCount=tRingMgmtBcnRecBrdWrapRetryCount, tRingStatsRingPollFailureNNIFrameCount=tRingStatsRingPollFailureNNIFrameCount, tRingStatsStnBurstErrors=tRingStatsStnBurstErrors, tRingAlarmsRingBeaconStateThreshold=tRingAlarmsRingBeaconStateThreshold, tRingPortMgmtPortId=tRingPortMgmtPortId, tRingMgmtStnFuncClasses=tRingMgmtStnFuncClasses, tRingStatsRing=tRingStatsRing, tRingStatsRingLastBeaconType=tRingStatsRingLastBeaconType, tRingMgmtStnUNA=tRingMgmtStnUNA, tRingAlarmsStnEnblLineErrsEnable=tRingAlarmsStnEnblLineErrsEnable, tRingAlarmsStnThrsh=tRingAlarmsStnThrsh, tRingStatsRingPollFailureNoRecovery=tRingStatsRingPollFailureNoRecovery, tRingMgmtSecurityStnAddress=tRingMgmtSecurityStnAddress, tRingStatsStnAddress=tRingStatsStnAddress, tRingStatsStnLostFrames=tRingStatsStnLostFrames, tRingMgmtStnPortCount=tRingMgmtStnPortCount, tRingStatsRingFramesize1024To2047Bytes=tRingStatsRingFramesize1024To2047Bytes, tRingStatsStnFreqErrors=tRingStatsStnFreqErrors, tRingStatsStnACErrors=tRingStatsStnACErrors, tRingMgmtSecurityAddressRemove=tRingMgmtSecurityAddressRemove, tRingStatsRingFCErrors=tRingStatsRingFCErrors, tRingStatsRingTokenErrors=tRingStatsRingTokenErrors, tRingAlarmsRingRingPurgesEnable=tRingAlarmsRingRingPurgesEnable, tRingAlarmsStnThrshBurstErrsThreshold=tRingAlarmsStnThrshBurstErrsThreshold, tRingAlarmsRingClaimTknErrsEnable=tRingAlarmsRingClaimTknErrsEnable, tRingPortGrpStnPortCount=tRingPortGrpStnPortCount, tRingAlarmsStnEnblBurstErrsEnable=tRingAlarmsStnEnblBurstErrsEnable, tRingAlarmsRingTokenErrsEnable=tRingAlarmsRingTokenErrsEnable, tRingMgmtStations=tRingMgmtStations, tRingMgmtRingPollRecovery=tRingMgmtRingPollRecovery, tRingMgmtSecurityTable=tRingMgmtSecurityTable, tRingMgmtHostAMContention=tRingMgmtHostAMContention, tRingStatsRingPollFailureLastNNIFrameTime=tRingStatsRingPollFailureLastNNIFrameTime, tRingMgmtStnTable=tRingMgmtStnTable, tRingPortMgmtPortGrpId=tRingPortMgmtPortGrpId, tRingStatsRingBurstErrors=tRingStatsRingBurstErrors, tRingPortRingPortClass=tRingPortRingPortClass, tRingPortStnPortMappedMacAddr=tRingPortStnPortMappedMacAddr, tRingStatsRingSizes=tRingStatsRingSizes, tRingStatsReset=tRingStatsReset, tRingMgmtSecurityEntry=tRingMgmtSecurityEntry, tRingPortMgmtTable=tRingPortMgmtTable, tRingPortStn=tRingPortStn, tRingPortGrpTable=tRingPortGrpTable, tRingPortRingFaultStatus=tRingPortRingFaultStatus, tRingAlarmsRingTokenErrsThreshold=tRingAlarmsRingTokenErrsThreshold, tRingStatsRingFramesize512To1023Bytes=tRingStatsRingFramesize512To1023Bytes, tRingStatsRingAMChanges=tRingStatsRingAMChanges, tRingStatsRingProtocolXnsFrames=tRingStatsRingProtocolXnsFrames, tRingPortRingTable=tRingPortRingTable, tRingMgmt=tRingMgmt, tRingIf=tRingIf, tRingPortGrpRingPortsOn=tRingPortGrpRingPortsOn, tRingPortGrpStnPortsOn=tRingPortGrpStnPortsOn, tRingMgmtStn=tRingMgmtStn, tRingStatsRingProtocolLanNetMgrFrames=tRingStatsRingProtocolLanNetMgrFrames, tRingPortGrpName=tRingPortGrpName, tRingPortRingPortType=tRingPortRingPortType, dot5Rev1=dot5Rev1, tRingMgmtSecurityAdminState=tRingMgmtSecurityAdminState, tRingMgmtHostCommands=tRingMgmtHostCommands, tRingStatsRingRingPurges=tRingStatsRingRingPurges, tRingStatsRingFreqErrors=tRingStatsRingFreqErrors, tRingStatsRingProtocolIpxFrames=tRingStatsRingProtocolIpxFrames, tRingMgmtRing=tRingMgmtRing, tRingAlarmsRingFrameCountThreshold=tRingAlarmsRingFrameCountThreshold, tRingStatsRingFramesize256To511Bytes=tRingStatsRingFramesize256To511Bytes, tRingPortMgmtEntry=tRingPortMgmtEntry, tRingMgmtStnPortsEnable=tRingMgmtStnPortsEnable, tRingMgmtStnEntry=tRingMgmtStnEntry, tRingStatsRingProtocolBanyanFrames=tRingStatsRingProtocolBanyanFrames, tRingStatsResetTime=tRingStatsResetTime, tRingStatsStnBytes=tRingStatsStnBytes, tRingAlarmsRing=tRingAlarmsRing, tRingMgmtStnBoard=tRingMgmtStnBoard, tRingPortGrpBypassRingPortState=tRingPortGrpBypassRingPortState, tRingMgmtRingPortCount=tRingMgmtRingPortCount, tRingMgmtRingPortsOn=tRingMgmtRingPortsOn, tRingMgmtRingState=tRingMgmtRingState, tRingStatsRingProtocolOtherFrames=tRingStatsRingProtocolOtherFrames, tRingAlarmsStnThrshACErrsThreshold=tRingAlarmsStnThrshACErrsThreshold)
