#
# PySNMP MIB module NMS-ERPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NMS-ERPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:12:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
nmslocal, = mibBuilder.importSymbols("NMS-SMI", "nmslocal")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, Gauge32, Unsigned32, ModuleIdentity, Bits, iso, Integer32, MibIdentifier, Counter32, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Gauge32", "Unsigned32", "ModuleIdentity", "Bits", "iso", "Integer32", "MibIdentifier", "Counter32", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nmsERPS = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231))
nmsERPSRings = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRings.setStatus('mandatory')
nmsERPSInconsistenceCheck = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSInconsistenceCheck.setStatus('mandatory')
nmsERPSPduRx = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSPduRx.setStatus('mandatory')
nmsERPSPduRxDropped = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSPduRxDropped.setStatus('mandatory')
nmsERPSPduTx = MibScalar((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSPduTx.setStatus('mandatory')
nmsERPSRingTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6), )
if mibBuilder.loadTexts: nmsERPSRingTable.setStatus('mandatory')
nmsERPSRingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1), ).setIndexNames((0, "NMS-ERPS-MIB", "nmsERPSRingID"))
if mibBuilder.loadTexts: nmsERPSRingTableEntry.setStatus('mandatory')
nmsERPSRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingID.setStatus('mandatory')
nmsERPSRingNodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingNodeID.setStatus('mandatory')
nmsERPSRingPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPorts.setStatus('mandatory')
nmsERPSRingRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notRplOwner", 0), ("rplOwner", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingRole.setStatus('mandatory')
nmsERPSRingState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("protection", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingState.setStatus('mandatory')
nmsERPSRingWTR = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notWaitToRestore", 0), ("waitToRestore", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingWTR.setStatus('mandatory')
nmsERPSRingWtrWhile = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingWtrWhile.setStatus('mandatory')
nmsERPSRingSignalFail = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noSignalFail", 0), ("signalFail", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingSignalFail.setStatus('mandatory')
nmsERPSRingSending = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingSending.setStatus('mandatory')
nmsERPSRingRplOwnerID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingRplOwnerID.setStatus('mandatory')
nmsERPSRingRplOwnerMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingRplOwnerMAC.setStatus('mandatory')
nmsERPSRingDiscovering = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notDiscovering", 0), ("discovering", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingDiscovering.setStatus('mandatory')
nmsERPSRingDiscoverWhile = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingDiscoverWhile.setStatus('mandatory')
nmsERPSRingPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingPriorityValue.setStatus('mandatory')
nmsERPSRingWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingWtrTime.setStatus('mandatory')
nmsERPSRingGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingGuardTime.setStatus('mandatory')
nmsERPSRingSendTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingSendTime.setStatus('mandatory')
nmsERPSRingDiscoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingDiscoveryTime.setStatus('mandatory')
nmsERPSRingDpduInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingDpduInterval.setStatus('mandatory')
nmsERPSRingDiscoveryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingDiscoveryCount.setStatus('mandatory')
nmsERPSRingDiscoveryLastDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingDiscoveryLastDuration.setStatus('mandatory')
nmsERPSRingDiscoveryLastElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingDiscoveryLastElapsed.setStatus('mandatory')
nmsERPSRingAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsERPSRingAdminStatus.setStatus('mandatory')
nmsERPSRingPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 24), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsERPSRingPort1.setStatus('mandatory')
nmsERPSRingPort1AdminType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ring-port", 0), ("rpl", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingPort1AdminType.setStatus('mandatory')
nmsERPSRingPort1OperType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ring-port", 0), ("rpl", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort1OperType.setStatus('mandatory')
nmsERPSRingPort1State = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("blocking", 0), ("forwarding", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort1State.setStatus('mandatory')
nmsERPSRingPort1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort1Status.setStatus('mandatory')
nmsERPSRingPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 29), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nmsERPSRingPort2.setStatus('mandatory')
nmsERPSRingPort2AdminType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ring-port", 0), ("rpl", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nmsERPSRingPort2AdminType.setStatus('mandatory')
nmsERPSRingPort2OperType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ring-port", 0), ("rpl", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort2OperType.setStatus('mandatory')
nmsERPSRingPort2State = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("blocking", 0), ("forwarding", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort2State.setStatus('mandatory')
nmsERPSRingPort2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 6, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort2Status.setStatus('mandatory')
nmsERPSRingPortTable = MibTable((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7), )
if mibBuilder.loadTexts: nmsERPSRingPortTable.setStatus('mandatory')
nmsERPSRingPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1), ).setIndexNames((0, "NMS-ERPS-MIB", "nmsERPSRingPortRingID"), (0, "NMS-ERPS-MIB", "nmsERPSRingPort"))
if mibBuilder.loadTexts: nmsERPSRingPortTableEntry.setStatus('mandatory')
nmsERPSRingPortRingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortRingID.setStatus('mandatory')
nmsERPSRingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPort.setStatus('mandatory')
nmsERPSRingPortAdminType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ring-port", 0), ("rpl", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortAdminType.setStatus('mandatory')
nmsERPSRingPortOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ring-port", 0), ("rpl", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortOperType.setStatus('mandatory')
nmsERPSRingPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("blocking", 0), ("forwarding", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortState.setStatus('mandatory')
nmsERPSRingPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("link-down", 0), ("link-up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortStatus.setStatus('mandatory')
nmsERPSRingPortForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortForwards.setStatus('mandatory')
nmsERPSRingPortForwardLastElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortForwardLastElapsed.setStatus('mandatory')
nmsERPSRingPortRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortRx.setStatus('mandatory')
nmsERPSRingPortTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nmsERPSRingPortTx.setStatus('mandatory')
nmsERPSRingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 8))
nmsERPSRingRoleChange = NotificationType((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 8, 1)).setObjects(("NMS-ERPS-MIB", "nmsERPSRingID"), ("NMS-ERPS-MIB", "nmsERPSRingNodeID"), ("NMS-ERPS-MIB", "nmsERPSRingRole"))
if mibBuilder.loadTexts: nmsERPSRingRoleChange.setStatus('current')
nmsERPSRingStateChange = NotificationType((1, 3, 6, 1, 4, 1, 11606, 10, 2, 231, 8, 2)).setObjects(("NMS-ERPS-MIB", "nmsERPSRingID"), ("NMS-ERPS-MIB", "nmsERPSRingNodeID"), ("NMS-ERPS-MIB", "nmsERPSRingRole"), ("NMS-ERPS-MIB", "nmsERPSRingState"))
if mibBuilder.loadTexts: nmsERPSRingStateChange.setStatus('current')
mibBuilder.exportSymbols("NMS-ERPS-MIB", nmsERPSRingGuardTime=nmsERPSRingGuardTime, nmsERPSRingPortTableEntry=nmsERPSRingPortTableEntry, nmsERPSRingPort2OperType=nmsERPSRingPort2OperType, nmsERPSRingNotifications=nmsERPSRingNotifications, nmsERPSRingStateChange=nmsERPSRingStateChange, nmsERPSRingPortForwardLastElapsed=nmsERPSRingPortForwardLastElapsed, nmsERPSRingTableEntry=nmsERPSRingTableEntry, nmsERPSRingPorts=nmsERPSRingPorts, nmsERPSRingRole=nmsERPSRingRole, nmsERPSInconsistenceCheck=nmsERPSInconsistenceCheck, nmsERPSRingDiscoveryLastElapsed=nmsERPSRingDiscoveryLastElapsed, nmsERPSRingAdminStatus=nmsERPSRingAdminStatus, nmsERPSRingState=nmsERPSRingState, nmsERPSRingSending=nmsERPSRingSending, nmsERPSRingPort=nmsERPSRingPort, nmsERPSRingPriorityValue=nmsERPSRingPriorityValue, nmsERPSRingPortRingID=nmsERPSRingPortRingID, nmsERPSRingRplOwnerID=nmsERPSRingRplOwnerID, nmsERPSRings=nmsERPSRings, nmsERPSRingPort1AdminType=nmsERPSRingPort1AdminType, nmsERPSRingPortStatus=nmsERPSRingPortStatus, nmsERPSRingPortOperType=nmsERPSRingPortOperType, nmsERPSRingPort1=nmsERPSRingPort1, nmsERPSRingPortForwards=nmsERPSRingPortForwards, nmsERPSRingPortTx=nmsERPSRingPortTx, nmsERPSRingPortRx=nmsERPSRingPortRx, nmsERPSRingWTR=nmsERPSRingWTR, nmsERPSPduRxDropped=nmsERPSPduRxDropped, nmsERPSRingPortState=nmsERPSRingPortState, nmsERPSRingDiscoverWhile=nmsERPSRingDiscoverWhile, nmsERPSRingRplOwnerMAC=nmsERPSRingRplOwnerMAC, nmsERPSRingRoleChange=nmsERPSRingRoleChange, nmsERPS=nmsERPS, nmsERPSRingPort1Status=nmsERPSRingPort1Status, nmsERPSRingDiscoveryCount=nmsERPSRingDiscoveryCount, nmsERPSRingPortTable=nmsERPSRingPortTable, nmsERPSRingDpduInterval=nmsERPSRingDpduInterval, nmsERPSRingPort2=nmsERPSRingPort2, nmsERPSRingPort2State=nmsERPSRingPort2State, nmsERPSRingPort2Status=nmsERPSRingPort2Status, nmsERPSRingPortAdminType=nmsERPSRingPortAdminType, nmsERPSRingNodeID=nmsERPSRingNodeID, nmsERPSRingSendTime=nmsERPSRingSendTime, nmsERPSRingPort1OperType=nmsERPSRingPort1OperType, nmsERPSRingPort2AdminType=nmsERPSRingPort2AdminType, nmsERPSRingDiscoveryTime=nmsERPSRingDiscoveryTime, nmsERPSRingTable=nmsERPSRingTable, nmsERPSPduTx=nmsERPSPduTx, nmsERPSRingDiscovering=nmsERPSRingDiscovering, nmsERPSRingWtrTime=nmsERPSRingWtrTime, nmsERPSRingWtrWhile=nmsERPSRingWtrWhile, nmsERPSRingID=nmsERPSRingID, nmsERPSRingPort1State=nmsERPSRingPort1State, nmsERPSRingSignalFail=nmsERPSRingSignalFail, nmsERPSPduRx=nmsERPSPduRx, nmsERPSRingDiscoveryLastDuration=nmsERPSRingDiscoveryLastDuration)
