#
# PySNMP MIB module HUAWEI-VLL-STATISTIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VLL-STATISTIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, NotificationType, iso, Bits, Integer32, TimeTicks, Unsigned32, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "iso", "Bits", "Integer32", "TimeTicks", "Unsigned32", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwL2VpnVllStatistic = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7))
if mibBuilder.loadTexts: hwL2VpnVllStatistic.setLastUpdated('200902132100Z')
if mibBuilder.loadTexts: hwL2VpnVllStatistic.setOrganization('Huawei Technologies Co., Ltd.')
hwL2Vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119))
hwVllMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1))
hwVllStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1), )
if mibBuilder.loadTexts: hwVllStatisticTable.setStatus('current')
hwVllStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1), ).setIndexNames((0, "HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticIfIndex"), (0, "HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticPwType"))
if mibBuilder.loadTexts: hwVllStatisticEntry.setStatus('current')
hwVllStatisticIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVllStatisticIfIndex.setStatus('current')
hwVllStatisticPwType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))))
if mibBuilder.loadTexts: hwVllStatisticPwType.setStatus('current')
hwVllStatisticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVllStatisticEnable.setStatus('current')
hwVllStatisticResetTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("unknownStatus", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVllStatisticResetTraffic.setStatus('current')
hwVllStatisticResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllStatisticResetTime.setStatus('current')
hwVllStatisticPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllStatisticPackets.setStatus('current')
hwVllStatisticBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllStatisticBytes.setStatus('current')
hwVllStatisticPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllStatisticPacketsRate.setStatus('current')
hwVllStatisticBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllStatisticBytesRate.setStatus('current')
hwVllQosStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2), )
if mibBuilder.loadTexts: hwVllQosStatisticTable.setStatus('current')
hwVllQosStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1), ).setIndexNames((0, "HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticIfIndex"), (0, "HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticPwType"), (0, "HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticQueueId"))
if mibBuilder.loadTexts: hwVllQosStatisticEntry.setStatus('current')
hwVllQosStatisticIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwVllQosStatisticIfIndex.setStatus('current')
hwVllQosStatisticPwType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))))
if mibBuilder.loadTexts: hwVllQosStatisticPwType.setStatus('current')
hwVllQosStatisticQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))))
if mibBuilder.loadTexts: hwVllQosStatisticQueueId.setStatus('current')
hwVllQosStatisticPassPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticPassPacket.setStatus('current')
hwVllQosStatisticPassByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticPassByte.setStatus('current')
hwVllQosStatisticDiscardPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticDiscardPacket.setStatus('current')
hwVllQosStatisticDiscardByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticDiscardByte.setStatus('current')
hwVllQosStatisticPassPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticPassPacketRate.setStatus('current')
hwVllQosStatisticPassByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticPassByteRate.setStatus('current')
hwVllQosStatisticDiscardPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticDiscardPacketRate.setStatus('current')
hwVllQosStatisticDiscardByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVllQosStatisticDiscardByteRate.setStatus('current')
hwVllMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 2))
hwVllMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 3))
hwVllMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 3, 1))
hwVllMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 3, 1, 1)).setObjects(("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticGroup"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVllMIBCompliance = hwVllMIBCompliance.setStatus('current')
hwVllMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 3, 2))
hwVllStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 3, 2, 1)).setObjects(("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticEnable"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticResetTraffic"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticResetTime"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticPackets"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticBytes"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticPacketsRate"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllStatisticBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVllStatisticGroup = hwVllStatisticGroup.setStatus('current')
hwVllQosStatisticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 119, 7, 3, 2, 2)).setObjects(("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticPassPacket"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticPassByte"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticDiscardPacket"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticDiscardByte"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticPassPacketRate"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticPassByteRate"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticDiscardPacketRate"), ("HUAWEI-VLL-STATISTIC-MIB", "hwVllQosStatisticDiscardByteRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVllQosStatisticGroup = hwVllQosStatisticGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-VLL-STATISTIC-MIB", hwVllQosStatisticDiscardByteRate=hwVllQosStatisticDiscardByteRate, hwVllStatisticBytesRate=hwVllStatisticBytesRate, hwVllQosStatisticQueueId=hwVllQosStatisticQueueId, hwVllStatisticPackets=hwVllStatisticPackets, hwVllStatisticIfIndex=hwVllStatisticIfIndex, hwVllQosStatisticEntry=hwVllQosStatisticEntry, hwVllStatisticGroup=hwVllStatisticGroup, PYSNMP_MODULE_ID=hwL2VpnVllStatistic, hwVllStatisticEntry=hwVllStatisticEntry, hwL2Vpn=hwL2Vpn, hwVllQosStatisticPassPacket=hwVllQosStatisticPassPacket, hwVllQosStatisticTable=hwVllQosStatisticTable, hwVllStatisticBytes=hwVllStatisticBytes, hwVllQosStatisticDiscardPacket=hwVllQosStatisticDiscardPacket, hwVllQosStatisticPassByteRate=hwVllQosStatisticPassByteRate, hwVllStatisticResetTime=hwVllStatisticResetTime, hwVllMIBCompliances=hwVllMIBCompliances, hwVllStatisticPacketsRate=hwVllStatisticPacketsRate, hwVllQosStatisticDiscardPacketRate=hwVllQosStatisticDiscardPacketRate, hwVllStatisticPwType=hwVllStatisticPwType, hwVllQosStatisticPwType=hwVllQosStatisticPwType, hwVllQosStatisticPassPacketRate=hwVllQosStatisticPassPacketRate, hwVllMIBGroups=hwVllMIBGroups, hwVllQosStatisticIfIndex=hwVllQosStatisticIfIndex, hwL2VpnVllStatistic=hwL2VpnVllStatistic, hwVllStatisticResetTraffic=hwVllStatisticResetTraffic, hwVllQosStatisticDiscardByte=hwVllQosStatisticDiscardByte, hwVllQosStatisticGroup=hwVllQosStatisticGroup, hwVllMIBObjects=hwVllMIBObjects, hwVllMIBTraps=hwVllMIBTraps, hwVllMIBCompliance=hwVllMIBCompliance, hwVllStatisticTable=hwVllStatisticTable, hwVllMIBConformance=hwVllMIBConformance, hwVllQosStatisticPassByte=hwVllQosStatisticPassByte, hwVllStatisticEnable=hwVllStatisticEnable)
