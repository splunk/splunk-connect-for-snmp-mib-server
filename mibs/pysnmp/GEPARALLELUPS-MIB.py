#
# PySNMP MIB module GEPARALLELUPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GEPARALLELUPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter32, Integer32, Gauge32, Counter64, Unsigned32, ObjectIdentity, Bits, enterprises, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Integer32", "Gauge32", "Counter64", "Unsigned32", "ObjectIdentity", "Bits", "enterprises", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "MibIdentifier")
TestAndIncr, AutonomousType, TimeStamp, DisplayString, TextualConvention, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TestAndIncr", "AutonomousType", "TimeStamp", "DisplayString", "TextualConvention", "TimeInterval")
imv = ModuleIdentity((1, 3, 6, 1, 4, 1, 818))
imv.setRevisions(('2010-07-05 00:00', '2008-01-08 00:00',))
if mibBuilder.loadTexts: imv.setLastUpdated('201007050000Z')
if mibBuilder.loadTexts: imv.setOrganization('GE Digital Energy')
class PositiveInteger32(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class NonNegativeInteger32(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

geHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1))
geUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1))
geGenericUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10))
geFirstUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11))
geSecondUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12))
geThirdUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13))
geFourthUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14))
geFifthUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15))
geSixthUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16))
geSeventhUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17))
geEighthUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18))
upsIdent = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1))
upsBattery = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2))
upsInput = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3))
upsOutput = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4))
upsBypass = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5))
upsAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6))
upsWellKnownAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3))
upsTest = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7))
upsWellKnownTests = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7))
upsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8))
upsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9))
upsGetSet = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10))
geUPSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11))
upsDiagnostic = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12))
upsIdentfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1))
upsBatteryfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2))
upsInputfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3))
upsOutputfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4))
upsBypassfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5))
upsAlarmfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6))
upsWellKnownAlarmsfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3))
upsTestfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7))
upsWellKnownTestsfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 7))
upsControlfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8))
upsConfigfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9))
upsGetSetfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10))
geUPSTrapsfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11))
upsDiagnosticfirst = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12))
upsIdentsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1))
upsBatterysecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2))
upsInputsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3))
upsOutputsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4))
upsBypasssecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5))
upsAlarmsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6))
upsWellKnownAlarmssecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3))
upsTestsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7))
upsWellKnownTestssecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 7))
upsControlsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8))
upsConfigsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9))
upsGetSetsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10))
geUPSTrapssecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11))
upsDiagnosticsecond = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12))
upsIdentthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1))
upsBatterythird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2))
upsInputthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3))
upsOutputthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4))
upsBypassthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5))
upsAlarmthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6))
upsWellKnownAlarmsthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3))
upsTestthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7))
upsWellKnownTeststhird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 7))
upsControlthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8))
upsConfigthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9))
upsGetSetthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10))
geUPSTrapsthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11))
upsDiagnosticthird = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12))
upsIdentfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1))
upsBatteryfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2))
upsInputfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3))
upsOutputfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4))
upsBypassfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5))
upsAlarmfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6))
upsWellKnownAlarmsfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3))
upsTestfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7))
upsWellKnownTestsfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 7))
upsControlfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8))
upsConfigfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9))
upsGetSetfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10))
geUPSTrapsfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11))
upsDiagnosticfourth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12))
upsIdentfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1))
upsBatteryfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2))
upsInputfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3))
upsOutputfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4))
upsBypassfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5))
upsAlarmfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6))
upsWellKnownAlarmsfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3))
upsTestfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7))
upsWellKnownTestsfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 7))
upsControlfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8))
upsConfigfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9))
upsGetSetfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10))
geUPSTrapsfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11))
upsDiagnosticfifth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12))
upsIdentsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1))
upsBatterysixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2))
upsInputsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3))
upsOutputsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4))
upsBypasssixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5))
upsAlarmsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6))
upsWellKnownAlarmssixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3))
upsTestsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7))
upsWellKnownTestssixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 7))
upsControlsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8))
upsConfigsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9))
upsGetSetsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10))
geUPSTrapssixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11))
upsDiagnosticsixth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12))
upsIdentseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1))
upsBatteryseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2))
upsInputseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3))
upsOutputseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4))
upsBypassseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5))
upsAlarmseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6))
upsWellKnownAlarmsseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3))
upsTestseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7))
upsWellKnownTestsseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 7))
upsControlseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8))
upsConfigseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9))
upsGetSetseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10))
geUPSTrapsseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11))
upsDiagnosticseventh = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12))
upsIdenteighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1))
upsBatteryeighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2))
upsInputeighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3))
upsOutputeighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4))
upsBypasseighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5))
upsAlarmeighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6))
upsWellKnownAlarmseighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3))
upsTesteighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7))
upsWellKnownTestseighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 7))
upsControleighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8))
upsConfigeighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9))
upsGetSeteighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10))
geUPSTrapseighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11))
upsDiagnosticeighth = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12))
geDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100))
geDevicesDescriptions = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1))
advSNMPWebIntCard = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1, 1))
snmpWebIntCard = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1, 2))
snmpWebIntBox = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1, 3))
geDiscoveredUPSsMask = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: geDiscoveredUPSsMask.setStatus('current')
geRequestPacket = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: geRequestPacket.setStatus('current')
geReplyPacket = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: geReplyPacket.setStatus('current')
upsIdentManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturer.setStatus('current')
upsIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModel.setStatus('current')
upsIdentUPSSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersion.setStatus('current')
upsIdentAgentSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersion.setStatus('current')
upsIdentName = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentName.setStatus('current')
upsIdentAttachedDevices = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevices.setStatus('current')
upsIdentUPSSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumber.setStatus('current')
upsIdentComProtVersion = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersion.setStatus('current')
upsIdentOperatingTime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 9), NonNegativeInteger32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTime.setStatus('current')
upsBatteryStatus = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatus.setStatus('current')
upsSecondsOnBattery = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 2), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBattery.setStatus('current')
upsEstimatedMinutesRemaining = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemaining.setStatus('current')
upsEstimatedChargeRemaining = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemaining.setStatus('current')
upsBatteryVoltage = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltage.setStatus('current')
upsBatteryCurrent = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrent.setStatus('current')
upsBatteryTemperature = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperature.setStatus('current')
upsBatteryRipple = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipple.setStatus('current')
upsInputLineBads = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBads.setStatus('current')
upsInputNumLines = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLines.setStatus('current')
upsInputTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3), )
if mibBuilder.loadTexts: upsInputTable.setStatus('current')
upsInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndex"))
if mibBuilder.loadTexts: upsInputEntry.setStatus('current')
upsInputLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndex.setStatus('current')
upsInputFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequency.setStatus('current')
upsInputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltage.setStatus('current')
upsInputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrent.setStatus('current')
upsInputTruePower = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePower.setStatus('current')
upsInputVoltageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMin.setStatus('current')
upsInputVoltageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMax.setStatus('current')
upsOutputSource = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSource.setStatus('current')
upsOutputFrequency = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequency.setStatus('current')
upsOutputNumLines = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLines.setStatus('current')
upsOutputTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4), )
if mibBuilder.loadTexts: upsOutputTable.setStatus('current')
upsOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndex"))
if mibBuilder.loadTexts: upsOutputEntry.setStatus('current')
upsOutputLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndex.setStatus('current')
upsOutputVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltage.setStatus('current')
upsOutputCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrent.setStatus('current')
upsOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPower.setStatus('current')
upsOutputPercentLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoad.setStatus('current')
upsOutputPowerFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactor.setStatus('current')
upsOutputPeakCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrent.setStatus('current')
upsOutputShareCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrent.setStatus('current')
upsBypassFrequency = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequency.setStatus('current')
upsBypassNumLines = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLines.setStatus('current')
upsBypassTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3), )
if mibBuilder.loadTexts: upsBypassTable.setStatus('current')
upsBypassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndex"))
if mibBuilder.loadTexts: upsBypassEntry.setStatus('current')
upsBypassLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndex.setStatus('current')
upsBypassVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltage.setStatus('current')
upsBypassCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrent.setStatus('current')
upsBypassPower = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPower.setStatus('current')
upsAlarmsPresent = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresent.setStatus('current')
upsAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2), )
if mibBuilder.loadTexts: upsAlarmTable.setStatus('current')
upsAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmId"))
if mibBuilder.loadTexts: upsAlarmEntry.setStatus('current')
upsAlarmId = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmId.setStatus('current')
upsAlarmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescr.setStatus('current')
upsAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTime.setStatus('current')
upsAlarmBatteryBad = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBad.setStatus('current')
upsAlarmOnBattery = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBattery.setStatus('current')
upsAlarmLowBattery = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBattery.setStatus('current')
upsAlarmDepletedBattery = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBattery.setStatus('current')
upsAlarmTempBad = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBad.setStatus('current')
upsAlarmInputBad = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBad.setStatus('current')
upsAlarmOutputBad = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBad.setStatus('current')
upsAlarmOutputOverload = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverload.setStatus('current')
upsAlarmOnBypass = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypass.setStatus('current')
upsAlarmBypassBad = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBad.setStatus('current')
upsAlarmOutputOffAsRequested = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequested.setStatus('current')
upsAlarmUpsOffAsRequested = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequested.setStatus('current')
upsAlarmChargerFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailed.setStatus('current')
upsAlarmUpsOutputOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOff.setStatus('current')
upsAlarmUpsSystemOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOff.setStatus('current')
upsAlarmFanFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailure.setStatus('current')
upsAlarmFuseFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailure.setStatus('current')
upsAlarmGeneralFault = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFault.setStatus('current')
upsAlarmDiagnosticTestFailed = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailed.setStatus('current')
upsAlarmCommunicationsLost = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLost.setStatus('current')
upsAlarmAwaitingPower = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPower.setStatus('current')
upsAlarmShutdownPending = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPending.setStatus('current')
upsAlarmShutdownImminent = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminent.setStatus('current')
upsAlarmTestInProgress = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgress.setStatus('current')
upsAlarmReceptacleOff = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOff.setStatus('current')
upsAlarmHighSpeedBusFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailure.setStatus('current')
upsAlarmHighSpeedBusJACRCFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailure.setStatus('current')
upsAlarmConnectivityBusFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailure.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailure = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailure.setStatus('current')
upsAlarmCurrentSharing = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharing.setStatus('current')
upsAlarmDCRipple = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipple.setStatus('current')
upsAlarmMaskA = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskA.setStatus('current')
upsTestId = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestId.setStatus('current')
upsTestSpinLock = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLock.setStatus('current')
upsTestResultsSummary = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummary.setStatus('current')
upsTestResultsDetail = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetail.setStatus('current')
upsTestStartTime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTime.setStatus('current')
upsTestElapsedTime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTime.setStatus('current')
upsTestNoTestsInitiated = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiated.setStatus('current')
upsTestAbortTestInProgress = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgress.setStatus('current')
upsTestGeneralSystemsTest = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTest.setStatus('current')
upsTestQuickBatteryTest = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTest.setStatus('current')
upsTestDeepBatteryCalibration = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibration.setStatus('current')
upsShutdownType = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownType.setStatus('current')
upsShutdownAfterDelay = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelay.setStatus('current')
upsStartupAfterDelay = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelay.setStatus('current')
upsRebootWithDuration = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDuration.setStatus('current')
upsAutoRestart = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestart.setStatus('current')
upsReceptaclesNum = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNum.setStatus('current')
upsReceptacleTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleTable.setStatus('current')
upsReceptacleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndex"))
if mibBuilder.loadTexts: upsReceptacleEntry.setStatus('current')
upsReceptacleLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndex.setStatus('current')
upsReceptacleOnOff = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOff.setStatus('current')
upsUPSMode = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSMode.setStatus('current')
upsRectifierOnOff = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOff.setStatus('current')
upsBatteryChargeMethod = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethod.setStatus('current')
upsInverterOnOff = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOff.setStatus('current')
upsBypassOnOff = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOff.setStatus('current')
upsLoadSource = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSource.setStatus('current')
upsConfigInputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltage.setStatus('current')
upsConfigInputFreq = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreq.setStatus('current')
upsConfigOutputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltage.setStatus('current')
upsConfigOutputFreq = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreq.setStatus('current')
upsConfigOutputVA = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVA.setStatus('current')
upsConfigOutputPower = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPower.setStatus('current')
upsConfigLowBattTime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTime.setStatus('current')
upsConfigAudibleStatus = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatus.setStatus('current')
upsConfigLowVoltageTransferPoint = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPoint.setStatus('current')
upsConfigHighVoltageTransferPoint = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPoint.setStatus('current')
upsConfigBatteryCapacity = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacity.setStatus('current')
upsConfigBatteryChargeCurrent = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrent.setStatus('current')
upsConfigNoLoadShutdown = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdown.setStatus('current')
upsConfigStartDelay = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelay.setStatus('current')
upsEventGetNext = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNext.setStatus('current')
upsEventGetPrevious = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPrevious.setStatus('current')
upsEventSetStartingTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStamp.setStatus('current')
upsEventRetreiveCurrentTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStamp.setStatus('current')
upsEventTableSize = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSize.setStatus('current')
upsEventTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6), )
if mibBuilder.loadTexts: upsEventTable.setStatus('current')
upsEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndex"))
if mibBuilder.loadTexts: upsEventEntry.setStatus('current')
upsEventLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndex.setStatus('current')
upsEventCode = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCode.setStatus('current')
upsEventStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatus.setStatus('current')
upsEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTime.setStatus('current')
upsParametersRead = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersRead.setStatus('current')
upsParametersWrite = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWrite.setStatus('current')
upsParametersStartAddress = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddress.setStatus('current')
upsParameterTableSize = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSize.setStatus('current')
upsParameterTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11), )
if mibBuilder.loadTexts: upsParameterTable.setStatus('current')
upsParameterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndex"))
if mibBuilder.loadTexts: upsParameterEntry.setStatus('current')
upsParameterLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndex.setStatus('current')
upsParameterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValue.setStatus('current')
upsStatus = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatus.setStatus('current')
upsMainsStatisticsMBfail = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfail.setStatus('current')
upsMainsStatisticsMRfail = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfail.setStatus('current')
upsMainsStatisticsB2 = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2.setStatus('current')
upsMainsStatisticsB5 = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5.setStatus('current')
upsMainsStatisticsB10 = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10.setStatus('current')
upsMainsStatisticsB200 = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200.setStatus('current')
upsMainsStatisticsBypRel = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRel.setStatus('current')
upsTimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimegen.setStatus('current')
upsRequestPermission = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermission.setStatus('current')
upsEventGetCode = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCode.setStatus('current')
upsEventSpinLock = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLock.setStatus('current')
upsParameterSpinLock = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLock.setStatus('current')
upsTrapAlarmBatteryBad = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBad.setStatus('current')
upsTrapAlarmOnBattery = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBattery"))
if mibBuilder.loadTexts: upsTrapAlarmOnBattery.setStatus('current')
upsTrapAlarmLowBattery = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBattery.setStatus('current')
upsTrapAlarmDepletedBattery = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBattery.setStatus('current')
upsTrapAlarmTempBad = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBad.setStatus('current')
upsTrapAlarmInputBad = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBad.setStatus('current')
upsTrapAlarmOutputBad = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBad.setStatus('current')
upsTrapAlarmOutputOverload = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLines"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoad"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverload.setStatus('current')
upsTrapAlarmOnBypass = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypass.setStatus('current')
upsTrapAlarmBypassBad = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBad.setStatus('current')
upsTrapAlarmOutputOffAsRequested = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequested.setStatus('current')
upsTrapAlarmUpsOffAsRequested = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequested.setStatus('current')
upsTrapAlarmChargerFailed = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailed.setStatus('current')
upsTrapAlarmUpsOutputOff = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOff.setStatus('current')
upsTrapAlarmUpsSystemOff = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOff.setStatus('current')
upsTrapAlarmFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailure.setStatus('current')
upsTrapAlarmFuseFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailure.setStatus('current')
upsTrapAlarmGeneralFault = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFault.setStatus('current')
upsTrapAlarmDiagnosticTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailed.setStatus('current')
upsTrapAlarmCommunicationsLost = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLost.setStatus('current')
upsTrapAlarmAwaitingPower = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPower.setStatus('current')
upsTrapAlarmShutdownPending = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelay"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPending.setStatus('current')
upsTrapAlarmShutdownImminent = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminent.setStatus('current')
upsTrapAlarmTestInProgress = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestId"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgress.setStatus('current')
upsTrapAlarmReceptacleOff = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOff.setStatus('current')
upsTrapAlarmHighspeedBusFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailure.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailure.setStatus('current')
upsTrapAlarmConnectivityBusFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailure.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailure.setStatus('current')
upsTrapAlarmCurrentSharingFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailure.setStatus('current')
upsTrapAlarmDCRippleFailure = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailure.setStatus('current')
upsTrapAlarmBatteryBadRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestored.setStatus('current')
upsTrapAlarmOnBatteryRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestored.setStatus('current')
upsTrapAlarmLowBatteryRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestored.setStatus('current')
upsTrapAlarmDepletedBatteryRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestored.setStatus('current')
upsTrapAlarmTempBadRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestored.setStatus('current')
upsTrapAlarmInputBadRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestored.setStatus('current')
upsTrapAlarmOutputBadRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestored.setStatus('current')
upsTrapAlarmOutputOverloadRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestored.setStatus('current')
upsTrapAlarmOnBypassRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestored.setStatus('current')
upsTrapAlarmBypassBadRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestored.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestored.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestored.setStatus('current')
upsTrapAlarmChargerFailedRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestored.setStatus('current')
upsTrapAlarmUpsOutputOn = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOn.setStatus('current')
upsTrapAlarmUpsSystemOn = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOn.setStatus('current')
upsTrapAlarmFanFailureRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestored.setStatus('current')
upsTrapAlarmFuseFailureRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestored.setStatus('current')
upsTrapAlarmGeneralFaultRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestored.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestored.setStatus('current')
upsTrapAlarmCommunicationsLostRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestored.setStatus('current')
upsTrapAlarmAwaitingPowerRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestored.setStatus('current')
upsTrapAlarmShutdownPendingRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelay"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestored.setStatus('current')
upsTrapAlarmShutdownImminentRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestored.setStatus('current')
upsTrapAlarmTestInProgressRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestId"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestored.setStatus('current')
upsTrapAlarmReceptacleOn = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOn.setStatus('current')
upsTrapAlarmHighspeedBusRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestored.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestored.setStatus('current')
upsTrapAlarmConnectivityBusRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestored.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestored.setStatus('current')
upsTrapAlarmCurrentSharingRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestored.setStatus('current')
upsTrapAlarmDCRippleRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestored.setStatus('current')
upsTrapAlarmValueLow = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLow.setStatus('current')
upsTrapAlarmValueHigh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHigh.setStatus('current')
upsTrapAlarmValueLowRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestored.setStatus('current')
upsTrapAlarmValueHighRestored = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestored.setStatus('current')
upsDiagnosticBusJACommunicationStatus = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatus.setStatus('current')
upsDiagnosticBusJBCommunicationStatus = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatus.setStatus('current')
upsDiagnosticBatteryLifetime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetime.setStatus('current')
upsDiagnosticFansLifetime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetime.setStatus('current')
upsDiagnosticDCcapacitorsLifetime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetime.setStatus('current')
upsDiagnosticACcapacitorsLifetime = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetime.setStatus('current')
upsDiagnosticGlobalServiceCheck = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheck.setStatus('current')
upsIdentManufacturerfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturerfirst.setStatus('current')
upsIdentModelfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelfirst.setStatus('current')
upsIdentUPSSoftwareVersionfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionfirst.setStatus('current')
upsIdentAgentSoftwareVersionfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionfirst.setStatus('current')
upsIdentNamefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamefirst.setStatus('current')
upsIdentAttachedDevicesfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicesfirst.setStatus('current')
upsIdentUPSSerialNumberfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumberfirst.setStatus('current')
upsIdentComProtVersionfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionfirst.setStatus('current')
upsIdentOperatingTimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 1, 9), NonNegativeInteger32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimefirst.setStatus('current')
upsBatteryStatusfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatusfirst.setStatus('current')
upsSecondsOnBatteryfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 2), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatteryfirst.setStatus('current')
upsEstimatedMinutesRemainingfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingfirst.setStatus('current')
upsEstimatedChargeRemainingfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingfirst.setStatus('current')
upsBatteryVoltagefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagefirst.setStatus('current')
upsBatteryCurrentfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentfirst.setStatus('current')
upsBatteryTemperaturefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturefirst.setStatus('current')
upsBatteryRipplefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplefirst.setStatus('current')
upsInputLineBadsfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadsfirst.setStatus('current')
upsInputNumLinesfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinesfirst.setStatus('current')
upsInputFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3), )
if mibBuilder.loadTexts: upsInputFirstTable.setStatus('current')
upsInputFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexfirst"))
if mibBuilder.loadTexts: upsInputFirstEntry.setStatus('current')
upsInputLineIndexfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexfirst.setStatus('current')
upsInputFrequencyfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencyfirst.setStatus('current')
upsInputVoltagefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagefirst.setStatus('current')
upsInputCurrentfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentfirst.setStatus('current')
upsInputTruePowerfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowerfirst.setStatus('current')
upsInputVoltageMinfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinfirst.setStatus('current')
upsInputVoltageMaxfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxfirst.setStatus('current')
upsOutputSourcefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcefirst.setStatus('current')
upsOutputFrequencyfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencyfirst.setStatus('current')
upsOutputNumLinesfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinesfirst.setStatus('current')
upsOutputFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4), )
if mibBuilder.loadTexts: upsOutputFirstTable.setStatus('current')
upsOutputFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexfirst"))
if mibBuilder.loadTexts: upsOutputFirstEntry.setStatus('current')
upsOutputLineIndexfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexfirst.setStatus('current')
upsOutputVoltagefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagefirst.setStatus('current')
upsOutputCurrentfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentfirst.setStatus('current')
upsOutputPowerfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerfirst.setStatus('current')
upsOutputPercentLoadfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadfirst.setStatus('current')
upsOutputPowerFactorfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorfirst.setStatus('current')
upsOutputPeakCurrentfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentfirst.setStatus('current')
upsOutputShareCurrentfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentfirst.setStatus('current')
upsBypassFrequencyfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencyfirst.setStatus('current')
upsBypassNumLinesfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinesfirst.setStatus('current')
upsBypassFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 3), )
if mibBuilder.loadTexts: upsBypassFirstTable.setStatus('current')
upsBypassFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexfirst"))
if mibBuilder.loadTexts: upsBypassFirstEntry.setStatus('current')
upsBypassLineIndexfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexfirst.setStatus('current')
upsBypassVoltagefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagefirst.setStatus('current')
upsBypassCurrentfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentfirst.setStatus('current')
upsBypassPowerfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowerfirst.setStatus('current')
upsAlarmsPresentfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentfirst.setStatus('current')
upsAlarmFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 2), )
if mibBuilder.loadTexts: upsAlarmFirstTable.setStatus('current')
upsAlarmFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdfirst"))
if mibBuilder.loadTexts: upsAlarmFirstEntry.setStatus('current')
upsAlarmIdfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdfirst.setStatus('current')
upsAlarmDescrfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrfirst.setStatus('current')
upsAlarmTimefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimefirst.setStatus('current')
upsAlarmBatteryBadfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadfirst.setStatus('current')
upsAlarmOnBatteryfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatteryfirst.setStatus('current')
upsAlarmLowBatteryfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatteryfirst.setStatus('current')
upsAlarmDepletedBatteryfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatteryfirst.setStatus('current')
upsAlarmTempBadfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadfirst.setStatus('current')
upsAlarmInputBadfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadfirst.setStatus('current')
upsAlarmOutputBadfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadfirst.setStatus('current')
upsAlarmOutputOverloadfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadfirst.setStatus('current')
upsAlarmOnBypassfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypassfirst.setStatus('current')
upsAlarmBypassBadfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadfirst.setStatus('current')
upsAlarmOutputOffAsRequestedfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedfirst.setStatus('current')
upsAlarmUpsOffAsRequestedfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedfirst.setStatus('current')
upsAlarmChargerFailedfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedfirst.setStatus('current')
upsAlarmUpsOutputOfffirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOfffirst.setStatus('current')
upsAlarmUpsSystemOfffirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOfffirst.setStatus('current')
upsAlarmFanFailurefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailurefirst.setStatus('current')
upsAlarmFuseFailurefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailurefirst.setStatus('current')
upsAlarmGeneralFaultfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultfirst.setStatus('current')
upsAlarmDiagnosticTestFailedfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedfirst.setStatus('current')
upsAlarmCommunicationsLostfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostfirst.setStatus('current')
upsAlarmAwaitingPowerfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowerfirst.setStatus('current')
upsAlarmShutdownPendingfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingfirst.setStatus('current')
upsAlarmShutdownImminentfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentfirst.setStatus('current')
upsAlarmTestInProgressfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgressfirst.setStatus('current')
upsAlarmReceptacleOfffirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOfffirst.setStatus('current')
upsAlarmHighSpeedBusFailurefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailurefirst.setStatus('current')
upsAlarmHighSpeedBusJACRCFailurefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailurefirst.setStatus('current')
upsAlarmConnectivityBusFailurefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailurefirst.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailurefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailurefirst.setStatus('current')
upsAlarmCurrentSharingfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingfirst.setStatus('current')
upsAlarmDCRipplefirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplefirst.setStatus('current')
upsAlarmMaskAfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAfirst.setStatus('current')
upsTestIdfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdfirst.setStatus('current')
upsTestSpinLockfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockfirst.setStatus('current')
upsTestResultsSummaryfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummaryfirst.setStatus('current')
upsTestResultsDetailfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailfirst.setStatus('current')
upsTestStartTimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimefirst.setStatus('current')
upsTestElapsedTimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimefirst.setStatus('current')
upsTestNoTestsInitiatedfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedfirst.setStatus('current')
upsTestAbortTestInProgressfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgressfirst.setStatus('current')
upsTestGeneralSystemsTestfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestfirst.setStatus('current')
upsTestQuickBatteryTestfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestfirst.setStatus('current')
upsTestDeepBatteryCalibrationfirst = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationfirst.setStatus('current')
upsShutdownTypefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypefirst.setStatus('current')
upsShutdownAfterDelayfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelayfirst.setStatus('current')
upsStartupAfterDelayfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelayfirst.setStatus('current')
upsRebootWithDurationfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationfirst.setStatus('current')
upsAutoRestartfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartfirst.setStatus('current')
upsReceptaclesNumfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumfirst.setStatus('current')
upsReceptacleFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleFirstTable.setStatus('current')
upsReceptacleFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexfirst"))
if mibBuilder.loadTexts: upsReceptacleFirstEntry.setStatus('current')
upsReceptacleLineIndexfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexfirst.setStatus('current')
upsReceptacleOnOfffirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOfffirst.setStatus('current')
upsUPSModefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModefirst.setStatus('current')
upsRectifierOnOfffirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOfffirst.setStatus('current')
upsBatteryChargeMethodfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodfirst.setStatus('current')
upsInverterOnOfffirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOfffirst.setStatus('current')
upsBypassOnOfffirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOfffirst.setStatus('current')
upsLoadSourcefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcefirst.setStatus('current')
upsConfigInputVoltagefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagefirst.setStatus('current')
upsConfigInputFreqfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqfirst.setStatus('current')
upsConfigOutputVoltagefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagefirst.setStatus('current')
upsConfigOutputFreqfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqfirst.setStatus('current')
upsConfigOutputVAfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAfirst.setStatus('current')
upsConfigOutputPowerfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowerfirst.setStatus('current')
upsConfigLowBattTimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimefirst.setStatus('current')
upsConfigAudibleStatusfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatusfirst.setStatus('current')
upsConfigLowVoltageTransferPointfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointfirst.setStatus('current')
upsConfigHighVoltageTransferPointfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointfirst.setStatus('current')
upsConfigBatteryCapacityfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacityfirst.setStatus('current')
upsConfigBatteryChargeCurrentfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentfirst.setStatus('current')
upsConfigNoLoadShutdownfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownfirst.setStatus('current')
upsConfigStartDelayfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelayfirst.setStatus('current')
upsEventGetNextfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextfirst.setStatus('current')
upsEventGetPreviousfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviousfirst.setStatus('current')
upsEventSetStartingTimeStampfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampfirst.setStatus('current')
upsEventRetreiveCurrentTimeStampfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampfirst.setStatus('current')
upsEventTableSizefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizefirst.setStatus('current')
upsEventFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 6), )
if mibBuilder.loadTexts: upsEventFirstTable.setStatus('current')
upsEventFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexfirst"))
if mibBuilder.loadTexts: upsEventFirstEntry.setStatus('current')
upsEventLineIndexfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexfirst.setStatus('current')
upsEventCodefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodefirst.setStatus('current')
upsEventStatusfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatusfirst.setStatus('current')
upsEventTimefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimefirst.setStatus('current')
upsParametersReadfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadfirst.setStatus('current')
upsParametersWritefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritefirst.setStatus('current')
upsParametersStartAddressfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddressfirst.setStatus('current')
upsParameterTableSizefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizefirst.setStatus('current')
upsParameterFirstTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 11), )
if mibBuilder.loadTexts: upsParameterFirstTable.setStatus('current')
upsParameterFirstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexfirst"))
if mibBuilder.loadTexts: upsParameterFirstEntry.setStatus('current')
upsParameterLineIndexfirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexfirst.setStatus('current')
upsParameterValuefirst = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuefirst.setStatus('current')
upsStatusfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatusfirst.setStatus('current')
upsMainsStatisticsMBfailfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailfirst.setStatus('current')
upsMainsStatisticsMRfailfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailfirst.setStatus('current')
upsMainsStatisticsB2first = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2first.setStatus('current')
upsMainsStatisticsB5first = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5first.setStatus('current')
upsMainsStatisticsB10first = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10first.setStatus('current')
upsMainsStatisticsB200first = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200first.setStatus('current')
upsMainsStatisticsBypRelfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelfirst.setStatus('current')
upsTimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimefirst.setStatus('current')
upsRequestPermissionfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionfirst.setStatus('current')
upsEventGetCodefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodefirst.setStatus('current')
upsEventSpinLockfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockfirst.setStatus('current')
upsParameterSpinLockfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockfirst.setStatus('current')
upsTrapAlarmBatteryBadfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadfirst.setStatus('current')
upsTrapAlarmOnBatteryfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatteryfirst"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryfirst.setStatus('current')
upsTrapAlarmLowBatteryfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryfirst.setStatus('current')
upsTrapAlarmDepletedBatteryfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryfirst.setStatus('current')
upsTrapAlarmTempBadfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadfirst.setStatus('current')
upsTrapAlarmInputBadfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadfirst.setStatus('current')
upsTrapAlarmOutputBadfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadfirst.setStatus('current')
upsTrapAlarmOutputOverloadfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinesfirst"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadfirst"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadfirst.setStatus('current')
upsTrapAlarmOnBypassfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassfirst.setStatus('current')
upsTrapAlarmBypassBadfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadfirst.setStatus('current')
upsTrapAlarmOutputOffAsRequestedfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedfirst.setStatus('current')
upsTrapAlarmUpsOffAsRequestedfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedfirst.setStatus('current')
upsTrapAlarmChargerFailedfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedfirst.setStatus('current')
upsTrapAlarmUpsOutputOfffirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOfffirst.setStatus('current')
upsTrapAlarmUpsSystemOfffirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOfffirst.setStatus('current')
upsTrapAlarmFanFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailurefirst.setStatus('current')
upsTrapAlarmFuseFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailurefirst.setStatus('current')
upsTrapAlarmGeneralFaultfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultfirst.setStatus('current')
upsTrapAlarmDiagnosticTestFailedfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedfirst.setStatus('current')
upsTrapAlarmCommunicationsLostfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostfirst.setStatus('current')
upsTrapAlarmAwaitingPowerfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerfirst.setStatus('current')
upsTrapAlarmShutdownPendingfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayfirst"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingfirst.setStatus('current')
upsTrapAlarmShutdownImminentfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentfirst.setStatus('current')
upsTrapAlarmTestInProgressfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdfirst"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressfirst.setStatus('current')
upsTrapAlarmReceptacleOfffirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOfffirst.setStatus('current')
upsTrapAlarmHighspeedBusFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailurefirst.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailurefirst.setStatus('current')
upsTrapAlarmConnectivityBusFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailurefirst.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailurefirst.setStatus('current')
upsTrapAlarmCurrentSharingFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailurefirst.setStatus('current')
upsTrapAlarmDCRippleFailurefirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailurefirst.setStatus('current')
upsTrapAlarmBatteryBadRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredfirst.setStatus('current')
upsTrapAlarmOnBatteryRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredfirst.setStatus('current')
upsTrapAlarmLowBatteryRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredfirst.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredfirst.setStatus('current')
upsTrapAlarmTempBadRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredfirst.setStatus('current')
upsTrapAlarmInputBadRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredfirst.setStatus('current')
upsTrapAlarmOutputBadRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredfirst.setStatus('current')
upsTrapAlarmOutputOverloadRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredfirst.setStatus('current')
upsTrapAlarmOnBypassRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredfirst.setStatus('current')
upsTrapAlarmBypassBadRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredfirst.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredfirst.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredfirst.setStatus('current')
upsTrapAlarmChargerFailedRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredfirst.setStatus('current')
upsTrapAlarmUpsOutputOnfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnfirst.setStatus('current')
upsTrapAlarmUpsSystemOnfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnfirst.setStatus('current')
upsTrapAlarmFanFailureRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredfirst.setStatus('current')
upsTrapAlarmFuseFailureRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredfirst.setStatus('current')
upsTrapAlarmGeneralFaultRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredfirst.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredfirst.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredfirst.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredfirst.setStatus('current')
upsTrapAlarmShutdownPendingRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayfirst"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredfirst.setStatus('current')
upsTrapAlarmShutdownImminentRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredfirst.setStatus('current')
upsTrapAlarmTestInProgressRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdfirst"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredfirst.setStatus('current')
upsTrapAlarmReceptacleOnfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnfirst.setStatus('current')
upsTrapAlarmHighspeedBusRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestoredfirst.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestoredfirst.setStatus('current')
upsTrapAlarmConnectivityBusRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestoredfirst.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredfirst.setStatus('current')
upsTrapAlarmCurrentSharingRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredfirst.setStatus('current')
upsTrapAlarmDCRippleRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredfirst.setStatus('current')
upsTrapAlarmValueLowfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowfirst.setStatus('current')
upsTrapAlarmValueHighfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighfirst.setStatus('current')
upsTrapAlarmValueLowRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredfirst.setStatus('current')
upsTrapAlarmValueHighRestoredfirst = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredfirst.setStatus('current')
upsDiagnosticBusJACommunicationStatusfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatusfirst.setStatus('current')
upsDiagnosticBusJBCommunicationStatusfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatusfirst.setStatus('current')
upsDiagnosticBatteryLifetimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimefirst.setStatus('current')
upsDiagnosticFansLifetimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimefirst.setStatus('current')
upsDiagnosticDCcapacitorsLifetimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimefirst.setStatus('current')
upsDiagnosticACcapacitorsLifetimefirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimefirst.setStatus('current')
upsDiagnosticGlobalServiceCheckfirst = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 11, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckfirst.setStatus('current')
upsIdentManufacturersecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturersecond.setStatus('current')
upsIdentModelsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelsecond.setStatus('current')
upsIdentUPSSoftwareVersionsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionsecond.setStatus('current')
upsIdentAgentSoftwareVersionsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionsecond.setStatus('current')
upsIdentNamesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamesecond.setStatus('current')
upsIdentAttachedDevicessecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicessecond.setStatus('current')
upsIdentUPSSerialNumbersecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumbersecond.setStatus('current')
upsIdentComProtVersionsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionsecond.setStatus('current')
upsIdentOperatingTimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 1, 9), NonNegativeInteger32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimesecond.setStatus('current')
upsBatteryStatussecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatussecond.setStatus('current')
upsSecondsOnBatterysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 2), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatterysecond.setStatus('current')
upsEstimatedMinutesRemainingsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingsecond.setStatus('current')
upsEstimatedChargeRemainingsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingsecond.setStatus('current')
upsBatteryVoltagesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagesecond.setStatus('current')
upsBatteryCurrentsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentsecond.setStatus('current')
upsBatteryTemperaturesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturesecond.setStatus('current')
upsBatteryRipplesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplesecond.setStatus('current')
upsInputLineBadssecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadssecond.setStatus('current')
upsInputNumLinessecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinessecond.setStatus('current')
upsInputSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3), )
if mibBuilder.loadTexts: upsInputSecondTable.setStatus('current')
upsInputSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexsecond"))
if mibBuilder.loadTexts: upsInputSecondEntry.setStatus('current')
upsInputLineIndexsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexsecond.setStatus('current')
upsInputFrequencysecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencysecond.setStatus('current')
upsInputVoltagesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagesecond.setStatus('current')
upsInputCurrentsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentsecond.setStatus('current')
upsInputTruePowersecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowersecond.setStatus('current')
upsInputVoltageMinsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinsecond.setStatus('current')
upsInputVoltageMaxsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxsecond.setStatus('current')
upsOutputSourcesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcesecond.setStatus('current')
upsOutputFrequencysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencysecond.setStatus('current')
upsOutputNumLinessecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinessecond.setStatus('current')
upsOutputSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4), )
if mibBuilder.loadTexts: upsOutputSecondTable.setStatus('current')
upsOutputSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexsecond"))
if mibBuilder.loadTexts: upsOutputSecondEntry.setStatus('current')
upsOutputLineIndexsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexsecond.setStatus('current')
upsOutputVoltagesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagesecond.setStatus('current')
upsOutputCurrentsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentsecond.setStatus('current')
upsOutputPowersecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowersecond.setStatus('current')
upsOutputPercentLoadsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadsecond.setStatus('current')
upsOutputPowerFactorsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorsecond.setStatus('current')
upsOutputPeakCurrentsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentsecond.setStatus('current')
upsOutputShareCurrentsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentsecond.setStatus('current')
upsBypassFrequencysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencysecond.setStatus('current')
upsBypassNumLinessecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinessecond.setStatus('current')
upsBypassSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 3), )
if mibBuilder.loadTexts: upsBypassSecondTable.setStatus('current')
upsBypassSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexsecond"))
if mibBuilder.loadTexts: upsBypassSecondEntry.setStatus('current')
upsBypassLineIndexsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexsecond.setStatus('current')
upsBypassVoltagesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagesecond.setStatus('current')
upsBypassCurrentsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentsecond.setStatus('current')
upsBypassPowersecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowersecond.setStatus('current')
upsAlarmsPresentsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentsecond.setStatus('current')
upsAlarmSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 2), )
if mibBuilder.loadTexts: upsAlarmSecondTable.setStatus('current')
upsAlarmSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdsecond"))
if mibBuilder.loadTexts: upsAlarmSecondEntry.setStatus('current')
upsAlarmIdsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdsecond.setStatus('current')
upsAlarmDescrsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrsecond.setStatus('current')
upsAlarmTimesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimesecond.setStatus('current')
upsAlarmBatteryBadsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadsecond.setStatus('current')
upsAlarmOnBatterysecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatterysecond.setStatus('current')
upsAlarmLowBatterysecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatterysecond.setStatus('current')
upsAlarmDepletedBatterysecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatterysecond.setStatus('current')
upsAlarmTempBadsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadsecond.setStatus('current')
upsAlarmInputBadsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadsecond.setStatus('current')
upsAlarmOutputBadsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadsecond.setStatus('current')
upsAlarmOutputOverloadsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadsecond.setStatus('current')
upsAlarmOnBypasssecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypasssecond.setStatus('current')
upsAlarmBypassBadsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadsecond.setStatus('current')
upsAlarmOutputOffAsRequestedsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedsecond.setStatus('current')
upsAlarmUpsOffAsRequestedsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedsecond.setStatus('current')
upsAlarmChargerFailedsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedsecond.setStatus('current')
upsAlarmUpsOutputOffsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOffsecond.setStatus('current')
upsAlarmUpsSystemOffsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOffsecond.setStatus('current')
upsAlarmFanFailuresecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailuresecond.setStatus('current')
upsAlarmFuseFailuresecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailuresecond.setStatus('current')
upsAlarmGeneralFaultsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultsecond.setStatus('current')
upsAlarmDiagnosticTestFailedsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedsecond.setStatus('current')
upsAlarmCommunicationsLostsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostsecond.setStatus('current')
upsAlarmAwaitingPowersecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowersecond.setStatus('current')
upsAlarmShutdownPendingsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingsecond.setStatus('current')
upsAlarmShutdownImminentsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentsecond.setStatus('current')
upsAlarmTestInProgresssecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgresssecond.setStatus('current')
upsAlarmReceptacleOffsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOffsecond.setStatus('current')
upsAlarmHighSpeedBusFailuresecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailuresecond.setStatus('current')
upsAlarmHighSpeedBusJACRCFailuresecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailuresecond.setStatus('current')
upsAlarmConnectivityBusFailuresecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailuresecond.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailuresecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailuresecond.setStatus('current')
upsAlarmCurrentSharingsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingsecond.setStatus('current')
upsAlarmDCRipplesecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplesecond.setStatus('current')
upsAlarmMaskAsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAsecond.setStatus('current')
upsTestIdsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdsecond.setStatus('current')
upsTestSpinLocksecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLocksecond.setStatus('current')
upsTestResultsSummarysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummarysecond.setStatus('current')
upsTestResultsDetailsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailsecond.setStatus('current')
upsTestStartTimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimesecond.setStatus('current')
upsTestElapsedTimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimesecond.setStatus('current')
upsTestNoTestsInitiatedsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedsecond.setStatus('current')
upsTestAbortTestInProgresssecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgresssecond.setStatus('current')
upsTestGeneralSystemsTestsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestsecond.setStatus('current')
upsTestQuickBatteryTestsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestsecond.setStatus('current')
upsTestDeepBatteryCalibrationsecond = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationsecond.setStatus('current')
upsShutdownTypesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypesecond.setStatus('current')
upsShutdownAfterDelaysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelaysecond.setStatus('current')
upsStartupAfterDelaysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelaysecond.setStatus('current')
upsRebootWithDurationsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationsecond.setStatus('current')
upsAutoRestartsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartsecond.setStatus('current')
upsReceptaclesNumsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumsecond.setStatus('current')
upsReceptacleSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleSecondTable.setStatus('current')
upsReceptacleSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexsecond"))
if mibBuilder.loadTexts: upsReceptacleSecondEntry.setStatus('current')
upsReceptacleLineIndexsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexsecond.setStatus('current')
upsReceptacleOnOffsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOffsecond.setStatus('current')
upsUPSModesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModesecond.setStatus('current')
upsRectifierOnOffsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOffsecond.setStatus('current')
upsBatteryChargeMethodsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodsecond.setStatus('current')
upsInverterOnOffsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOffsecond.setStatus('current')
upsBypassOnOffsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOffsecond.setStatus('current')
upsLoadSourcesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcesecond.setStatus('current')
upsConfigInputVoltagesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagesecond.setStatus('current')
upsConfigInputFreqsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqsecond.setStatus('current')
upsConfigOutputVoltagesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagesecond.setStatus('current')
upsConfigOutputFreqsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqsecond.setStatus('current')
upsConfigOutputVAsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAsecond.setStatus('current')
upsConfigOutputPowersecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowersecond.setStatus('current')
upsConfigLowBattTimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimesecond.setStatus('current')
upsConfigAudibleStatussecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatussecond.setStatus('current')
upsConfigLowVoltageTransferPointsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointsecond.setStatus('current')
upsConfigHighVoltageTransferPointsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointsecond.setStatus('current')
upsConfigBatteryCapacitysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacitysecond.setStatus('current')
upsConfigBatteryChargeCurrentsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentsecond.setStatus('current')
upsConfigNoLoadShutdownsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownsecond.setStatus('current')
upsConfigStartDelaysecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelaysecond.setStatus('current')
upsEventGetNextsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextsecond.setStatus('current')
upsEventGetPrevioussecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPrevioussecond.setStatus('current')
upsEventSetStartingTimeStampsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampsecond.setStatus('current')
upsEventRetreiveCurrentTimeStampsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampsecond.setStatus('current')
upsEventTableSizesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizesecond.setStatus('current')
upsEventSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 6), )
if mibBuilder.loadTexts: upsEventSecondTable.setStatus('current')
upsEventSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexsecond"))
if mibBuilder.loadTexts: upsEventSecondEntry.setStatus('current')
upsEventLineIndexsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexsecond.setStatus('current')
upsEventCodesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodesecond.setStatus('current')
upsEventStatussecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatussecond.setStatus('current')
upsEventTimesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimesecond.setStatus('current')
upsParametersReadsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadsecond.setStatus('current')
upsParametersWritesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritesecond.setStatus('current')
upsParametersStartAddresssecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddresssecond.setStatus('current')
upsParameterTableSizesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizesecond.setStatus('current')
upsParameterSecondTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 11), )
if mibBuilder.loadTexts: upsParameterSecondTable.setStatus('current')
upsParameterSecondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexsecond"))
if mibBuilder.loadTexts: upsParameterSecondEntry.setStatus('current')
upsParameterLineIndexsecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexsecond.setStatus('current')
upsParameterValuesecond = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuesecond.setStatus('current')
upsStatussecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatussecond.setStatus('current')
upsMainsStatisticsMBfailsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailsecond.setStatus('current')
upsMainsStatisticsMRfailsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailsecond.setStatus('current')
upsMainsStatisticsB2second = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2second.setStatus('current')
upsMainsStatisticsB5second = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5second.setStatus('current')
upsMainsStatisticsB10second = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10second.setStatus('current')
upsMainsStatisticsB200second = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200second.setStatus('current')
upsMainsStatisticsBypRelsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelsecond.setStatus('current')
upsTimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimesecond.setStatus('current')
upsRequestPermissionsecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionsecond.setStatus('current')
upsEventGetCodesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodesecond.setStatus('current')
upsEventSpinLocksecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLocksecond.setStatus('current')
upsParameterSpinLocksecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLocksecond.setStatus('current')
upsTrapAlarmBatteryBadsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadsecond.setStatus('current')
upsTrapAlarmOnBatterysecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatterysecond"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatterysecond.setStatus('current')
upsTrapAlarmLowBatterysecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatterysecond.setStatus('current')
upsTrapAlarmDepletedBatterysecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatterysecond.setStatus('current')
upsTrapAlarmTempBadsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadsecond.setStatus('current')
upsTrapAlarmInputBadsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadsecond.setStatus('current')
upsTrapAlarmOutputBadsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadsecond.setStatus('current')
upsTrapAlarmOutputOverloadsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinessecond"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadsecond"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadsecond.setStatus('current')
upsTrapAlarmOnBypasssecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypasssecond.setStatus('current')
upsTrapAlarmBypassBadsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadsecond.setStatus('current')
upsTrapAlarmOutputOffAsRequestedsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedsecond.setStatus('current')
upsTrapAlarmUpsOffAsRequestedsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedsecond.setStatus('current')
upsTrapAlarmChargerFailedsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedsecond.setStatus('current')
upsTrapAlarmUpsOutputOffsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOffsecond.setStatus('current')
upsTrapAlarmUpsSystemOffsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOffsecond.setStatus('current')
upsTrapAlarmFanFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailuresecond.setStatus('current')
upsTrapAlarmFuseFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailuresecond.setStatus('current')
upsTrapAlarmGeneralFaultsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultsecond.setStatus('current')
upsTrapAlarmDiagnosticTestFailedsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedsecond.setStatus('current')
upsTrapAlarmCommunicationsLostsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostsecond.setStatus('current')
upsTrapAlarmAwaitingPowersecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowersecond.setStatus('current')
upsTrapAlarmShutdownPendingsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelaysecond"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingsecond.setStatus('current')
upsTrapAlarmShutdownImminentsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentsecond.setStatus('current')
upsTrapAlarmTestInProgresssecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdsecond"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgresssecond.setStatus('current')
upsTrapAlarmReceptacleOffsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOffsecond.setStatus('current')
upsTrapAlarmHighspeedBusFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailuresecond.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailuresecond.setStatus('current')
upsTrapAlarmConnectivityBusFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailuresecond.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailuresecond.setStatus('current')
upsTrapAlarmCurrentSharingFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailuresecond.setStatus('current')
upsTrapAlarmDCRippleFailuresecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailuresecond.setStatus('current')
upsTrapAlarmBatteryBadRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredsecond.setStatus('current')
upsTrapAlarmOnBatteryRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredsecond.setStatus('current')
upsTrapAlarmLowBatteryRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredsecond.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredsecond.setStatus('current')
upsTrapAlarmTempBadRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredsecond.setStatus('current')
upsTrapAlarmInputBadRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredsecond.setStatus('current')
upsTrapAlarmOutputBadRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredsecond.setStatus('current')
upsTrapAlarmOutputOverloadRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredsecond.setStatus('current')
upsTrapAlarmOnBypassRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredsecond.setStatus('current')
upsTrapAlarmBypassBadRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredsecond.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredsecond.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredsecond.setStatus('current')
upsTrapAlarmChargerFailedRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredsecond.setStatus('current')
upsTrapAlarmUpsOutputOnsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnsecond.setStatus('current')
upsTrapAlarmUpsSystemOnsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnsecond.setStatus('current')
upsTrapAlarmFanFailureRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredsecond.setStatus('current')
upsTrapAlarmFuseFailureRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredsecond.setStatus('current')
upsTrapAlarmGeneralFaultRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredsecond.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredsecond.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredsecond.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredsecond.setStatus('current')
upsTrapAlarmShutdownPendingRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelaysecond"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredsecond.setStatus('current')
upsTrapAlarmShutdownImminentRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredsecond.setStatus('current')
upsTrapAlarmTestInProgressRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdsecond"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredsecond.setStatus('current')
upsTrapAlarmReceptacleOnsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnsecond.setStatus('current')
upsTrapAlarmHighspeedBusRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestoredsecond.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestoredsecond.setStatus('current')
upsTrapAlarmConnectivityBusRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestoredsecond.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredsecond.setStatus('current')
upsTrapAlarmCurrentSharingRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredsecond.setStatus('current')
upsTrapAlarmDCRippleRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredsecond.setStatus('current')
upsTrapAlarmValueLowsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowsecond.setStatus('current')
upsTrapAlarmValueHighsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighsecond.setStatus('current')
upsTrapAlarmValueLowRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredsecond.setStatus('current')
upsTrapAlarmValueHighRestoredsecond = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredsecond.setStatus('current')
upsDiagnosticBusJACommunicationStatussecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatussecond.setStatus('current')
upsDiagnosticBusJBCommunicationStatussecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatussecond.setStatus('current')
upsDiagnosticBatteryLifetimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimesecond.setStatus('current')
upsDiagnosticFansLifetimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimesecond.setStatus('current')
upsDiagnosticDCcapacitorsLifetimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimesecond.setStatus('current')
upsDiagnosticACcapacitorsLifetimesecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimesecond.setStatus('current')
upsDiagnosticGlobalServiceChecksecond = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 12, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceChecksecond.setStatus('current')
upsIdentManufacturerthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturerthird.setStatus('current')
upsIdentModelthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelthird.setStatus('current')
upsIdentUPSSoftwareVersionthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionthird.setStatus('current')
upsIdentAgentSoftwareVersionthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionthird.setStatus('current')
upsIdentNamethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamethird.setStatus('current')
upsIdentAttachedDevicesthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicesthird.setStatus('current')
upsIdentUPSSerialNumberthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumberthird.setStatus('current')
upsIdentComProtVersionthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionthird.setStatus('current')
upsIdentOperatingTimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 1, 9), NonNegativeInteger32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimethird.setStatus('current')
upsBatteryStatusthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatusthird.setStatus('current')
upsSecondsOnBatterythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 2), Integer32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatterythird.setStatus('current')
upsEstimatedMinutesRemainingthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingthird.setStatus('current')
upsEstimatedChargeRemainingthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingthird.setStatus('current')
upsBatteryVoltagethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagethird.setStatus('current')
upsBatteryCurrentthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentthird.setStatus('current')
upsBatteryTemperaturethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturethird.setStatus('current')
upsBatteryRipplethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplethird.setStatus('current')
upsInputLineBadsthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadsthird.setStatus('current')
upsInputNumLinesthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinesthird.setStatus('current')
upsInputThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3), )
if mibBuilder.loadTexts: upsInputThirdTable.setStatus('current')
upsInputThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexthird"))
if mibBuilder.loadTexts: upsInputThirdEntry.setStatus('current')
upsInputLineIndexthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexthird.setStatus('current')
upsInputFrequencythird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencythird.setStatus('current')
upsInputVoltagethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagethird.setStatus('current')
upsInputCurrentthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentthird.setStatus('current')
upsInputTruePowerthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowerthird.setStatus('current')
upsInputVoltageMinthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinthird.setStatus('current')
upsInputVoltageMaxthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxthird.setStatus('current')
upsOutputSourcethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcethird.setStatus('current')
upsOutputFrequencythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencythird.setStatus('current')
upsOutputNumLinesthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinesthird.setStatus('current')
upsOutputThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4), )
if mibBuilder.loadTexts: upsOutputThirdTable.setStatus('current')
upsOutputThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexthird"))
if mibBuilder.loadTexts: upsOutputThirdEntry.setStatus('current')
upsOutputLineIndexthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexthird.setStatus('current')
upsOutputVoltagethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagethird.setStatus('current')
upsOutputCurrentthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentthird.setStatus('current')
upsOutputPowerthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerthird.setStatus('current')
upsOutputPercentLoadthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadthird.setStatus('current')
upsOutputPowerFactorthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorthird.setStatus('current')
upsOutputPeakCurrentthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentthird.setStatus('current')
upsOutputShareCurrentthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentthird.setStatus('current')
upsBypassFrequencythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencythird.setStatus('current')
upsBypassNumLinesthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinesthird.setStatus('current')
upsBypassThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 3), )
if mibBuilder.loadTexts: upsBypassThirdTable.setStatus('current')
upsBypassThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexthird"))
if mibBuilder.loadTexts: upsBypassThirdEntry.setStatus('current')
upsBypassLineIndexthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexthird.setStatus('current')
upsBypassVoltagethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagethird.setStatus('current')
upsBypassCurrentthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentthird.setStatus('current')
upsBypassPowerthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowerthird.setStatus('current')
upsAlarmsPresentthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentthird.setStatus('current')
upsAlarmThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 2), )
if mibBuilder.loadTexts: upsAlarmThirdTable.setStatus('current')
upsAlarmThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdthird"))
if mibBuilder.loadTexts: upsAlarmThirdEntry.setStatus('current')
upsAlarmIdthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdthird.setStatus('current')
upsAlarmDescrthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrthird.setStatus('current')
upsAlarmTimethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimethird.setStatus('current')
upsAlarmBatteryBadthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadthird.setStatus('current')
upsAlarmOnBatterythird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatterythird.setStatus('current')
upsAlarmLowBatterythird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatterythird.setStatus('current')
upsAlarmDepletedBatterythird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatterythird.setStatus('current')
upsAlarmTempBadthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadthird.setStatus('current')
upsAlarmInputBadthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadthird.setStatus('current')
upsAlarmOutputBadthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadthird.setStatus('current')
upsAlarmOutputOverloadthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadthird.setStatus('current')
upsAlarmOnBypassthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypassthird.setStatus('current')
upsAlarmBypassBadthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadthird.setStatus('current')
upsAlarmOutputOffAsRequestedthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedthird.setStatus('current')
upsAlarmUpsOffAsRequestedthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedthird.setStatus('current')
upsAlarmChargerFailedthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedthird.setStatus('current')
upsAlarmUpsOutputOffthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOffthird.setStatus('current')
upsAlarmUpsSystemOffthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOffthird.setStatus('current')
upsAlarmFanFailurethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailurethird.setStatus('current')
upsAlarmFuseFailurethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailurethird.setStatus('current')
upsAlarmGeneralFaultthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultthird.setStatus('current')
upsAlarmDiagnosticTestFailedthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedthird.setStatus('current')
upsAlarmCommunicationsLostthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostthird.setStatus('current')
upsAlarmAwaitingPowerthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowerthird.setStatus('current')
upsAlarmShutdownPendingthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingthird.setStatus('current')
upsAlarmShutdownImminentthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentthird.setStatus('current')
upsAlarmTestInProgressthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgressthird.setStatus('current')
upsAlarmReceptacleOffthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOffthird.setStatus('current')
upsAlarmHighSpeedBusFailurethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailurethird.setStatus('current')
upsAlarmHighSpeedBusJACRCFailurethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailurethird.setStatus('current')
upsAlarmConnectivityBusFailurethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailurethird.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailurethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailurethird.setStatus('current')
upsAlarmCurrentSharingthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingthird.setStatus('current')
upsAlarmDCRipplethird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplethird.setStatus('current')
upsAlarmMaskAthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAthird.setStatus('current')
upsTestIdthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdthird.setStatus('current')
upsTestSpinLockthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockthird.setStatus('current')
upsTestResultsSummarythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummarythird.setStatus('current')
upsTestResultsDetailthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailthird.setStatus('current')
upsTestStartTimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimethird.setStatus('current')
upsTestElapsedTimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimethird.setStatus('current')
upsTestNoTestsInitiatedthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedthird.setStatus('current')
upsTestAbortTestInProgressthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgressthird.setStatus('current')
upsTestGeneralSystemsTestthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestthird.setStatus('current')
upsTestQuickBatteryTestthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestthird.setStatus('current')
upsTestDeepBatteryCalibrationthird = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationthird.setStatus('current')
upsShutdownTypethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypethird.setStatus('current')
upsShutdownAfterDelaythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelaythird.setStatus('current')
upsStartupAfterDelaythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelaythird.setStatus('current')
upsRebootWithDurationthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationthird.setStatus('current')
upsAutoRestartthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartthird.setStatus('current')
upsReceptaclesNumthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumthird.setStatus('current')
upsReceptacleThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleThirdTable.setStatus('current')
upsReceptacleThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexthird"))
if mibBuilder.loadTexts: upsReceptacleThirdEntry.setStatus('current')
upsReceptacleLineIndexthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexthird.setStatus('current')
upsReceptacleOnOffthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOffthird.setStatus('current')
upsUPSModethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModethird.setStatus('current')
upsRectifierOnOffthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOffthird.setStatus('current')
upsBatteryChargeMethodthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodthird.setStatus('current')
upsInverterOnOffthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOffthird.setStatus('current')
upsBypassOnOffthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOffthird.setStatus('current')
upsLoadSourcethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcethird.setStatus('current')
upsConfigInputVoltagethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagethird.setStatus('current')
upsConfigInputFreqthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqthird.setStatus('current')
upsConfigOutputVoltagethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagethird.setStatus('current')
upsConfigOutputFreqthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqthird.setStatus('current')
upsConfigOutputVAthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAthird.setStatus('current')
upsConfigOutputPowerthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowerthird.setStatus('current')
upsConfigLowBattTimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimethird.setStatus('current')
upsConfigAudibleStatusthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatusthird.setStatus('current')
upsConfigLowVoltageTransferPointthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointthird.setStatus('current')
upsConfigHighVoltageTransferPointthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointthird.setStatus('current')
upsConfigBatteryCapacitythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacitythird.setStatus('current')
upsConfigBatteryChargeCurrentthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentthird.setStatus('current')
upsConfigNoLoadShutdownthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownthird.setStatus('current')
upsConfigStartDelaythird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelaythird.setStatus('current')
upsEventGetNextthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextthird.setStatus('current')
upsEventGetPreviousthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviousthird.setStatus('current')
upsEventSetStartingTimeStampthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampthird.setStatus('current')
upsEventRetreiveCurrentTimeStampthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampthird.setStatus('current')
upsEventTableSizethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizethird.setStatus('current')
upsEventThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 6), )
if mibBuilder.loadTexts: upsEventThirdTable.setStatus('current')
upsEventThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexthird"))
if mibBuilder.loadTexts: upsEventThirdEntry.setStatus('current')
upsEventLineIndexthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexthird.setStatus('current')
upsEventCodethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodethird.setStatus('current')
upsEventStatusthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatusthird.setStatus('current')
upsEventTimethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimethird.setStatus('current')
upsParametersReadthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadthird.setStatus('current')
upsParametersWritethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritethird.setStatus('current')
upsParametersStartAddressthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddressthird.setStatus('current')
upsParameterTableSizethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizethird.setStatus('current')
upsParameterThirdTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 11), )
if mibBuilder.loadTexts: upsParameterThirdTable.setStatus('current')
upsParameterThirdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexthird"))
if mibBuilder.loadTexts: upsParameterThirdEntry.setStatus('current')
upsParameterLineIndexthird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexthird.setStatus('current')
upsParameterValuethird = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuethird.setStatus('current')
upsStatusthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatusthird.setStatus('current')
upsMainsStatisticsMBfailthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailthird.setStatus('current')
upsMainsStatisticsMRfailthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailthird.setStatus('current')
upsMainsStatisticsB2third = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2third.setStatus('current')
upsMainsStatisticsB5third = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5third.setStatus('current')
upsMainsStatisticsB10third = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10third.setStatus('current')
upsMainsStatisticsB200third = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200third.setStatus('current')
upsMainsStatisticsBypRelthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelthird.setStatus('current')
upsTimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimethird.setStatus('current')
upsRequestPermissionthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionthird.setStatus('current')
upsEventGetCodethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodethird.setStatus('current')
upsEventSpinLockthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockthird.setStatus('current')
upsParameterSpinLockthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockthird.setStatus('current')
upsTrapAlarmBatteryBadthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadthird.setStatus('current')
upsTrapAlarmOnBatterythird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatterythird"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatterythird.setStatus('current')
upsTrapAlarmLowBatterythird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatterythird.setStatus('current')
upsTrapAlarmDepletedBatterythird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatterythird.setStatus('current')
upsTrapAlarmTempBadthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadthird.setStatus('current')
upsTrapAlarmInputBadthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadthird.setStatus('current')
upsTrapAlarmOutputBadthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadthird.setStatus('current')
upsTrapAlarmOutputOverloadthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinesthird"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadthird"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadthird.setStatus('current')
upsTrapAlarmOnBypassthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassthird.setStatus('current')
upsTrapAlarmBypassBadthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadthird.setStatus('current')
upsTrapAlarmOutputOffAsRequestedthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedthird.setStatus('current')
upsTrapAlarmUpsOffAsRequestedthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedthird.setStatus('current')
upsTrapAlarmChargerFailedthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedthird.setStatus('current')
upsTrapAlarmUpsOutputOffthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOffthird.setStatus('current')
upsTrapAlarmUpsSystemOffthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOffthird.setStatus('current')
upsTrapAlarmFanFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailurethird.setStatus('current')
upsTrapAlarmFuseFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailurethird.setStatus('current')
upsTrapAlarmGeneralFaultthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultthird.setStatus('current')
upsTrapAlarmDiagnosticTestFailedthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedthird.setStatus('current')
upsTrapAlarmCommunicationsLostthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostthird.setStatus('current')
upsTrapAlarmAwaitingPowerthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerthird.setStatus('current')
upsTrapAlarmShutdownPendingthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelaythird"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingthird.setStatus('current')
upsTrapAlarmShutdownImminentthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentthird.setStatus('current')
upsTrapAlarmTestInProgressthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdthird"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressthird.setStatus('current')
upsTrapAlarmReceptacleOffthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOffthird.setStatus('current')
upsTrapAlarmHighspeedBusFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailurethird.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailurethird.setStatus('current')
upsTrapAlarmConnectivityBusFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailurethird.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailurethird.setStatus('current')
upsTrapAlarmCurrentSharingFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailurethird.setStatus('current')
upsTrapAlarmDCRippleFailurethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailurethird.setStatus('current')
upsTrapAlarmBatteryBadRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredthird.setStatus('current')
upsTrapAlarmOnBatteryRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredthird.setStatus('current')
upsTrapAlarmLowBatteryRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredthird.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredthird.setStatus('current')
upsTrapAlarmTempBadRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredthird.setStatus('current')
upsTrapAlarmInputBadRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredthird.setStatus('current')
upsTrapAlarmOutputBadRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredthird.setStatus('current')
upsTrapAlarmOutputOverloadRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredthird.setStatus('current')
upsTrapAlarmOnBypassRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredthird.setStatus('current')
upsTrapAlarmBypassBadRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredthird.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredthird.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredthird.setStatus('current')
upsTrapAlarmChargerFailedRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredthird.setStatus('current')
upsTrapAlarmUpsOutputOnthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnthird.setStatus('current')
upsTrapAlarmUpsSystemOnthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnthird.setStatus('current')
upsTrapAlarmFanFailureRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredthird.setStatus('current')
upsTrapAlarmFuseFailureRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredthird.setStatus('current')
upsTrapAlarmGeneralFaultRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredthird.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredthird.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredthird.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredthird.setStatus('current')
upsTrapAlarmShutdownPendingRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelaythird"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredthird.setStatus('current')
upsTrapAlarmShutdownImminentRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredthird.setStatus('current')
upsTrapAlarmTestInProgressRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdthird"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredthird.setStatus('current')
upsTrapAlarmReceptacleOnthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnthird.setStatus('current')
upsTrapAlarmHighspeedBusRestorethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestorethird.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestorethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestorethird.setStatus('current')
upsTrapAlarmConnectivityBusRestorethird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestorethird.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredthird.setStatus('current')
upsTrapAlarmCurrentSharingRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredthird.setStatus('current')
upsTrapAlarmDCRippleRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredthird.setStatus('current')
upsTrapAlarmValueLowthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowthird.setStatus('current')
upsTrapAlarmValueHighthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighthird.setStatus('current')
upsTrapAlarmValueLowRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredthird.setStatus('current')
upsTrapAlarmValueHighRestoredthird = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredthird.setStatus('current')
upsDiagnosticBusJACommunicationStatusthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatusthird.setStatus('current')
upsDiagnosticBusJBCommunicationStatusthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatusthird.setStatus('current')
upsDiagnosticBatteryLifetimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimethird.setStatus('current')
upsDiagnosticFansLifetimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimethird.setStatus('current')
upsDiagnosticDCcapacitorsLifetimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimethird.setStatus('current')
upsDiagnosticACcapacitorsLifetimethird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimethird.setStatus('current')
upsDiagnosticGlobalServiceCheckthird = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 13, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckthird.setStatus('current')
upsIdentManufacturerfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturerfourth.setStatus('current')
upsIdentModelfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelfourth.setStatus('current')
upsIdentUPSSoftwareVersionfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionfourth.setStatus('current')
upsIdentAgentSoftwareVersionfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionfourth.setStatus('current')
upsIdentNamefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamefourth.setStatus('current')
upsIdentAttachedDevicesfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicesfourth.setStatus('current')
upsIdentUPSSerialNumberfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumberfourth.setStatus('current')
upsIdentComProtVersionfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionfourth.setStatus('current')
upsIdentOperatingTimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 1, 9), NonNegativeInteger32()).setUnits('fourths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimefourth.setStatus('current')
upsBatteryStatusfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatusfourth.setStatus('current')
upsSecondsOnBatteryfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 2), Integer32()).setUnits('fourths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatteryfourth.setStatus('current')
upsEstimatedMinutesRemainingfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingfourth.setStatus('current')
upsEstimatedChargeRemainingfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingfourth.setStatus('current')
upsBatteryVoltagefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagefourth.setStatus('current')
upsBatteryCurrentfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentfourth.setStatus('current')
upsBatteryTemperaturefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturefourth.setStatus('current')
upsBatteryRipplefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplefourth.setStatus('current')
upsInputLineBadsfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadsfourth.setStatus('current')
upsInputNumLinesfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinesfourth.setStatus('current')
upsInputFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3), )
if mibBuilder.loadTexts: upsInputFourthTable.setStatus('current')
upsInputFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexfourth"))
if mibBuilder.loadTexts: upsInputFourthEntry.setStatus('current')
upsInputLineIndexfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexfourth.setStatus('current')
upsInputFrequencyfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencyfourth.setStatus('current')
upsInputVoltagefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagefourth.setStatus('current')
upsInputCurrentfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentfourth.setStatus('current')
upsInputTruePowerfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowerfourth.setStatus('current')
upsInputVoltageMinfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinfourth.setStatus('current')
upsInputVoltageMaxfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxfourth.setStatus('current')
upsOutputSourcefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcefourth.setStatus('current')
upsOutputFrequencyfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencyfourth.setStatus('current')
upsOutputNumLinesfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinesfourth.setStatus('current')
upsOutputFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4), )
if mibBuilder.loadTexts: upsOutputFourthTable.setStatus('current')
upsOutputFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexfourth"))
if mibBuilder.loadTexts: upsOutputFourthEntry.setStatus('current')
upsOutputLineIndexfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexfourth.setStatus('current')
upsOutputVoltagefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagefourth.setStatus('current')
upsOutputCurrentfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentfourth.setStatus('current')
upsOutputPowerfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerfourth.setStatus('current')
upsOutputPercentLoadfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadfourth.setStatus('current')
upsOutputPowerFactorfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorfourth.setStatus('current')
upsOutputPeakCurrentfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentfourth.setStatus('current')
upsOutputShareCurrentfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentfourth.setStatus('current')
upsBypassFrequencyfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencyfourth.setStatus('current')
upsBypassNumLinesfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinesfourth.setStatus('current')
upsBypassFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 3), )
if mibBuilder.loadTexts: upsBypassFourthTable.setStatus('current')
upsBypassFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexfourth"))
if mibBuilder.loadTexts: upsBypassFourthEntry.setStatus('current')
upsBypassLineIndexfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexfourth.setStatus('current')
upsBypassVoltagefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagefourth.setStatus('current')
upsBypassCurrentfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentfourth.setStatus('current')
upsBypassPowerfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowerfourth.setStatus('current')
upsAlarmsPresentfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentfourth.setStatus('current')
upsAlarmFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 2), )
if mibBuilder.loadTexts: upsAlarmFourthTable.setStatus('current')
upsAlarmFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdfourth"))
if mibBuilder.loadTexts: upsAlarmFourthEntry.setStatus('current')
upsAlarmIdfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdfourth.setStatus('current')
upsAlarmDescrfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrfourth.setStatus('current')
upsAlarmTimefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimefourth.setStatus('current')
upsAlarmBatteryBadfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadfourth.setStatus('current')
upsAlarmOnBatteryfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatteryfourth.setStatus('current')
upsAlarmLowBatteryfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatteryfourth.setStatus('current')
upsAlarmDepletedBatteryfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatteryfourth.setStatus('current')
upsAlarmTempBadfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadfourth.setStatus('current')
upsAlarmInputBadfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadfourth.setStatus('current')
upsAlarmOutputBadfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadfourth.setStatus('current')
upsAlarmOutputOverloadfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadfourth.setStatus('current')
upsAlarmOnBypassfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypassfourth.setStatus('current')
upsAlarmBypassBadfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadfourth.setStatus('current')
upsAlarmOutputOffAsRequestedfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedfourth.setStatus('current')
upsAlarmUpsOffAsRequestedfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedfourth.setStatus('current')
upsAlarmChargerFailedfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedfourth.setStatus('current')
upsAlarmUpsOutputOfffourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOfffourth.setStatus('current')
upsAlarmUpsSystemOfffourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOfffourth.setStatus('current')
upsAlarmFanFailurefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailurefourth.setStatus('current')
upsAlarmFuseFailurefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailurefourth.setStatus('current')
upsAlarmGeneralFaultfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultfourth.setStatus('current')
upsAlarmDiagnosticTestFailedfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedfourth.setStatus('current')
upsAlarmCommunicationsLostfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostfourth.setStatus('current')
upsAlarmAwaitingPowerfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowerfourth.setStatus('current')
upsAlarmShutdownPendingfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingfourth.setStatus('current')
upsAlarmShutdownImminentfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentfourth.setStatus('current')
upsAlarmTestInProgressfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgressfourth.setStatus('current')
upsAlarmReceptacleOfffourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOfffourth.setStatus('current')
upsAlarmHighSpeedBusFailurefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailurefourth.setStatus('current')
upsAlarmHighSpeedBusJACRCFailurefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailurefourth.setStatus('current')
upsAlarmConnectivityBusFailurefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailurefourth.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailurefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailurefourth.setStatus('current')
upsAlarmCurrentSharingfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingfourth.setStatus('current')
upsAlarmDCRipplefourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplefourth.setStatus('current')
upsAlarmMaskAfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAfourth.setStatus('current')
upsTestIdfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdfourth.setStatus('current')
upsTestSpinLockfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockfourth.setStatus('current')
upsTestResultsSummaryfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummaryfourth.setStatus('current')
upsTestResultsDetailfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailfourth.setStatus('current')
upsTestStartTimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimefourth.setStatus('current')
upsTestElapsedTimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimefourth.setStatus('current')
upsTestNoTestsInitiatedfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedfourth.setStatus('current')
upsTestAbortTestInProgressfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgressfourth.setStatus('current')
upsTestGeneralSystemsTestfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestfourth.setStatus('current')
upsTestQuickBatteryTestfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestfourth.setStatus('current')
upsTestDeepBatteryCalibrationfourth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationfourth.setStatus('current')
upsShutdownTypefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypefourth.setStatus('current')
upsShutdownAfterDelayfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('fourths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelayfourth.setStatus('current')
upsStartupAfterDelayfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('fourths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelayfourth.setStatus('current')
upsRebootWithDurationfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('fourths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationfourth.setStatus('current')
upsAutoRestartfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartfourth.setStatus('current')
upsReceptaclesNumfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumfourth.setStatus('current')
upsReceptacleFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleFourthTable.setStatus('current')
upsReceptacleFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexfourth"))
if mibBuilder.loadTexts: upsReceptacleFourthEntry.setStatus('current')
upsReceptacleLineIndexfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexfourth.setStatus('current')
upsReceptacleOnOfffourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOfffourth.setStatus('current')
upsUPSModefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModefourth.setStatus('current')
upsRectifierOnOfffourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOfffourth.setStatus('current')
upsBatteryChargeMethodfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodfourth.setStatus('current')
upsInverterOnOfffourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOfffourth.setStatus('current')
upsBypassOnOfffourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOfffourth.setStatus('current')
upsLoadSourcefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcefourth.setStatus('current')
upsConfigInputVoltagefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagefourth.setStatus('current')
upsConfigInputFreqfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqfourth.setStatus('current')
upsConfigOutputVoltagefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagefourth.setStatus('current')
upsConfigOutputFreqfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqfourth.setStatus('current')
upsConfigOutputVAfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAfourth.setStatus('current')
upsConfigOutputPowerfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowerfourth.setStatus('current')
upsConfigLowBattTimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimefourth.setStatus('current')
upsConfigAudibleStatusfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatusfourth.setStatus('current')
upsConfigLowVoltageTransferPointfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointfourth.setStatus('current')
upsConfigHighVoltageTransferPointfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointfourth.setStatus('current')
upsConfigBatteryCapacityfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacityfourth.setStatus('current')
upsConfigBatteryChargeCurrentfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentfourth.setStatus('current')
upsConfigNoLoadShutdownfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownfourth.setStatus('current')
upsConfigStartDelayfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelayfourth.setStatus('current')
upsEventGetNextfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextfourth.setStatus('current')
upsEventGetPreviousfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviousfourth.setStatus('current')
upsEventSetStartingTimeStampfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampfourth.setStatus('current')
upsEventRetreiveCurrentTimeStampfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampfourth.setStatus('current')
upsEventTableSizefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizefourth.setStatus('current')
upsEventFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 6), )
if mibBuilder.loadTexts: upsEventFourthTable.setStatus('current')
upsEventFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexfourth"))
if mibBuilder.loadTexts: upsEventFourthEntry.setStatus('current')
upsEventLineIndexfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexfourth.setStatus('current')
upsEventCodefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodefourth.setStatus('current')
upsEventStatusfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatusfourth.setStatus('current')
upsEventTimefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimefourth.setStatus('current')
upsParametersReadfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadfourth.setStatus('current')
upsParametersWritefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritefourth.setStatus('current')
upsParametersStartAddressfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddressfourth.setStatus('current')
upsParameterTableSizefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizefourth.setStatus('current')
upsParameterFourthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 11), )
if mibBuilder.loadTexts: upsParameterFourthTable.setStatus('current')
upsParameterFourthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexfourth"))
if mibBuilder.loadTexts: upsParameterFourthEntry.setStatus('current')
upsParameterLineIndexfourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexfourth.setStatus('current')
upsParameterValuefourth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuefourth.setStatus('current')
upsStatusfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatusfourth.setStatus('current')
upsMainsStatisticsMBfailfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailfourth.setStatus('current')
upsMainsStatisticsMRfailfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailfourth.setStatus('current')
upsMainsStatisticsB2fourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2fourth.setStatus('current')
upsMainsStatisticsB5fourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5fourth.setStatus('current')
upsMainsStatisticsB10fourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10fourth.setStatus('current')
upsMainsStatisticsB200fourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200fourth.setStatus('current')
upsMainsStatisticsBypRelfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelfourth.setStatus('current')
upsTimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimefourth.setStatus('current')
upsRequestPermissionfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionfourth.setStatus('current')
upsEventGetCodefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodefourth.setStatus('current')
upsEventSpinLockfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockfourth.setStatus('current')
upsParameterSpinLockfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockfourth.setStatus('current')
upsTrapAlarmBatteryBadfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadfourth.setStatus('current')
upsTrapAlarmOnBatteryfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatteryfourth"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryfourth.setStatus('current')
upsTrapAlarmLowBatteryfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryfourth.setStatus('current')
upsTrapAlarmDepletedBatteryfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryfourth.setStatus('current')
upsTrapAlarmTempBadfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadfourth.setStatus('current')
upsTrapAlarmInputBadfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadfourth.setStatus('current')
upsTrapAlarmOutputBadfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadfourth.setStatus('current')
upsTrapAlarmOutputOverloadfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinesfourth"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadfourth"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadfourth.setStatus('current')
upsTrapAlarmOnBypassfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassfourth.setStatus('current')
upsTrapAlarmBypassBadfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadfourth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedfourth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedfourth.setStatus('current')
upsTrapAlarmChargerFailedfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedfourth.setStatus('current')
upsTrapAlarmUpsOutputOfffourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOfffourth.setStatus('current')
upsTrapAlarmUpsSystemOfffourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOfffourth.setStatus('current')
upsTrapAlarmFanFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailurefourth.setStatus('current')
upsTrapAlarmFuseFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailurefourth.setStatus('current')
upsTrapAlarmGeneralFaultfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultfourth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedfourth.setStatus('current')
upsTrapAlarmCommunicationsLostfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostfourth.setStatus('current')
upsTrapAlarmAwaitingPowerfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerfourth.setStatus('current')
upsTrapAlarmShutdownPendingfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayfourth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingfourth.setStatus('current')
upsTrapAlarmShutdownImminentfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentfourth.setStatus('current')
upsTrapAlarmTestInProgressfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdfourth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressfourth.setStatus('current')
upsTrapAlarmReceptacleOfffourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOfffourth.setStatus('current')
upsTrapAlarmHighspeedBusFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailurefourth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailurefourth.setStatus('current')
upsTrapAlarmConnectivityBusFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailurefourth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailurefourth.setStatus('current')
upsTrapAlarmCurrentSharingFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailurefourth.setStatus('current')
upsTrapAlarmDCRippleFailurefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailurefourth.setStatus('current')
upsTrapAlarmBatteryBadRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredfourth.setStatus('current')
upsTrapAlarmOnBatteryRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredfourth.setStatus('current')
upsTrapAlarmLowBatteryRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredfourth.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredfourth.setStatus('current')
upsTrapAlarmTempBadRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredfourth.setStatus('current')
upsTrapAlarmInputBadRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredfourth.setStatus('current')
upsTrapAlarmOutputBadRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredfourth.setStatus('current')
upsTrapAlarmOutputOverloadRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredfourth.setStatus('current')
upsTrapAlarmOnBypassRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredfourth.setStatus('current')
upsTrapAlarmBypassBadRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredfourth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredfourth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredfourth.setStatus('current')
upsTrapAlarmChargerFailedRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredfourth.setStatus('current')
upsTrapAlarmUpsOutputOnfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnfourth.setStatus('current')
upsTrapAlarmUpsSystemOnfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnfourth.setStatus('current')
upsTrapAlarmFanFailureRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredfourth.setStatus('current')
upsTrapAlarmFuseFailureRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredfourth.setStatus('current')
upsTrapAlarmGeneralFaultRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredfourth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredfourth.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredfourth.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredfourth.setStatus('current')
upsTrapAlarmShutdownPendingRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayfourth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredfourth.setStatus('current')
upsTrapAlarmShutdownImminentRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredfourth.setStatus('current')
upsTrapAlarmTestInProgressRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdfourth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredfourth.setStatus('current')
upsTrapAlarmReceptacleOnfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnfourth.setStatus('current')
upsTrapAlarmHighspeedBusRestorefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestorefourth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestorefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestorefourth.setStatus('current')
upsTrapAlarmConnectivityBusRestorefourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestorefourth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredfourth.setStatus('current')
upsTrapAlarmCurrentSharingRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredfourth.setStatus('current')
upsTrapAlarmDCRippleRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredfourth.setStatus('current')
upsTrapAlarmValueLowfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowfourth.setStatus('current')
upsTrapAlarmValueHighfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighfourth.setStatus('current')
upsTrapAlarmValueLowRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredfourth.setStatus('current')
upsTrapAlarmValueHighRestoredfourth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredfourth.setStatus('current')
upsDiagnosticBusJACommunicationStatusfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatusfourth.setStatus('current')
upsDiagnosticBusJBCommunicationStatusfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatusfourth.setStatus('current')
upsDiagnosticBatteryLifetimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimefourth.setStatus('current')
upsDiagnosticFansLifetimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimefourth.setStatus('current')
upsDiagnosticDCcapacitorsLifetimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimefourth.setStatus('current')
upsDiagnosticACcapacitorsLifetimefourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimefourth.setStatus('current')
upsDiagnosticGlobalServiceCheckfourth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 14, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckfourth.setStatus('current')
upsIdentManufacturerfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturerfifth.setStatus('current')
upsIdentModelfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelfifth.setStatus('current')
upsIdentUPSSoftwareVersionfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionfifth.setStatus('current')
upsIdentAgentSoftwareVersionfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionfifth.setStatus('current')
upsIdentNamefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamefifth.setStatus('current')
upsIdentAttachedDevicesfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicesfifth.setStatus('current')
upsIdentUPSSerialNumberfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumberfifth.setStatus('current')
upsIdentComProtVersionfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionfifth.setStatus('current')
upsIdentOperatingTimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 1, 9), NonNegativeInteger32()).setUnits('fifths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimefifth.setStatus('current')
upsBatteryStatusfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatusfifth.setStatus('current')
upsSecondsOnBatteryfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 2), Integer32()).setUnits('fifths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatteryfifth.setStatus('current')
upsEstimatedMinutesRemainingfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingfifth.setStatus('current')
upsEstimatedChargeRemainingfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingfifth.setStatus('current')
upsBatteryVoltagefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagefifth.setStatus('current')
upsBatteryCurrentfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentfifth.setStatus('current')
upsBatteryTemperaturefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturefifth.setStatus('current')
upsBatteryRipplefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplefifth.setStatus('current')
upsInputLineBadsfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadsfifth.setStatus('current')
upsInputNumLinesfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinesfifth.setStatus('current')
upsInputFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3), )
if mibBuilder.loadTexts: upsInputFifthTable.setStatus('current')
upsInputFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexfifth"))
if mibBuilder.loadTexts: upsInputFifthEntry.setStatus('current')
upsInputLineIndexfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexfifth.setStatus('current')
upsInputFrequencyfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencyfifth.setStatus('current')
upsInputVoltagefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagefifth.setStatus('current')
upsInputCurrentfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentfifth.setStatus('current')
upsInputTruePowerfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowerfifth.setStatus('current')
upsInputVoltageMinfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinfifth.setStatus('current')
upsInputVoltageMaxfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxfifth.setStatus('current')
upsOutputSourcefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcefifth.setStatus('current')
upsOutputFrequencyfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencyfifth.setStatus('current')
upsOutputNumLinesfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinesfifth.setStatus('current')
upsOutputFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4), )
if mibBuilder.loadTexts: upsOutputFifthTable.setStatus('current')
upsOutputFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexfifth"))
if mibBuilder.loadTexts: upsOutputFifthEntry.setStatus('current')
upsOutputLineIndexfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexfifth.setStatus('current')
upsOutputVoltagefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagefifth.setStatus('current')
upsOutputCurrentfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentfifth.setStatus('current')
upsOutputPowerfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerfifth.setStatus('current')
upsOutputPercentLoadfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadfifth.setStatus('current')
upsOutputPowerFactorfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorfifth.setStatus('current')
upsOutputPeakCurrentfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentfifth.setStatus('current')
upsOutputShareCurrentfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentfifth.setStatus('current')
upsBypassFrequencyfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencyfifth.setStatus('current')
upsBypassNumLinesfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinesfifth.setStatus('current')
upsBypassFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 3), )
if mibBuilder.loadTexts: upsBypassFifthTable.setStatus('current')
upsBypassFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexfifth"))
if mibBuilder.loadTexts: upsBypassFifthEntry.setStatus('current')
upsBypassLineIndexfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexfifth.setStatus('current')
upsBypassVoltagefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagefifth.setStatus('current')
upsBypassCurrentfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentfifth.setStatus('current')
upsBypassPowerfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowerfifth.setStatus('current')
upsAlarmsPresentfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentfifth.setStatus('current')
upsAlarmFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 2), )
if mibBuilder.loadTexts: upsAlarmFifthTable.setStatus('current')
upsAlarmFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdfifth"))
if mibBuilder.loadTexts: upsAlarmFifthEntry.setStatus('current')
upsAlarmIdfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdfifth.setStatus('current')
upsAlarmDescrfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrfifth.setStatus('current')
upsAlarmTimefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimefifth.setStatus('current')
upsAlarmBatteryBadfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadfifth.setStatus('current')
upsAlarmOnBatteryfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatteryfifth.setStatus('current')
upsAlarmLowBatteryfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatteryfifth.setStatus('current')
upsAlarmDepletedBatteryfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatteryfifth.setStatus('current')
upsAlarmTempBadfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadfifth.setStatus('current')
upsAlarmInputBadfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadfifth.setStatus('current')
upsAlarmOutputBadfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadfifth.setStatus('current')
upsAlarmOutputOverloadfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadfifth.setStatus('current')
upsAlarmOnBypassfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypassfifth.setStatus('current')
upsAlarmBypassBadfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadfifth.setStatus('current')
upsAlarmOutputOffAsRequestedfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedfifth.setStatus('current')
upsAlarmUpsOffAsRequestedfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedfifth.setStatus('current')
upsAlarmChargerFailedfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedfifth.setStatus('current')
upsAlarmUpsOutputOfffifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOfffifth.setStatus('current')
upsAlarmUpsSystemOfffifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOfffifth.setStatus('current')
upsAlarmFanFailurefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailurefifth.setStatus('current')
upsAlarmFuseFailurefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailurefifth.setStatus('current')
upsAlarmGeneralFaultfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultfifth.setStatus('current')
upsAlarmDiagnosticTestFailedfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedfifth.setStatus('current')
upsAlarmCommunicationsLostfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostfifth.setStatus('current')
upsAlarmAwaitingPowerfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowerfifth.setStatus('current')
upsAlarmShutdownPendingfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingfifth.setStatus('current')
upsAlarmShutdownImminentfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentfifth.setStatus('current')
upsAlarmTestInProgressfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgressfifth.setStatus('current')
upsAlarmReceptacleOfffifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOfffifth.setStatus('current')
upsAlarmHighSpeedBusFailurefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailurefifth.setStatus('current')
upsAlarmHighSpeedBusJACRCFailurefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailurefifth.setStatus('current')
upsAlarmConnectivityBusFailurefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailurefifth.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailurefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailurefifth.setStatus('current')
upsAlarmCurrentSharingfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingfifth.setStatus('current')
upsAlarmDCRipplefifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplefifth.setStatus('current')
upsAlarmMaskAfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAfifth.setStatus('current')
upsTestIdfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdfifth.setStatus('current')
upsTestSpinLockfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockfifth.setStatus('current')
upsTestResultsSummaryfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummaryfifth.setStatus('current')
upsTestResultsDetailfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailfifth.setStatus('current')
upsTestStartTimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimefifth.setStatus('current')
upsTestElapsedTimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimefifth.setStatus('current')
upsTestNoTestsInitiatedfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedfifth.setStatus('current')
upsTestAbortTestInProgressfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgressfifth.setStatus('current')
upsTestGeneralSystemsTestfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestfifth.setStatus('current')
upsTestQuickBatteryTestfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestfifth.setStatus('current')
upsTestDeepBatteryCalibrationfifth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationfifth.setStatus('current')
upsShutdownTypefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypefifth.setStatus('current')
upsShutdownAfterDelayfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('fifths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelayfifth.setStatus('current')
upsStartupAfterDelayfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('fifths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelayfifth.setStatus('current')
upsRebootWithDurationfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('fifths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationfifth.setStatus('current')
upsAutoRestartfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartfifth.setStatus('current')
upsReceptaclesNumfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumfifth.setStatus('current')
upsReceptacleFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleFifthTable.setStatus('current')
upsReceptacleFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexfifth"))
if mibBuilder.loadTexts: upsReceptacleFifthEntry.setStatus('current')
upsReceptacleLineIndexfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexfifth.setStatus('current')
upsReceptacleOnOfffifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOfffifth.setStatus('current')
upsUPSModefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModefifth.setStatus('current')
upsRectifierOnOfffifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOfffifth.setStatus('current')
upsBatteryChargeMethodfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodfifth.setStatus('current')
upsInverterOnOfffifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOfffifth.setStatus('current')
upsBypassOnOfffifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOfffifth.setStatus('current')
upsLoadSourcefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcefifth.setStatus('current')
upsConfigInputVoltagefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagefifth.setStatus('current')
upsConfigInputFreqfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqfifth.setStatus('current')
upsConfigOutputVoltagefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagefifth.setStatus('current')
upsConfigOutputFreqfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqfifth.setStatus('current')
upsConfigOutputVAfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAfifth.setStatus('current')
upsConfigOutputPowerfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowerfifth.setStatus('current')
upsConfigLowBattTimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimefifth.setStatus('current')
upsConfigAudibleStatusfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatusfifth.setStatus('current')
upsConfigLowVoltageTransferPointfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointfifth.setStatus('current')
upsConfigHighVoltageTransferPointfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointfifth.setStatus('current')
upsConfigBatteryCapacityfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacityfifth.setStatus('current')
upsConfigBatteryChargeCurrentfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentfifth.setStatus('current')
upsConfigNoLoadShutdownfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownfifth.setStatus('current')
upsConfigStartDelayfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelayfifth.setStatus('current')
upsEventGetNextfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextfifth.setStatus('current')
upsEventGetPreviousfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviousfifth.setStatus('current')
upsEventSetStartingTimeStampfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampfifth.setStatus('current')
upsEventRetreiveCurrentTimeStampfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampfifth.setStatus('current')
upsEventTableSizefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizefifth.setStatus('current')
upsEventFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 6), )
if mibBuilder.loadTexts: upsEventFifthTable.setStatus('current')
upsEventFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexfifth"))
if mibBuilder.loadTexts: upsEventFifthEntry.setStatus('current')
upsEventLineIndexfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexfifth.setStatus('current')
upsEventCodefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodefifth.setStatus('current')
upsEventStatusfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatusfifth.setStatus('current')
upsEventTimefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimefifth.setStatus('current')
upsParametersReadfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadfifth.setStatus('current')
upsParametersWritefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritefifth.setStatus('current')
upsParametersStartAddressfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddressfifth.setStatus('current')
upsParameterTableSizefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizefifth.setStatus('current')
upsParameterFifthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 11), )
if mibBuilder.loadTexts: upsParameterFifthTable.setStatus('current')
upsParameterFifthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexfifth"))
if mibBuilder.loadTexts: upsParameterFifthEntry.setStatus('current')
upsParameterLineIndexfifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexfifth.setStatus('current')
upsParameterValuefifth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuefifth.setStatus('current')
upsStatusfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatusfifth.setStatus('current')
upsMainsStatisticsMBfailfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailfifth.setStatus('current')
upsMainsStatisticsMRfailfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailfifth.setStatus('current')
upsMainsStatisticsB2fifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2fifth.setStatus('current')
upsMainsStatisticsB5fifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5fifth.setStatus('current')
upsMainsStatisticsB10fifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10fifth.setStatus('current')
upsMainsStatisticsB200fifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200fifth.setStatus('current')
upsMainsStatisticsBypRelfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelfifth.setStatus('current')
upsTimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimefifth.setStatus('current')
upsRequestPermissionfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionfifth.setStatus('current')
upsEventGetCodefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodefifth.setStatus('current')
upsEventSpinLockfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockfifth.setStatus('current')
upsParameterSpinLockfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockfifth.setStatus('current')
upsTrapAlarmBatteryBadfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadfifth.setStatus('current')
upsTrapAlarmOnBatteryfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatteryfifth"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryfifth.setStatus('current')
upsTrapAlarmLowBatteryfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryfifth.setStatus('current')
upsTrapAlarmDepletedBatteryfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryfifth.setStatus('current')
upsTrapAlarmTempBadfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadfifth.setStatus('current')
upsTrapAlarmInputBadfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadfifth.setStatus('current')
upsTrapAlarmOutputBadfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadfifth.setStatus('current')
upsTrapAlarmOutputOverloadfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinesfifth"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadfifth"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadfifth.setStatus('current')
upsTrapAlarmOnBypassfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassfifth.setStatus('current')
upsTrapAlarmBypassBadfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadfifth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedfifth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedfifth.setStatus('current')
upsTrapAlarmChargerFailedfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedfifth.setStatus('current')
upsTrapAlarmUpsOutputOfffifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOfffifth.setStatus('current')
upsTrapAlarmUpsSystemOfffifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOfffifth.setStatus('current')
upsTrapAlarmFanFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailurefifth.setStatus('current')
upsTrapAlarmFuseFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailurefifth.setStatus('current')
upsTrapAlarmGeneralFaultfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultfifth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedfifth.setStatus('current')
upsTrapAlarmCommunicationsLostfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostfifth.setStatus('current')
upsTrapAlarmAwaitingPowerfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerfifth.setStatus('current')
upsTrapAlarmShutdownPendingfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayfifth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingfifth.setStatus('current')
upsTrapAlarmShutdownImminentfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentfifth.setStatus('current')
upsTrapAlarmTestInProgressfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdfifth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressfifth.setStatus('current')
upsTrapAlarmReceptacleOfffifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOfffifth.setStatus('current')
upsTrapAlarmHighspeedBusFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailurefifth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailurefifth.setStatus('current')
upsTrapAlarmConnectivityBusFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailurefifth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailurefifth.setStatus('current')
upsTrapAlarmCurrentSharingFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailurefifth.setStatus('current')
upsTrapAlarmDCRippleFailurefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailurefifth.setStatus('current')
upsTrapAlarmBatteryBadRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredfifth.setStatus('current')
upsTrapAlarmOnBatteryRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredfifth.setStatus('current')
upsTrapAlarmLowBatteryRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredfifth.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredfifth.setStatus('current')
upsTrapAlarmTempBadRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredfifth.setStatus('current')
upsTrapAlarmInputBadRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredfifth.setStatus('current')
upsTrapAlarmOutputBadRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredfifth.setStatus('current')
upsTrapAlarmOutputOverloadRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredfifth.setStatus('current')
upsTrapAlarmOnBypassRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredfifth.setStatus('current')
upsTrapAlarmBypassBadRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredfifth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredfifth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredfifth.setStatus('current')
upsTrapAlarmChargerFailedRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredfifth.setStatus('current')
upsTrapAlarmUpsOutputOnfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnfifth.setStatus('current')
upsTrapAlarmUpsSystemOnfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnfifth.setStatus('current')
upsTrapAlarmFanFailureRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredfifth.setStatus('current')
upsTrapAlarmFuseFailureRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredfifth.setStatus('current')
upsTrapAlarmGeneralFaultRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredfifth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredfifth.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredfifth.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredfifth.setStatus('current')
upsTrapAlarmShutdownPendingRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayfifth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredfifth.setStatus('current')
upsTrapAlarmShutdownImminentRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredfifth.setStatus('current')
upsTrapAlarmTestInProgressRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdfifth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredfifth.setStatus('current')
upsTrapAlarmReceptacleOnfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnfifth.setStatus('current')
upsTrapAlarmHighspeedBusRestorefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestorefifth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestorefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestorefifth.setStatus('current')
upsTrapAlarmConnectivityBusRestorefifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestorefifth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredfifth.setStatus('current')
upsTrapAlarmCurrentSharingRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredfifth.setStatus('current')
upsTrapAlarmDCRippleRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredfifth.setStatus('current')
upsTrapAlarmValueLowfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowfifth.setStatus('current')
upsTrapAlarmValueHighfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighfifth.setStatus('current')
upsTrapAlarmValueLowRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredfifth.setStatus('current')
upsTrapAlarmValueHighRestoredfifth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredfifth.setStatus('current')
upsDiagnosticBusJACommunicationStatusfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatusfifth.setStatus('current')
upsDiagnosticBusJBCommunicationStatusfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatusfifth.setStatus('current')
upsDiagnosticBatteryLifetimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimefifth.setStatus('current')
upsDiagnosticFansLifetimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimefifth.setStatus('current')
upsDiagnosticDCcapacitorsLifetimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimefifth.setStatus('current')
upsDiagnosticACcapacitorsLifetimefifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimefifth.setStatus('current')
upsDiagnosticGlobalServiceCheckfifth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 15, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckfifth.setStatus('current')
upsIdentManufacturersixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturersixth.setStatus('current')
upsIdentModelsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelsixth.setStatus('current')
upsIdentUPSSoftwareVersionsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionsixth.setStatus('current')
upsIdentAgentSoftwareVersionsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionsixth.setStatus('current')
upsIdentNamesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamesixth.setStatus('current')
upsIdentAttachedDevicessixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicessixth.setStatus('current')
upsIdentUPSSerialNumbersixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumbersixth.setStatus('current')
upsIdentComProtVersionsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionsixth.setStatus('current')
upsIdentOperatingTimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 1, 9), NonNegativeInteger32()).setUnits('sixths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimesixth.setStatus('current')
upsBatteryStatussixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatussixth.setStatus('current')
upsSecondsOnBatterysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 2), NonNegativeInteger32()).setUnits('sixths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatterysixth.setStatus('current')
upsEstimatedMinutesRemainingsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingsixth.setStatus('current')
upsEstimatedChargeRemainingsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingsixth.setStatus('current')
upsBatteryVoltagesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagesixth.setStatus('current')
upsBatteryCurrentsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentsixth.setStatus('current')
upsBatteryTemperaturesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturesixth.setStatus('current')
upsBatteryRipplesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplesixth.setStatus('current')
upsInputLineBadssixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadssixth.setStatus('current')
upsInputNumLinessixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinessixth.setStatus('current')
upsInputSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3), )
if mibBuilder.loadTexts: upsInputSixthTable.setStatus('current')
upsInputSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexsixth"))
if mibBuilder.loadTexts: upsInputSixthEntry.setStatus('current')
upsInputLineIndexsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexsixth.setStatus('current')
upsInputFrequencysixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencysixth.setStatus('current')
upsInputVoltagesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagesixth.setStatus('current')
upsInputCurrentsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentsixth.setStatus('current')
upsInputTruePowersixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowersixth.setStatus('current')
upsInputVoltageMinsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinsixth.setStatus('current')
upsInputVoltageMaxsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxsixth.setStatus('current')
upsOutputSourcesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcesixth.setStatus('current')
upsOutputFrequencysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencysixth.setStatus('current')
upsOutputNumLinessixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinessixth.setStatus('current')
upsOutputSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4), )
if mibBuilder.loadTexts: upsOutputSixthTable.setStatus('current')
upsOutputSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexsixth"))
if mibBuilder.loadTexts: upsOutputSixthEntry.setStatus('current')
upsOutputLineIndexsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexsixth.setStatus('current')
upsOutputVoltagesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagesixth.setStatus('current')
upsOutputCurrentsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentsixth.setStatus('current')
upsOutputPowersixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowersixth.setStatus('current')
upsOutputPercentLoadsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadsixth.setStatus('current')
upsOutputPowerFactorsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorsixth.setStatus('current')
upsOutputPeakCurrentsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentsixth.setStatus('current')
upsOutputShareCurrentsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentsixth.setStatus('current')
upsBypassFrequencysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencysixth.setStatus('current')
upsBypassNumLinessixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinessixth.setStatus('current')
upsBypassSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 3), )
if mibBuilder.loadTexts: upsBypassSixthTable.setStatus('current')
upsBypassSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexsixth"))
if mibBuilder.loadTexts: upsBypassSixthEntry.setStatus('current')
upsBypassLineIndexsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexsixth.setStatus('current')
upsBypassVoltagesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagesixth.setStatus('current')
upsBypassCurrentsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentsixth.setStatus('current')
upsBypassPowersixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowersixth.setStatus('current')
upsAlarmsPresentsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentsixth.setStatus('current')
upsAlarmSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 2), )
if mibBuilder.loadTexts: upsAlarmSixthTable.setStatus('current')
upsAlarmSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdsixth"))
if mibBuilder.loadTexts: upsAlarmSixthEntry.setStatus('current')
upsAlarmIdsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdsixth.setStatus('current')
upsAlarmDescrsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrsixth.setStatus('current')
upsAlarmTimesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimesixth.setStatus('current')
upsAlarmBatteryBadsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadsixth.setStatus('current')
upsAlarmOnBatterysixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatterysixth.setStatus('current')
upsAlarmLowBatterysixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatterysixth.setStatus('current')
upsAlarmDepletedBatterysixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatterysixth.setStatus('current')
upsAlarmTempBadsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadsixth.setStatus('current')
upsAlarmInputBadsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadsixth.setStatus('current')
upsAlarmOutputBadsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadsixth.setStatus('current')
upsAlarmOutputOverloadsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadsixth.setStatus('current')
upsAlarmOnBypasssixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypasssixth.setStatus('current')
upsAlarmBypassBadsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadsixth.setStatus('current')
upsAlarmOutputOffAsRequestedsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedsixth.setStatus('current')
upsAlarmUpsOffAsRequestedsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedsixth.setStatus('current')
upsAlarmChargerFailedsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedsixth.setStatus('current')
upsAlarmUpsOutputOffsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOffsixth.setStatus('current')
upsAlarmUpsSystemOffsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOffsixth.setStatus('current')
upsAlarmFanFailuresixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailuresixth.setStatus('current')
upsAlarmFuseFailuresixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailuresixth.setStatus('current')
upsAlarmGeneralFaultsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultsixth.setStatus('current')
upsAlarmDiagnosticTestFailedsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedsixth.setStatus('current')
upsAlarmCommunicationsLostsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostsixth.setStatus('current')
upsAlarmAwaitingPowersixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowersixth.setStatus('current')
upsAlarmShutdownPendingsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingsixth.setStatus('current')
upsAlarmShutdownImminentsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentsixth.setStatus('current')
upsAlarmTestInProgresssixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgresssixth.setStatus('current')
upsAlarmReceptacleOffsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOffsixth.setStatus('current')
upsAlarmHighSpeedBusFailuresixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailuresixth.setStatus('current')
upsAlarmHighSpeedBusJACRCFailuresixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailuresixth.setStatus('current')
upsAlarmConnectivityBusFailuresixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailuresixth.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailuresixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailuresixth.setStatus('current')
upsAlarmCurrentSharingsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingsixth.setStatus('current')
upsAlarmDCRipplesixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplesixth.setStatus('current')
upsAlarmMaskAsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAsixth.setStatus('current')
upsTestIdsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdsixth.setStatus('current')
upsTestSpinLocksixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLocksixth.setStatus('current')
upsTestResultsSummarysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummarysixth.setStatus('current')
upsTestResultsDetailsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailsixth.setStatus('current')
upsTestStartTimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimesixth.setStatus('current')
upsTestElapsedTimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimesixth.setStatus('current')
upsTestNoTestsInitiatedsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedsixth.setStatus('current')
upsTestAbortTestInProgresssixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgresssixth.setStatus('current')
upsTestGeneralSystemsTestsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestsixth.setStatus('current')
upsTestQuickBatteryTestsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestsixth.setStatus('current')
upsTestDeepBatteryCalibrationsixth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationsixth.setStatus('current')
upsShutdownTypesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypesixth.setStatus('current')
upsShutdownAfterDelaysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('sixths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelaysixth.setStatus('current')
upsStartupAfterDelaysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('sixths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelaysixth.setStatus('current')
upsRebootWithDurationsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('sixths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationsixth.setStatus('current')
upsAutoRestartsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartsixth.setStatus('current')
upsReceptaclesNumsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumsixth.setStatus('current')
upsReceptacleSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleSixthTable.setStatus('current')
upsReceptacleSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexsixth"))
if mibBuilder.loadTexts: upsReceptacleSixthEntry.setStatus('current')
upsReceptacleLineIndexsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexsixth.setStatus('current')
upsReceptacleOnOffsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOffsixth.setStatus('current')
upsUPSModesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModesixth.setStatus('current')
upsRectifierOnOffsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOffsixth.setStatus('current')
upsBatteryChargeMethodsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodsixth.setStatus('current')
upsInverterOnOffsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOffsixth.setStatus('current')
upsBypassOnOffsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOffsixth.setStatus('current')
upsLoadSourcesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcesixth.setStatus('current')
upsConfigInputVoltagesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagesixth.setStatus('current')
upsConfigInputFreqsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqsixth.setStatus('current')
upsConfigOutputVoltagesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagesixth.setStatus('current')
upsConfigOutputFreqsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqsixth.setStatus('current')
upsConfigOutputVAsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAsixth.setStatus('current')
upsConfigOutputPowersixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowersixth.setStatus('current')
upsConfigLowBattTimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimesixth.setStatus('current')
upsConfigAudibleStatussixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatussixth.setStatus('current')
upsConfigLowVoltageTransferPointsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointsixth.setStatus('current')
upsConfigHighVoltageTransferPointsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointsixth.setStatus('current')
upsConfigBatteryCapacitysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacitysixth.setStatus('current')
upsConfigBatteryChargeCurrentsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentsixth.setStatus('current')
upsConfigNoLoadShutdownsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownsixth.setStatus('current')
upsConfigStartDelaysixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelaysixth.setStatus('current')
upsEventGetNextsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextsixth.setStatus('current')
upsEventGetPrevioussixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPrevioussixth.setStatus('current')
upsEventSetStartingTimeStampsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampsixth.setStatus('current')
upsEventRetreiveCurrentTimeStampsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampsixth.setStatus('current')
upsEventTableSizesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizesixth.setStatus('current')
upsEventSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 6), )
if mibBuilder.loadTexts: upsEventSixthTable.setStatus('current')
upsEventSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexsixth"))
if mibBuilder.loadTexts: upsEventSixthEntry.setStatus('current')
upsEventLineIndexsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexsixth.setStatus('current')
upsEventCodesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodesixth.setStatus('current')
upsEventStatussixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatussixth.setStatus('current')
upsEventTimesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimesixth.setStatus('current')
upsParametersReadsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadsixth.setStatus('current')
upsParametersWritesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritesixth.setStatus('current')
upsParametersStartAddresssixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddresssixth.setStatus('current')
upsParameterTableSizesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizesixth.setStatus('current')
upsParameterSixthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 11), )
if mibBuilder.loadTexts: upsParameterSixthTable.setStatus('current')
upsParameterSixthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexsixth"))
if mibBuilder.loadTexts: upsParameterSixthEntry.setStatus('current')
upsParameterLineIndexsixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexsixth.setStatus('current')
upsParameterValuesixth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuesixth.setStatus('current')
upsStatussixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatussixth.setStatus('current')
upsMainsStatisticsMBfailsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailsixth.setStatus('current')
upsMainsStatisticsMRfailsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailsixth.setStatus('current')
upsMainsStatisticsB2sixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2sixth.setStatus('current')
upsMainsStatisticsB5sixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5sixth.setStatus('current')
upsMainsStatisticsB10sixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10sixth.setStatus('current')
upsMainsStatisticsB200sixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200sixth.setStatus('current')
upsMainsStatisticsBypRelsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelsixth.setStatus('current')
upsTimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimesixth.setStatus('current')
upsRequestPermissionsixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionsixth.setStatus('current')
upsEventGetCodesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodesixth.setStatus('current')
upsEventSpinLocksixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLocksixth.setStatus('current')
upsParameterSpinLocksixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLocksixth.setStatus('current')
upsTrapAlarmBatteryBadsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadsixth.setStatus('current')
upsTrapAlarmOnBatterysixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatterysixth"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatterysixth.setStatus('current')
upsTrapAlarmLowBatterysixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatterysixth.setStatus('current')
upsTrapAlarmDepletedBatterysixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatterysixth.setStatus('current')
upsTrapAlarmTempBadsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadsixth.setStatus('current')
upsTrapAlarmInputBadsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadsixth.setStatus('current')
upsTrapAlarmOutputBadsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadsixth.setStatus('current')
upsTrapAlarmOutputOverloadsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinessixth"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadsixth"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadsixth.setStatus('current')
upsTrapAlarmOnBypasssixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypasssixth.setStatus('current')
upsTrapAlarmBypassBadsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadsixth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedsixth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedsixth.setStatus('current')
upsTrapAlarmChargerFailedsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedsixth.setStatus('current')
upsTrapAlarmUpsOutputOffsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOffsixth.setStatus('current')
upsTrapAlarmUpsSystemOffsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOffsixth.setStatus('current')
upsTrapAlarmFanFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailuresixth.setStatus('current')
upsTrapAlarmFuseFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailuresixth.setStatus('current')
upsTrapAlarmGeneralFaultsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultsixth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedsixth.setStatus('current')
upsTrapAlarmCommunicationsLostsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostsixth.setStatus('current')
upsTrapAlarmAwaitingPowersixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowersixth.setStatus('current')
upsTrapAlarmShutdownPendingsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelaysixth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingsixth.setStatus('current')
upsTrapAlarmShutdownImminentsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentsixth.setStatus('current')
upsTrapAlarmTestInProgresssixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdsixth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgresssixth.setStatus('current')
upsTrapAlarmReceptacleOffsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOffsixth.setStatus('current')
upsTrapAlarmHighspeedBusFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailuresixth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailuresixth.setStatus('current')
upsTrapAlarmConnectivityBusFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailuresixth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailuresixth.setStatus('current')
upsTrapAlarmCurrentSharingFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailuresixth.setStatus('current')
upsTrapAlarmDCRippleFailuresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailuresixth.setStatus('current')
upsTrapAlarmBatteryBadRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredsixth.setStatus('current')
upsTrapAlarmOnBatteryRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredsixth.setStatus('current')
upsTrapAlarmLowBatteryRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredsixth.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredsixth.setStatus('current')
upsTrapAlarmTempBadRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredsixth.setStatus('current')
upsTrapAlarmInputBadRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredsixth.setStatus('current')
upsTrapAlarmOutputBadRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredsixth.setStatus('current')
upsTrapAlarmOutputOverloadRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredsixth.setStatus('current')
upsTrapAlarmOnBypassRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredsixth.setStatus('current')
upsTrapAlarmBypassBadRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredsixth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredsixth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredsixth.setStatus('current')
upsTrapAlarmChargerFailedRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredsixth.setStatus('current')
upsTrapAlarmUpsOutputOnsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnsixth.setStatus('current')
upsTrapAlarmUpsSystemOnsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnsixth.setStatus('current')
upsTrapAlarmFanFailureRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredsixth.setStatus('current')
upsTrapAlarmFuseFailureRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredsixth.setStatus('current')
upsTrapAlarmGeneralFaultRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredsixth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredsixth.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredsixth.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredsixth.setStatus('current')
upsTrapAlarmShutdownPendingRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelaysixth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredsixth.setStatus('current')
upsTrapAlarmShutdownImminentRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredsixth.setStatus('current')
upsTrapAlarmTestInProgressRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdsixth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredsixth.setStatus('current')
upsTrapAlarmReceptacleOnsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnsixth.setStatus('current')
upsTrapAlarmHighspeedBusRestoresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestoresixth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestoresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestoresixth.setStatus('current')
upsTrapAlarmConnectivityBusRestoresixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestoresixth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredsixth.setStatus('current')
upsTrapAlarmCurrentSharingRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredsixth.setStatus('current')
upsTrapAlarmDCRippleRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredsixth.setStatus('current')
upsTrapAlarmValueLowsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowsixth.setStatus('current')
upsTrapAlarmValueHighsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighsixth.setStatus('current')
upsTrapAlarmValueLowRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredsixth.setStatus('current')
upsTrapAlarmValueHighRestoredsixth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredsixth.setStatus('current')
upsDiagnosticBusJACommunicationStatussixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatussixth.setStatus('current')
upsDiagnosticBusJBCommunicationStatussixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatussixth.setStatus('current')
upsDiagnosticBatteryLifetimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimesixth.setStatus('current')
upsDiagnosticFansLifetimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimesixth.setStatus('current')
upsDiagnosticDCcapacitorsLifetimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimesixth.setStatus('current')
upsDiagnosticACcapacitorsLifetimesixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimesixth.setStatus('current')
upsDiagnosticGlobalServiceChecksixth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 16, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceChecksixth.setStatus('current')
upsIdentManufacturerseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturerseventh.setStatus('current')
upsIdentModelseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelseventh.setStatus('current')
upsIdentUPSSoftwareVersionseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersionseventh.setStatus('current')
upsIdentAgentSoftwareVersionseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersionseventh.setStatus('current')
upsIdentNameseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNameseventh.setStatus('current')
upsIdentAttachedDevicesseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicesseventh.setStatus('current')
upsIdentUPSSerialNumberseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumberseventh.setStatus('current')
upsIdentComProtVersionseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersionseventh.setStatus('current')
upsIdentOperatingTimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 1, 9), NonNegativeInteger32()).setUnits('sevenths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimeseventh.setStatus('current')
upsBatteryStatusseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatusseventh.setStatus('current')
upsSecondsOnBatteryseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 2), NonNegativeInteger32()).setUnits('sevenths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatteryseventh.setStatus('current')
upsEstimatedMinutesRemainingseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingseventh.setStatus('current')
upsEstimatedChargeRemainingseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingseventh.setStatus('current')
upsBatteryVoltageseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltageseventh.setStatus('current')
upsBatteryCurrentseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentseventh.setStatus('current')
upsBatteryTemperatureseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperatureseventh.setStatus('current')
upsBatteryRippleseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRippleseventh.setStatus('current')
upsInputLineBadsseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadsseventh.setStatus('current')
upsInputNumLinesseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinesseventh.setStatus('current')
upsInputSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3), )
if mibBuilder.loadTexts: upsInputSeventhTable.setStatus('current')
upsInputSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexseventh"))
if mibBuilder.loadTexts: upsInputSeventhEntry.setStatus('current')
upsInputLineIndexseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexseventh.setStatus('current')
upsInputFrequencyseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencyseventh.setStatus('current')
upsInputVoltageseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageseventh.setStatus('current')
upsInputCurrentseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentseventh.setStatus('current')
upsInputTruePowerseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowerseventh.setStatus('current')
upsInputVoltageMinseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMinseventh.setStatus('current')
upsInputVoltageMaxseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxseventh.setStatus('current')
upsOutputSourceseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourceseventh.setStatus('current')
upsOutputFrequencyseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencyseventh.setStatus('current')
upsOutputNumLinesseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinesseventh.setStatus('current')
upsOutputSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4), )
if mibBuilder.loadTexts: upsOutputSeventhTable.setStatus('current')
upsOutputSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexseventh"))
if mibBuilder.loadTexts: upsOutputSeventhEntry.setStatus('current')
upsOutputLineIndexseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexseventh.setStatus('current')
upsOutputVoltageseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltageseventh.setStatus('current')
upsOutputCurrentseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentseventh.setStatus('current')
upsOutputPowerseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerseventh.setStatus('current')
upsOutputPercentLoadseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadseventh.setStatus('current')
upsOutputPowerFactorseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorseventh.setStatus('current')
upsOutputPeakCurrentseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentseventh.setStatus('current')
upsOutputShareCurrentseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentseventh.setStatus('current')
upsBypassFrequencyseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencyseventh.setStatus('current')
upsBypassNumLinesseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinesseventh.setStatus('current')
upsBypassSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 3), )
if mibBuilder.loadTexts: upsBypassSeventhTable.setStatus('current')
upsBypassSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexseventh"))
if mibBuilder.loadTexts: upsBypassSeventhEntry.setStatus('current')
upsBypassLineIndexseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexseventh.setStatus('current')
upsBypassVoltageseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltageseventh.setStatus('current')
upsBypassCurrentseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentseventh.setStatus('current')
upsBypassPowerseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowerseventh.setStatus('current')
upsAlarmsPresentseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentseventh.setStatus('current')
upsAlarmSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 2), )
if mibBuilder.loadTexts: upsAlarmSeventhTable.setStatus('current')
upsAlarmSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdseventh"))
if mibBuilder.loadTexts: upsAlarmSeventhEntry.setStatus('current')
upsAlarmIdseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdseventh.setStatus('current')
upsAlarmDescrseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrseventh.setStatus('current')
upsAlarmTimeseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimeseventh.setStatus('current')
upsAlarmBatteryBadseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadseventh.setStatus('current')
upsAlarmOnBatteryseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatteryseventh.setStatus('current')
upsAlarmLowBatteryseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatteryseventh.setStatus('current')
upsAlarmDepletedBatteryseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatteryseventh.setStatus('current')
upsAlarmTempBadseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadseventh.setStatus('current')
upsAlarmInputBadseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadseventh.setStatus('current')
upsAlarmOutputBadseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadseventh.setStatus('current')
upsAlarmOutputOverloadseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadseventh.setStatus('current')
upsAlarmOnBypassseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypassseventh.setStatus('current')
upsAlarmBypassBadseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadseventh.setStatus('current')
upsAlarmOutputOffAsRequestedseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedseventh.setStatus('current')
upsAlarmUpsOffAsRequestedseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedseventh.setStatus('current')
upsAlarmChargerFailedseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedseventh.setStatus('current')
upsAlarmUpsOutputOffseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOffseventh.setStatus('current')
upsAlarmUpsSystemOffseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOffseventh.setStatus('current')
upsAlarmFanFailureseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailureseventh.setStatus('current')
upsAlarmFuseFailureseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailureseventh.setStatus('current')
upsAlarmGeneralFaultseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultseventh.setStatus('current')
upsAlarmDiagnosticTestFailedseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedseventh.setStatus('current')
upsAlarmCommunicationsLostseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostseventh.setStatus('current')
upsAlarmAwaitingPowerseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowerseventh.setStatus('current')
upsAlarmShutdownPendingseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingseventh.setStatus('current')
upsAlarmShutdownImminentseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentseventh.setStatus('current')
upsAlarmTestInProgressseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgressseventh.setStatus('current')
upsAlarmReceptacleOffseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOffseventh.setStatus('current')
upsAlarmHighSpeedBusFailureseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailureseventh.setStatus('current')
upsAlarmHighSpeedBusJACRCFailureseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailureseventh.setStatus('current')
upsAlarmConnectivityBusFailureseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailureseventh.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailureseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailureseventh.setStatus('current')
upsAlarmCurrentSharingseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingseventh.setStatus('current')
upsAlarmDCRippleseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRippleseventh.setStatus('current')
upsAlarmMaskAseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAseventh.setStatus('current')
upsTestIdseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdseventh.setStatus('current')
upsTestSpinLockseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockseventh.setStatus('current')
upsTestResultsSummaryseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummaryseventh.setStatus('current')
upsTestResultsDetailseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailseventh.setStatus('current')
upsTestStartTimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimeseventh.setStatus('current')
upsTestElapsedTimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimeseventh.setStatus('current')
upsTestNoTestsInitiatedseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedseventh.setStatus('current')
upsTestAbortTestInProgressseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgressseventh.setStatus('current')
upsTestGeneralSystemsTestseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestseventh.setStatus('current')
upsTestQuickBatteryTestseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestseventh.setStatus('current')
upsTestDeepBatteryCalibrationseventh = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationseventh.setStatus('current')
upsShutdownTypeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypeseventh.setStatus('current')
upsShutdownAfterDelayseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('sevenths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelayseventh.setStatus('current')
upsStartupAfterDelayseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('sevenths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelayseventh.setStatus('current')
upsRebootWithDurationseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('sevenths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationseventh.setStatus('current')
upsAutoRestartseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartseventh.setStatus('current')
upsReceptaclesNumseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumseventh.setStatus('current')
upsReceptacleSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleSeventhTable.setStatus('current')
upsReceptacleSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexseventh"))
if mibBuilder.loadTexts: upsReceptacleSeventhEntry.setStatus('current')
upsReceptacleLineIndexseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexseventh.setStatus('current')
upsReceptacleOnOffseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOffseventh.setStatus('current')
upsUPSModeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModeseventh.setStatus('current')
upsRectifierOnOffseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOffseventh.setStatus('current')
upsBatteryChargeMethodseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodseventh.setStatus('current')
upsInverterOnOffseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOffseventh.setStatus('current')
upsBypassOnOffseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOffseventh.setStatus('current')
upsLoadSourceseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourceseventh.setStatus('current')
upsConfigInputVoltageseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltageseventh.setStatus('current')
upsConfigInputFreqseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqseventh.setStatus('current')
upsConfigOutputVoltageseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltageseventh.setStatus('current')
upsConfigOutputFreqseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqseventh.setStatus('current')
upsConfigOutputVAseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAseventh.setStatus('current')
upsConfigOutputPowerseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowerseventh.setStatus('current')
upsConfigLowBattTimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimeseventh.setStatus('current')
upsConfigAudibleStatusseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatusseventh.setStatus('current')
upsConfigLowVoltageTransferPointseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointseventh.setStatus('current')
upsConfigHighVoltageTransferPointseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointseventh.setStatus('current')
upsConfigBatteryCapacityseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacityseventh.setStatus('current')
upsConfigBatteryChargeCurrentseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentseventh.setStatus('current')
upsConfigNoLoadShutdownseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdownseventh.setStatus('current')
upsConfigStartDelayseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelayseventh.setStatus('current')
upsEventGetNextseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextseventh.setStatus('current')
upsEventGetPreviousseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviousseventh.setStatus('current')
upsEventSetStartingTimeStampseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampseventh.setStatus('current')
upsEventRetreiveCurrentTimeStampseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampseventh.setStatus('current')
upsEventTableSizeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizeseventh.setStatus('current')
upsEventSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 6), )
if mibBuilder.loadTexts: upsEventSeventhTable.setStatus('current')
upsEventSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexseventh"))
if mibBuilder.loadTexts: upsEventSeventhEntry.setStatus('current')
upsEventLineIndexseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexseventh.setStatus('current')
upsEventCodeseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodeseventh.setStatus('current')
upsEventStatusseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatusseventh.setStatus('current')
upsEventTimeseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimeseventh.setStatus('current')
upsParametersReadseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadseventh.setStatus('current')
upsParametersWriteseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWriteseventh.setStatus('current')
upsParametersStartAddressseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddressseventh.setStatus('current')
upsParameterTableSizeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizeseventh.setStatus('current')
upsParameterSeventhTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 11), )
if mibBuilder.loadTexts: upsParameterSeventhTable.setStatus('current')
upsParameterSeventhEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexseventh"))
if mibBuilder.loadTexts: upsParameterSeventhEntry.setStatus('current')
upsParameterLineIndexseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexseventh.setStatus('current')
upsParameterValueseventh = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValueseventh.setStatus('current')
upsStatusseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatusseventh.setStatus('current')
upsMainsStatisticsMBfailseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailseventh.setStatus('current')
upsMainsStatisticsMRfailseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailseventh.setStatus('current')
upsMainsStatisticsB2seventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2seventh.setStatus('current')
upsMainsStatisticsB5seventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5seventh.setStatus('current')
upsMainsStatisticsB10seventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10seventh.setStatus('current')
upsMainsStatisticsB200seventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200seventh.setStatus('current')
upsMainsStatisticsBypRelseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelseventh.setStatus('current')
upsTimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimeseventh.setStatus('current')
upsRequestPermissionseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissionseventh.setStatus('current')
upsEventGetCodeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodeseventh.setStatus('current')
upsEventSpinLockseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockseventh.setStatus('current')
upsParameterSpinLockseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockseventh.setStatus('current')
upsTrapAlarmBatteryBadseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadseventh.setStatus('current')
upsTrapAlarmOnBatteryseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatteryseventh"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryseventh.setStatus('current')
upsTrapAlarmLowBatteryseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryseventh.setStatus('current')
upsTrapAlarmDepletedBatteryseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryseventh.setStatus('current')
upsTrapAlarmTempBadseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadseventh.setStatus('current')
upsTrapAlarmInputBadseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadseventh.setStatus('current')
upsTrapAlarmOutputBadseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadseventh.setStatus('current')
upsTrapAlarmOutputOverloadseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLinesseventh"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadseventh"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadseventh.setStatus('current')
upsTrapAlarmOnBypassseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassseventh.setStatus('current')
upsTrapAlarmBypassBadseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadseventh.setStatus('current')
upsTrapAlarmOutputOffAsRequestedseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedseventh.setStatus('current')
upsTrapAlarmUpsOffAsRequestedseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedseventh.setStatus('current')
upsTrapAlarmChargerFailedseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedseventh.setStatus('current')
upsTrapAlarmUpsOutputOffseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOffseventh.setStatus('current')
upsTrapAlarmUpsSystemOffseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOffseventh.setStatus('current')
upsTrapAlarmFanFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureseventh.setStatus('current')
upsTrapAlarmFuseFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureseventh.setStatus('current')
upsTrapAlarmGeneralFaultseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultseventh.setStatus('current')
upsTrapAlarmDiagnosticTestFailedseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedseventh.setStatus('current')
upsTrapAlarmCommunicationsLostseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostseventh.setStatus('current')
upsTrapAlarmAwaitingPowerseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerseventh.setStatus('current')
upsTrapAlarmShutdownPendingseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayseventh"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingseventh.setStatus('current')
upsTrapAlarmShutdownImminentseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentseventh.setStatus('current')
upsTrapAlarmTestInProgressseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdseventh"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressseventh.setStatus('current')
upsTrapAlarmReceptacleOffseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOffseventh.setStatus('current')
upsTrapAlarmHighspeedBusFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailureseventh.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailureseventh.setStatus('current')
upsTrapAlarmConnectivityBusFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailureseventh.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailureseventh.setStatus('current')
upsTrapAlarmCurrentSharingFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailureseventh.setStatus('current')
upsTrapAlarmDCRippleFailureseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailureseventh.setStatus('current')
upsTrapAlarmBatteryBadRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredseventh.setStatus('current')
upsTrapAlarmOnBatteryRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredseventh.setStatus('current')
upsTrapAlarmLowBatteryRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredseventh.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredseventh.setStatus('current')
upsTrapAlarmTempBadRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredseventh.setStatus('current')
upsTrapAlarmInputBadRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredseventh.setStatus('current')
upsTrapAlarmOutputBadRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredseventh.setStatus('current')
upsTrapAlarmOutputOverloadRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredseventh.setStatus('current')
upsTrapAlarmOnBypassRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredseventh.setStatus('current')
upsTrapAlarmBypassBadRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredseventh.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredseventh.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredseventh.setStatus('current')
upsTrapAlarmChargerFailedRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredseventh.setStatus('current')
upsTrapAlarmUpsOutputOnseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOnseventh.setStatus('current')
upsTrapAlarmUpsSystemOnseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOnseventh.setStatus('current')
upsTrapAlarmFanFailureRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredseventh.setStatus('current')
upsTrapAlarmFuseFailureRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredseventh.setStatus('current')
upsTrapAlarmGeneralFaultRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredseventh.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredseventh.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredseventh.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredseventh.setStatus('current')
upsTrapAlarmShutdownPendingRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayseventh"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredseventh.setStatus('current')
upsTrapAlarmShutdownImminentRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredseventh.setStatus('current')
upsTrapAlarmTestInProgressRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdseventh"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredseventh.setStatus('current')
upsTrapAlarmReceptacleOnseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOnseventh.setStatus('current')
upsTrapAlarmHighspeedBusRestoreseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestoreseventh.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestoreseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestoreseventh.setStatus('current')
upsTrapAlarmConnectivityBusRestoreseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestoreseventh.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredseventh.setStatus('current')
upsTrapAlarmCurrentSharingRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredseventh.setStatus('current')
upsTrapAlarmDCRippleRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredseventh.setStatus('current')
upsTrapAlarmValueLowseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowseventh.setStatus('current')
upsTrapAlarmValueHighseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighseventh.setStatus('current')
upsTrapAlarmValueLowRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredseventh.setStatus('current')
upsTrapAlarmValueHighRestoredseventh = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredseventh.setStatus('current')
upsDiagnosticBusJACommunicationStatusseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatusseventh.setStatus('current')
upsDiagnosticBusJBCommunicationStatusseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatusseventh.setStatus('current')
upsDiagnosticBatteryLifetimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimeseventh.setStatus('current')
upsDiagnosticFansLifetimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimeseventh.setStatus('current')
upsDiagnosticDCcapacitorsLifetimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimeseventh.setStatus('current')
upsDiagnosticACcapacitorsLifetimeseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimeseventh.setStatus('current')
upsDiagnosticGlobalServiceCheckseventh = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 17, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckseventh.setStatus('current')
upsIdentManufacturereighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturereighth.setStatus('current')
upsIdentModeleighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModeleighth.setStatus('current')
upsIdentUPSSoftwareVersioneighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersioneighth.setStatus('current')
upsIdentAgentSoftwareVersioneighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersioneighth.setStatus('current')
upsIdentNameeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNameeighth.setStatus('current')
upsIdentAttachedDeviceseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDeviceseighth.setStatus('current')
upsIdentUPSSerialNumbereighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumbereighth.setStatus('current')
upsIdentComProtVersioneighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersioneighth.setStatus('current')
upsIdentOperatingTimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 1, 9), NonNegativeInteger32()).setUnits('eighths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimeeighth.setStatus('current')
upsBatteryStatuseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatuseighth.setStatus('current')
upsSecondsOnBatteryeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 2), NonNegativeInteger32()).setUnits('eighths').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatteryeighth.setStatus('current')
upsEstimatedMinutesRemainingeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemainingeighth.setStatus('current')
upsEstimatedChargeRemainingeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemainingeighth.setStatus('current')
upsBatteryVoltageeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltageeighth.setStatus('current')
upsBatteryCurrenteighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrenteighth.setStatus('current')
upsBatteryTemperatureeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperatureeighth.setStatus('current')
upsBatteryRippleeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRippleeighth.setStatus('current')
upsInputLineBadseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadseighth.setStatus('current')
upsInputNumLineseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLineseighth.setStatus('current')
upsInputEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3), )
if mibBuilder.loadTexts: upsInputEighthTable.setStatus('current')
upsInputEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsInputLineIndexeighth"))
if mibBuilder.loadTexts: upsInputEighthEntry.setStatus('current')
upsInputLineIndexeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexeighth.setStatus('current')
upsInputFrequencyeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencyeighth.setStatus('current')
upsInputVoltageeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageeighth.setStatus('current')
upsInputCurrenteighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrenteighth.setStatus('current')
upsInputTruePowereighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowereighth.setStatus('current')
upsInputVoltageMineighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMineighth.setStatus('current')
upsInputVoltageMaxeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxeighth.setStatus('current')
upsOutputSourceeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourceeighth.setStatus('current')
upsOutputFrequencyeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencyeighth.setStatus('current')
upsOutputNumLineseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLineseighth.setStatus('current')
upsOutputEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4), )
if mibBuilder.loadTexts: upsOutputEighthTable.setStatus('current')
upsOutputEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsOutputLineIndexeighth"))
if mibBuilder.loadTexts: upsOutputEighthEntry.setStatus('current')
upsOutputLineIndexeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexeighth.setStatus('current')
upsOutputVoltageeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltageeighth.setStatus('current')
upsOutputCurrenteighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrenteighth.setStatus('current')
upsOutputPowereighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowereighth.setStatus('current')
upsOutputPercentLoadeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadeighth.setStatus('current')
upsOutputPowerFactoreighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactoreighth.setStatus('current')
upsOutputPeakCurrenteighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrenteighth.setStatus('current')
upsOutputShareCurrenteighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrenteighth.setStatus('current')
upsBypassFrequencyeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencyeighth.setStatus('current')
upsBypassNumLineseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLineseighth.setStatus('current')
upsBypassEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 3), )
if mibBuilder.loadTexts: upsBypassEighthTable.setStatus('current')
upsBypassEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 3, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsBypassLineIndexeighth"))
if mibBuilder.loadTexts: upsBypassEighthEntry.setStatus('current')
upsBypassLineIndexeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexeighth.setStatus('current')
upsBypassVoltageeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltageeighth.setStatus('current')
upsBypassCurrenteighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrenteighth.setStatus('current')
upsBypassPowereighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowereighth.setStatus('current')
upsAlarmsPresenteighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresenteighth.setStatus('current')
upsAlarmEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 2), )
if mibBuilder.loadTexts: upsAlarmEighthTable.setStatus('current')
upsAlarmEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 2, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsAlarmIdeighth"))
if mibBuilder.loadTexts: upsAlarmEighthEntry.setStatus('current')
upsAlarmIdeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdeighth.setStatus('current')
upsAlarmDescreighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescreighth.setStatus('current')
upsAlarmTimeeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimeeighth.setStatus('current')
upsAlarmBatteryBadeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadeighth.setStatus('current')
upsAlarmOnBatteryeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatteryeighth.setStatus('current')
upsAlarmLowBatteryeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatteryeighth.setStatus('current')
upsAlarmDepletedBatteryeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatteryeighth.setStatus('current')
upsAlarmTempBadeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadeighth.setStatus('current')
upsAlarmInputBadeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadeighth.setStatus('current')
upsAlarmOutputBadeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadeighth.setStatus('current')
upsAlarmOutputOverloadeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadeighth.setStatus('current')
upsAlarmOnBypasseighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypasseighth.setStatus('current')
upsAlarmBypassBadeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadeighth.setStatus('current')
upsAlarmOutputOffAsRequestedeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedeighth.setStatus('current')
upsAlarmUpsOffAsRequestedeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedeighth.setStatus('current')
upsAlarmChargerFailedeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedeighth.setStatus('current')
upsAlarmUpsOutputOffeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOffeighth.setStatus('current')
upsAlarmUpsSystemOffeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOffeighth.setStatus('current')
upsAlarmFanFailureeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailureeighth.setStatus('current')
upsAlarmFuseFailureeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailureeighth.setStatus('current')
upsAlarmGeneralFaulteighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaulteighth.setStatus('current')
upsAlarmDiagnosticTestFailedeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedeighth.setStatus('current')
upsAlarmCommunicationsLosteighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLosteighth.setStatus('current')
upsAlarmAwaitingPowereighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowereighth.setStatus('current')
upsAlarmShutdownPendingeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendingeighth.setStatus('current')
upsAlarmShutdownImminenteighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminenteighth.setStatus('current')
upsAlarmTestInProgresseighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgresseighth.setStatus('current')
upsAlarmReceptacleOffeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOffeighth.setStatus('current')
upsAlarmHighSpeedBusFailureeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailureeighth.setStatus('current')
upsAlarmHighSpeedBusJACRCFailureeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailureeighth.setStatus('current')
upsAlarmConnectivityBusFailureeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailureeighth.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailureeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailureeighth.setStatus('current')
upsAlarmCurrentSharingeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharingeighth.setStatus('current')
upsAlarmDCRippleeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRippleeighth.setStatus('current')
upsAlarmMaskAeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAeighth.setStatus('current')
upsTestIdeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdeighth.setStatus('current')
upsTestSpinLockeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockeighth.setStatus('current')
upsTestResultsSummaryeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummaryeighth.setStatus('current')
upsTestResultsDetaileighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetaileighth.setStatus('current')
upsTestStartTimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimeeighth.setStatus('current')
upsTestElapsedTimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimeeighth.setStatus('current')
upsTestNoTestsInitiatedeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedeighth.setStatus('current')
upsTestAbortTestInProgresseighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgresseighth.setStatus('current')
upsTestGeneralSystemsTesteighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTesteighth.setStatus('current')
upsTestQuickBatteryTesteighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTesteighth.setStatus('current')
upsTestDeepBatteryCalibrationeighth = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationeighth.setStatus('current')
upsShutdownTypeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypeeighth.setStatus('current')
upsShutdownAfterDelayeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('eighths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelayeighth.setStatus('current')
upsStartupAfterDelayeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('eighths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelayeighth.setStatus('current')
upsRebootWithDurationeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('eighths').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationeighth.setStatus('current')
upsAutoRestarteighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestarteighth.setStatus('current')
upsReceptaclesNumeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumeighth.setStatus('current')
upsReceptacleEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleEighthTable.setStatus('current')
upsReceptacleEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 7, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsReceptacleLineIndexeighth"))
if mibBuilder.loadTexts: upsReceptacleEighthEntry.setStatus('current')
upsReceptacleLineIndexeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexeighth.setStatus('current')
upsReceptacleOnOffeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOffeighth.setStatus('current')
upsUPSModeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModeeighth.setStatus('current')
upsRectifierOnOffeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOffeighth.setStatus('current')
upsBatteryChargeMethodeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodeighth.setStatus('current')
upsInverterOnOffeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOffeighth.setStatus('current')
upsBypassOnOffeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOffeighth.setStatus('current')
upsLoadSourceeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourceeighth.setStatus('current')
upsConfigInputVoltageeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltageeighth.setStatus('current')
upsConfigInputFreqeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqeighth.setStatus('current')
upsConfigOutputVoltageeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltageeighth.setStatus('current')
upsConfigOutputFreqeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqeighth.setStatus('current')
upsConfigOutputVAeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAeighth.setStatus('current')
upsConfigOutputPowereighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowereighth.setStatus('current')
upsConfigLowBattTimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimeeighth.setStatus('current')
upsConfigAudibleStatuseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatuseighth.setStatus('current')
upsConfigLowVoltageTransferPointeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointeighth.setStatus('current')
upsConfigHighVoltageTransferPointeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointeighth.setStatus('current')
upsConfigBatteryCapacityeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacityeighth.setStatus('current')
upsConfigBatteryChargeCurrenteighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrenteighth.setStatus('current')
upsConfigNoLoadShutdowneighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdowneighth.setStatus('current')
upsConfigStartDelayeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelayeighth.setStatus('current')
upsEventGetNexteighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNexteighth.setStatus('current')
upsEventGetPreviouseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviouseighth.setStatus('current')
upsEventSetStartingTimeStampeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampeighth.setStatus('current')
upsEventRetreiveCurrentTimeStampeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampeighth.setStatus('current')
upsEventTableSizeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizeeighth.setStatus('current')
upsEventEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 6), )
if mibBuilder.loadTexts: upsEventEighthTable.setStatus('current')
upsEventEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 6, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsEventLineIndexeighth"))
if mibBuilder.loadTexts: upsEventEighthEntry.setStatus('current')
upsEventLineIndexeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexeighth.setStatus('current')
upsEventCodeeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodeeighth.setStatus('current')
upsEventStatuseighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatuseighth.setStatus('current')
upsEventTimeeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimeeighth.setStatus('current')
upsParametersReadeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadeighth.setStatus('current')
upsParametersWriteeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWriteeighth.setStatus('current')
upsParametersStartAddresseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddresseighth.setStatus('current')
upsParameterTableSizeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizeeighth.setStatus('current')
upsParameterEighthTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 11), )
if mibBuilder.loadTexts: upsParameterEighthTable.setStatus('current')
upsParameterEighthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 11, 1), ).setIndexNames((0, "GEPARALLELUPS-MIB", "upsParameterLineIndexeighth"))
if mibBuilder.loadTexts: upsParameterEighthEntry.setStatus('current')
upsParameterLineIndexeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexeighth.setStatus('current')
upsParameterValueeighth = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValueeighth.setStatus('current')
upsStatuseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatuseighth.setStatus('current')
upsMainsStatisticsMBfaileighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfaileighth.setStatus('current')
upsMainsStatisticsMRfaileighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfaileighth.setStatus('current')
upsMainsStatisticsB2eighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2eighth.setStatus('current')
upsMainsStatisticsB5eighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5eighth.setStatus('current')
upsMainsStatisticsB10eighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10eighth.setStatus('current')
upsMainsStatisticsB200eighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200eighth.setStatus('current')
upsMainsStatisticsBypReleighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypReleighth.setStatus('current')
upsTimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimeeighth.setStatus('current')
upsRequestPermissioneighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissioneighth.setStatus('current')
upsEventGetCodeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodeeighth.setStatus('current')
upsEventSpinLockeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockeighth.setStatus('current')
upsParameterSpinLockeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockeighth.setStatus('current')
upsTrapAlarmBatteryBadeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadeighth.setStatus('current')
upsTrapAlarmOnBatteryeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 2)).setObjects(("GEPARALLELUPS-MIB", "upsSecondsOnBatteryeighth"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryeighth.setStatus('current')
upsTrapAlarmLowBatteryeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryeighth.setStatus('current')
upsTrapAlarmDepletedBatteryeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryeighth.setStatus('current')
upsTrapAlarmTempBadeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 5)).setObjects(("GEPARALLELUPS-MIB", "upsBatteryTemperature"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadeighth.setStatus('current')
upsTrapAlarmInputBadeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadeighth.setStatus('current')
upsTrapAlarmOutputBadeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadeighth.setStatus('current')
upsTrapAlarmOutputOverloadeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 8)).setObjects(("GEPARALLELUPS-MIB", "upsOutputNumLineseighth"), ("GEPARALLELUPS-MIB", "upsOutputPercentLoadeighth"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadeighth.setStatus('current')
upsTrapAlarmOnBypasseighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypasseighth.setStatus('current')
upsTrapAlarmBypassBadeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadeighth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedeighth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedeighth.setStatus('current')
upsTrapAlarmChargerFailedeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedeighth.setStatus('current')
upsTrapAlarmUpsOutputOffeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOffeighth.setStatus('current')
upsTrapAlarmUpsSystemOffeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOffeighth.setStatus('current')
upsTrapAlarmFanFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureeighth.setStatus('current')
upsTrapAlarmFuseFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureeighth.setStatus('current')
upsTrapAlarmGeneralFaulteighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaulteighth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedeighth.setStatus('current')
upsTrapAlarmCommunicationsLosteighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLosteighth.setStatus('current')
upsTrapAlarmAwaitingPowereighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowereighth.setStatus('current')
upsTrapAlarmShutdownPendingeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 22)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayeighth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingeighth.setStatus('current')
upsTrapAlarmShutdownImminenteighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminenteighth.setStatus('current')
upsTrapAlarmTestInProgresseighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 24)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdeighth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgresseighth.setStatus('current')
upsTrapAlarmReceptacleOffeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOffeighth.setStatus('current')
upsTrapAlarmHighspeedBusFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailureeighth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailureeighth.setStatus('current')
upsTrapAlarmConnectivityBusFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailureeighth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailureeighth.setStatus('current')
upsTrapAlarmCurrentSharingFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailureeighth.setStatus('current')
upsTrapAlarmDCRippleFailureeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailureeighth.setStatus('current')
upsTrapAlarmBatteryBadRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredeighth.setStatus('current')
upsTrapAlarmOnBatteryRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredeighth.setStatus('current')
upsTrapAlarmLowBatteryRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredeighth.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredeighth.setStatus('current')
upsTrapAlarmTempBadRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredeighth.setStatus('current')
upsTrapAlarmInputBadRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredeighth.setStatus('current')
upsTrapAlarmOutputBadRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredeighth.setStatus('current')
upsTrapAlarmOutputOverloadRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredeighth.setStatus('current')
upsTrapAlarmOnBypassRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredeighth.setStatus('current')
upsTrapAlarmBypassBadRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredeighth.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredeighth.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredeighth.setStatus('current')
upsTrapAlarmChargerFailedRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredeighth.setStatus('current')
upsTrapAlarmUpsOutputOneighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOneighth.setStatus('current')
upsTrapAlarmUpsSystemOneighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOneighth.setStatus('current')
upsTrapAlarmFanFailureRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredeighth.setStatus('current')
upsTrapAlarmFuseFailureRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredeighth.setStatus('current')
upsTrapAlarmGeneralFaultRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredeighth.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredeighth.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredeighth.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredeighth.setStatus('current')
upsTrapAlarmShutdownPendingRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 54)).setObjects(("GEPARALLELUPS-MIB", "upsShutdownAfterDelayeighth"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredeighth.setStatus('current')
upsTrapAlarmShutdownImminentRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredeighth.setStatus('current')
upsTrapAlarmTestInProgressRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 56)).setObjects(("GEPARALLELUPS-MIB", "upsTestIdeighth"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredeighth.setStatus('current')
upsTrapAlarmReceptacleOneighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOneighth.setStatus('current')
upsTrapAlarmHighspeedBusRestoreeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestoreeighth.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestoreeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestoreeighth.setStatus('current')
upsTrapAlarmConnectivityBusRestoreeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestoreeighth.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredeighth.setStatus('current')
upsTrapAlarmCurrentSharingRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredeighth.setStatus('current')
upsTrapAlarmDCRippleRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredeighth.setStatus('current')
upsTrapAlarmValueLoweighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLoweighth.setStatus('current')
upsTrapAlarmValueHigheighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHigheighth.setStatus('current')
upsTrapAlarmValueLowRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredeighth.setStatus('current')
upsTrapAlarmValueHighRestoredeighth = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredeighth.setStatus('current')
upsDiagnosticBusJACommunicationStatuseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatuseighth.setStatus('current')
upsDiagnosticBusJBCommunicationStatuseighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatuseighth.setStatus('current')
upsDiagnosticBatteryLifetimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimeeighth.setStatus('current')
upsDiagnosticFansLifetimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimeeighth.setStatus('current')
upsDiagnosticDCcapacitorsLifetimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimeeighth.setStatus('current')
upsDiagnosticACcapacitorsLifetimeeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimeeighth.setStatus('current')
upsDiagnosticGlobalServiceCheckeighth = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 18, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckeighth.setStatus('current')
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsGetSetseventh=upsGetSetseventh, upsAlarmCommunicationsLostfirst=upsAlarmCommunicationsLostfirst, upsBypassOnOffeighth=upsBypassOnOffeighth, upsStatusseventh=upsStatusseventh, upsIdentUPSSoftwareVersioneighth=upsIdentUPSSoftwareVersioneighth, upsWellKnownTestsfifth=upsWellKnownTestsfifth, upsInputCurrent=upsInputCurrent, upsIdentManufacturerfifth=upsIdentManufacturerfifth, upsTestQuickBatteryTestfifth=upsTestQuickBatteryTestfifth, upsInputVoltageMin=upsInputVoltageMin, upsConfigStartDelayseventh=upsConfigStartDelayseventh, upsBatteryStatusfourth=upsBatteryStatusfourth, upsAlarmDescrseventh=upsAlarmDescrseventh, upsAlarmCommunicationsLostsecond=upsAlarmCommunicationsLostsecond, upsIdentModelfifth=upsIdentModelfifth, upsConfigOutputVAsixth=upsConfigOutputVAsixth, upsTrapAlarmCommunicationsLostfourth=upsTrapAlarmCommunicationsLostfourth, upsTrapAlarmChargerFailedRestoredsecond=upsTrapAlarmChargerFailedRestoredsecond, upsReceptacleFourthEntry=upsReceptacleFourthEntry, upsAlarmHighSpeedBusJBCRCFailuresixth=upsAlarmHighSpeedBusJBCRCFailuresixth, upsTrapAlarmHighspeedBusFailurefifth=upsTrapAlarmHighspeedBusFailurefifth, upsParameterFourthTable=upsParameterFourthTable, upsTestAbortTestInProgressseventh=upsTestAbortTestInProgressseventh, upsMainsStatisticsBypRelsixth=upsMainsStatisticsBypRelsixth, upsAlarmsPresentseventh=upsAlarmsPresentseventh, upsTrapAlarmReceptacleOfffifth=upsTrapAlarmReceptacleOfffifth, upsConfigsecond=upsConfigsecond, upsTrapAlarmValueHigheighth=upsTrapAlarmValueHigheighth, upsMainsStatisticsB10fourth=upsMainsStatisticsB10fourth, upsOutputPeakCurrenteighth=upsOutputPeakCurrenteighth, upsBypassSeventhEntry=upsBypassSeventhEntry, upsInverterOnOffsecond=upsInverterOnOffsecond, upsTrapAlarmDiagnosticTestFailedRestored=upsTrapAlarmDiagnosticTestFailedRestored, upsAlarmDiagnosticTestFailedsecond=upsAlarmDiagnosticTestFailedsecond, upsParameterThirdTable=upsParameterThirdTable, upsInputLineIndexthird=upsInputLineIndexthird, upsTrapAlarmCommunicationsLostRestoredthird=upsTrapAlarmCommunicationsLostRestoredthird, upsMainsStatisticsMBfailseventh=upsMainsStatisticsMBfailseventh, upsParameterSpinLocksixth=upsParameterSpinLocksixth, upsTrapAlarmConnectivityBusRestored=upsTrapAlarmConnectivityBusRestored, upsConfigHighVoltageTransferPointthird=upsConfigHighVoltageTransferPointthird, upsInputLineIndexsixth=upsInputLineIndexsixth, upsAlarmCommunicationsLostthird=upsAlarmCommunicationsLostthird, upsShutdownAfterDelayeighth=upsShutdownAfterDelayeighth, upsBypasssixth=upsBypasssixth, geHardware=geHardware, upsShutdownTypeeighth=upsShutdownTypeeighth, upsTestIdthird=upsTestIdthird, upsTrapAlarmLowBatteryRestoredfifth=upsTrapAlarmLowBatteryRestoredfifth, upsAlarmSixthTable=upsAlarmSixthTable, upsIdentModel=upsIdentModel, upsAlarmBypassBadseventh=upsAlarmBypassBadseventh, upsTrapAlarmUpsOutputOnsecond=upsTrapAlarmUpsOutputOnsecond, upsTrapAlarmTempBadfifth=upsTrapAlarmTempBadfifth, upsEventSpinLockfifth=upsEventSpinLockfifth, upsTestfirst=upsTestfirst, upsTrapAlarmTestInProgressRestoredfirst=upsTrapAlarmTestInProgressRestoredfirst, upsIdentOperatingTime=upsIdentOperatingTime, upsGetSeteighth=upsGetSeteighth, upsParameterSpinLockthird=upsParameterSpinLockthird, upsBypassFrequencyseventh=upsBypassFrequencyseventh, upsAlarmBypassBadfirst=upsAlarmBypassBadfirst, upsIdenteighth=upsIdenteighth, upsInputFrequencyfifth=upsInputFrequencyfifth, upsTrapAlarmValueLowthird=upsTrapAlarmValueLowthird, upsAlarmEighthTable=upsAlarmEighthTable, upsBatteryeighth=upsBatteryeighth, upsAlarmOutputOffAsRequestedfirst=upsAlarmOutputOffAsRequestedfirst, upsAlarmShutdownPendingfifth=upsAlarmShutdownPendingfifth, upsShutdownAfterDelayfirst=upsShutdownAfterDelayfirst, upsAlarmDepletedBattery=upsAlarmDepletedBattery, upsTestId=upsTestId, upsRequestPermissionthird=upsRequestPermissionthird, upsLoadSourcethird=upsLoadSourcethird, upsAlarmGeneralFaultsecond=upsAlarmGeneralFaultsecond, upsStatusfourth=upsStatusfourth, upsTrapAlarmFanFailuresixth=upsTrapAlarmFanFailuresixth, upsAlarmFourthEntry=upsAlarmFourthEntry, upsIdentUPSSoftwareVersionfirst=upsIdentUPSSoftwareVersionfirst, upsTrapAlarmOnBatteryRestoredsecond=upsTrapAlarmOnBatteryRestoredsecond, upsTrapAlarmGeneralFault=upsTrapAlarmGeneralFault, upsEventLineIndexfifth=upsEventLineIndexfifth, upsInputVoltageMaxseventh=upsInputVoltageMaxseventh, upsAutoRestartsixth=upsAutoRestartsixth, upsTrapAlarmFanFailurefourth=upsTrapAlarmFanFailurefourth, upsBatteryCurrentfifth=upsBatteryCurrentfifth, upsAlarmDCRipplesixth=upsAlarmDCRipplesixth, upsTrapAlarmOutputBadfirst=upsTrapAlarmOutputBadfirst, upsBypassNumLineseighth=upsBypassNumLineseighth, upsTrapAlarmOnBypassfirst=upsTrapAlarmOnBypassfirst, upsTrapAlarmShutdownPending=upsTrapAlarmShutdownPending, upsAlarmTimefourth=upsAlarmTimefourth, upsAlarmBypassBadthird=upsAlarmBypassBadthird, upsTrapAlarmOutputOverloadsecond=upsTrapAlarmOutputOverloadsecond, upsAlarmHighSpeedBusFailureseventh=upsAlarmHighSpeedBusFailureseventh, upsAlarmOutputOffAsRequestedeighth=upsAlarmOutputOffAsRequestedeighth, upsTrapAlarmOutputOffAsRequestedRestoredsecond=upsTrapAlarmOutputOffAsRequestedRestoredsecond, upsDiagnosticFansLifetimesixth=upsDiagnosticFansLifetimesixth, upsTrapAlarmHighspeedBusFailuresecond=upsTrapAlarmHighspeedBusFailuresecond, upsOutputFrequencyfifth=upsOutputFrequencyfifth, upsConfigStartDelay=upsConfigStartDelay, upsOutputVoltagesixth=upsOutputVoltagesixth, upsOutputPowerFactorseventh=upsOutputPowerFactorseventh, upsConfigInputVoltagefourth=upsConfigInputVoltagefourth, upsTrapAlarmUpsOutputOffsixth=upsTrapAlarmUpsOutputOffsixth, upsTrapAlarmCurrentSharingRestoredsixth=upsTrapAlarmCurrentSharingRestoredsixth, upsBatteryCurrenteighth=upsBatteryCurrenteighth, upsTrapAlarmCurrentSharingFailurethird=upsTrapAlarmCurrentSharingFailurethird, upsOutputNumLinessixth=upsOutputNumLinessixth, upsTestNoTestsInitiatedsixth=upsTestNoTestsInitiatedsixth, upsTrapAlarmBatteryBadeighth=upsTrapAlarmBatteryBadeighth, upsTestAbortTestInProgressfourth=upsTestAbortTestInProgressfourth, upsTestAbortTestInProgresssixth=upsTestAbortTestInProgresssixth, upsBatteryChargeMethodseventh=upsBatteryChargeMethodseventh, upsTestStartTimeseventh=upsTestStartTimeseventh, upsBypassCurrentsecond=upsBypassCurrentsecond, upsEventCodeseventh=upsEventCodeseventh, upsEstimatedMinutesRemainingsecond=upsEstimatedMinutesRemainingsecond, upsTrapAlarmTempBadRestoredsecond=upsTrapAlarmTempBadRestoredsecond, upsAlarmOutputBadthird=upsAlarmOutputBadthird, upsInputVoltageMinseventh=upsInputVoltageMinseventh, upsTrapAlarmTestInProgress=upsTrapAlarmTestInProgress, upsOutputNumLinesfifth=upsOutputNumLinesfifth, upsTrapAlarmShutdownImminentfirst=upsTrapAlarmShutdownImminentfirst, upsMainsStatisticsB5first=upsMainsStatisticsB5first, upsOutputSeventhTable=upsOutputSeventhTable, upsEventLineIndexfirst=upsEventLineIndexfirst, upsBatteryVoltagesixth=upsBatteryVoltagesixth, upsAlarmHighSpeedBusJBCRCFailureseventh=upsAlarmHighSpeedBusJBCRCFailureseventh, upsTrapAlarmDCRippleFailureseventh=upsTrapAlarmDCRippleFailureseventh, upsAlarmOutputOverloadseventh=upsAlarmOutputOverloadseventh, upsOutputPeakCurrentfifth=upsOutputPeakCurrentfifth, upsInputsecond=upsInputsecond, upsAlarmFanFailuresecond=upsAlarmFanFailuresecond, upsAlarmTestInProgresssixth=upsAlarmTestInProgresssixth, geFifthUPS=geFifthUPS, upsTestGeneralSystemsTest=upsTestGeneralSystemsTest, upsTrapAlarmUpsOffAsRequestedRestored=upsTrapAlarmUpsOffAsRequestedRestored, upsConfigLowVoltageTransferPointfifth=upsConfigLowVoltageTransferPointfifth, upsTrapAlarmTempBadRestoredfourth=upsTrapAlarmTempBadRestoredfourth, upsIdentNamesecond=upsIdentNamesecond, upsOutputVoltagefourth=upsOutputVoltagefourth, upsTrapAlarmShutdownImminentRestoredseventh=upsTrapAlarmShutdownImminentRestoredseventh, upsConfigAudibleStatusfirst=upsConfigAudibleStatusfirst, upsTrapAlarmInputBadsixth=upsTrapAlarmInputBadsixth, upsOutputSourceeighth=upsOutputSourceeighth, upsTrapAlarmCurrentSharingFailurefirst=upsTrapAlarmCurrentSharingFailurefirst, upsTrapAlarmOutputOverloadRestoredeighth=upsTrapAlarmOutputOverloadRestoredeighth, upsAlarmOnBypassfourth=upsAlarmOnBypassfourth, upsOutputFrequencysixth=upsOutputFrequencysixth, upsEventRetreiveCurrentTimeStampeighth=upsEventRetreiveCurrentTimeStampeighth, upsTrapAlarmConnectivityBusRestoredfirst=upsTrapAlarmConnectivityBusRestoredfirst, upsEventGetNextsecond=upsEventGetNextsecond, upsInputLineIndex=upsInputLineIndex, upsTestDeepBatteryCalibrationfifth=upsTestDeepBatteryCalibrationfifth, upsAlarmReceptacleOfffifth=upsAlarmReceptacleOfffifth, upsConfigOutputPowerfourth=upsConfigOutputPowerfourth, upsTestElapsedTimesecond=upsTestElapsedTimesecond, upsTrapAlarmInputBad=upsTrapAlarmInputBad, upsRectifierOnOfffourth=upsRectifierOnOfffourth, upsTrapAlarmConnectivityBusFailuresixth=upsTrapAlarmConnectivityBusFailuresixth, upsAlarmOutputOffAsRequestedthird=upsAlarmOutputOffAsRequestedthird, upsAlarmConnectivityBusFailure=upsAlarmConnectivityBusFailure, upsInputCurrentseventh=upsInputCurrentseventh, upsTestNoTestsInitiatedfifth=upsTestNoTestsInitiatedfifth, upsMainsStatisticsB200second=upsMainsStatisticsB200second, upsTrapAlarmValueHighfirst=upsTrapAlarmValueHighfirst, upsInputVoltageMaxsecond=upsInputVoltageMaxsecond, upsIdentManufacturerfourth=upsIdentManufacturerfourth, upsTrapAlarmValueLowRestoredeighth=upsTrapAlarmValueLowRestoredeighth, upsTrapAlarmHighspeedBusJACRCRestored=upsTrapAlarmHighspeedBusJACRCRestored, upsUPSModefirst=upsUPSModefirst, upsMainsStatisticsMBfailthird=upsMainsStatisticsMBfailthird, upsOutputfourth=upsOutputfourth, upsTrapAlarmOnBypass=upsTrapAlarmOnBypass, upsTrapAlarmHighspeedBusJACRCFailurefifth=upsTrapAlarmHighspeedBusJACRCFailurefifth, upsConfigOutputFreqeighth=upsConfigOutputFreqeighth, upsParameterSpinLockfifth=upsParameterSpinLockfifth, upsOutputCurrentseventh=upsOutputCurrentseventh, upsEventFourthTable=upsEventFourthTable, upsReceptaclesNum=upsReceptaclesNum, upsTrapAlarmBypassBadseventh=upsTrapAlarmBypassBadseventh, upsOutputEntry=upsOutputEntry, upsAlarmDescr=upsAlarmDescr, upsConfigOutputPowereighth=upsConfigOutputPowereighth, upsTrapAlarmHighspeedBusJBCRCFailurefourth=upsTrapAlarmHighspeedBusJBCRCFailurefourth, upsBatteryStatus=upsBatteryStatus, upsTrapAlarmLowBatteryRestoredfirst=upsTrapAlarmLowBatteryRestoredfirst, upsTrapAlarmShutdownImminentRestoredfifth=upsTrapAlarmShutdownImminentRestoredfifth, upsEstimatedMinutesRemaining=upsEstimatedMinutesRemaining, upsBypassPower=upsBypassPower, upsConfigInputFreq=upsConfigInputFreq, upsSecondsOnBatterythird=upsSecondsOnBatterythird, upsStatus=upsStatus, upsTestResultsSummarysecond=upsTestResultsSummarysecond, upsTrapAlarmReceptacleOnthird=upsTrapAlarmReceptacleOnthird, upsOutputSixthTable=upsOutputSixthTable, upsTestResultsSummaryeighth=upsTestResultsSummaryeighth, upsOutputShareCurrentsixth=upsOutputShareCurrentsixth, upsInputVoltageMinfirst=upsInputVoltageMinfirst, upsOutputSeventhEntry=upsOutputSeventhEntry, upsInputVoltageMaxfifth=upsInputVoltageMaxfifth, upsEventTable=upsEventTable, upsAlarmDescrfourth=upsAlarmDescrfourth, upsInputFourthEntry=upsInputFourthEntry, upsRequestPermissionfourth=upsRequestPermissionfourth, upsOutputPowerfifth=upsOutputPowerfifth, upsTrapAlarmFuseFailurethird=upsTrapAlarmFuseFailurethird, upsConfigNoLoadShutdownfourth=upsConfigNoLoadShutdownfourth, upsAlarmFuseFailurefifth=upsAlarmFuseFailurefifth, upsMainsStatisticsMBfailsecond=upsMainsStatisticsMBfailsecond, upsIdentComProtVersionthird=upsIdentComProtVersionthird, upsAlarmOnBatteryeighth=upsAlarmOnBatteryeighth, upsParametersStartAddressfourth=upsParametersStartAddressfourth, upsAlarmDescrsixth=upsAlarmDescrsixth, upsAlarmCommunicationsLosteighth=upsAlarmCommunicationsLosteighth, upsTrapAlarmShutdownPendingRestored=upsTrapAlarmShutdownPendingRestored, upsTrapAlarmHighspeedBusJBCRCRestoredfirst=upsTrapAlarmHighspeedBusJBCRCRestoredfirst, upsTrapAlarmOutputOverloadRestored=upsTrapAlarmOutputOverloadRestored, upsTrapAlarmFuseFailureRestoredfirst=upsTrapAlarmFuseFailureRestoredfirst, upsOutputPowerfourth=upsOutputPowerfourth, upsIdentNameeighth=upsIdentNameeighth, upsIdentUPSSerialNumberfourth=upsIdentUPSSerialNumberfourth, upsSecondsOnBatteryeighth=upsSecondsOnBatteryeighth, upsTestAbortTestInProgresssecond=upsTestAbortTestInProgresssecond, upsMainsStatisticsMRfailthird=upsMainsStatisticsMRfailthird, upsOutputEighthEntry=upsOutputEighthEntry, upsBypassCurrentfourth=upsBypassCurrentfourth, PYSNMP_MODULE_ID=imv, upsAlarmInputBadfourth=upsAlarmInputBadfourth, upsEventFifthTable=upsEventFifthTable, upsAlarmUpsOffAsRequestedseventh=upsAlarmUpsOffAsRequestedseventh, upsOutputThirdEntry=upsOutputThirdEntry, upsTrapAlarmOutputOverloadeighth=upsTrapAlarmOutputOverloadeighth, upsBatterysecond=upsBatterysecond, upsTrapAlarmUpsOffAsRequestedRestoredsecond=upsTrapAlarmUpsOffAsRequestedRestoredsecond, upsInputFrequencythird=upsInputFrequencythird, upsParameterTableSizefirst=upsParameterTableSizefirst, upsAlarmDescrsecond=upsAlarmDescrsecond, upsParameterSpinLockseventh=upsParameterSpinLockseventh, upsEventStatus=upsEventStatus, upsReceptacleOnOffsecond=upsReceptacleOnOffsecond, upsTrapAlarmTestInProgressRestoredseventh=upsTrapAlarmTestInProgressRestoredseventh, upsAlarmDCRipplethird=upsAlarmDCRipplethird, upsTrapAlarmDepletedBatteryRestoredfirst=upsTrapAlarmDepletedBatteryRestoredfirst, upsDiagnosticBusJBCommunicationStatussecond=upsDiagnosticBusJBCommunicationStatussecond, upsTrapAlarmUpsOffAsRequestedsecond=upsTrapAlarmUpsOffAsRequestedsecond, upsReceptacleFifthTable=upsReceptacleFifthTable, upsTrapAlarmDepletedBatteryRestored=upsTrapAlarmDepletedBatteryRestored, upsTrapAlarmDCRippleRestoredfourth=upsTrapAlarmDCRippleRestoredfourth, upsTrapAlarmOnBypassthird=upsTrapAlarmOnBypassthird, upsTrapAlarmLowBatterysecond=upsTrapAlarmLowBatterysecond, upsTrapAlarmHighspeedBusJBCRCRestoredfifth=upsTrapAlarmHighspeedBusJBCRCRestoredfifth, upsTrapAlarmUpsSystemOffthird=upsTrapAlarmUpsSystemOffthird)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsParameterSpinLockeighth=upsParameterSpinLockeighth, upsWellKnownAlarmsfifth=upsWellKnownAlarmsfifth, upsAlarmTempBadsecond=upsAlarmTempBadsecond, upsTestGeneralSystemsTestfifth=upsTestGeneralSystemsTestfifth, upsMainsStatisticsMBfailsixth=upsMainsStatisticsMBfailsixth, upsAlarmGeneralFault=upsAlarmGeneralFault, upsIdentUPSSerialNumbersecond=upsIdentUPSSerialNumbersecond, upsAlarmInputBadsecond=upsAlarmInputBadsecond, upsAlarmOnBatteryfourth=upsAlarmOnBatteryfourth, upsTrapAlarmShutdownImminentsixth=upsTrapAlarmShutdownImminentsixth, upsTrapAlarmShutdownPendingfourth=upsTrapAlarmShutdownPendingfourth, upsAlarmOnBypasssecond=upsAlarmOnBypasssecond, upsTrapAlarmUpsSystemOffsixth=upsTrapAlarmUpsSystemOffsixth, upsTestStartTimefourth=upsTestStartTimefourth, upsReceptaclesNumfifth=upsReceptaclesNumfifth, upsTrapAlarmShutdownPendingRestoredsecond=upsTrapAlarmShutdownPendingRestoredsecond, upsAlarmHighSpeedBusFailureeighth=upsAlarmHighSpeedBusFailureeighth, upsTrapAlarmGeneralFaultRestored=upsTrapAlarmGeneralFaultRestored, upsOutputSourcesixth=upsOutputSourcesixth, upsConfigBatteryCapacitysecond=upsConfigBatteryCapacitysecond, upsIdentComProtVersionfifth=upsIdentComProtVersionfifth, upsEventLineIndexeighth=upsEventLineIndexeighth, upsEstimatedChargeRemainingseventh=upsEstimatedChargeRemainingseventh, upsTrapAlarmOutputOverloadfourth=upsTrapAlarmOutputOverloadfourth, upsTrapAlarmGeneralFaultRestoredfirst=upsTrapAlarmGeneralFaultRestoredfirst, upsEventSetStartingTimeStampsixth=upsEventSetStartingTimeStampsixth, upsInverterOnOfffifth=upsInverterOnOfffifth, upsTrapAlarmReceptacleOffeighth=upsTrapAlarmReceptacleOffeighth, upsTestIdsixth=upsTestIdsixth, upsOutputVoltagethird=upsOutputVoltagethird, upsTrapAlarmShutdownImminentfourth=upsTrapAlarmShutdownImminentfourth, upsTrapAlarmTempBadRestoredsixth=upsTrapAlarmTempBadRestoredsixth, upsInputLineIndexfirst=upsInputLineIndexfirst, upsBattery=upsBattery, upsTestResultsSummaryseventh=upsTestResultsSummaryseventh, upsParameterLineIndexfourth=upsParameterLineIndexfourth, upsInputFrequencysecond=upsInputFrequencysecond, upsTrapAlarmUpsSystemOffsecond=upsTrapAlarmUpsSystemOffsecond, upsBatteryRipplefourth=upsBatteryRipplefourth, upsTestAbortTestInProgressthird=upsTestAbortTestInProgressthird, upsParameterSixthTable=upsParameterSixthTable, upsTrapAlarmOutputBadRestoredsixth=upsTrapAlarmOutputBadRestoredsixth, upsAlarmChargerFailedthird=upsAlarmChargerFailedthird, upsTrapAlarmOutputOverloadRestoredsixth=upsTrapAlarmOutputOverloadRestoredsixth, upsTrapAlarmShutdownPendingsecond=upsTrapAlarmShutdownPendingsecond, upsMainsStatisticsMRfailseventh=upsMainsStatisticsMRfailseventh, upsReceptacleLineIndexseventh=upsReceptacleLineIndexseventh, upsBypassEighthTable=upsBypassEighthTable, upsEventTimefirst=upsEventTimefirst, upsTrapAlarmCommunicationsLostfirst=upsTrapAlarmCommunicationsLostfirst, upsInputSecondEntry=upsInputSecondEntry, upsTrapAlarmBatteryBadRestoredfirst=upsTrapAlarmBatteryBadRestoredfirst, upsTrapAlarmConnectivityBusFailuresecond=upsTrapAlarmConnectivityBusFailuresecond, upsOutputPowerseventh=upsOutputPowerseventh, upsInputFourthTable=upsInputFourthTable, upsTrapAlarmHighspeedBusJBCRCFailure=upsTrapAlarmHighspeedBusJBCRCFailure, upsTrapAlarmUpsOffAsRequestedfourth=upsTrapAlarmUpsOffAsRequestedfourth, upsTrapAlarmBypassBadRestored=upsTrapAlarmBypassBadRestored, upsAlarmConnectivityBusFailurefifth=upsAlarmConnectivityBusFailurefifth, upsShutdownTypesixth=upsShutdownTypesixth, geReplyPacket=geReplyPacket, upsTrapAlarmConnectivityBusRestorefifth=upsTrapAlarmConnectivityBusRestorefifth, upsTrapAlarmOnBypassRestored=upsTrapAlarmOnBypassRestored, upsInputVoltageMinfifth=upsInputVoltageMinfifth, upsTrapAlarmInputBadRestoredfourth=upsTrapAlarmInputBadRestoredfourth, upsBypassCurrent=upsBypassCurrent, upsOutputLineIndexsixth=upsOutputLineIndexsixth, upsAlarmHighSpeedBusJACRCFailurethird=upsAlarmHighSpeedBusJACRCFailurethird, upsIdentAgentSoftwareVersionseventh=upsIdentAgentSoftwareVersionseventh, upsTrapAlarmChargerFailedseventh=upsTrapAlarmChargerFailedseventh, upsMainsStatisticsMRfailfirst=upsMainsStatisticsMRfailfirst, upsBypassFrequencyeighth=upsBypassFrequencyeighth, upsBypassVoltageseventh=upsBypassVoltageseventh, upsTrapAlarmHighspeedBusJBCRCRestoredsecond=upsTrapAlarmHighspeedBusJBCRCRestoredsecond, upsStatussecond=upsStatussecond, upsTrapAlarmReceptacleOnsecond=upsTrapAlarmReceptacleOnsecond, upsBypassFifthEntry=upsBypassFifthEntry, upsConfigOutputVoltagefirst=upsConfigOutputVoltagefirst, upsConfigseventh=upsConfigseventh, upsTrapAlarmBypassBadthird=upsTrapAlarmBypassBadthird, upsAlarmDescrfifth=upsAlarmDescrfifth, upsBatterysixth=upsBatterysixth, upsOutputCurrent=upsOutputCurrent, upsTrapAlarmLowBatteryseventh=upsTrapAlarmLowBatteryseventh, upsTrapAlarmFanFailureRestoredfourth=upsTrapAlarmFanFailureRestoredfourth, upsOutputSourcethird=upsOutputSourcethird, upsBypassLineIndexseventh=upsBypassLineIndexseventh, upsTrapAlarmDCRippleRestoredfirst=upsTrapAlarmDCRippleRestoredfirst, upsEventTableSizefourth=upsEventTableSizefourth, upsBypassCurrentfirst=upsBypassCurrentfirst, upsShutdownTypethird=upsShutdownTypethird, upsInputLineIndexfourth=upsInputLineIndexfourth, upsWellKnownTeststhird=upsWellKnownTeststhird, upsTrapAlarmChargerFailedRestoredthird=upsTrapAlarmChargerFailedRestoredthird, upsEventFifthEntry=upsEventFifthEntry, upsMainsStatisticsB5seventh=upsMainsStatisticsB5seventh, upsTrapAlarmHighspeedBusJBCRCRestoredseventh=upsTrapAlarmHighspeedBusJBCRCRestoredseventh, upsOutputeighth=upsOutputeighth, upsGetSetthird=upsGetSetthird, upsTrapAlarmOnBypassRestoredsixth=upsTrapAlarmOnBypassRestoredsixth, upsEventSixthTable=upsEventSixthTable, upsBatteryRipplefirst=upsBatteryRipplefirst, upsBatteryChargeMethodfirst=upsBatteryChargeMethodfirst, upsAlarmUpsOffAsRequestedfourth=upsAlarmUpsOffAsRequestedfourth, upsConfigeighth=upsConfigeighth, upsReceptacleOnOfffirst=upsReceptacleOnOfffirst, upsTrapAlarmOutputOffAsRequestedRestored=upsTrapAlarmOutputOffAsRequestedRestored, upsAlarmHighSpeedBusJACRCFailureseventh=upsAlarmHighSpeedBusJACRCFailureseventh, upsAlarmOutputOffAsRequested=upsAlarmOutputOffAsRequested, upsAlarmMaskAfifth=upsAlarmMaskAfifth, geSeventhUPS=geSeventhUPS, upsUPSMode=upsUPSMode, upsAlarmUpsOffAsRequestedsixth=upsAlarmUpsOffAsRequestedsixth, upsTrapAlarmHighspeedBusRestoredsecond=upsTrapAlarmHighspeedBusRestoredsecond, upsMainsStatisticsB2sixth=upsMainsStatisticsB2sixth, upsEventRetreiveCurrentTimeStampsixth=upsEventRetreiveCurrentTimeStampsixth, upsTrapAlarmCurrentSharingFailurefourth=upsTrapAlarmCurrentSharingFailurefourth, upsAlarmTable=upsAlarmTable, upsBatteryChargeMethodthird=upsBatteryChargeMethodthird, upsTrapAlarmShutdownImminentthird=upsTrapAlarmShutdownImminentthird, upsParametersReadthird=upsParametersReadthird, upsTrapAlarmCommunicationsLostfifth=upsTrapAlarmCommunicationsLostfifth, upsAlarmDCRipple=upsAlarmDCRipple, upsInverterOnOfffourth=upsInverterOnOfffourth, upsBatteryTemperature=upsBatteryTemperature, upsTrapAlarmOnBypassRestoredsecond=upsTrapAlarmOnBypassRestoredsecond, upsBatteryVoltagefourth=upsBatteryVoltagefourth, upsTrapAlarmOnBypasseighth=upsTrapAlarmOnBypasseighth, upsTrapAlarmBypassBadRestoredseventh=upsTrapAlarmBypassBadRestoredseventh, upsConfigfourth=upsConfigfourth, upsConfigInputFreqthird=upsConfigInputFreqthird, upsTrapAlarmBatteryBadRestoredfifth=upsTrapAlarmBatteryBadRestoredfifth, upsStartupAfterDelayseventh=upsStartupAfterDelayseventh, upsBatteryChargeMethodfifth=upsBatteryChargeMethodfifth, upsTrapAlarmDepletedBatteryRestoredsecond=upsTrapAlarmDepletedBatteryRestoredsecond, upsInputEighthEntry=upsInputEighthEntry, upsIdentAgentSoftwareVersioneighth=upsIdentAgentSoftwareVersioneighth, upsDiagnosticBusJBCommunicationStatusfourth=upsDiagnosticBusJBCommunicationStatusfourth, upsTestElapsedTimesixth=upsTestElapsedTimesixth, upsBypassOnOffsecond=upsBypassOnOffsecond, upsBypassPowerfirst=upsBypassPowerfirst, upsTrapAlarmHighspeedBusJACRCFailuresecond=upsTrapAlarmHighspeedBusJACRCFailuresecond, upsInputTruePower=upsInputTruePower, upsAlarmInputBadfirst=upsAlarmInputBadfirst, upsEventGetCodeeighth=upsEventGetCodeeighth, upsInputTable=upsInputTable, upsDiagnosticFansLifetime=upsDiagnosticFansLifetime, upsAlarmsPresentfourth=upsAlarmsPresentfourth, upsTrapAlarmTestInProgressthird=upsTrapAlarmTestInProgressthird, upsTrapAlarmHighspeedBusJACRCRestorefourth=upsTrapAlarmHighspeedBusJACRCRestorefourth, upsTrapAlarmDepletedBatteryfifth=upsTrapAlarmDepletedBatteryfifth, upsParameterLineIndexfirst=upsParameterLineIndexfirst, upsInputVoltagefourth=upsInputVoltagefourth, upsTrapAlarmTestInProgressfourth=upsTrapAlarmTestInProgressfourth, upsAlarmOnBattery=upsAlarmOnBattery, upsAlarmBypassBadfourth=upsAlarmBypassBadfourth, upsBatteryseventh=upsBatteryseventh, upsAlarmHighSpeedBusJBCRCFailurethird=upsAlarmHighSpeedBusJBCRCFailurethird, upsTrapAlarmShutdownPendingRestoredseventh=upsTrapAlarmShutdownPendingRestoredseventh, upsEventCodefirst=upsEventCodefirst, upsEventRetreiveCurrentTimeStampseventh=upsEventRetreiveCurrentTimeStampseventh, upsAlarmAwaitingPowerthird=upsAlarmAwaitingPowerthird, upsWellKnownTestssecond=upsWellKnownTestssecond, upsIdentNamethird=upsIdentNamethird, upsDiagnosticBusJACommunicationStatusfifth=upsDiagnosticBusJACommunicationStatusfifth, upsOutputSourcesecond=upsOutputSourcesecond, upsTrapAlarmOnBatteryfirst=upsTrapAlarmOnBatteryfirst, upsInputLineBadsseventh=upsInputLineBadsseventh, upsTrapAlarmCurrentSharingFailure=upsTrapAlarmCurrentSharingFailure, upsIdentUPSSoftwareVersionfourth=upsIdentUPSSoftwareVersionfourth, upsTrapAlarmConnectivityBusRestorethird=upsTrapAlarmConnectivityBusRestorethird, upsAlarmDCRipplefifth=upsAlarmDCRipplefifth, upsConfig=upsConfig, upsTrapAlarmInputBadfirst=upsTrapAlarmInputBadfirst, upsParametersStartAddresssixth=upsParametersStartAddresssixth, upsTrapAlarmCommunicationsLostsixth=upsTrapAlarmCommunicationsLostsixth, upsAlarmLowBatterysecond=upsAlarmLowBatterysecond, upsTrapAlarmBatteryBadfourth=upsTrapAlarmBatteryBadfourth, upsTrapAlarmHighspeedBusJBCRCFailuresixth=upsTrapAlarmHighspeedBusJBCRCFailuresixth, upsTestAbortTestInProgressfirst=upsTestAbortTestInProgressfirst, geUPSTrapsseventh=geUPSTrapsseventh, upsTrapAlarmAwaitingPowerfourth=upsTrapAlarmAwaitingPowerfourth, upsBypassFrequencyfifth=upsBypassFrequencyfifth, upsAlarmDepletedBatteryfirst=upsAlarmDepletedBatteryfirst, upsShutdownAfterDelaysecond=upsShutdownAfterDelaysecond, upsAlarmShutdownPendingfirst=upsAlarmShutdownPendingfirst, upsTrapAlarmOutputBadeighth=upsTrapAlarmOutputBadeighth, upsMainsStatisticsMRfail=upsMainsStatisticsMRfail, upsReceptacleFourthTable=upsReceptacleFourthTable, upsMainsStatisticsB5third=upsMainsStatisticsB5third, upsTrapAlarmTestInProgresseighth=upsTrapAlarmTestInProgresseighth, upsAlarmConnectivityBusFailurefourth=upsAlarmConnectivityBusFailurefourth, upsAlarmFuseFailuresecond=upsAlarmFuseFailuresecond, upsMainsStatisticsMRfailsixth=upsMainsStatisticsMRfailsixth, upsIdentOperatingTimesixth=upsIdentOperatingTimesixth, upsDiagnosticACcapacitorsLifetimeseventh=upsDiagnosticACcapacitorsLifetimeseventh, upsTestElapsedTime=upsTestElapsedTime, upsAlarmCommunicationsLostfourth=upsAlarmCommunicationsLostfourth, upsWellKnownTestsseventh=upsWellKnownTestsseventh, upsTrapAlarmValueLowfourth=upsTrapAlarmValueLowfourth, upsTrapAlarmDepletedBatterysecond=upsTrapAlarmDepletedBatterysecond, upsTrapAlarmBatteryBadRestoredseventh=upsTrapAlarmBatteryBadRestoredseventh, upsAlarmOnBypass=upsAlarmOnBypass, upsBatteryVoltageseventh=upsBatteryVoltageseventh, upsAlarmFifthTable=upsAlarmFifthTable, upsAlarmOnBatteryseventh=upsAlarmOnBatteryseventh, upsConfigOutputFreqfifth=upsConfigOutputFreqfifth, upsTrapAlarmTempBad=upsTrapAlarmTempBad, upsTestResultsSummaryfourth=upsTestResultsSummaryfourth, upsEventCodesixth=upsEventCodesixth, upsTrapAlarmValueHighRestoredfirst=upsTrapAlarmValueHighRestoredfirst, upsAlarmSeventhEntry=upsAlarmSeventhEntry, upsTrapAlarmBypassBadRestoredsixth=upsTrapAlarmBypassBadRestoredsixth, upsIdentfirst=upsIdentfirst, upsParameterFifthTable=upsParameterFifthTable, upsTrapAlarmHighspeedBusJACRCFailuresixth=upsTrapAlarmHighspeedBusJACRCFailuresixth, upsEventTableSize=upsEventTableSize, PositiveInteger32=PositiveInteger32, upsTrapAlarmGeneralFaultfifth=upsTrapAlarmGeneralFaultfifth, upsOutputCurrenteighth=upsOutputCurrenteighth, upsParameterFirstEntry=upsParameterFirstEntry, upsBatteryCurrentthird=upsBatteryCurrentthird, upsEventRetreiveCurrentTimeStampthird=upsEventRetreiveCurrentTimeStampthird, upsTrapAlarmHighspeedBusJACRCFailureeighth=upsTrapAlarmHighspeedBusJACRCFailureeighth, upsWellKnownAlarmsthird=upsWellKnownAlarmsthird, upsAutoRestartfirst=upsAutoRestartfirst, upsTrapAlarmAwaitingPowereighth=upsTrapAlarmAwaitingPowereighth, upsTrapAlarmOutputOverloadfifth=upsTrapAlarmOutputOverloadfifth, upsTrapAlarmFanFailureeighth=upsTrapAlarmFanFailureeighth, upsAlarmFourthTable=upsAlarmFourthTable, upsBypassOnOffsixth=upsBypassOnOffsixth, upsOutputPeakCurrentseventh=upsOutputPeakCurrentseventh, geFourthUPS=geFourthUPS, upsTrapAlarmConnectivityBusRestoreseventh=upsTrapAlarmConnectivityBusRestoreseventh, upsInverterOnOff=upsInverterOnOff, upsReceptacleOnOffseventh=upsReceptacleOnOffseventh, upsTrapAlarmHighspeedBusJBCRCFailurethird=upsTrapAlarmHighspeedBusJBCRCFailurethird, upsTrapAlarmHighspeedBusRestored=upsTrapAlarmHighspeedBusRestored, upsAlarmChargerFailedseventh=upsAlarmChargerFailedseventh, upsMainsStatisticsB2fourth=upsMainsStatisticsB2fourth, upsTrapAlarmDiagnosticTestFailedRestoredfifth=upsTrapAlarmDiagnosticTestFailedRestoredfifth, upsOutputLineIndexthird=upsOutputLineIndexthird, upsTrapAlarmHighspeedBusFailure=upsTrapAlarmHighspeedBusFailure, upsTrapAlarmDCRippleFailurethird=upsTrapAlarmDCRippleFailurethird, upsEventTimeeighth=upsEventTimeeighth, upsParameterValueeighth=upsParameterValueeighth, upsBypassVoltagefifth=upsBypassVoltagefifth, upsTestGeneralSystemsTestfourth=upsTestGeneralSystemsTestfourth, upsEventCode=upsEventCode, upsConfigNoLoadShutdownseventh=upsConfigNoLoadShutdownseventh, upsTestGeneralSystemsTestsixth=upsTestGeneralSystemsTestsixth, upsTrapAlarmCommunicationsLosteighth=upsTrapAlarmCommunicationsLosteighth, upsConfigAudibleStatusfifth=upsConfigAudibleStatusfifth, upsTrapAlarmValueHighseventh=upsTrapAlarmValueHighseventh)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsTrapAlarmLowBatterythird=upsTrapAlarmLowBatterythird, upsTrapAlarmShutdownImminentRestoredfourth=upsTrapAlarmShutdownImminentRestoredfourth, upsDiagnosticGlobalServiceCheckfirst=upsDiagnosticGlobalServiceCheckfirst, upsBatteryRipplefifth=upsBatteryRipplefifth, upsEventTimethird=upsEventTimethird, upsInputTruePowerseventh=upsInputTruePowerseventh, upsRebootWithDurationfirst=upsRebootWithDurationfirst, upsTrapAlarmGeneralFaultfirst=upsTrapAlarmGeneralFaultfirst, upsDiagnosticDCcapacitorsLifetimesecond=upsDiagnosticDCcapacitorsLifetimesecond, upsInputVoltageeighth=upsInputVoltageeighth, upsTrapAlarmBatteryBadRestoredthird=upsTrapAlarmBatteryBadRestoredthird, upsTestSpinLockfourth=upsTestSpinLockfourth, upsAlarmShutdownImminentfifth=upsAlarmShutdownImminentfifth, upsReceptacleLineIndexsixth=upsReceptacleLineIndexsixth, upsMainsStatisticsBypReleighth=upsMainsStatisticsBypReleighth, upsAlarmOutputBadfirst=upsAlarmOutputBadfirst, geThirdUPS=geThirdUPS, upsAlarmShutdownImminentsecond=upsAlarmShutdownImminentsecond, upsTrapAlarmValueLowfifth=upsTrapAlarmValueLowfifth, upsTrapAlarmOutputOffAsRequestedeighth=upsTrapAlarmOutputOffAsRequestedeighth, upsParameterFourthEntry=upsParameterFourthEntry, upsConfigOutputVoltagethird=upsConfigOutputVoltagethird, upsTrapAlarmUpsSystemOnfirst=upsTrapAlarmUpsSystemOnfirst, geUPSTrapsthird=geUPSTrapsthird, upsIdentUPSSoftwareVersionseventh=upsIdentUPSSoftwareVersionseventh, upsTestStartTime=upsTestStartTime, advSNMPWebIntCard=advSNMPWebIntCard, upsInputSixthEntry=upsInputSixthEntry, upsBypassPowerthird=upsBypassPowerthird, upsAlarmDepletedBatterysecond=upsAlarmDepletedBatterysecond, upsTrapAlarmOnBatteryRestoredfourth=upsTrapAlarmOnBatteryRestoredfourth, upsIdentUPSSoftwareVersionsecond=upsIdentUPSSoftwareVersionsecond, upsOutputPowerFactorthird=upsOutputPowerFactorthird, upsTrapAlarmDCRippleFailuresecond=upsTrapAlarmDCRippleFailuresecond, upsTimefirst=upsTimefirst, upsParameterLineIndexsecond=upsParameterLineIndexsecond, upsReceptacleSeventhEntry=upsReceptacleSeventhEntry, upsSecondsOnBatterysixth=upsSecondsOnBatterysixth, upsIdentOperatingTimeeighth=upsIdentOperatingTimeeighth, upsTestResultsDetailfourth=upsTestResultsDetailfourth, upsAlarmBatteryBad=upsAlarmBatteryBad, upsEventGetNext=upsEventGetNext, upsAlarmfourth=upsAlarmfourth, upsAlarmOutputBadsixth=upsAlarmOutputBadsixth, upsReceptaclesNumseventh=upsReceptaclesNumseventh, upsAlarmUpsSystemOffseventh=upsAlarmUpsSystemOffseventh, upsEventStatusfirst=upsEventStatusfirst, upsShutdownTypefirst=upsShutdownTypefirst, upsBatteryChargeMethod=upsBatteryChargeMethod, upsTrapAlarmInputBadRestoredfifth=upsTrapAlarmInputBadRestoredfifth, upsBypassLineIndexsecond=upsBypassLineIndexsecond, upsParameterEighthEntry=upsParameterEighthEntry, upsEventTableSizeeighth=upsEventTableSizeeighth, upsTrapAlarmOutputOverloadRestoredsecond=upsTrapAlarmOutputOverloadRestoredsecond, upsAlarmOutputOffAsRequestedsixth=upsAlarmOutputOffAsRequestedsixth, upsTrapAlarmFanFailurethird=upsTrapAlarmFanFailurethird, upsParameterLineIndexfifth=upsParameterLineIndexfifth, upsControlthird=upsControlthird, upsTrapAlarmBatteryBadRestoredsixth=upsTrapAlarmBatteryBadRestoredsixth, upsTrapAlarmUpsSystemOffeighth=upsTrapAlarmUpsSystemOffeighth, upsDiagnosticBatteryLifetimeeighth=upsDiagnosticBatteryLifetimeeighth, upsMainsStatisticsBypRelfourth=upsMainsStatisticsBypRelfourth, upsTrapAlarmAwaitingPowerfifth=upsTrapAlarmAwaitingPowerfifth, upsAlarmsPresentsixth=upsAlarmsPresentsixth, upsTrapAlarmOnBatteryRestoredthird=upsTrapAlarmOnBatteryRestoredthird, upsTestIdeighth=upsTestIdeighth, upsAlarmIdsecond=upsAlarmIdsecond, upsAlarmIdsixth=upsAlarmIdsixth, upsAlarmDCRipplefirst=upsAlarmDCRipplefirst, upsInputVoltagesecond=upsInputVoltagesecond, upsConfigLowBattTimefourth=upsConfigLowBattTimefourth, upsTrapAlarmDepletedBatteryRestoredfifth=upsTrapAlarmDepletedBatteryRestoredfifth, upsTrapAlarmDiagnosticTestFailedseventh=upsTrapAlarmDiagnosticTestFailedseventh, upsTrapAlarmTempBadsixth=upsTrapAlarmTempBadsixth, upsAlarmUpsOffAsRequestedfifth=upsAlarmUpsOffAsRequestedfifth, upsMainsStatisticsB5eighth=upsMainsStatisticsB5eighth, upsOutputPercentLoad=upsOutputPercentLoad, upsAlarmsPresentfirst=upsAlarmsPresentfirst, upsDiagnosticDCcapacitorsLifetime=upsDiagnosticDCcapacitorsLifetime, upsConfigAudibleStatusfourth=upsConfigAudibleStatusfourth, upsOutputLineIndexeighth=upsOutputLineIndexeighth, upsTrapAlarmChargerFailedeighth=upsTrapAlarmChargerFailedeighth, upsAlarmTimefifth=upsAlarmTimefifth, upsTestQuickBatteryTestsecond=upsTestQuickBatteryTestsecond, upsDiagnosticBusJACommunicationStatusfirst=upsDiagnosticBusJACommunicationStatusfirst, upsReceptacleSixthEntry=upsReceptacleSixthEntry, upsBatteryVoltagefirst=upsBatteryVoltagefirst, upsConfigBatteryCapacityseventh=upsConfigBatteryCapacityseventh, upsTrapAlarmHighspeedBusJBCRCFailurefirst=upsTrapAlarmHighspeedBusJBCRCFailurefirst, upsConfigInputVoltageeighth=upsConfigInputVoltageeighth, geSecondUPS=geSecondUPS, upsConfigBatteryCapacityeighth=upsConfigBatteryCapacityeighth, upsRectifierOnOffthird=upsRectifierOnOffthird, upsTrapAlarmUpsOutputOnsixth=upsTrapAlarmUpsOutputOnsixth, upsGetSetfirst=upsGetSetfirst, upsEventGetPrevioussixth=upsEventGetPrevioussixth, upsParameterEighthTable=upsParameterEighthTable, upsIdentModelfourth=upsIdentModelfourth, upsAlarmDiagnosticTestFailedfourth=upsAlarmDiagnosticTestFailedfourth, upsTestDeepBatteryCalibrationseventh=upsTestDeepBatteryCalibrationseventh, upsOutputPercentLoadseventh=upsOutputPercentLoadseventh, upsTrapAlarmOutputOverloadthird=upsTrapAlarmOutputOverloadthird, upsTrapAlarmUpsOffAsRequestedRestoredthird=upsTrapAlarmUpsOffAsRequestedRestoredthird, upsBatteryCurrentfourth=upsBatteryCurrentfourth, upsTrapAlarmOutputBadRestoredeighth=upsTrapAlarmOutputBadRestoredeighth, snmpWebIntCard=snmpWebIntCard, upsInputTruePowerfirst=upsInputTruePowerfirst, upsAlarmDCRipplefourth=upsAlarmDCRipplefourth, upsParametersReadfourth=upsParametersReadfourth, upsTrapAlarmOnBypassRestoredfourth=upsTrapAlarmOnBypassRestoredfourth, upsInverterOnOfffirst=upsInverterOnOfffirst, upsTrapAlarmOnBypassfourth=upsTrapAlarmOnBypassfourth, upsInputVoltageMaxsixth=upsInputVoltageMaxsixth, upsConfigBatteryChargeCurrenteighth=upsConfigBatteryChargeCurrenteighth, upsConfigInputFreqsecond=upsConfigInputFreqsecond, upsReceptacleSecondEntry=upsReceptacleSecondEntry, upsBatteryRipple=upsBatteryRipple, upsTrapAlarmAwaitingPowerRestoredsecond=upsTrapAlarmAwaitingPowerRestoredsecond, upsBatteryRipplesecond=upsBatteryRipplesecond, upsBypassVoltage=upsBypassVoltage, upsParameterLineIndex=upsParameterLineIndex, upsTrapAlarmChargerFailedfourth=upsTrapAlarmChargerFailedfourth, upsAlarmBypassBadeighth=upsAlarmBypassBadeighth, upsTestDeepBatteryCalibrationsecond=upsTestDeepBatteryCalibrationsecond, upsTestQuickBatteryTesteighth=upsTestQuickBatteryTesteighth, upsTrapAlarmHighspeedBusJBCRCFailuresecond=upsTrapAlarmHighspeedBusJBCRCFailuresecond, upsEventStatussixth=upsEventStatussixth, upsTrapAlarmOutputOffAsRequestedRestoredsixth=upsTrapAlarmOutputOffAsRequestedRestoredsixth, upsTimefourth=upsTimefourth, upsAlarmBypassBad=upsAlarmBypassBad, upsInputFirstTable=upsInputFirstTable, upsEventStatussecond=upsEventStatussecond, upsConfigOutputPowerfifth=upsConfigOutputPowerfifth, upsTrapAlarmAwaitingPowerRestoredfourth=upsTrapAlarmAwaitingPowerRestoredfourth, upsTrapAlarmGeneralFaultsixth=upsTrapAlarmGeneralFaultsixth, upsDiagnosticDCcapacitorsLifetimefirst=upsDiagnosticDCcapacitorsLifetimefirst, upsDiagnosticACcapacitorsLifetimesecond=upsDiagnosticACcapacitorsLifetimesecond, upsTrapAlarmChargerFailedRestored=upsTrapAlarmChargerFailedRestored, upsTrapAlarmChargerFailedsecond=upsTrapAlarmChargerFailedsecond, upsBypassLineIndexsixth=upsBypassLineIndexsixth, upsOutputCurrentfirst=upsOutputCurrentfirst, upsTrapAlarmLowBatteryRestoredeighth=upsTrapAlarmLowBatteryRestoredeighth, upsTestResultsDetailthird=upsTestResultsDetailthird, upsTrapAlarmDepletedBatterysixth=upsTrapAlarmDepletedBatterysixth, upsEstimatedMinutesRemainingfourth=upsEstimatedMinutesRemainingfourth, upsTrapAlarmUpsOffAsRequestedRestoredeighth=upsTrapAlarmUpsOffAsRequestedRestoredeighth, upsLoadSource=upsLoadSource, upsTrapAlarmTempBadRestoredfirst=upsTrapAlarmTempBadRestoredfirst, upsInputLineIndexfifth=upsInputLineIndexfifth, upsTrapAlarmUpsOffAsRequestedRestoredsixth=upsTrapAlarmUpsOffAsRequestedRestoredsixth, upsEventGetCodeseventh=upsEventGetCodeseventh, upsEventStatuseighth=upsEventStatuseighth, upsAlarmFuseFailurefourth=upsAlarmFuseFailurefourth, upsAlarmAwaitingPowerfourth=upsAlarmAwaitingPowerfourth, upsIdentNamefifth=upsIdentNamefifth, upsTrapAlarmBypassBadRestoredsecond=upsTrapAlarmBypassBadRestoredsecond, upsAlarmMaskAfourth=upsAlarmMaskAfourth, upsInputLineIndexsecond=upsInputLineIndexsecond, upsTrapAlarmValueHighfifth=upsTrapAlarmValueHighfifth, upsTrapAlarmValueLowRestoredseventh=upsTrapAlarmValueLowRestoredseventh, upsAlarmEighthEntry=upsAlarmEighthEntry, upsAlarmDiagnosticTestFailedseventh=upsAlarmDiagnosticTestFailedseventh, upsInputFrequency=upsInputFrequency, upsIdentAttachedDeviceseighth=upsIdentAttachedDeviceseighth, upsOutputLineIndexsecond=upsOutputLineIndexsecond, upsTrapAlarmOnBatteryRestoredfifth=upsTrapAlarmOnBatteryRestoredfifth, upsTrapAlarmHighspeedBusFailurefourth=upsTrapAlarmHighspeedBusFailurefourth, upsTrapAlarmOnBypasssecond=upsTrapAlarmOnBypasssecond, upsOutputNumLinesthird=upsOutputNumLinesthird, upsAlarmBatteryBadfourth=upsAlarmBatteryBadfourth, upsConfigLowBattTimefifth=upsConfigLowBattTimefifth, upsTrapAlarmChargerFailedRestoredseventh=upsTrapAlarmChargerFailedRestoredseventh, upsEventTableSizethird=upsEventTableSizethird, upsTrapAlarmReceptacleOnseventh=upsTrapAlarmReceptacleOnseventh, upsEstimatedMinutesRemainingthird=upsEstimatedMinutesRemainingthird, upsTrapAlarmShutdownPendingthird=upsTrapAlarmShutdownPendingthird, upsOutputPowerFactor=upsOutputPowerFactor, upsTrapAlarmChargerFailedRestoredfirst=upsTrapAlarmChargerFailedRestoredfirst, upsBatteryRipplesixth=upsBatteryRipplesixth, upsDiagnosticeighth=upsDiagnosticeighth, upsInput=upsInput, upsConfigNoLoadShutdowneighth=upsConfigNoLoadShutdowneighth, upsEventCodesecond=upsEventCodesecond, upsTrapAlarmBypassBadsecond=upsTrapAlarmBypassBadsecond, upsRebootWithDurationsixth=upsRebootWithDurationsixth, upsTrapAlarmUpsSystemOnthird=upsTrapAlarmUpsSystemOnthird, upsConfigInputFreqseventh=upsConfigInputFreqseventh, upsAlarmOutputBadsecond=upsAlarmOutputBadsecond, upsEventGetNextthird=upsEventGetNextthird, upsOutputFirstTable=upsOutputFirstTable, upsAlarmsPresentthird=upsAlarmsPresentthird, geGenericUPS=geGenericUPS, upsTestElapsedTimeseventh=upsTestElapsedTimeseventh, upsBypassFirstTable=upsBypassFirstTable, upsTrapAlarmInputBadfifth=upsTrapAlarmInputBadfifth, upsTrapAlarmShutdownPendingRestoredeighth=upsTrapAlarmShutdownPendingRestoredeighth, upsTrapAlarmHighspeedBusJBCRCRestoredfourth=upsTrapAlarmHighspeedBusJBCRCRestoredfourth, upsAlarmHighSpeedBusFailurefifth=upsAlarmHighSpeedBusFailurefifth, upsTrapAlarmUpsSystemOfffourth=upsTrapAlarmUpsSystemOfffourth, upsTrapAlarmOutputBadsecond=upsTrapAlarmOutputBadsecond, upsTrapAlarmHighspeedBusJBCRCRestored=upsTrapAlarmHighspeedBusJBCRCRestored, upsReceptacleThirdEntry=upsReceptacleThirdEntry, upsAlarmHighSpeedBusFailurefirst=upsAlarmHighSpeedBusFailurefirst, upsAlarmCommunicationsLostseventh=upsAlarmCommunicationsLostseventh, upsTestIdfirst=upsTestIdfirst, upsTrapAlarmAwaitingPowerRestoredthird=upsTrapAlarmAwaitingPowerRestoredthird, upsConfigAudibleStatuseighth=upsConfigAudibleStatuseighth, upsTrapAlarmChargerFailedRestoredsixth=upsTrapAlarmChargerFailedRestoredsixth, upsReceptaclesNumfirst=upsReceptaclesNumfirst, upsOutputSecondEntry=upsOutputSecondEntry, upsTrapAlarmCommunicationsLostthird=upsTrapAlarmCommunicationsLostthird, upsTrapAlarmTestInProgresssixth=upsTrapAlarmTestInProgresssixth, upsEventSixthEntry=upsEventSixthEntry, upsTrapAlarmInputBadRestoredfirst=upsTrapAlarmInputBadRestoredfirst, upsBatteryChargeMethodsecond=upsBatteryChargeMethodsecond, upsEventSetStartingTimeStampeighth=upsEventSetStartingTimeStampeighth, upsOutputFrequencysecond=upsOutputFrequencysecond, upsTrapAlarmReceptacleOneighth=upsTrapAlarmReceptacleOneighth, upsBypassOnOffthird=upsBypassOnOffthird, upsTrapAlarmBypassBadeighth=upsTrapAlarmBypassBadeighth, upsInputSecondTable=upsInputSecondTable, upsConfigBatteryChargeCurrent=upsConfigBatteryChargeCurrent, upsOutputPercentLoadfirst=upsOutputPercentLoadfirst, upsAlarmTestInProgressseventh=upsAlarmTestInProgressseventh, upsIdentComProtVersionseventh=upsIdentComProtVersionseventh, geSixthUPS=geSixthUPS, upsParametersWriteeighth=upsParametersWriteeighth, upsIdentComProtVersionsecond=upsIdentComProtVersionsecond, upsTrapAlarmOutputOffAsRequestedsixth=upsTrapAlarmOutputOffAsRequestedsixth, upsBypassCurrentseventh=upsBypassCurrentseventh, upsAlarmLowBatteryeighth=upsAlarmLowBatteryeighth, upsEventFourthEntry=upsEventFourthEntry, upsBypassFrequencysixth=upsBypassFrequencysixth, upsTrapAlarmValueHighRestoredseventh=upsTrapAlarmValueHighRestoredseventh, upsAlarmLowBatteryfirst=upsAlarmLowBatteryfirst, upsOutputPowersecond=upsOutputPowersecond, upsOutputNumLines=upsOutputNumLines, upsConfigOutputFreqfirst=upsConfigOutputFreqfirst, upsAutoRestartfifth=upsAutoRestartfifth, upsTrapAlarmInputBadseventh=upsTrapAlarmInputBadseventh, upsTrapAlarmAwaitingPowerRestored=upsTrapAlarmAwaitingPowerRestored, upsAlarmOnBatterysixth=upsAlarmOnBatterysixth, upsShutdownTypesecond=upsShutdownTypesecond, upsOutputVoltagefifth=upsOutputVoltagefifth, upsTestNoTestsInitiatedseventh=upsTestNoTestsInitiatedseventh, upsOutputFrequencyfourth=upsOutputFrequencyfourth, upsShutdownType=upsShutdownType, upsEventLineIndex=upsEventLineIndex, upsAlarmOutputOverloadsixth=upsAlarmOutputOverloadsixth, upsParametersStartAddressfirst=upsParametersStartAddressfirst, upsAlarmLowBatteryfifth=upsAlarmLowBatteryfifth, upsInputVoltageMinfourth=upsInputVoltageMinfourth, upsTrapAlarmFuseFailurefifth=upsTrapAlarmFuseFailurefifth, upsAlarmTestInProgressthird=upsAlarmTestInProgressthird)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsEventLineIndexthird=upsEventLineIndexthird, upsIdentUPSSoftwareVersionfifth=upsIdentUPSSoftwareVersionfifth, upsBatteryChargeMethodeighth=upsBatteryChargeMethodeighth, upsTrapAlarmAwaitingPowerRestoredseventh=upsTrapAlarmAwaitingPowerRestoredseventh, upsTrapAlarmFuseFailuresixth=upsTrapAlarmFuseFailuresixth, upsConfigLowVoltageTransferPointfirst=upsConfigLowVoltageTransferPointfirst, upsTrapAlarmHighspeedBusJACRCRestorethird=upsTrapAlarmHighspeedBusJACRCRestorethird, upsOutputLineIndexfifth=upsOutputLineIndexfifth, upsTestIdfourth=upsTestIdfourth, upsTimeeighth=upsTimeeighth, upsTrapAlarmInputBadRestoredseventh=upsTrapAlarmInputBadRestoredseventh, upsParameterSecondTable=upsParameterSecondTable, upsIdentUPSSerialNumbersixth=upsIdentUPSSerialNumbersixth, upsTrapAlarmDepletedBattery=upsTrapAlarmDepletedBattery, upsTrapAlarmCurrentSharingFailuresecond=upsTrapAlarmCurrentSharingFailuresecond, upsOutputPowerFactorsixth=upsOutputPowerFactorsixth, upsIdentModelseventh=upsIdentModelseventh, upsAlarmsPresenteighth=upsAlarmsPresenteighth, upsInputFifthEntry=upsInputFifthEntry, upsBypass=upsBypass, upsTestQuickBatteryTestsixth=upsTestQuickBatteryTestsixth, upsConfigOutputVAfirst=upsConfigOutputVAfirst, upsEstimatedMinutesRemainingsixth=upsEstimatedMinutesRemainingsixth, upsTrapAlarmOnBypassRestoredthird=upsTrapAlarmOnBypassRestoredthird, upsTrapAlarmDepletedBatteryfourth=upsTrapAlarmDepletedBatteryfourth, upsConfigBatteryChargeCurrentfirst=upsConfigBatteryChargeCurrentfirst, upsEventSeventhEntry=upsEventSeventhEntry, upsBypassSecondTable=upsBypassSecondTable, upsTestResultsDetaileighth=upsTestResultsDetaileighth, upsAlarmFuseFailurefirst=upsAlarmFuseFailurefirst, upsAlarmId=upsAlarmId, upsTrapAlarmHighspeedBusJBCRCRestoredsixth=upsTrapAlarmHighspeedBusJBCRCRestoredsixth, upsTrapAlarmValueLowRestoredfourth=upsTrapAlarmValueLowRestoredfourth, upsBypassLineIndexfourth=upsBypassLineIndexfourth, upsAlarmCommunicationsLostfifth=upsAlarmCommunicationsLostfifth, upsAlarmBatteryBadfifth=upsAlarmBatteryBadfifth, upsTrapAlarmOnBattery=upsTrapAlarmOnBattery, upsConfigfirst=upsConfigfirst, upsTrapAlarmHighspeedBusJACRCRestorefifth=upsTrapAlarmHighspeedBusJACRCRestorefifth, upsEventSpinLockfourth=upsEventSpinLockfourth, upsOutputShareCurrentfirst=upsOutputShareCurrentfirst, upsInputVoltage=upsInputVoltage, upsTrapAlarmChargerFailedRestoredeighth=upsTrapAlarmChargerFailedRestoredeighth, upsConfigLowBattTimeseventh=upsConfigLowBattTimeseventh, upsEventSpinLockthird=upsEventSpinLockthird, upsIdentManufacturerfirst=upsIdentManufacturerfirst, upsTrapAlarmReceptacleOnsixth=upsTrapAlarmReceptacleOnsixth, upsBatteryTemperaturesixth=upsBatteryTemperaturesixth, upsTrapAlarmLowBatteryRestored=upsTrapAlarmLowBatteryRestored, upsEventCodethird=upsEventCodethird, upsMainsStatisticsB5=upsMainsStatisticsB5, upsIdentComProtVersioneighth=upsIdentComProtVersioneighth, upsAlarmIdfirst=upsAlarmIdfirst, upsReceptaclesNumeighth=upsReceptaclesNumeighth, upsTrapAlarmValueHighRestored=upsTrapAlarmValueHighRestored, upsTrapAlarmOutputOffAsRequestedfirst=upsTrapAlarmOutputOffAsRequestedfirst, upsTestIdsecond=upsTestIdsecond, upsAlarmOutputOverloadfifth=upsAlarmOutputOverloadfifth, upsAlarmLowBatteryfourth=upsAlarmLowBatteryfourth, upsTrapAlarmValueLow=upsTrapAlarmValueLow, upsStartupAfterDelaysecond=upsStartupAfterDelaysecond, upsAlarmOutputBadfourth=upsAlarmOutputBadfourth, upsTrapAlarmFanFailurefifth=upsTrapAlarmFanFailurefifth, upsTrapAlarmOutputOverloadfirst=upsTrapAlarmOutputOverloadfirst, upsBypassNumLinesfirst=upsBypassNumLinesfirst, upsTrapAlarmOutputOffAsRequestedfourth=upsTrapAlarmOutputOffAsRequestedfourth, upsTrapAlarmFuseFailureseventh=upsTrapAlarmFuseFailureseventh, upsAlarmChargerFailedeighth=upsAlarmChargerFailedeighth, upsReceptacleSixthTable=upsReceptacleSixthTable, upsConfigthird=upsConfigthird, upsReceptacleFirstTable=upsReceptacleFirstTable, upsBatteryCurrentsecond=upsBatteryCurrentsecond, upsBatteryTemperaturefirst=upsBatteryTemperaturefirst, upsOutputFrequencythird=upsOutputFrequencythird, upsParametersWritesixth=upsParametersWritesixth, upsTrapAlarmGeneralFaultthird=upsTrapAlarmGeneralFaultthird, upsTestElapsedTimethird=upsTestElapsedTimethird, upsTrapAlarmFanFailureseventh=upsTrapAlarmFanFailureseventh, upsAlarmHighSpeedBusJACRCFailurefourth=upsAlarmHighSpeedBusJACRCFailurefourth, upsTrapAlarmHighspeedBusRestoreseventh=upsTrapAlarmHighspeedBusRestoreseventh, upsOutputNumLinesfirst=upsOutputNumLinesfirst, upsTrapAlarmAwaitingPowerRestoredfifth=upsTrapAlarmAwaitingPowerRestoredfifth, upsTrapAlarmChargerFailedsixth=upsTrapAlarmChargerFailedsixth, upsDiagnosticFansLifetimeeighth=upsDiagnosticFansLifetimeeighth, upsTrapAlarmOutputOverload=upsTrapAlarmOutputOverload, upsBypassFrequencyfirst=upsBypassFrequencyfirst, upsParameterLineIndexthird=upsParameterLineIndexthird, upsParameterValuefifth=upsParameterValuefifth, upsIdentComProtVersion=upsIdentComProtVersion, upsBypassVoltagesecond=upsBypassVoltagesecond, upsDiagnosticsecond=upsDiagnosticsecond, upsAlarmGeneralFaulteighth=upsAlarmGeneralFaulteighth, upsOutputSourcefifth=upsOutputSourcefifth, upsDiagnosticDCcapacitorsLifetimethird=upsDiagnosticDCcapacitorsLifetimethird, upsUPSModeeighth=upsUPSModeeighth, upsInputThirdEntry=upsInputThirdEntry, upsControlfirst=upsControlfirst, upsDiagnosticBusJBCommunicationStatusfifth=upsDiagnosticBusJBCommunicationStatusfifth, upsTrapAlarmHighspeedBusRestoreeighth=upsTrapAlarmHighspeedBusRestoreeighth, upsEventCodefifth=upsEventCodefifth, upsTrapAlarmHighspeedBusJBCRCFailurefifth=upsTrapAlarmHighspeedBusJBCRCFailurefifth, upsIdentUPSSerialNumberfifth=upsIdentUPSSerialNumberfifth, upsEventRetreiveCurrentTimeStampfifth=upsEventRetreiveCurrentTimeStampfifth, upsConfigOutputVoltageseventh=upsConfigOutputVoltageseventh, upsTrapAlarmShutdownPendingRestoredsixth=upsTrapAlarmShutdownPendingRestoredsixth, upsOutputShareCurrentsecond=upsOutputShareCurrentsecond, upsInputsixth=upsInputsixth, upsAlarmUpsOutputOffsixth=upsAlarmUpsOutputOffsixth, upsTestSpinLockthird=upsTestSpinLockthird, upsInputFrequencyfirst=upsInputFrequencyfirst, upsTrapAlarmLowBatteryfourth=upsTrapAlarmLowBatteryfourth, upsMainsStatisticsB2seventh=upsMainsStatisticsB2seventh, upsTestDeepBatteryCalibrationfirst=upsTestDeepBatteryCalibrationfirst, geRequestPacket=geRequestPacket, upsConfigLowVoltageTransferPointsixth=upsConfigLowVoltageTransferPointsixth, upsTestfourth=upsTestfourth, upsInputVoltageMaxeighth=upsInputVoltageMaxeighth, upsEventGetCodefirst=upsEventGetCodefirst, upsTrapAlarmUpsOutputOffeighth=upsTrapAlarmUpsOutputOffeighth, upsDiagnosticfifth=upsDiagnosticfifth, upsBypassCurrentsixth=upsBypassCurrentsixth, upsTrapAlarmOnBatteryRestoredeighth=upsTrapAlarmOnBatteryRestoredeighth, upsBypassFrequency=upsBypassFrequency, upsBypassPowerfourth=upsBypassPowerfourth, upsConfigBatteryCapacityfifth=upsConfigBatteryCapacityfifth, upsMainsStatisticsB10=upsMainsStatisticsB10, upsAlarmTempBadfirst=upsAlarmTempBadfirst, upsConfigOutputVAthird=upsConfigOutputVAthird, upsWellKnownAlarms=upsWellKnownAlarms, upsTrapAlarmHighspeedBusJACRCFailurefourth=upsTrapAlarmHighspeedBusJACRCFailurefourth, upsIdentAttachedDevicesfifth=upsIdentAttachedDevicesfifth, upsBatteryStatusfifth=upsBatteryStatusfifth, upsAlarmDepletedBatteryfifth=upsAlarmDepletedBatteryfifth, upsTrapAlarmDCRippleFailure=upsTrapAlarmDCRippleFailure, upsDiagnosticBusJBCommunicationStatus=upsDiagnosticBusJBCommunicationStatus, upsTrapAlarmReceptacleOn=upsTrapAlarmReceptacleOn, upsTrapAlarmValueHighRestoredsixth=upsTrapAlarmValueHighRestoredsixth, upsTrapAlarmHighspeedBusFailureeighth=upsTrapAlarmHighspeedBusFailureeighth, upsConfigHighVoltageTransferPointsixth=upsConfigHighVoltageTransferPointsixth, upsAlarmUpsSystemOfffirst=upsAlarmUpsSystemOfffirst, upsAlarmConnectivityBusFailurefirst=upsAlarmConnectivityBusFailurefirst, upsConfigAudibleStatussecond=upsConfigAudibleStatussecond, upsIdentsecond=upsIdentsecond, upsTrapAlarmDiagnosticTestFailedRestoredeighth=upsTrapAlarmDiagnosticTestFailedRestoredeighth, upsDiagnosticseventh=upsDiagnosticseventh, upsAlarmReceptacleOffsecond=upsAlarmReceptacleOffsecond, upsInputCurrentsixth=upsInputCurrentsixth, upsTrapAlarmDCRippleFailureeighth=upsTrapAlarmDCRippleFailureeighth, upsReceptacleLineIndexfourth=upsReceptacleLineIndexfourth, upsEventTableSizesixth=upsEventTableSizesixth, upsTrapAlarmCurrentSharingFailurefifth=upsTrapAlarmCurrentSharingFailurefifth, upsTrapAlarmShutdownImminentsecond=upsTrapAlarmShutdownImminentsecond, upsBypassFrequencysecond=upsBypassFrequencysecond, upsTrapAlarmFanFailurefirst=upsTrapAlarmFanFailurefirst, upsEventSeventhTable=upsEventSeventhTable, upsIdent=upsIdent, upsAlarmsPresentfifth=upsAlarmsPresentfifth, upsTestNoTestsInitiatedfirst=upsTestNoTestsInitiatedfirst, upsTrapAlarmShutdownPendingfifth=upsTrapAlarmShutdownPendingfifth, upsAlarmFanFailurethird=upsAlarmFanFailurethird, upsSecondsOnBatteryfifth=upsSecondsOnBatteryfifth, upsTestSpinLockeighth=upsTestSpinLockeighth, upsBatteryVoltagesecond=upsBatteryVoltagesecond, upsIdentOperatingTimefifth=upsIdentOperatingTimefifth, upsTrapAlarmTestInProgressRestoredeighth=upsTrapAlarmTestInProgressRestoredeighth, upsInputLineBadssixth=upsInputLineBadssixth, upsShutdownAfterDelayfourth=upsShutdownAfterDelayfourth, upsEventTimesixth=upsEventTimesixth, upsAlarmReceptacleOfffourth=upsAlarmReceptacleOfffourth, upsRectifierOnOffseventh=upsRectifierOnOffseventh, upsAlarmOnBypassfirst=upsAlarmOnBypassfirst, upsTrapAlarmDepletedBatteryRestoredseventh=upsTrapAlarmDepletedBatteryRestoredseventh, upsTrapAlarmAwaitingPowersixth=upsTrapAlarmAwaitingPowersixth, upsDiagnosticsixth=upsDiagnosticsixth, upsInputNumLinessecond=upsInputNumLinessecond, upsReceptacleLineIndexthird=upsReceptacleLineIndexthird, upsOutputShareCurrentthird=upsOutputShareCurrentthird, upsAlarmThirdEntry=upsAlarmThirdEntry, upsTrapAlarmUpsOffAsRequestedsixth=upsTrapAlarmUpsOffAsRequestedsixth, upsParameterSeventhEntry=upsParameterSeventhEntry, upsTrapAlarmTempBadthird=upsTrapAlarmTempBadthird, upsMainsStatisticsB2third=upsMainsStatisticsB2third, upsTrapAlarmTempBadsecond=upsTrapAlarmTempBadsecond, upsIdentAttachedDevicessecond=upsIdentAttachedDevicessecond, upsBatteryStatusthird=upsBatteryStatusthird, upsTrapAlarmDepletedBatteryRestoredthird=upsTrapAlarmDepletedBatteryRestoredthird, upsTrapAlarmUpsOutputOffseventh=upsTrapAlarmUpsOutputOffseventh, upsEstimatedChargeRemainingsecond=upsEstimatedChargeRemainingsecond, upsAlarmSeventhTable=upsAlarmSeventhTable, upsAlarmFifthEntry=upsAlarmFifthEntry, upsIdentUPSSerialNumberseventh=upsIdentUPSSerialNumberseventh, upsDiagnosticBusJBCommunicationStatusseventh=upsDiagnosticBusJBCommunicationStatusseventh, upsAlarmUpsSystemOffsecond=upsAlarmUpsSystemOffsecond, upsEventTimesecond=upsEventTimesecond, upsTestElapsedTimefifth=upsTestElapsedTimefifth, upsAlarmUpsOffAsRequestedeighth=upsAlarmUpsOffAsRequestedeighth, upsTrapAlarmBypassBadRestoredeighth=upsTrapAlarmBypassBadRestoredeighth, upsEventLineIndexfourth=upsEventLineIndexfourth, upsTrapAlarmOutputOffAsRequestedseventh=upsTrapAlarmOutputOffAsRequestedseventh, upsInputfourth=upsInputfourth, upsBatteryVoltageeighth=upsBatteryVoltageeighth, upsTrapAlarmOutputBad=upsTrapAlarmOutputBad, upsBypassVoltagefourth=upsBypassVoltagefourth, upsTrapAlarmOnBypassRestoredeighth=upsTrapAlarmOnBypassRestoredeighth, upsShutdownAfterDelay=upsShutdownAfterDelay, upsAlarmMaskAseventh=upsAlarmMaskAseventh, upsMainsStatisticsB200seventh=upsMainsStatisticsB200seventh, upsConfigOutputPowerthird=upsConfigOutputPowerthird, upsIdentModelthird=upsIdentModelthird, upsParameterThirdEntry=upsParameterThirdEntry, upsIdentAttachedDevicesthird=upsIdentAttachedDevicesthird, upsTrapAlarmUpsOffAsRequestedeighth=upsTrapAlarmUpsOffAsRequestedeighth, upsTrapAlarmTempBadfourth=upsTrapAlarmTempBadfourth, upsTrapAlarmHighspeedBusRestorefourth=upsTrapAlarmHighspeedBusRestorefourth, upsBypassEighthEntry=upsBypassEighthEntry, upsTrapAlarmOnBypassRestoredfifth=upsTrapAlarmOnBypassRestoredfifth, upsAlarmUpsOutputOffthird=upsAlarmUpsOutputOffthird, upsConfigOutputVoltagefourth=upsConfigOutputVoltagefourth, upsAlarmIdfifth=upsAlarmIdfifth, upsAutoRestart=upsAutoRestart, upsInputSeventhEntry=upsInputSeventhEntry, upsAlarmUpsOutputOfffifth=upsAlarmUpsOutputOfffifth, upsTestDeepBatteryCalibrationfourth=upsTestDeepBatteryCalibrationfourth, upsTrapAlarmBatteryBadRestored=upsTrapAlarmBatteryBadRestored, upsTrapAlarmUpsSystemOff=upsTrapAlarmUpsSystemOff, upsOutputVoltagefirst=upsOutputVoltagefirst, upsTestQuickBatteryTestthird=upsTestQuickBatteryTestthird, upsTrapAlarmFanFailureRestoredfirst=upsTrapAlarmFanFailureRestoredfirst, upsAlarmConnectivityBusFailuresecond=upsAlarmConnectivityBusFailuresecond, upsRebootWithDurationfifth=upsRebootWithDurationfifth, upsAlarmFanFailurefifth=upsAlarmFanFailurefifth, upsTestElapsedTimefirst=upsTestElapsedTimefirst, upsAlarmLowBatterythird=upsAlarmLowBatterythird, upsAlarmUpsSystemOffsixth=upsAlarmUpsSystemOffsixth, upsAlarmOutputBadseventh=upsAlarmOutputBadseventh, upsTrapAlarmValueHigh=upsTrapAlarmValueHigh, upsEstimatedMinutesRemainingseventh=upsEstimatedMinutesRemainingseventh, upsTrapAlarmValueLoweighth=upsTrapAlarmValueLoweighth, upsOutputFrequencyfirst=upsOutputFrequencyfirst, upsTrapAlarmOutputBadseventh=upsTrapAlarmOutputBadseventh, upsAlarmFanFailurefirst=upsAlarmFanFailurefirst, upsTestDeepBatteryCalibrationsixth=upsTestDeepBatteryCalibrationsixth, upsTrapAlarmCurrentSharingRestoredfourth=upsTrapAlarmCurrentSharingRestoredfourth, upsTrapAlarmFuseFailureRestoredeighth=upsTrapAlarmFuseFailureRestoredeighth, upsReceptacleLineIndex=upsReceptacleLineIndex, geUPSTrapsfirst=geUPSTrapsfirst, upsBatteryfirst=upsBatteryfirst, upsInputFirstEntry=upsInputFirstEntry, upsAlarmBatteryBadthird=upsAlarmBatteryBadthird, upsAlarmSecondEntry=upsAlarmSecondEntry, upsTrapAlarmShutdownImminentRestoredeighth=upsTrapAlarmShutdownImminentRestoredeighth, upsBypassSixthTable=upsBypassSixthTable, upsEventGetPreviousthird=upsEventGetPreviousthird, upsTrapAlarmDiagnosticTestFailedRestoredfirst=upsTrapAlarmDiagnosticTestFailedRestoredfirst)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsParametersReadsecond=upsParametersReadsecond, upsEventGetNexteighth=upsEventGetNexteighth, upsParameterValueseventh=upsParameterValueseventh, upsConfigHighVoltageTransferPointfifth=upsConfigHighVoltageTransferPointfifth, upsTrapAlarmOnBatterythird=upsTrapAlarmOnBatterythird, upsConfigNoLoadShutdownsixth=upsConfigNoLoadShutdownsixth, upsAlarmTempBadsixth=upsAlarmTempBadsixth, upsConfigHighVoltageTransferPointfourth=upsConfigHighVoltageTransferPointfourth, upsParameterSpinLock=upsParameterSpinLock, upsIdentUPSSerialNumbereighth=upsIdentUPSSerialNumbereighth, upsIdentAttachedDevicessixth=upsIdentAttachedDevicessixth, upsParametersStartAddresseighth=upsParametersStartAddresseighth, upsConfigLowVoltageTransferPointeighth=upsConfigLowVoltageTransferPointeighth, upsEventGetPreviousseventh=upsEventGetPreviousseventh, upsIdentAgentSoftwareVersion=upsIdentAgentSoftwareVersion, upsAlarmTimefirst=upsAlarmTimefirst, upsReceptacleEighthEntry=upsReceptacleEighthEntry, upsParametersRead=upsParametersRead, upsTrapAlarmHighspeedBusJACRCFailure=upsTrapAlarmHighspeedBusJACRCFailure, upsInputLineIndexeighth=upsInputLineIndexeighth, upsTrapAlarmOnBatterysecond=upsTrapAlarmOnBatterysecond, upsWellKnownAlarmsseventh=upsWellKnownAlarmsseventh, upsTrapAlarmTestInProgressRestoredfourth=upsTrapAlarmTestInProgressRestoredfourth, upsEventGetNextfirst=upsEventGetNextfirst, upsConfigInputFreqfifth=upsConfigInputFreqfifth, upsAlarmsecond=upsAlarmsecond, upsWellKnownTestssixth=upsWellKnownTestssixth, upsTrapAlarmOnBatteryRestoredsixth=upsTrapAlarmOnBatteryRestoredsixth, upsIdentAgentSoftwareVersionthird=upsIdentAgentSoftwareVersionthird, upsTrapAlarmDCRippleFailurefifth=upsTrapAlarmDCRippleFailurefifth, upsDiagnosticFansLifetimefifth=upsDiagnosticFansLifetimefifth, upsTrapAlarmTempBadseventh=upsTrapAlarmTempBadseventh, upsEventGetCodethird=upsEventGetCodethird, upsAlarmShutdownPendingsecond=upsAlarmShutdownPendingsecond, upsTrapAlarmValueHighRestoredsecond=upsTrapAlarmValueHighRestoredsecond, upsControlfourth=upsControlfourth, upsTest=upsTest, upsEventRetreiveCurrentTimeStamp=upsEventRetreiveCurrentTimeStamp, upsAlarmUpsSystemOffeighth=upsAlarmUpsSystemOffeighth, upsInputFrequencysixth=upsInputFrequencysixth, upsTrapAlarmDCRippleRestoredfifth=upsTrapAlarmDCRippleRestoredfifth, upsStartupAfterDelaysixth=upsStartupAfterDelaysixth, upsOutputPowerFactoreighth=upsOutputPowerFactoreighth, upsDiagnosticBatteryLifetimesecond=upsDiagnosticBatteryLifetimesecond, upsTestseventh=upsTestseventh, upsIdentOperatingTimefourth=upsIdentOperatingTimefourth, upsOutputPeakCurrentfirst=upsOutputPeakCurrentfirst, upsAlarmCommunicationsLost=upsAlarmCommunicationsLost, upsAlarmCurrentSharingseventh=upsAlarmCurrentSharingseventh, upsParameterSpinLocksecond=upsParameterSpinLocksecond, upsConfigBatteryChargeCurrentsecond=upsConfigBatteryChargeCurrentsecond, upsAlarmLowBatteryseventh=upsAlarmLowBatteryseventh, upsTrapAlarmFuseFailureRestoredfourth=upsTrapAlarmFuseFailureRestoredfourth, upsTrapAlarmOutputOffAsRequestedRestoredthird=upsTrapAlarmOutputOffAsRequestedRestoredthird, upsAlarmfifth=upsAlarmfifth, upsInputVoltageMinthird=upsInputVoltageMinthird, upsAlarmFirstEntry=upsAlarmFirstEntry, upsEventGetNextsixth=upsEventGetNextsixth, upsAlarmUpsOffAsRequestedthird=upsAlarmUpsOffAsRequestedthird, upsInputTruePowerfifth=upsInputTruePowerfifth, upsTrapAlarmDepletedBatteryRestoredeighth=upsTrapAlarmDepletedBatteryRestoredeighth, upsBypassfirst=upsBypassfirst, upsIdentAttachedDevices=upsIdentAttachedDevices, upsEventGetPrevious=upsEventGetPrevious, upsTestResultsSummarythird=upsTestResultsSummarythird, upsInputFifthTable=upsInputFifthTable, upsTestQuickBatteryTest=upsTestQuickBatteryTest, upsUPSModesixth=upsUPSModesixth, imv=imv, upsTrapAlarmTempBadRestored=upsTrapAlarmTempBadRestored, upsAlarmBatteryBadfirst=upsAlarmBatteryBadfirst, upsEventTableSizefirst=upsEventTableSizefirst, upsTrapAlarmOutputOffAsRequestedthird=upsTrapAlarmOutputOffAsRequestedthird, upsTrapAlarmFanFailureRestoredseventh=upsTrapAlarmFanFailureRestoredseventh, upsInputTruePowerthird=upsInputTruePowerthird, upsTrapAlarmOutputBadfifth=upsTrapAlarmOutputBadfifth, upsDiagnosticBusJBCommunicationStatuseighth=upsDiagnosticBusJBCommunicationStatuseighth, upsTrapAlarmInputBadsecond=upsTrapAlarmInputBadsecond, upsOutputLineIndexfirst=upsOutputLineIndexfirst, upsAlarmHighSpeedBusJACRCFailure=upsAlarmHighSpeedBusJACRCFailure, upsOutputPeakCurrentsixth=upsOutputPeakCurrentsixth, upsParameterSeventhTable=upsParameterSeventhTable, upsInputVoltageMax=upsInputVoltageMax, upsTrapAlarmConnectivityBusFailure=upsTrapAlarmConnectivityBusFailure, upsAlarmUpsOffAsRequestedsecond=upsAlarmUpsOffAsRequestedsecond, upsAlarmShutdownPendingthird=upsAlarmShutdownPendingthird, upsControlsecond=upsControlsecond, upsTrapAlarmDepletedBatteryeighth=upsTrapAlarmDepletedBatteryeighth, upsDiagnosticGlobalServiceCheckseventh=upsDiagnosticGlobalServiceCheckseventh, upsBypassOnOfffourth=upsBypassOnOfffourth, upsAlarmTempBadfifth=upsAlarmTempBadfifth, upsTrapAlarmGeneralFaultRestoredfourth=upsTrapAlarmGeneralFaultRestoredfourth, upsTrapAlarmOutputOffAsRequestedRestoredfourth=upsTrapAlarmOutputOffAsRequestedRestoredfourth, upsParameterSixthEntry=upsParameterSixthEntry, upsTimesixth=upsTimesixth, upsTrapAlarmTempBadeighth=upsTrapAlarmTempBadeighth, upsAlarmInputBadfifth=upsAlarmInputBadfifth, upsConfigHighVoltageTransferPoint=upsConfigHighVoltageTransferPoint, upsConfigLowVoltageTransferPointthird=upsConfigLowVoltageTransferPointthird, upsAlarmHighSpeedBusJACRCFailurefifth=upsAlarmHighSpeedBusJACRCFailurefifth, upsAlarmShutdownPendingeighth=upsAlarmShutdownPendingeighth, upsConfigLowBattTimeeighth=upsConfigLowBattTimeeighth, upsTestSpinLocksixth=upsTestSpinLocksixth, upsTesteighth=upsTesteighth, upsBatteryCurrent=upsBatteryCurrent, upsEventSpinLock=upsEventSpinLock, upsMainsStatisticsB2fifth=upsMainsStatisticsB2fifth, upsMainsStatisticsB10seventh=upsMainsStatisticsB10seventh, upsDiagnosticthird=upsDiagnosticthird, upsAlarmHighSpeedBusJBCRCFailurefirst=upsAlarmHighSpeedBusJBCRCFailurefirst, upsSecondsOnBattery=upsSecondsOnBattery, upsDiagnosticfourth=upsDiagnosticfourth, upsTestStartTimesixth=upsTestStartTimesixth, upsReceptacleLineIndexfifth=upsReceptacleLineIndexfifth, upsTrapAlarmValueHighthird=upsTrapAlarmValueHighthird, upsConfigOutputVoltagesecond=upsConfigOutputVoltagesecond, upsIdentfourth=upsIdentfourth, upsReceptacleTable=upsReceptacleTable, upsEventFirstEntry=upsEventFirstEntry, upsTrapAlarmUpsOutputOffsecond=upsTrapAlarmUpsOutputOffsecond, upsTrapAlarmOutputOffAsRequestedRestoredeighth=upsTrapAlarmOutputOffAsRequestedRestoredeighth, upsEstimatedChargeRemainingsixth=upsEstimatedChargeRemainingsixth, upsAlarmReceptacleOffsixth=upsAlarmReceptacleOffsixth, upsUPSModesecond=upsUPSModesecond, upsTrapAlarmCurrentSharingRestoredeighth=upsTrapAlarmCurrentSharingRestoredeighth, upsDiagnosticGlobalServiceChecksecond=upsDiagnosticGlobalServiceChecksecond, upsWellKnownAlarmsfourth=upsWellKnownAlarmsfourth, upsBatteryRippleeighth=upsBatteryRippleeighth, upsTrapAlarmOutputBadRestored=upsTrapAlarmOutputBadRestored, upsAlarmShutdownPendingsixth=upsAlarmShutdownPendingsixth, upsBypassLineIndexeighth=upsBypassLineIndexeighth, upsMainsStatisticsMRfailfifth=upsMainsStatisticsMRfailfifth, upsConfigNoLoadShutdownthird=upsConfigNoLoadShutdownthird, upsTrapAlarmHighspeedBusFailureseventh=upsTrapAlarmHighspeedBusFailureseventh, upsTrapAlarmCurrentSharingRestoredfirst=upsTrapAlarmCurrentSharingRestoredfirst, upsTrapAlarmLowBattery=upsTrapAlarmLowBattery, upsTrapAlarmHighspeedBusJBCRCRestoredthird=upsTrapAlarmHighspeedBusJBCRCRestoredthird, upsConfigOutputFreqthird=upsConfigOutputFreqthird, upsReceptacleOnOffthird=upsReceptacleOnOffthird, upsOutputEighthTable=upsOutputEighthTable, upsLoadSourcefirst=upsLoadSourcefirst, upsGetSetsecond=upsGetSetsecond, upsEventTableSizefifth=upsEventTableSizefifth, upsTestSpinLockfirst=upsTestSpinLockfirst, upsConfigNoLoadShutdown=upsConfigNoLoadShutdown, upsConfigLowBattTimesecond=upsConfigLowBattTimesecond, upsAlarmUpsSystemOffthird=upsAlarmUpsSystemOffthird, upsTrapAlarmGeneralFaultseventh=upsTrapAlarmGeneralFaultseventh, upsTrapAlarmOutputOffAsRequestedRestoredfirst=upsTrapAlarmOutputOffAsRequestedRestoredfirst, upsParameterValuesixth=upsParameterValuesixth, upsEventThirdEntry=upsEventThirdEntry, upsTrapAlarmHighspeedBusRestoresixth=upsTrapAlarmHighspeedBusRestoresixth, upsAlarmTestInProgresseighth=upsAlarmTestInProgresseighth, upsTestQuickBatteryTestseventh=upsTestQuickBatteryTestseventh, upsOutputVoltagesecond=upsOutputVoltagesecond, upsBypassThirdTable=upsBypassThirdTable, upsReceptacleThirdTable=upsReceptacleThirdTable, upsMainsStatisticsB200third=upsMainsStatisticsB200third, upsWellKnownAlarmssixth=upsWellKnownAlarmssixth, upsTrapAlarmChargerFailedfirst=upsTrapAlarmChargerFailedfirst, upsAlarmOutputOffAsRequestedfifth=upsAlarmOutputOffAsRequestedfifth, upsTrapAlarmUpsOffAsRequested=upsTrapAlarmUpsOffAsRequested, upsBatteryTemperaturefifth=upsBatteryTemperaturefifth, upsTrapAlarmBatteryBadRestoredeighth=upsTrapAlarmBatteryBadRestoredeighth, upsBypassPowerseventh=upsBypassPowerseventh, upsTestAbortTestInProgressfifth=upsTestAbortTestInProgressfifth, upsTrapAlarmAwaitingPowerseventh=upsTrapAlarmAwaitingPowerseventh, upsParameterSecondEntry=upsParameterSecondEntry, upsBypassNumLinesfourth=upsBypassNumLinesfourth, upsTrapAlarmTestInProgressfifth=upsTrapAlarmTestInProgressfifth, upsEventGetCode=upsEventGetCode, upsTrapAlarmBatteryBadfirst=upsTrapAlarmBatteryBadfirst, upsConfigBatteryCapacitysixth=upsConfigBatteryCapacitysixth, upsTrapAlarmUpsOffAsRequestedRestoredfirst=upsTrapAlarmUpsOffAsRequestedRestoredfirst, upsTrapAlarmOnBatteryfourth=upsTrapAlarmOnBatteryfourth, upsDiagnosticDCcapacitorsLifetimefourth=upsDiagnosticDCcapacitorsLifetimefourth, upsTrapAlarmUpsOutputOn=upsTrapAlarmUpsOutputOn, upsTrapAlarmOutputBadsixth=upsTrapAlarmOutputBadsixth, upsIdentUPSSoftwareVersionthird=upsIdentUPSSoftwareVersionthird, upsTrapAlarmUpsOutputOffthird=upsTrapAlarmUpsOutputOffthird, upsBatteryStatussecond=upsBatteryStatussecond, upsTrapAlarmTempBadRestoredseventh=upsTrapAlarmTempBadRestoredseventh, upsTestStartTimeeighth=upsTestStartTimeeighth, upsSecondsOnBatteryseventh=upsSecondsOnBatteryseventh, upsMainsStatisticsB10sixth=upsMainsStatisticsB10sixth, upsDiagnosticBusJACommunicationStatuseighth=upsDiagnosticBusJACommunicationStatuseighth, upsRebootWithDurationfourth=upsRebootWithDurationfourth, upsEventStatusthird=upsEventStatusthird, upsMainsStatisticsB2=upsMainsStatisticsB2, upsParameterLineIndexeighth=upsParameterLineIndexeighth, upsAlarmDepletedBatterythird=upsAlarmDepletedBatterythird, upsDiagnosticfirst=upsDiagnosticfirst, upsTrapAlarmValueHighsecond=upsTrapAlarmValueHighsecond, upsTrapAlarmReceptacleOffsecond=upsTrapAlarmReceptacleOffsecond, upsIdentAttachedDevicesfourth=upsIdentAttachedDevicesfourth, upsRectifierOnOfffirst=upsRectifierOnOfffirst, upsOutputSource=upsOutputSource, upsAlarmDescrfirst=upsAlarmDescrfirst, upsTrapAlarmChargerFailed=upsTrapAlarmChargerFailed, upsTrapAlarmUpsOutputOff=upsTrapAlarmUpsOutputOff, upsAlarmConnectivityBusFailurethird=upsAlarmConnectivityBusFailurethird, upsTrapAlarmShutdownPendingRestoredfirst=upsTrapAlarmShutdownPendingRestoredfirst, upsBypasssecond=upsBypasssecond, upsTrapAlarmUpsSystemOnfifth=upsTrapAlarmUpsSystemOnfifth, upsTestResultsSummarysixth=upsTestResultsSummarysixth, upsAlarmHighSpeedBusJACRCFailuresixth=upsAlarmHighSpeedBusJACRCFailuresixth, upsEventStatusfifth=upsEventStatusfifth, upsBatteryVoltagethird=upsBatteryVoltagethird, upsEventTimefourth=upsEventTimefourth, upsAlarmHighSpeedBusJBCRCFailuresecond=upsAlarmHighSpeedBusJBCRCFailuresecond, upsAlarmChargerFailedfifth=upsAlarmChargerFailedfifth, upsAlarmOnBypasseighth=upsAlarmOnBypasseighth, upsAlarmIdseventh=upsAlarmIdseventh, upsTrapAlarmDCRippleRestoredsecond=upsTrapAlarmDCRippleRestoredsecond, upsConfigInputFreqfirst=upsConfigInputFreqfirst, upsOutputPowersixth=upsOutputPowersixth, upsDiagnosticBusJACommunicationStatusseventh=upsDiagnosticBusJACommunicationStatusseventh, upsTrapAlarmShutdownImminenteighth=upsTrapAlarmShutdownImminenteighth, upsOutputVoltage=upsOutputVoltage, upsConfigOutputFreqseventh=upsConfigOutputFreqseventh, upsConfigOutputVoltageeighth=upsConfigOutputVoltageeighth, upsTestNoTestsInitiatedthird=upsTestNoTestsInitiatedthird, upsTrapAlarmOutputOffAsRequested=upsTrapAlarmOutputOffAsRequested, upsTrapAlarmDiagnosticTestFailedsixth=upsTrapAlarmDiagnosticTestFailedsixth, upsEstimatedMinutesRemainingeighth=upsEstimatedMinutesRemainingeighth, upsParametersStartAddressseventh=upsParametersStartAddressseventh, upsOutputPeakCurrentfourth=upsOutputPeakCurrentfourth, upsParameterTableSizeseventh=upsParameterTableSizeseventh, upsOutputPowerfirst=upsOutputPowerfirst, upsTrapAlarmFanFailureRestoredthird=upsTrapAlarmFanFailureRestoredthird, upsTrapAlarmOutputBadRestoredthird=upsTrapAlarmOutputBadRestoredthird, upsParameterTableSizesixth=upsParameterTableSizesixth, upsTestResultsDetail=upsTestResultsDetail, upsEventRetreiveCurrentTimeStampfourth=upsEventRetreiveCurrentTimeStampfourth, upsGetSetsixth=upsGetSetsixth, upsIdentOperatingTimeseventh=upsIdentOperatingTimeseventh, upsConfigInputVoltagefirst=upsConfigInputVoltagefirst, upsTestElapsedTimeeighth=upsTestElapsedTimeeighth, upsParameterTable=upsParameterTable, upsEventGetCodefourth=upsEventGetCodefourth, upsMainsStatisticsBypRelsecond=upsMainsStatisticsBypRelsecond, upsTestSpinLockfifth=upsTestSpinLockfifth, upsTrapAlarmDCRippleRestoredeighth=upsTrapAlarmDCRippleRestoredeighth, upsOutputShareCurrentfifth=upsOutputShareCurrentfifth, upsConfigOutputPowersecond=upsConfigOutputPowersecond, upsAlarmBatteryBadsixth=upsAlarmBatteryBadsixth, upsTrapAlarmAwaitingPowerRestoredsixth=upsTrapAlarmAwaitingPowerRestoredsixth, upsOutputCurrentsixth=upsOutputCurrentsixth, upsAlarmOnBypassthird=upsAlarmOnBypassthird, upsParametersWriteseventh=upsParametersWriteseventh, upsTestResultsDetailfirst=upsTestResultsDetailfirst, upsAlarmBatteryBadeighth=upsAlarmBatteryBadeighth, upsOutputsixth=upsOutputsixth, upsReceptacleSecondTable=upsReceptacleSecondTable)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsTrapAlarmValueLowRestoredthird=upsTrapAlarmValueLowRestoredthird, upsBypassOnOff=upsBypassOnOff, upsDiagnosticBusJBCommunicationStatusfirst=upsDiagnosticBusJBCommunicationStatusfirst, upsOutputPeakCurrentthird=upsOutputPeakCurrentthird, upsRectifierOnOffsecond=upsRectifierOnOffsecond, upsAlarmOnBypassfifth=upsAlarmOnBypassfifth, upsTrapAlarmDCRippleFailurefourth=upsTrapAlarmDCRippleFailurefourth, upsMainsStatisticsMBfailfifth=upsMainsStatisticsMBfailfifth, upsTrapAlarmUpsOutputOnfifth=upsTrapAlarmUpsOutputOnfifth, upsInputLineBadsfirst=upsInputLineBadsfirst, upsTrapAlarmOnBatteryRestoredseventh=upsTrapAlarmOnBatteryRestoredseventh, upsRequestPermissionsixth=upsRequestPermissionsixth, upsTrapAlarmOnBypassRestoredfirst=upsTrapAlarmOnBypassRestoredfirst, upsInputSixthTable=upsInputSixthTable, upsBypassEntry=upsBypassEntry, upsTestNoTestsInitiatedsecond=upsTestNoTestsInitiatedsecond, upsEventGetCodesecond=upsEventGetCodesecond, upsTrapAlarmTestInProgressfirst=upsTrapAlarmTestInProgressfirst, upsAlarmCurrentSharingeighth=upsAlarmCurrentSharingeighth, upsIdentName=upsIdentName, upsTestStartTimesecond=upsTestStartTimesecond, upsTrapAlarmReceptacleOnfirst=upsTrapAlarmReceptacleOnfirst, upsTrapAlarmOnBatteryeighth=upsTrapAlarmOnBatteryeighth, upsTestResultsDetailsecond=upsTestResultsDetailsecond, upsTrapAlarmUpsOffAsRequestedRestoredfifth=upsTrapAlarmUpsOffAsRequestedRestoredfifth, upsAlarmDiagnosticTestFailedthird=upsAlarmDiagnosticTestFailedthird, upsTrapAlarmCurrentSharingRestoredthird=upsTrapAlarmCurrentSharingRestoredthird, upsAlarmDepletedBatterysixth=upsAlarmDepletedBatterysixth, upsDiagnosticACcapacitorsLifetime=upsDiagnosticACcapacitorsLifetime, upsTrapAlarmLowBatteryeighth=upsTrapAlarmLowBatteryeighth, upsOutputNumLineseighth=upsOutputNumLineseighth, upsOutputShareCurrentfourth=upsOutputShareCurrentfourth, upsDiagnosticACcapacitorsLifetimefifth=upsDiagnosticACcapacitorsLifetimefifth, upsInputthird=upsInputthird, upsTrapAlarmUpsOffAsRequestedRestoredfourth=upsTrapAlarmUpsOffAsRequestedRestoredfourth, upsParameterSpinLockfirst=upsParameterSpinLockfirst, upsInputTruePowerfourth=upsInputTruePowerfourth, upsTrapAlarmOutputOverloadRestoredseventh=upsTrapAlarmOutputOverloadRestoredseventh, upsEventSetStartingTimeStampthird=upsEventSetStartingTimeStampthird, upsTrapAlarmBypassBadfourth=upsTrapAlarmBypassBadfourth, upsAlarmUpsOutputOfffirst=upsAlarmUpsOutputOfffirst, upsStartupAfterDelayfirst=upsStartupAfterDelayfirst, upsAlarmIdeighth=upsAlarmIdeighth, upsTrapAlarmFanFailureRestoredeighth=upsTrapAlarmFanFailureRestoredeighth, upsDiagnosticBusJACommunicationStatusthird=upsDiagnosticBusJACommunicationStatusthird, upsTrapAlarmUpsSystemOneighth=upsTrapAlarmUpsSystemOneighth, upsTrapAlarmHighspeedBusFailuresixth=upsTrapAlarmHighspeedBusFailuresixth, upsOutputShareCurrentseventh=upsOutputShareCurrentseventh, upsBypassPowersixth=upsBypassPowersixth, upsAlarmHighSpeedBusFailure=upsAlarmHighSpeedBusFailure, upsTrapAlarmUpsSystemOfffirst=upsTrapAlarmUpsSystemOfffirst, upsRebootWithDurationsecond=upsRebootWithDurationsecond, upsEventRetreiveCurrentTimeStampfirst=upsEventRetreiveCurrentTimeStampfirst, upsTrapAlarmTestInProgressRestoredsecond=upsTrapAlarmTestInProgressRestoredsecond, upsIdentAgentSoftwareVersionfifth=upsIdentAgentSoftwareVersionfifth, upsBatteryTemperaturesecond=upsBatteryTemperaturesecond, upsAlarmTestInProgresssecond=upsAlarmTestInProgresssecond, upsTrapAlarmReceptacleOfffourth=upsTrapAlarmReceptacleOfffourth, upsConfigInputFreqfourth=upsConfigInputFreqfourth, upsInverterOnOffeighth=upsInverterOnOffeighth, upsTimesecond=upsTimesecond, upsDiagnosticBusJACommunicationStatussecond=upsDiagnosticBusJACommunicationStatussecond, upsTimefifth=upsTimefifth, upsStartupAfterDelayeighth=upsStartupAfterDelayeighth, upsAlarmBypassBadsixth=upsAlarmBypassBadsixth, upsWellKnownAlarmssecond=upsWellKnownAlarmssecond, upsAlarmReceptacleOffthird=upsAlarmReceptacleOffthird, upsReceptacleOnOffeighth=upsReceptacleOnOffeighth, upsParameterSpinLockfourth=upsParameterSpinLockfourth, upsOutputPowerFactorfifth=upsOutputPowerFactorfifth, upsInputVoltageMaxfirst=upsInputVoltageMaxfirst, upsParameterEntry=upsParameterEntry, upsIdentNamefirst=upsIdentNamefirst, upsBypassFourthEntry=upsBypassFourthEntry, upsTrapAlarmDepletedBatteryseventh=upsTrapAlarmDepletedBatteryseventh, upsInputVoltagesixth=upsInputVoltagesixth, upsEstimatedChargeRemainingthird=upsEstimatedChargeRemainingthird, upsAlarmLowBattery=upsAlarmLowBattery, geDevices=geDevices, upsBypassNumLinesthird=upsBypassNumLinesthird, upsAlarmHighSpeedBusJACRCFailuresecond=upsAlarmHighSpeedBusJACRCFailuresecond, upsTrapAlarmOutputBadRestoredfifth=upsTrapAlarmOutputBadRestoredfifth, upsUPSModefourth=upsUPSModefourth, upsIdentAttachedDevicesfirst=upsIdentAttachedDevicesfirst, upsTrapAlarmOutputOverloadRestoredthird=upsTrapAlarmOutputOverloadRestoredthird, upsAlarmTime=upsAlarmTime, upsBatteryStatusfirst=upsBatteryStatusfirst, upsConfigBatteryChargeCurrentthird=upsConfigBatteryChargeCurrentthird, upsTrapAlarmBatteryBadsixth=upsTrapAlarmBatteryBadsixth, upsParametersStartAddresssecond=upsParametersStartAddresssecond, upsTrapAlarmShutdownImminent=upsTrapAlarmShutdownImminent, upsInputLineBadsfifth=upsInputLineBadsfifth, upsStartupAfterDelayfifth=upsStartupAfterDelayfifth, upsTrapAlarmDCRippleRestoredthird=upsTrapAlarmDCRippleRestoredthird, upsTrapAlarmHighspeedBusJBCRCRestoredeighth=upsTrapAlarmHighspeedBusJBCRCRestoredeighth, upsTrapAlarmHighspeedBusJACRCRestoredfirst=upsTrapAlarmHighspeedBusJACRCRestoredfirst, upsInputCurrentfourth=upsInputCurrentfourth, upsTrapAlarmChargerFailedfifth=upsTrapAlarmChargerFailedfifth, upsEventGetPreviousfourth=upsEventGetPreviousfourth, upsInputVoltageseventh=upsInputVoltageseventh, upsTrapAlarmShutdownImminentRestoredthird=upsTrapAlarmShutdownImminentRestoredthird, upsUPSModeseventh=upsUPSModeseventh, upsOutputPercentLoadfourth=upsOutputPercentLoadfourth, upsTrapAlarmBypassBadfirst=upsTrapAlarmBypassBadfirst, upsBypassCurrentthird=upsBypassCurrentthird, upsMainsStatisticsB5fifth=upsMainsStatisticsB5fifth, upsInverterOnOffthird=upsInverterOnOffthird, upsMainsStatisticsB10first=upsMainsStatisticsB10first, upsTrapAlarmInputBadRestoredthird=upsTrapAlarmInputBadRestoredthird, geDiscoveredUPSsMask=geDiscoveredUPSsMask, upsRebootWithDuration=upsRebootWithDuration, upsTrapAlarmFanFailureRestoredsixth=upsTrapAlarmFanFailureRestoredsixth, upsIdentUPSSerialNumberfirst=upsIdentUPSSerialNumberfirst, upsAlarmThirdTable=upsAlarmThirdTable, upsDiagnosticBatteryLifetime=upsDiagnosticBatteryLifetime, upsEstimatedMinutesRemainingfirst=upsEstimatedMinutesRemainingfirst, upsConfigOutputVoltage=upsConfigOutputVoltage, upsAlarmAwaitingPowerfifth=upsAlarmAwaitingPowerfifth, upsOutputVoltageeighth=upsOutputVoltageeighth, upsInputLineBadsthird=upsInputLineBadsthird, upsOutputTable=upsOutputTable, upsAlarmReceptacleOff=upsAlarmReceptacleOff, upsAlarmShutdownImminent=upsAlarmShutdownImminent, upsTrapAlarmValueHighRestoredthird=upsTrapAlarmValueHighRestoredthird, upsTrapAlarmConnectivityBusFailurefourth=upsTrapAlarmConnectivityBusFailurefourth, upsTrapAlarmValueHighfourth=upsTrapAlarmValueHighfourth, upsAlarmCurrentSharingsecond=upsAlarmCurrentSharingsecond, upsParametersWritesecond=upsParametersWritesecond, upsTrapAlarmFanFailureRestoredfifth=upsTrapAlarmFanFailureRestoredfifth, upsTrapAlarmDCRippleRestored=upsTrapAlarmDCRippleRestored, upsIdentUPSSerialNumberthird=upsIdentUPSSerialNumberthird, upsMainsStatisticsB2eighth=upsMainsStatisticsB2eighth, upsStatusfirst=upsStatusfirst, upsTestGeneralSystemsTesteighth=upsTestGeneralSystemsTesteighth, upsControleighth=upsControleighth, upsTrapAlarmHighspeedBusJACRCFailurefirst=upsTrapAlarmHighspeedBusJACRCFailurefirst, upsLoadSourceeighth=upsLoadSourceeighth, upsParametersStartAddressfifth=upsParametersStartAddressfifth, upsAlarmOutputOverloadeighth=upsAlarmOutputOverloadeighth, upsConfigHighVoltageTransferPointsecond=upsConfigHighVoltageTransferPointsecond, upsAutoRestartfourth=upsAutoRestartfourth, upsOutputShareCurrent=upsOutputShareCurrent, upsAlarmsixth=upsAlarmsixth, upsInputNumLinesseventh=upsInputNumLinesseventh, upsControlsixth=upsControlsixth, upsTrapAlarmOutputOverloadRestoredfourth=upsTrapAlarmOutputOverloadRestoredfourth, upsDiagnosticBatteryLifetimesixth=upsDiagnosticBatteryLifetimesixth, upsRectifierOnOfffifth=upsRectifierOnOfffifth, upsInputCurrentsecond=upsInputCurrentsecond, upsMainsStatisticsMRfailsecond=upsMainsStatisticsMRfailsecond, upsTrapAlarmInputBadRestoredeighth=upsTrapAlarmInputBadRestoredeighth, upsMainsStatisticsMBfailfirst=upsMainsStatisticsMBfailfirst, upsMainsStatisticsB200=upsMainsStatisticsB200, upsParameterValue=upsParameterValue, upsTrapAlarmUpsSystemOnsecond=upsTrapAlarmUpsSystemOnsecond, upsTrapAlarmConnectivityBusRestoresixth=upsTrapAlarmConnectivityBusRestoresixth, upsAlarmDCRippleeighth=upsAlarmDCRippleeighth, upsTrapAlarmOutputBadRestoredfirst=upsTrapAlarmOutputBadRestoredfirst, upsIdentNamesixth=upsIdentNamesixth, upsReceptacleLineIndexsecond=upsReceptacleLineIndexsecond, upsAlarmOutputOverloadsecond=upsAlarmOutputOverloadsecond, NonNegativeInteger32=NonNegativeInteger32, upsTrapAlarmHighspeedBusRestorefifth=upsTrapAlarmHighspeedBusRestorefifth, upsAlarmCurrentSharingsixth=upsAlarmCurrentSharingsixth, upsOutputFrequencyseventh=upsOutputFrequencyseventh, upsBypassCurrentfifth=upsBypassCurrentfifth, upsTrapAlarmUpsOffAsRequestedfirst=upsTrapAlarmUpsOffAsRequestedfirst, upsTrapAlarmTempBadRestoredeighth=upsTrapAlarmTempBadRestoredeighth, upsAlarmTempBadfourth=upsAlarmTempBadfourth, upsTrapAlarmShutdownImminentfifth=upsTrapAlarmShutdownImminentfifth, upsTrapAlarmGeneralFaultfourth=upsTrapAlarmGeneralFaultfourth, upsTrapAlarmGeneralFaultRestoredfifth=upsTrapAlarmGeneralFaultRestoredfifth, upsAlarmChargerFailedfirst=upsAlarmChargerFailedfirst, upsMainsStatisticsBypRelthird=upsMainsStatisticsBypRelthird, upsConfigStartDelaysecond=upsConfigStartDelaysecond, upsTimegen=upsTimegen, upsAlarmDiagnosticTestFailedfifth=upsAlarmDiagnosticTestFailedfifth, upsBatteryStatuseighth=upsBatteryStatuseighth, upsOutputSourcefourth=upsOutputSourcefourth, upsOutputLineIndex=upsOutputLineIndex, upsTrapAlarmOnBatteryRestoredfirst=upsTrapAlarmOnBatteryRestoredfirst, upsTrapAlarmOnBatterysixth=upsTrapAlarmOnBatterysixth, upsAlarmInputBadsixth=upsAlarmInputBadsixth, upsReceptacleLineIndexfirst=upsReceptacleLineIndexfirst, upsDiagnosticFansLifetimesecond=upsDiagnosticFansLifetimesecond, upsStatusfifth=upsStatusfifth, upsOutputPowerFactorfourth=upsOutputPowerFactorfourth, upsConfigInputVoltagesecond=upsConfigInputVoltagesecond, upsTrapAlarmBatteryBadRestoredfourth=upsTrapAlarmBatteryBadRestoredfourth, upsShutdownAfterDelayseventh=upsShutdownAfterDelayseventh, upsEventCodeeighth=upsEventCodeeighth, upsAlarmOutputBadfifth=upsAlarmOutputBadfifth, upsEventSecondTable=upsEventSecondTable, upsInputEighthTable=upsInputEighthTable, upsTrapAlarmValueHighRestoredfourth=upsTrapAlarmValueHighRestoredfourth, upsConfigfifth=upsConfigfifth, upsDiagnosticBusJACommunicationStatussixth=upsDiagnosticBusJACommunicationStatussixth, upsMainsStatisticsBypRelseventh=upsMainsStatisticsBypRelseventh, upsStartupAfterDelay=upsStartupAfterDelay, upsInputEntry=upsInputEntry, upsBypassCurrenteighth=upsBypassCurrenteighth, upsTrapAlarmOutputOverloadRestoredfifth=upsTrapAlarmOutputOverloadRestoredfifth, upsInputNumLineseighth=upsInputNumLineseighth, upsOutputthird=upsOutputthird, upsTrapAlarmBypassBadRestoredfourth=upsTrapAlarmBypassBadRestoredfourth, upsBatteryTemperatureseventh=upsBatteryTemperatureseventh, upsTrapAlarmDiagnosticTestFailedRestoredseventh=upsTrapAlarmDiagnosticTestFailedRestoredseventh, upsTrapAlarmOutputOffAsRequestedfifth=upsTrapAlarmOutputOffAsRequestedfifth, upsDiagnosticDCcapacitorsLifetimesixth=upsDiagnosticDCcapacitorsLifetimesixth, upsIdentthird=upsIdentthird, upsTrapAlarmUpsSystemOnsixth=upsTrapAlarmUpsSystemOnsixth, upsConfigBatteryChargeCurrentseventh=upsConfigBatteryChargeCurrentseventh, upsBatteryfourth=upsBatteryfourth, upsTrapAlarmTempBadfirst=upsTrapAlarmTempBadfirst, upsRequestPermissionfifth=upsRequestPermissionfifth, upsIdentAgentSoftwareVersionfirst=upsIdentAgentSoftwareVersionfirst, upsTrapAlarmUpsOutputOnfirst=upsTrapAlarmUpsOutputOnfirst, upsParameterTableSizefifth=upsParameterTableSizefifth, upsEventTimeseventh=upsEventTimeseventh, upsDiagnosticBusJACommunicationStatusfourth=upsDiagnosticBusJACommunicationStatusfourth, upsInputCurrentfifth=upsInputCurrentfifth, upsTestAbortTestInProgresseighth=upsTestAbortTestInProgresseighth, upsBatteryChargeMethodfourth=upsBatteryChargeMethodfourth, upsAlarmInputBadthird=upsAlarmInputBadthird, upsParametersStartAddress=upsParametersStartAddress, upsTrapAlarmFanFailureRestoredsecond=upsTrapAlarmFanFailureRestoredsecond, upsTrapAlarmCommunicationsLostRestoredfourth=upsTrapAlarmCommunicationsLostRestoredfourth, upsTrapAlarmDepletedBatteryRestoredsixth=upsTrapAlarmDepletedBatteryRestoredsixth, upsConfigNoLoadShutdownfirst=upsConfigNoLoadShutdownfirst, upsTrapAlarmFanFailureRestored=upsTrapAlarmFanFailureRestored, upsEventGetCodesixth=upsEventGetCodesixth, upsConfigHighVoltageTransferPointfirst=upsConfigHighVoltageTransferPointfirst, upsTrapAlarmInputBadRestoredsecond=upsTrapAlarmInputBadRestoredsecond, upsAlarmTestInProgressfourth=upsAlarmTestInProgressfourth, upsInverterOnOffseventh=upsInverterOnOffseventh, geUPSTrapssecond=geUPSTrapssecond, upsTrapAlarmConnectivityBusRestoredsecond=upsTrapAlarmConnectivityBusRestoredsecond, upsMainsStatisticsB2first=upsMainsStatisticsB2first, upsBypasseighth=upsBypasseighth, upsAlarmHighSpeedBusJBCRCFailurefifth=upsAlarmHighSpeedBusJBCRCFailurefifth, upsTestQuickBatteryTestfourth=upsTestQuickBatteryTestfourth, upsInputTruePowersecond=upsInputTruePowersecond, upsAlarmAwaitingPowereighth=upsAlarmAwaitingPowereighth, upsEventGetPreviousfirst=upsEventGetPreviousfirst, upsOutputThirdTable=upsOutputThirdTable, upsConfigOutputVAfourth=upsConfigOutputVAfourth, upsEventLineIndexsixth=upsEventLineIndexsixth, upsConfigOutputVoltagefifth=upsConfigOutputVoltagefifth, upsTrapAlarmGeneralFaultRestoredsecond=upsTrapAlarmGeneralFaultRestoredsecond, upsTrapAlarmUpsOutputOfffifth=upsTrapAlarmUpsOutputOfffifth, snmpWebIntBox=snmpWebIntBox, upsBypassFourthTable=upsBypassFourthTable, upsOutputCurrentthird=upsOutputCurrentthird, upsTestsecond=upsTestsecond)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsAlarmOnBypassseventh=upsAlarmOnBypassseventh, upsTrapAlarmOnBatteryseventh=upsTrapAlarmOnBatteryseventh, upsOutputSixthEntry=upsOutputSixthEntry, upsEventSetStartingTimeStampfourth=upsEventSetStartingTimeStampfourth, upsAlarmMaskAsecond=upsAlarmMaskAsecond, upsAlarmOutputOverloadfourth=upsAlarmOutputOverloadfourth, upsIdentsixth=upsIdentsixth, upsParameterValuesecond=upsParameterValuesecond, upsAlarmBypassBadsecond=upsAlarmBypassBadsecond, upsTrapAlarmFuseFailureRestoredfifth=upsTrapAlarmFuseFailureRestoredfifth, upsAlarmShutdownPendingfourth=upsAlarmShutdownPendingfourth, upsRebootWithDurationeighth=upsRebootWithDurationeighth, upsTrapAlarmGeneralFaulteighth=upsTrapAlarmGeneralFaulteighth, upsBatteryRipplethird=upsBatteryRipplethird, upsBypassFrequencythird=upsBypassFrequencythird, upsTrapAlarmValueLowsecond=upsTrapAlarmValueLowsecond, upsAlarmUpsSystemOfffourth=upsAlarmUpsSystemOfffourth, upsInputCurrenteighth=upsInputCurrenteighth, upsTrapAlarmReceptacleOfffirst=upsTrapAlarmReceptacleOfffirst, upsEventEighthTable=upsEventEighthTable, upsOutputseventh=upsOutputseventh, upsBypassNumLines=upsBypassNumLines, upsBypassNumLinessecond=upsBypassNumLinessecond, upsParameterTableSizeeighth=upsParameterTableSizeeighth, upsRequestPermissionfirst=upsRequestPermissionfirst, upsIdentManufacturerseventh=upsIdentManufacturerseventh, upsAlarmthird=upsAlarmthird, upsConfigBatteryChargeCurrentfifth=upsConfigBatteryChargeCurrentfifth, upsConfigsixth=upsConfigsixth, upsBypassSecondEntry=upsBypassSecondEntry, upsTestStartTimethird=upsTestStartTimethird, upsAlarmGeneralFaultthird=upsAlarmGeneralFaultthird, upsInputCurrentfirst=upsInputCurrentfirst, upsTrapAlarmCommunicationsLostsecond=upsTrapAlarmCommunicationsLostsecond, upsTrapAlarmValueLowRestoredsecond=upsTrapAlarmValueLowRestoredsecond, upsInputfifth=upsInputfifth, upsAlarmLowBatterysixth=upsAlarmLowBatterysixth, upsBypassfourth=upsBypassfourth, upsAlarmBatteryBadsecond=upsAlarmBatteryBadsecond, upsOutputFourthTable=upsOutputFourthTable, upsTrapAlarmHighspeedBusJACRCRestoredsecond=upsTrapAlarmHighspeedBusJACRCRestoredsecond, upsTrapAlarmOutputOverloadsixth=upsTrapAlarmOutputOverloadsixth, upsConfigStartDelayfourth=upsConfigStartDelayfourth, upsOutputLineIndexfourth=upsOutputLineIndexfourth, upsAlarmShutdownImminenteighth=upsAlarmShutdownImminenteighth, upsDiagnosticGlobalServiceCheckfourth=upsDiagnosticGlobalServiceCheckfourth, upsBypassseventh=upsBypassseventh, upsTrapAlarmLowBatteryRestoredsecond=upsTrapAlarmLowBatteryRestoredsecond, upsShutdownAfterDelaythird=upsShutdownAfterDelaythird, upsOutputPower=upsOutputPower, upsWellKnownTests=upsWellKnownTests, upsMainsStatisticsB2second=upsMainsStatisticsB2second, upsInputLineIndexseventh=upsInputLineIndexseventh, upsIdentAgentSoftwareVersionfourth=upsIdentAgentSoftwareVersionfourth, upsTrapAlarmFanFailuresecond=upsTrapAlarmFanFailuresecond, upsDiagnosticFansLifetimethird=upsDiagnosticFansLifetimethird, upsShutdownAfterDelayfifth=upsShutdownAfterDelayfifth, upsDiagnosticACcapacitorsLifetimesixth=upsDiagnosticACcapacitorsLifetimesixth, upsAlarmDepletedBatteryeighth=upsAlarmDepletedBatteryeighth, upsTrapAlarmCurrentSharingFailuresixth=upsTrapAlarmCurrentSharingFailuresixth, upsTrapAlarmFuseFailurefirst=upsTrapAlarmFuseFailurefirst, upsTrapAlarmDCRippleRestoredsixth=upsTrapAlarmDCRippleRestoredsixth, upsConfigInputFreqsixth=upsConfigInputFreqsixth, upsReceptaclesNumsecond=upsReceptaclesNumsecond, upsAlarmHighSpeedBusJACRCFailurefirst=upsAlarmHighSpeedBusJACRCFailurefirst, upsIdentComProtVersionfourth=upsIdentComProtVersionfourth, upsEventEntry=upsEventEntry, upsTrapAlarmTestInProgressRestoredthird=upsTrapAlarmTestInProgressRestoredthird, upsLoadSourcefifth=upsLoadSourcefifth, upsAlarmsPresent=upsAlarmsPresent, upsBypassVoltageeighth=upsBypassVoltageeighth, upsConfigStartDelayfirst=upsConfigStartDelayfirst, upsBypassOnOffseventh=upsBypassOnOffseventh, upsConfigInputVoltagethird=upsConfigInputVoltagethird, upsAlarmFuseFailureeighth=upsAlarmFuseFailureeighth, upsTrapAlarmCommunicationsLostRestoredfifth=upsTrapAlarmCommunicationsLostRestoredfifth, upsTestDeepBatteryCalibrationthird=upsTestDeepBatteryCalibrationthird, upsRequestPermission=upsRequestPermission, upsEventRetreiveCurrentTimeStampsecond=upsEventRetreiveCurrentTimeStampsecond, upsMainsStatisticsB200fourth=upsMainsStatisticsB200fourth, upsDiagnosticBatteryLifetimefourth=upsDiagnosticBatteryLifetimefourth, upsConfigLowBattTimefirst=upsConfigLowBattTimefirst, upsAlarmAwaitingPowersixth=upsAlarmAwaitingPowersixth, upsAlarmChargerFailedsixth=upsAlarmChargerFailedsixth, upsMainsStatisticsB200fifth=upsMainsStatisticsB200fifth, upsTrapAlarmShutdownPendingeighth=upsTrapAlarmShutdownPendingeighth, upsAlarmOutputOverloadthird=upsAlarmOutputOverloadthird, upsBypassFrequencyfourth=upsBypassFrequencyfourth, upsTrapAlarmUpsSystemOnfourth=upsTrapAlarmUpsSystemOnfourth, upsAlarmHighSpeedBusFailurefourth=upsAlarmHighSpeedBusFailurefourth, upsTrapAlarmLowBatteryRestoredfourth=upsTrapAlarmLowBatteryRestoredfourth, upsTrapAlarmShutdownPendingsixth=upsTrapAlarmShutdownPendingsixth, upsTestResultsSummaryfifth=upsTestResultsSummaryfifth, upsDiagnosticDCcapacitorsLifetimeeighth=upsDiagnosticDCcapacitorsLifetimeeighth, upsTrapAlarmLowBatteryfifth=upsTrapAlarmLowBatteryfifth, upsTrapAlarmConnectivityBusRestoreeighth=upsTrapAlarmConnectivityBusRestoreeighth, upsStatusthird=upsStatusthird, upsAlarmTestInProgress=upsAlarmTestInProgress, upsOutputFifthTable=upsOutputFifthTable, upsConfigLowVoltageTransferPoint=upsConfigLowVoltageTransferPoint, upsTrapAlarmCommunicationsLostRestoredsixth=upsTrapAlarmCommunicationsLostRestoredsixth, upsIdentComProtVersionfirst=upsIdentComProtVersionfirst, upsTrapAlarmFuseFailurefourth=upsTrapAlarmFuseFailurefourth, upsDiagnosticBatteryLifetimefirst=upsDiagnosticBatteryLifetimefirst, upsShutdownTypefourth=upsShutdownTypefourth, upsTrapAlarmCommunicationsLostRestoredeighth=upsTrapAlarmCommunicationsLostRestoredeighth, upsAlarmCurrentSharing=upsAlarmCurrentSharing, upsConfigAudibleStatussixth=upsConfigAudibleStatussixth, upsTrapAlarmHighspeedBusRestoredfirst=upsTrapAlarmHighspeedBusRestoredfirst, upsAlarmOutputBad=upsAlarmOutputBad, upsTestResultsDetailseventh=upsTestResultsDetailseventh, upsUPSModethird=upsUPSModethird, upsTrapAlarmReceptacleOffseventh=upsTrapAlarmReceptacleOffseventh, upsBypassTable=upsBypassTable, upsEventTableSizeseventh=upsEventTableSizeseventh, upsConfigLowVoltageTransferPointfourth=upsConfigLowVoltageTransferPointfourth, upsShutdownTypeseventh=upsShutdownTypeseventh, upsRectifierOnOffeighth=upsRectifierOnOffeighth, upsIdentUPSSerialNumber=upsIdentUPSSerialNumber, upsTrapAlarmCurrentSharingRestoredsecond=upsTrapAlarmCurrentSharingRestoredsecond, upsIdentAgentSoftwareVersionsixth=upsIdentAgentSoftwareVersionsixth, upsTestGeneralSystemsTestthird=upsTestGeneralSystemsTestthird, upsTrapAlarmOnBypassfifth=upsTrapAlarmOnBypassfifth, upsDiagnosticFansLifetimeseventh=upsDiagnosticFansLifetimeseventh, upsInputLineBadseighth=upsInputLineBadseighth, upsConfigInputFreqeighth=upsConfigInputFreqeighth, upsInputNumLinessixth=upsInputNumLinessixth, upsIdentModeleighth=upsIdentModeleighth, upsConfigInputVoltagesixth=upsConfigInputVoltagesixth, upsConfigOutputVA=upsConfigOutputVA, upsTrapAlarmChargerFailedthird=upsTrapAlarmChargerFailedthird, upsParameterTableSizesecond=upsParameterTableSizesecond, upsOutputsecond=upsOutputsecond, upsBypassOnOfffirst=upsBypassOnOfffirst, upsInputVoltageMaxthird=upsInputVoltageMaxthird, upsTrapAlarmDiagnosticTestFailedRestoredsixth=upsTrapAlarmDiagnosticTestFailedRestoredsixth, upsIdentOperatingTimesecond=upsIdentOperatingTimesecond, upsTrapAlarmDiagnosticTestFailedRestoredsecond=upsTrapAlarmDiagnosticTestFailedRestoredsecond, upsTrapAlarmAwaitingPowerRestoredeighth=upsTrapAlarmAwaitingPowerRestoredeighth, upsReceptacleSeventhTable=upsReceptacleSeventhTable, upsConfigInputVoltageseventh=upsConfigInputVoltageseventh, upsParametersWritethird=upsParametersWritethird, upsAlarmMaskA=upsAlarmMaskA, upsParametersWrite=upsParametersWrite, upsOutputPercentLoadsecond=upsOutputPercentLoadsecond, upsTrapAlarmBatteryBadfifth=upsTrapAlarmBatteryBadfifth, upsAlarmIdfourth=upsAlarmIdfourth, upsTrapAlarmDCRippleFailuresixth=upsTrapAlarmDCRippleFailuresixth, upsIdentNameseventh=upsIdentNameseventh, upsAlarmDCRipplesecond=upsAlarmDCRipplesecond, upsTrapAlarmConnectivityBusFailurefirst=upsTrapAlarmConnectivityBusFailurefirst, upsEventGetNextfifth=upsEventGetNextfifth, upsEstimatedChargeRemainingfifth=upsEstimatedChargeRemainingfifth, upsBypassPowerfifth=upsBypassPowerfifth, upsAlarmDiagnosticTestFailed=upsAlarmDiagnosticTestFailed, upsGetSet=upsGetSet, upsConfigInputVoltagefifth=upsConfigInputVoltagefifth, upsTrapAlarmBypassBadsixth=upsTrapAlarmBypassBadsixth, geUPSTrapseighth=geUPSTrapseighth, upsTrapAlarmHighspeedBusJACRCFailureseventh=upsTrapAlarmHighspeedBusJACRCFailureseventh, upsTrapAlarmShutdownImminentRestored=upsTrapAlarmShutdownImminentRestored, upsEventSpinLocksecond=upsEventSpinLocksecond, upsParametersReadfirst=upsParametersReadfirst, upsInputTruePowersixth=upsInputTruePowersixth, upsTestSpinLock=upsTestSpinLock, upsConfigLowBattTime=upsConfigLowBattTime, upsBypassNumLinesfifth=upsBypassNumLinesfifth, upsInputFrequencyseventh=upsInputFrequencyseventh, upsBypassSeventhTable=upsBypassSeventhTable, upsBypassthird=upsBypassthird, upsOutputCurrentsecond=upsOutputCurrentsecond, upsTrapAlarmDiagnosticTestFailedfourth=upsTrapAlarmDiagnosticTestFailedfourth, upsTrapAlarmUpsOutputOfffirst=upsTrapAlarmUpsOutputOfffirst, upsTrapAlarmFuseFailureRestoredsixth=upsTrapAlarmFuseFailureRestoredsixth, upsAlarmFuseFailure=upsAlarmFuseFailure, upsEventGetPreviouseighth=upsEventGetPreviouseighth, upsTrapAlarmInputBadRestoredsixth=upsTrapAlarmInputBadRestoredsixth, upsIdentNamefourth=upsIdentNamefourth, upsAlarmAwaitingPowersecond=upsAlarmAwaitingPowersecond, upsAlarmOutputOffAsRequestedfourth=upsAlarmOutputOffAsRequestedfourth, upsConfigOutputPowerseventh=upsConfigOutputPowerseventh, upsAlarmDepletedBatteryseventh=upsAlarmDepletedBatteryseventh, upsStatussixth=upsStatussixth, upsAlarmTempBadeighth=upsAlarmTempBadeighth, upsTrapAlarmDepletedBatteryfirst=upsTrapAlarmDepletedBatteryfirst, upsAlarmUpsOutputOff=upsAlarmUpsOutputOff, upsTrapAlarmChargerFailedRestoredfourth=upsTrapAlarmChargerFailedRestoredfourth, upsMainsStatisticsMBfail=upsMainsStatisticsMBfail, upsAlarmShutdownImminentsixth=upsAlarmShutdownImminentsixth, upsEventLineIndexsecond=upsEventLineIndexsecond, upsAlarmHighSpeedBusJBCRCFailure=upsAlarmHighSpeedBusJBCRCFailure, upsMainsStatisticsMRfaileighth=upsMainsStatisticsMRfaileighth, upsAlarmFanFailure=upsAlarmFanFailure, upsAlarmGeneralFaultfourth=upsAlarmGeneralFaultfourth, upsConfigOutputVAfifth=upsConfigOutputVAfifth, upsBatteryChargeMethodsixth=upsBatteryChargeMethodsixth, upsInputFrequencyfourth=upsInputFrequencyfourth, upsBatterythird=upsBatterythird, upsAlarmAwaitingPowerseventh=upsAlarmAwaitingPowerseventh, upsMainsStatisticsBypRelfirst=upsMainsStatisticsBypRelfirst, upsRebootWithDurationthird=upsRebootWithDurationthird, upsAlarmFanFailuresixth=upsAlarmFanFailuresixth, upsParametersReadeighth=upsParametersReadeighth, upsOutputFourthEntry=upsOutputFourthEntry, upsTrapAlarmUpsOffAsRequestedthird=upsTrapAlarmUpsOffAsRequestedthird, upsEventSpinLockeighth=upsEventSpinLockeighth, upsAlarmOnBatterysecond=upsAlarmOnBatterysecond, upsConfigLowVoltageTransferPointsecond=upsConfigLowVoltageTransferPointsecond, upsTestQuickBatteryTestfirst=upsTestQuickBatteryTestfirst, upsBypassLineIndexthird=upsBypassLineIndexthird, upsTestSpinLocksecond=upsTestSpinLocksecond, upsConfigStartDelayfifth=upsConfigStartDelayfifth, upsTrapAlarmValueLowseventh=upsTrapAlarmValueLowseventh, upsMainsStatisticsB200first=upsMainsStatisticsB200first, upsTestthird=upsTestthird, upsUPSModefifth=upsUPSModefifth, upsEventStatusfourth=upsEventStatusfourth, upsTrapAlarmInputBadeighth=upsTrapAlarmInputBadeighth, upsTrapAlarmUpsSystemOnseventh=upsTrapAlarmUpsSystemOnseventh, upsTrapAlarmShutdownPendingRestoredthird=upsTrapAlarmShutdownPendingRestoredthird, upsOutputPercentLoadthird=upsOutputPercentLoadthird, upsOutputFrequencyeighth=upsOutputFrequencyeighth, upsIdentManufacturersecond=upsIdentManufacturersecond, upsTrapAlarmCurrentSharingFailureeighth=upsTrapAlarmCurrentSharingFailureeighth, upsInputfirst=upsInputfirst, upsAlarmMaskAsixth=upsAlarmMaskAsixth, upsInputSeventhTable=upsInputSeventhTable, upsTrapAlarmValueLowRestored=upsTrapAlarmValueLowRestored, upsAlarmFuseFailurethird=upsAlarmFuseFailurethird, upsTrapAlarmUpsOutputOnfourth=upsTrapAlarmUpsOutputOnfourth, upsInputVoltageMinsecond=upsInputVoltageMinsecond, upsTrapAlarmOutputOverloadRestoredfirst=upsTrapAlarmOutputOverloadRestoredfirst, upsTrapAlarmCommunicationsLostseventh=upsTrapAlarmCommunicationsLostseventh, upsParameterLineIndexsixth=upsParameterLineIndexsixth, upsParameterValuethird=upsParameterValuethird, upsGetSetfifth=upsGetSetfifth, upsEstimatedMinutesRemainingfifth=upsEstimatedMinutesRemainingfifth, upsAlarmFuseFailureseventh=upsAlarmFuseFailureseventh, upsTestResultsSummary=upsTestResultsSummary, upsTrapAlarmInputBadthird=upsTrapAlarmInputBadthird, upsTrapAlarmOutputOffAsRequestedRestoredseventh=upsTrapAlarmOutputOffAsRequestedRestoredseventh, upsBypassfifth=upsBypassfifth, upsTrapAlarmOutputOverloadseventh=upsTrapAlarmOutputOverloadseventh, upsTrapAlarmFanFailure=upsTrapAlarmFanFailure, upsAlarmTempBad=upsAlarmTempBad, upsTrapAlarmValueLowRestoredsixth=upsTrapAlarmValueLowRestoredsixth, upsAlarmAwaitingPowerfirst=upsAlarmAwaitingPowerfirst, upsAlarmDiagnosticTestFailedeighth=upsAlarmDiagnosticTestFailedeighth, upsInputNumLinesfifth=upsInputNumLinesfifth, upsAlarmShutdownImminentthird=upsAlarmShutdownImminentthird, upsIdentModelsecond=upsIdentModelsecond, upsTrapAlarmInputBadRestored=upsTrapAlarmInputBadRestored, upsTrapAlarmAwaitingPower=upsTrapAlarmAwaitingPower, upsTrapAlarmAwaitingPowerthird=upsTrapAlarmAwaitingPowerthird)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsParameterTableSize=upsParameterTableSize, upsTrapAlarmValueLowsixth=upsTrapAlarmValueLowsixth, upsTrapAlarmOutputOffAsRequestedsecond=upsTrapAlarmOutputOffAsRequestedsecond, upsInputVoltagefifth=upsInputVoltagefifth, upsDiagnosticACcapacitorsLifetimeeighth=upsDiagnosticACcapacitorsLifetimeeighth, upsConfigStartDelayeighth=upsConfigStartDelayeighth, upsTrapAlarmBypassBadRestoredthird=upsTrapAlarmBypassBadRestoredthird, upsOutput=upsOutput, upsAutoRestarteighth=upsAutoRestarteighth, upsTrapAlarmValueLowRestoredfifth=upsTrapAlarmValueLowRestoredfifth, upsAlarmDepletedBatteryfourth=upsAlarmDepletedBatteryfourth, upsAlarmTimeeighth=upsAlarmTimeeighth, upsWellKnownAlarmseighth=upsWellKnownAlarmseighth, upsTrapAlarmHighspeedBusJBCRCFailureseventh=upsTrapAlarmHighspeedBusJBCRCFailureseventh, upsParameterValuefourth=upsParameterValuefourth, upsEventThirdTable=upsEventThirdTable, upsTestAbortTestInProgress=upsTestAbortTestInProgress, upsTrapAlarmAwaitingPowerRestoredfirst=upsTrapAlarmAwaitingPowerRestoredfirst, upsConfigAudibleStatusthird=upsConfigAudibleStatusthird, upsTestIdseventh=upsTestIdseventh, upsTrapAlarmCurrentSharingRestored=upsTrapAlarmCurrentSharingRestored, upsAutoRestartseventh=upsAutoRestartseventh, upsDiagnosticBatteryLifetimethird=upsDiagnosticBatteryLifetimethird, upsAlarmShutdownImminentfirst=upsAlarmShutdownImminentfirst, upsTrapAlarmHighspeedBusFailurethird=upsTrapAlarmHighspeedBusFailurethird, upsBypassNumLinessixth=upsBypassNumLinessixth, upsInputLineBads=upsInputLineBads, upsOutputSecondTable=upsOutputSecondTable, upsOutputPeakCurrentsecond=upsOutputPeakCurrentsecond, upsAlarmBatteryBadseventh=upsAlarmBatteryBadseventh, upsAlarmMaskAeighth=upsAlarmMaskAeighth, upsBatteryTemperaturethird=upsBatteryTemperaturethird, upsOutputCurrentfourth=upsOutputCurrentfourth, upsIdentfifth=upsIdentfifth, upsTrapAlarmBypassBadRestoredfifth=upsTrapAlarmBypassBadRestoredfifth, upsAlarmTimethird=upsAlarmTimethird, upsBatteryVoltagefifth=upsBatteryVoltagefifth, upsAlarmTimesixth=upsAlarmTimesixth, upsEventEighthEntry=upsEventEighthEntry, upsAlarmUpsOutputOffsecond=upsAlarmUpsOutputOffsecond, upsTestNoTestsInitiatedeighth=upsTestNoTestsInitiatedeighth, upsEventGetCodefifth=upsEventGetCodefifth, upsAlarmseventh=upsAlarmseventh, upsWellKnownTestsfourth=upsWellKnownTestsfourth, upsTestNoTestsInitiatedfourth=upsTestNoTestsInitiatedfourth, upsOutputFirstEntry=upsOutputFirstEntry, upsTrapAlarmGeneralFaultRestoredthird=upsTrapAlarmGeneralFaultRestoredthird, upsConfigOutputVAsecond=upsConfigOutputVAsecond, upsTrapAlarmInputBadfourth=upsTrapAlarmInputBadfourth, upsAlarmOutputBadeighth=upsAlarmOutputBadeighth, upsDiagnosticGlobalServiceCheckthird=upsDiagnosticGlobalServiceCheckthird, upsTrapAlarmFuseFailureeighth=upsTrapAlarmFuseFailureeighth, upsEventSetStartingTimeStampsecond=upsEventSetStartingTimeStampsecond, upsTrapAlarmUpsSystemOffseventh=upsTrapAlarmUpsSystemOffseventh, upsParameterTableSizefourth=upsParameterTableSizefourth, upsAlarmEntry=upsAlarmEntry, upsAlarmOutputOffAsRequestedseventh=upsAlarmOutputOffAsRequestedseventh, upsConfigOutputFreq=upsConfigOutputFreq, upsTrapAlarmDiagnosticTestFailedeighth=upsTrapAlarmDiagnosticTestFailedeighth, upsTrapAlarmChargerFailedRestoredfifth=upsTrapAlarmChargerFailedRestoredfifth, upsTrapAlarmFuseFailuresecond=upsTrapAlarmFuseFailuresecond, upsTestDeepBatteryCalibrationeighth=upsTestDeepBatteryCalibrationeighth, upsAlarmOnBypasssixth=upsAlarmOnBypasssixth, upsMainsStatisticsB10fifth=upsMainsStatisticsB10fifth, upsOutputFrequency=upsOutputFrequency, upsTrapAlarmReceptacleOffthird=upsTrapAlarmReceptacleOffthird, upsAlarmReceptacleOffeighth=upsAlarmReceptacleOffeighth, upsInputVoltageMineighth=upsInputVoltageMineighth, upsAlarmUpsSystemOfffifth=upsAlarmUpsSystemOfffifth, upsTrapAlarmValueHighRestoredfifth=upsTrapAlarmValueHighRestoredfifth, upsAlarmUpsOutputOffseventh=upsAlarmUpsOutputOffseventh, upsOutputPercentLoadsixth=upsOutputPercentLoadsixth, upsEstimatedChargeRemainingfirst=upsEstimatedChargeRemainingfirst, upsRequestPermissionsecond=upsRequestPermissionsecond, upsOutputPeakCurrent=upsOutputPeakCurrent, upsBatteryCurrentfirst=upsBatteryCurrentfirst, upsAlarmMaskAfirst=upsAlarmMaskAfirst, upsEventGetNextfourth=upsEventGetNextfourth, upsIdentModelsixth=upsIdentModelsixth, upsDiagnosticDCcapacitorsLifetimeseventh=upsDiagnosticDCcapacitorsLifetimeseventh, upsTrapAlarmTempBadRestoredfifth=upsTrapAlarmTempBadRestoredfifth, upsIdentManufacturerthird=upsIdentManufacturerthird, upsAlarmFanFailurefourth=upsAlarmFanFailurefourth, upsBatteryStatusseventh=upsBatteryStatusseventh, upsInputseventh=upsInputseventh, upsTrapAlarmTestInProgressseventh=upsTrapAlarmTestInProgressseventh, geUPSTrapsfifth=geUPSTrapsfifth, upsConfigOutputFreqsecond=upsConfigOutputFreqsecond, upsIdentComProtVersionsixth=upsIdentComProtVersionsixth, upsReceptaclesNumsixth=upsReceptaclesNumsixth, upsTrapAlarmHighspeedBusFailurefirst=upsTrapAlarmHighspeedBusFailurefirst, upsAutoRestartsecond=upsAutoRestartsecond, upsTrapAlarmDCRippleFailurefirst=upsTrapAlarmDCRippleFailurefirst, upsTrapAlarmOnBatteryfifth=upsTrapAlarmOnBatteryfifth, upsBypassFifthTable=upsBypassFifthTable, upsTrapAlarmOnBatteryRestored=upsTrapAlarmOnBatteryRestored, upsConfigBatteryCapacity=upsConfigBatteryCapacity, upsTrapAlarmGeneralFaultsecond=upsTrapAlarmGeneralFaultsecond, upsConfigBatteryChargeCurrentfourth=upsConfigBatteryChargeCurrentfourth, upsAlarmOutputOverloadfirst=upsAlarmOutputOverloadfirst, upsTrapAlarmTestInProgressRestoredsixth=upsTrapAlarmTestInProgressRestoredsixth, upsEventSetStartingTimeStampfirst=upsEventSetStartingTimeStampfirst, upsTrapAlarmAwaitingPowerfirst=upsTrapAlarmAwaitingPowerfirst, upsReceptacleEighthTable=upsReceptacleEighthTable, upsSecondsOnBatteryfourth=upsSecondsOnBatteryfourth, upsTrapAlarmUpsSystemOfffifth=upsTrapAlarmUpsSystemOfffifth, upsMainsStatisticsB10eighth=upsMainsStatisticsB10eighth, upsTrapAlarmDepletedBatterythird=upsTrapAlarmDepletedBatterythird, upsAlarmTempBadseventh=upsAlarmTempBadseventh, upsTrapAlarmHighspeedBusJACRCRestoreseventh=upsTrapAlarmHighspeedBusJACRCRestoreseventh, upsConfigOutputVAseventh=upsConfigOutputVAseventh, upsWellKnownTestsfirst=upsWellKnownTestsfirst, upsTrapAlarmFuseFailureRestored=upsTrapAlarmFuseFailureRestored, upsEventGetNextseventh=upsEventGetNextseventh, upsReceptacleOnOfffifth=upsReceptacleOnOfffifth, upsTrapAlarmReceptacleOnfourth=upsTrapAlarmReceptacleOnfourth, upsParametersReadsixth=upsParametersReadsixth, upsInputNumLinesthird=upsInputNumLinesthird, upsConfigOutputVAeighth=upsConfigOutputVAeighth, upsLoadSourceseventh=upsLoadSourceseventh, upsInputeighth=upsInputeighth, upsSecondsOnBatterysecond=upsSecondsOnBatterysecond, upsShutdownTypefifth=upsShutdownTypefifth, upsAlarmOnBatteryfirst=upsAlarmOnBatteryfirst, upsInputTruePowereighth=upsInputTruePowereighth, upsTestElapsedTimefourth=upsTestElapsedTimefourth, upsAlarmAwaitingPower=upsAlarmAwaitingPower, upsConfigBatteryCapacityfirst=upsConfigBatteryCapacityfirst, upsControl=upsControl, upsAlarmCurrentSharingthird=upsAlarmCurrentSharingthird, upsEventFirstTable=upsEventFirstTable, upsIdentAttachedDevicesseventh=upsIdentAttachedDevicesseventh, upsTrapAlarmDiagnosticTestFailedthird=upsTrapAlarmDiagnosticTestFailedthird, upsRequestPermissioneighth=upsRequestPermissioneighth, upsAlarmGeneralFaultseventh=upsAlarmGeneralFaultseventh, upsConfigBatteryCapacitythird=upsConfigBatteryCapacitythird, upsConfigOutputPowerfirst=upsConfigOutputPowerfirst, upsParametersStartAddressthird=upsParametersStartAddressthird, upsOutputSourcefirst=upsOutputSourcefirst, upsOutputfirst=upsOutputfirst, upsTimeseventh=upsTimeseventh, upsTrapAlarmUpsSystemOn=upsTrapAlarmUpsSystemOn, upsBypassNumLinesseventh=upsBypassNumLinesseventh, upsBatteryTemperatureeighth=upsBatteryTemperatureeighth, upsBypassVoltagesixth=upsBypassVoltagesixth, upsRequestPermissionseventh=upsRequestPermissionseventh, upsTrapAlarmShutdownPendingseventh=upsTrapAlarmShutdownPendingseventh, geDevicesDescriptions=geDevicesDescriptions, upsInputVoltagefirst=upsInputVoltagefirst, upsTrapAlarmGeneralFaultRestoredsixth=upsTrapAlarmGeneralFaultRestoredsixth, upsOutputVoltageseventh=upsOutputVoltageseventh, upsIdentManufacturer=upsIdentManufacturer, upsReceptaclesNumfourth=upsReceptaclesNumfourth, upsEventSetStartingTimeStampfifth=upsEventSetStartingTimeStampfifth, upsTrapAlarmUpsOutputOfffourth=upsTrapAlarmUpsOutputOfffourth, upsAlarmOutputOffAsRequestedsecond=upsAlarmOutputOffAsRequestedsecond, upsReceptaclesNumthird=upsReceptaclesNumthird, upsTrapAlarmReceptacleOnfifth=upsTrapAlarmReceptacleOnfifth, upsDiagnosticBatteryLifetimeseventh=upsDiagnosticBatteryLifetimeseventh, upsAlarmTempBadthird=upsAlarmTempBadthird, upsDiagnosticACcapacitorsLifetimefourth=upsDiagnosticACcapacitorsLifetimefourth, upsDiagnosticGlobalServiceCheckeighth=upsDiagnosticGlobalServiceCheckeighth, upsInverterOnOffsixth=upsInverterOnOffsixth, upsConfigHighVoltageTransferPointseventh=upsConfigHighVoltageTransferPointseventh, upsTrapAlarmGeneralFaultRestoredseventh=upsTrapAlarmGeneralFaultRestoredseventh, upsLoadSourcefourth=upsLoadSourcefourth, upsAlarmTimesecond=upsAlarmTimesecond, upsAlarmHighSpeedBusJBCRCFailurefourth=upsAlarmHighSpeedBusJBCRCFailurefourth, upsInputLineBadsfourth=upsInputLineBadsfourth, upsBypassLineIndexfirst=upsBypassLineIndexfirst, upsTrapAlarmDiagnosticTestFailedRestoredfourth=upsTrapAlarmDiagnosticTestFailedRestoredfourth, upsConfigNoLoadShutdownfifth=upsConfigNoLoadShutdownfifth, geEighthUPS=geEighthUPS, upsTrapAlarmOutputBadRestoredfourth=upsTrapAlarmOutputBadRestoredfourth, upsAlarmCurrentSharingfifth=upsAlarmCurrentSharingfifth, upsTrapAlarmBatteryBadseventh=upsTrapAlarmBatteryBadseventh, upsTrapAlarmBatteryBadRestoredsecond=upsTrapAlarmBatteryBadRestoredsecond, upsTrapAlarmConnectivityBusFailurefifth=upsTrapAlarmConnectivityBusFailurefifth, upsBypassFirstEntry=upsBypassFirstEntry, upsEventSecondEntry=upsEventSecondEntry, upsInputVoltageMinsixth=upsInputVoltageMinsixth, upsEventTableSizesecond=upsEventTableSizesecond, upsTestGeneralSystemsTestsecond=upsTestGeneralSystemsTestsecond, upsConfigBatteryCapacityfourth=upsConfigBatteryCapacityfourth, upsTrapAlarmOnBypassRestoredseventh=upsTrapAlarmOnBypassRestoredseventh, upsDiagnosticBusJACommunicationStatus=upsDiagnosticBusJACommunicationStatus, upsTrapAlarmDepletedBatteryRestoredfourth=upsTrapAlarmDepletedBatteryRestoredfourth, upsEstimatedChargeRemaining=upsEstimatedChargeRemaining, upsConfigAudibleStatusseventh=upsConfigAudibleStatusseventh, upsBypassPowereighth=upsBypassPowereighth, upsReceptacleOnOffsixth=upsReceptacleOnOffsixth, upsBatteryStatussixth=upsBatteryStatussixth, upsAlarmDCRippleseventh=upsAlarmDCRippleseventh, upsReceptacleEntry=upsReceptacleEntry, upsOutputShareCurrenteighth=upsOutputShareCurrenteighth, upsTrapAlarmFuseFailureRestoredseventh=upsTrapAlarmFuseFailureRestoredseventh, upsAlarmSecondTable=upsAlarmSecondTable, geUPSTrapsfourth=geUPSTrapsfourth, upsInputFrequencyeighth=upsInputFrequencyeighth, upsConfigStartDelaythird=upsConfigStartDelaythird, upsBypassLineIndex=upsBypassLineIndex, upsTrapAlarmCommunicationsLostRestoredsecond=upsTrapAlarmCommunicationsLostRestoredsecond, upsOutputPercentLoadeighth=upsOutputPercentLoadeighth, upsConfigInputVoltage=upsConfigInputVoltage, upsMainsStatisticsB10second=upsMainsStatisticsB10second, upsOutputLineIndexseventh=upsOutputLineIndexseventh, upsAlarmChargerFailed=upsAlarmChargerFailed, upsAlarmTimeseventh=upsAlarmTimeseventh, upsParametersWritefirst=upsParametersWritefirst, upsOutputfifth=upsOutputfifth, upsConfigLowBattTimethird=upsConfigLowBattTimethird, upsConfigOutputFreqsixth=upsConfigOutputFreqsixth, upsEstimatedChargeRemainingfourth=upsEstimatedChargeRemainingfourth, upsAlarmCommunicationsLostsixth=upsAlarmCommunicationsLostsixth, upsBypassLineIndexfifth=upsBypassLineIndexfifth, upsAlarmShutdownImminentseventh=upsAlarmShutdownImminentseventh, upsAlarmUpsSystemOff=upsAlarmUpsSystemOff, upsAlarmfirst=upsAlarmfirst, upsTrapAlarmValueHighRestoredeighth=upsTrapAlarmValueHighRestoredeighth, upsParameterFirstTable=upsParameterFirstTable, upsInputLineBadssecond=upsInputLineBadssecond, upsTrapAlarmCommunicationsLost=upsTrapAlarmCommunicationsLost, upsIdentManufacturersixth=upsIdentManufacturersixth, upsTestDeepBatteryCalibration=upsTestDeepBatteryCalibration, upsReceptacleFirstEntry=upsReceptacleFirstEntry, upsWellKnownAlarmsfirst=upsWellKnownAlarmsfirst, upsAlarmShutdownPendingseventh=upsAlarmShutdownPendingseventh, upsOutputPowerthird=upsOutputPowerthird, upsEventSetStartingTimeStampseventh=upsEventSetStartingTimeStampseventh, upsSecondsOnBatteryfirst=upsSecondsOnBatteryfirst, upsAlarmDiagnosticTestFailedfirst=upsAlarmDiagnosticTestFailedfirst, upsTrapAlarmFuseFailureRestoredthird=upsTrapAlarmFuseFailureRestoredthird, upsAlarmIdthird=upsAlarmIdthird, upsTestStartTimefirst=upsTestStartTimefirst, upsTrapAlarmCurrentSharingRestoredseventh=upsTrapAlarmCurrentSharingRestoredseventh, upsIdentModelfirst=upsIdentModelfirst, upsTrapAlarmDiagnosticTestFailedfirst=upsTrapAlarmDiagnosticTestFailedfirst, upsTrapAlarmConnectivityBusFailureeighth=upsTrapAlarmConnectivityBusFailureeighth, upsEventSpinLockseventh=upsEventSpinLockseventh, upsAlarmSixthEntry=upsAlarmSixthEntry, upsTrapAlarmReceptacleOff=upsTrapAlarmReceptacleOff, upsInputVoltageMaxfourth=upsInputVoltageMaxfourth, upsTestSpinLockseventh=upsTestSpinLockseventh, upsRectifierOnOff=upsRectifierOnOff, upsDiagnosticACcapacitorsLifetimethird=upsDiagnosticACcapacitorsLifetimethird, upsAlarmFuseFailuresixth=upsAlarmFuseFailuresixth, upsAlarmHighSpeedBusFailuresecond=upsAlarmHighSpeedBusFailuresecond, upsTestIdfifth=upsTestIdfifth, upsAutoRestartthird=upsAutoRestartthird, upsTrapAlarmLowBatteryfirst=upsTrapAlarmLowBatteryfirst, upsMainsStatisticsMBfaileighth=upsMainsStatisticsMBfaileighth, upsTrapAlarmUpsOutputOnthird=upsTrapAlarmUpsOutputOnthird, upsMainsStatisticsB200sixth=upsMainsStatisticsB200sixth, upsAlarmHighSpeedBusJBCRCFailureeighth=upsAlarmHighSpeedBusJBCRCFailureeighth)
mibBuilder.exportSymbols("GEPARALLELUPS-MIB", upsTrapAlarmShutdownImminentRestoredfirst=upsTrapAlarmShutdownImminentRestoredfirst, upsReceptacleOnOff=upsReceptacleOnOff, upsReceptacleLineIndexeighth=upsReceptacleLineIndexeighth, upsTrapAlarmLowBatteryRestoredsixth=upsTrapAlarmLowBatteryRestoredsixth, upsTrapAlarmShutdownImminentseventh=upsTrapAlarmShutdownImminentseventh, upsAlarmDescrthird=upsAlarmDescrthird, upsAlarmUpsOffAsRequestedfirst=upsAlarmUpsOffAsRequestedfirst, upsTrapAlarmOutputBadRestoredsecond=upsTrapAlarmOutputBadRestoredsecond, upsTrapAlarmUpsOffAsRequestedseventh=upsTrapAlarmUpsOffAsRequestedseventh, upsReceptacleFifthEntry=upsReceptacleFifthEntry, upsTimethird=upsTimethird, upsReceptacleOnOfffourth=upsReceptacleOnOfffourth, upsBatteryCurrentsixth=upsBatteryCurrentsixth, geUPSTraps=geUPSTraps, upsEventGetPreviousfifth=upsEventGetPreviousfifth, upsAlarmUpsOffAsRequested=upsAlarmUpsOffAsRequested, upsMainsStatisticsBypRelfifth=upsMainsStatisticsBypRelfifth, upsTrapAlarmOutputBadRestoredseventh=upsTrapAlarmOutputBadRestoredseventh, geUPS=geUPS, upsTrapAlarmHighspeedBusJACRCRestoresixth=upsTrapAlarmHighspeedBusJACRCRestoresixth, upsAlarmDiagnosticTestFailedsixth=upsAlarmDiagnosticTestFailedsixth, upsLoadSourcesixth=upsLoadSourcesixth, upsEventTime=upsEventTime, upsTrapAlarmOnBypasssixth=upsTrapAlarmOnBypasssixth, upsIdentUPSSoftwareVersion=upsIdentUPSSoftwareVersion, upsBatteryVoltage=upsBatteryVoltage, upsOutputCurrentfifth=upsOutputCurrentfifth, upsOutputPowerFactorsecond=upsOutputPowerFactorsecond, upsTrapAlarmDiagnosticTestFailed=upsTrapAlarmDiagnosticTestFailed, upsTestfifth=upsTestfifth, upsIdentOperatingTimefirst=upsIdentOperatingTimefirst, upsAlarmConnectivityBusFailuresixth=upsAlarmConnectivityBusFailuresixth, upsTrapAlarmBypassBad=upsTrapAlarmBypassBad, upsTrapAlarmUpsOffAsRequestedfifth=upsTrapAlarmUpsOffAsRequestedfifth, upsInputNumLines=upsInputNumLines, upsParameterValuefirst=upsParameterValuefirst, upsTrapAlarmLowBatteryRestoredthird=upsTrapAlarmLowBatteryRestoredthird, upsAlarmFirstTable=upsAlarmFirstTable, upsTrapAlarmValueLowRestoredfirst=upsTrapAlarmValueLowRestoredfirst, upsOutputNumLinessecond=upsOutputNumLinessecond, upsTrapAlarmOutputBadfourth=upsTrapAlarmOutputBadfourth, upsDiagnosticBusJBCommunicationStatussixth=upsDiagnosticBusJBCommunicationStatussixth, upsConfigNoLoadShutdownsecond=upsConfigNoLoadShutdownsecond, upsTrapAlarmOutputBadthird=upsTrapAlarmOutputBadthird, upsDiagnosticFansLifetimefourth=upsDiagnosticFansLifetimefourth, upsAlarmOnBatteryfifth=upsAlarmOnBatteryfifth, upsParametersWritefifth=upsParametersWritefifth, upsAlarmCurrentSharingfourth=upsAlarmCurrentSharingfourth, upsOutputNumLinesfourth=upsOutputNumLinesfourth, upsParametersWritefourth=upsParametersWritefourth, upsIdentManufacturereighth=upsIdentManufacturereighth, upsTrapAlarmTestInProgresssecond=upsTrapAlarmTestInProgresssecond, upsTrapAlarmShutdownImminentRestoredsixth=upsTrapAlarmShutdownImminentRestoredsixth, upsTrapAlarmCommunicationsLostRestored=upsTrapAlarmCommunicationsLostRestored, upsInputVoltagethird=upsInputVoltagethird, upsTrapAlarmHighspeedBusRestorethird=upsTrapAlarmHighspeedBusRestorethird, upsIdentAgentSoftwareVersionsecond=upsIdentAgentSoftwareVersionsecond, upsMainsStatisticsBypRel=upsMainsStatisticsBypRel, upsTestResultsSummaryfirst=upsTestResultsSummaryfirst, upsShutdownAfterDelaysixth=upsShutdownAfterDelaysixth, upsMainsStatisticsB5sixth=upsMainsStatisticsB5sixth, upsTrapAlarmUpsOutputOnseventh=upsTrapAlarmUpsOutputOnseventh, upsOutputPowerFactorfirst=upsOutputPowerFactorfirst, upsTrapAlarmDiagnosticTestFailedsecond=upsTrapAlarmDiagnosticTestFailedsecond, upsMainsStatisticsMRfailfourth=upsMainsStatisticsMRfailfourth, upsTrapAlarmConnectivityBusRestorefourth=upsTrapAlarmConnectivityBusRestorefourth, upsAlarmBypassBadfifth=upsAlarmBypassBadfifth, upsDiagnosticGlobalServiceChecksixth=upsDiagnosticGlobalServiceChecksixth, upsAlarmTestInProgressfifth=upsAlarmTestInProgressfifth, upsAlarmMaskAthird=upsAlarmMaskAthird, upsAlarmOutputOverload=upsAlarmOutputOverload, upsParametersReadseventh=upsParametersReadseventh, geFirstUPS=geFirstUPS, upsAlarmReceptacleOfffirst=upsAlarmReceptacleOfffirst, upsTrapAlarmReceptacleOffsixth=upsTrapAlarmReceptacleOffsixth, upsMainsStatisticsMBfailfourth=upsMainsStatisticsMBfailfourth, upsBypassVoltagefirst=upsBypassVoltagefirst, upsControlseventh=upsControlseventh, upsDiagnosticACcapacitorsLifetimefirst=upsDiagnosticACcapacitorsLifetimefirst, upsTrapAlarmHighspeedBusJACRCRestoreeighth=upsTrapAlarmHighspeedBusJACRCRestoreeighth, upsTrapAlarmConnectivityBusFailurethird=upsTrapAlarmConnectivityBusFailurethird, upsWellKnownTestseighth=upsWellKnownTestseighth, upsOutputFifthEntry=upsOutputFifthEntry, upsDiagnosticGlobalServiceCheckfifth=upsDiagnosticGlobalServiceCheckfifth, upsTrapAlarmCurrentSharingFailureseventh=upsTrapAlarmCurrentSharingFailureseventh, upsAlarmsPresentsecond=upsAlarmsPresentsecond, upsMainsStatisticsB5second=upsMainsStatisticsB5second, upsAlarmInputBad=upsAlarmInputBad, upsAlarmHighSpeedBusFailurethird=upsAlarmHighSpeedBusFailurethird, upsAlarmShutdownImminentfourth=upsAlarmShutdownImminentfourth, upsTestGeneralSystemsTestseventh=upsTestGeneralSystemsTestseventh, upsEventSpinLockfirst=upsEventSpinLockfirst, upsTrapAlarmValueLowfirst=upsTrapAlarmValueLowfirst, upsTrapAlarmCommunicationsLostRestoredfirst=upsTrapAlarmCommunicationsLostRestoredfirst, upsBatteryCurrentseventh=upsBatteryCurrentseventh, upsIdentOperatingTimethird=upsIdentOperatingTimethird, upsBypassVoltagethird=upsBypassVoltagethird, upsAlarmConnectivityBusFailureseventh=upsAlarmConnectivityBusFailureseventh, upsAlarmHighSpeedBusFailuresixth=upsAlarmHighSpeedBusFailuresixth, upsAlarmInputBadeighth=upsAlarmInputBadeighth, upsTrapAlarmFuseFailure=upsTrapAlarmFuseFailure, geUPSTrapssixth=geUPSTrapssixth, upsStatuseighth=upsStatuseighth, upsTrapAlarmUpsOutputOneighth=upsTrapAlarmUpsOutputOneighth, upsBatteryTemperaturefourth=upsBatteryTemperaturefourth, upsEstimatedChargeRemainingeighth=upsEstimatedChargeRemainingeighth, upsTrapAlarmFuseFailureRestoredsecond=upsTrapAlarmFuseFailureRestoredsecond, upsBatteryRippleseventh=upsBatteryRippleseventh, upsGetSetfourth=upsGetSetfourth, upsEventSetStartingTimeStamp=upsEventSetStartingTimeStamp, upsConfigOutputVoltagesixth=upsConfigOutputVoltagesixth, upsAlarmFanFailureeighth=upsAlarmFanFailureeighth, upsInputCurrentthird=upsInputCurrentthird, upsParameterTableSizethird=upsParameterTableSizethird, upsAlarmShutdownPending=upsAlarmShutdownPending, upsTrapAlarmBypassBadfifth=upsTrapAlarmBypassBadfifth, upsTrapAlarmHighspeedBusJBCRCFailureeighth=upsTrapAlarmHighspeedBusJBCRCFailureeighth, upsBypassOnOfffifth=upsBypassOnOfffifth, upsBypassSixthEntry=upsBypassSixthEntry, upsAlarmOnBatterythird=upsAlarmOnBatterythird, upsTrapAlarmValueHighsixth=upsTrapAlarmValueHighsixth, upsTrapAlarmLowBatterysixth=upsTrapAlarmLowBatterysixth, upsBatteryfifth=upsBatteryfifth, upsStartupAfterDelayfourth=upsStartupAfterDelayfourth, upsTrapAlarmDiagnosticTestFailedfifth=upsTrapAlarmDiagnosticTestFailedfifth, upsAlarmHighSpeedBusJACRCFailureeighth=upsAlarmHighSpeedBusJACRCFailureeighth, upsConfigHighVoltageTransferPointeighth=upsConfigHighVoltageTransferPointeighth, upsTrapAlarmBypassBadRestoredfirst=upsTrapAlarmBypassBadRestoredfirst, upsAlarmeighth=upsAlarmeighth, upsTrapAlarmShutdownPendingRestoredfourth=upsTrapAlarmShutdownPendingRestoredfourth, upsConfigBatteryChargeCurrentsixth=upsConfigBatteryChargeCurrentsixth, upsMainsStatisticsB5fourth=upsMainsStatisticsB5fourth, upsDiagnosticBatteryLifetimefifth=upsDiagnosticBatteryLifetimefifth, upsTrapAlarmDiagnosticTestFailedRestoredthird=upsTrapAlarmDiagnosticTestFailedRestoredthird, upsTrapAlarmShutdownPendingfirst=upsTrapAlarmShutdownPendingfirst, upsBypassThirdEntry=upsBypassThirdEntry, upsStartupAfterDelaythird=upsStartupAfterDelaythird, upsDiagnosticBusJBCommunicationStatusthird=upsDiagnosticBusJBCommunicationStatusthird, upsConfigOutputPowersixth=upsConfigOutputPowersixth, upsTrapAlarmUpsOffAsRequestedRestoredseventh=upsTrapAlarmUpsOffAsRequestedRestoredseventh, upsTestNoTestsInitiated=upsTestNoTestsInitiated, upsTestStartTimefifth=upsTestStartTimefifth, upsMainsStatisticsB200eighth=upsMainsStatisticsB200eighth, upsDiagnosticDCcapacitorsLifetimefifth=upsDiagnosticDCcapacitorsLifetimefifth, upsOutputPercentLoadfifth=upsOutputPercentLoadfifth, upsConfigStartDelaysixth=upsConfigStartDelaysixth, upsAlarmChargerFailedsecond=upsAlarmChargerFailedsecond, upsTrapAlarmCommunicationsLostRestoredseventh=upsTrapAlarmCommunicationsLostRestoredseventh, upsInputThirdTable=upsInputThirdTable, upsTrapAlarmCurrentSharingRestoredfifth=upsTrapAlarmCurrentSharingRestoredfifth, upsAlarmConnectivityBusFailureeighth=upsAlarmConnectivityBusFailureeighth, upsTrapAlarmDCRippleRestoredseventh=upsTrapAlarmDCRippleRestoredseventh, upsAlarmUpsOutputOffeighth=upsAlarmUpsOutputOffeighth, upsLoadSourcesecond=upsLoadSourcesecond, upsOutputNumLinesseventh=upsOutputNumLinesseventh, upsDiagnostic=upsDiagnostic, upsAlarmGeneralFaultfifth=upsAlarmGeneralFaultfifth, upsTrapAlarmTestInProgressRestoredfifth=upsTrapAlarmTestInProgressRestoredfifth, upsTrapAlarmShutdownPendingRestoredfifth=upsTrapAlarmShutdownPendingRestoredfifth, upsAlarm=upsAlarm, upsAlarmCurrentSharingfirst=upsAlarmCurrentSharingfirst, upsTrapAlarmConnectivityBusFailureseventh=upsTrapAlarmConnectivityBusFailureseventh, upsTrapAlarmHighspeedBusJACRCFailurethird=upsTrapAlarmHighspeedBusJACRCFailurethird, upsEventSpinLocksixth=upsEventSpinLocksixth, upsConfigOutputFreqfourth=upsConfigOutputFreqfourth, upsTrapAlarmBatteryBad=upsTrapAlarmBatteryBad, upsTestResultsDetailsixth=upsTestResultsDetailsixth, upsConfigLowVoltageTransferPointseventh=upsConfigLowVoltageTransferPointseventh, upsControlfifth=upsControlfifth, upsTrapAlarmOnBypassseventh=upsTrapAlarmOnBypassseventh, upsTrapAlarmBatteryBadthird=upsTrapAlarmBatteryBadthird, upsDiagnosticFansLifetimefirst=upsDiagnosticFansLifetimefirst, upsTrapAlarmBatteryBadsecond=upsTrapAlarmBatteryBadsecond, upsTestsixth=upsTestsixth, upsIdentseventh=upsIdentseventh, upsTestGeneralSystemsTestfirst=upsTestGeneralSystemsTestfirst, upsTestResultsDetailfifth=upsTestResultsDetailfifth, upsEventStatusseventh=upsEventStatusseventh, upsEventTimefifth=upsEventTimefifth, upsAlarmDescreighth=upsAlarmDescreighth, upsMainsStatisticsB10third=upsMainsStatisticsB10third, upsParameterFifthEntry=upsParameterFifthEntry, upsAlarmFanFailureseventh=upsAlarmFanFailureseventh, upsAlarmInputBadseventh=upsAlarmInputBadseventh, upsConfigAudibleStatus=upsConfigAudibleStatus, upsParametersReadfifth=upsParametersReadfifth, upsAlarmReceptacleOffseventh=upsAlarmReceptacleOffseventh, upsRebootWithDurationseventh=upsRebootWithDurationseventh, upsAlarmGeneralFaultsixth=upsAlarmGeneralFaultsixth, upsEventCodefourth=upsEventCodefourth, upsAlarmGeneralFaultfirst=upsAlarmGeneralFaultfirst, upsConfigOutputPower=upsConfigOutputPower, upsTrapAlarmTempBadRestoredthird=upsTrapAlarmTempBadRestoredthird, upsDiagnosticGlobalServiceCheck=upsDiagnosticGlobalServiceCheck, upsTrapAlarmTestInProgressRestored=upsTrapAlarmTestInProgressRestored, upsTrapAlarmOutputOffAsRequestedRestoredfifth=upsTrapAlarmOutputOffAsRequestedRestoredfifth, upsAlarmUpsOutputOfffourth=upsAlarmUpsOutputOfffourth, upsEventLineIndexseventh=upsEventLineIndexseventh, upsIdentUPSSoftwareVersionsixth=upsIdentUPSSoftwareVersionsixth, upsOutputPowereighth=upsOutputPowereighth, upsInputNumLinesfirst=upsInputNumLinesfirst, upsRectifierOnOffsixth=upsRectifierOnOffsixth, upsAlarmChargerFailedfourth=upsAlarmChargerFailedfourth, upsAlarmTestInProgressfirst=upsAlarmTestInProgressfirst, upsTrapAlarmGeneralFaultRestoredeighth=upsTrapAlarmGeneralFaultRestoredeighth, upsEventGetPrevioussecond=upsEventGetPrevioussecond, upsTrapAlarmShutdownImminentRestoredsecond=upsTrapAlarmShutdownImminentRestoredsecond, upsOutputSourceseventh=upsOutputSourceseventh, upsTrapAlarmLowBatteryRestoredseventh=upsTrapAlarmLowBatteryRestoredseventh, upsBypassPowersecond=upsBypassPowersecond, upsConfigLowBattTimesixth=upsConfigLowBattTimesixth, upsInputNumLinesfourth=upsInputNumLinesfourth, upsParameterLineIndexseventh=upsParameterLineIndexseventh, upsTrapAlarmAwaitingPowersecond=upsTrapAlarmAwaitingPowersecond)
