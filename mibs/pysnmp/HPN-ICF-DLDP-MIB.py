#
# PySNMP MIB module HPN-ICF-DLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DLDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, ModuleIdentity, ObjectIdentity, Counter64, IpAddress, NotificationType, Gauge32, Unsigned32, iso, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Counter64", "IpAddress", "NotificationType", "Gauge32", "Unsigned32", "iso", "MibIdentifier", "Bits")
MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
hpnicfDldp = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43))
hpnicfDldp.setRevisions(('2004-12-13 00:00',))
if mibBuilder.loadTexts: hpnicfDldp.setLastUpdated('200412130000Z')
if mibBuilder.loadTexts: hpnicfDldp.setOrganization('')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class DLDPStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("initial", 1), ("inactive", 2), ("active", 3), ("advertisement", 4), ("probe", 5), ("disable", 6))

class DLDPNeighborStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unidirection", 1), ("bidirection", 2), ("unknown", 3))

hpnicfDLDPMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1))
hpnicfDLDPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1))
hpnicfDLDPWorkMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("enhance", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPWorkMode.setStatus('current')
hpnicfDLDPSystemEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPSystemEnable.setStatus('current')
hpnicfDLDPSystemReset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPSystemReset.setStatus('current')
hpnicfDLDPInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPInterval.setStatus('current')
hpnicfDLDPAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("md5", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPAuthenticationMode.setStatus('current')
hpnicfDLDPAuthenticationPassword = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPAuthenticationPassword.setStatus('current')
hpnicfDLDPUnidirectionalShutdown = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPUnidirectionalShutdown.setStatus('current')
hpnicfDLDPPortStateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 2), )
if mibBuilder.loadTexts: hpnicfDLDPPortStateTable.setStatus('current')
hpnicfDLDPPortStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDLDPPortStateEntry.setStatus('current')
hpnicfDLDPPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 2, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPPortState.setStatus('current')
hpnicfDLDPPortDLDPTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 3), )
if mibBuilder.loadTexts: hpnicfDLDPPortDLDPTable.setStatus('current')
hpnicfDLDPPortDLDPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDLDPPortDLDPEntry.setStatus('current')
hpnicfDLDPPortDLDPState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 3, 1, 1), DLDPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDLDPPortDLDPState.setStatus('current')
hpnicfDLDPLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDLDPLinkState.setStatus('current')
hpnicfDLDPPortDLDPReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 3, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDLDPPortDLDPReset.setStatus('current')
hpnicfDLDPNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 4), )
if mibBuilder.loadTexts: hpnicfDLDPNeighborTable.setStatus('current')
hpnicfDLDPNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-DLDP-MIB", "hpnicfDLDPNeighborBridgeMac"), (0, "HPN-ICF-DLDP-MIB", "hpnicfDLDPNeighborPortIndex"))
if mibBuilder.loadTexts: hpnicfDLDPNeighborEntry.setStatus('current')
hpnicfDLDPNeighborBridgeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfDLDPNeighborBridgeMac.setStatus('current')
hpnicfDLDPNeighborPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: hpnicfDLDPNeighborPortIndex.setStatus('current')
hpnicfDLDPNeighborState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 4, 1, 3), DLDPNeighborStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDLDPNeighborState.setStatus('current')
hpnicfDLDPNeighborAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDLDPNeighborAgingTime.setStatus('current')
hpnicfDLDPTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 2))
hpnicfDLDPNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 2, 1))
hpnicfDLDPUnidirectionalPort = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 43, 2, 1, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDLDPUnidirectionalPort.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DLDP-MIB", hpnicfDldp=hpnicfDldp, hpnicfDLDPAuthenticationMode=hpnicfDLDPAuthenticationMode, hpnicfDLDPPortDLDPEntry=hpnicfDLDPPortDLDPEntry, hpnicfDLDPPortDLDPState=hpnicfDLDPPortDLDPState, hpnicfDLDPMibObject=hpnicfDLDPMibObject, hpnicfDLDPWorkMode=hpnicfDLDPWorkMode, hpnicfDLDPAuthenticationPassword=hpnicfDLDPAuthenticationPassword, hpnicfDLDPPortStateTable=hpnicfDLDPPortStateTable, hpnicfDLDPNeighborTable=hpnicfDLDPNeighborTable, hpnicfDLDPUnidirectionalPort=hpnicfDLDPUnidirectionalPort, hpnicfDLDPPortDLDPTable=hpnicfDLDPPortDLDPTable, hpnicfDLDPNeighborAgingTime=hpnicfDLDPNeighborAgingTime, hpnicfDLDPConfigGroup=hpnicfDLDPConfigGroup, hpnicfDLDPTrapObject=hpnicfDLDPTrapObject, hpnicfDLDPNeighborBridgeMac=hpnicfDLDPNeighborBridgeMac, hpnicfDLDPNotification=hpnicfDLDPNotification, hpnicfDLDPNeighborState=hpnicfDLDPNeighborState, EnabledStatus=EnabledStatus, DLDPNeighborStatus=DLDPNeighborStatus, hpnicfDLDPNeighborEntry=hpnicfDLDPNeighborEntry, hpnicfDLDPSystemReset=hpnicfDLDPSystemReset, hpnicfDLDPSystemEnable=hpnicfDLDPSystemEnable, hpnicfDLDPPortStateEntry=hpnicfDLDPPortStateEntry, PYSNMP_MODULE_ID=hpnicfDldp, DLDPStatus=DLDPStatus, hpnicfDLDPPortDLDPReset=hpnicfDLDPPortDLDPReset, hpnicfDLDPInterval=hpnicfDLDPInterval, hpnicfDLDPPortState=hpnicfDLDPPortState, hpnicfDLDPNeighborPortIndex=hpnicfDLDPNeighborPortIndex, hpnicfDLDPLinkState=hpnicfDLDPLinkState, hpnicfDLDPUnidirectionalShutdown=hpnicfDLDPUnidirectionalShutdown)
