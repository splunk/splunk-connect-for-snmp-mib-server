#
# PySNMP MIB module H3C-WIPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-WIPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, ModuleIdentity, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, MibIdentifier, iso, Bits, IpAddress, Gauge32, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "MibIdentifier", "iso", "Bits", "IpAddress", "Gauge32", "NotificationType", "Unsigned32")
TextualConvention, MacAddress, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString", "TruthValue", "RowStatus")
h3cWIPS = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118))
h3cWIPS.setRevisions(('2011-12-29 14:50',))
if mibBuilder.loadTexts: h3cWIPS.setLastUpdated('201112291450Z')
if mibBuilder.loadTexts: h3cWIPS.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
class H3cWIPSRadioType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))
    namedValues = NamedValues(("dot11a", 1), ("dot11b", 2), ("dot11g", 4), ("dot11n", 8), ("dot11gn", 16), ("dot11an", 32))

class H3cWIPSDevStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("inactive", 2))

class H3cWIPSDevCategoryWay(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("manual", 1), ("autoByNMS", 2), ("autoByDev", 3))

class H3cWIPSAPCategoryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("adhoc", 1), ("authorized", 2), ("rogue", 3), ("misconfigured", 4), ("external", 5), ("potentialAuthorized", 6), ("potentialRogue", 7), ("potentialExternal", 8), ("uncategorized", 9))

class H3cWIPSClientCategoryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("authorized", 1), ("unauthorized", 2), ("misassociated", 3), ("uncategorized", 4))

class H3cWIPSChannel(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 224)

class H3cWIPSEncryptMethod(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

class H3cWIPSAuthMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("psk", 2), ("dot1x", 3), ("other", 4))

class H3cWIPSAPClassifyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("authorized", 2), ("external", 3), ("misconfigured", 4), ("rogue", 5))

class H3cWIPSAPSecurityType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

h3cWIPSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1))
h3cWIPSGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1))
h3cWIPSEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSEnable.setStatus('current')
h3cWIPSSensorLicenseNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSSensorLicenseNum.setStatus('current')
h3cWIPSBlocklistAction = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("unblock", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSBlocklistAction.setStatus('current')
h3cWIPSAPInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 600)).clone(300)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSAPInactiveTime.setStatus('current')
h3cWIPSSTAInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(120, 1200)).clone(600)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSSTAInactiveTime.setStatus('current')
h3cWIPSDevAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 2592000)).clone(86400)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDevAgingTime.setStatus('current')
h3cWIPSStatisticPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(900)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSStatisticPeriod.setStatus('current')
h3cWIPSReclassificationPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600)).clone(600)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSReclassificationPeriod.setStatus('current')
h3cWIPSResetAllTrustList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSResetAllTrustList.setStatus('current')
h3cWIPSResetAllBlockList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSResetAllBlockList.setStatus('current')
h3cWIPSResetAllIgnoreList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSResetAllIgnoreList.setStatus('current')
h3cWIPSResetAllCtmList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSResetAllCtmList.setStatus('current')
h3cWIPSPermitChlBitMap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSPermitChlBitMap.setStatus('current')
h3cWIPSVsdConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2))
h3cWIPSVsdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 1), )
if mibBuilder.loadTexts: h3cWIPSVsdTable.setStatus('current')
h3cWIPSVsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 1, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSVsdNameCfg"))
if mibBuilder.loadTexts: h3cWIPSVsdEntry.setStatus('current')
h3cWIPSVsdNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSVsdNameCfg.setStatus('current')
h3cWIPSVsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSVsdRowStatus.setStatus('current')
h3cWIPSVsdAtkDctPolicyNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSVsdAtkDctPolicyNameCfg.setStatus('current')
h3cWIPSRule2VsdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 2), )
if mibBuilder.loadTexts: h3cWIPSRule2VsdTable.setStatus('current')
h3cWIPSRule2VsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 2, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSVsdNameCfg"), (0, "H3C-WIPS-MIB", "h3cWIPSRule2VsdAPClaRuleNameCfg"))
if mibBuilder.loadTexts: h3cWIPSRule2VsdEntry.setStatus('current')
h3cWIPSRule2VsdAPClaRuleNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSRule2VsdAPClaRuleNameCfg.setStatus('current')
h3cWIPSRule2VsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSRule2VsdRowStatus.setStatus('current')
h3cWIPSRule2VsdPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSRule2VsdPrecedence.setStatus('current')
h3cWIPSSensor2VsdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 3), )
if mibBuilder.loadTexts: h3cWIPSSensor2VsdTable.setStatus('current')
h3cWIPSSensor2VsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 3, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSVsdNameCfg"), (0, "H3C-WIPS-MIB", "h3cWIPSSensorNameCfg"))
if mibBuilder.loadTexts: h3cWIPSSensor2VsdEntry.setStatus('current')
h3cWIPSSensorNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSSensorNameCfg.setStatus('current')
h3cWIPSSensor2VsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSSensor2VsdRowStatus.setStatus('current')
h3cWIPSSensorState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("idle", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSSensorState.setStatus('current')
h3cWIPSSensorRadioTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 4), )
if mibBuilder.loadTexts: h3cWIPSSensorRadioTable.setStatus('current')
h3cWIPSSensorRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 4, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSVsdNameCfg"), (0, "H3C-WIPS-MIB", "h3cWIPSSensorNameCfg"), (0, "H3C-WIPS-MIB", "h3cWIPSSensorRadioRadioId"))
if mibBuilder.loadTexts: h3cWIPSSensorRadioEntry.setStatus('current')
h3cWIPSSensorRadioRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: h3cWIPSSensorRadioRadioId.setStatus('current')
h3cWIPSSensorRadioScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("accessFirst", 1), ("detectFirst", 2), ("middle", 3), ("detectOnly", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSSensorRadioScanMode.setStatus('current')
h3cWIPSAPClaRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3), )
if mibBuilder.loadTexts: h3cWIPSAPClaRuleTable.setStatus('current')
h3cWIPSAPClaRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSAPClaRuleName"))
if mibBuilder.loadTexts: h3cWIPSAPClaRuleEntry.setStatus('current')
h3cWIPSAPClaRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSAPClaRuleName.setStatus('current')
h3cWIPSAPClaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaRowStatus.setStatus('current')
h3cWIPSAPClaSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 3), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaSeverityLevel.setStatus('current')
h3cWIPSAPClaRuleMatchAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaRuleMatchAll.setStatus('current')
h3cWIPSAPClaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 5), H3cWIPSAPClassifyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaType.setStatus('current')
h3cWIPSAPClaSubRuleSSIDOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("include", 1), ("notinclude", 2), ("equal", 3), ("notequal", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaSubRuleSSIDOperator.setStatus('current')
h3cWIPSAPClaSubRuleSSIDCase = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaSubRuleSSIDCase.setStatus('current')
h3cWIPSAPClaSubRuleSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPClaSubRuleSSID.setStatus('current')
h3cWIPSSecurityType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 9), H3cWIPSAPSecurityType().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSSecurityType.setStatus('current')
h3cWIPSSecurityTypeMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("equal", 1), ("include", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSSecurityTypeMatch.setStatus('current')
h3cWIPSAPAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("psk", 2), ("dot1x", 3), ("other", 4), ("undo", 5))).clone('undo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAPAuthType.setStatus('current')
h3cWIPSMaxRSSIValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 12), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMaxRSSIValue.setStatus('current')
h3cWIPSMinRSSIValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 13), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMinRSSIValue.setStatus('current')
h3cWIPSMaxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 14), Unsigned32().clone(4294967295)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMaxDuration.setStatus('current')
h3cWIPSMinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 15), Unsigned32().clone(4294967295)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMinDuration.setStatus('current')
h3cWIPSMaxAPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 16), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMaxAPNum.setStatus('current')
h3cWIPSMinAPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 17), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMinAPNum.setStatus('current')
h3cWIPSMaxClientNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 18), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMaxClientNum.setStatus('current')
h3cWIPSMinClientNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 3, 1, 19), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSMinClientNum.setStatus('current')
h3cWIPSAtkDctPolicyCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4))
h3cWIPSAtkDctPolicyCfgSupportSet = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSAtkDctPolicyCfgSupportSet.setStatus('current')
h3cWIPSAtkDctPolicyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4, 2), )
if mibBuilder.loadTexts: h3cWIPSAtkDctPolicyCfgTable.setStatus('current')
h3cWIPSAtkDctPolicyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4, 2, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSAtkDctPolicyName"))
if mibBuilder.loadTexts: h3cWIPSAtkDctPolicyCfgEntry.setStatus('current')
h3cWIPSAtkDctPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSAtkDctPolicyName.setStatus('current')
h3cWIPSAtkDctPolicyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAtkDctPolicyCfgRowStatus.setStatus('current')
h3cWIPSAtkDctPolicyBitString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSAtkDctPolicyBitString.setStatus('current')
h3cWIPSStaticCtmListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 5), )
if mibBuilder.loadTexts: h3cWIPSStaticCtmListCfgTable.setStatus('current')
h3cWIPSStaticCtmListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 5, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSStaticCtmListMAC"))
if mibBuilder.loadTexts: h3cWIPSStaticCtmListCfgEntry.setStatus('current')
h3cWIPSStaticCtmListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSStaticCtmListMAC.setStatus('current')
h3cWIPSStaticCtmListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSStaticCtmListRowStatus.setStatus('current')
h3cWIPSStaticBlockListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 6), )
if mibBuilder.loadTexts: h3cWIPSStaticBlockListCfgTable.setStatus('current')
h3cWIPSStaticBlockListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 6, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSStaticBlockListMAC"))
if mibBuilder.loadTexts: h3cWIPSStaticBlockListCfgEntry.setStatus('current')
h3cWIPSStaticBlockListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSStaticBlockListMAC.setStatus('current')
h3cWIPSStaticBlockListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSStaticBlockListRowStatus.setStatus('current')
h3cWIPSStaticTrustListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 7), )
if mibBuilder.loadTexts: h3cWIPSStaticTrustListCfgTable.setStatus('current')
h3cWIPSStaticTrustListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 7, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSStaticTrustListMAC"))
if mibBuilder.loadTexts: h3cWIPSStaticTrustListCfgEntry.setStatus('current')
h3cWIPSStaticTrustListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSStaticTrustListMAC.setStatus('current')
h3cWIPSStaticTrustListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSStaticTrustListRowStatus.setStatus('current')
h3cWIPSIgnoreListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 8), )
if mibBuilder.loadTexts: h3cWIPSIgnoreListCfgTable.setStatus('current')
h3cWIPSIgnoreListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 8, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSIgnoreListMAC"))
if mibBuilder.loadTexts: h3cWIPSIgnoreListCfgEntry.setStatus('current')
h3cWIPSIgnoreListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSIgnoreListMAC.setStatus('current')
h3cWIPSIgnoreListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSIgnoreListRowStatus.setStatus('current')
h3cWIPSDctModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 9), )
if mibBuilder.loadTexts: h3cWIPSDctModeTable.setStatus('current')
h3cWIPSDctModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 9, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctModeAPName"), (0, "H3C-WIPS-MIB", "h3cWIPSDctModeRadio"))
if mibBuilder.loadTexts: h3cWIPSDctModeEntry.setStatus('current')
h3cWIPSDctModeAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctModeAPName.setStatus('current')
h3cWIPSDctModeRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: h3cWIPSDctModeRadio.setStatus('current')
h3cWIPSDctModeScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("accessFirst", 1), ("detectFirst", 2), ("middle", 3), ("detectOnly", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSDctModeScanMode.setStatus('current')
h3cWIPSDctModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cWIPSDctModeRowStatus.setStatus('current')
h3cWIPSDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2))
h3cWIPSDctAPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1), )
if mibBuilder.loadTexts: h3cWIPSDctAPTable.setStatus('current')
h3cWIPSDctAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctAPVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctAPBSSID"))
if mibBuilder.loadTexts: h3cWIPSDctAPEntry.setStatus('current')
h3cWIPSDctAPVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctAPVSD.setStatus('current')
h3cWIPSDctAPBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: h3cWIPSDctAPBSSID.setStatus('current')
h3cWIPSDctAPRunningTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPRunningTime.setStatus('current')
h3cWIPSDctAPRunTmLastUpdateTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPRunTmLastUpdateTm.setStatus('current')
h3cWIPSDctAPIsCountered = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPIsCountered.setStatus('current')
h3cWIPSDctAPWorkChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 6), H3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPWorkChannel.setStatus('current')
h3cWIPSDctAPRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 7), H3cWIPSRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPRadioType.setStatus('current')
h3cWIPSDctAPAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 8), H3cWIPSAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPAuthMethod.setStatus('current')
h3cWIPSDctAPEncryptMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 9), H3cWIPSEncryptMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPEncryptMethod.setStatus('current')
h3cWIPSDctAPSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 10), H3cWIPSAPSecurityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPSecurity.setStatus('current')
h3cWIPSDctAPSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPSeverityLevel.setStatus('current')
h3cWIPSDctAPLastDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPLastDctTm.setStatus('current')
h3cWIPSDctAPFirstDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPFirstDctTm.setStatus('current')
h3cWIPSDctAPAdd2BlackList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctAPAdd2BlackList.setStatus('current')
h3cWIPSDctAPAdd2WhiteList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctAPAdd2WhiteList.setStatus('current')
h3cWIPSDctAPAdd2IgnoreList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctAPAdd2IgnoreList.setStatus('current')
h3cWIPSDctAPAdd2CtmList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctAPAdd2CtmList.setStatus('current')
h3cWIPSDctAPCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 18), H3cWIPSAPCategoryType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctAPCategory.setStatus('current')
h3cWIPSDctAPCategoryWay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 19), H3cWIPSDevCategoryWay().clone('autoByDev')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctAPCategoryWay.setStatus('current')
h3cWIPSDctAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 20), H3cWIPSDevStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPStatus.setStatus('current')
h3cWIPSDctAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPSSID.setStatus('current')
h3cWIPSDctAPAttachStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPAttachStaNum.setStatus('current')
h3cWIPSDctAPRptSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPRptSensorNum.setStatus('current')
h3cWIPSDctAPAttachStaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 2), )
if mibBuilder.loadTexts: h3cWIPSDctAPAttachStaTable.setStatus('current')
h3cWIPSDctAPAttachStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 2, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctAPVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctAPBSSID"), (0, "H3C-WIPS-MIB", "h3cWIPSDctAPAttachStaMac"))
if mibBuilder.loadTexts: h3cWIPSDctAPAttachStaEntry.setStatus('current')
h3cWIPSDctAPAttachStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSDctAPAttachStaMac.setStatus('current')
h3cWIPSDctAPAttachStaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPAttachStaRowStatus.setStatus('current')
h3cWIPSDctAPRptSensorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 3), )
if mibBuilder.loadTexts: h3cWIPSDctAPRptSensorTable.setStatus('current')
h3cWIPSDctAPRptSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 3, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctAPVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctAPBSSID"), (0, "H3C-WIPS-MIB", "h3cWIPSDctAPRptSensorName"))
if mibBuilder.loadTexts: h3cWIPSDctAPRptSensorEntry.setStatus('current')
h3cWIPSDctAPRptSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctAPRptSensorName.setStatus('current')
h3cWIPSDctAPRptSensorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPRptSensorRadioId.setStatus('current')
h3cWIPSDctAPRptRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPRptRSSI.setStatus('current')
h3cWIPSDctAPLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctAPLastRptTm.setStatus('current')
h3cWIPSDctStaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4), )
if mibBuilder.loadTexts: h3cWIPSDctStaTable.setStatus('current')
h3cWIPSDctStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctStaVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctStaMac"))
if mibBuilder.loadTexts: h3cWIPSDctStaEntry.setStatus('current')
h3cWIPSDctStaVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctStaVSD.setStatus('current')
h3cWIPSDctStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 2), MacAddress())
if mibBuilder.loadTexts: h3cWIPSDctStaMac.setStatus('current')
h3cWIPSDctStaAssocBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaAssocBSSID.setStatus('current')
h3cWIPSDctStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 4), H3cWIPSDevStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaStatus.setStatus('current')
h3cWIPSDctStaCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 5), H3cWIPSClientCategoryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaCategory.setStatus('current')
h3cWIPSDctStaRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 6), H3cWIPSRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaRadioType.setStatus('current')
h3cWIPSDctStaWorkChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 7), H3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaWorkChannel.setStatus('current')
h3cWIPSDctStaIsCountered = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaIsCountered.setStatus('current')
h3cWIPSDctStaAdd2BlackList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctStaAdd2BlackList.setStatus('current')
h3cWIPSDctStaAdd2WhiteList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctStaAdd2WhiteList.setStatus('current')
h3cWIPSDctStaAdd2IgnoreList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctStaAdd2IgnoreList.setStatus('current')
h3cWIPSDctStaAdd2CtmList = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cWIPSDctStaAdd2CtmList.setStatus('current')
h3cWIPSDctStaFirstDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaFirstDctTm.setStatus('current')
h3cWIPSDctStaLastDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaLastDctTm.setStatus('current')
h3cWIPSDctStaRptSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaRptSensorNum.setStatus('current')
h3cWIPSDctStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("authentication", 1), ("association", 2), ("eapSuccess", 3), ("eapLogoff", 4), ("disassociation", 5), ("deauthentication", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaState.setStatus('current')
h3cWIPSDctStaRptSensorTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 5), )
if mibBuilder.loadTexts: h3cWIPSDctStaRptSensorTable.setStatus('current')
h3cWIPSDctStaRptSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 5, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctStaVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctStaMac"), (0, "H3C-WIPS-MIB", "h3cWIPSDctStaRtpSensorName"))
if mibBuilder.loadTexts: h3cWIPSDctStaRptSensorEntry.setStatus('current')
h3cWIPSDctStaRtpSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctStaRtpSensorName.setStatus('current')
h3cWIPSDctStaRptSensorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaRptSensorRadioId.setStatus('current')
h3cWIPSDctStaRptRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaRptRSSI.setStatus('current')
h3cWIPSDctStaLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctStaLastRptTm.setStatus('current')
h3cWIPSDctSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6), )
if mibBuilder.loadTexts: h3cWIPSDctSSIDTable.setStatus('current')
h3cWIPSDctSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkSSID"), (0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkCfg"))
if mibBuilder.loadTexts: h3cWIPSDctSSIDEntry.setStatus('current')
h3cWIPSDctNetworkVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctNetworkVSD.setStatus('current')
h3cWIPSDctNetworkSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: h3cWIPSDctNetworkSSID.setStatus('current')
h3cWIPSDctNetworkCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 3), Unsigned32())
if mibBuilder.loadTexts: h3cWIPSDctNetworkCfg.setStatus('current')
h3cWIPSDctNetworkFirstRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkFirstRptTm.setStatus('current')
h3cWIPSDctNetworkLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkLastRptTm.setStatus('current')
h3cWIPSDctNetworkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 6), H3cWIPSDevStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkStatus.setStatus('current')
h3cWIPSDctNetworkSSIDHide = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 7), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkSSIDHide.setStatus('current')
h3cWIPSDctNetworkBSSNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkBSSNum.setStatus('current')
h3cWIPSDctSSIDBSSTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 7), )
if mibBuilder.loadTexts: h3cWIPSDctSSIDBSSTable.setStatus('current')
h3cWIPSDctSSIDBSSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 7, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkVSD"), (0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkSSID"), (0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkCfg"), (0, "H3C-WIPS-MIB", "h3cWIPSDctNetworkBSSID"))
if mibBuilder.loadTexts: h3cWIPSDctSSIDBSSEntry.setStatus('current')
h3cWIPSDctNetworkBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSDctNetworkBSSID.setStatus('current')
h3cWIPSDctNetworkBSSWorkChl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 7, 1, 2), H3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkBSSWorkChl.setStatus('current')
h3cWIPSDctNetworkBSSStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDctNetworkBSSStaNum.setStatus('current')
h3cWIPSBlockListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 8), )
if mibBuilder.loadTexts: h3cWIPSBlockListTable.setStatus('current')
h3cWIPSBlockListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 8, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSBlockListMacAddress"))
if mibBuilder.loadTexts: h3cWIPSBlockListEntry.setStatus('current')
h3cWIPSBlockListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSBlockListMacAddress.setStatus('current')
h3cWIPSBlockListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticAndDynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSBlockListStatus.setStatus('current')
h3cWIPSChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 9), )
if mibBuilder.loadTexts: h3cWIPSChannelTable.setStatus('current')
h3cWIPSChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 9, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSChannelNum"))
if mibBuilder.loadTexts: h3cWIPSChannelEntry.setStatus('current')
h3cWIPSChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 9, 1, 1), H3cWIPSChannel())
if mibBuilder.loadTexts: h3cWIPSChannelNum.setStatus('current')
h3cWIPSChannelRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 9, 1, 2), H3cWIPSRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChannelRadioType.setStatus('current')
h3cWIPSChannelIsPermitted = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 9, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChannelIsPermitted.setStatus('current')
h3cWIPSChannelLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 9, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChannelLastRptTm.setStatus('current')
h3cWIPSCountermeasureListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10), )
if mibBuilder.loadTexts: h3cWIPSCountermeasureListTable.setStatus('current')
h3cWIPSCountermeasureListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSCtmListMacAddress"))
if mibBuilder.loadTexts: h3cWIPSCountermeasureListEntry.setStatus('current')
h3cWIPSCtmListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSCtmListMacAddress.setStatus('current')
h3cWIPSCtmListLastestWorkChl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1, 2), H3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSCtmListLastestWorkChl.setStatus('current')
h3cWIPSCtmListFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSCtmListFirstTm.setStatus('current')
h3cWIPSCtmListLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSCtmListLastTm.setStatus('current')
h3cWIPSCtmListQurCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSCtmListQurCnt.setStatus('current')
h3cWIPSCtmListSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSCtmListSensorNum.setStatus('current')
h3cWIPSIgnoreListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 11), )
if mibBuilder.loadTexts: h3cWIPSIgnoreListTable.setStatus('current')
h3cWIPSIgnoreListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 11, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSIgnoreListMacAddress"))
if mibBuilder.loadTexts: h3cWIPSIgnoreListEntry.setStatus('current')
h3cWIPSIgnoreListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 11, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSIgnoreListMacAddress.setStatus('current')
h3cWIPSIgnoreListFirstIgnoreTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 11, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSIgnoreListFirstIgnoreTm.setStatus('current')
h3cWIPSIgnoreListLastIgnoreTm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 11, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSIgnoreListLastIgnoreTm.setStatus('current')
h3cWIPSIgnoreListIgnoreCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSIgnoreListIgnoreCnt.setStatus('current')
h3cWIPSTrustListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 12), )
if mibBuilder.loadTexts: h3cWIPSTrustListTable.setStatus('current')
h3cWIPSTrustListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 12, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSTrustListMacAddress"))
if mibBuilder.loadTexts: h3cWIPSTrustListEntry.setStatus('current')
h3cWIPSTrustListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 12, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSTrustListMacAddress.setStatus('current')
h3cWIPSTrustListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticAndDynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSTrustListStatus.setStatus('current')
h3cWIPSChlStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13), )
if mibBuilder.loadTexts: h3cWIPSChlStatTable.setStatus('current')
h3cWIPSChlStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSChlStatSensorMacAddr"), (0, "H3C-WIPS-MIB", "h3cWIPSChlStatChannel"))
if mibBuilder.loadTexts: h3cWIPSChlStatEntry.setStatus('current')
h3cWIPSChlStatSensorMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSChlStatSensorMacAddr.setStatus('current')
h3cWIPSChlStatChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 2), H3cWIPSChannel())
if mibBuilder.loadTexts: h3cWIPSChlStatChannel.setStatus('current')
h3cWIPSChlStatTotalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatTotalPkt.setStatus('current')
h3cWIPSChlStatTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatTotalByte.setStatus('current')
h3cWIPSChlStatBmcastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatBmcastPkt.setStatus('current')
h3cWIPSChlStatBmcastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatBmcastByte.setStatus('current')
h3cWIPSChlStatUnicastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatUnicastPkt.setStatus('current')
h3cWIPSChlStatUnicastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatUnicastByte.setStatus('current')
h3cWIPSChlStatManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatManagement.setStatus('current')
h3cWIPSChlStatControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatControl.setStatus('current')
h3cWIPSChlStatData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatData.setStatus('current')
h3cWIPSChlStatBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatBeacon.setStatus('current')
h3cWIPSChlStatRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatRTS.setStatus('current')
h3cWIPSChlStatCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatCTS.setStatus('current')
h3cWIPSChlStatProbeRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatProbeRequest.setStatus('current')
h3cWIPSChlStatProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatProbeResponse.setStatus('current')
h3cWIPSChlStatFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatFragment.setStatus('current')
h3cWIPSChlStatRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatRetry.setStatus('current')
h3cWIPSChlStatEapSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatEapSuccess.setStatus('current')
h3cWIPSChlStatEapFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatEapFailure.setStatus('current')
h3cWIPSChlStatEapolStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatEapolStart.setStatus('current')
h3cWIPSChlStatEapolLogoff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatEapolLogoff.setStatus('current')
h3cWIPSChlStatAssocRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatAssocRequest.setStatus('current')
h3cWIPSChlStatAssocResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatAssocResponse.setStatus('current')
h3cWIPSChlStatUnicastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatUnicastDisassoc.setStatus('current')
h3cWIPSChlStatBroadcastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatBroadcastDisassoc.setStatus('current')
h3cWIPSChlStatAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatAuthentication.setStatus('current')
h3cWIPSChlStatUnicastDeauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatUnicastDeauthen.setStatus('current')
h3cWIPSChlStatBroadcastDeauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatBroadcastDeauthen.setStatus('current')
h3cWIPSChlStatMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 13, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSChlStatMalformed.setStatus('current')
h3cWIPSDevStatTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14), )
if mibBuilder.loadTexts: h3cWIPSDevStatTable.setStatus('current')
h3cWIPSDevStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1), ).setIndexNames((0, "H3C-WIPS-MIB", "h3cWIPSDevStatSensorMacAddr"), (0, "H3C-WIPS-MIB", "h3cWIPSDevStatDevMacAddress"), (0, "H3C-WIPS-MIB", "h3cWIPSDevStatChannel"))
if mibBuilder.loadTexts: h3cWIPSDevStatEntry.setStatus('current')
h3cWIPSDevStatSensorMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 1), MacAddress())
if mibBuilder.loadTexts: h3cWIPSDevStatSensorMacAddr.setStatus('current')
h3cWIPSDevStatDevMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 2), MacAddress())
if mibBuilder.loadTexts: h3cWIPSDevStatDevMacAddress.setStatus('current')
h3cWIPSDevStatChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 3), H3cWIPSChannel())
if mibBuilder.loadTexts: h3cWIPSDevStatChannel.setStatus('current')
h3cWIPSDevStatTxTotalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxTotalPkt.setStatus('current')
h3cWIPSDevStatTxTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxTotalByte.setStatus('current')
h3cWIPSDevStatTxBMcastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxBMcastPkt.setStatus('current')
h3cWIPSDevStatTxBMcastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxBMcastByte.setStatus('current')
h3cWIPSDevStatTxUnicastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxUnicastPkt.setStatus('current')
h3cWIPSDevStatTxUnicastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxUnicastByte.setStatus('current')
h3cWIPSDevStatTxMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxMgmt.setStatus('current')
h3cWIPSDevStatTxCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxCtrl.setStatus('current')
h3cWIPSDevStatTxData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxData.setStatus('current')
h3cWIPSDevStatTxBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxBeacon.setStatus('current')
h3cWIPSDevStatTxRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxRTS.setStatus('current')
h3cWIPSDevStatTxProbeRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxProbeRequest.setStatus('current')
h3cWIPSDevStatTxProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxProbeResponse.setStatus('current')
h3cWIPSDevStatTxFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxFragment.setStatus('current')
h3cWIPSDevStatTxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxRetry.setStatus('current')
h3cWIPSDevStatTxAssocRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxAssocRequest.setStatus('current')
h3cWIPSDevStatTxAssocResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxAssocResponse.setStatus('current')
h3cWIPSDevStatTxUnicastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxUnicastDisassoc.setStatus('current')
h3cWIPSDevStatTxBcastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxBcastDisassoc.setStatus('current')
h3cWIPSDevStatTxAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxAuth.setStatus('current')
h3cWIPSDevStatTxUnicastDeauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxUnicastDeauth.setStatus('current')
h3cWIPSDevStatTxBcastDeauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxBcastDeauth.setStatus('current')
h3cWIPSDevStatTxEAPSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxEAPSuccess.setStatus('current')
h3cWIPSDevStatTxEAPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxEAPFailure.setStatus('current')
h3cWIPSDevStatTxEAPOLStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxEAPOLStart.setStatus('current')
h3cWIPSDevStatTxEAPOLLogOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxEAPOLLogOff.setStatus('current')
h3cWIPSDevStatTxMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatTxMalformed.setStatus('current')
h3cWIPSDevStatRxTotalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxTotalPkt.setStatus('current')
h3cWIPSDevStatRxTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxTotalByte.setStatus('current')
h3cWIPSDevStatRxUnicastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxUnicastPkt.setStatus('current')
h3cWIPSDevStatRxUnicastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxUnicastByte.setStatus('current')
h3cWIPSDevStatRxMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxMgmt.setStatus('current')
h3cWIPSDevStatRxCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxCtrl.setStatus('current')
h3cWIPSDevStatRxData = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxData.setStatus('current')
h3cWIPSDevStatRxRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxRTS.setStatus('current')
h3cWIPSDevStatRxCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxCTS.setStatus('current')
h3cWIPSDevStatRxProbeRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxProbeRequest.setStatus('current')
h3cWIPSDevStatRxProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxProbeResponse.setStatus('current')
h3cWIPSDevStatRxFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxFragment.setStatus('current')
h3cWIPSDevStatRxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxRetry.setStatus('current')
h3cWIPSDevStatRxAssoRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxAssoRequest.setStatus('current')
h3cWIPSDevStatRxAssoResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxAssoResponse.setStatus('current')
h3cWIPSDevStatRxDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxDisassoc.setStatus('current')
h3cWIPSDevStatRxAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxAuth.setStatus('current')
h3cWIPSDevStatRxDeauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxDeauth.setStatus('current')
h3cWIPSDevStatRxEAPSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxEAPSuccess.setStatus('current')
h3cWIPSDevStatRxEAPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxEAPFailure.setStatus('current')
h3cWIPSDevStatRxEAPOLStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxEAPOLStart.setStatus('current')
h3cWIPSDevStatRxEAPOLLogoff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxEAPOLLogoff.setStatus('current')
h3cWIPSDevStatRxMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 2, 14, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWIPSDevStatRxMalformed.setStatus('current')
h3cWIPSNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 118, 3))
mibBuilder.exportSymbols("H3C-WIPS-MIB", h3cWIPSIgnoreListCfgTable=h3cWIPSIgnoreListCfgTable, h3cWIPSDctAPRptSensorRadioId=h3cWIPSDctAPRptSensorRadioId, h3cWIPSRule2VsdRowStatus=h3cWIPSRule2VsdRowStatus, h3cWIPSDetectGroup=h3cWIPSDetectGroup, h3cWIPSDctAPCategoryWay=h3cWIPSDctAPCategoryWay, h3cWIPSChlStatRetry=h3cWIPSChlStatRetry, h3cWIPSChlStatEapFailure=h3cWIPSChlStatEapFailure, h3cWIPSDctStaStatus=h3cWIPSDctStaStatus, h3cWIPSIgnoreListMacAddress=h3cWIPSIgnoreListMacAddress, h3cWIPSDctAPRptSensorName=h3cWIPSDctAPRptSensorName, h3cWIPSDevStatTxTotalByte=h3cWIPSDevStatTxTotalByte, h3cWIPSEnable=h3cWIPSEnable, h3cWIPSRule2VsdTable=h3cWIPSRule2VsdTable, h3cWIPSStaticCtmListCfgTable=h3cWIPSStaticCtmListCfgTable, h3cWIPSVsdEntry=h3cWIPSVsdEntry, h3cWIPSAPClaSubRuleSSIDOperator=h3cWIPSAPClaSubRuleSSIDOperator, h3cWIPSMinClientNum=h3cWIPSMinClientNum, h3cWIPSDctModeTable=h3cWIPSDctModeTable, h3cWIPSDevStatTable=h3cWIPSDevStatTable, h3cWIPSDctAPStatus=h3cWIPSDctAPStatus, h3cWIPSChlStatUnicastPkt=h3cWIPSChlStatUnicastPkt, h3cWIPSDevStatTxEAPSuccess=h3cWIPSDevStatTxEAPSuccess, h3cWIPSDctAPEncryptMethod=h3cWIPSDctAPEncryptMethod, h3cWIPSDctStaLastDctTm=h3cWIPSDctStaLastDctTm, h3cWIPSChlStatBroadcastDisassoc=h3cWIPSChlStatBroadcastDisassoc, h3cWIPSDctSSIDTable=h3cWIPSDctSSIDTable, h3cWIPSDevStatTxCtrl=h3cWIPSDevStatTxCtrl, h3cWIPSDctAPAdd2BlackList=h3cWIPSDctAPAdd2BlackList, h3cWIPSDctStaAdd2IgnoreList=h3cWIPSDctStaAdd2IgnoreList, h3cWIPSDctStaEntry=h3cWIPSDctStaEntry, h3cWIPSChlStatControl=h3cWIPSChlStatControl, h3cWIPSDevStatRxProbeRequest=h3cWIPSDevStatRxProbeRequest, h3cWIPSChlStatUnicastDeauthen=h3cWIPSChlStatUnicastDeauthen, h3cWIPSDevStatRxFragment=h3cWIPSDevStatRxFragment, h3cWIPSAPInactiveTime=h3cWIPSAPInactiveTime, h3cWIPSStaticTrustListRowStatus=h3cWIPSStaticTrustListRowStatus, h3cWIPSChlStatProbeResponse=h3cWIPSChlStatProbeResponse, h3cWIPSAPClaSubRuleSSID=h3cWIPSAPClaSubRuleSSID, h3cWIPSCountermeasureListEntry=h3cWIPSCountermeasureListEntry, H3cWIPSClientCategoryType=H3cWIPSClientCategoryType, h3cWIPSDctAPAttachStaEntry=h3cWIPSDctAPAttachStaEntry, h3cWIPSMinAPNum=h3cWIPSMinAPNum, h3cWIPSAtkDctPolicyCfgSupportSet=h3cWIPSAtkDctPolicyCfgSupportSet, h3cWIPSAtkDctPolicyCfgRowStatus=h3cWIPSAtkDctPolicyCfgRowStatus, h3cWIPSDctAPRptRSSI=h3cWIPSDctAPRptRSSI, H3cWIPSAPCategoryType=H3cWIPSAPCategoryType, h3cWIPSChlStatEapolStart=h3cWIPSChlStatEapolStart, h3cWIPSAPClaRuleEntry=h3cWIPSAPClaRuleEntry, h3cWIPSSensor2VsdEntry=h3cWIPSSensor2VsdEntry, h3cWIPSMinDuration=h3cWIPSMinDuration, h3cWIPSDevStatRxRetry=h3cWIPSDevStatRxRetry, h3cWIPSDctSSIDBSSEntry=h3cWIPSDctSSIDBSSEntry, H3cWIPSAuthMethod=H3cWIPSAuthMethod, h3cWIPSDctNetworkFirstRptTm=h3cWIPSDctNetworkFirstRptTm, h3cWIPSDevStatRxAssoResponse=h3cWIPSDevStatRxAssoResponse, h3cWIPSStaticCtmListMAC=h3cWIPSStaticCtmListMAC, h3cWIPSStatisticPeriod=h3cWIPSStatisticPeriod, h3cWIPSCtmListLastestWorkChl=h3cWIPSCtmListLastestWorkChl, H3cWIPSDevStatus=H3cWIPSDevStatus, h3cWIPSDevStatRxEAPSuccess=h3cWIPSDevStatRxEAPSuccess, h3cWIPSDctAPRunTmLastUpdateTm=h3cWIPSDctAPRunTmLastUpdateTm, h3cWIPSCtmListSensorNum=h3cWIPSCtmListSensorNum, h3cWIPSDctNetworkBSSStaNum=h3cWIPSDctNetworkBSSStaNum, h3cWIPSAtkDctPolicyCfgGroup=h3cWIPSAtkDctPolicyCfgGroup, h3cWIPSTrustListStatus=h3cWIPSTrustListStatus, h3cWIPSChlStatSensorMacAddr=h3cWIPSChlStatSensorMacAddr, h3cWIPSRule2VsdEntry=h3cWIPSRule2VsdEntry, h3cWIPSSensorRadioTable=h3cWIPSSensorRadioTable, h3cWIPSSecurityTypeMatch=h3cWIPSSecurityTypeMatch, h3cWIPSAPClaSubRuleSSIDCase=h3cWIPSAPClaSubRuleSSIDCase, h3cWIPSDevStatTxBcastDeauth=h3cWIPSDevStatTxBcastDeauth, h3cWIPSDctAPVSD=h3cWIPSDctAPVSD, h3cWIPSDevStatTxMgmt=h3cWIPSDevStatTxMgmt, h3cWIPSDctStaAssocBSSID=h3cWIPSDctStaAssocBSSID, h3cWIPSChlStatManagement=h3cWIPSChlStatManagement, h3cWIPSAtkDctPolicyCfgEntry=h3cWIPSAtkDctPolicyCfgEntry, h3cWIPSDctNetworkVSD=h3cWIPSDctNetworkVSD, h3cWIPSChlStatBroadcastDeauthen=h3cWIPSChlStatBroadcastDeauthen, h3cWIPSSTAInactiveTime=h3cWIPSSTAInactiveTime, h3cWIPSDevStatTxAssocResponse=h3cWIPSDevStatTxAssocResponse, h3cWIPSDctAPSecurity=h3cWIPSDctAPSecurity, h3cWIPSChlStatChannel=h3cWIPSChlStatChannel, h3cWIPSAPClaSeverityLevel=h3cWIPSAPClaSeverityLevel, h3cWIPSStaticBlockListCfgEntry=h3cWIPSStaticBlockListCfgEntry, h3cWIPSDevStatTxBMcastByte=h3cWIPSDevStatTxBMcastByte, h3cWIPSResetAllBlockList=h3cWIPSResetAllBlockList, h3cWIPSDctModeEntry=h3cWIPSDctModeEntry, h3cWIPSDevStatTxBcastDisassoc=h3cWIPSDevStatTxBcastDisassoc, h3cWIPSDctNetworkBSSNum=h3cWIPSDctNetworkBSSNum, h3cWIPSDctAPAttachStaMac=h3cWIPSDctAPAttachStaMac, h3cWIPSDevStatEntry=h3cWIPSDevStatEntry, h3cWIPSDctAPRptSensorTable=h3cWIPSDctAPRptSensorTable, h3cWIPSDctStaWorkChannel=h3cWIPSDctStaWorkChannel, H3cWIPSRadioType=H3cWIPSRadioType, h3cWIPSCtmListQurCnt=h3cWIPSCtmListQurCnt, h3cWIPSBlockListEntry=h3cWIPSBlockListEntry, h3cWIPSSensorLicenseNum=h3cWIPSSensorLicenseNum, h3cWIPSVsdTable=h3cWIPSVsdTable, h3cWIPSAtkDctPolicyCfgTable=h3cWIPSAtkDctPolicyCfgTable, h3cWIPSMaxAPNum=h3cWIPSMaxAPNum, h3cWIPSChlStatData=h3cWIPSChlStatData, h3cWIPSChannelRadioType=h3cWIPSChannelRadioType, h3cWIPSConfigGroup=h3cWIPSConfigGroup, h3cWIPSIgnoreListMAC=h3cWIPSIgnoreListMAC, h3cWIPSIgnoreListLastIgnoreTm=h3cWIPSIgnoreListLastIgnoreTm, h3cWIPSChlStatAssocRequest=h3cWIPSChlStatAssocRequest, h3cWIPSReclassificationPeriod=h3cWIPSReclassificationPeriod, PYSNMP_MODULE_ID=h3cWIPS, h3cWIPSAPClaRuleName=h3cWIPSAPClaRuleName, h3cWIPSChlStatRTS=h3cWIPSChlStatRTS, h3cWIPSDevStatRxEAPOLLogoff=h3cWIPSDevStatRxEAPOLLogoff, h3cWIPSDctStaRptSensorRadioId=h3cWIPSDctStaRptSensorRadioId, h3cWIPSDevStatTxEAPOLLogOff=h3cWIPSDevStatTxEAPOLLogOff, h3cWIPSDctStaRadioType=h3cWIPSDctStaRadioType, h3cWIPSDevStatRxUnicastPkt=h3cWIPSDevStatRxUnicastPkt, h3cWIPSMaxClientNum=h3cWIPSMaxClientNum, h3cWIPSDevStatTxProbeResponse=h3cWIPSDevStatTxProbeResponse, h3cWIPSSensorRadioEntry=h3cWIPSSensorRadioEntry, h3cWIPSVsdAtkDctPolicyNameCfg=h3cWIPSVsdAtkDctPolicyNameCfg, h3cWIPSDevStatRxTotalPkt=h3cWIPSDevStatRxTotalPkt, H3cWIPSDevCategoryWay=H3cWIPSDevCategoryWay, h3cWIPSDctModeRowStatus=h3cWIPSDctModeRowStatus, h3cWIPSDctStaAdd2WhiteList=h3cWIPSDctStaAdd2WhiteList, h3cWIPSAtkDctPolicyName=h3cWIPSAtkDctPolicyName, h3cWIPSDctNetworkCfg=h3cWIPSDctNetworkCfg, h3cWIPSVsdNameCfg=h3cWIPSVsdNameCfg, h3cWIPSDctAPLastDctTm=h3cWIPSDctAPLastDctTm, h3cWIPSDctStaRptSensorNum=h3cWIPSDctStaRptSensorNum, h3cWIPSDctAPFirstDctTm=h3cWIPSDctAPFirstDctTm, h3cWIPSRule2VsdAPClaRuleNameCfg=h3cWIPSRule2VsdAPClaRuleNameCfg, h3cWIPSStaticBlockListCfgTable=h3cWIPSStaticBlockListCfgTable, h3cWIPSChlStatFragment=h3cWIPSChlStatFragment, h3cWIPSDctAPAttachStaTable=h3cWIPSDctAPAttachStaTable, h3cWIPSDctNetworkBSSID=h3cWIPSDctNetworkBSSID, h3cWIPSDctAPRadioType=h3cWIPSDctAPRadioType, h3cWIPSStaticTrustListCfgEntry=h3cWIPSStaticTrustListCfgEntry, h3cWIPSDctStaRptRSSI=h3cWIPSDctStaRptRSSI, h3cWIPSDctAPCategory=h3cWIPSDctAPCategory, h3cWIPSIgnoreListTable=h3cWIPSIgnoreListTable, h3cWIPSBlockListMacAddress=h3cWIPSBlockListMacAddress, h3cWIPSBlockListTable=h3cWIPSBlockListTable, h3cWIPSDctAPRptSensorEntry=h3cWIPSDctAPRptSensorEntry, h3cWIPSDctAPAuthMethod=h3cWIPSDctAPAuthMethod, h3cWIPSChannelNum=h3cWIPSChannelNum, h3cWIPSIgnoreListEntry=h3cWIPSIgnoreListEntry, h3cWIPS=h3cWIPS, h3cWIPSAPClaRuleMatchAll=h3cWIPSAPClaRuleMatchAll, h3cWIPSDctStaFirstDctTm=h3cWIPSDctStaFirstDctTm, h3cWIPSStaticBlockListMAC=h3cWIPSStaticBlockListMAC, h3cWIPSDctAPEntry=h3cWIPSDctAPEntry, h3cWIPSAPClaType=h3cWIPSAPClaType, h3cWIPSChlStatMalformed=h3cWIPSChlStatMalformed, h3cWIPSDctStaRtpSensorName=h3cWIPSDctStaRtpSensorName, h3cWIPSGlobalConfigGroup=h3cWIPSGlobalConfigGroup, h3cWIPSResetAllIgnoreList=h3cWIPSResetAllIgnoreList, h3cWIPSChannelIsPermitted=h3cWIPSChannelIsPermitted, h3cWIPSDevStatRxCTS=h3cWIPSDevStatRxCTS, h3cWIPSDevStatRxEAPOLStart=h3cWIPSDevStatRxEAPOLStart, h3cWIPSDevStatRxMgmt=h3cWIPSDevStatRxMgmt, h3cWIPSDevStatRxEAPFailure=h3cWIPSDevStatRxEAPFailure, h3cWIPSSensorRadioRadioId=h3cWIPSSensorRadioRadioId, h3cWIPSDevStatTxProbeRequest=h3cWIPSDevStatTxProbeRequest, h3cWIPSSensorNameCfg=h3cWIPSSensorNameCfg, h3cWIPSDctAPTable=h3cWIPSDctAPTable, h3cWIPSChannelLastRptTm=h3cWIPSChannelLastRptTm, h3cWIPSStaticCtmListRowStatus=h3cWIPSStaticCtmListRowStatus, h3cWIPSChlStatCTS=h3cWIPSChlStatCTS, h3cWIPSMinRSSIValue=h3cWIPSMinRSSIValue, h3cWIPSDevStatTxAuth=h3cWIPSDevStatTxAuth, h3cWIPSStaticTrustListMAC=h3cWIPSStaticTrustListMAC, h3cWIPSCtmListMacAddress=h3cWIPSCtmListMacAddress, h3cWIPSDctModeScanMode=h3cWIPSDctModeScanMode, h3cWIPSDctAPAttachStaRowStatus=h3cWIPSDctAPAttachStaRowStatus, h3cWIPSIgnoreListFirstIgnoreTm=h3cWIPSIgnoreListFirstIgnoreTm, h3cWIPSAtkDctPolicyBitString=h3cWIPSAtkDctPolicyBitString, h3cWIPSDctAPWorkChannel=h3cWIPSDctAPWorkChannel, h3cWIPSSensor2VsdRowStatus=h3cWIPSSensor2VsdRowStatus, h3cWIPSAPAuthType=h3cWIPSAPAuthType, h3cWIPSDctStaRptSensorEntry=h3cWIPSDctStaRptSensorEntry, h3cWIPSDctNetworkSSID=h3cWIPSDctNetworkSSID, h3cWIPSDevStatTxRetry=h3cWIPSDevStatTxRetry, h3cWIPSDevStatRxAssoRequest=h3cWIPSDevStatRxAssoRequest, h3cWIPSDctNetworkBSSWorkChl=h3cWIPSDctNetworkBSSWorkChl, h3cWIPSDevStatRxDisassoc=h3cWIPSDevStatRxDisassoc, h3cWIPSDevStatTxData=h3cWIPSDevStatTxData, h3cWIPSChlStatBeacon=h3cWIPSChlStatBeacon, h3cWIPSDevStatRxProbeResponse=h3cWIPSDevStatRxProbeResponse, h3cWIPSCtmListFirstTm=h3cWIPSCtmListFirstTm, h3cWIPSDctStaRptSensorTable=h3cWIPSDctStaRptSensorTable, h3cWIPSSensorRadioScanMode=h3cWIPSSensorRadioScanMode, h3cWIPSStaticBlockListRowStatus=h3cWIPSStaticBlockListRowStatus, h3cWIPSDevStatTxFragment=h3cWIPSDevStatTxFragment, h3cWIPSDevStatTxBeacon=h3cWIPSDevStatTxBeacon, H3cWIPSChannel=H3cWIPSChannel, h3cWIPSDevStatTxAssocRequest=h3cWIPSDevStatTxAssocRequest, h3cWIPSChlStatTotalByte=h3cWIPSChlStatTotalByte, h3cWIPSDctNetworkLastRptTm=h3cWIPSDctNetworkLastRptTm, h3cWIPSChlStatUnicastDisassoc=h3cWIPSChlStatUnicastDisassoc, h3cWIPSDctAPLastRptTm=h3cWIPSDctAPLastRptTm, h3cWIPSDevAgingTime=h3cWIPSDevAgingTime, h3cWIPSChlStatTable=h3cWIPSChlStatTable, h3cWIPSChlStatBmcastPkt=h3cWIPSChlStatBmcastPkt, h3cWIPSDevStatSensorMacAddr=h3cWIPSDevStatSensorMacAddr, h3cWIPSDevStatRxMalformed=h3cWIPSDevStatRxMalformed, h3cWIPSChlStatEntry=h3cWIPSChlStatEntry, h3cWIPSIgnoreListIgnoreCnt=h3cWIPSIgnoreListIgnoreCnt, h3cWIPSChannelEntry=h3cWIPSChannelEntry, h3cWIPSChlStatAuthentication=h3cWIPSChlStatAuthentication, h3cWIPSRule2VsdPrecedence=h3cWIPSRule2VsdPrecedence, h3cWIPSChlStatAssocResponse=h3cWIPSChlStatAssocResponse, h3cWIPSDctAPBSSID=h3cWIPSDctAPBSSID, h3cWIPSDevStatTxEAPOLStart=h3cWIPSDevStatTxEAPOLStart, h3cWIPSDevStatRxRTS=h3cWIPSDevStatRxRTS, h3cWIPSCtmListLastTm=h3cWIPSCtmListLastTm, h3cWIPSDctModeAPName=h3cWIPSDctModeAPName, h3cWIPSResetAllTrustList=h3cWIPSResetAllTrustList, h3cWIPSAPClaRuleTable=h3cWIPSAPClaRuleTable, h3cWIPSResetAllCtmList=h3cWIPSResetAllCtmList, h3cWIPSDctSSIDBSSTable=h3cWIPSDctSSIDBSSTable, h3cWIPSDevStatDevMacAddress=h3cWIPSDevStatDevMacAddress, h3cWIPSDevStatTxUnicastPkt=h3cWIPSDevStatTxUnicastPkt, H3cWIPSEncryptMethod=H3cWIPSEncryptMethod, h3cWIPSIgnoreListRowStatus=h3cWIPSIgnoreListRowStatus, h3cWIPSDctStaState=h3cWIPSDctStaState, h3cWIPSTrustListTable=h3cWIPSTrustListTable, h3cWIPSAPClaRowStatus=h3cWIPSAPClaRowStatus, h3cWIPSDctStaMac=h3cWIPSDctStaMac, h3cWIPSChlStatTotalPkt=h3cWIPSChlStatTotalPkt, H3cWIPSAPSecurityType=H3cWIPSAPSecurityType, h3cWIPSChlStatUnicastByte=h3cWIPSChlStatUnicastByte, h3cWIPSBlocklistAction=h3cWIPSBlocklistAction, h3cWIPSStaticCtmListCfgEntry=h3cWIPSStaticCtmListCfgEntry, h3cWIPSDevStatChannel=h3cWIPSDevStatChannel, h3cWIPSNotifyGroup=h3cWIPSNotifyGroup, h3cWIPSPermitChlBitMap=h3cWIPSPermitChlBitMap, h3cWIPSSecurityType=h3cWIPSSecurityType, h3cWIPSDevStatRxUnicastByte=h3cWIPSDevStatRxUnicastByte, h3cWIPSTrustListEntry=h3cWIPSTrustListEntry, h3cWIPSChlStatEapolLogoff=h3cWIPSChlStatEapolLogoff, h3cWIPSDctSSIDEntry=h3cWIPSDctSSIDEntry, h3cWIPSChlStatProbeRequest=h3cWIPSChlStatProbeRequest, h3cWIPSChlStatEapSuccess=h3cWIPSChlStatEapSuccess, h3cWIPSBlockListStatus=h3cWIPSBlockListStatus, h3cWIPSDctAPSSID=h3cWIPSDctAPSSID, h3cWIPSDevStatRxData=h3cWIPSDevStatRxData, h3cWIPSCountermeasureListTable=h3cWIPSCountermeasureListTable, h3cWIPSDctModeRadio=h3cWIPSDctModeRadio, h3cWIPSDctNetworkStatus=h3cWIPSDctNetworkStatus, h3cWIPSDctAPAttachStaNum=h3cWIPSDctAPAttachStaNum, h3cWIPSDctStaCategory=h3cWIPSDctStaCategory, H3cWIPSAPClassifyType=H3cWIPSAPClassifyType, h3cWIPSDctStaAdd2CtmList=h3cWIPSDctStaAdd2CtmList, h3cWIPSDevStatTxBMcastPkt=h3cWIPSDevStatTxBMcastPkt, h3cWIPSDevStatRxDeauth=h3cWIPSDevStatRxDeauth)
mibBuilder.exportSymbols("H3C-WIPS-MIB", h3cWIPSDctStaTable=h3cWIPSDctStaTable, h3cWIPSDctAPAdd2IgnoreList=h3cWIPSDctAPAdd2IgnoreList, h3cWIPSDctAPRptSensorNum=h3cWIPSDctAPRptSensorNum, h3cWIPSVsdRowStatus=h3cWIPSVsdRowStatus, h3cWIPSDctAPSeverityLevel=h3cWIPSDctAPSeverityLevel, h3cWIPSDctAPAdd2CtmList=h3cWIPSDctAPAdd2CtmList, h3cWIPSDctStaAdd2BlackList=h3cWIPSDctStaAdd2BlackList, h3cWIPSSensor2VsdTable=h3cWIPSSensor2VsdTable, h3cWIPSMaxRSSIValue=h3cWIPSMaxRSSIValue, h3cWIPSMaxDuration=h3cWIPSMaxDuration, h3cWIPSDctAPAdd2WhiteList=h3cWIPSDctAPAdd2WhiteList, h3cWIPSDevStatTxRTS=h3cWIPSDevStatTxRTS, h3cWIPSDevStatTxUnicastDeauth=h3cWIPSDevStatTxUnicastDeauth, h3cWIPSDctStaIsCountered=h3cWIPSDctStaIsCountered, h3cWIPSDctStaVSD=h3cWIPSDctStaVSD, h3cWIPSIgnoreListCfgEntry=h3cWIPSIgnoreListCfgEntry, h3cWIPSDctStaLastRptTm=h3cWIPSDctStaLastRptTm, h3cWIPSDevStatTxMalformed=h3cWIPSDevStatTxMalformed, h3cWIPSDevStatRxTotalByte=h3cWIPSDevStatRxTotalByte, h3cWIPSDevStatTxUnicastDisassoc=h3cWIPSDevStatTxUnicastDisassoc, h3cWIPSDctAPRunningTime=h3cWIPSDctAPRunningTime, h3cWIPSDevStatRxAuth=h3cWIPSDevStatRxAuth, h3cWIPSVsdConfigGroup=h3cWIPSVsdConfigGroup, h3cWIPSDevStatRxCtrl=h3cWIPSDevStatRxCtrl, h3cWIPSDevStatTxUnicastByte=h3cWIPSDevStatTxUnicastByte, h3cWIPSStaticTrustListCfgTable=h3cWIPSStaticTrustListCfgTable, h3cWIPSChlStatBmcastByte=h3cWIPSChlStatBmcastByte, h3cWIPSSensorState=h3cWIPSSensorState, h3cWIPSDevStatTxEAPFailure=h3cWIPSDevStatTxEAPFailure, h3cWIPSDctAPIsCountered=h3cWIPSDctAPIsCountered, h3cWIPSChannelTable=h3cWIPSChannelTable, h3cWIPSTrustListMacAddress=h3cWIPSTrustListMacAddress, h3cWIPSDevStatTxTotalPkt=h3cWIPSDevStatTxTotalPkt, h3cWIPSDctNetworkSSIDHide=h3cWIPSDctNetworkSSIDHide)
