#
# PySNMP MIB module A3COM-HUAWEI-LLDP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-LLDP-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:50:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
LldpPortNumber, = mibBuilder.importSymbols("LLDP-MIB", "LldpPortNumber")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, NotificationType, Counter32, TimeTicks, Gauge32, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, Integer32, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "NotificationType", "Counter32", "TimeTicks", "Gauge32", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "Integer32", "IpAddress", "Counter64")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
h3clldp = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100))
h3clldp.setRevisions(('2009-03-21 00:00',))
if mibBuilder.loadTexts: h3clldp.setLastUpdated('200903210000Z')
if mibBuilder.loadTexts: h3clldp.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
h3clldpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1))
h3clldpConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1))
h3clldpAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3clldpAdminStatus.setStatus('current')
h3clldpComplianceCDPStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3clldpComplianceCDPStatus.setStatus('current')
h3clldpPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1, 3), )
if mibBuilder.loadTexts: h3clldpPortConfigTable.setStatus('current')
h3clldpPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-LLDP-EXT-MIB", "h3clldpPortConfigPortNum"))
if mibBuilder.loadTexts: h3clldpPortConfigEntry.setStatus('current')
h3clldpPortConfigPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1, 3, 1, 1), LldpPortNumber())
if mibBuilder.loadTexts: h3clldpPortConfigPortNum.setStatus('current')
h3clldpPortConfigCDPComplianceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 100, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("txAndRx", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3clldpPortConfigCDPComplianceStatus.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-LLDP-EXT-MIB", h3clldpPortConfigTable=h3clldpPortConfigTable, h3clldpPortConfigPortNum=h3clldpPortConfigPortNum, h3clldpPortConfigCDPComplianceStatus=h3clldpPortConfigCDPComplianceStatus, h3clldpAdminStatus=h3clldpAdminStatus, h3clldpObjects=h3clldpObjects, h3clldpPortConfigEntry=h3clldpPortConfigEntry, h3clldpConfiguration=h3clldpConfiguration, PYSNMP_MODULE_ID=h3clldp, h3clldp=h3clldp, h3clldpComplianceCDPStatus=h3clldpComplianceCDPStatus)
