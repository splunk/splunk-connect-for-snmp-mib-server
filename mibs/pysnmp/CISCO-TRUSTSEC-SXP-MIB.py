#
# PySNMP MIB module CISCO-TRUSTSEC-SXP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TRUSTSEC-SXP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:58:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoVrfName, = mibBuilder.importSymbols("CISCO-TC", "CiscoVrfName")
CtsPasswordEncryptionType, CtsPassword, CtsSecurityGroupTag = mibBuilder.importSymbols("CISCO-TRUSTSEC-TC-MIB", "CtsPasswordEncryptionType", "CtsPassword", "CtsSecurityGroupTag")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressPrefixLength, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Gauge32, TimeTicks, IpAddress, Bits, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, Unsigned32, Counter64, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "TimeTicks", "IpAddress", "Bits", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "Unsigned32", "Counter64", "NotificationType", "Integer32")
RowStatus, StorageType, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "StorageType", "DisplayString", "TruthValue", "TextualConvention")
ciscoTrustSecSxpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 720))
ciscoTrustSecSxpMIB.setRevisions(('2012-04-17 00:00', '2010-11-24 00:00', '2010-02-03 00:00',))
if mibBuilder.loadTexts: ciscoTrustSecSxpMIB.setLastUpdated('201204170000Z')
if mibBuilder.loadTexts: ciscoTrustSecSxpMIB.setOrganization('Cisco Systems, Inc.')
ciscoTrustSecSxpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 0))
ciscoTrustSecSxpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 1))
ciscoTrustSecSxpMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 2))
ctsxSxpGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1))
ctsxSxpConnectionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2))
ctsxSxpSgtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3))
ciscoTrustSecSxpMIBNotifsControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4))
ciscoTrustSecSxpMIBNotifsOnlyInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5))
ctsxSxpEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpEnable.setStatus('current')
ctsxSxpConfigDefaultPasswordType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 2), CtsPasswordEncryptionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpConfigDefaultPasswordType.setStatus('current')
ctsxSxpConfigDefaultPassword = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 3), CtsPassword()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpConfigDefaultPassword.setStatus('current')
ctsxSxpViewDefaultPasswordType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 4), CtsPasswordEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpViewDefaultPasswordType.setStatus('current')
ctsxSxpViewDefaultPassword = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 5), CtsPassword()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpViewDefaultPassword.setStatus('current')
ctsxSxpDefaultSourceAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 6), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpDefaultSourceAddrType.setStatus('current')
ctsxSxpDefaultSourceAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpDefaultSourceAddr.setStatus('current')
ctsxSxpRetryPeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpRetryPeriod.setStatus('current')
ctsxSxpReconPeriod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpReconPeriod.setStatus('current')
ctsxSxpBindingChangesLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpBindingChangesLogEnable.setStatus('current')
ctsxSgtMapExpansionLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSgtMapExpansionLimit.setStatus('current')
ctsxSgtMapExpansionCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSgtMapExpansionCount.setStatus('current')
ctsxSxpAdminNodeId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpAdminNodeId.setStatus('current')
ctsxSxpNodeIdInterface = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 14), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpNodeIdInterface.setStatus('current')
ctsxSxpNodeIdIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 15), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpNodeIdIpAddrType.setStatus('current')
ctsxSxpNodeIdIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 16), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpNodeIdIpAddr.setStatus('current')
ctsxSxpOperNodeId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpOperNodeId.setStatus('current')
ctsxSxpSpeakerMinHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpSpeakerMinHoldTime.setStatus('current')
ctsxSxpListenerMinHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpListenerMinHoldTime.setStatus('current')
ctsxSxpListenerMaxHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpListenerMaxHoldTime.setStatus('current')
ctsxSxpVersionSupport = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("one", 2), ("two", 3), ("three", 4), ("four", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpVersionSupport.setStatus('current')
ctsxSxpConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1), )
if mibBuilder.loadTexts: ctsxSxpConnectionTable.setStatus('current')
ctsxSxpConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnVrfName"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnPeerAddrType"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnPeerAddr"))
if mibBuilder.loadTexts: ctsxSxpConnectionEntry.setStatus('current')
ctsxSxpConnVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 1), CiscoVrfName())
if mibBuilder.loadTexts: ctsxSxpConnVrfName.setStatus('current')
ctsxSxpConnPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: ctsxSxpConnPeerAddrType.setStatus('current')
ctsxSxpConnPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: ctsxSxpConnPeerAddr.setStatus('current')
ctsxSxpConnSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnSourceAddrType.setStatus('current')
ctsxSxpConnSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnSourceAddr.setStatus('current')
ctsxSxpConnOperSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnOperSourceAddrType.setStatus('current')
ctsxSxpConnOperSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnOperSourceAddr.setStatus('current')
ctsxSxpConnPasswordUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("default", 2), ("connectionSpecific", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnPasswordUsed.setStatus('current')
ctsxSxpConnConfigPasswordType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 9), CtsPasswordEncryptionType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnConfigPasswordType.setStatus('current')
ctsxSxpConnConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 10), CtsPassword()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnConfigPassword.setStatus('current')
ctsxSxpConnViewPasswordType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 11), CtsPasswordEncryptionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnViewPasswordType.setStatus('current')
ctsxSxpConnViewPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 12), CtsPassword()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnViewPassword.setStatus('current')
ctsxSxpConnModeLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("peer", 2))).clone('local')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnModeLocation.setStatus('current')
ctsxSxpConnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("speaker", 1), ("listener", 2))).clone('speaker')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnMode.setStatus('current')
ctsxSxpConnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnInstance.setStatus('current')
ctsxSxpConnStatusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 16), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnStatusLastChange.setStatus('current')
ctsxSxpConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3), ("pendingOn", 4), ("deleteHoldDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnStatus.setStatus('current')
ctsxSxpVrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpVrfId.setStatus('current')
ctsxSxpConnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 19), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnStorageType.setStatus('current')
ctsxSxpConnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnRowStatus.setStatus('current')
ctsxSxpConnVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("one", 2), ("two", 3), ("three", 4), ("four", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnVersion.setStatus('current')
ctsxSxpConnSpeakerMinHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65534), ValueRangeConstraint(65535, 65535), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnSpeakerMinHoldTime.setStatus('current')
ctsxSxpConnListenerMinHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65534), ValueRangeConstraint(65535, 65535), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnListenerMinHoldTime.setStatus('current')
ctsxSxpConnListenerMaxHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65534), ValueRangeConstraint(65535, 65535), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctsxSxpConnListenerMaxHoldTime.setStatus('current')
ctsxSxpConnHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 25), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnHoldTime.setStatus('current')
ctsxSxpConnCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 2, 1, 1, 26), Bits().clone(namedValues=NamedValues(("ipv4", 0), ("ipv6", 1), ("subnet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpConnCapability.setStatus('current')
ctsxIpSgtMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1), )
if mibBuilder.loadTexts: ctsxIpSgtMappingTable.setStatus('current')
ctsxIpSgtMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingVrfId"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingAddrType"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingAddr"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingPeerAddrType"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingPeerAddr"))
if mibBuilder.loadTexts: ctsxIpSgtMappingEntry.setStatus('current')
ctsxIpSgtMappingVrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctsxIpSgtMappingVrfId.setStatus('current')
ctsxIpSgtMappingAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: ctsxIpSgtMappingAddrType.setStatus('current')
ctsxIpSgtMappingAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: ctsxIpSgtMappingAddr.setStatus('current')
ctsxIpSgtMappingPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 4), InetAddressType())
if mibBuilder.loadTexts: ctsxIpSgtMappingPeerAddrType.setStatus('current')
ctsxIpSgtMappingPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 5), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: ctsxIpSgtMappingPeerAddr.setStatus('current')
ctsxIpSgtMappingSgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 6), CtsSecurityGroupTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxIpSgtMappingSgt.setStatus('current')
ctsxIpSgtMappingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxIpSgtMappingInstance.setStatus('current')
ctsxIpSgtMappingVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 8), CiscoVrfName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxIpSgtMappingVrfName.setStatus('current')
ctsxIpSgtMappingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxIpSgtMappingStatus.setStatus('current')
ctsxSxpSgtMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2), )
if mibBuilder.loadTexts: ctsxSxpSgtMapTable.setStatus('current')
ctsxSxpSgtMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapVrfId"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapAddrType"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapAddr"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapAddrPrefixLength"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapPeerAddrType"), (0, "CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapPeerAddr"))
if mibBuilder.loadTexts: ctsxSxpSgtMapEntry.setStatus('current')
ctsxSxpSgtMapVrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctsxSxpSgtMapVrfId.setStatus('current')
ctsxSxpSgtMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: ctsxSxpSgtMapAddrType.setStatus('current')
ctsxSxpSgtMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: ctsxSxpSgtMapAddr.setStatus('current')
ctsxSxpSgtMapAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 4), InetAddressPrefixLength())
if mibBuilder.loadTexts: ctsxSxpSgtMapAddrPrefixLength.setStatus('current')
ctsxSxpSgtMapPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 5), InetAddressType())
if mibBuilder.loadTexts: ctsxSxpSgtMapPeerAddrType.setStatus('current')
ctsxSxpSgtMapPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 6), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: ctsxSxpSgtMapPeerAddr.setStatus('current')
ctsxSxpSgtMapSgt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 7), CtsSecurityGroupTag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpSgtMapSgt.setStatus('current')
ctsxSxpSgtMapInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpSgtMapInstance.setStatus('current')
ctsxSxpSgtMapVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 9), CiscoVrfName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpSgtMapVrfName.setStatus('current')
ctsxSxpSgtMapPeerSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpSgtMapPeerSeq.setStatus('current')
ctsxSxpSgtMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctsxSxpSgtMapStatus.setStatus('current')
ctsxSxpConnSourceAddrErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpConnSourceAddrErrNotifEnable.setStatus('current')
ctsxSxpMsgParseErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpMsgParseErrNotifEnable.setStatus('current')
ctsxSxpConnConfigErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpConnConfigErrNotifEnable.setStatus('current')
ctsxSxpBindingErrNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpBindingErrNotifEnable.setStatus('current')
ctsxSxpConnUpNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpConnUpNotifEnable.setStatus('current')
ctsxSxpConnDownNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpConnDownNotifEnable.setStatus('current')
ctsxSxpExpansionFailNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpExpansionFailNotifEnable.setStatus('current')
ctsxSxpOperNodeIdChangeNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpOperNodeIdChangeNotifEnable.setStatus('current')
ctsxSxpBindingConflictNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 4, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctsxSxpBindingConflictNotifEnable.setStatus('current')
ctsxSgtMapExpansionVrf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 1), CiscoVrfName()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapExpansionVrf.setStatus('current')
ctsxSgtMapExpansionAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapExpansionAddrType.setStatus('current')
ctsxSgtMapExpansionAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapExpansionAddr.setStatus('current')
ctsxSgtMapExpansionAddrPrefixLength = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 4), InetAddressPrefixLength()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapExpansionAddrPrefixLength.setStatus('current')
ctsxSxpNotifErrMsg = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 5), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSxpNotifErrMsg.setStatus('current')
ctsxSgtMapConflictingVrfName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 6), CiscoVrfName()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapConflictingVrfName.setStatus('current')
ctsxSgtMapConflictingAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 7), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapConflictingAddrType.setStatus('current')
ctsxSgtMapConflictingAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 8), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapConflictingAddr.setStatus('current')
ctsxSgtMapConflictingOldSgt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 9), CtsSecurityGroupTag()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapConflictingOldSgt.setStatus('current')
ctsxSgtMapConflictingNewSgt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 10), CtsSecurityGroupTag()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSgtMapConflictingNewSgt.setStatus('current')
ctsxSxpOldOperNodeId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 720, 1, 5, 11), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ctsxSxpOldOperNodeId.setStatus('current')
ctsxSxpConnSourceAddrErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 1)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddr"))
if mibBuilder.loadTexts: ctsxSxpConnSourceAddrErrNotif.setStatus('current')
ctsxSxpMsgParseErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 2)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNotifErrMsg"))
if mibBuilder.loadTexts: ctsxSxpMsgParseErrNotif.setStatus('current')
ctsxSxpConnConfigErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 3)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNotifErrMsg"))
if mibBuilder.loadTexts: ctsxSxpConnConfigErrNotif.setStatus('current')
ctsxSxpBindingErrNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 4)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapSgt"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapInstance"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapVrfName"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNotifErrMsg"))
if mibBuilder.loadTexts: ctsxSxpBindingErrNotif.setStatus('current')
ctsxSxpConnUpNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 5)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnInstance"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnStatus"))
if mibBuilder.loadTexts: ctsxSxpConnUpNotif.setStatus('current')
ctsxSxpConnDownNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 6)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnInstance"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnStatus"))
if mibBuilder.loadTexts: ctsxSxpConnDownNotif.setStatus('current')
ctsxSxpExpansionFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 7)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionLimit"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionCount"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionVrf"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionAddrPrefixLength"))
if mibBuilder.loadTexts: ctsxSxpExpansionFailNotif.setStatus('current')
ctsxSxpOperNodeIdChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 8)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpOldOperNodeId"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpOperNodeId"))
if mibBuilder.loadTexts: ctsxSxpOperNodeIdChangeNotif.setStatus('current')
ctsxSxpBindingConflictNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 720, 0, 9)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingVrfName"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingOldSgt"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingNewSgt"))
if mibBuilder.loadTexts: ctsxSxpBindingConflictNotif.setStatus('current')
ciscoTrustSecSxpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 1))
ciscoTrustSecSxpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2))
ciscoTrustSecSxpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 1, 1)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpGlobalGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnectionGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSxpMIBCompliance = ciscoTrustSecSxpMIBCompliance.setStatus('deprecated')
ciscoTrustSecSxpMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 1, 2)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpGlobalGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnectionGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpVersionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSxpMIBCompliance2 = ciscoTrustSecSxpMIBCompliance2.setStatus('deprecated')
ciscoTrustSecSxpMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 1, 3)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpGlobalGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnectionGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpVersionGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingLogGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingNotifInfoGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNodeIdInfoGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxNotifsControlGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxNotifsGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNotifErrMsgGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpGlobalHoldTimeGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnHoldTimeGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnCapbilityGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpVersionSupportGroup"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapPeerSeqGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTrustSecSxpMIBCompliance3 = ciscoTrustSecSxpMIBCompliance3.setStatus('current')
ctsxSxpGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 1)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConfigDefaultPasswordType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConfigDefaultPassword"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpViewDefaultPasswordType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpViewDefaultPassword"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpDefaultSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpDefaultSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpRetryPeriod"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpReconPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpGlobalGroup = ctsxSxpGlobalGroup.setStatus('current')
ctsxSxpConnectionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 2)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnOperSourceAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnPasswordUsed"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnConfigPasswordType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnConfigPassword"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnViewPasswordType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnViewPassword"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnModeLocation"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnMode"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnInstance"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnStatusLastChange"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnStatus"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpVrfId"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnStorageType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpConnectionGroup = ctsxSxpConnectionGroup.setStatus('current')
ctsxIpSgtMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 3)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingSgt"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingInstance"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingVrfName"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxIpSgtMappingStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxIpSgtMappingGroup = ctsxIpSgtMappingGroup.setStatus('current')
ctsxSxpVersionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 4)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpVersionGroup = ctsxSxpVersionGroup.setStatus('current')
ctsxSxpBindingLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 5)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingChangesLogEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpBindingLogGroup = ctsxSxpBindingLogGroup.setStatus('current')
ctsxSxpBindingNotifInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 6)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionVrf"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionAddrPrefixLength"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingVrfName"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingOldSgt"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapConflictingNewSgt"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpOldOperNodeId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpBindingNotifInfoGroup = ctsxSxpBindingNotifInfoGroup.setStatus('current')
ctsxSxpNotifErrMsgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 7)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNotifErrMsg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpNotifErrMsgGroup = ctsxSxpNotifErrMsgGroup.setStatus('current')
ctsxSxpNodeIdInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 8)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpAdminNodeId"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNodeIdInterface"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNodeIdIpAddrType"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpNodeIdIpAddr"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpOperNodeId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpNodeIdInfoGroup = ctsxSxpNodeIdInfoGroup.setStatus('current')
ctsxSxpSgtMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 9)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapSgt"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapInstance"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapVrfName"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapStatus"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionLimit"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSgtMapExpansionCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpSgtMapGroup = ctsxSxpSgtMapGroup.setStatus('current')
ctsxNotifsControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 10)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnSourceAddrErrNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpMsgParseErrNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnConfigErrNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingErrNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnUpNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnDownNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpExpansionFailNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpOperNodeIdChangeNotifEnable"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingConflictNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxNotifsControlGroup = ctsxNotifsControlGroup.setStatus('current')
ctsxNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 11)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnSourceAddrErrNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpMsgParseErrNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnConfigErrNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingErrNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnUpNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnDownNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpExpansionFailNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpOperNodeIdChangeNotif"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpBindingConflictNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxNotifsGroup = ctsxNotifsGroup.setStatus('current')
ctsxSxpGlobalHoldTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 12)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSpeakerMinHoldTime"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpListenerMinHoldTime"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpListenerMaxHoldTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpGlobalHoldTimeGroup = ctsxSxpGlobalHoldTimeGroup.setStatus('current')
ctsxSxpConnHoldTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 13)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnSpeakerMinHoldTime"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnListenerMinHoldTime"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnListenerMaxHoldTime"), ("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnHoldTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpConnHoldTimeGroup = ctsxSxpConnHoldTimeGroup.setStatus('current')
ctsxSxpConnCapbilityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 14)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpConnCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpConnCapbilityGroup = ctsxSxpConnCapbilityGroup.setStatus('current')
ctsxSxpVersionSupportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 15)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpVersionSupport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSxpVersionSupportGroup = ctsxSxpVersionSupportGroup.setStatus('current')
ctsxSgtMapPeerSeqGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 720, 2, 2, 16)).setObjects(("CISCO-TRUSTSEC-SXP-MIB", "ctsxSxpSgtMapPeerSeq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ctsxSgtMapPeerSeqGroup = ctsxSgtMapPeerSeqGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-TRUSTSEC-SXP-MIB", ctsxSxpConnHoldTimeGroup=ctsxSxpConnHoldTimeGroup, ctsxIpSgtMappingAddrType=ctsxIpSgtMappingAddrType, ciscoTrustSecSxpMIB=ciscoTrustSecSxpMIB, ctsxSxpSgtMapAddr=ctsxSxpSgtMapAddr, ctsxSxpConfigDefaultPassword=ctsxSxpConfigDefaultPassword, ciscoTrustSecSxpMIBCompliance2=ciscoTrustSecSxpMIBCompliance2, ctsxSxpListenerMaxHoldTime=ctsxSxpListenerMaxHoldTime, ctsxSgtMapExpansionAddrType=ctsxSgtMapExpansionAddrType, ctsxSxpConnCapbilityGroup=ctsxSxpConnCapbilityGroup, ctsxSxpNodeIdInfoGroup=ctsxSxpNodeIdInfoGroup, ctsxIpSgtMappingVrfName=ctsxIpSgtMappingVrfName, ctsxSxpConnPasswordUsed=ctsxSxpConnPasswordUsed, ctsxIpSgtMappingSgt=ctsxIpSgtMappingSgt, ctsxSxpConnConfigErrNotif=ctsxSxpConnConfigErrNotif, ctsxSxpDefaultSourceAddrType=ctsxSxpDefaultSourceAddrType, ctsxSgtMapConflictingVrfName=ctsxSgtMapConflictingVrfName, ctsxSxpSgtMapAddrType=ctsxSxpSgtMapAddrType, ctsxSgtMapConflictingNewSgt=ctsxSgtMapConflictingNewSgt, ctsxSxpNodeIdIpAddrType=ctsxSxpNodeIdIpAddrType, ctsxSxpSgtMapTable=ctsxSxpSgtMapTable, ctsxSxpBindingConflictNotifEnable=ctsxSxpBindingConflictNotifEnable, ctsxSxpConnectionEntry=ctsxSxpConnectionEntry, ctsxSxpSgtMapGroup=ctsxSxpSgtMapGroup, ciscoTrustSecSxpMIBConform=ciscoTrustSecSxpMIBConform, ctsxSxpViewDefaultPasswordType=ctsxSxpViewDefaultPasswordType, ctsxIpSgtMappingPeerAddrType=ctsxIpSgtMappingPeerAddrType, ctsxSxpConnStatus=ctsxSxpConnStatus, ctsxSxpConnHoldTime=ctsxSxpConnHoldTime, ctsxSxpMsgParseErrNotif=ctsxSxpMsgParseErrNotif, ctsxSgtMapExpansionLimit=ctsxSgtMapExpansionLimit, ctsxNotifsControlGroup=ctsxNotifsControlGroup, ciscoTrustSecSxpMIBNotifs=ciscoTrustSecSxpMIBNotifs, ctsxSxpGlobalObjects=ctsxSxpGlobalObjects, ctsxSxpConnectionTable=ctsxSxpConnectionTable, ctsxSxpBindingErrNotifEnable=ctsxSxpBindingErrNotifEnable, ctsxSxpConnSourceAddrErrNotifEnable=ctsxSxpConnSourceAddrErrNotifEnable, ctsxSxpBindingLogGroup=ctsxSxpBindingLogGroup, ctsxSxpAdminNodeId=ctsxSxpAdminNodeId, ctsxSxpSgtMapSgt=ctsxSxpSgtMapSgt, ctsxSxpGlobalGroup=ctsxSxpGlobalGroup, ciscoTrustSecSxpMIBNotifsOnlyInfo=ciscoTrustSecSxpMIBNotifsOnlyInfo, ctsxSxpListenerMinHoldTime=ctsxSxpListenerMinHoldTime, ctsxSxpOldOperNodeId=ctsxSxpOldOperNodeId, ctsxSxpConnVrfName=ctsxSxpConnVrfName, ctsxSxpSgtMapPeerAddr=ctsxSxpSgtMapPeerAddr, ctsxSxpConnModeLocation=ctsxSxpConnModeLocation, ctsxSxpConnSourceAddr=ctsxSxpConnSourceAddr, ctsxIpSgtMappingVrfId=ctsxIpSgtMappingVrfId, ctsxSxpConnStorageType=ctsxSxpConnStorageType, ctsxSxpSgtObjects=ctsxSxpSgtObjects, ctsxSxpVersionSupport=ctsxSxpVersionSupport, ctsxSxpConnSourceAddrType=ctsxSxpConnSourceAddrType, ciscoTrustSecSxpMIBCompliance=ciscoTrustSecSxpMIBCompliance, ctsxSxpNodeIdInterface=ctsxSxpNodeIdInterface, ctsxSxpOperNodeIdChangeNotifEnable=ctsxSxpOperNodeIdChangeNotifEnable, ctsxSxpOperNodeIdChangeNotif=ctsxSxpOperNodeIdChangeNotif, ctsxIpSgtMappingPeerAddr=ctsxIpSgtMappingPeerAddr, ctsxSxpNotifErrMsgGroup=ctsxSxpNotifErrMsgGroup, ctsxSxpOperNodeId=ctsxSxpOperNodeId, ctsxSgtMapExpansionAddrPrefixLength=ctsxSgtMapExpansionAddrPrefixLength, ctsxSxpSgtMapEntry=ctsxSxpSgtMapEntry, ctsxSgtMapExpansionAddr=ctsxSgtMapExpansionAddr, ciscoTrustSecSxpMIBCompliance3=ciscoTrustSecSxpMIBCompliance3, ctsxSxpConnOperSourceAddrType=ctsxSxpConnOperSourceAddrType, ctsxSxpBindingNotifInfoGroup=ctsxSxpBindingNotifInfoGroup, ctsxSxpSpeakerMinHoldTime=ctsxSxpSpeakerMinHoldTime, ctsxIpSgtMappingEntry=ctsxIpSgtMappingEntry, ctsxSxpBindingErrNotif=ctsxSxpBindingErrNotif, ctsxSxpConnConfigPassword=ctsxSxpConnConfigPassword, ctsxSxpSgtMapAddrPrefixLength=ctsxSxpSgtMapAddrPrefixLength, ctsxNotifsGroup=ctsxNotifsGroup, ctsxSxpConnSpeakerMinHoldTime=ctsxSxpConnSpeakerMinHoldTime, ctsxSxpConnInstance=ctsxSxpConnInstance, ctsxSxpSgtMapInstance=ctsxSxpSgtMapInstance, ciscoTrustSecSxpMIBCompliances=ciscoTrustSecSxpMIBCompliances, ctsxSxpConnUpNotifEnable=ctsxSxpConnUpNotifEnable, ctsxSxpConnPeerAddrType=ctsxSxpConnPeerAddrType, ctsxSxpBindingConflictNotif=ctsxSxpBindingConflictNotif, ctsxIpSgtMappingInstance=ctsxIpSgtMappingInstance, ctsxSxpConnViewPasswordType=ctsxSxpConnViewPasswordType, ctsxSxpReconPeriod=ctsxSxpReconPeriod, ctsxSxpBindingChangesLogEnable=ctsxSxpBindingChangesLogEnable, ctsxSxpConnStatusLastChange=ctsxSxpConnStatusLastChange, ctsxIpSgtMappingAddr=ctsxIpSgtMappingAddr, ctsxSxpVersionSupportGroup=ctsxSxpVersionSupportGroup, ctsxSxpConnDownNotif=ctsxSxpConnDownNotif, ctsxSxpConnMode=ctsxSxpConnMode, ctsxSxpViewDefaultPassword=ctsxSxpViewDefaultPassword, ctsxSgtMapConflictingOldSgt=ctsxSgtMapConflictingOldSgt, ctsxSxpRetryPeriod=ctsxSxpRetryPeriod, ctsxSxpConnSourceAddrErrNotif=ctsxSxpConnSourceAddrErrNotif, ctsxSxpGlobalHoldTimeGroup=ctsxSxpGlobalHoldTimeGroup, ctsxSxpExpansionFailNotifEnable=ctsxSxpExpansionFailNotifEnable, ctsxSxpConfigDefaultPasswordType=ctsxSxpConfigDefaultPasswordType, ctsxSgtMapPeerSeqGroup=ctsxSgtMapPeerSeqGroup, ctsxSxpExpansionFailNotif=ctsxSxpExpansionFailNotif, ctsxSxpConnVersion=ctsxSxpConnVersion, ctsxSxpSgtMapPeerAddrType=ctsxSxpSgtMapPeerAddrType, ctsxSxpConnDownNotifEnable=ctsxSxpConnDownNotifEnable, ctsxSxpVrfId=ctsxSxpVrfId, ctsxSxpNotifErrMsg=ctsxSxpNotifErrMsg, ciscoTrustSecSxpMIBObjects=ciscoTrustSecSxpMIBObjects, ctsxSxpConnOperSourceAddr=ctsxSxpConnOperSourceAddr, ctsxSxpConnCapability=ctsxSxpConnCapability, ctsxSxpSgtMapVrfId=ctsxSxpSgtMapVrfId, ctsxSgtMapExpansionVrf=ctsxSgtMapExpansionVrf, ctsxSxpConnConfigPasswordType=ctsxSxpConnConfigPasswordType, ciscoTrustSecSxpMIBNotifsControl=ciscoTrustSecSxpMIBNotifsControl, ciscoTrustSecSxpMIBGroups=ciscoTrustSecSxpMIBGroups, ctsxSxpConnRowStatus=ctsxSxpConnRowStatus, ctsxSxpConnListenerMinHoldTime=ctsxSxpConnListenerMinHoldTime, ctsxSxpConnListenerMaxHoldTime=ctsxSxpConnListenerMaxHoldTime, ctsxSxpConnConfigErrNotifEnable=ctsxSxpConnConfigErrNotifEnable, ctsxSxpVersionGroup=ctsxSxpVersionGroup, ctsxSxpMsgParseErrNotifEnable=ctsxSxpMsgParseErrNotifEnable, ctsxSxpSgtMapPeerSeq=ctsxSxpSgtMapPeerSeq, ctsxSxpEnable=ctsxSxpEnable, PYSNMP_MODULE_ID=ciscoTrustSecSxpMIB, ctsxSxpSgtMapVrfName=ctsxSxpSgtMapVrfName, ctsxIpSgtMappingGroup=ctsxIpSgtMappingGroup, ctsxIpSgtMappingStatus=ctsxIpSgtMappingStatus, ctsxSxpConnPeerAddr=ctsxSxpConnPeerAddr, ctsxSxpConnectionObjects=ctsxSxpConnectionObjects, ctsxSgtMapConflictingAddrType=ctsxSgtMapConflictingAddrType, ctsxSxpDefaultSourceAddr=ctsxSxpDefaultSourceAddr, ctsxSxpSgtMapStatus=ctsxSxpSgtMapStatus, ctsxSgtMapConflictingAddr=ctsxSgtMapConflictingAddr, ctsxSgtMapExpansionCount=ctsxSgtMapExpansionCount, ctsxSxpNodeIdIpAddr=ctsxSxpNodeIdIpAddr, ctsxSxpConnViewPassword=ctsxSxpConnViewPassword, ctsxSxpConnUpNotif=ctsxSxpConnUpNotif, ctsxSxpConnectionGroup=ctsxSxpConnectionGroup, ctsxIpSgtMappingTable=ctsxIpSgtMappingTable)
