#
# PySNMP MIB module HPN-ICF-DOT11-LIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-LIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
hpnicfDot11, = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "hpnicfDot11")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, NotificationType, Bits, iso, Counter64, MibIdentifier, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, ObjectIdentity, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Bits", "iso", "Counter64", "MibIdentifier", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "ObjectIdentity", "IpAddress", "Integer32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
hpnicfDot11LIC = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14))
hpnicfDot11LIC.setRevisions(('2012-04-25 18:00',))
if mibBuilder.loadTexts: hpnicfDot11LIC.setLastUpdated('201204251800Z')
if mibBuilder.loadTexts: hpnicfDot11LIC.setOrganization('')
hpnicfDot11LICConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 1))
hpnicfDot11LICApNumGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2))
hpnicfDot11LICFeatureGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3))
hpnicfDot11LICSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICSerialNumber.setStatus('current')
hpnicfDot11LicApNumGroupSupport = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LicApNumGroupSupport.setStatus('current')
hpnicfDot11LICApNumAttrTable = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 1))
hpnicfDot11LICDefautAPNumPermit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICDefautAPNumPermit.setStatus('current')
hpnicfDot11LICCurrentAPNumPermit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICCurrentAPNumPermit.setStatus('current')
hpnicfDot11LICMaxAPNumPermit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICMaxAPNumPermit.setStatus('current')
hpnicfDot11LICApNumLicTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 2), )
if mibBuilder.loadTexts: hpnicfDot11LICApNumLicTable.setStatus('current')
hpnicfDot11LICApNumLicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-LIC-MIB", "hpnicfDot11LICLicenseKeyIndex"))
if mibBuilder.loadTexts: hpnicfDot11LICApNumLicEntry.setStatus('current')
hpnicfDot11LICLicenseKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICLicenseKeyIndex.setStatus('current')
hpnicfDot11LICLicenseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICLicenseKey.setStatus('current')
hpnicfDot11LICActivationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICActivationKey.setStatus('current')
hpnicfDot11LICApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICApNum.setStatus('current')
hpnicfDot11LICFeatureAttrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 1), )
if mibBuilder.loadTexts: hpnicfDot11LICFeatureAttrTable.setStatus('current')
hpnicfDot11LICFeatureAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-LIC-MIB", "hpnicfDot11LICAttrIndex"))
if mibBuilder.loadTexts: hpnicfDot11LICFeatureAttrEntry.setStatus('current')
hpnicfDot11LICAttrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICAttrIndex.setStatus('current')
hpnicfDot11LICAttrTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICAttrTypeName.setStatus('current')
hpnicfDot11LICAttrDefVal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICAttrDefVal.setStatus('current')
hpnicfDot11LICAttrMaxVal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICAttrMaxVal.setStatus('current')
hpnicfDot11LICFeatureLicTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2), )
if mibBuilder.loadTexts: hpnicfDot11LICFeatureLicTable.setStatus('current')
hpnicfDot11LICFeatureLicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-LIC-MIB", "hpnicfDot11LICKeyIndex"))
if mibBuilder.loadTexts: hpnicfDot11LICFeatureLicEntry.setStatus('current')
hpnicfDot11LICKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICKeyIndex.setStatus('current')
hpnicfDot11LICTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICTypeName.setStatus('current')
hpnicfDot11LICKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICKey.setStatus('current')
hpnicfDot11LICTimeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICTimeLimit.setStatus('current')
hpnicfDot11LICValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 14, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11LICValue.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-LIC-MIB", hpnicfDot11LICFeatureLicEntry=hpnicfDot11LICFeatureLicEntry, hpnicfDot11LICValue=hpnicfDot11LICValue, hpnicfDot11LICAttrMaxVal=hpnicfDot11LICAttrMaxVal, hpnicfDot11LICTimeLimit=hpnicfDot11LICTimeLimit, hpnicfDot11LICFeatureGroup=hpnicfDot11LICFeatureGroup, hpnicfDot11LICSerialNumber=hpnicfDot11LICSerialNumber, hpnicfDot11LICCurrentAPNumPermit=hpnicfDot11LICCurrentAPNumPermit, hpnicfDot11LICAttrDefVal=hpnicfDot11LICAttrDefVal, hpnicfDot11LICLicenseKeyIndex=hpnicfDot11LICLicenseKeyIndex, hpnicfDot11LICLicenseKey=hpnicfDot11LICLicenseKey, hpnicfDot11LICFeatureLicTable=hpnicfDot11LICFeatureLicTable, hpnicfDot11LICKey=hpnicfDot11LICKey, hpnicfDot11LICDefautAPNumPermit=hpnicfDot11LICDefautAPNumPermit, hpnicfDot11LICApNumLicEntry=hpnicfDot11LICApNumLicEntry, hpnicfDot11LICTypeName=hpnicfDot11LICTypeName, hpnicfDot11LICAttrTypeName=hpnicfDot11LICAttrTypeName, hpnicfDot11LICApNumLicTable=hpnicfDot11LICApNumLicTable, hpnicfDot11LICMaxAPNumPermit=hpnicfDot11LICMaxAPNumPermit, hpnicfDot11LicApNumGroupSupport=hpnicfDot11LicApNumGroupSupport, hpnicfDot11LICConfigGroup=hpnicfDot11LICConfigGroup, hpnicfDot11LICApNum=hpnicfDot11LICApNum, hpnicfDot11LICActivationKey=hpnicfDot11LICActivationKey, hpnicfDot11LIC=hpnicfDot11LIC, hpnicfDot11LICKeyIndex=hpnicfDot11LICKeyIndex, hpnicfDot11LICFeatureAttrTable=hpnicfDot11LICFeatureAttrTable, hpnicfDot11LICAttrIndex=hpnicfDot11LICAttrIndex, PYSNMP_MODULE_ID=hpnicfDot11LIC, hpnicfDot11LICApNumAttrTable=hpnicfDot11LICApNumAttrTable, hpnicfDot11LICApNumGroup=hpnicfDot11LICApNumGroup, hpnicfDot11LICFeatureAttrEntry=hpnicfDot11LICFeatureAttrEntry)
