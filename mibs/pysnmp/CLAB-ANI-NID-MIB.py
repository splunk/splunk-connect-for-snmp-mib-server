#
# PySNMP MIB module CLAB-ANI-NID-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CLAB-ANI-NID-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
clabCommonMibs, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabCommonMibs")
InetAddressType, InetPortNumber, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, MibIdentifier, Unsigned32, Gauge32, Counter32, iso, NotificationType, ModuleIdentity, Counter64, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "MibIdentifier", "Unsigned32", "Gauge32", "Counter32", "iso", "NotificationType", "ModuleIdentity", "Counter64", "ObjectIdentity", "Integer32")
DisplayString, RowStatus, TruthValue, DateAndTime, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "DateAndTime", "TextualConvention", "MacAddress")
clabAniNidMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 4, 8))
clabAniNidMib.setRevisions(('2016-11-29 00:00',))
if mibBuilder.loadTexts: clabAniNidMib.setLastUpdated('201611290000Z')
if mibBuilder.loadTexts: clabAniNidMib.setOrganization('Cable Television Laboratories, Inc.')
clabAniNidNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 0))
clabAniNidMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1))
clabAniNidMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 99))
clabAniNidCfgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1))
clabAniNidStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2))
clabAniNidCfgID = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clabAniNidCfgID.setStatus('current')
clabAniNidCfgPtpMcastMac = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwardable", 1), ("nonforwardable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgPtpMcastMac.setStatus('current')
clabAniNidCfgTelnetEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgTelnetEnabled.setStatus('current')
clabAniNidCfgTftpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgTftpEnabled.setStatus('current')
clabAniNidCfgClientAuthStatus = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("authenticated", 1), ("authenticationFailed", 2), ("noAvailableServers", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clabAniNidCfgClientAuthStatus.setStatus('current')
clabAniNidCfgAuthServerServiceType = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("radius", 1), ("tacacs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgAuthServerServiceType.setStatus('current')
clabAniNidCfgPrimaryServerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 7), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgPrimaryServerIpAddressType.setStatus('current')
clabAniNidCfgPrimaryServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 8), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgPrimaryServerIpAddress.setStatus('current')
clabAniNidCfgPrimaryServerPort = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 9), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgPrimaryServerPort.setStatus('current')
clabAniNidCfgSecondaryServerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 10), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgSecondaryServerIpAddressType.setStatus('current')
clabAniNidCfgSecondaryServerIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 11), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgSecondaryServerIpAddress.setStatus('current')
clabAniNidCfgSecondaryServerPort = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 1, 12), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidCfgSecondaryServerPort.setStatus('current')
clabAniNidStatusAuthHistoryMaxTableSize = MibScalar((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidStatusAuthHistoryMaxTableSize.setStatus('current')
clabAniNidStatusAuthHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 2), )
if mibBuilder.loadTexts: clabAniNidStatusAuthHistoryTable.setStatus('current')
clabAniNidStatusAuthHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 2, 1), ).setIndexNames((0, "CLAB-ANI-NID-MIB", "clabAniNidStatusAuthHistoryInitiationTime"))
if mibBuilder.loadTexts: clabAniNidStatusAuthHistoryEntry.setStatus('current')
clabAniNidStatusAuthHistoryInitiationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 2, 1, 1), TimeTicks())
if mibBuilder.loadTexts: clabAniNidStatusAuthHistoryInitiationTime.setStatus('current')
clabAniNidStatusAuthHistoryResults = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("success", 1), ("failedRc1", 2), ("failedRc2", 3), ("failedRc3", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clabAniNidStatusAuthHistoryResults.setStatus('current')
clabAniNidStatusAuthHistoryServer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("primary", 0), ("secondary", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clabAniNidStatusAuthHistoryServer.setStatus('current')
clabAniNidStatusReportCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 3), )
if mibBuilder.loadTexts: clabAniNidStatusReportCircuitTable.setStatus('current')
clabAniNidStatusReportCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 3, 1), ).setIndexNames((0, "CLAB-ANI-NID-MIB", "clabAniNidStatusReportCircuitIndex"))
if mibBuilder.loadTexts: clabAniNidStatusReportCircuitEntry.setStatus('current')
clabAniNidStatusReportCircuitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clabAniNidStatusReportCircuitIndex.setStatus('current')
clabAniNidStatusReportCircuitIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clabAniNidStatusReportCircuitIdentifier.setStatus('current')
clabAniNidStatusReportCircuitTargetIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 4, 8, 1, 2, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clabAniNidStatusReportCircuitTargetIdentifier.setStatus('current')
clabAniNidMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 99, 1))
clabAniNidMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 4, 8, 99, 2))
clabAniNidCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 4, 8, 99, 1, 1)).setObjects(("CLAB-ANI-NID-MIB", "clabAniNidGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clabAniNidCompliance = clabAniNidCompliance.setStatus('current')
clabAniNidGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 4, 8, 99, 2, 1)).setObjects(("CLAB-ANI-NID-MIB", "clabAniNidCfgID"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgPtpMcastMac"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgTelnetEnabled"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgTftpEnabled"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgClientAuthStatus"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgAuthServerServiceType"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgPrimaryServerIpAddressType"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgPrimaryServerIpAddress"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgPrimaryServerPort"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgSecondaryServerIpAddressType"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgSecondaryServerIpAddress"), ("CLAB-ANI-NID-MIB", "clabAniNidCfgSecondaryServerPort"), ("CLAB-ANI-NID-MIB", "clabAniNidStatusAuthHistoryMaxTableSize"), ("CLAB-ANI-NID-MIB", "clabAniNidStatusAuthHistoryResults"), ("CLAB-ANI-NID-MIB", "clabAniNidStatusAuthHistoryServer"), ("CLAB-ANI-NID-MIB", "clabAniNidStatusReportCircuitIndex"), ("CLAB-ANI-NID-MIB", "clabAniNidStatusReportCircuitIdentifier"), ("CLAB-ANI-NID-MIB", "clabAniNidStatusReportCircuitTargetIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clabAniNidGroup = clabAniNidGroup.setStatus('current')
mibBuilder.exportSymbols("CLAB-ANI-NID-MIB", clabAniNidCfgSecondaryServerPort=clabAniNidCfgSecondaryServerPort, clabAniNidMibConformance=clabAniNidMibConformance, clabAniNidStatusAuthHistoryInitiationTime=clabAniNidStatusAuthHistoryInitiationTime, clabAniNidStatusAuthHistoryResults=clabAniNidStatusAuthHistoryResults, clabAniNidMibGroups=clabAniNidMibGroups, clabAniNidStatusAuthHistoryMaxTableSize=clabAniNidStatusAuthHistoryMaxTableSize, clabAniNidCompliance=clabAniNidCompliance, clabAniNidStatusReportCircuitIdentifier=clabAniNidStatusReportCircuitIdentifier, clabAniNidCfgAuthServerServiceType=clabAniNidCfgAuthServerServiceType, clabAniNidCfgObjects=clabAniNidCfgObjects, clabAniNidCfgSecondaryServerIpAddress=clabAniNidCfgSecondaryServerIpAddress, clabAniNidStatusAuthHistoryEntry=clabAniNidStatusAuthHistoryEntry, clabAniNidStatusAuthHistoryTable=clabAniNidStatusAuthHistoryTable, clabAniNidCfgPrimaryServerIpAddress=clabAniNidCfgPrimaryServerIpAddress, clabAniNidStatusReportCircuitTable=clabAniNidStatusReportCircuitTable, clabAniNidCfgPtpMcastMac=clabAniNidCfgPtpMcastMac, clabAniNidStatusAuthHistoryServer=clabAniNidStatusAuthHistoryServer, clabAniNidMibObjects=clabAniNidMibObjects, clabAniNidCfgTelnetEnabled=clabAniNidCfgTelnetEnabled, clabAniNidCfgID=clabAniNidCfgID, clabAniNidCfgTftpEnabled=clabAniNidCfgTftpEnabled, clabAniNidCfgPrimaryServerPort=clabAniNidCfgPrimaryServerPort, clabAniNidMibCompliances=clabAniNidMibCompliances, clabAniNidMib=clabAniNidMib, clabAniNidCfgSecondaryServerIpAddressType=clabAniNidCfgSecondaryServerIpAddressType, clabAniNidStatusReportCircuitEntry=clabAniNidStatusReportCircuitEntry, clabAniNidCfgPrimaryServerIpAddressType=clabAniNidCfgPrimaryServerIpAddressType, PYSNMP_MODULE_ID=clabAniNidMib, clabAniNidGroup=clabAniNidGroup, clabAniNidStatusObjects=clabAniNidStatusObjects, clabAniNidCfgClientAuthStatus=clabAniNidCfgClientAuthStatus, clabAniNidNotifications=clabAniNidNotifications, clabAniNidStatusReportCircuitTargetIdentifier=clabAniNidStatusReportCircuitTargetIdentifier, clabAniNidStatusReportCircuitIndex=clabAniNidStatusReportCircuitIndex)
