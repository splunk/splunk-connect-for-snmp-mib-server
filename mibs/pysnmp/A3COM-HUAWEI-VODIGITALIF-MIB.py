#
# PySNMP MIB module A3COM-HUAWEI-VODIGITALIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-VODIGITALIF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cVoice, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cVoice")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, Unsigned32, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, iso, MibIdentifier, NotificationType, Counter32, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Unsigned32", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "iso", "MibIdentifier", "NotificationType", "Counter32", "Gauge32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h3cVoiceDigitalInterface = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4))
h3cVoiceDigitalInterface.setRevisions(('2005-03-15 00:00',))
if mibBuilder.loadTexts: h3cVoiceDigitalInterface.setLastUpdated('200503150000Z')
if mibBuilder.loadTexts: h3cVoiceDigitalInterface.setOrganization('Huawei-3COM Technologies Co., Ltd.')
h3cVoDigitalIfCommonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1))
h3cVoDigitalIfCommonCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1), )
if mibBuilder.loadTexts: h3cVoDigitalIfCommonCfgTable.setStatus('current')
h3cVoDigitalIfCommonCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfCfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfCommonCfgEntry.setStatus('current')
h3cVoDIfCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfCfgPort.setStatus('current')
h3cVoDIfCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfCfgGroup.setStatus('current')
h3cVoDIfCfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1vi", 1), ("t1vi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfCfgBoardType.setStatus('current')
h3cVoDIfCfgSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("r2", 1), ("pri", 2), ("emImmediateStart", 3), ("emDelayStart", 4), ("emWinkStart", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfCfgSignalType.setStatus('current')
h3cVoDIfCfgTsInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfCfgTsInformation.setStatus('current')
h3cVoDIfCfgPortSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 1, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfCfgPortSubLine.setStatus('current')
h3cVoDigitalIfEMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2))
h3cVoDigitalIfEMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1), )
if mibBuilder.loadTexts: h3cVoDigitalIfEMCfgTable.setStatus('current')
h3cVoDigitalIfEMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfEMCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfEMCfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfEMCfgEntry.setStatus('current')
h3cVoDIfEMCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfEMCfgPort.setStatus('current')
h3cVoDIfEMCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfEMCfgGroup.setStatus('current')
h3cVoDIfEMCfgTimeoutInterDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMCfgTimeoutInterDigit.setStatus('current')
h3cVoDIfEMCfgTimeoutRinging = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMCfgTimeoutRinging.setStatus('current')
h3cVoDIfEMCfgTimeoutWaitDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMCfgTimeoutWaitDigit.setStatus('current')
h3cVoDIfEMCfgPortSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfEMCfgPortSubLine.setStatus('current')
h3cVoDigitalIfEMABCDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2), )
if mibBuilder.loadTexts: h3cVoDigitalIfEMABCDCfgTable.setStatus('current')
h3cVoDigitalIfEMABCDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfEMABCDCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfEMABCDCfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfEMABCDCfgEntry.setStatus('current')
h3cVoDIfEMABCDCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfEMABCDCfgPort.setStatus('current')
h3cVoDIfEMABCDCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfEMABCDCfgGroup.setStatus('current')
h3cVoDIfEMABCDRxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMABCDRxIdle.setStatus('current')
h3cVoDIfEMABCDRxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMABCDRxSeizure.setStatus('current')
h3cVoDIfEMABCDTxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMABCDTxIdle.setStatus('current')
h3cVoDIfEMABCDTxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMABCDTxSeizure.setStatus('current')
h3cVoDIFEMABCDSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 2, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIFEMABCDSubLine.setStatus('current')
h3cVoDigitalIfEMTimerTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4), )
if mibBuilder.loadTexts: h3cVoDigitalIfEMTimerTable.setStatus('current')
h3cVoDigitalIfEMTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfEMTimerPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfEMTimerGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfEMTimerEntry.setStatus('current')
h3cVoDIfEMTimerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfEMTimerPort.setStatus('current')
h3cVoDIfEMTimerGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfEMTimerGroup.setStatus('current')
h3cVoDIfEMTimerSendWink = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 4), Integer32().clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerSendWink.setStatus('current')
h3cVoDIfEMTimerWinkRising = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerWinkRising.setStatus('current')
h3cVoDIfEMTimerWinkHold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerWinkHold.setStatus('current')
h3cVoDIfEMTimerDialoutDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerDialoutDelay.setStatus('current')
h3cVoDIfEMTimerDelayRising = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerDelayRising.setStatus('current')
h3cVoDIfEMTimerDelayHold = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerDelayHold.setStatus('current')
h3cVoDIfEMTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerDtmf.setStatus('current')
h3cVoDIfEMTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfEMTimerDtmfInterval.setStatus('current')
h3cVoDIfEMTimerPortSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 2, 4, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfEMTimerPortSubLine.setStatus('current')
h3cVoDigitalIfR2Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3))
h3cVoDigitalIfR2CfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1), )
if mibBuilder.loadTexts: h3cVoDigitalIfR2CfgTable.setStatus('current')
h3cVoDigitalIfR2CfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2CfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2CfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfR2CfgEntry.setStatus('current')
h3cVoDIfR2CfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2CfgPort.setStatus('current')
h3cVoDIfR2CfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2CfgGroup.setStatus('current')
h3cVoDIfR2CfgCountryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("customer", 1), ("argentina", 2), ("australia", 3), ("bengal", 4), ("brazil", 5), ("china", 6), ("hongkong", 7), ("india", 8), ("indonesia", 9), ("itut", 10), ("korea", 11), ("malaysia", 12), ("mexico", 13), ("newzealand", 14), ("singapore", 15), ("thailand", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgCountryMode.setStatus('current')
h3cVoDIfR2CfgSpecialChar = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65, 66, 67, 68, 35, 42))).clone(namedValues=NamedValues(("null", 0), ("a", 65), ("b", 66), ("c", 67), ("d", 68), ("pound", 35), ("asterisk", 42)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSpecialChar.setStatus('current')
h3cVoDIfR2CfgSpecialSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(11, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSpecialSignal.setStatus('current')
h3cVoDIfR2CfgSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("min", 1), ("max", 2), ("minpoll", 3), ("maxpoll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSelectMode.setStatus('current')
h3cVoDIFR2CfgSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIFR2CfgSubLine.setStatus('current')
h3cVoDigitalIfR2ABCDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2), )
if mibBuilder.loadTexts: h3cVoDigitalIfR2ABCDCfgTable.setStatus('current')
h3cVoDigitalIfR2ABCDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2ABCDCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2ABCDCfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfR2ABCDCfgEntry.setStatus('current')
h3cVoDIfR2ABCDCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2ABCDCfgPort.setStatus('current')
h3cVoDIfR2ABCDCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2ABCDCfgGroup.setStatus('current')
h3cVoDIfR2ABCDReverseABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDReverseABCD.setStatus('current')
h3cVoDIfR2ABCDRenewABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRenewABCD.setStatus('current')
h3cVoDIfR2ABCDRxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxIdle.setStatus('current')
h3cVoDIfR2ABCDTxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxIdle.setStatus('current')
h3cVoDIfR2ABCDRxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxSeizure.setStatus('current')
h3cVoDIfR2ABCDTxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxSeizure.setStatus('current')
h3cVoDIfR2ABCDRxSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxSeizureAck.setStatus('current')
h3cVoDIfR2ABCDTxSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxSeizureAck.setStatus('current')
h3cVoDIfR2ABCDRxAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxAnswer.setStatus('current')
h3cVoDIfR2ABCDTxAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxAnswer.setStatus('current')
h3cVoDIfR2ABCDRxClearForward = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxClearForward.setStatus('current')
h3cVoDIfR2ABCDTxClearForward = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxClearForward.setStatus('current')
h3cVoDIfR2ABCDRxClearBack = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxClearBack.setStatus('current')
h3cVoDIfR2ABCDTxClearBack = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxClearBack.setStatus('current')
h3cVoDIfR2ABCDRxReleaseGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxReleaseGuard.setStatus('current')
h3cVoDIfR2ABCDTxReleaseGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxReleaseGuard.setStatus('current')
h3cVoDIfR2ABCDRxBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDRxBlocking.setStatus('current')
h3cVoDIfR2ABCDTxBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDTxBlocking.setStatus('current')
h3cVoDIfR2ABCDSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 2, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfR2ABCDSubLine.setStatus('current')
h3cVoDigitalIfR2MfcCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3), )
if mibBuilder.loadTexts: h3cVoDigitalIfR2MfcCfgTable.setStatus('current')
h3cVoDigitalIfR2MfcCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2MfcCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2MfcCfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfR2MfcCfgEntry.setStatus('current')
h3cVoDIfR2MfcCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2MfcCfgPort.setStatus('current')
h3cVoDIfR2MfcCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2MfcCfgGroup.setStatus('current')
h3cVoDIfR2BillingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2BillingCategory.setStatus('current')
h3cVoDIfR2CallingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CallingCategory.setStatus('current')
h3cVoDIfR2Congestion = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2Congestion.setStatus('current')
h3cVoDIfR2DemandRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2DemandRefused.setStatus('current')
h3cVoDIfR2DigitEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2DigitEnd.setStatus('current')
h3cVoDIfR2Nullnum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2Nullnum.setStatus('current')
h3cVoDIfR2ReqBillingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqBillingCategory.setStatus('current')
h3cVoDIfR2ReqCallingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqCallingCategory.setStatus('current')
h3cVoDIfR2ReqCurrentdigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqCurrentdigit.setStatus('current')
h3cVoDIfR2ReqFirstCallingnum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqFirstCallingnum.setStatus('current')
h3cVoDIfR2ReqFirstDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqFirstDigit.setStatus('current')
h3cVoDIfR2ReqNextCallednum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqNextCallednum.setStatus('current')
h3cVoDIfR2ReqNextCallingnum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqNextCallingnum.setStatus('current')
h3cVoDIfR2ReqLastFirstDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqLastFirstDigit.setStatus('current')
h3cVoDIfR2ReqLastSecondDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqLastSecondDigit.setStatus('current')
h3cVoDIfR2ReqLastThirdDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqLastThirdDigit.setStatus('current')
h3cVoDIfR2ReqSwitchGroupB = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqSwitchGroupB.setStatus('current')
h3cVoDIfR2SubscriberIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2SubscriberIdle.setStatus('current')
h3cVoDIfR2SubscriberBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2SubscriberBusy.setStatus('current')
h3cVoDIfR2ReqCallingnumOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqCallingnumOffset.setStatus('current')
h3cVoDIfR2CallCreateInA = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CallCreateInA.setStatus('current')
h3cVoDIfR2ReqFirstCalledNumInC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqFirstCalledNumInC.setStatus('current')
h3cVoDIfR2ReqCurCalledNumInC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqCurCalledNumInC.setStatus('current')
h3cVoDIfR2ReqCalledNumSwitchA = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqCalledNumSwitchA.setStatus('current')
h3cVoDIfR2ReqSpecialSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2ReqSpecialSignal.setStatus('current')
h3cVoDIfR2SubscriberCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2SubscriberCharge.setStatus('current')
h3cVoDIfR2SubscriberAbnormal = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2SubscriberAbnormal.setStatus('current')
h3cVoDIfR2Ani = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("all", 2), ("ka", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2Ani.setStatus('current')
h3cVoDIfR2SubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 3, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfR2SubLine.setStatus('current')
h3cVoDigitalIfR2TimerCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4), )
if mibBuilder.loadTexts: h3cVoDigitalIfR2TimerCfgTable.setStatus('current')
h3cVoDigitalIfR2TimerCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2TimeCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2TimeCfgGroup"))
if mibBuilder.loadTexts: h3cVoDigitalIfR2TimerCfgEntry.setStatus('current')
h3cVoDIfR2TimeCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2TimeCfgPort.setStatus('current')
h3cVoDIfR2TimeCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2TimeCfgGroup.setStatus('current')
h3cVoDIfR2CfgDebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDebounceTime.setStatus('current')
h3cVoDIfR2CfgSendringBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSendringBackTime.setStatus('current')
h3cVoDIfR2CfgSendringBusyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSendringBusyTime.setStatus('current')
h3cVoDIfR2PulseSignalPersistT = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2PulseSignalPersistT.setStatus('current')
h3cVoDIfR2CfgDlAnswerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlAnswerTime.setStatus('current')
h3cVoDIfR2CfgDlClearBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlClearBackTime.setStatus('current')
h3cVoDIfR2CfgDlClearForwardT = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlClearForwardT.setStatus('current')
h3cVoDIfR2CfgDlSeizureTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlSeizureTime.setStatus('current')
h3cVoDIfR2CfgDlReanswerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlReanswerTime.setStatus('current')
h3cVoDIfR2CfgDlRelGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlRelGuardTime.setStatus('current')
h3cVoDIfR2CfgMfcGroupBTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgMfcGroupBTime.setStatus('current')
h3cVoDIfR2CfgDTMFTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDTMFTime.setStatus('current')
h3cVoDIfR2TimeCfgSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 4, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfR2TimeCfgSubLine.setStatus('current')
h3cVoDIfR2CapabilityCfgTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5), )
if mibBuilder.loadTexts: h3cVoDIfR2CapabilityCfgTable.setStatus('current')
h3cVoDIfR2CapabilityCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2CapCfgPort"), (0, "A3COM-HUAWEI-VODIGITALIF-MIB", "h3cVoDIfR2CapCfgGroup"))
if mibBuilder.loadTexts: h3cVoDIfR2CapabilityCfgEntry.setStatus('current')
h3cVoDIfR2CapCfgPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2CapCfgPort.setStatus('current')
h3cVoDIfR2CapCfgGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: h3cVoDIfR2CapCfgGroup.setStatus('current')
h3cVoDIfR2CfgGroupB = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgGroupB.setStatus('current')
h3cVoDIfR2CfgClearForwardAck = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgClearForwardAck.setStatus('current')
h3cVoDIfR2CfgDlSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDlSeizureAck.setStatus('current')
h3cVoDIfR2CfgDTMF = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgDTMF.setStatus('current')
h3cVoDIfR2CfgAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgAnswer.setStatus('current')
h3cVoDIfR2CfgReanswer = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgReanswer.setStatus('current')
h3cVoDIfR2CfgFinalCallnum = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgFinalCallnum.setStatus('current')
h3cVoDIfR2CfgForceMetering = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgForceMetering.setStatus('current')
h3cVoDIfR2CfgSendRingBack = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSendRingBack.setStatus('current')
h3cVoDIfR2CfgSendRingBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoDIfR2CfgSendRingBusy.setStatus('current')
h3cVoDIfR2CapCfgSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 4, 3, 5, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVoDIfR2CapCfgSubLine.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-VODIGITALIF-MIB", h3cVoDIfR2ReqCurCalledNumInC=h3cVoDIfR2ReqCurCalledNumInC, h3cVoDIfR2CfgDlClearBackTime=h3cVoDIfR2CfgDlClearBackTime, h3cVoDIFR2CfgSubLine=h3cVoDIFR2CfgSubLine, h3cVoDIfEMCfgGroup=h3cVoDIfEMCfgGroup, h3cVoDIfR2Nullnum=h3cVoDIfR2Nullnum, h3cVoDIfR2BillingCategory=h3cVoDIfR2BillingCategory, h3cVoDigitalIfR2Objects=h3cVoDigitalIfR2Objects, h3cVoDIfR2CfgDlAnswerTime=h3cVoDIfR2CfgDlAnswerTime, h3cVoDIfR2CfgSpecialChar=h3cVoDIfR2CfgSpecialChar, h3cVoDIfR2CapabilityCfgTable=h3cVoDIfR2CapabilityCfgTable, h3cVoDIfR2CfgDlSeizureTime=h3cVoDIfR2CfgDlSeizureTime, h3cVoDIfCfgTsInformation=h3cVoDIfCfgTsInformation, h3cVoDIfR2ReqCallingnumOffset=h3cVoDIfR2ReqCallingnumOffset, h3cVoDIfR2CfgForceMetering=h3cVoDIfR2CfgForceMetering, h3cVoDIfR2ReqLastFirstDigit=h3cVoDIfR2ReqLastFirstDigit, h3cVoDIfEMTimerSendWink=h3cVoDIfEMTimerSendWink, h3cVoDIfR2CfgCountryMode=h3cVoDIfR2CfgCountryMode, h3cVoDIfR2ABCDTxSeizure=h3cVoDIfR2ABCDTxSeizure, h3cVoDIfR2CfgClearForwardAck=h3cVoDIfR2CfgClearForwardAck, h3cVoDIfEMCfgTimeoutWaitDigit=h3cVoDIfEMCfgTimeoutWaitDigit, h3cVoDIfR2CallCreateInA=h3cVoDIfR2CallCreateInA, h3cVoDIfR2ReqCurrentdigit=h3cVoDIfR2ReqCurrentdigit, h3cVoDIfR2ABCDRxClearForward=h3cVoDIfR2ABCDRxClearForward, h3cVoDigitalIfR2TimerCfgTable=h3cVoDigitalIfR2TimerCfgTable, h3cVoDIfR2ABCDTxAnswer=h3cVoDIfR2ABCDTxAnswer, h3cVoDIfR2CapCfgSubLine=h3cVoDIfR2CapCfgSubLine, h3cVoDIfEMTimerDialoutDelay=h3cVoDIfEMTimerDialoutDelay, h3cVoDIfR2CfgAnswer=h3cVoDIfR2CfgAnswer, h3cVoDIfR2CfgDlRelGuardTime=h3cVoDIfR2CfgDlRelGuardTime, h3cVoDIfR2CfgGroupB=h3cVoDIfR2CfgGroupB, h3cVoDIfEMABCDTxIdle=h3cVoDIfEMABCDTxIdle, h3cVoDIfR2ReqFirstCalledNumInC=h3cVoDIfR2ReqFirstCalledNumInC, h3cVoDIfR2ABCDRxSeizureAck=h3cVoDIfR2ABCDRxSeizureAck, h3cVoDIfEMTimerPort=h3cVoDIfEMTimerPort, h3cVoDIfR2ReqCalledNumSwitchA=h3cVoDIfR2ReqCalledNumSwitchA, h3cVoDIfR2MfcCfgPort=h3cVoDIfR2MfcCfgPort, h3cVoDIfR2CfgPort=h3cVoDIfR2CfgPort, h3cVoDIfEMTimerDtmf=h3cVoDIfEMTimerDtmf, h3cVoDIfCfgPortSubLine=h3cVoDIfCfgPortSubLine, h3cVoiceDigitalInterface=h3cVoiceDigitalInterface, h3cVoDIfEMTimerDtmfInterval=h3cVoDIfEMTimerDtmfInterval, h3cVoDIfR2ABCDTxIdle=h3cVoDIfR2ABCDTxIdle, h3cVoDIfEMTimerPortSubLine=h3cVoDIfEMTimerPortSubLine, h3cVoDIfR2CfgDlReanswerTime=h3cVoDIfR2CfgDlReanswerTime, h3cVoDIfEMTimerWinkRising=h3cVoDIfEMTimerWinkRising, h3cVoDIfR2CfgSelectMode=h3cVoDIfR2CfgSelectMode, h3cVoDigitalIfCommonObjects=h3cVoDigitalIfCommonObjects, h3cVoDIfR2SubscriberBusy=h3cVoDIfR2SubscriberBusy, h3cVoDIfR2CfgSendRingBusy=h3cVoDIfR2CfgSendRingBusy, h3cVoDIfR2CapabilityCfgEntry=h3cVoDIfR2CapabilityCfgEntry, h3cVoDIfR2CallingCategory=h3cVoDIfR2CallingCategory, h3cVoDIfR2SubLine=h3cVoDIfR2SubLine, h3cVoDIfR2DemandRefused=h3cVoDIfR2DemandRefused, h3cVoDIfCfgPort=h3cVoDIfCfgPort, h3cVoDIfR2Ani=h3cVoDIfR2Ani, h3cVoDIfR2DigitEnd=h3cVoDIfR2DigitEnd, h3cVoDIfR2ABCDRenewABCD=h3cVoDIfR2ABCDRenewABCD, h3cVoDIfEMABCDCfgGroup=h3cVoDIfEMABCDCfgGroup, h3cVoDIfR2SubscriberAbnormal=h3cVoDIfR2SubscriberAbnormal, h3cVoDIfR2CfgSpecialSignal=h3cVoDIfR2CfgSpecialSignal, h3cVoDigitalIfEMObjects=h3cVoDigitalIfEMObjects, h3cVoDIfR2CfgSendRingBack=h3cVoDIfR2CfgSendRingBack, h3cVoDigitalIfR2MfcCfgTable=h3cVoDigitalIfR2MfcCfgTable, h3cVoDigitalIfR2CfgTable=h3cVoDigitalIfR2CfgTable, h3cVoDIfR2ReqNextCallednum=h3cVoDIfR2ReqNextCallednum, h3cVoDIfEMABCDTxSeizure=h3cVoDIfEMABCDTxSeizure, h3cVoDIfEMTimerDelayHold=h3cVoDIfEMTimerDelayHold, h3cVoDIfEMABCDCfgPort=h3cVoDIfEMABCDCfgPort, h3cVoDIfR2ABCDRxAnswer=h3cVoDIfR2ABCDRxAnswer, h3cVoDIfR2ReqLastThirdDigit=h3cVoDIfR2ReqLastThirdDigit, h3cVoDIfCfgGroup=h3cVoDIfCfgGroup, h3cVoDigitalIfR2MfcCfgEntry=h3cVoDigitalIfR2MfcCfgEntry, h3cVoDigitalIfR2TimerCfgEntry=h3cVoDigitalIfR2TimerCfgEntry, h3cVoDIfR2ABCDRxBlocking=h3cVoDIfR2ABCDRxBlocking, h3cVoDigitalIfEMCfgEntry=h3cVoDigitalIfEMCfgEntry, h3cVoDIfR2ReqSpecialSignal=h3cVoDIfR2ReqSpecialSignal, h3cVoDIfR2ReqFirstDigit=h3cVoDIfR2ReqFirstDigit, h3cVoDIfR2SubscriberIdle=h3cVoDIfR2SubscriberIdle, h3cVoDIfR2ABCDTxReleaseGuard=h3cVoDIfR2ABCDTxReleaseGuard, h3cVoDigitalIfR2CfgEntry=h3cVoDigitalIfR2CfgEntry, h3cVoDIfR2Congestion=h3cVoDIfR2Congestion, h3cVoDIfR2ABCDRxSeizure=h3cVoDIfR2ABCDRxSeizure, h3cVoDigitalIfEMCfgTable=h3cVoDigitalIfEMCfgTable, h3cVoDIfR2CapCfgPort=h3cVoDIfR2CapCfgPort, h3cVoDIfEMABCDRxSeizure=h3cVoDIfEMABCDRxSeizure, h3cVoDIfR2SubscriberCharge=h3cVoDIfR2SubscriberCharge, h3cVoDigitalIfEMABCDCfgTable=h3cVoDigitalIfEMABCDCfgTable, h3cVoDigitalIfEMTimerTable=h3cVoDigitalIfEMTimerTable, h3cVoDIfEMTimerDelayRising=h3cVoDIfEMTimerDelayRising, h3cVoDIfR2TimeCfgPort=h3cVoDIfR2TimeCfgPort, h3cVoDIfEMCfgPort=h3cVoDIfEMCfgPort, h3cVoDIfEMABCDRxIdle=h3cVoDIfEMABCDRxIdle, h3cVoDIfR2CfgSendringBackTime=h3cVoDIfR2CfgSendringBackTime, h3cVoDIfEMCfgTimeoutRinging=h3cVoDIfEMCfgTimeoutRinging, h3cVoDIfR2ReqCallingCategory=h3cVoDIfR2ReqCallingCategory, h3cVoDIfR2TimeCfgGroup=h3cVoDIfR2TimeCfgGroup, h3cVoDIfR2ABCDCfgPort=h3cVoDIfR2ABCDCfgPort, h3cVoDIfR2ABCDCfgGroup=h3cVoDIfR2ABCDCfgGroup, h3cVoDIfR2CfgDlSeizureAck=h3cVoDIfR2CfgDlSeizureAck, h3cVoDIfEMCfgTimeoutInterDigit=h3cVoDIfEMCfgTimeoutInterDigit, h3cVoDIfR2ABCDTxClearBack=h3cVoDIfR2ABCDTxClearBack, h3cVoDIfR2PulseSignalPersistT=h3cVoDIfR2PulseSignalPersistT, h3cVoDIfR2CfgFinalCallnum=h3cVoDIfR2CfgFinalCallnum, h3cVoDigitalIfEMTimerEntry=h3cVoDigitalIfEMTimerEntry, h3cVoDIfR2ReqSwitchGroupB=h3cVoDIfR2ReqSwitchGroupB, h3cVoDIfCfgBoardType=h3cVoDIfCfgBoardType, PYSNMP_MODULE_ID=h3cVoiceDigitalInterface, h3cVoDIfR2CapCfgGroup=h3cVoDIfR2CapCfgGroup, h3cVoDIfR2CfgGroup=h3cVoDIfR2CfgGroup, h3cVoDIfR2ReqFirstCallingnum=h3cVoDIfR2ReqFirstCallingnum, h3cVoDigitalIfCommonCfgTable=h3cVoDigitalIfCommonCfgTable, h3cVoDIfR2ABCDRxReleaseGuard=h3cVoDIfR2ABCDRxReleaseGuard, h3cVoDIfEMTimerWinkHold=h3cVoDIfEMTimerWinkHold, h3cVoDIfR2CfgMfcGroupBTime=h3cVoDIfR2CfgMfcGroupBTime, h3cVoDigitalIfR2ABCDCfgTable=h3cVoDigitalIfR2ABCDCfgTable, h3cVoDIfR2ABCDRxIdle=h3cVoDIfR2ABCDRxIdle, h3cVoDIfR2ABCDTxClearForward=h3cVoDIfR2ABCDTxClearForward, h3cVoDIfR2CfgSendringBusyTime=h3cVoDIfR2CfgSendringBusyTime, h3cVoDIfR2ReqBillingCategory=h3cVoDIfR2ReqBillingCategory, h3cVoDIfR2CfgDebounceTime=h3cVoDIfR2CfgDebounceTime, h3cVoDIfR2CfgReanswer=h3cVoDIfR2CfgReanswer, h3cVoDIFEMABCDSubLine=h3cVoDIFEMABCDSubLine, h3cVoDIfCfgSignalType=h3cVoDIfCfgSignalType, h3cVoDIfR2CfgDTMF=h3cVoDIfR2CfgDTMF, h3cVoDigitalIfR2ABCDCfgEntry=h3cVoDigitalIfR2ABCDCfgEntry, h3cVoDIfR2ABCDSubLine=h3cVoDIfR2ABCDSubLine, h3cVoDIfEMCfgPortSubLine=h3cVoDIfEMCfgPortSubLine, h3cVoDIfR2ABCDReverseABCD=h3cVoDIfR2ABCDReverseABCD, h3cVoDIfR2ReqLastSecondDigit=h3cVoDIfR2ReqLastSecondDigit, h3cVoDIfR2ABCDTxBlocking=h3cVoDIfR2ABCDTxBlocking, h3cVoDigitalIfCommonCfgEntry=h3cVoDigitalIfCommonCfgEntry, h3cVoDIfR2ReqNextCallingnum=h3cVoDIfR2ReqNextCallingnum, h3cVoDIfR2CfgDlClearForwardT=h3cVoDIfR2CfgDlClearForwardT, h3cVoDIfR2MfcCfgGroup=h3cVoDIfR2MfcCfgGroup, h3cVoDIfEMTimerGroup=h3cVoDIfEMTimerGroup, h3cVoDIfR2TimeCfgSubLine=h3cVoDIfR2TimeCfgSubLine, h3cVoDIfR2ABCDRxClearBack=h3cVoDIfR2ABCDRxClearBack, h3cVoDigitalIfEMABCDCfgEntry=h3cVoDigitalIfEMABCDCfgEntry, h3cVoDIfR2CfgDTMFTime=h3cVoDIfR2CfgDTMFTime, h3cVoDIfR2ABCDTxSeizureAck=h3cVoDIfR2ABCDTxSeizureAck)
