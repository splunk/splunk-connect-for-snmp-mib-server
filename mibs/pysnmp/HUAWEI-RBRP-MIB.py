#
# PySNMP MIB module HUAWEI-RBRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-RBRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:36:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, iso, TimeTicks, Counter32, Counter64, Gauge32, MibIdentifier, ModuleIdentity, ObjectIdentity, Unsigned32, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "iso", "TimeTicks", "Counter32", "Counter64", "Gauge32", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "NotificationType", "Bits")
RowStatus, DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "MacAddress", "TextualConvention")
hwRBRPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117))
if mibBuilder.loadTexts: hwRBRPMIB.setLastUpdated('200703310130Z')
if mibBuilder.loadTexts: hwRBRPMIB.setOrganization('Huawei Technologies co.,Ltd.')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hwRBRPMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1))
hwRBRPLocalDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRBRPLocalDeviceID.setStatus('current')
hwRBRPWrapToNormalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2), )
if mibBuilder.loadTexts: hwRBRPWrapToNormalTable.setStatus('current')
hwRBRPWrapToNormalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPRingIfIndex"))
if mibBuilder.loadTexts: hwRBRPWrapToNormalEntry.setStatus('current')
hwRBRPRingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRBRPRingIfIndex.setStatus('current')
hwRBRPWrapToNormalVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRBRPWrapToNormalVal.setStatus('current')
hwRBRPGroupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3), )
if mibBuilder.loadTexts: hwRBRPGroupCfgTable.setStatus('current')
hwRBRPGroupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPGroupCfgGroupID"))
if mibBuilder.loadTexts: hwRBRPGroupCfgEntry.setStatus('current')
hwRBRPGroupCfgGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPGroupCfgGroupID.setStatus('current')
hwRBRPPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPPriorityValue.setStatus('current')
hwRBRPPreemptedEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 12), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPPreemptedEnable.setStatus('current')
hwRBRPStatePromptSwitchEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 13), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPStatePromptSwitchEnable.setStatus('current')
hwRBRPPreemptDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 1200)).clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPPreemptDelayValue.setStatus('current')
hwRBRPGroupCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPGroupCfgRowStatus.setStatus('current')
hwRBRPPGRingIfCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4), )
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgTable.setStatus('current')
hwRBRPPGRingIfCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPPGGroupID"), (0, "HUAWEI-RBRP-MIB", "hwRBRPRingType"))
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgEntry.setStatus('current')
hwRBRPPGGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPPGGroupID.setStatus('current')
hwRBRPRingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: hwRBRPRingType.setStatus('current')
hwRBRPRGRingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 11), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPRGRingIfIndex.setStatus('current')
hwRBRPGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPGroupRowStatus.setStatus('current')
hwRBRPPStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5), )
if mibBuilder.loadTexts: hwRBRPPStatisTable.setStatus('current')
hwRBRPPStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPStatisGroupID"))
if mibBuilder.loadTexts: hwRBRPPStatisEntry.setStatus('current')
hwRBRPStatisGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPStatisGroupID.setStatus('current')
hwRBRPStatisRevPacketsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisRevPacketsNum.setStatus('current')
hwRBRPStatisRevByteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisRevByteNum.setStatus('current')
hwRBRPStatisSendPacketsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisSendPacketsNum.setStatus('current')
hwRBRPStatisSendByteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisSendByteNum.setStatus('current')
hwRBRPClearStatisticPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 15), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRBRPClearStatisticPacket.setStatus('current')
hwRBRPGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6), )
if mibBuilder.loadTexts: hwRBRPGroupInfoTable.setStatus('current')
hwRBRPGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPGroupID"), (0, "HUAWEI-RBRP-MIB", "hwRBRPDeviceId"))
if mibBuilder.loadTexts: hwRBRPGroupInfoEntry.setStatus('current')
hwRBRPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPGroupID.setStatus('current')
hwRBRPDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwRBRPDeviceId.setStatus('current')
hwRBRPPrimaryRPRMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPPrimaryRPRMacAddress.setStatus('current')
hwRBRPSecondaryRPRMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPSecondaryRPRMacAddress.setStatus('current')
hwRBRPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPPriority.setStatus('current')
hwRBRPCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPCurrentStatus.setStatus('current')
hwRBRPTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2))
hwRBRPDeviceIDConflict = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2, 1)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPCurrentStatus"))
if mibBuilder.loadTexts: hwRBRPDeviceIDConflict.setStatus('current')
hwRBRPUnreadyStatus = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2, 2)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPPreemptedEnable"))
if mibBuilder.loadTexts: hwRBRPUnreadyStatus.setStatus('current')
hwRBRPClearUnreadyStatus = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2, 3)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPPreemptedEnable"))
if mibBuilder.loadTexts: hwRBRPClearUnreadyStatus.setStatus('current')
hwRBRPConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3))
hwRBRPGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1))
hwRBRPLoclaDeveceIDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 1)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPLocalDeviceID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPLoclaDeveceIDGroup = hwRBRPLoclaDeveceIDGroup.setStatus('current')
hwRBRPWrapToNormalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 2)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPWrapToNormalVal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPWrapToNormalGroup = hwRBRPWrapToNormalGroup.setStatus('current')
hwRBRPGroupCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 3)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPPriorityValue"), ("HUAWEI-RBRP-MIB", "hwRBRPPreemptDelayValue"), ("HUAWEI-RBRP-MIB", "hwRBRPGroupCfgRowStatus"), ("HUAWEI-RBRP-MIB", "hwRBRPStatePromptSwitchEnable"), ("HUAWEI-RBRP-MIB", "hwRBRPPreemptedEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPGroupCfgGroup = hwRBRPGroupCfgGroup.setStatus('current')
hwRBRPPGRingIfCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 4)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPRGRingIfIndex"), ("HUAWEI-RBRP-MIB", "hwRBRPGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPPGRingIfCfgGroup = hwRBRPPGRingIfCfgGroup.setStatus('current')
hwRBRPPStatisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 5)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPStatisRevPacketsNum"), ("HUAWEI-RBRP-MIB", "hwRBRPStatisRevByteNum"), ("HUAWEI-RBRP-MIB", "hwRBRPStatisSendPacketsNum"), ("HUAWEI-RBRP-MIB", "hwRBRPStatisSendByteNum"), ("HUAWEI-RBRP-MIB", "hwRBRPClearStatisticPacket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPPStatisGroup = hwRBRPPStatisGroup.setStatus('current')
hwRBRPGroupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 6)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPCurrentStatus"), ("HUAWEI-RBRP-MIB", "hwRBRPPriority"), ("HUAWEI-RBRP-MIB", "hwRBRPSecondaryRPRMacAddress"), ("HUAWEI-RBRP-MIB", "hwRBRPPrimaryRPRMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPGroupInfoGroup = hwRBRPGroupInfoGroup.setStatus('current')
hwRBRPTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 7)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPClearUnreadyStatus"), ("HUAWEI-RBRP-MIB", "hwRBRPDeviceIDConflict"), ("HUAWEI-RBRP-MIB", "hwRBRPUnreadyStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPTrapGroup = hwRBRPTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-RBRP-MIB", hwRBRPWrapToNormalGroup=hwRBRPWrapToNormalGroup, hwRBRPTrapGroup=hwRBRPTrapGroup, hwRBRPGroupCfgTable=hwRBRPGroupCfgTable, hwRBRPGroupInfoTable=hwRBRPGroupInfoTable, hwRBRPPStatisGroup=hwRBRPPStatisGroup, hwRBRPPGGroupID=hwRBRPPGGroupID, hwRBRPGroupCfgGroupID=hwRBRPGroupCfgGroupID, hwRBRPDeviceIDConflict=hwRBRPDeviceIDConflict, hwRBRPWrapToNormalVal=hwRBRPWrapToNormalVal, hwRBRPPGRingIfCfgEntry=hwRBRPPGRingIfCfgEntry, hwRBRPPStatisTable=hwRBRPPStatisTable, hwRBRPStatisSendPacketsNum=hwRBRPStatisSendPacketsNum, hwRBRPPriority=hwRBRPPriority, hwRBRPPreemptDelayValue=hwRBRPPreemptDelayValue, PYSNMP_MODULE_ID=hwRBRPMIB, hwRBRPClearStatisticPacket=hwRBRPClearStatisticPacket, hwRBRPWrapToNormalEntry=hwRBRPWrapToNormalEntry, hwRBRPPrimaryRPRMacAddress=hwRBRPPrimaryRPRMacAddress, hwRBRPGroupCfgGroup=hwRBRPGroupCfgGroup, hwRBRPCurrentStatus=hwRBRPCurrentStatus, hwRBRPLocalDeviceID=hwRBRPLocalDeviceID, hwRBRPStatePromptSwitchEnable=hwRBRPStatePromptSwitchEnable, hwRBRPUnreadyStatus=hwRBRPUnreadyStatus, EnabledStatus=EnabledStatus, hwRBRPStatisGroupID=hwRBRPStatisGroupID, hwRBRPMibObject=hwRBRPMibObject, hwRBRPStatisRevPacketsNum=hwRBRPStatisRevPacketsNum, hwRBRPPGRingIfCfgTable=hwRBRPPGRingIfCfgTable, hwRBRPGroupRowStatus=hwRBRPGroupRowStatus, hwRBRPConformance=hwRBRPConformance, hwRBRPTraps=hwRBRPTraps, hwRBRPPGRingIfCfgGroup=hwRBRPPGRingIfCfgGroup, hwRBRPGroupCfgEntry=hwRBRPGroupCfgEntry, hwRBRPMIB=hwRBRPMIB, hwRBRPGroupCfgRowStatus=hwRBRPGroupCfgRowStatus, hwRBRPLoclaDeveceIDGroup=hwRBRPLoclaDeveceIDGroup, hwRBRPRingType=hwRBRPRingType, hwRBRPStatisRevByteNum=hwRBRPStatisRevByteNum, hwRBRPPreemptedEnable=hwRBRPPreemptedEnable, hwRBRPDeviceId=hwRBRPDeviceId, hwRBRPGroupID=hwRBRPGroupID, hwRBRPClearUnreadyStatus=hwRBRPClearUnreadyStatus, hwRBRPPStatisEntry=hwRBRPPStatisEntry, hwRBRPStatisSendByteNum=hwRBRPStatisSendByteNum, hwRBRPPriorityValue=hwRBRPPriorityValue, hwRBRPRGRingIfIndex=hwRBRPRGRingIfIndex, hwRBRPGroups=hwRBRPGroups, hwRBRPGroupInfoEntry=hwRBRPGroupInfoEntry, hwRBRPGroupInfoGroup=hwRBRPGroupInfoGroup, hwRBRPWrapToNormalTable=hwRBRPWrapToNormalTable, hwRBRPSecondaryRPRMacAddress=hwRBRPSecondaryRPRMacAddress, hwRBRPRingIfIndex=hwRBRPRingIfIndex)
