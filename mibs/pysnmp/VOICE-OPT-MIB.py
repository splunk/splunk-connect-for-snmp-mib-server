#
# PySNMP MIB module VOICE-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VOICE-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, Unsigned32, TimeTicks, IpAddress, Counter32, ObjectIdentity, enterprises, Bits, MibIdentifier, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "Unsigned32", "TimeTicks", "IpAddress", "Counter32", "ObjectIdentity", "enterprises", "Bits", "MibIdentifier", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500CfgGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
cdx6500StatNetworkSvcsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4))
cdx6500Controls = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4))
class DisplayString(OctetString):
    pass

class PhysicalPortNumber(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 54)

cdx6500PCTVoicePortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25))
cdx6500PSTVoicePortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26))
cdx6500GCTVoiceSwitchTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21))
cdx6500PPCTVoicePortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1), )
if mibBuilder.loadTexts: cdx6500PPCTVoicePortTable.setStatus('mandatory')
cdx6500PPCTVoicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1), ).setIndexNames((0, "VOICE-OPT-MIB", "cdx6500VoiceCfgPortNumber"))
if mibBuilder.loadTexts: cdx6500PPCTVoicePortEntry.setStatus('mandatory')
cdx6500VoiceCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgPortNumber.setStatus('mandatory')
cdx6500VoiceCfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(43))).clone(namedValues=NamedValues(("voice", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgPortType.setStatus('mandatory')
cdx6500VoiceCfgInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("eAndM2", 1), ("eAndM4", 2), ("fxo", 3), ("fxs", 4), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgInterfaceType.setStatus('mandatory')
cdx6500VoiceCfgSignalingType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("i", 1), ("ii", 2), ("v", 3), ("iii", 4), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSignalingType.setStatus('mandatory')
cdx6500VoiceCfgELeadFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgELeadFilter.setStatus('mandatory')
cdx6500VoiceCfgHybridFXS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 8, 9, 100))).clone(namedValues=NamedValues(("sixHundred", 1), ("canada", 2), ("germany", 3), ("uk", 5), ("belgium", 8), ("france", 9), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgHybridFXS.setStatus('mandatory')
cdx6500VoiceCfgHybridEAndM2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 10, 100))).clone(namedValues=NamedValues(("sixHundred", 1), ("germany", 3), ("uk", 10), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgHybridEAndM2.setStatus('mandatory')
cdx6500VoiceCfgSignalingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("normal", 1), ("none", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSignalingMode.setStatus('mandatory')
cdx6500VoiceCfgSignalingControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 100))).clone(namedValues=NamedValues(("immediate", 1), ("wink", 2), ("transparent", 3), ("delay", 4), ("masterColisee", 5), ("slaveColisee", 6), ("seizureAcknowledge", 7), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSignalingControl.setStatus('mandatory')
cdx6500VoiceCfgNoOfDigitsToCollect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgNoOfDigitsToCollect.setStatus('deprecated')
cdx6500VoiceCfgNoOfRings = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgNoOfRings.setStatus('mandatory')
cdx6500VoiceCfgPCMMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("aLaw", 1), ("muLaw", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgPCMMode.setStatus('mandatory')
cdx6500VoiceCfgCompressionRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 12, 13, 100))).clone(namedValues=NamedValues(("cD8K", 1), ("cD16K", 2), ("cBD8K", 3), ("cBD16K", 4), ("cE8Kb", 12), ("cE16Kb", 13), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgCompressionRate.setStatus('mandatory')
cdx6500VoiceCfgDSIControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgDSIControl.setStatus('mandatory')
cdx6500VoiceCfgSmoothingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 150))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSmoothingDelay.setStatus('mandatory')
cdx6500VoiceCfgEchoControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgEchoControl.setStatus('mandatory')
cdx6500VoiceCfgEchoReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 100))).clone(namedValues=NamedValues(("minus3", 2), ("minus6", 3), ("minus9", 4), ("minus12", 5), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgEchoReturnLoss.setStatus('mandatory')
cdx6500VoiceCfgTxInputSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxInputSignalLevel.setStatus('mandatory')
cdx6500VoiceCfgRxOutputSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxOutputSignalLevel.setStatus('mandatory')
cdx6500VoiceCfgFaxSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFaxSupport.setStatus('mandatory')
cdx6500VoiceCfgFaxRates = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("fr9600", 1), ("fr4800", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFaxRates.setStatus('mandatory')
cdx6500VoiceCfgVoiceBandDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgVoiceBandDetection.setStatus('mandatory')
cdx6500VoiceCfgAutoCallMnemonic = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgAutoCallMnemonic.setStatus('mandatory')
cdx6500VoiceCfgCallControl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("offhook", 1), ("auto", 2), ("switched", 3), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgCallControl.setStatus('mandatory')
cdx6500VoiceCfgAutoCallTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgAutoCallTimeout.setStatus('mandatory')
cdx6500VoiceCfgCallRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgCallRetries.setStatus('mandatory')
cdx6500VoiceCfgGroupSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgGroupSubaddress.setStatus('mandatory')
cdx6500VoiceCfgBilling = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgBilling.setStatus('mandatory')
cdx6500VoiceCfgRxSignalingStateChangeFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxSignalingStateChangeFilter.setStatus('mandatory')
cdx6500VoiceCfgT1E1RxIdleOnhookState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgT1E1RxIdleOnhookState.setStatus('mandatory')
cdx6500VoiceCfgT1E1TxIdleOnhookState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgT1E1TxIdleOnhookState.setStatus('mandatory')
cdx6500VoiceCfgT1E1RxActiveOffhookState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgT1E1RxActiveOffhookState.setStatus('mandatory')
cdx6500VoiceCfgT1E1TxActiveOffhookState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgT1E1TxActiveOffhookState.setStatus('mandatory')
cdx6500VoiceCfgT1E1RingingState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgT1E1RingingState.setStatus('mandatory')
cdx6500VoiceCfgT1E1NoRingingState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgT1E1NoRingingState.setStatus('mandatory')
cdx6500VoiceCfgRxWinkStartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxWinkStartTimer.setStatus('mandatory')
cdx6500VoiceCfgRxMinimumReceiveWink = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMinimumReceiveWink.setStatus('mandatory')
cdx6500VoiceCfgRxCalledEndGlareDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxCalledEndGlareDetect.setStatus('mandatory')
cdx6500VoiceCfgRxFirstDigitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxFirstDigitTimer.setStatus('mandatory')
cdx6500VoiceCfgRxInterdigitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxInterdigitTimer.setStatus('mandatory')
cdx6500VoiceCfgTxWinkDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxWinkDelay.setStatus('mandatory')
cdx6500VoiceCfgTxWinkWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxWinkWidth.setStatus('mandatory')
cdx6500VoiceCfgTxDigitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxDigitDelay.setStatus('mandatory')
cdx6500VoiceCfgTxDigitOn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxDigitOn.setStatus('mandatory')
cdx6500VoiceCfgTxInterdigitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxInterdigitTime.setStatus('mandatory')
cdx6500VoiceCfgRxInterringWait = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxInterringWait.setStatus('mandatory')
cdx6500VoiceCfgRxRingStateChangeFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxRingStateChangeFilter.setStatus('mandatory')
cdx6500VoiceCfgTxRingerOffLong = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxRingerOffLong.setStatus('mandatory')
cdx6500VoiceCfgTxRingerOffShort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxRingerOffShort.setStatus('mandatory')
cdx6500VoiceCfgTxRingerOn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxRingerOn.setStatus('mandatory')
cdx6500VoiceCfgRxDisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxDisconnectTimer.setStatus('mandatory')
cdx6500VoiceCfgRxCalledEndDisconnectDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxCalledEndDisconnectDelayTimer.setStatus('mandatory')
cdx6500VoiceCfgLineErrorRecovery = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgLineErrorRecovery.setStatus('mandatory')
cdx6500VoiceCfgSignalingSampleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSignalingSampleRate.setStatus('mandatory')
cdx6500VoiceCfgWaitForParams = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgWaitForParams.setStatus('mandatory')
cdx6500VoiceCfgSpareTimer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSpareTimer1.setStatus('mandatory')
cdx6500VoiceCfgSpareTimer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSpareTimer2.setStatus('mandatory')
cdx6500VoiceCfgTxInterdigitPauseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxInterdigitPauseTime.setStatus('mandatory')
cdx6500VoiceCfgRxMinimumFlashHookTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMinimumFlashHookTime.setStatus('mandatory')
cdx6500VoiceCfgRxMaximumFlashHookTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMaximumFlashHookTime.setStatus('mandatory')
cdx6500VoiceCfgTransparentSignalingIdleState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 61), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTransparentSignalingIdleState.setStatus('mandatory')
cdx6500VoiceCfgTransparentRxDisconnectFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTransparentRxDisconnectFilter.setStatus('mandatory')
cdx6500VoiceCfgTransparentSignalingBusyoutState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 63), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTransparentSignalingBusyoutState.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0000FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0000FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1000FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1000FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0100FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 66), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0100FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1100FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 67), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1100FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0010FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0010FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1010FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1010FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0110FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0110FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1110FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 71), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1110FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0001FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 72), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0001FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1001FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 73), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1001FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0101FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 74), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0101FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1101FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 75), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1101FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0011FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 76), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0011FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1011FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 77), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1011FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo0111FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo0111FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgXlateSigInfo1111FromRemoteToLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 79), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgXlateSigInfo1111FromRemoteToLocalPort.setStatus('mandatory')
cdx6500VoiceCfgDialToneLowerFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgDialToneLowerFrequency.setStatus('mandatory')
cdx6500VoiceCfgDialToneLowerFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 81), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgDialToneLowerFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgDialToneUpperFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 82), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgDialToneUpperFrequency.setStatus('mandatory')
cdx6500VoiceCfgDialToneUpperFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 83), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgDialToneUpperFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgRingBackToneLowerFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 84), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRingBackToneLowerFrequency.setStatus('mandatory')
cdx6500VoiceCfgRingBackToneLowerFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 85), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRingBackToneLowerFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgRingBackToneUpperFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 86), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRingBackToneUpperFrequency.setStatus('mandatory')
cdx6500VoiceCfgRingBackToneUpperFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 87), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRingBackToneUpperFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgBusyToneLowerFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 88), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgBusyToneLowerFrequency.setStatus('mandatory')
cdx6500VoiceCfgBusyToneLowerFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 89), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgBusyToneLowerFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgBusyToneUpperFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 90), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgBusyToneUpperFrequency.setStatus('mandatory')
cdx6500VoiceCfgBusyToneUpperFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 91), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgBusyToneUpperFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgTxBusyToneOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 92), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxBusyToneOffTime.setStatus('mandatory')
cdx6500VoiceCfgTxBusyToneOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 93), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxBusyToneOnTime.setStatus('mandatory')
cdx6500VoiceCfgFastBusyToneLowerFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 94), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFastBusyToneLowerFrequency.setStatus('mandatory')
cdx6500VoiceCfgFastBusyToneLowerFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 95), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFastBusyToneLowerFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgFastBusyToneUpperFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 96), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFastBusyToneUpperFrequency.setStatus('mandatory')
cdx6500VoiceCfgFastBusyToneUpperFrequencyAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 97), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFastBusyToneUpperFrequencyAmplitude.setStatus('mandatory')
cdx6500VoiceCfgTxFastBusyToneOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 98), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxFastBusyToneOffTime.setStatus('mandatory')
cdx6500VoiceCfgTxFastBusyToneOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxFastBusyToneOnTime.setStatus('mandatory')
cdx6500VoiceCfgHybridFXO = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 11, 100))).clone(namedValues=NamedValues(("sixHundred", 1), ("adaptive", 11), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgHybridFXO.setStatus('mandatory')
cdx6500VoiceCfgTxPulse = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 101), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxPulse.setStatus('mandatory')
cdx6500VoiceCfgRxMinPulse = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMinPulse.setStatus('mandatory')
cdx6500VoiceCfgRxMaxPulse = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 103), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMaxPulse.setStatus('mandatory')
cdx6500VoiceCfgTxMasterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 104), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxMasterClear.setStatus('mandatory')
cdx6500VoiceCfgRxMinMasterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 105), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMinMasterClear.setStatus('mandatory')
cdx6500VoiceCfgRxMaxMasterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 106), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMaxMasterClear.setStatus('mandatory')
cdx6500VoiceCfgTxSlaveClear = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 107), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxSlaveClear.setStatus('mandatory')
cdx6500VoiceCfgRxMinSlaveClear = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 108), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMinSlaveClear.setStatus('mandatory')
cdx6500VoiceCfgRxMaxSlaveClear = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 109), Integer32().subtype(subtypeSpec=ValueRangeConstraint(400, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMaxSlaveClear.setStatus('mandatory')
cdx6500VoiceCfgTxSlaveRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 110), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxSlaveRelease.setStatus('mandatory')
cdx6500VoiceCfgRxMinSlaveRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 111), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMinSlaveRelease.setStatus('mandatory')
cdx6500VoiceCfgRxMaxSlaveRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 112), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxMaxSlaveRelease.setStatus('mandatory')
cdx6500VoiceCfgTxPTSTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 113), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxPTSTime.setStatus('mandatory')
cdx6500VoiceCfgRxPTSTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 114), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgRxPTSTime.setStatus('mandatory')
cdx6500VoiceCfgMasterGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 115), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgMasterGuard.setStatus('mandatory')
cdx6500VoiceCfgSlaveGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 116), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgSlaveGuard.setStatus('mandatory')
cdx6500VoiceCfgTxFlashHookTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 117), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgTxFlashHookTime.setStatus('mandatory')
cdx6500VoiceCfgDtmfAmplitude = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 118), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgDtmfAmplitude.setStatus('mandatory')
cdx6500VoiceCfgFXSOffhookFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 25, 1, 1, 119), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCfgFXSOffhookFilter.setStatus('mandatory')
cdx6500GGCTVoiceSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1), )
if mibBuilder.loadTexts: cdx6500GGCTVoiceSwitchTable.setStatus('mandatory')
cdx6500VoiceSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1), ).setIndexNames((0, "VOICE-OPT-MIB", "cdx6500VoiceSwitchEntryNumber"))
if mibBuilder.loadTexts: cdx6500VoiceSwitchEntry.setStatus('mandatory')
cdx6500VoiceSwitchRxDTMFDigitString = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchRxDTMFDigitString.setStatus('mandatory')
cdx6500VoiceSwitchNumRxDigitToReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchNumRxDigitToReceive.setStatus('mandatory')
cdx6500VoiceSwitchCallParam = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchCallParam.setStatus('mandatory')
cdx6500VoiceSwitchAlternateDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("deprecatedObj", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchAlternateDestination.setStatus('deprecated')
cdx6500VoiceSwitchCompressionOverrideRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 7, 8, 10, 11, 14, 15, 100))).clone(namedValues=NamedValues(("none", 6), ("cD8K", 7), ("cD16K", 8), ("cBD8K", 10), ("cBD16K", 11), ("cE8Kb", 14), ("cE16Kb", 15), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchCompressionOverrideRate.setStatus('mandatory')
cdx6500VoiceSwitchNumLeadingDigitToStrip = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchNumLeadingDigitToStrip.setStatus('mandatory')
cdx6500VoiceSwitchPreFixDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchPreFixDigits.setStatus('mandatory')
cdx6500VoiceSwitchPostFixDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchPostFixDigits.setStatus('deprecated')
cdx6500VoiceSwitchEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 21, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceSwitchEntryNumber.setStatus('mandatory')
cdx6500PPSTVoicePortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1), )
if mibBuilder.loadTexts: cdx6500PPSTVoicePortTable.setStatus('mandatory')
cdx6500PPSTVoicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1), ).setIndexNames((0, "VOICE-OPT-MIB", "cdx6500VoiceStatsPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTVoicePortEntry.setStatus('mandatory')
cdx6500VoiceStatsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsPortNumber.setStatus('mandatory')
cdx6500VoiceStatsPortInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eAndM2", 1), ("eAndM4", 2), ("fxo", 3), ("fxs", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsPortInterfaceType.setStatus('mandatory')
cdx6500VoiceStatsHWRevAndPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsHWRevAndPartNumber.setStatus('mandatory')
cdx6500VoiceStatsFortyEightVolts = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("none", 1), ("present", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsFortyEightVolts.setStatus('mandatory')
cdx6500VoiceStatsPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsPortState.setStatus('mandatory')
cdx6500VoiceStatsCircuitState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsCircuitState.setStatus('mandatory')
cdx6500VoiceStatsCurrentMode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("voice", 1), ("pcm", 2), ("fax", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsCurrentMode.setStatus('mandatory')
cdx6500VoiceStatsTimeOfLastStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsTimeOfLastStatReset.setStatus('mandatory')
cdx6500VoiceStatsCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsCallDuration.setStatus('mandatory')
cdx6500VoiceStatsTotalCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsTotalCallDuration.setStatus('mandatory')
cdx6500VoiceStatsPortUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsPortUtilization.setStatus('mandatory')
cdx6500VoiceStatsNumberOfCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsNumberOfCalls.setStatus('mandatory')
cdx6500VoiceStatsLastDigitsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastDigitsTransmitted.setStatus('mandatory')
cdx6500VoiceStatsLastDigitsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastDigitsReceived.setStatus('mandatory')
cdx6500VoiceStatsTxPacketDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsTxPacketDropped.setStatus('mandatory')
cdx6500VoiceStatsRxPacketDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsRxPacketDropped.setStatus('mandatory')
cdx6500VoiceStatsDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsDroppedPackets.setStatus('mandatory')
cdx6500VoiceStatsDSPInternalFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsDSPInternalFaults.setStatus('mandatory')
cdx6500VoiceStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsTxPackets.setStatus('mandatory')
cdx6500VoiceStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsRxPackets.setStatus('mandatory')
cdx6500VoiceStatsTxPacketsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsTxPacketsPerSecond.setStatus('mandatory')
cdx6500VoiceStatsRxPacketsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsRxPacketsPerSecond.setStatus('mandatory')
cdx6500VoiceStatsDSIEfficiency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsDSIEfficiency.setStatus('mandatory')
cdx6500VoiceStatsCurrentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100))).clone(namedValues=NamedValues(("cD8K", 1), ("cBD8K", 2), ("cE8Kb", 3), ("cD16K", 4), ("cBD16K", 5), ("cE16Kb", 6), ("cPcm", 7), ("cFax", 8), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsCurrentRate.setStatus('mandatory')
cdx6500VoiceStatsInputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsInputPower.setStatus('mandatory')
cdx6500VoiceStatsOutputPower = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsOutputPower.setStatus('mandatory')
cdx6500VoiceStatsFAXTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsFAXTransmissions.setStatus('mandatory')
cdx6500VoiceStatsUnsupportedFmtsFAXXmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsUnsupportedFmtsFAXXmissions.setStatus('mandatory')
cdx6500PPSTSignalingSequenceTrapTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapTxState.setStatus('deprecated')
cdx6500PPSTSignalingSequenceTrapRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapRxState.setStatus('deprecated')
cdx6500PPSTSignalingSequenceTrapMachineState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapMachineState.setStatus('deprecated')
cdx6500PPSTSignalingSequenceTrapTimeSinceLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapTimeSinceLastChange.setStatus('deprecated')
cdx6500PPSTSignalingSequenceTrapComment = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapComment.setStatus('deprecated')
cdx6500VoiceStatsCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("inhibited", 1), ("disconnected", 2), ("calling", 3), ("called", 4), ("connected", 5), ("null", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsCurrentStatus.setStatus('mandatory')
cdx6500VoiceStatsLastClearCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastClearCauseCode.setStatus('mandatory')
cdx6500VoiceStatsLastClearDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastClearDiagnosticCode.setStatus('mandatory')
cdx6500VoiceStatsLastInboundCallPacketCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastInboundCallPacketCalledAddress.setStatus('mandatory')
cdx6500VoiceStatsLastInboundCallPacketCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastInboundCallPacketCallingAddress.setStatus('mandatory')
cdx6500VoiceStatsLastInboundCallPacketFacilities = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 105))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastInboundCallPacketFacilities.setStatus('mandatory')
cdx6500VoiceStatsLastInboundCallPacketCUD = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastInboundCallPacketCUD.setStatus('mandatory')
cdx6500VoiceStatsLastOutboundCallPacketCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastOutboundCallPacketCalledAddress.setStatus('mandatory')
cdx6500VoiceStatsLastOutboundCallPacketCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastOutboundCallPacketCallingAddress.setStatus('mandatory')
cdx6500VoiceStatsLastOutboundCallPacketFacilities = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 105))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastOutboundCallPacketFacilities.setStatus('mandatory')
cdx6500VoiceStatsLastOutboundCallPacketCUD = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsLastOutboundCallPacketCUD.setStatus('mandatory')
cdx6500VoiceStatsRingerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("rs25Hz", 1), ("rs50Hz", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsRingerStatus.setStatus('mandatory')
cdx6500VoiceStatsDSPMSMSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsDSPMSMSlotNumber.setStatus('mandatory')
cdx6500VoiceStatsDSPMNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsDSPMNumber.setStatus('mandatory')
cdx6500VoiceStatsT1E1PortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsT1E1PortNumber.setStatus('mandatory')
cdx6500VoiceStatsTimeSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsTimeSlotNumber.setStatus('mandatory')
cdx6500VoiceStatsDaughterCardRevAndPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsDaughterCardRevAndPartNumber.setStatus('mandatory')
cdx6500VoiceStatsVADEfficiency = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsVADEfficiency.setStatus('mandatory')
cdx6500VoiceStatsMeanDelayDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsMeanDelayDeviation.setStatus('mandatory')
cdx6500VoiceStatsMaxDelayDeviation = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsMaxDelayDeviation.setStatus('mandatory')
cdx6500VoiceStatsPktRecResync = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceStatsPktRecResync.setStatus('mandatory')
cdx6500VoiceCallStatsNoPacketDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsNoPacketDropped.setStatus('mandatory')
cdx6500VoiceCallStatsNoCallsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 56), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsNoCallsDropped.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason0 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 57), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason0.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 58), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason1.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason3 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 59), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason3.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason5 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 60), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason5.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason9 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 61), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason9.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason11 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 62), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason11.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason13 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 63), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason13.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason17 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 64), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason17.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason19 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 65), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason19.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason21 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 66), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason21.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason33 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 67), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason33.setStatus('mandatory')
cdx6500VoiceCallStatsDroppedReason_Rest = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 1, 1, 68), DisplayString()).setLabel("cdx6500VoiceCallStatsDroppedReason-Rest").setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500VoiceCallStatsDroppedReason_Rest.setStatus('mandatory')
cdx6500PPSTSignalingSequenceTrapTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2), )
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapTable.setStatus('mandatory')
cdx6500PPSTSignalingSequenceTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1), ).setIndexNames((0, "VOICE-OPT-MIB", "cdx6500SignalingSequenceTrapPortNumber"), (0, "VOICE-OPT-MIB", "cdx6500SignalingSequenceTrapEventNumber"))
if mibBuilder.loadTexts: cdx6500PPSTSignalingSequenceTrapEntry.setStatus('mandatory')
cdx6500SignalingSequenceTrapPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapPortNumber.setStatus('mandatory')
cdx6500SignalingSequenceTrapEventNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapEventNumber.setStatus('mandatory')
cdx6500SignalingSequenceTrapTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapTxState.setStatus('mandatory')
cdx6500SignalingSequenceTrapRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapRxState.setStatus('mandatory')
cdx6500SignalingSequenceTrapMachineState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapMachineState.setStatus('mandatory')
cdx6500SignalingSequenceTrapTimeSinceLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapTimeSinceLastChange.setStatus('mandatory')
cdx6500SignalingSequenceTrapComment = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 26, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500SignalingSequenceTrapComment.setStatus('mandatory')
cdx6500StatVCSTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4), )
if mibBuilder.loadTexts: cdx6500StatVCSTable.setStatus('mandatory')
cdx6500StatVCSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1), ).setIndexNames((0, "VOICE-OPT-MIB", "cdx6500StatVCSIndex"))
if mibBuilder.loadTexts: cdx6500StatVCSEntry.setStatus('mandatory')
cdx6500StatVCSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSIndex.setStatus('mandatory')
cdx6500StatVCSTime = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSTime.setStatus('mandatory')
cdx6500StatVCSNoPacketDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSNoPacketDropped.setStatus('mandatory')
cdx6500StatVCSNoCallsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSNoCallsDropped.setStatus('mandatory')
cdx6500StatVCSDroppedReasons = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSDroppedReasons.setStatus('mandatory')
cdx6500StatVCSNoCallsProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSNoCallsProcessed.setStatus('mandatory')
cdx6500StatVCSPercentPeakAvgCurOfCPULoad = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSPercentPeakAvgCurOfCPULoad.setStatus('mandatory')
cdx6500StatVCSPercentPeakAvgCurOfDataBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSPercentPeakAvgCurOfDataBuf.setStatus('mandatory')
cdx6500StatVCSPercentPeakAvgCurOfIORBBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 4, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500StatVCSPercentPeakAvgCurOfIORBBuf.setStatus('mandatory')
mibBuilder.exportSymbols("VOICE-OPT-MIB", cdx6500VoiceCfgTxDigitOn=cdx6500VoiceCfgTxDigitOn, cdx6500VoiceCfgXlateSigInfo1111FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1111FromRemoteToLocalPort, cdx6500VoiceCfgRxMinimumReceiveWink=cdx6500VoiceCfgRxMinimumReceiveWink, cdx6500VoiceSwitchCallParam=cdx6500VoiceSwitchCallParam, cdx6500VoiceCfgXlateSigInfo1101FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1101FromRemoteToLocalPort, cdx6500VoiceCfgXlateSigInfo1001FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1001FromRemoteToLocalPort, cdx6500VoiceCfgDialToneUpperFrequencyAmplitude=cdx6500VoiceCfgDialToneUpperFrequencyAmplitude, cdx6500VoiceCfgRxMaxSlaveRelease=cdx6500VoiceCfgRxMaxSlaveRelease, cdx6500VoiceCfgFastBusyToneUpperFrequencyAmplitude=cdx6500VoiceCfgFastBusyToneUpperFrequencyAmplitude, cdx6500VoiceSwitchNumRxDigitToReceive=cdx6500VoiceSwitchNumRxDigitToReceive, cdx6500VoiceStatsPortInterfaceType=cdx6500VoiceStatsPortInterfaceType, cdx6500VoiceStatsNumberOfCalls=cdx6500VoiceStatsNumberOfCalls, cdx6500VoiceStatsVADEfficiency=cdx6500VoiceStatsVADEfficiency, cdx6500VoiceCallStatsNoPacketDropped=cdx6500VoiceCallStatsNoPacketDropped, cdx6500StatVCSTime=cdx6500StatVCSTime, cdx6500VoiceSwitchPostFixDigits=cdx6500VoiceSwitchPostFixDigits, cdx6500VoiceStatsPortNumber=cdx6500VoiceStatsPortNumber, cdx6500VoiceStatsRxPacketsPerSecond=cdx6500VoiceStatsRxPacketsPerSecond, cdx6500VoiceSwitchEntry=cdx6500VoiceSwitchEntry, cdx6500PSTVoicePortTable=cdx6500PSTVoicePortTable, cdx6500VoiceStatsCurrentStatus=cdx6500VoiceStatsCurrentStatus, cdx6500StatVCSTable=cdx6500StatVCSTable, cdx6500VoiceSwitchEntryNumber=cdx6500VoiceSwitchEntryNumber, cdx6500GCTVoiceSwitchTable=cdx6500GCTVoiceSwitchTable, cdx6500VoiceCfgRxMinPulse=cdx6500VoiceCfgRxMinPulse, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, cdx6500VoiceCfgCallRetries=cdx6500VoiceCfgCallRetries, cdx6500VoiceCallStatsNoCallsDropped=cdx6500VoiceCallStatsNoCallsDropped, cdx6500VoiceCfgTxFastBusyToneOnTime=cdx6500VoiceCfgTxFastBusyToneOnTime, cdxProductSpecific=cdxProductSpecific, cdx6500VoiceStatsCallDuration=cdx6500VoiceStatsCallDuration, cdx6500VoiceCfgDialToneUpperFrequency=cdx6500VoiceCfgDialToneUpperFrequency, cdx6500VoiceStatsT1E1PortNumber=cdx6500VoiceStatsT1E1PortNumber, cdx6500VoiceStatsTotalCallDuration=cdx6500VoiceStatsTotalCallDuration, cdx6500VoiceCfgRxMaximumFlashHookTime=cdx6500VoiceCfgRxMaximumFlashHookTime, PhysicalPortNumber=PhysicalPortNumber, cdx6500VoiceCfgHybridFXO=cdx6500VoiceCfgHybridFXO, cdx6500VoiceStatsPortUtilization=cdx6500VoiceStatsPortUtilization, cdx6500StatVCSEntry=cdx6500StatVCSEntry, cdx6500VoiceCfgCallControl=cdx6500VoiceCfgCallControl, cdx6500VoiceStatsFAXTransmissions=cdx6500VoiceStatsFAXTransmissions, cdx6500GGCTVoiceSwitchTable=cdx6500GGCTVoiceSwitchTable, cdx6500VoiceSwitchAlternateDestination=cdx6500VoiceSwitchAlternateDestination, cdx6500VoiceCfgXlateSigInfo0111FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0111FromRemoteToLocalPort, cdx6500VoiceCfgCompressionRate=cdx6500VoiceCfgCompressionRate, cdx6500PPCTVoicePortTable=cdx6500PPCTVoicePortTable, cdx6500StatVCSPercentPeakAvgCurOfIORBBuf=cdx6500StatVCSPercentPeakAvgCurOfIORBBuf, cdx6500VoiceCfgT1E1NoRingingState=cdx6500VoiceCfgT1E1NoRingingState, cdx6500VoiceStatsLastInboundCallPacketFacilities=cdx6500VoiceStatsLastInboundCallPacketFacilities, cdx6500VoiceCfgSignalingType=cdx6500VoiceCfgSignalingType, cdx6500VoiceCfgRingBackToneUpperFrequencyAmplitude=cdx6500VoiceCfgRingBackToneUpperFrequencyAmplitude, cdx6500VoiceCfgFXSOffhookFilter=cdx6500VoiceCfgFXSOffhookFilter, cdx6500VoiceCfgBusyToneUpperFrequency=cdx6500VoiceCfgBusyToneUpperFrequency, cdx6500VoiceCallStatsDroppedReason17=cdx6500VoiceCallStatsDroppedReason17, cdx6500VoiceCfgNoOfDigitsToCollect=cdx6500VoiceCfgNoOfDigitsToCollect, cdx6500CfgGeneralGroup=cdx6500CfgGeneralGroup, cdx6500VoiceStatsHWRevAndPartNumber=cdx6500VoiceStatsHWRevAndPartNumber, cdx6500VoiceStatsDroppedPackets=cdx6500VoiceStatsDroppedPackets, cdx6500VoiceSwitchPreFixDigits=cdx6500VoiceSwitchPreFixDigits, cdx6500Configuration=cdx6500Configuration, cdx6500VoiceStatsInputPower=cdx6500VoiceStatsInputPower, cdx6500VoiceCfgPortNumber=cdx6500VoiceCfgPortNumber, cdx6500Controls=cdx6500Controls, cdx6500PPSTSignalingSequenceTrapTxState=cdx6500PPSTSignalingSequenceTrapTxState, cdx6500VoiceCfgELeadFilter=cdx6500VoiceCfgELeadFilter, cdx6500VoiceCfgDtmfAmplitude=cdx6500VoiceCfgDtmfAmplitude, cdx6500VoiceStatsLastInboundCallPacketCUD=cdx6500VoiceStatsLastInboundCallPacketCUD, cdx6500VoiceStatsLastDigitsReceived=cdx6500VoiceStatsLastDigitsReceived, cdx6500VoiceCfgTxBusyToneOnTime=cdx6500VoiceCfgTxBusyToneOnTime, cdx6500VoiceStatsCurrentRate=cdx6500VoiceStatsCurrentRate, cdx6500VoiceCallStatsDroppedReason11=cdx6500VoiceCallStatsDroppedReason11, cdx6500StatVCSNoPacketDropped=cdx6500StatVCSNoPacketDropped, DisplayString=DisplayString, cdx6500VoiceStatsTxPacketsPerSecond=cdx6500VoiceStatsTxPacketsPerSecond, cdx6500SignalingSequenceTrapTimeSinceLastChange=cdx6500SignalingSequenceTrapTimeSinceLastChange, cdx6500VoiceCfgBilling=cdx6500VoiceCfgBilling, cdx6500VoiceCallStatsDroppedReason0=cdx6500VoiceCallStatsDroppedReason0, cdx6500VoiceCfgBusyToneLowerFrequencyAmplitude=cdx6500VoiceCfgBusyToneLowerFrequencyAmplitude, cdx6500VoiceCfgXlateSigInfo0110FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0110FromRemoteToLocalPort, cdx6500VoiceStatsMaxDelayDeviation=cdx6500VoiceStatsMaxDelayDeviation, cdx6500PCTVoicePortTable=cdx6500PCTVoicePortTable, cdx6500VoiceStatsDSPInternalFaults=cdx6500VoiceStatsDSPInternalFaults, cdx6500VoiceSwitchRxDTMFDigitString=cdx6500VoiceSwitchRxDTMFDigitString, cdx6500PPSTSignalingSequenceTrapTable=cdx6500PPSTSignalingSequenceTrapTable, cdx6500VoiceStatsCircuitState=cdx6500VoiceStatsCircuitState, cdx6500VoiceStatsTxPackets=cdx6500VoiceStatsTxPackets, cdx6500VoiceCfgTxSlaveRelease=cdx6500VoiceCfgTxSlaveRelease, cdx6500VoiceCfgEchoControl=cdx6500VoiceCfgEchoControl, cdx6500PPSTSignalingSequenceTrapMachineState=cdx6500PPSTSignalingSequenceTrapMachineState, cdx6500VoiceCfgSlaveGuard=cdx6500VoiceCfgSlaveGuard, cdx6500VoiceCfgRxPTSTime=cdx6500VoiceCfgRxPTSTime, cdx6500VoiceCfgAutoCallMnemonic=cdx6500VoiceCfgAutoCallMnemonic, cdx6500VoiceCallStatsDroppedReason1=cdx6500VoiceCallStatsDroppedReason1, cdx6500VoiceCfgRxMinimumFlashHookTime=cdx6500VoiceCfgRxMinimumFlashHookTime, cdx6500VoiceStatsDSPMSMSlotNumber=cdx6500VoiceStatsDSPMSMSlotNumber, cdx6500SignalingSequenceTrapPortNumber=cdx6500SignalingSequenceTrapPortNumber, cdx6500VoiceCfgNoOfRings=cdx6500VoiceCfgNoOfRings, cdx6500VoiceStatsLastOutboundCallPacketCUD=cdx6500VoiceStatsLastOutboundCallPacketCUD, cdx6500SignalingSequenceTrapTxState=cdx6500SignalingSequenceTrapTxState, cdx6500VoiceCfgRxInterringWait=cdx6500VoiceCfgRxInterringWait, cdx6500VoiceCfgAutoCallTimeout=cdx6500VoiceCfgAutoCallTimeout, cdx6500PPSTVoicePortTable=cdx6500PPSTVoicePortTable, cdx6500VoiceCfgFastBusyToneUpperFrequency=cdx6500VoiceCfgFastBusyToneUpperFrequency, cdx6500VoiceCfgT1E1RxActiveOffhookState=cdx6500VoiceCfgT1E1RxActiveOffhookState, cdx6500VoiceCfgRxSignalingStateChangeFilter=cdx6500VoiceCfgRxSignalingStateChangeFilter, cdx6500VoiceStatsRxPackets=cdx6500VoiceStatsRxPackets, cdx6500VoiceStatsLastClearCauseCode=cdx6500VoiceStatsLastClearCauseCode, cdx6500StatNetworkSvcsGroup=cdx6500StatNetworkSvcsGroup, cdx6500VoiceCfgFaxSupport=cdx6500VoiceCfgFaxSupport, cdx6500VoiceCfgSmoothingDelay=cdx6500VoiceCfgSmoothingDelay, cdx6500VoiceStatsLastInboundCallPacketCalledAddress=cdx6500VoiceStatsLastInboundCallPacketCalledAddress, cdx6500VoiceCfgTxRingerOffShort=cdx6500VoiceCfgTxRingerOffShort, cdx6500VoiceCfgT1E1TxIdleOnhookState=cdx6500VoiceCfgT1E1TxIdleOnhookState, cdx6500VoiceCfgRxCalledEndGlareDetect=cdx6500VoiceCfgRxCalledEndGlareDetect, cdx6500VoiceCfgTxInterdigitPauseTime=cdx6500VoiceCfgTxInterdigitPauseTime, cdx6500StatVCSNoCallsDropped=cdx6500StatVCSNoCallsDropped, cdx6500VoiceCfgTxDigitDelay=cdx6500VoiceCfgTxDigitDelay, cdx6500PPSTSignalingSequenceTrapComment=cdx6500PPSTSignalingSequenceTrapComment, cdx6500VoiceCfgSignalingMode=cdx6500VoiceCfgSignalingMode, cdx6500VoiceCfgXlateSigInfo1010FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1010FromRemoteToLocalPort, cdx6500VoiceCfgTransparentRxDisconnectFilter=cdx6500VoiceCfgTransparentRxDisconnectFilter, cdx6500VoiceStatsFortyEightVolts=cdx6500VoiceStatsFortyEightVolts, cdx6500VoiceCallStatsDroppedReason33=cdx6500VoiceCallStatsDroppedReason33, cdx6500VoiceCfgInterfaceType=cdx6500VoiceCfgInterfaceType, cdx6500VoiceCfgPortType=cdx6500VoiceCfgPortType, cdx6500VoiceCfgXlateSigInfo1000FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1000FromRemoteToLocalPort, cdx6500VoiceCfgTxFastBusyToneOffTime=cdx6500VoiceCfgTxFastBusyToneOffTime, cdx6500VoiceCfgRxCalledEndDisconnectDelayTimer=cdx6500VoiceCfgRxCalledEndDisconnectDelayTimer, cdx6500VoiceCfgRxMaxPulse=cdx6500VoiceCfgRxMaxPulse, cdx6500VoiceStatsTimeOfLastStatReset=cdx6500VoiceStatsTimeOfLastStatReset, cdx6500VoiceCfgRxDisconnectTimer=cdx6500VoiceCfgRxDisconnectTimer, cdx6500VoiceStatsLastOutboundCallPacketFacilities=cdx6500VoiceStatsLastOutboundCallPacketFacilities, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500VoiceCfgT1E1RxIdleOnhookState=cdx6500VoiceCfgT1E1RxIdleOnhookState, cdx6500VoiceCfgRxFirstDigitTimer=cdx6500VoiceCfgRxFirstDigitTimer, cdx6500VoiceCfgRingBackToneLowerFrequencyAmplitude=cdx6500VoiceCfgRingBackToneLowerFrequencyAmplitude, cdx6500StatVCSPercentPeakAvgCurOfCPULoad=cdx6500StatVCSPercentPeakAvgCurOfCPULoad, cdx6500VoiceCfgTxMasterClear=cdx6500VoiceCfgTxMasterClear, cdx6500VoiceCfgTxPulse=cdx6500VoiceCfgTxPulse, cdx6500VoiceCfgTransparentSignalingIdleState=cdx6500VoiceCfgTransparentSignalingIdleState, cdx6500VoiceStatsCurrentMode=cdx6500VoiceStatsCurrentMode, cdx6500VoiceCfgT1E1TxActiveOffhookState=cdx6500VoiceCfgT1E1TxActiveOffhookState, cdx6500VoiceCfgRxMinSlaveClear=cdx6500VoiceCfgRxMinSlaveClear, cdx6500VoiceCfgXlateSigInfo0000FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0000FromRemoteToLocalPort, cdx6500VoiceCallStatsDroppedReason_Rest=cdx6500VoiceCallStatsDroppedReason_Rest, cdx6500VoiceCfgRxOutputSignalLevel=cdx6500VoiceCfgRxOutputSignalLevel, cdx6500VoiceCfgTxWinkWidth=cdx6500VoiceCfgTxWinkWidth, cdx6500SignalingSequenceTrapMachineState=cdx6500SignalingSequenceTrapMachineState, cdx6500VoiceCfgXlateSigInfo0101FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0101FromRemoteToLocalPort, cdx6500SignalingSequenceTrapComment=cdx6500SignalingSequenceTrapComment, cdx6500VoiceCfgT1E1RingingState=cdx6500VoiceCfgT1E1RingingState, cdx6500VoiceStatsDSIEfficiency=cdx6500VoiceStatsDSIEfficiency, cdx6500VoiceStatsRxPacketDropped=cdx6500VoiceStatsRxPacketDropped, cdx6500PPSTSignalingSequenceTrapTimeSinceLastChange=cdx6500PPSTSignalingSequenceTrapTimeSinceLastChange, cdx6500VoiceStatsLastInboundCallPacketCallingAddress=cdx6500VoiceStatsLastInboundCallPacketCallingAddress, cdx6500VoiceStatsPktRecResync=cdx6500VoiceStatsPktRecResync, cdx6500VoiceCfgRxWinkStartTimer=cdx6500VoiceCfgRxWinkStartTimer, cdx6500VoiceCfgRxMinSlaveRelease=cdx6500VoiceCfgRxMinSlaveRelease, cdx6500VoiceStatsOutputPower=cdx6500VoiceStatsOutputPower, cdx6500VoiceCfgFaxRates=cdx6500VoiceCfgFaxRates, cdx6500VoiceCfgXlateSigInfo1011FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1011FromRemoteToLocalPort, cdx6500PPSTVoicePortEntry=cdx6500PPSTVoicePortEntry, cdx6500VoiceStatsLastDigitsTransmitted=cdx6500VoiceStatsLastDigitsTransmitted, cdx6500SignalingSequenceTrapEventNumber=cdx6500SignalingSequenceTrapEventNumber, cdx6500PPSTSignalingSequenceTrapRxState=cdx6500PPSTSignalingSequenceTrapRxState, cdx6500VoiceStatsDSPMNumber=cdx6500VoiceStatsDSPMNumber, cdx6500PPCTVoicePortEntry=cdx6500PPCTVoicePortEntry, cdx6500VoiceCallStatsDroppedReason3=cdx6500VoiceCallStatsDroppedReason3, cdx6500VoiceCallStatsDroppedReason9=cdx6500VoiceCallStatsDroppedReason9, cdx6500StatVCSDroppedReasons=cdx6500StatVCSDroppedReasons, cdx6500VoiceCfgGroupSubaddress=cdx6500VoiceCfgGroupSubaddress, cdx6500VoiceStatsLastOutboundCallPacketCallingAddress=cdx6500VoiceStatsLastOutboundCallPacketCallingAddress, cdx6500VoiceCfgTxWinkDelay=cdx6500VoiceCfgTxWinkDelay, cdx6500VoiceCfgFastBusyToneLowerFrequency=cdx6500VoiceCfgFastBusyToneLowerFrequency, cdx6500VoiceCfgDSIControl=cdx6500VoiceCfgDSIControl, cdx6500VoiceCfgFastBusyToneLowerFrequencyAmplitude=cdx6500VoiceCfgFastBusyToneLowerFrequencyAmplitude, cdx6500VoiceCfgRingBackToneLowerFrequency=cdx6500VoiceCfgRingBackToneLowerFrequency, cdx6500VoiceCfgTxBusyToneOffTime=cdx6500VoiceCfgTxBusyToneOffTime, cdx6500Statistics=cdx6500Statistics, cdx6500VoiceCfgDialToneLowerFrequency=cdx6500VoiceCfgDialToneLowerFrequency, cdx6500VoiceCfgSpareTimer2=cdx6500VoiceCfgSpareTimer2, cdx6500VoiceCfgRxMaxMasterClear=cdx6500VoiceCfgRxMaxMasterClear, cdx6500VoiceStatsRingerStatus=cdx6500VoiceStatsRingerStatus, cdx6500VoiceCfgWaitForParams=cdx6500VoiceCfgWaitForParams, cdx6500PPSTSignalingSequenceTrapEntry=cdx6500PPSTSignalingSequenceTrapEntry, cdx6500VoiceCfgRxMinMasterClear=cdx6500VoiceCfgRxMinMasterClear, codex=codex, cdx6500VoiceCfgVoiceBandDetection=cdx6500VoiceCfgVoiceBandDetection, cdx6500VoiceCfgSignalingSampleRate=cdx6500VoiceCfgSignalingSampleRate, cdx6500VoiceCfgXlateSigInfo0010FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0010FromRemoteToLocalPort, cdx6500SignalingSequenceTrapRxState=cdx6500SignalingSequenceTrapRxState, cdx6500VoiceCfgTxFlashHookTime=cdx6500VoiceCfgTxFlashHookTime, cdx6500StatVCSIndex=cdx6500StatVCSIndex, cdx6500StatVCSPercentPeakAvgCurOfDataBuf=cdx6500StatVCSPercentPeakAvgCurOfDataBuf, cdx6500VoiceCfgTxRingerOffLong=cdx6500VoiceCfgTxRingerOffLong, cdx6500VoiceCfgSignalingControl=cdx6500VoiceCfgSignalingControl, cdx6500VoiceSwitchNumLeadingDigitToStrip=cdx6500VoiceSwitchNumLeadingDigitToStrip, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, cdx6500=cdx6500, cdx6500VoiceCfgTxInputSignalLevel=cdx6500VoiceCfgTxInputSignalLevel, cdx6500VoiceCfgTxPTSTime=cdx6500VoiceCfgTxPTSTime, cdx6500VoiceCfgRxInterdigitTimer=cdx6500VoiceCfgRxInterdigitTimer, cdx6500StatVCSNoCallsProcessed=cdx6500StatVCSNoCallsProcessed, cdx6500VoiceCfgRxMaxSlaveClear=cdx6500VoiceCfgRxMaxSlaveClear, cdx6500VoiceCfgEchoReturnLoss=cdx6500VoiceCfgEchoReturnLoss, cdx6500VoiceCfgTxSlaveClear=cdx6500VoiceCfgTxSlaveClear, cdx6500VoiceCfgRingBackToneUpperFrequency=cdx6500VoiceCfgRingBackToneUpperFrequency, cdx6500VoiceStatsTxPacketDropped=cdx6500VoiceStatsTxPacketDropped, cdx6500VoiceStatsTimeSlotNumber=cdx6500VoiceStatsTimeSlotNumber, cdx6500VoiceCallStatsDroppedReason19=cdx6500VoiceCallStatsDroppedReason19, cdx6500VoiceStatsLastClearDiagnosticCode=cdx6500VoiceStatsLastClearDiagnosticCode, cdx6500VoiceCfgSpareTimer1=cdx6500VoiceCfgSpareTimer1, cdx6500VoiceCfgXlateSigInfo1110FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1110FromRemoteToLocalPort, cdx6500VoiceCfgHybridFXS=cdx6500VoiceCfgHybridFXS, cdx6500VoiceStatsUnsupportedFmtsFAXXmissions=cdx6500VoiceStatsUnsupportedFmtsFAXXmissions, cdx6500VoiceStatsMeanDelayDeviation=cdx6500VoiceStatsMeanDelayDeviation, cdx6500VoiceCfgHybridEAndM2=cdx6500VoiceCfgHybridEAndM2, cdx6500VoiceCfgXlateSigInfo0011FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0011FromRemoteToLocalPort, cdx6500VoiceCfgRxRingStateChangeFilter=cdx6500VoiceCfgRxRingStateChangeFilter, cdx6500VoiceCfgXlateSigInfo1100FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo1100FromRemoteToLocalPort, cdx6500VoiceCfgTxInterdigitTime=cdx6500VoiceCfgTxInterdigitTime, cdx6500VoiceCallStatsDroppedReason13=cdx6500VoiceCallStatsDroppedReason13, cdx6500VoiceCfgTransparentSignalingBusyoutState=cdx6500VoiceCfgTransparentSignalingBusyoutState, cdx6500VoiceCfgDialToneLowerFrequencyAmplitude=cdx6500VoiceCfgDialToneLowerFrequencyAmplitude, cdx6500VoiceCfgPCMMode=cdx6500VoiceCfgPCMMode, cdx6500VoiceStatsDaughterCardRevAndPartNumber=cdx6500VoiceStatsDaughterCardRevAndPartNumber, cdx6500VoiceStatsLastOutboundCallPacketCalledAddress=cdx6500VoiceStatsLastOutboundCallPacketCalledAddress, cdx6500VoiceCfgBusyToneUpperFrequencyAmplitude=cdx6500VoiceCfgBusyToneUpperFrequencyAmplitude, cdx6500VoiceCallStatsDroppedReason5=cdx6500VoiceCallStatsDroppedReason5, cdx6500VoiceCfgXlateSigInfo0100FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0100FromRemoteToLocalPort, cdx6500VoiceCfgXlateSigInfo0001FromRemoteToLocalPort=cdx6500VoiceCfgXlateSigInfo0001FromRemoteToLocalPort, cdx6500VoiceSwitchCompressionOverrideRate=cdx6500VoiceSwitchCompressionOverrideRate, cdx6500VoiceStatsPortState=cdx6500VoiceStatsPortState, cdx6500VoiceCallStatsDroppedReason21=cdx6500VoiceCallStatsDroppedReason21, cdx6500VoiceCfgLineErrorRecovery=cdx6500VoiceCfgLineErrorRecovery, cdx6500VoiceCfgBusyToneLowerFrequency=cdx6500VoiceCfgBusyToneLowerFrequency, cdx6500VoiceCfgTxRingerOn=cdx6500VoiceCfgTxRingerOn, cdx6500VoiceCfgMasterGuard=cdx6500VoiceCfgMasterGuard)
