#
# PySNMP MIB module CISCO-WAN-MGC-REDUN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-MGC-REDUN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
mgcNumber, mgProtocolNumber = mibBuilder.importSymbols("CISCO-WAN-MG-MIB", "mgcNumber", "mgProtocolNumber")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Counter32, TimeTicks, Gauge32, Unsigned32, MibIdentifier, Bits, iso, ObjectIdentity, Counter64, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "TimeTicks", "Gauge32", "Unsigned32", "MibIdentifier", "Bits", "iso", "ObjectIdentity", "Counter64", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
ciscoWanMgcRedunMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 22))
ciscoWanMgcRedunMIB.setRevisions(('2004-01-19 00:00', '2001-12-26 00:00', '2001-07-19 15:00',))
if mibBuilder.loadTexts: ciscoWanMgcRedunMIB.setLastUpdated('200401190000Z')
if mibBuilder.loadTexts: ciscoWanMgcRedunMIB.setOrganization('Cisco Systems, Inc.')
mgcRedundancyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 22, 1))
mgcRedundancyGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 1), )
if mibBuilder.loadTexts: mgcRedundancyGrpTable.setStatus('current')
mgcRedundancyGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 1, 1), ).setIndexNames((0, "CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpNum"), (0, "CISCO-WAN-MG-MIB", "mgcNumber"))
if mibBuilder.loadTexts: mgcRedundancyGrpEntry.setStatus('current')
mgcRedundancyGrpNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mgcRedundancyGrpNum.setStatus('current')
mgcRedundancyGrpPref = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedundancyGrpPref.setStatus('current')
mgcRedundancyGrpActState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mgcActive", 1), ("mgcInactive", 2))).clone('mgcInactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgcRedundancyGrpActState.setStatus('current')
mgcRedundancyGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedundancyGrpRowStatus.setStatus('current')
mgcRedundancyGrpParamTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 2), )
if mibBuilder.loadTexts: mgcRedundancyGrpParamTable.setStatus('current')
mgcRedundancyGrpParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 2, 1), ).setIndexNames((0, "CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpNum"))
if mibBuilder.loadTexts: mgcRedundancyGrpParamEntry.setStatus('current')
mgcRedundancyGrpStateChangeNtfy = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 2, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgcRedundancyGrpStateChangeNtfy.setStatus('current')
mgcRedundancyGrpCommState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("commOk", 1), ("commLoss", 2))).clone('commLoss')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mgcRedundancyGrpCommState.setStatus('current')
mgcRedundancyGrpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgcRedundancyGrpPriority.setStatus('current')
mgcRedundancyGrpProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3), )
if mibBuilder.loadTexts: mgcRedundancyGrpProtocolTable.setStatus('current')
mgcRedundancyGrpProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1), ).setIndexNames((0, "CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpNum"), (0, "CISCO-WAN-MG-MIB", "mgProtocolNumber"))
if mibBuilder.loadTexts: mgcRedundancyGrpProtocolEntry.setStatus('current')
mgcRedundancyGrpProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedundancyGrpProtocolRowStatus.setStatus('current')
mgcRedGrpProtPersistEvtPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("quarantinePersistEvts", 1), ("notQuarantinePersistEvts", 2))).clone('quarantinePersistEvts')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtPersistEvtPolicy.setStatus('current')
mgcRedGrpProtQuarantinePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("stepProcess", 1), ("stepDiscard", 2), ("loopProcess", 3), ("loopDiscard", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtQuarantinePolicy.setStatus('current')
mgcRedGrpProtSigEvtOnOffPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deleteEventNotPresent", 1), ("deleteOnlyNegatedEvent", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtSigEvtOnOffPolicy.setStatus('current')
mgcRedGrpProtProvisionalResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendProvisionalResponse", 1), ("notSendProvisionalResponse", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtProvisionalResponse.setStatus('current')
mgcRedGrpProtResponseAckAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendResponseAckAttr", 1), ("notSendResponseAckAttr", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtResponseAckAttr.setStatus('current')
mgcRedGrpProtDisconnectProcedure = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("doDisconnectProcedure", 1), ("notDoDisconnectProcedure", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtDisconnectProcedure.setStatus('current')
mgcRedGrpProtCancelGraceful = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 22, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sendCancelGraceful", 1), ("notSendCancelGraceful", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mgcRedGrpProtCancelGraceful.setStatus('current')
mgcRedunNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 22, 2))
mgcRedunNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 22, 2, 0))
mgcRedunMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 22, 3))
mgcRedunMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 22, 3, 1))
mgcRedunMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 22, 3, 2))
mgcRedunMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 22, 3, 1, 1)).setObjects(("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGroup"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyParamGroup"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyProtocolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgcRedunMIBCompliance = mgcRedunMIBCompliance.setStatus('current')
mgcRedundancyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 22, 3, 2, 1)).setObjects(("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpPref"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpActState"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgcRedundancyGroup = mgcRedundancyGroup.setStatus('current')
mgcRedundancyParamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 22, 3, 2, 2)).setObjects(("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpStateChangeNtfy"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpCommState"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgcRedundancyParamGroup = mgcRedundancyParamGroup.setStatus('current')
mgcRedundancyProtocolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 22, 3, 2, 3)).setObjects(("CISCO-WAN-MGC-REDUN-MIB", "mgcRedundancyGrpProtocolRowStatus"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtPersistEvtPolicy"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtQuarantinePolicy"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtSigEvtOnOffPolicy"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtProvisionalResponse"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtResponseAckAttr"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtDisconnectProcedure"), ("CISCO-WAN-MGC-REDUN-MIB", "mgcRedGrpProtCancelGraceful"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mgcRedundancyProtocolGroup = mgcRedundancyProtocolGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-MGC-REDUN-MIB", mgcRedundancyParamGroup=mgcRedundancyParamGroup, mgcRedGrpProtQuarantinePolicy=mgcRedGrpProtQuarantinePolicy, mgcRedundancyGrpCommState=mgcRedundancyGrpCommState, mgcRedundancyGrpProtocolRowStatus=mgcRedundancyGrpProtocolRowStatus, mgcRedGrpProtDisconnectProcedure=mgcRedGrpProtDisconnectProcedure, mgcRedunNotificationPrefix=mgcRedunNotificationPrefix, mgcRedunMIBConformance=mgcRedunMIBConformance, mgcRedundancyGrpTable=mgcRedundancyGrpTable, mgcRedundancyProtocolGroup=mgcRedundancyProtocolGroup, mgcRedundancyGrpRowStatus=mgcRedundancyGrpRowStatus, mgcRedundancyGrpPriority=mgcRedundancyGrpPriority, mgcRedGrpProtResponseAckAttr=mgcRedGrpProtResponseAckAttr, mgcRedundancyGroup=mgcRedundancyGroup, mgcRedGrpProtSigEvtOnOffPolicy=mgcRedGrpProtSigEvtOnOffPolicy, mgcRedundancyGrpProtocolTable=mgcRedundancyGrpProtocolTable, mgcRedunMIBCompliances=mgcRedunMIBCompliances, PYSNMP_MODULE_ID=ciscoWanMgcRedunMIB, mgcRedGrpProtProvisionalResponse=mgcRedGrpProtProvisionalResponse, mgcRedundancyGrpParamTable=mgcRedundancyGrpParamTable, mgcRedundancyGrpActState=mgcRedundancyGrpActState, mgcRedundancyGrpNum=mgcRedundancyGrpNum, mgcRedGrpProtCancelGraceful=mgcRedGrpProtCancelGraceful, mgcRedGrpProtPersistEvtPolicy=mgcRedGrpProtPersistEvtPolicy, mgcRedundancyGrpProtocolEntry=mgcRedundancyGrpProtocolEntry, mgcRedundancyGrpPref=mgcRedundancyGrpPref, ciscoWanMgcRedunMIB=ciscoWanMgcRedunMIB, mgcRedunMIBGroups=mgcRedunMIBGroups, mgcRedunNotifications=mgcRedunNotifications, mgcRedundancyGrpStateChangeNtfy=mgcRedundancyGrpStateChangeNtfy, mgcRedundancyObjects=mgcRedundancyObjects, mgcRedunMIBCompliance=mgcRedunMIBCompliance, mgcRedundancyGrpEntry=mgcRedundancyGrpEntry, mgcRedundancyGrpParamEntry=mgcRedundancyGrpParamEntry)
