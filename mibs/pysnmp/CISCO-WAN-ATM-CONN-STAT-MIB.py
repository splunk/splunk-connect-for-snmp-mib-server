#
# PySNMP MIB module CISCO-WAN-ATM-CONN-STAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-ATM-CONN-STAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:03:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
cwaChanVpi, cwaChanVci = mibBuilder.importSymbols("CISCO-WAN-ATM-CONN-MIB", "cwaChanVpi", "cwaChanVci")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Unsigned32, iso, Gauge32, Counter64, ObjectIdentity, IpAddress, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Unsigned32", "iso", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "NotificationType", "TimeTicks")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
ciscoWanAtmConnStatMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 2))
ciscoWanAtmConnStatMIB.setRevisions(('2005-08-25 00:00', '2004-09-10 00:00', '2003-04-18 00:00', '2003-04-01 00:00', '2002-10-21 00:00', '2002-07-09 00:00', '2002-07-02 00:00', '2001-05-02 00:00', '1998-12-04 14:45',))
if mibBuilder.loadTexts: ciscoWanAtmConnStatMIB.setLastUpdated('200508250000Z')
if mibBuilder.loadTexts: ciscoWanAtmConnStatMIB.setOrganization('Cisco Systems, Inc.')
ciscoWanAtmConnStatMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 1))
cwacs = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1))
cwacsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1), )
if mibBuilder.loadTexts: cwacsTable.setStatus('current')
cwacsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-ATM-CONN-MIB", "cwaChanVpi"), (0, "CISCO-WAN-ATM-CONN-MIB", "cwaChanVci"))
if mibBuilder.loadTexts: cwacsEntry.setStatus('current')
cwacsIngRcvCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 1), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvCLP0.setStatus('current')
cwacsIngRcvCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 2), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvCLP1.setStatus('current')
cwacsIngXmtCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 3), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngXmtCLP0.setStatus('current')
cwacsIngXmtCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 4), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngXmtCLP1.setStatus('current')
cwacsIngCLP0CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 5), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngCLP0CoSDiscard.setStatus('current')
cwacsIngCLP1CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 6), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngCLP1CoSDiscard.setStatus('current')
cwacsIngCLP0UpcDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 7), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngCLP0UpcDiscard.setStatus('current')
cwacsIngCLP1UpcDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 8), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngCLP1UpcDiscard.setStatus('current')
cwacsIngCLP0UpcTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 9), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngCLP0UpcTagged.setStatus('current')
cwacsIngRcvEFCI0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 10), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvEFCI0.setStatus('current')
cwacsIngRcvEFCI1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 11), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvEFCI1.setStatus('current')
cwacsIngEFCI0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 12), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngEFCI0Discard.setStatus('current')
cwacsIngEFCI1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 13), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngEFCI1Discard.setStatus('current')
cwacsIngRcvOAM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 14), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvOAM.setStatus('current')
cwacsIngOAMDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 15), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngOAMDiscard.setStatus('current')
cwacsIngRcvRM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 16), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvRM.setStatus('current')
cwacsIngRMDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 17), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRMDiscard.setStatus('current')
cwacsIngXmtFRm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 18), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngXmtFRm.setStatus('current')
cwacsIngXmtBRmFsRm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 19), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngXmtBRmFsRm.setStatus('current')
cwacsIngRcvEOF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 20), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngRcvEOF1.setStatus('current')
cwacsIngEOF1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 21), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngEOF1Discard.setStatus('current')
cwacsIngACR = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 22), Gauge32()).setUnits('cells/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngACR.setStatus('current')
cwacsIngVCQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 23), Gauge32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngVCQueueDepth.setStatus('current')
cwacsEgrRcvCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 24), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvCLP0.setStatus('current')
cwacsEgrRcvCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 25), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvCLP1.setStatus('current')
cwacsEgrXmtCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 26), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrXmtCLP0.setStatus('current')
cwacsEgrXmtCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 27), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrXmtCLP1.setStatus('current')
cwacsEgrCLP0CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 28), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrCLP0CoSDiscard.setStatus('current')
cwacsEgrCLP1CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 29), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrCLP1CoSDiscard.setStatus('current')
cwacsEgrRcvEFCI0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 30), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvEFCI0.setStatus('current')
cwacsEgrRcvEFCI1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 31), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvEFCI1.setStatus('current')
cwacsEgrEFCI0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 32), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrEFCI0Discard.setStatus('current')
cwacsEgrEFCI1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 33), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrEFCI1Discard.setStatus('current')
cwacsEgrRcvOAM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 34), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvOAM.setStatus('current')
cwacsEgrOAMDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 35), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrOAMDiscard.setStatus('current')
cwacsEgrRcvRM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 36), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvRM.setStatus('current')
cwacsEgrRMDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 37), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRMDiscard.setStatus('current')
cwacsEgrXmtFRm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 38), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrXmtFRm.setStatus('current')
cwacsEgrXmtBRmFsRm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 39), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrXmtBRmFsRm.setStatus('current')
cwacsEgrRcvEOF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 40), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrRcvEOF1.setStatus('current')
cwacsEgrEOF1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 41), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrEOF1Discard.setStatus('current')
cwacsEgrACR = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 42), Gauge32()).setUnits('cells/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrACR.setStatus('current')
cwacsEgrVCQueueDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 43), Gauge32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrVCQueueDepth.setStatus('current')
cwacsStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 44), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwacsStatsClear.setStatus('current')
cwacsHighIngRcvCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 45), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngRcvCLP0.setStatus('current')
cwacsHighIngRcvCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 46), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngRcvCLP1.setStatus('current')
cwacsHighIngXmtCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 47), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngXmtCLP0.setStatus('current')
cwacsHighIngXmtCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 48), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngXmtCLP1.setStatus('current')
cwacsHighIngCLP0CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 49), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngCLP0CoSDiscard.setStatus('current')
cwacsHighIngCLP1CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 50), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngCLP1CoSDiscard.setStatus('current')
cwacsHighIngCLP0UpcDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 51), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngCLP0UpcDiscard.setStatus('current')
cwacsHighIngCLP1UpcDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 52), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngCLP1UpcDiscard.setStatus('current')
cwacsHighIngCLP0UpcTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 53), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngCLP0UpcTagged.setStatus('current')
cwacsHighIngRcvEFCI0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 54), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngRcvEFCI0.setStatus('current')
cwacsHighIngRcvEFCI1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 55), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngRcvEFCI1.setStatus('current')
cwacsHighIngEFCI0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 56), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngEFCI0Discard.setStatus('current')
cwacsHighIngEFCI1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 57), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngEFCI1Discard.setStatus('current')
cwacsHighIngRcvEOF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 58), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngRcvEOF1.setStatus('current')
cwacsHighIngEOF1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 59), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighIngEOF1Discard.setStatus('current')
cwacsHighEgrRcvCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 60), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrRcvCLP0.setStatus('current')
cwacsHighEgrRcvCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 61), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrRcvCLP1.setStatus('current')
cwacsHighEgrXmtCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 62), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrXmtCLP0.setStatus('current')
cwacsHighEgrXmtCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 63), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrXmtCLP1.setStatus('current')
cwacsHighEgrCLP0CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 64), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrCLP0CoSDiscard.setStatus('current')
cwacsHighEgrCLP1CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 65), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrCLP1CoSDiscard.setStatus('current')
cwacsHighEgrRcvEFCI0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 66), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrRcvEFCI0.setStatus('current')
cwacsHighEgrRcvEFCI1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 67), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrRcvEFCI1.setStatus('current')
cwacsHighEgrEFCI0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 68), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrEFCI0Discard.setStatus('current')
cwacsHighEgrEFCI1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 69), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrEFCI1Discard.setStatus('current')
cwacsHighEgrRcvEOF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 70), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrRcvEOF1.setStatus('current')
cwacsHighEgrEOF1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 1, 1, 71), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHighEgrEOF1Discard.setStatus('current')
cwacsXTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2), )
if mibBuilder.loadTexts: cwacsXTable.setStatus('current')
cwacsXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1), )
cwacsEntry.registerAugmentions(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsXEntry"))
cwacsXEntry.setIndexNames(*cwacsEntry.getIndexNames())
if mibBuilder.loadTexts: cwacsXEntry.setStatus('current')
cwacsHCIngRcvCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 1), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngRcvCLP0.setStatus('current')
cwacsHCIngRcvCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 2), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngRcvCLP1.setStatus('current')
cwacsHCIngXmtCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 3), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngXmtCLP0.setStatus('current')
cwacsHCIngXmtCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 4), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngXmtCLP1.setStatus('current')
cwacsHCIngCLP0CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 5), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngCLP0CoSDiscard.setStatus('current')
cwacsHCIngCLP1CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 6), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngCLP1CoSDiscard.setStatus('current')
cwacsHCIngCLP0UpcDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 7), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngCLP0UpcDiscard.setStatus('current')
cwacsHCIngCLP1UpcDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 8), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngCLP1UpcDiscard.setStatus('current')
cwacsHCIngCLP0UpcTagged = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 9), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngCLP0UpcTagged.setStatus('current')
cwacsHCIngRcvEFCI0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 10), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngRcvEFCI0.setStatus('current')
cwacsHCIngRcvEFCI1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 11), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngRcvEFCI1.setStatus('current')
cwacsHCIngEFCI0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 12), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngEFCI0Discard.setStatus('current')
cwacsHCIngEFCI1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 13), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngEFCI1Discard.setStatus('current')
cwacsHCIngRcvEOF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 14), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngRcvEOF1.setStatus('current')
cwacsHCIngEOF1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 15), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCIngEOF1Discard.setStatus('current')
cwacsHCEgrRcvCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 16), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrRcvCLP0.setStatus('current')
cwacsHCEgrRcvCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 17), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrRcvCLP1.setStatus('current')
cwacsHCEgrXmtCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 18), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrXmtCLP0.setStatus('current')
cwacsHCEgrXmtCLP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 19), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrXmtCLP1.setStatus('current')
cwacsHCEgrCLP0CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 20), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrCLP0CoSDiscard.setStatus('current')
cwacsHCEgrCLP1CoSDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 21), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrCLP1CoSDiscard.setStatus('current')
cwacsHCEgrRcvEFCI0 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 22), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrRcvEFCI0.setStatus('current')
cwacsHCEgrRcvEFCI1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 23), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrRcvEFCI1.setStatus('current')
cwacsHCEgrEFCI0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 24), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrEFCI0Discard.setStatus('current')
cwacsHCEgrEFCI1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 25), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrEFCI1Discard.setStatus('current')
cwacsHCEgrRcvEOF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 26), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrRcvEOF1.setStatus('current')
cwacsHCEgrEOF1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 2, 1, 27), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsHCEgrEOF1Discard.setStatus('current')
cwaConnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3), )
if mibBuilder.loadTexts: cwaConnStatsTable.setStatus('current')
cwaConnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-ATM-CONN-MIB", "cwaChanVpi"), (0, "CISCO-WAN-ATM-CONN-MIB", "cwaChanVci"))
if mibBuilder.loadTexts: cwaConnStatsEntry.setStatus('current')
cwaConnStatsIngRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 1), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsIngRcv.setStatus('current')
cwaConnStatsIngCLP0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 2), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsIngCLP0Discard.setStatus('current')
cwaConnStatsIngCLP1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 3), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsIngCLP1Discard.setStatus('current')
cwaConnStatsIngTotalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 4), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsIngTotalDiscard.setStatus('current')
cwaConnStatsEgrXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 5), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsEgrXmt.setStatus('current')
cwaConnStatsEgrCLP0Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 6), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsEgrCLP0Discard.setStatus('current')
cwaConnStatsEgrCLP1Discard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 7), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsEgrCLP1Discard.setStatus('current')
cwaConnStatsEgrTotalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 8), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwaConnStatsEgrTotalDiscard.setStatus('current')
cwaConnStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwaConnStatsClear.setStatus('current')
cwacsExtStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4), )
if mibBuilder.loadTexts: cwacsExtStatsTable.setStatus('current')
cwacsExtStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1), )
cwacsEntry.registerAugmentions(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsExtStatsEntry"))
cwacsExtStatsEntry.setIndexNames(*cwacsEntry.getIndexNames())
if mibBuilder.loadTexts: cwacsExtStatsEntry.setStatus('current')
cwacsEgrAal2HecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 1), Counter32()).setUnits('PDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrAal2HecErrors.setStatus('current')
cwacsEgrAal2InvalidOsfCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 2), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrAal2InvalidOsfCells.setStatus('current')
cwacsEgrAal2InvalidParCells = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 3), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrAal2InvalidParCells.setStatus('current')
cwacsAal2CpsSentPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsAal2CpsSentPkts.setStatus('current')
cwacsAal2CpsRcvdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsAal2CpsRcvdPkts.setStatus('current')
cwacsEgrAal2CpsInvalidCidPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsEgrAal2CpsInvalidCidPkts.setStatus('current')
cwacsCacPassedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsCacPassedCalls.setStatus('current')
cwacsCacRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsCacRejectedCalls.setStatus('current')
cwacsIngXmtOAM = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 9), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsIngXmtOAM.setStatus('current')
cwacsUsedConns = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsUsedConns.setStatus('current')
cwacsUtilizedCR = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 11), Gauge32()).setUnits('cells per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsUtilizedCR.setStatus('current')
cwacsUsedVadConns = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsUsedVadConns.setStatus('current')
cwacsTotalCR = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 13), Gauge32()).setUnits('cells per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsTotalCR.setStatus('current')
cwacsAisSuppressCount = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsAisSuppressCount.setStatus('current')
cwacsBearerPVCTable = MibTable((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 5), )
if mibBuilder.loadTexts: cwacsBearerPVCTable.setStatus('current')
cwacsBearerPVCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-ATM-CONN-MIB", "cwaChanVpi"), (0, "CISCO-WAN-ATM-CONN-MIB", "cwaChanVci"))
if mibBuilder.loadTexts: cwacsBearerPVCEntry.setStatus('current')
cwacsAvailableBearerPVCBWMin = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 5, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsAvailableBearerPVCBWMin.setStatus('current')
cwacsAvailableBearerPVCBWMax = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 5, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsAvailableBearerPVCBWMax.setStatus('current')
cwacsAvailableBearerPVCBWAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 5, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsAvailableBearerPVCBWAvg.setStatus('current')
cwacsBearerPVCSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 150, 2, 1, 1, 5, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwacsBearerPVCSinceLastReset.setStatus('current')
ciscoWanAtmConnStatMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 2))
ciscoWanAtmConnStatMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 2, 0))
ciscoWanAtmConnStatMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 3))
ciscoWanAtmConnStatMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1))
ciscoWanAtmConnStatMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2))
ciscoWanAtmConnStatMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1, 1)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmConnStatMIBCompliance = ciscoWanAtmConnStatMIBCompliance.setStatus('deprecated')
ciscoWanAtmConnStatMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1, 2)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmConnStatMIBCompliance2 = ciscoWanAtmConnStatMIBCompliance2.setStatus('deprecated')
ciscoWanAtmConnStatMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1, 3)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsGroup1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmConnStatMIBCompliance3 = ciscoWanAtmConnStatMIBCompliance3.setStatus('deprecated')
ciscoWanAtmConnStatMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1, 4)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsGroup1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmConnStatMIBCompliance4 = ciscoWanAtmConnStatMIBCompliance4.setStatus('deprecated')
ciscoWanAtmConnStatMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1, 5)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsGroup1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2GroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmConnStatMIBCompliance5 = ciscoWanAtmConnStatMIBCompliance5.setStatus('deprecated')
ciscoWanAtmConnStatMIBCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 1, 6)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsGroup1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCGroup"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2GroupRev1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsBearerPVCGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWanAtmConnStatMIBCompliance6 = ciscoWanAtmConnStatMIBCompliance6.setStatus('current')
cwacsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 1)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP0UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP1UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP0UpcTagged"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvOAM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngOAMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvRM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtFRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtBRmFsRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngEOF1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngACR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngVCQueueDepth"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvOAM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrOAMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvRM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtFRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtBRmFsRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrEOF1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrACR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrVCQueueDepth"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwacsGroup = cwacsGroup.setStatus('deprecated')
cwaConnStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 2)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsIngRcv"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsIngCLP0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsIngCLP1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsIngTotalDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsEgrXmt"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsEgrCLP0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsEgrCLP1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsEgrTotalDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwaConnStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwaConnStatsGroup = cwaConnStatsGroup.setStatus('current')
cwacsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 3)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP0UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP1UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngCLP0UpcTagged"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvOAM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngOAMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvRM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtFRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtBRmFsRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngEOF1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngACR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngVCQueueDepth"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvOAM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrOAMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvRM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRMDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtFRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrXmtBRmFsRm"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrEOF1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrACR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrVCQueueDepth"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsStatsClear"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngCLP0UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngCLP1UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngCLP0UpcTagged"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighIngEOF1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHighEgrEOF1Discard"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwacsGroup1 = cwacsGroup1.setStatus('current')
cwacsHCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 4)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngCLP0UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngCLP1UpcDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngCLP0UpcTagged"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCIngEOF1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrRcvCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrRcvCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrXmtCLP0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrXmtCLP1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrCLP0CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrCLP1CoSDiscard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrRcvEFCI0"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrRcvEFCI1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrEFCI0Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrEFCI1Discard"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrRcvEOF1"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsHCEgrEOF1Discard"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwacsHCGroup = cwacsHCGroup.setStatus('current')
cwacsAal2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 5)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2HecErrors"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2InvalidOsfCells"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2InvalidParCells"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2CpsSentPkts"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2CpsRcvdPkts"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2CpsInvalidCidPkts"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsCacPassedCalls"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsCacRejectedCalls"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtOAM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsUsedConns"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsUtilizedCR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsUsedVadConns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwacsAal2Group = cwacsAal2Group.setStatus('deprecated')
cwacsAal2GroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 6)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2HecErrors"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2InvalidOsfCells"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2InvalidParCells"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2CpsSentPkts"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAal2CpsRcvdPkts"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsEgrAal2CpsInvalidCidPkts"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsCacPassedCalls"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsCacRejectedCalls"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsIngXmtOAM"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsUsedConns"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsUtilizedCR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsUsedVadConns"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsTotalCR"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAisSuppressCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwacsAal2GroupRev1 = cwacsAal2GroupRev1.setStatus('current')
cwacsBearerPVCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 2, 3, 2, 7)).setObjects(("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAvailableBearerPVCBWMin"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAvailableBearerPVCBWMax"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsAvailableBearerPVCBWAvg"), ("CISCO-WAN-ATM-CONN-STAT-MIB", "cwacsBearerPVCSinceLastReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwacsBearerPVCGroup = cwacsBearerPVCGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-ATM-CONN-STAT-MIB", cwacsAvailableBearerPVCBWMax=cwacsAvailableBearerPVCBWMax, ciscoWanAtmConnStatMIBCompliance=ciscoWanAtmConnStatMIBCompliance, cwacsEgrAal2InvalidParCells=cwacsEgrAal2InvalidParCells, ciscoWanAtmConnStatMIBObjects=ciscoWanAtmConnStatMIBObjects, cwacsAvailableBearerPVCBWMin=cwacsAvailableBearerPVCBWMin, cwacsStatsClear=cwacsStatsClear, cwacsIngCLP1UpcDiscard=cwacsIngCLP1UpcDiscard, cwacsHCGroup=cwacsHCGroup, cwacsHighEgrRcvEFCI0=cwacsHighEgrRcvEFCI0, cwaConnStatsEgrTotalDiscard=cwaConnStatsEgrTotalDiscard, cwacsEgrRcvEFCI0=cwacsEgrRcvEFCI0, cwacsHighIngXmtCLP1=cwacsHighIngXmtCLP1, cwacsEgrEOF1Discard=cwacsEgrEOF1Discard, cwacsHCEgrXmtCLP0=cwacsHCEgrXmtCLP0, cwacsXTable=cwacsXTable, cwacsEgrXmtFRm=cwacsEgrXmtFRm, cwacsHighEgrRcvEFCI1=cwacsHighEgrRcvEFCI1, cwacsHighEgrEOF1Discard=cwacsHighEgrEOF1Discard, cwacsXEntry=cwacsXEntry, cwacsBearerPVCGroup=cwacsBearerPVCGroup, ciscoWanAtmConnStatMIBConformance=ciscoWanAtmConnStatMIBConformance, cwacsHighEgrRcvCLP1=cwacsHighEgrRcvCLP1, cwacsBearerPVCEntry=cwacsBearerPVCEntry, cwacsHighIngXmtCLP0=cwacsHighIngXmtCLP0, cwacsHighIngCLP0UpcTagged=cwacsHighIngCLP0UpcTagged, cwacsHighIngRcvCLP0=cwacsHighIngRcvCLP0, cwacsAisSuppressCount=cwacsAisSuppressCount, cwacsHCIngRcvEFCI0=cwacsHCIngRcvEFCI0, cwacsIngRcvEFCI0=cwacsIngRcvEFCI0, cwacsHighEgrCLP1CoSDiscard=cwacsHighEgrCLP1CoSDiscard, cwacsIngCLP0UpcDiscard=cwacsIngCLP0UpcDiscard, cwacsHCIngRcvCLP1=cwacsHCIngRcvCLP1, cwacsHighIngCLP0UpcDiscard=cwacsHighIngCLP0UpcDiscard, cwaConnStatsGroup=cwaConnStatsGroup, cwacsAvailableBearerPVCBWAvg=cwacsAvailableBearerPVCBWAvg, cwacsAal2Group=cwacsAal2Group, cwacsEgrXmtCLP0=cwacsEgrXmtCLP0, cwacsHCIngRcvEFCI1=cwacsHCIngRcvEFCI1, cwacsHighIngRcvEFCI1=cwacsHighIngRcvEFCI1, cwacsIngACR=cwacsIngACR, cwacsHCIngRcvEOF1=cwacsHCIngRcvEOF1, cwacsIngVCQueueDepth=cwacsIngVCQueueDepth, cwacsHCEgrRcvEFCI0=cwacsHCEgrRcvEFCI0, cwacsHCEgrEFCI1Discard=cwacsHCEgrEFCI1Discard, cwacsBearerPVCSinceLastReset=cwacsBearerPVCSinceLastReset, cwacsEgrOAMDiscard=cwacsEgrOAMDiscard, PYSNMP_MODULE_ID=ciscoWanAtmConnStatMIB, cwacsEgrEFCI1Discard=cwacsEgrEFCI1Discard, ciscoWanAtmConnStatMIBNotifications=ciscoWanAtmConnStatMIBNotifications, cwacsGroup=cwacsGroup, cwacsHighIngCLP1CoSDiscard=cwacsHighIngCLP1CoSDiscard, cwacsIngRcvEFCI1=cwacsIngRcvEFCI1, ciscoWanAtmConnStatMIB=ciscoWanAtmConnStatMIB, cwacsExtStatsTable=cwacsExtStatsTable, cwaConnStatsEntry=cwaConnStatsEntry, cwacsHighEgrRcvEOF1=cwacsHighEgrRcvEOF1, cwacsEgrAal2HecErrors=cwacsEgrAal2HecErrors, cwacsHCEgrEOF1Discard=cwacsHCEgrEOF1Discard, cwaConnStatsTable=cwaConnStatsTable, cwacsAal2CpsSentPkts=cwacsAal2CpsSentPkts, ciscoWanAtmConnStatMIBNotificationPrefix=ciscoWanAtmConnStatMIBNotificationPrefix, cwacsHCEgrRcvEOF1=cwacsHCEgrRcvEOF1, cwacsHCIngCLP1CoSDiscard=cwacsHCIngCLP1CoSDiscard, cwacsIngRcvCLP1=cwacsIngRcvCLP1, cwacsHCIngXmtCLP1=cwacsHCIngXmtCLP1, cwacsEgrAal2CpsInvalidCidPkts=cwacsEgrAal2CpsInvalidCidPkts, cwacsEgrCLP0CoSDiscard=cwacsEgrCLP0CoSDiscard, cwacsHighIngCLP1UpcDiscard=cwacsHighIngCLP1UpcDiscard, cwacsHCIngCLP0UpcDiscard=cwacsHCIngCLP0UpcDiscard, cwacsEgrVCQueueDepth=cwacsEgrVCQueueDepth, cwacsCacPassedCalls=cwacsCacPassedCalls, cwacsEntry=cwacsEntry, cwacsIngEFCI0Discard=cwacsIngEFCI0Discard, cwacsHCEgrCLP1CoSDiscard=cwacsHCEgrCLP1CoSDiscard, cwacsEgrRcvRM=cwacsEgrRcvRM, cwacsHighIngRcvCLP1=cwacsHighIngRcvCLP1, cwacsHighIngCLP0CoSDiscard=cwacsHighIngCLP0CoSDiscard, cwacsIngCLP0UpcTagged=cwacsIngCLP0UpcTagged, cwacsHCEgrXmtCLP1=cwacsHCEgrXmtCLP1, cwacsAal2GroupRev1=cwacsAal2GroupRev1, cwacsIngOAMDiscard=cwacsIngOAMDiscard, cwacsEgrRcvEOF1=cwacsEgrRcvEOF1, cwacsEgrCLP1CoSDiscard=cwacsEgrCLP1CoSDiscard, cwacsIngRMDiscard=cwacsIngRMDiscard, cwacsUsedVadConns=cwacsUsedVadConns, cwacsHighIngEFCI1Discard=cwacsHighIngEFCI1Discard, cwacsHCIngXmtCLP0=cwacsHCIngXmtCLP0, ciscoWanAtmConnStatMIBGroups=ciscoWanAtmConnStatMIBGroups, cwacsEgrRcvOAM=cwacsEgrRcvOAM, cwacsHighEgrXmtCLP1=cwacsHighEgrXmtCLP1, cwacsUsedConns=cwacsUsedConns, cwacsHCEgrRcvEFCI1=cwacsHCEgrRcvEFCI1, cwacsEgrXmtCLP1=cwacsEgrXmtCLP1, cwacsIngCLP0CoSDiscard=cwacsIngCLP0CoSDiscard, cwacsHCIngCLP1UpcDiscard=cwacsHCIngCLP1UpcDiscard, cwacsIngRcvEOF1=cwacsIngRcvEOF1, cwaConnStatsIngRcv=cwaConnStatsIngRcv, cwacsHCIngCLP0CoSDiscard=cwacsHCIngCLP0CoSDiscard, cwacsIngXmtCLP1=cwacsIngXmtCLP1, cwacsHighIngEFCI0Discard=cwacsHighIngEFCI0Discard, cwacsHCEgrRcvCLP1=cwacsHCEgrRcvCLP1, cwacsEgrRMDiscard=cwacsEgrRMDiscard, cwacsExtStatsEntry=cwacsExtStatsEntry, cwacsEgrRcvCLP1=cwacsEgrRcvCLP1, cwacsHighIngRcvEOF1=cwacsHighIngRcvEOF1, cwaConnStatsIngCLP1Discard=cwaConnStatsIngCLP1Discard, cwacsIngEOF1Discard=cwacsIngEOF1Discard, cwacsHCIngRcvCLP0=cwacsHCIngRcvCLP0, cwacsHighEgrCLP0CoSDiscard=cwacsHighEgrCLP0CoSDiscard, cwacsIngXmtBRmFsRm=cwacsIngXmtBRmFsRm, cwacsHCIngEOF1Discard=cwacsHCIngEOF1Discard, ciscoWanAtmConnStatMIBCompliance6=ciscoWanAtmConnStatMIBCompliance6, cwacsHCIngEFCI0Discard=cwacsHCIngEFCI0Discard, cwacsEgrXmtBRmFsRm=cwacsEgrXmtBRmFsRm, cwacsEgrEFCI0Discard=cwacsEgrEFCI0Discard, cwacsEgrRcvCLP0=cwacsEgrRcvCLP0, ciscoWanAtmConnStatMIBCompliance3=ciscoWanAtmConnStatMIBCompliance3, cwacsHighIngEOF1Discard=cwacsHighIngEOF1Discard, cwacsHCEgrCLP0CoSDiscard=cwacsHCEgrCLP0CoSDiscard, cwaConnStatsEgrCLP1Discard=cwaConnStatsEgrCLP1Discard, cwacsHighEgrEFCI0Discard=cwacsHighEgrEFCI0Discard, cwacsIngEFCI1Discard=cwacsIngEFCI1Discard, ciscoWanAtmConnStatMIBCompliances=ciscoWanAtmConnStatMIBCompliances, cwacsIngXmtCLP0=cwacsIngXmtCLP0, cwacsGroup1=cwacsGroup1, cwacsBearerPVCTable=cwacsBearerPVCTable, cwacsIngRcvCLP0=cwacsIngRcvCLP0, cwacsCacRejectedCalls=cwacsCacRejectedCalls, cwacsHCEgrRcvCLP0=cwacsHCEgrRcvCLP0, cwacsHighEgrXmtCLP0=cwacsHighEgrXmtCLP0, cwaConnStatsIngTotalDiscard=cwaConnStatsIngTotalDiscard, cwacsEgrAal2InvalidOsfCells=cwacsEgrAal2InvalidOsfCells, cwaConnStatsClear=cwaConnStatsClear, cwacsIngRcvRM=cwacsIngRcvRM, cwacsEgrACR=cwacsEgrACR, ciscoWanAtmConnStatMIBCompliance5=ciscoWanAtmConnStatMIBCompliance5, cwacsHCIngEFCI1Discard=cwacsHCIngEFCI1Discard, cwaConnStatsEgrCLP0Discard=cwaConnStatsEgrCLP0Discard, cwacs=cwacs, cwacsHighIngRcvEFCI0=cwacsHighIngRcvEFCI0, cwacsHCIngCLP0UpcTagged=cwacsHCIngCLP0UpcTagged, ciscoWanAtmConnStatMIBCompliance2=ciscoWanAtmConnStatMIBCompliance2, cwacsHighEgrRcvCLP0=cwacsHighEgrRcvCLP0, cwacsAal2CpsRcvdPkts=cwacsAal2CpsRcvdPkts, cwacsUtilizedCR=cwacsUtilizedCR, cwacsEgrRcvEFCI1=cwacsEgrRcvEFCI1, cwacsIngCLP1CoSDiscard=cwacsIngCLP1CoSDiscard, cwacsTotalCR=cwacsTotalCR, cwacsIngXmtOAM=cwacsIngXmtOAM, cwacsHighEgrEFCI1Discard=cwacsHighEgrEFCI1Discard, cwacsIngXmtFRm=cwacsIngXmtFRm, cwacsHCEgrEFCI0Discard=cwacsHCEgrEFCI0Discard, ciscoWanAtmConnStatMIBCompliance4=ciscoWanAtmConnStatMIBCompliance4, cwacsTable=cwacsTable, cwaConnStatsEgrXmt=cwaConnStatsEgrXmt, cwacsIngRcvOAM=cwacsIngRcvOAM, cwaConnStatsIngCLP0Discard=cwaConnStatsIngCLP0Discard)
