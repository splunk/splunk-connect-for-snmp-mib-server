#
# PySNMP MIB module BN-LOG-MESSAGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BN-LOG-MESSAGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:22:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
bnLogMsg, = mibBuilder.importSymbols("S5-ROOT-MIB", "bnLogMsg")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, TimeTicks, iso, Integer32, Bits, MibIdentifier, IpAddress, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "TimeTicks", "iso", "Integer32", "Bits", "MibIdentifier", "IpAddress", "ModuleIdentity", "Counter32")
DateAndTime, TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
bnLogMsgMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1))
bnLogMsgMIB.setRevisions(('2013-10-10 00:00', '2012-04-10 00:00', '2012-03-26 00:00', '2011-04-20 00:00', '2010-06-29 00:00', '2009-04-15 00:00', '2009-04-14 00:00', '2009-03-31 00:00', '2009-03-23 00:00', '2007-09-04 00:00', '2005-05-04 00:00', '2005-04-27 00:00', '2003-02-24 12:00',))
if mibBuilder.loadTexts: bnLogMsgMIB.setLastUpdated('201310100000Z')
if mibBuilder.loadTexts: bnLogMsgMIB.setOrganization('Nortel Networks')
bnLogMsgMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1))
bnLogMsgMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 2))
bnLogMsgMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 3))
bnLogMsgBufferOperaton = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferOperaton.setStatus('current')
bnLogMsgBufferMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(50, 100, 200, 400))).clone(namedValues=NamedValues(("msgBufferSizeSmall", 50), ("msgBufferSizeMedium", 100), ("msgBufferSizeLarge", 200), ("msgBufferSizeVeryLarge", 400))).clone('msgBufferSizeSmall')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferMaxSize.setStatus('current')
bnLogMsgBufferCurSize = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferCurSize.setStatus('current')
bnLogMsgBufferFullAction = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("overwrite", 1), ("latch", 2))).clone('overwrite')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferFullAction.setStatus('current')
bnLogMsgBufferSaveTargets = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("msgTypeCritical", 1), ("msgTypeSerious", 2), ("msgTypeInformational", 3), ("msgTypeNone", 4))).clone('msgTypeCritical')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferSaveTargets.setStatus('current')
bnLogMsgBufferClearTargets = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("msgTypeCritical", 1), ("msgTypeSerious", 2), ("msgTypeInformational", 3), ("msgTypeAllVolatile", 4), ("msgTypeNonVolatile", 5))).clone('msgTypeAllVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferClearTargets.setStatus('deprecated')
bnLogMsgBufferClearMsgs = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clearMsgs", 1), ("savingMsgs", 2))).clone('savingMsgs')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferClearMsgs.setStatus('deprecated')
bnLogMsgBufferNonVolCurSize = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferNonVolCurSize.setStatus('current')
bnLogMsgBufferNonVolSaveTargets = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("msgTypeCritical", 1), ("msgTypeSerious", 2), ("msgTypeInformational", 3), ("msgTypeNone", 4))).clone('msgTypeNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgBufferNonVolSaveTargets.setStatus('current')
bnLogMsgBufferTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10), )
if mibBuilder.loadTexts: bnLogMsgBufferTable.setStatus('current')
bnLogMsgBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1), ).setIndexNames((0, "BN-LOG-MESSAGE-MIB", "bnLogMsgBufferMsgOrig"), (0, "BN-LOG-MESSAGE-MIB", "bnLogMsgBufferMsgTime"), (0, "BN-LOG-MESSAGE-MIB", "bnLogMsgBufferMsgIndex"))
if mibBuilder.loadTexts: bnLogMsgBufferEntry.setStatus('current')
bnLogMsgBufferMsgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: bnLogMsgBufferMsgIndex.setStatus('current')
bnLogMsgBufferMsgOrig = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: bnLogMsgBufferMsgOrig.setStatus('current')
bnLogMsgBufferMsgTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 3), TimeTicks())
if mibBuilder.loadTexts: bnLogMsgBufferMsgTime.setStatus('current')
bnLogMsgBufferMsgSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("msgSrcRunning", 1), ("msgSrcNonVol", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgSrc.setStatus('current')
bnLogMsgBufferMsgCode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgCode.setStatus('current')
bnLogMsgBufferMsgString = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgString.setStatus('current')
bnLogMsgBufferMsgParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgParam1.setStatus('current')
bnLogMsgBufferMsgParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgParam2.setStatus('current')
bnLogMsgBufferMsgParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgParam3.setStatus('current')
bnLogMsgBufferMsgUtcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgUtcTime.setStatus('current')
bnLogMsgBufferMsgType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("msgTypeCritical", 1), ("msgTypeSerious", 2), ("msgTypeInformational", 3), ("msgTypeNone", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnLogMsgBufferMsgType.setStatus('current')
bnLogMsgRemoteSyslogEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogEnabled.setStatus('current')
bnLogMsgRemoteSyslogAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 12), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogAddress.setStatus('current')
bnLogMsgRemoteSyslogSaveTargets = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("msgTypeCritical", 1), ("msgTypeSerious", 2), ("msgTypeInformational", 3), ("msgTypeNone", 4))).clone('msgTypeCritical')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogSaveTargets.setStatus('current')
bnLogMsgClearMessageBuffers = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 14), Bits().clone(namedValues=NamedValues(("none", 0), ("volCritical", 1), ("volSerious", 2), ("volInformational", 3), ("nonVolCritical", 4), ("nonVolSerious", 5), ("nonVolInformational", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgClearMessageBuffers.setStatus('current')
bnLogMsgRemoteSyslogInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 15), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogInetAddressType.setStatus('current')
bnLogMsgRemoteSyslogInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 16), InetAddress().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogInetAddress.setStatus('current')
bnLogMsgRemoteSyslogSecondaryInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 17), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogSecondaryInetAddressType.setStatus('current')
bnLogMsgRemoteSyslogSecondaryInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 18), InetAddress().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogSecondaryInetAddress.setStatus('current')
bnLogMsgRemoteServerTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19), )
if mibBuilder.loadTexts: bnLogMsgRemoteServerTable.setStatus('current')
bnLogMsgRemoteServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1), ).setIndexNames((0, "BN-LOG-MESSAGE-MIB", "bnLogMsgRemoteServerAddressType"), (0, "BN-LOG-MESSAGE-MIB", "bnLogMsgRemoteServerAddress"))
if mibBuilder.loadTexts: bnLogMsgRemoteServerEntry.setStatus('current')
bnLogMsgRemoteServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1, 1), InetAddressType())
if mibBuilder.loadTexts: bnLogMsgRemoteServerAddressType.setStatus('current')
bnLogMsgRemoteServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: bnLogMsgRemoteServerAddress.setStatus('current')
bnLogMsgRemoteServerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bnLogMsgRemoteServerEnabled.setStatus('current')
bnLogMsgRemoteServerSaveTargets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("msgTypeCritical", 1), ("msgTypeSerious", 2), ("msgTypeInformational", 3), ("msgTypeNone", 4))).clone('msgTypeCritical')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bnLogMsgRemoteServerSaveTargets.setStatus('current')
bnLogMsgRemoteServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bnLogMsgRemoteServerRowStatus.setStatus('current')
bnLogMsgRemoteServerStandardSaveTargets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 19, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("msgTypeEmergency", 0), ("msgTypeAlert", 1), ("msgTypeCritical", 2), ("msgTypeError", 3), ("msgTypeSerious", 4), ("msgTypeNotice", 5), ("msgTypeInformational", 6), ("msgTypeDebug", 7), ("msgTypeNone", 8))).clone('msgTypeNone')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bnLogMsgRemoteServerStandardSaveTargets.setStatus('current')
bnLogMsgRemoteSyslogFacility = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("fltKernel", 1), ("fltUserLevel", 2), ("fltMailSystem", 3), ("fltDaemon", 4), ("fltSecAuthor", 5), ("fltMsgGenInt", 6), ("fltLinePrinter", 7), ("fltNetNews", 8), ("fltUUCP", 9), ("fltClockDaemon", 10), ("fltSecAuthor2", 11), ("fltFTPDaemon", 12), ("fltNTP", 13), ("fltLogAudit", 14), ("fltLogAlert", 15), ("fltClockDaemon2", 16), ("fltLocal0", 17), ("fltLocal1", 18), ("fltLocal2", 19), ("fltLocal3", 20), ("fltLocal4", 21), ("fltLocal5", 22), ("fltLocal6", 23), ("fltLocal7", 24), ("fltNone", 25))).clone('fltDaemon')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogFacility.setStatus('current')
bnLogMsgRemoteSyslogStandardSaveTargets = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("msgTypeEmergency", 0), ("msgTypeAlert", 1), ("msgTypeCritical", 2), ("msgTypeError", 3), ("msgTypeSerious", 4), ("msgTypeNotice", 5), ("msgTypeInformational", 6), ("msgTypeDebug", 7), ("msgTypeNone", 8))).clone('msgTypeNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogStandardSaveTargets.setStatus('current')
bnLogMsgRemoteSyslogPrimaryTcpPort = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(601, 601), ValueRangeConstraint(1024, 65535), )).clone(601)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogPrimaryTcpPort.setStatus('current')
bnLogMsgRemoteSyslogSecondaryTcpPort = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(601, 601), ValueRangeConstraint(1024, 65535), )).clone(601)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogSecondaryTcpPort.setStatus('current')
bnLogMsgRemoteSyslogPrimaryConnectionType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("connectionTypeUDP", 1), ("connectionTypeTCP", 2), ("connectionTypeTCPSecure", 3))).clone('connectionTypeTCP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogPrimaryConnectionType.setStatus('current')
bnLogMsgRemoteSyslogSecondaryConnectionType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("connectionTypeUDP", 1), ("connectionTypeTCP", 2), ("connectionTypeTCPSecure", 3))).clone('connectionTypeTCP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bnLogMsgRemoteSyslogSecondaryConnectionType.setStatus('current')
bnLogMsgMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 2, 0))
bnLogMsgBufferFull = NotificationType((1, 3, 6, 1, 4, 1, 45, 1, 6, 16, 1, 2, 0, 1)).setObjects(("BN-LOG-MESSAGE-MIB", "bnLogMsgBufferCurSize"), ("BN-LOG-MESSAGE-MIB", "bnLogMsgBufferNonVolCurSize"))
if mibBuilder.loadTexts: bnLogMsgBufferFull.setStatus('current')
mibBuilder.exportSymbols("BN-LOG-MESSAGE-MIB", bnLogMsgBufferMsgParam1=bnLogMsgBufferMsgParam1, bnLogMsgClearMessageBuffers=bnLogMsgClearMessageBuffers, bnLogMsgRemoteSyslogStandardSaveTargets=bnLogMsgRemoteSyslogStandardSaveTargets, bnLogMsgRemoteServerAddressType=bnLogMsgRemoteServerAddressType, bnLogMsgBufferFullAction=bnLogMsgBufferFullAction, bnLogMsgBufferMaxSize=bnLogMsgBufferMaxSize, bnLogMsgBufferNonVolSaveTargets=bnLogMsgBufferNonVolSaveTargets, bnLogMsgRemoteSyslogInetAddressType=bnLogMsgRemoteSyslogInetAddressType, bnLogMsgBufferOperaton=bnLogMsgBufferOperaton, bnLogMsgRemoteSyslogFacility=bnLogMsgRemoteSyslogFacility, bnLogMsgBufferSaveTargets=bnLogMsgBufferSaveTargets, bnLogMsgBufferTable=bnLogMsgBufferTable, bnLogMsgMIB=bnLogMsgMIB, bnLogMsgRemoteSyslogAddress=bnLogMsgRemoteSyslogAddress, bnLogMsgRemoteSyslogSecondaryInetAddressType=bnLogMsgRemoteSyslogSecondaryInetAddressType, bnLogMsgRemoteServerStandardSaveTargets=bnLogMsgRemoteServerStandardSaveTargets, bnLogMsgBufferNonVolCurSize=bnLogMsgBufferNonVolCurSize, bnLogMsgBufferMsgCode=bnLogMsgBufferMsgCode, bnLogMsgMIBObjects=bnLogMsgMIBObjects, bnLogMsgMIBTrapPrefix=bnLogMsgMIBTrapPrefix, bnLogMsgRemoteSyslogSecondaryTcpPort=bnLogMsgRemoteSyslogSecondaryTcpPort, bnLogMsgRemoteSyslogSaveTargets=bnLogMsgRemoteSyslogSaveTargets, bnLogMsgBufferMsgUtcTime=bnLogMsgBufferMsgUtcTime, bnLogMsgRemoteServerRowStatus=bnLogMsgRemoteServerRowStatus, bnLogMsgRemoteServerTable=bnLogMsgRemoteServerTable, bnLogMsgBufferFull=bnLogMsgBufferFull, bnLogMsgMIBConformance=bnLogMsgMIBConformance, bnLogMsgBufferEntry=bnLogMsgBufferEntry, bnLogMsgBufferClearMsgs=bnLogMsgBufferClearMsgs, bnLogMsgRemoteSyslogEnabled=bnLogMsgRemoteSyslogEnabled, bnLogMsgBufferMsgParam3=bnLogMsgBufferMsgParam3, bnLogMsgRemoteSyslogPrimaryConnectionType=bnLogMsgRemoteSyslogPrimaryConnectionType, bnLogMsgBufferMsgIndex=bnLogMsgBufferMsgIndex, bnLogMsgMIBTraps=bnLogMsgMIBTraps, bnLogMsgBufferCurSize=bnLogMsgBufferCurSize, bnLogMsgBufferMsgSrc=bnLogMsgBufferMsgSrc, bnLogMsgBufferMsgTime=bnLogMsgBufferMsgTime, bnLogMsgRemoteServerEntry=bnLogMsgRemoteServerEntry, bnLogMsgRemoteSyslogInetAddress=bnLogMsgRemoteSyslogInetAddress, bnLogMsgBufferClearTargets=bnLogMsgBufferClearTargets, bnLogMsgBufferMsgParam2=bnLogMsgBufferMsgParam2, bnLogMsgBufferMsgType=bnLogMsgBufferMsgType, PYSNMP_MODULE_ID=bnLogMsgMIB, bnLogMsgRemoteSyslogPrimaryTcpPort=bnLogMsgRemoteSyslogPrimaryTcpPort, bnLogMsgRemoteSyslogSecondaryConnectionType=bnLogMsgRemoteSyslogSecondaryConnectionType, bnLogMsgRemoteServerEnabled=bnLogMsgRemoteServerEnabled, bnLogMsgBufferMsgOrig=bnLogMsgBufferMsgOrig, bnLogMsgRemoteServerAddress=bnLogMsgRemoteServerAddress, bnLogMsgRemoteServerSaveTargets=bnLogMsgRemoteServerSaveTargets, bnLogMsgRemoteSyslogSecondaryInetAddress=bnLogMsgRemoteSyslogSecondaryInetAddress, bnLogMsgBufferMsgString=bnLogMsgBufferMsgString)
