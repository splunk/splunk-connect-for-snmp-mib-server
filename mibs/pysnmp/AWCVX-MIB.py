#
# PySNMP MIB module AWCVX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AWCVX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
dot1dTpPort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dTpPort")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, enterprises, Gauge32, IpAddress, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, NotificationType, Integer32, Counter64, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "enterprises", "Gauge32", "IpAddress", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "NotificationType", "Integer32", "Counter64", "MibIdentifier", "iso")
DisplayString, TextualConvention, TruthValue, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus", "MacAddress")
awcVx = ModuleIdentity((1, 3, 6, 1, 4, 1, 522, 3))
awcVx.setRevisions(('2003-04-21 00:00', '2002-12-03 00:00',))
if mibBuilder.loadTexts: awcVx.setLastUpdated('200304210000Z')
if mibBuilder.loadTexts: awcVx.setOrganization('Cisco Systems, Inc.')
aironet = MibIdentifier((1, 3, 6, 1, 4, 1, 522))
awcSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 1))
bootconfigVx = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 2))
awcSerialDev = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 3))
awcFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 4))
awc802dot11 = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 6))
awcUserMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 7))
awcHttpd = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 8))
awcDnsRes = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 9))
awcSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 10))
awcSntp = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 11))
awcForwardTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 12))
awcRipConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 13))
awcEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 14))
awcEtherMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 15))
awcPolicyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 16))
awcDdpIAPP = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 17))
awcHotStandby = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 18))
awcAaa = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 19))
awcAcctConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 19, 3))
awcProtocolFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 20))
awcMobileIP = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 22))
class AwcVlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 4094)

class AwcPolId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 1023)

class WEPKeytype128(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(5, 13)

class AwcInvokeCommand(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("inactive", 1), ("start", 2), ("startNotify", 3), ("restart", 4), ("restartNotify", 5), ("cancel", 6))

class AwcDot11MicAlgorithm(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("micNone", 1), ("micMMH", 2))

class AwcDot11WEPKeyPermuteAlgorithm(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("wepPermuteNone", 1), ("wepPermuteIV", 2))

class AwcEventDisposition(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("count", 1), ("displayConsole", 2), ("record", 3), ("notify", 4))

class AwcDot11EventDisposition(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noNotification", 1), ("eventLogOnly", 2), ("ieeeTrapOnly", 3), ("eventLogAndIeeeTrap", 4))

class AwcHotStandbyStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("normal", 0), ("initializing", 1), ("takeover", 2), ("stopped", 3), ("associating", 4), ("rootMacFailed", 5), ("interfaceMerge", 6), ("associationFail", 7), ("etherTestFail", 8), ("radioTestFail", 9), ("error", 10))

vxWorksVersion = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxWorksVersion.setStatus('current')
creationDate = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: creationDate.setStatus('current')
awcVxVersion = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcVxVersion.setStatus('current')
sysFlags = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 4), Unsigned32().clone(192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysFlags.setStatus('current')
languageCode = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('en-US')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: languageCode.setStatus('current')
awcDevID = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDevID.setStatus('current')
awcDevIDtxt = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDevIDtxt.setStatus('current')
enableHTTP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableHTTP.setStatus('current')
enableTelnet = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableTelnet.setStatus('current')
enableSNMP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableSNMP.setStatus('current')
enableDnsResolver = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableDnsResolver.setStatus('current')
enableSNTP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableSNTP.setStatus('current')
enableWDB = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableWDB.setStatus('current')
pingTxLen = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(12, 4096)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pingTxLen.setStatus('current')
awcFirstBoot = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 16), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFirstBoot.setStatus('current')
awcOemOUI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcOemOUI.setStatus('current')
awcOemName = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcOemName.setStatus('current')
awcOemNameShort = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcOemNameShort.setStatus('current')
awcOemHomeURL = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcOemHomeURL.setStatus('current')
enablePSPF = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 21), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enablePSPF.setStatus('current')
sysExceptionReboot = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 24), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysExceptionReboot.setStatus('current')
bootblockVersion = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootblockVersion.setStatus('current')
motherboardRevision = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: motherboardRevision.setStatus('current')
enableSTP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 27), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableSTP.setStatus('current')
enableRebootKey = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableRebootKey.setStatus('current')
awcLocateUnit = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcLocateUnit.setStatus('current')
bootconfigBootProtocol = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("bootp", 2), ("dhcp", 3))).clone('dhcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigBootProtocol.setStatus('current')
bootconfigReadINI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always", 1), ("never", 2), ("ifSpecified", 3))).clone('ifSpecified')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigReadINI.setStatus('current')
bootconfigServerConfigTimeout = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 3), Unsigned32().clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigServerConfigTimeout.setStatus('current')
bootconfigMultOfferTimeout = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 4), Unsigned32().clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigMultOfferTimeout.setStatus('current')
bootconfigReqLeaseDuration = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 5), Unsigned32().clone(1440)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigReqLeaseDuration.setStatus('current')
bootconfigMinLeaseDuration = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 6), Unsigned32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigMinLeaseDuration.setStatus('current')
bootconfigDev = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigDev.setStatus('current')
bootconfigClientAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigClientAddr.setStatus('current')
bootconfigHostAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigHostAddr.setStatus('current')
bootconfigBootFile = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigBootFile.setStatus('current')
bootconfigSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigSubnetMask.setStatus('current')
bootconfigGateway = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigGateway.setStatus('current')
bootconfigHostName = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigHostName.setStatus('current')
bootconfigClientName = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigClientName.setStatus('current')
bootconfigNameServerTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 2, 15), )
if mibBuilder.loadTexts: bootconfigNameServerTable.setStatus('current')
bootconfigNameServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 2, 15, 1), ).setIndexNames((0, "AWCVX-MIB", "bootconfigNameServerPriority"))
if mibBuilder.loadTexts: bootconfigNameServerEntry.setStatus('current')
bootconfigNameServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 2, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigNameServerPriority.setStatus('current')
bootconfigNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 2, 15, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigNameServer.setStatus('current')
bootconfigDomainName = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigDomainName.setStatus('current')
bootconfigSntpServer = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigSntpServer.setStatus('current')
bootconfigSaveServerResponse = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 18), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigSaveServerResponse.setStatus('current')
bootconfigCmdInvokeIniLoad = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 19), AwcInvokeCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigCmdInvokeIniLoad.setStatus('current')
bootconfigCmdStatusIniLoad = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigCmdStatusIniLoad.setStatus('current')
bootconfigDhcpClassID = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('AP4800E')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigDhcpClassID.setStatus('current')
bootconfigFileServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigFileServerAddr.setStatus('current')
bootconfigLogServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 26), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigLogServerAddr.setStatus('current')
bootconfigBootCount = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootconfigBootCount.setStatus('current')
bootconfigDhcpClientIdType = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 128))).clone(namedValues=NamedValues(("ethernet10Mb", 1), ("experimentalEthernet3Mb", 2), ("amateurRadioAxDot25", 3), ("proteonProNetTokenRing", 4), ("chaos", 5), ("ieee802Networks", 6), ("arcnet", 7), ("hyperchannel", 8), ("lanstar", 9), ("autonet", 10), ("localTalk", 11), ("localNet", 12), ("nonHardware", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigDhcpClientIdType.setStatus('current')
bootconfigDhcpClientIdValue = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 2, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bootconfigDhcpClientIdValue.setStatus('current')
awcSerialConfigTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 3, 1), )
if mibBuilder.loadTexts: awcSerialConfigTable.setStatus('current')
awcSerialConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1), ).setIndexNames((0, "AWCVX-MIB", "serialDevIndex"))
if mibBuilder.loadTexts: awcSerialConfigEntry.setStatus('current')
serialDevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialDevIndex.setStatus('current')
serialAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("error", 4))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialAdminStatus.setStatus('current')
serialOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("error", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialOperStatus.setStatus('current')
serialBaud = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 4), Unsigned32().clone(9600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialBaud.setStatus('current')
serialParity = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("even", 2), ("odd", 3), ("one", 4), ("zero", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialParity.setStatus('current')
serialDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(7, 8)).clone(8)).setUnits('bits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialDataBits.setStatus('current')
serialStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setUnits('bits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialStopBits.setStatus('current')
serialFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("swXonXoff", 2), ("hwRtsCts", 3), ("swHwBoth", 4))).clone('swXonXoff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialFlowControl.setStatus('current')
serialTerminalType = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("teletype", 1), ("ansi", 2))).clone('teletype')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialTerminalType.setStatus('current')
serialTerminalLines = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 50)).clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialTerminalLines.setStatus('current')
serialTerminalColumns = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 132)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: serialTerminalColumns.setStatus('current')
serialDevFd = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialDevFd.setStatus('current')
defaultFileServer = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultFileServer.setStatus('current')
awcFileXferProtocol = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tftp", 1), ("ftp", 2))).clone('ftp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferProtocol.setStatus('current')
awcFileXferUser = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('anonymous')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferUser.setStatus('current')
awcFileXferPassword = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferPassword.setStatus('current')
awcFileXferCmdInvokeFileLoad = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 5), AwcInvokeCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferCmdInvokeFileLoad.setStatus('current')
awcFileXferCmdStatusFileLoad = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFileXferCmdStatusFileLoad.setStatus('current')
awcFileXferCmdInvokeFileSave = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 7), AwcInvokeCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferCmdInvokeFileSave.setStatus('current')
awcFileXferCmdStatusFileSave = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFileXferCmdStatusFileSave.setStatus('current')
awcFileXferFileFirmwareSystem = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFileFirmwareSystem.setStatus('current')
awcFileXferFileFirmwareRadio0 = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFileFirmwareRadio0.setStatus('current')
awcFileXferFileWebUI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFileWebUI.setStatus('current')
awcFileXferFileFpgaPcmcia = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFileFpgaPcmcia.setStatus('current')
awcFileXferTftpPort = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(69)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferTftpPort.setStatus('current')
awcFileXferFtpDirectory = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFtpDirectory.setStatus('current')
awcFileXferFilesFLASH = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('AP340_latest.img')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFilesFLASH.setStatus('current')
awcFileXferFileFirmwareRadio1 = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 4, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFileXferFileFirmwareRadio1.setStatus('current')
awcIfTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 5), )
if mibBuilder.loadTexts: awcIfTable.setStatus('current')
awcIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcIfEntry.setStatus('current')
awcIfDefaultPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfDefaultPhysAddress.setStatus('current')
awcIfPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcIfPhysAddress.setStatus('current')
awcIfAdoptPrimaryIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcIfAdoptPrimaryIdentity.setStatus('current')
awcIfDefaultIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 4), IpAddress().clone(hexValue="0A000001")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcIfDefaultIpAddress.setStatus('current')
awcIfDefaultIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 5), IpAddress().clone(hexValue="FFFFFF00")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcIfDefaultIpNetMask.setStatus('current')
awcIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfIpAddress.setStatus('current')
awcIfIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfIpNetMask.setStatus('current')
awcIfMSDUMaxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfMSDUMaxLength.setStatus('current')
awcIfOutDiscardsCoS0 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS0.setStatus('current')
awcIfOutDiscardsCoS1 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS1.setStatus('current')
awcIfOutDiscardsCoS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS2.setStatus('current')
awcIfOutDiscardsCoS3 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS3.setStatus('current')
awcIfOutDiscardsCoS4 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS4.setStatus('current')
awcIfOutDiscardsCoS5 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS5.setStatus('current')
awcIfOutDiscardsCoS6 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS6.setStatus('current')
awcIfOutDiscardsCoS7 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcIfOutDiscardsCoS7.setStatus('current')
awcDot11smt = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 6, 1))
awcDot11StationConfigTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1), )
if mibBuilder.loadTexts: awcDot11StationConfigTable.setStatus('current')
awcDot11StationConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11StationConfigEntry.setStatus('current')
awcDot11StationRole = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("roleClient", 1), ("roleIBSS", 2), ("roleRepeater", 3), ("roleAP", 4))).clone('roleAP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11StationRole.setStatus('current')
awcDot11PowerManagementSubMode = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11PowerManagementSubMode.setStatus('current')
awcDot11UseAWCExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11UseAWCExtensions.setStatus('current')
awcDot11AllowAssocBroadcastSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AllowAssocBroadcastSSID.setStatus('current')
awcDot11PrivacyOptionImplementedMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11PrivacyOptionImplementedMaxRate.setStatus('current')
awcDot11DesiredBSSLength = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DesiredBSSLength.setStatus('current')
awcDot11EnetEncapsulationDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("encap802dot1H", 1), ("encapRfc1042", 2))).clone('encapRfc1042')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11EnetEncapsulationDefault.setStatus('current')
awcDot11ForceReqFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11ForceReqFirmwareVersion.setStatus('current')
awcDot11BridgeSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11BridgeSpacing.setStatus('current')
awcDot11DesiredSSIDMaxAssociatedSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDMaxAssociatedSTA.setStatus('current')
awcDot11DesiredSSIDNumAssociatedSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DesiredSSIDNumAssociatedSTA.setStatus('current')
awcDot11AuxiliarySSIDLength = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11AuxiliarySSIDLength.setStatus('current')
awcDot11MultipleSSIDPerBSSImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11MultipleSSIDPerBSSImplemented.setStatus('current')
awcDot11SymbolExtensionsImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11SymbolExtensionsImplemented.setStatus('current')
awcDot11SymbolExtensionsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11SymbolExtensionsEnabled.setStatus('current')
awcDot11DesiredSSIDMicAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 16), AwcDot11MicAlgorithm().clone('micNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDMicAlgorithm.setStatus('current')
awcDot11DesiredSSIDWEPKeyPermuteAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 17), AwcDot11WEPKeyPermuteAlgorithm().clone('wepPermuteNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDWEPKeyPermuteAlgorithm.setStatus('current')
awcDot11DesiredSSIDInfrastructureWGB = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 18), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDInfrastructureWGB.setStatus('current')
awcDot11DesiredSSIDDefaultPolId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 19), AwcPolId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDDefaultPolId.setStatus('current')
awcDot11DesiredSSIDDefaultVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 20), AwcVlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDDefaultVlanId.setStatus('current')
awcDot11DesiredSSIDEnableProxyMobileIP = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 21), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredSSIDEnableProxyMobileIP.setStatus('current')
awcDot11InfrastructureSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11InfrastructureSSID.setStatus('current')
awcDot11QBSSElementImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11QBSSElementImplemented.setStatus('current')
awcDot11QBSSElementEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 24), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11QBSSElementEnabled.setStatus('current')
awcDot11InfrastructureSSIDExclusive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11InfrastructureSSIDExclusive.setStatus('current')
awcDot11SendIGMPGeneralQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 26), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11SendIGMPGeneralQuery.setStatus('current')
awcDot11NonRootMobility = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mobile", 1), ("stationary", 2))).clone('stationary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11NonRootMobility.setStatus('current')
awcDot11AuthenticationAlgorithmsTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 2), )
if mibBuilder.loadTexts: awcDot11AuthenticationAlgorithmsTable.setStatus('current')
awcDot11AuthenticationAlgorithmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11AuthenticationAlgorithmsIndex"))
if mibBuilder.loadTexts: awcDot11AuthenticationAlgorithmsEntry.setStatus('current')
awcDot11AuthenticationAlgorithmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: awcDot11AuthenticationAlgorithmsIndex.setStatus('current')
awcDot11AuthenticationRequireEAP = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuthenticationRequireEAP.setStatus('current')
awcDot11AuthenticationDefaultUcastAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuthenticationDefaultUcastAllowedToGoTo.setStatus('current')
awcDot11WEPDefaultKeysTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 3), )
if mibBuilder.loadTexts: awcDot11WEPDefaultKeysTable.setStatus('current')
awcDot11WEPDefaultKeysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11WEPDefaultKeyIndex"))
if mibBuilder.loadTexts: awcDot11WEPDefaultKeysEntry.setStatus('current')
awcDot11WEPDefaultKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11WEPDefaultKeyIndex.setStatus('current')
awcDot11WEPDefaultKeyLen = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11WEPDefaultKeyLen.setStatus('current')
awcDot11WEPDefaultKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 3, 1, 3), WEPKeytype128()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11WEPDefaultKeyValue.setStatus('current')
awcDot11PrivacyTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5), )
if mibBuilder.loadTexts: awcDot11PrivacyTable.setStatus('current')
awcDot11PrivacyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11PrivacyEntry.setStatus('current')
awcDot11WEPDefaultKeyMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11WEPDefaultKeyMaxIndex.setStatus('current')
awcDot11AllowEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AllowEncrypted.setStatus('current')
awcDot11WEPKeyMaxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11WEPKeyMaxLen.setStatus('current')
awcDot11LEAPUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11LEAPUserName.setStatus('current')
awcDot11LEAPPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11LEAPPassword.setStatus('current')
awcDot11DesiredBSSTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 6), )
if mibBuilder.loadTexts: awcDot11DesiredBSSTable.setStatus('current')
awcDot11DesiredBSSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11DesiredBSSIndex"))
if mibBuilder.loadTexts: awcDot11DesiredBSSEntry.setStatus('current')
awcDot11DesiredBSSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DesiredBSSIndex.setStatus('current')
awcDot11DesiredBSS = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 6, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DesiredBSS.setStatus('current')
awcDot11AuxiliarySSIDTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7), )
if mibBuilder.loadTexts: awcDot11AuxiliarySSIDTable.setStatus('current')
awcDot11AuxiliarySSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11AuxSSIDIndex"))
if mibBuilder.loadTexts: awcDot11AuxiliarySSIDEntry.setStatus('current')
awcDot11AuxSSIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11AuxSSIDIndex.setStatus('current')
awcDot11AuxSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSID.setStatus('current')
awcDot11AuxSSIDMaxAssociatedSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDMaxAssociatedSTA.setStatus('current')
awcDot11AuxSSIDNumAssociatedSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11AuxSSIDNumAssociatedSTA.setStatus('current')
awcDot11AuxSSIDDefaultPolId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 6), AwcPolId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDDefaultPolId.setStatus('current')
awcDot11AuxSSIDDefaultVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 7), AwcVlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDDefaultVlanId.setStatus('current')
awcDot11AuxSSIDEnableProxyMobileIP = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 7, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDEnableProxyMobileIP.setStatus('current')
awcDot11AuxSSIDAuthAlgTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 8), )
if mibBuilder.loadTexts: awcDot11AuxSSIDAuthAlgTable.setStatus('current')
awcDot11AuxSSIDAuthAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11AuxSSIDIndex"), (0, "AWCVX-MIB", "awcDot11AuxSSIDAuthAlgIndex"))
if mibBuilder.loadTexts: awcDot11AuxSSIDAuthAlgEntry.setStatus('current')
awcDot11AuxSSIDAuthAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: awcDot11AuxSSIDAuthAlgIndex.setStatus('current')
awcDot11AuxSSIDAuthAlgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 8, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDAuthAlgEnable.setStatus('current')
awcDot11AuxSSIDAuthAlgRequireEAP = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 8, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDAuthAlgRequireEAP.setStatus('current')
awcDot11AuxSSIDAuthAlgDefaultUcastAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 8, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuxSSIDAuthAlgDefaultUcastAllowedToGoTo.setStatus('current')
awcDot11AssignedAIDTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 9), )
if mibBuilder.loadTexts: awcDot11AssignedAIDTable.setStatus('current')
awcDot11AssignedAIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11AssignedAID"))
if mibBuilder.loadTexts: awcDot11AssignedAIDEntry.setStatus('current')
awcDot11AssignedAID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11AssignedAID.setStatus('current')
awcDot11AssignedSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 9, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AssignedSTA.setStatus('current')
awcDot11AccessPointCountersTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10), )
if mibBuilder.loadTexts: awcDot11AccessPointCountersTable.setStatus('current')
awcDot11AccessPointCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11AccessPointCountersEntry.setStatus('current')
awcDot11AssociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11AssociatedStationCount.setStatus('current')
awcDot11AuthenticatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11AuthenticatedStationCount.setStatus('current')
awcDot11ReassociatedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11ReassociatedStationCount.setStatus('current')
awcDot11RoamedStationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11RoamedStationCount.setStatus('current')
awcDot11DeauthenticateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DeauthenticateCount.setStatus('current')
awcDot11DisassociateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DisassociateCount.setStatus('current')
awcDot11EncapPktsMMH = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11EncapPktsMMH.setStatus('current')
awcDot11DecapPktsMMH = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DecapPktsMMH.setStatus('current')
awcDot11EncapErrorsMMH = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11EncapErrorsMMH.setStatus('current')
awcDot11DecapErrorsMMH = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DecapErrorsMMH.setStatus('current')
awcDot11DecapExistsMMH = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DecapExistsMMH.setStatus('current')
awcDot11DecapAccessMMH = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 1, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11DecapAccessMMH.setStatus('current')
awcDot11mac = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 6, 2))
awcDot11CountersTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 2), )
if mibBuilder.loadTexts: awcDot11CountersTable.setStatus('current')
awcDot11CountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11CountersEntry.setStatus('current')
awcDot11TxDeferEnergyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TxDeferEnergyCount.setStatus('current')
awcDot11RxMacCrcErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11RxMacCrcErrorCount.setStatus('current')
awcDot11SsidMismatchCount = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11SsidMismatchCount.setStatus('current')
awcDot11QoSTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 4), )
if mibBuilder.loadTexts: awcDot11QoSTable.setStatus('current')
awcDot11QoSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11QoSCoS"))
if mibBuilder.loadTexts: awcDot11QoSEntry.setStatus('current')
awcDot11QoSCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: awcDot11QoSCoS.setStatus('current')
awcDot11QoSCWmin = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11QoSCWmin.setStatus('current')
awcDot11QoSCWmax = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11QoSCWmax.setStatus('current')
awcDot11res = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 6, 3))
awcDot11resAttribute = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 6, 3, 1))
awcDot11ResourceInfoTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 3, 1, 2), )
if mibBuilder.loadTexts: awcDot11ResourceInfoTable.setStatus('current')
awcDot11ResourceInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 3, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11ResourceInfoEntry.setStatus('current')
awcDot11FirmwareBootstrapVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 3, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11FirmwareBootstrapVersion.setStatus('current')
awcDot11phy = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 6, 4))
awcDot11PhyOperationTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 1), )
if mibBuilder.loadTexts: awcDot11PhyOperationTable.setStatus('current')
awcDot11PhyOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11PhyOperationEntry.setStatus('current')
awcDot11CurrentCarrierSet = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("usa", 0), ("europe", 1), ("japan", 2), ("spain", 3), ("france", 4), ("belgium", 5), ("israel", 6), ("canada", 7), ("australia", 8), ("japanWide", 9), ("usa5GHz", 11), ("europe5GHz", 12), ("japan5GHz", 13), ("singapore5GHz", 14), ("taiwan5GHz", 15), ("china", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11CurrentCarrierSet.setStatus('current')
awcDot11ModulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("mok", 2))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11ModulationType.setStatus('current')
awcDot11PreambleType = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("long", 1), ("short", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11PreambleType.setStatus('current')
awcDot11PHYType = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11))).clone(namedValues=NamedValues(("fhss", 1), ("dsss", 2), ("irbaseband", 3), ("dsssDot11A", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11PHYType.setStatus('current')
awcDot11PhyFHSSTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 4), )
if mibBuilder.loadTexts: awcDot11PhyFHSSTable.setStatus('current')
awcDot11PhyFHSSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11PhyFHSSEntry.setStatus('current')
awcDot11Compatible3100 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11Compatible3100.setStatus('current')
awcDot11PhyDSSSTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 5), )
if mibBuilder.loadTexts: awcDot11PhyDSSSTable.setStatus('current')
awcDot11PhyDSSSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: awcDot11PhyDSSSEntry.setStatus('current')
awcDot11Compatible4500 = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11Compatible4500.setStatus('current')
awcDot11ChannelAutoImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 5, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11ChannelAutoImplemented.setStatus('current')
awcDot11ChannelAutoEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11ChannelAutoEnabled.setStatus('current')
awcDot11CurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11CurrentChannel.setStatus('current')
awcDot11SupportedDataRatesPrivacyTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 11), )
if mibBuilder.loadTexts: awcDot11SupportedDataRatesPrivacyTable.setStatus('current')
awcDot11SupportedDataRatesPrivacyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11SupportedDataRatesPrivacyIndex"))
if mibBuilder.loadTexts: awcDot11SupportedDataRatesPrivacyEntry.setStatus('current')
awcDot11SupportedDataRatesPrivacyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11SupportedDataRatesPrivacyIndex.setStatus('current')
awcDot11SupportedDataRatesPrivacyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11SupportedDataRatesPrivacyValue.setStatus('current')
awcDot11SupportedDataRatesPrivacyImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11SupportedDataRatesPrivacyImplemented.setStatus('current')
awcDot11ChanSelectTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 12), )
if mibBuilder.loadTexts: awcDot11ChanSelectTable.setStatus('current')
awcDot11ChanSelectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "AWCVX-MIB", "awcDot11ChanSelectChannel"))
if mibBuilder.loadTexts: awcDot11ChanSelectEntry.setStatus('current')
awcDot11ChanSelectChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11ChanSelectChannel.setStatus('current')
awcDot11ChanSelectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 6, 4, 12, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11ChanSelectEnable.setStatus('current')
userMgrConfigTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 7, 1), )
if mibBuilder.loadTexts: userMgrConfigTable.setStatus('current')
userMgrConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 7, 1, 1), ).setIndexNames((0, "AWCVX-MIB", "userMgrUserIndex"))
if mibBuilder.loadTexts: userMgrConfigEntry.setStatus('current')
userMgrUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 7, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userMgrUserIndex.setStatus('current')
userMgrUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userMgrUserName.setStatus('current')
userMgrPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 7, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userMgrPassword.setStatus('current')
userMgrCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 7, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userMgrCapabilities.setStatus('current')
userMgrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 7, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: userMgrStatus.setStatus('current')
enableUserMgr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 7, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableUserMgr.setStatus('current')
allowBrowseWithoutLogin = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 7, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: allowBrowseWithoutLogin.setStatus('current')
protectLegalPage = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 7, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protectLegalPage.setStatus('current')
defaultWebRoot = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('mfs0:/StdUI/')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultWebRoot.setStatus('current')
defaultHelpRoot = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('http://www.cisco.com/warp/public/779/smbiz/prodconfig/help/eag/air/ap3xx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultHelpRoot.setStatus('current')
getWebUI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: getWebUI.setStatus('current')
cmdInvokeGetWebUI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 4), AwcInvokeCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdInvokeGetWebUI.setStatus('current')
cmdStatusGetWebUI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdStatusGetWebUI.setStatus('current')
awcHttpdPort = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcHttpdPort.setStatus('current')
awcConsoleAutoApply = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 8, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcConsoleAutoApply.setStatus('current')
resolverDomain = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 9, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resolverDomain.setStatus('current')
resolverDomainSuffix = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 9, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resolverDomainSuffix.setStatus('current')
resolverDomainServerTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 9, 3), )
if mibBuilder.loadTexts: resolverDomainServerTable.setStatus('current')
resolverDomainServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 9, 3, 1), ).setIndexNames((0, "AWCVX-MIB", "resolverDomainServerPriority"))
if mibBuilder.loadTexts: resolverDomainServerEntry.setStatus('current')
resolverDomainServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resolverDomainServerPriority.setStatus('current')
resolverDomainServer = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 9, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resolverDomainServer.setStatus('current')
defaultResolverDomain = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 9, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultResolverDomain.setStatus('current')
defaultResolverDomainServerTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 9, 5), )
if mibBuilder.loadTexts: defaultResolverDomainServerTable.setStatus('current')
defaultResolverDomainServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 9, 5, 1), ).setIndexNames((0, "AWCVX-MIB", "defaultResolverDomainServerPriority"))
if mibBuilder.loadTexts: defaultResolverDomainServerEntry.setStatus('current')
defaultResolverDomainServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: defaultResolverDomainServerPriority.setStatus('current')
defaultResolverDomainServer = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 9, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultResolverDomainServer.setStatus('current')
snmpTrapDest = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapDest.setStatus('current')
snmpTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapCommunity.setStatus('current')
defaultSntpServer = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 11, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultSntpServer.setStatus('current')
sntpServer = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 11, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sntpServer.setStatus('current')
awcFtStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 12, 1))
awcFtMcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtMcastAddr.setStatus('current')
awcFtDsHost = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtDsHost.setStatus('current')
awcFtBridgeHost = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtBridgeHost.setStatus('current')
awcFtClientSTA = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtClientSTA.setStatus('current')
awcFtClientSTASelf = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtClientSTASelf.setStatus('current')
awcFtBridge = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtBridge.setStatus('current')
awcFtBridgeSelf = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtBridgeSelf.setStatus('current')
awcFtRepeater = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtRepeater.setStatus('current')
awcFtRepeaterSelf = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtRepeaterSelf.setStatus('current')
awcFtAccessPoint = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtAccessPoint.setStatus('current')
awcFtBridgeRoot = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcFtBridgeRoot.setStatus('current')
awcFtConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 12, 2))
awcFtMaxNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 1), Integer32().clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtMaxNumEntries.setStatus('current')
awcFtTimeoutSecUnknown = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 2), Unsigned32().clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecUnknown.setStatus('current')
awcFtTimeoutSecMcastAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 3), Unsigned32().clone(28800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecMcastAddr.setStatus('current')
awcFtTimeoutSecDsHost = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 4), Unsigned32().clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecDsHost.setStatus('current')
awcFtTimeoutSecBridgeHost = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 5), Unsigned32().clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecBridgeHost.setStatus('current')
awcFtTimeoutSecClientSTA = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 6), Unsigned32().clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecClientSTA.setStatus('current')
awcFtTimeoutSecBridge = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 7), Unsigned32().clone(28800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecBridge.setStatus('current')
awcFtTimeoutSecRepeater = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 8), Unsigned32().clone(28800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecRepeater.setStatus('current')
awcFtTimeoutSecAccessPoint = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 9), Unsigned32().clone(28800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecAccessPoint.setStatus('current')
awcFtTimeoutSecBridgeRoot = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 10), Unsigned32().clone(28800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtTimeoutSecBridgeRoot.setStatus('current')
awcFtEnableAwcTpFdbTable = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtEnableAwcTpFdbTable.setStatus('current')
awcFtEnableMacAuthServer = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtEnableMacAuthServer.setStatus('current')
awcFtRogueApAlertTimeout = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtRogueApAlertTimeout.setStatus('current')
awcFtEnableMacOrEapAuth = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtEnableMacOrEapAuth.setStatus('current')
awcFtDot1dTpFdbTableEnable = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 15), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtDot1dTpFdbTableEnable.setStatus('current')
awcFtEnableMcastMapping = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 12, 2, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcFtEnableMcastMapping.setStatus('current')
class AwcTpFdbClassID(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("unknown", 1), ("multicast", 2), ("dsHost", 3), ("bridgeHost", 4), ("clientStation", 5), ("bridge", 6), ("repeater", 7), ("accessPoint", 8), ("bridgeRoot", 9))

awcTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 12, 3), )
if mibBuilder.loadTexts: awcTpFdbTable.setStatus('current')
awcTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1), ).setIndexNames((0, "AWCVX-MIB", "awcTpFdbAddress"))
if mibBuilder.loadTexts: awcTpFdbEntry.setStatus('current')
awcTpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbAddress.setStatus('current')
awcTpFdbClassID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 2), AwcTpFdbClassID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbClassID.setStatus('current')
awcTpFdbSrcPktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbSrcPktsImmed.setStatus('current')
awcTpFdbSrcOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbSrcOctetsImmed.setStatus('current')
awcTpFdbSrcErrorPktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbSrcErrorPktsImmed.setStatus('current')
awcTpFdbSrcErrorOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbSrcErrorOctetsImmed.setStatus('current')
awcTpFdbDestPktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDestPktsImmed.setStatus('current')
awcTpFdbDestOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDestOctetsImmed.setStatus('current')
awcTpFdbDestErrorPktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDestErrorPktsImmed.setStatus('current')
awcTpFdbDestErrorOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDestErrorOctetsImmed.setStatus('current')
awcTpFdbDestMaxRetryErrorsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDestMaxRetryErrorsImmed.setStatus('current')
awcTpFdbIPv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 3, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbIPv4Addr.setStatus('current')
class AwcDdpProdDevID(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(74, 76, 77, 78, 84, 85, 86, 101, 102, 104, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 127, 128, 240, 241, 253, 255))
    namedValues = NamedValues(("tokenRingAP", 74), ("ethernetAP", 76), ("ethernetBridge", 77), ("tokenRingBridge", 78), ("pc3000Client", 84), ("serialUC", 85), ("ethernetUC", 86), ("pc3500Client", 101), ("pc4500Client", 102), ("generic80211Client", 104), ("pc4800Client", 109), ("pc3100Client", 110), ("mc", 111), ("ethernetClient", 112), ("pc2500Client", 113), ("pc4800bClient", 117), ("euc", 120), ("homeAP", 121), ("eucNoDiversity", 122), ("emcNoDiversity", 123), ("emc", 124), ("series350Client", 127), ("series370Client", 128), ("multicast", 240), ("unknown", 241), ("tokenRingHost", 253), ("ethernetHost", 255))

class AwcDdpRadioDevID(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 34, 35))
    namedValues = NamedValues(("unknown", 0), ("tma900", 1), ("tma2400", 2), ("pc3500", 3), ("pc3000", 4), ("tma2040", 5), ("pc4500", 6), ("pc4800", 12), ("pc3100", 13), ("series350", 34), ("series370", 35))

awcTpFdbDdpTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 12, 4), )
if mibBuilder.loadTexts: awcTpFdbDdpTable.setStatus('current')
awcTpFdbDdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1), ).setIndexNames((0, "AWCVX-MIB", "awcTpFdbDdpAddress"))
if mibBuilder.loadTexts: awcTpFdbDdpEntry.setStatus('current')
awcTpFdbDdpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpAddress.setStatus('current')
awcTpFdbDdpSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpSysName.setStatus('current')
awcTpFdbDdpProdDevID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 3), AwcDdpProdDevID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpProdDevID.setStatus('current')
awcTpFdbDdpRadioDevID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 4), AwcDdpRadioDevID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpRadioDevID.setStatus('current')
awcTpFdbDdpSwVerMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpSwVerMajor.setStatus('current')
awcTpFdbDdpSwVerMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpSwVerMinor.setStatus('current')
awcTpFdbDdpSwVerBeta = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpSwVerBeta.setStatus('current')
awcTpFdbDdpUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpUptime.setStatus('current')
awcTpFdbDdpNumAnnounceSent = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpNumAnnounceSent.setStatus('current')
awcTpFdbDdpNumAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpNumAssociated.setStatus('current')
awcTpFdbDdpLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpLoad.setStatus('current')
awcTpFdbDdpDistFromDS = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbDdpDistFromDS.setStatus('current')
class AwcDot11ClientState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("state0", 1), ("state1", 2), ("state2", 3), ("state3", 4))

awcDot11TpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 12, 5), )
if mibBuilder.loadTexts: awcDot11TpFdbTable.setStatus('current')
awcDot11TpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1), ).setIndexNames((0, "AWCVX-MIB", "awcDot11TpFdbAddress"))
if mibBuilder.loadTexts: awcDot11TpFdbEntry.setStatus('current')
awcDot11TpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbAddress.setStatus('current')
awcDot11TpFdbAID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbAID.setStatus('current')
awcDot11TpFdbClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 3), AwcDot11ClientState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbClientState.setStatus('current')
awcDot11TpFdbTxShortRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbTxShortRetries.setStatus('current')
awcDot11TpFdbTxLongRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbTxLongRetries.setStatus('current')
awcDot11TpFdbLatestTxShortRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbLatestTxShortRetries.setStatus('current')
awcDot11TpFdbLatestTxLongRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbLatestTxLongRetries.setStatus('current')
awcDot11TpFdbRxWEPErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbRxWEPErrors.setStatus('current')
awcDot11TpFdbLatestRxSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbLatestRxSignalStrength.setStatus('current')
awcDot11TpFdbLatestRxSignalQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbLatestRxSignalQuality.setStatus('current')
awcDot11TpFdbCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbCapabilities.setStatus('current')
awcDot11TpFdbListenInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbListenInterval.setStatus('current')
awcDot11TpFdbSupportedDataRates = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbSupportedDataRates.setStatus('current')
awcDot11TpFdbPreferredTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbPreferredTxRate.setStatus('current')
awcDot11TpFdbCurrentBSS = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 15), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbCurrentBSS.setStatus('current')
awcDot11TpFdbSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbSSID.setStatus('current')
awcDot11TpFdbVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 5, 1, 17), AwcVlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcDot11TpFdbVlanId.setStatus('current')
awcDot1dTpPortTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 12, 6), )
if mibBuilder.loadTexts: awcDot1dTpPortTable.setStatus('current')
awcDot1dTpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dTpPort"))
if mibBuilder.loadTexts: awcDot1dTpPortEntry.setStatus('current')
awcDot1dTpPortDefaultUcastAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultUcastAllowedToGoTo.setStatus('current')
awcDot1dTpPortDefaultNUcastAllowedToGoTo = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultNUcastAllowedToGoTo.setStatus('current')
awcDot1dTpPortMaxNUcastPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortMaxNUcastPerSecond.setStatus('current')
awcDot1dTpPortDefaultInEthertypeFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultInEthertypeFilterId.setStatus('current')
awcDot1dTpPortDefaultOutEthertypeFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultOutEthertypeFilterId.setStatus('current')
awcDot1dTpPortDefaultInIpProtoFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultInIpProtoFilterId.setStatus('current')
awcDot1dTpPortDefaultOutIpProtoFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultOutIpProtoFilterId.setStatus('current')
awcDot1dTpPortDefaultInIpPortFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultInIpPortFilterId.setStatus('current')
awcDot1dTpPortDefaultOutIpPortFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 6, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot1dTpPortDefaultOutIpPortFilterId.setStatus('current')
awcTpFdbAlertTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 12, 7), )
if mibBuilder.loadTexts: awcTpFdbAlertTable.setStatus('current')
awcTpFdbAlertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1), ).setIndexNames((0, "AWCVX-MIB", "awcTpFdbAlertAddress"))
if mibBuilder.loadTexts: awcTpFdbAlertEntry.setStatus('current')
awcTpFdbAlertAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbAlertAddress.setStatus('current')
awcTpFdbFromAlertSrcPktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbFromAlertSrcPktsImmed.setStatus('current')
awcTpFdbFromAlertSrcOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbFromAlertSrcOctetsImmed.setStatus('current')
awcTpFdbToAlertDestPktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbToAlertDestPktsImmed.setStatus('current')
awcTpFdbToAlertDestOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbToAlertDestOctetsImmed.setStatus('current')
awcTpFdbAlertSentAlertTypePktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbAlertSentAlertTypePktsImmed.setStatus('current')
awcTpFdbAlertSentAlertTypeOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbAlertSentAlertTypeOctetsImmed.setStatus('current')
awcTpFdbAlertRcvdAlertTypePktsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbAlertRcvdAlertTypePktsImmed.setStatus('current')
awcTpFdbAlertRcvdAlertTypeOctetsImmed = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 12, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcTpFdbAlertRcvdAlertTypeOctetsImmed.setStatus('current')
class AwcEventSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("systemFatal", 2), ("protocolFatal", 3), ("portFatal", 4), ("systemAlert", 5), ("protocolAlert", 6), ("portAlert", 7), ("externalAlert", 8), ("systemWarning", 9), ("protocolWarning", 10), ("portWarning", 11), ("externalWarning", 12), ("systemInfo", 13), ("protocolInfo", 14), ("portInfo", 15), ("externalInfo", 16))

awcEventOffsetGMT = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-720, 720)).clone(-300)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventOffsetGMT.setStatus('current')
awcEventUseDaylightSavingsTime = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventUseDaylightSavingsTime.setStatus('current')
awcEventTimestampGMT = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 3), Integer32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventTimestampGMT.setStatus('current')
awcEventUptimeModifiedGMT = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 4), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventUptimeModifiedGMT.setStatus('current')
awcEventDisplayWallClockTime = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDisplayWallClockTime.setStatus('current')
awcEventDisplayUptimeAscending = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDisplayUptimeAscending.setStatus('current')
awcEventDetailDefault = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 7), Integer32().clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDetailDefault.setStatus('current')
awcEventSeverityDispConsole = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 8), AwcEventSeverity().clone('externalInfo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventSeverityDispConsole.setStatus('current')
awcEventSeverityDispHtmlGUI = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 9), AwcEventSeverity().clone('externalInfo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventSeverityDispHtmlGUI.setStatus('current')
awcEventSeverityDispHtmlConsole = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 10), AwcEventSeverity().clone('externalInfo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventSeverityDispHtmlConsole.setStatus('current')
awcEventAlertSNMP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventAlertSNMP.setStatus('current')
awcEventAlertSyslog = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 12), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventAlertSyslog.setStatus('current')
awcEventStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 14, 14))
awcEventCntSeverityNULL = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityNULL.setStatus('current')
awcEventCntSeveritySilent = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeveritySilent.setStatus('current')
awcEventCntSeveritySystemFatal = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeveritySystemFatal.setStatus('current')
awcEventCntSeverityProtocolFatal = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityProtocolFatal.setStatus('current')
awcEventCntSeverityPortFatal = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityPortFatal.setStatus('current')
awcEventCntSeveritySystemAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeveritySystemAlert.setStatus('current')
awcEventCntSeverityProtocolAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityProtocolAlert.setStatus('current')
awcEventCntSeverityPortAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityPortAlert.setStatus('current')
awcEventCntSeverityExternalAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityExternalAlert.setStatus('current')
awcEventCntSeveritySystemWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeveritySystemWarning.setStatus('current')
awcEventCntSeverityProtocolWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityProtocolWarning.setStatus('current')
awcEventCntSeverityPortWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityPortWarning.setStatus('current')
awcEventCntSeverityExternalWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityExternalWarning.setStatus('current')
awcEventCntSeveritySystemInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeveritySystemInfo.setStatus('current')
awcEventCntSeverityProtocolInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityProtocolInfo.setStatus('current')
awcEventCntSeverityPortInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityPortInfo.setStatus('current')
awcEventCntSeverityExternalInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 14, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventCntSeverityExternalInfo.setStatus('current')
awcEventDisposition = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 14, 15))
awcEventDispSeverityNULL = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 1), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityNULL.setStatus('current')
awcEventDispSeveritySilent = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 2), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeveritySilent.setStatus('current')
awcEventDispSeveritySystemFatal = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 3), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeveritySystemFatal.setStatus('current')
awcEventDispSeverityProtocolFatal = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 4), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityProtocolFatal.setStatus('current')
awcEventDispSeverityPortFatal = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 5), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityPortFatal.setStatus('current')
awcEventDispSeveritySystemAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 6), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeveritySystemAlert.setStatus('current')
awcEventDispSeverityProtocolAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 7), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityProtocolAlert.setStatus('current')
awcEventDispSeverityPortAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 8), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityPortAlert.setStatus('current')
awcEventDispSeverityExternalAlert = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 9), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityExternalAlert.setStatus('current')
awcEventDispSeveritySystemWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 10), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeveritySystemWarning.setStatus('current')
awcEventDispSeverityProtocolWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 11), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityProtocolWarning.setStatus('current')
awcEventDispSeverityPortWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 12), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityPortWarning.setStatus('current')
awcEventDispSeverityExternalWarning = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 13), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityExternalWarning.setStatus('current')
awcEventDispSeveritySystemInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 14), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeveritySystemInfo.setStatus('current')
awcEventDispSeverityProtocolInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 15), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityProtocolInfo.setStatus('current')
awcEventDispSeverityPortInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 16), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityPortInfo.setStatus('current')
awcEventDispSeverityExternalInfo = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 15, 17), AwcEventDisposition()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventDispSeverityExternalInfo.setStatus('current')
awcEventSyslogAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventSyslogAddr.setStatus('current')
awcEventSyslogFacility = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventSyslogFacility.setStatus('current')
awcEventTraceStationSeverity = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 20), AwcEventSeverity().clone('externalInfo')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventTraceStationSeverity.setStatus('current')
awcEventTraceLogSize = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventTraceLogSize.setStatus('current')
awcEventTracePacketLen = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2312))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventTracePacketLen.setStatus('current')
awcEventTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 14, 23), )
if mibBuilder.loadTexts: awcEventTable.setStatus('current')
awcEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 14, 23, 1), ).setIndexNames((0, "AWCVX-MIB", "awcEventID"))
if mibBuilder.loadTexts: awcEventEntry.setStatus('current')
awcEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 14, 23, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventID.setStatus('current')
awcEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 14, 23, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventTime.setStatus('current')
awcEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 14, 23, 1, 3), AwcEventSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventSeverity.setStatus('current')
awcEventDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 14, 23, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventDescription.setStatus('current')
awcEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 14, 23, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEventType.setStatus('current')
awcEventUseCiscoFormat = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 25), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEventUseCiscoFormat.setStatus('current')
awcDot11AuthenticateFailDisposition = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 26), AwcDot11EventDisposition().clone('eventLogAndIeeeTrap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11AuthenticateFailDisposition.setStatus('current')
awcDot11DeauthenticateDisposition = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 27), AwcDot11EventDisposition().clone('eventLogAndIeeeTrap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DeauthenticateDisposition.setStatus('current')
awcDot11DisassociateDisposition = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 14, 28), AwcDot11EventDisposition().clone('eventLogAndIeeeTrap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDot11DisassociateDisposition.setStatus('current')
awcEtherIfSpeedSelect = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 5, 6, 7, 8))).clone(namedValues=NamedValues(("tenBaseT", 3), ("oneHundredBaseT", 5), ("tenBaseTfull", 6), ("oneHundredBaseTfull", 7), ("autoDetect", 8))).clone('autoDetect')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEtherIfSpeedSelect.setStatus('current')
awcEtherDuplex = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEtherDuplex.setStatus('current')
awcEtherCamSize = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcEtherCamSize.setStatus('current')
awcEtherEnableSwCam = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEtherEnableSwCam.setStatus('current')
awcEtherForcePortUnblock = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEtherForcePortUnblock.setStatus('current')
awcEtherLostEthernetSeconds = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEtherLostEthernetSeconds.setStatus('current')
awcEtherLostEthernetAction = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAction", 1), ("switchRepeater", 2), ("radioOff", 3), ("restrictSSID", 4))).clone('switchRepeater')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEtherLostEthernetAction.setStatus('current')
awcEtherLostEthernetSSID = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 15, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcEtherLostEthernetSSID.setStatus('current')
awcPolGrpTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 16, 1), )
if mibBuilder.loadTexts: awcPolGrpTable.setStatus('current')
awcPolGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPolGrpId"))
if mibBuilder.loadTexts: awcPolGrpEntry.setStatus('current')
awcPolGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)))
if mibBuilder.loadTexts: awcPolGrpId.setStatus('current')
awcPolGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpName.setStatus('current')
awcPolGrpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpStatus.setStatus('current')
awcPolGrpInEthertypeFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpInEthertypeFilterId.setStatus('current')
awcPolGrpOutEthertypeFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpOutEthertypeFilterId.setStatus('current')
awcPolGrpInIpProtoFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpInIpProtoFilterId.setStatus('current')
awcPolGrpOutIpProtoFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpOutIpProtoFilterId.setStatus('current')
awcPolGrpInIpPortFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpInIpPortFilterId.setStatus('current')
awcPolGrpOutIpPortFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 1, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPolGrpOutIpPortFilterId.setStatus('current')
awcDscpToCosMapEnable = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 16, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDscpToCosMapEnable.setStatus('current')
awcDscpToCosMapTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 16, 3), )
if mibBuilder.loadTexts: awcDscpToCosMapTable.setStatus('current')
awcDscpToCosMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 16, 3, 1), ).setIndexNames((0, "AWCVX-MIB", "awcDscpToCosMapDscp"))
if mibBuilder.loadTexts: awcDscpToCosMapEntry.setStatus('current')
awcDscpToCosMapDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: awcDscpToCosMapDscp.setStatus('current')
awcDscpToCosMapCos = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 16, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcDscpToCosMapCos.setStatus('current')
awcIappMcastIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 17, 1), IpAddress().clone(hexValue="E0000128")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcIappMcastIpAddr.setStatus('current')
awcIappPort = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 17, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2887)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcIappPort.setStatus('current')
awcP802dot1XVersion = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 17, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7, 8, 10))).clone(namedValues=NamedValues(("d7", 7), ("d8", 8), ("d10", 10))).clone('d10')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcP802dot1XVersion.setStatus('current')
awcHotStandbyMACAddr = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 18, 1), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcHotStandbyMACAddr.setStatus('current')
awcHotStandbyPollingFrequency = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 18, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcHotStandbyPollingFrequency.setStatus('current')
awcHotStandbyPollingTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 18, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcHotStandbyPollingTimeOut.setStatus('current')
awcHotStandbyInHotStandby = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 18, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcHotStandbyInHotStandby.setStatus('current')
class AwcHotStandbyState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("running", 0), ("initializing", 1), ("stopped", 2), ("notRunning", 3))

awcHotStandbyState = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 18, 5), AwcHotStandbyState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcHotStandbyState.setStatus('current')
awcHotStandbyStatus = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 18, 6), AwcHotStandbyStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcHotStandbyStatus.setStatus('current')
awcAaaServerTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 19, 1), )
if mibBuilder.loadTexts: awcAaaServerTable.setStatus('current')
awcAaaServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1), ).setIndexNames((0, "AWCVX-MIB", "awcAaaServerPriority"))
if mibBuilder.loadTexts: awcAaaServerEntry.setStatus('current')
awcAaaServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcAaaServerPriority.setStatus('current')
awcAaaServerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("tacacsPlus", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerProtocol.setStatus('current')
awcAaaServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerName.setStatus('current')
awcAaaServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerPort.setStatus('current')
awcAaaServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerTimeout.setStatus('current')
awcAaaClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaClientName.setStatus('current')
awcAaaServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerSharedSecret.setStatus('current')
awcAaaServer8021xCapabilityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServer8021xCapabilityEnabled.setStatus('current')
awcAaaServerMacAddrAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerMacAddrAuthEnabled.setStatus('current')
awcAaaServerAdminAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerAdminAuthEnabled.setStatus('current')
awcAaaServerMipAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerMipAuthEnabled.setStatus('current')
awcAaaServerMaxRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 1, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerMaxRetransmission.setStatus('current')
awcAcctServerTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 19, 2), )
if mibBuilder.loadTexts: awcAcctServerTable.setStatus('current')
awcAcctServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1), ).setIndexNames((0, "AWCVX-MIB", "awcAcctServerPriority"))
if mibBuilder.loadTexts: awcAcctServerEntry.setStatus('current')
awcAcctServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcAcctServerPriority.setStatus('current')
awcAcctServerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("tacacsPlus", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerProtocol.setStatus('current')
awcAcctServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerName.setStatus('current')
awcAcctServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerPort.setStatus('current')
awcAcctServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerTimeout.setStatus('current')
awcAcctServerUpdateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerUpdateEnable.setStatus('current')
awcAcctServerUpdateDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 2592000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerUpdateDelay.setStatus('current')
awcAcctClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctClientName.setStatus('current')
awcAcctSecureEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctSecureEnabled.setStatus('current')
awcAcctGeneralEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctGeneralEnabled.setStatus('current')
awcAcctServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerSharedSecret.setStatus('current')
awcAcctServerMaxRetransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 19, 2, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctServerMaxRetransmission.setStatus('current')
awcAcctEnable = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctEnable.setStatus('current')
awcAcctStopDelayEnable = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 3, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctStopDelayEnable.setStatus('current')
awcAcctStopDelayTime = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 3, 3), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAcctStopDelayTime.setStatus('current')
awcAaaAuthConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 19, 4))
awcAaaServerPrimaryReattemptPeriod = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 4, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcAaaServerPrimaryReattemptPeriod.setStatus('current')
awcAaaServerDot1xAuthCurrent = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcAaaServerDot1xAuthCurrent.setStatus('current')
awcAaaServerMacAddrAuthCurrent = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcAaaServerMacAddrAuthCurrent.setStatus('current')
awcAaaServerAdminAuthCurrent = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcAaaServerAdminAuthCurrent.setStatus('current')
awcAaaServerMipAuthCurrent = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 19, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcAaaServerMipAuthCurrent.setStatus('current')
class AwcPfDisposition(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("forward", 1), ("block", 2), ("default", 3))

class AwcPfPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("default", 1), ("background", 2), ("spare", 3), ("excellentEffort", 4), ("controlledLoad", 5), ("interactiveVideo", 6), ("interactiveVoice", 7), ("networkControl", 8))

awcPrFltEthertypeSetTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 20, 1), )
if mibBuilder.loadTexts: awcPrFltEthertypeSetTable.setStatus('current')
awcPrFltEthertypeSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPfEtSetId"))
if mibBuilder.loadTexts: awcPrFltEthertypeSetEntry.setStatus('current')
awcPfEtSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcPfEtSetId.setStatus('current')
awcPfEtSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtSetName.setStatus('current')
awcPfEtDefaultDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1, 3), AwcPfDisposition().clone('forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtDefaultDisposition.setStatus('current')
awcPfEtDefaultUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtDefaultUcastTimeToLive.setStatus('current')
awcPfEtDefaultNUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtDefaultNUcastTimeToLive.setStatus('current')
awcPfEtSetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtSetStatus.setStatus('current')
awcPrFltEthertypeTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 20, 2), )
if mibBuilder.loadTexts: awcPrFltEthertypeTable.setStatus('current')
awcPrFltEthertypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPfEtSetId"), (0, "AWCVX-MIB", "awcPfEtEthertype"))
if mibBuilder.loadTexts: awcPrFltEthertypeEntry.setStatus('current')
awcPfEtEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 255), ValueRangeConstraint(1501, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcPfEtEthertype.setStatus('current')
awcPfEtDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 2), AwcPfDisposition().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtDisposition.setStatus('current')
awcPfEtUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 3), AwcPfPriority().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtUserPriority.setStatus('current')
awcPfEtUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtUcastTimeToLive.setStatus('current')
awcPfEtNUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtNUcastTimeToLive.setStatus('current')
awcPfEtAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtAlert.setStatus('current')
awcPfEtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfEtStatus.setStatus('current')
awcPrFltIpProtocolSetTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 20, 3), )
if mibBuilder.loadTexts: awcPrFltIpProtocolSetTable.setStatus('current')
awcPrFltIpProtocolSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPfIppSetId"))
if mibBuilder.loadTexts: awcPrFltIpProtocolSetEntry.setStatus('current')
awcPfIppSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcPfIppSetId.setStatus('current')
awcPfIppSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppSetName.setStatus('current')
awcPfIppDefaultDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1, 3), AwcPfDisposition().clone('forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppDefaultDisposition.setStatus('current')
awcPfIppDefaultUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppDefaultUcastTimeToLive.setStatus('current')
awcPfIppDefaultNUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppDefaultNUcastTimeToLive.setStatus('current')
awcPfIppSetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppSetStatus.setStatus('current')
awcPrFltIpProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 20, 4), )
if mibBuilder.loadTexts: awcPrFltIpProtocolTable.setStatus('current')
awcPrFltIpProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPfIppSetId"), (0, "AWCVX-MIB", "awcPfIppIpProtocol"))
if mibBuilder.loadTexts: awcPrFltIpProtocolEntry.setStatus('current')
awcPfIppIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcPfIppIpProtocol.setStatus('current')
awcPfIppDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 2), AwcPfDisposition().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppDisposition.setStatus('current')
awcPfIppUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 3), AwcPfPriority().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppUserPriority.setStatus('current')
awcPfIppUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppUcastTimeToLive.setStatus('current')
awcPfIppNUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppNUcastTimeToLive.setStatus('current')
awcPfIppAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppAlert.setStatus('current')
awcPfIppStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 4, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIppStatus.setStatus('current')
awcPrFltIpPortSetTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 20, 5), )
if mibBuilder.loadTexts: awcPrFltIpPortSetTable.setStatus('current')
awcPrFltIpPortSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPfIptSetId"))
if mibBuilder.loadTexts: awcPrFltIpPortSetEntry.setStatus('current')
awcPfIptSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcPfIptSetId.setStatus('current')
awcPfIptSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptSetName.setStatus('current')
awcPfIptDefaultDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1, 3), AwcPfDisposition().clone('forward')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptDefaultDisposition.setStatus('current')
awcPfIptDefaultUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptDefaultUcastTimeToLive.setStatus('current')
awcPfIptDefaultNUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptDefaultNUcastTimeToLive.setStatus('current')
awcPfIptSetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptSetStatus.setStatus('current')
awcPrFltIpPortTable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 20, 6), )
if mibBuilder.loadTexts: awcPrFltIpPortTable.setStatus('current')
awcPrFltIpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1), ).setIndexNames((0, "AWCVX-MIB", "awcPfIptSetId"), (0, "AWCVX-MIB", "awcPfIptIpPort"))
if mibBuilder.loadTexts: awcPrFltIpPortEntry.setStatus('current')
awcPfIptIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: awcPfIptIpPort.setStatus('current')
awcPfIptDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 2), AwcPfDisposition().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptDisposition.setStatus('current')
awcPfIptUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 3), AwcPfPriority().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptUserPriority.setStatus('current')
awcPfIptUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptUcastTimeToLive.setStatus('current')
awcPfIptNUcastTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptNUcastTimeToLive.setStatus('current')
awcPfIptAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptAlert.setStatus('current')
awcPfIptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 20, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: awcPfIptStatus.setStatus('current')
enableMobileIP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 22, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enableMobileIP.setStatus('current')
awcprimAAP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 22, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcprimAAP.setStatus('current')
awcsec1AAP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 22, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcsec1AAP.setStatus('current')
awcsec2AAP = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 22, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcsec2AAP.setStatus('current')
mipSATable = MibTable((1, 3, 6, 1, 4, 1, 522, 3, 22, 5), )
if mibBuilder.loadTexts: mipSATable.setStatus('current')
mipSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 522, 3, 22, 5, 1), ).setIndexNames((0, "AWCVX-MIB", "mipSAIpStart"))
if mibBuilder.loadTexts: mipSAEntry.setStatus('current')
mipSAIpStart = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 22, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: mipSAIpStart.setStatus('current')
mipSAIpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 22, 5, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mipSAIpEnd.setStatus('current')
mipSAGroupSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 22, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mipSAGroupSPI.setStatus('current')
mipSAGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 22, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mipSAGroupKey.setStatus('current')
mipSAStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 522, 3, 22, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mipSAStatus.setStatus('current')
awcmipDebug = MibScalar((1, 3, 6, 1, 4, 1, 522, 3, 22, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: awcmipDebug.setStatus('current')
awcTrapLog = NotificationType((1, 3, 6, 1, 4, 1, 522, 4)).setObjects(("AWCVX-MIB", "awcEventTime"), ("AWCVX-MIB", "awcEventSeverity"), ("AWCVX-MIB", "awcEventDescription"), ("AWCVX-MIB", "awcEventType"))
if mibBuilder.loadTexts: awcTrapLog.setStatus('current')
awcVxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 100))
awcVxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 100, 1))
awcVxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 522, 3, 100, 2))
awcVxCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 522, 3, 100, 1, 1)).setObjects(("AWCVX-MIB", "awcSystemGroup"), ("AWCVX-MIB", "bootconfigVxGroup"), ("AWCVX-MIB", "awcSerialDevGroup"), ("AWCVX-MIB", "awcFtpGroup"), ("AWCVX-MIB", "awcIfTableGroup"), ("AWCVX-MIB", "awc802dot11Group"), ("AWCVX-MIB", "awcUserMgrGroup"), ("AWCVX-MIB", "awcHttpdGroup"), ("AWCVX-MIB", "awcDnsResGroup"), ("AWCVX-MIB", "awcSnmpGroup"), ("AWCVX-MIB", "awcSntpGroup"), ("AWCVX-MIB", "awcForwardTblGroup"), ("AWCVX-MIB", "awcEventLogGroup"), ("AWCVX-MIB", "awcEtherMIBGroup"), ("AWCVX-MIB", "awcDdpIAPPGroup"), ("AWCVX-MIB", "awcHotStandbyGroup"), ("AWCVX-MIB", "awcAaaGroup"), ("AWCVX-MIB", "awcProtocolFiltersGroup"), ("AWCVX-MIB", "awcMobileIpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcVxCompliance = awcVxCompliance.setStatus('current')
awcSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 1)).setObjects(("AWCVX-MIB", "vxWorksVersion"), ("AWCVX-MIB", "creationDate"), ("AWCVX-MIB", "awcVxVersion"), ("AWCVX-MIB", "sysFlags"), ("AWCVX-MIB", "languageCode"), ("AWCVX-MIB", "awcDevID"), ("AWCVX-MIB", "awcDevIDtxt"), ("AWCVX-MIB", "enableHTTP"), ("AWCVX-MIB", "enableTelnet"), ("AWCVX-MIB", "enableSNMP"), ("AWCVX-MIB", "enableDnsResolver"), ("AWCVX-MIB", "enableSNTP"), ("AWCVX-MIB", "enableWDB"), ("AWCVX-MIB", "pingTxLen"), ("AWCVX-MIB", "awcFirstBoot"), ("AWCVX-MIB", "awcOemOUI"), ("AWCVX-MIB", "awcOemName"), ("AWCVX-MIB", "awcOemNameShort"), ("AWCVX-MIB", "awcOemHomeURL"), ("AWCVX-MIB", "enablePSPF"), ("AWCVX-MIB", "sysExceptionReboot"), ("AWCVX-MIB", "bootblockVersion"), ("AWCVX-MIB", "motherboardRevision"), ("AWCVX-MIB", "enableSTP"), ("AWCVX-MIB", "enableRebootKey"), ("AWCVX-MIB", "awcLocateUnit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcSystemGroup = awcSystemGroup.setStatus('current')
bootconfigVxGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 2)).setObjects(("AWCVX-MIB", "bootconfigBootProtocol"), ("AWCVX-MIB", "bootconfigReadINI"), ("AWCVX-MIB", "bootconfigServerConfigTimeout"), ("AWCVX-MIB", "bootconfigMultOfferTimeout"), ("AWCVX-MIB", "bootconfigReqLeaseDuration"), ("AWCVX-MIB", "bootconfigMinLeaseDuration"), ("AWCVX-MIB", "bootconfigDev"), ("AWCVX-MIB", "bootconfigClientAddr"), ("AWCVX-MIB", "bootconfigHostAddr"), ("AWCVX-MIB", "bootconfigBootFile"), ("AWCVX-MIB", "bootconfigSubnetMask"), ("AWCVX-MIB", "bootconfigGateway"), ("AWCVX-MIB", "bootconfigHostName"), ("AWCVX-MIB", "bootconfigClientName"), ("AWCVX-MIB", "bootconfigNameServerPriority"), ("AWCVX-MIB", "bootconfigNameServer"), ("AWCVX-MIB", "bootconfigDomainName"), ("AWCVX-MIB", "bootconfigSntpServer"), ("AWCVX-MIB", "bootconfigSaveServerResponse"), ("AWCVX-MIB", "bootconfigCmdInvokeIniLoad"), ("AWCVX-MIB", "bootconfigCmdStatusIniLoad"), ("AWCVX-MIB", "bootconfigDhcpClassID"), ("AWCVX-MIB", "bootconfigFileServerAddr"), ("AWCVX-MIB", "bootconfigLogServerAddr"), ("AWCVX-MIB", "bootconfigBootCount"), ("AWCVX-MIB", "bootconfigDhcpClientIdType"), ("AWCVX-MIB", "bootconfigDhcpClientIdValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bootconfigVxGroup = bootconfigVxGroup.setStatus('current')
awcSerialDevGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 3)).setObjects(("AWCVX-MIB", "serialDevIndex"), ("AWCVX-MIB", "serialAdminStatus"), ("AWCVX-MIB", "serialOperStatus"), ("AWCVX-MIB", "serialBaud"), ("AWCVX-MIB", "serialParity"), ("AWCVX-MIB", "serialDataBits"), ("AWCVX-MIB", "serialStopBits"), ("AWCVX-MIB", "serialFlowControl"), ("AWCVX-MIB", "serialTerminalType"), ("AWCVX-MIB", "serialTerminalLines"), ("AWCVX-MIB", "serialTerminalColumns"), ("AWCVX-MIB", "serialDevFd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcSerialDevGroup = awcSerialDevGroup.setStatus('current')
awcFtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 4)).setObjects(("AWCVX-MIB", "defaultFileServer"), ("AWCVX-MIB", "awcFileXferProtocol"), ("AWCVX-MIB", "awcFileXferUser"), ("AWCVX-MIB", "awcFileXferPassword"), ("AWCVX-MIB", "awcFileXferCmdInvokeFileLoad"), ("AWCVX-MIB", "awcFileXferCmdStatusFileLoad"), ("AWCVX-MIB", "awcFileXferCmdInvokeFileSave"), ("AWCVX-MIB", "awcFileXferCmdStatusFileSave"), ("AWCVX-MIB", "awcFileXferFileFirmwareSystem"), ("AWCVX-MIB", "awcFileXferFileFirmwareRadio0"), ("AWCVX-MIB", "awcFileXferFileWebUI"), ("AWCVX-MIB", "awcFileXferFileFpgaPcmcia"), ("AWCVX-MIB", "awcFileXferTftpPort"), ("AWCVX-MIB", "awcFileXferFtpDirectory"), ("AWCVX-MIB", "awcFileXferFilesFLASH"), ("AWCVX-MIB", "awcFileXferFileFirmwareRadio1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcFtpGroup = awcFtpGroup.setStatus('current')
awcIfTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 5)).setObjects(("AWCVX-MIB", "awcIfDefaultPhysAddress"), ("AWCVX-MIB", "awcIfPhysAddress"), ("AWCVX-MIB", "awcIfAdoptPrimaryIdentity"), ("AWCVX-MIB", "awcIfDefaultIpAddress"), ("AWCVX-MIB", "awcIfDefaultIpNetMask"), ("AWCVX-MIB", "awcIfIpAddress"), ("AWCVX-MIB", "awcIfIpNetMask"), ("AWCVX-MIB", "awcIfMSDUMaxLength"), ("AWCVX-MIB", "awcIfOutDiscardsCoS0"), ("AWCVX-MIB", "awcIfOutDiscardsCoS1"), ("AWCVX-MIB", "awcIfOutDiscardsCoS2"), ("AWCVX-MIB", "awcIfOutDiscardsCoS3"), ("AWCVX-MIB", "awcIfOutDiscardsCoS4"), ("AWCVX-MIB", "awcIfOutDiscardsCoS5"), ("AWCVX-MIB", "awcIfOutDiscardsCoS6"), ("AWCVX-MIB", "awcIfOutDiscardsCoS7"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcIfTableGroup = awcIfTableGroup.setStatus('current')
awc802dot11Group = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 6)).setObjects(("AWCVX-MIB", "awcDot11StationRole"), ("AWCVX-MIB", "awcDot11PowerManagementSubMode"), ("AWCVX-MIB", "awcDot11UseAWCExtensions"), ("AWCVX-MIB", "awcDot11AllowAssocBroadcastSSID"), ("AWCVX-MIB", "awcDot11PrivacyOptionImplementedMaxRate"), ("AWCVX-MIB", "awcDot11DesiredBSSLength"), ("AWCVX-MIB", "awcDot11EnetEncapsulationDefault"), ("AWCVX-MIB", "awcDot11ForceReqFirmwareVersion"), ("AWCVX-MIB", "awcDot11BridgeSpacing"), ("AWCVX-MIB", "awcDot11DesiredSSIDMaxAssociatedSTA"), ("AWCVX-MIB", "awcDot11DesiredSSIDNumAssociatedSTA"), ("AWCVX-MIB", "awcDot11AuxiliarySSIDLength"), ("AWCVX-MIB", "awcDot11MultipleSSIDPerBSSImplemented"), ("AWCVX-MIB", "awcDot11SymbolExtensionsImplemented"), ("AWCVX-MIB", "awcDot11SymbolExtensionsEnabled"), ("AWCVX-MIB", "awcDot11DesiredSSIDMicAlgorithm"), ("AWCVX-MIB", "awcDot11DesiredSSIDWEPKeyPermuteAlgorithm"), ("AWCVX-MIB", "awcDot11DesiredSSIDInfrastructureWGB"), ("AWCVX-MIB", "awcDot11DesiredSSIDDefaultPolId"), ("AWCVX-MIB", "awcDot11DesiredSSIDDefaultVlanId"), ("AWCVX-MIB", "awcDot11DesiredSSIDEnableProxyMobileIP"), ("AWCVX-MIB", "awcDot11InfrastructureSSID"), ("AWCVX-MIB", "awcDot11QBSSElementImplemented"), ("AWCVX-MIB", "awcDot11QBSSElementEnabled"), ("AWCVX-MIB", "awcDot11InfrastructureSSIDExclusive"), ("AWCVX-MIB", "awcDot11SendIGMPGeneralQuery"), ("AWCVX-MIB", "awcDot11AuthenticationRequireEAP"), ("AWCVX-MIB", "awcDot11AuthenticationDefaultUcastAllowedToGoTo"), ("AWCVX-MIB", "awcDot11WEPDefaultKeyIndex"), ("AWCVX-MIB", "awcDot11WEPDefaultKeyLen"), ("AWCVX-MIB", "awcDot11WEPDefaultKeyValue"), ("AWCVX-MIB", "awcDot11WEPDefaultKeyMaxIndex"), ("AWCVX-MIB", "awcDot11AllowEncrypted"), ("AWCVX-MIB", "awcDot11WEPKeyMaxLen"), ("AWCVX-MIB", "awcDot11LEAPUserName"), ("AWCVX-MIB", "awcDot11LEAPPassword"), ("AWCVX-MIB", "awcDot11DesiredBSSIndex"), ("AWCVX-MIB", "awcDot11DesiredBSS"), ("AWCVX-MIB", "awcDot11AuxSSIDIndex"), ("AWCVX-MIB", "awcDot11AuxSSID"), ("AWCVX-MIB", "awcDot11AuxSSIDMaxAssociatedSTA"), ("AWCVX-MIB", "awcDot11AuxSSIDNumAssociatedSTA"), ("AWCVX-MIB", "awcDot11AuxSSIDDefaultPolId"), ("AWCVX-MIB", "awcDot11AuxSSIDDefaultVlanId"), ("AWCVX-MIB", "awcDot11AuxSSIDEnableProxyMobileIP"), ("AWCVX-MIB", "awcDot11AuxSSIDAuthAlgEnable"), ("AWCVX-MIB", "awcDot11AuxSSIDAuthAlgRequireEAP"), ("AWCVX-MIB", "awcDot11AuxSSIDAuthAlgDefaultUcastAllowedToGoTo"), ("AWCVX-MIB", "awcDot11AssignedAID"), ("AWCVX-MIB", "awcDot11AssignedSTA"), ("AWCVX-MIB", "awcDot11FirmwareBootstrapVersion"), ("AWCVX-MIB", "awcDot11CurrentCarrierSet"), ("AWCVX-MIB", "awcDot11ModulationType"), ("AWCVX-MIB", "awcDot11PreambleType"), ("AWCVX-MIB", "awcDot11PHYType"), ("AWCVX-MIB", "awcDot11Compatible3100"), ("AWCVX-MIB", "awcDot11Compatible4500"), ("AWCVX-MIB", "awcDot11ChannelAutoImplemented"), ("AWCVX-MIB", "awcDot11ChannelAutoEnabled"), ("AWCVX-MIB", "awcDot11CurrentChannel"), ("AWCVX-MIB", "awcDot11SupportedDataRatesPrivacyIndex"), ("AWCVX-MIB", "awcDot11SupportedDataRatesPrivacyValue"), ("AWCVX-MIB", "awcDot11SupportedDataRatesPrivacyImplemented"), ("AWCVX-MIB", "awcDot11ChanSelectChannel"), ("AWCVX-MIB", "awcDot11ChanSelectEnable"), ("AWCVX-MIB", "awcDot11AssociatedStationCount"), ("AWCVX-MIB", "awcDot11AuthenticatedStationCount"), ("AWCVX-MIB", "awcDot11ReassociatedStationCount"), ("AWCVX-MIB", "awcDot11RoamedStationCount"), ("AWCVX-MIB", "awcDot11DeauthenticateCount"), ("AWCVX-MIB", "awcDot11DisassociateCount"), ("AWCVX-MIB", "awcDot11EncapPktsMMH"), ("AWCVX-MIB", "awcDot11DecapPktsMMH"), ("AWCVX-MIB", "awcDot11EncapErrorsMMH"), ("AWCVX-MIB", "awcDot11DecapErrorsMMH"), ("AWCVX-MIB", "awcDot11DecapExistsMMH"), ("AWCVX-MIB", "awcDot11DecapAccessMMH"), ("AWCVX-MIB", "awcDot11TxDeferEnergyCount"), ("AWCVX-MIB", "awcDot11RxMacCrcErrorCount"), ("AWCVX-MIB", "awcDot11SsidMismatchCount"), ("AWCVX-MIB", "awcDot11QoSCWmin"), ("AWCVX-MIB", "awcDot11QoSCWmax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awc802dot11Group = awc802dot11Group.setStatus('current')
awcUserMgrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 7)).setObjects(("AWCVX-MIB", "userMgrUserIndex"), ("AWCVX-MIB", "userMgrUserName"), ("AWCVX-MIB", "userMgrPassword"), ("AWCVX-MIB", "userMgrCapabilities"), ("AWCVX-MIB", "userMgrStatus"), ("AWCVX-MIB", "enableUserMgr"), ("AWCVX-MIB", "allowBrowseWithoutLogin"), ("AWCVX-MIB", "protectLegalPage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcUserMgrGroup = awcUserMgrGroup.setStatus('current')
awcHttpdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 8)).setObjects(("AWCVX-MIB", "defaultWebRoot"), ("AWCVX-MIB", "defaultHelpRoot"), ("AWCVX-MIB", "getWebUI"), ("AWCVX-MIB", "cmdInvokeGetWebUI"), ("AWCVX-MIB", "cmdStatusGetWebUI"), ("AWCVX-MIB", "awcHttpdPort"), ("AWCVX-MIB", "awcConsoleAutoApply"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcHttpdGroup = awcHttpdGroup.setStatus('current')
awcDnsResGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 9)).setObjects(("AWCVX-MIB", "resolverDomain"), ("AWCVX-MIB", "resolverDomainSuffix"), ("AWCVX-MIB", "resolverDomainServerPriority"), ("AWCVX-MIB", "resolverDomainServer"), ("AWCVX-MIB", "defaultResolverDomain"), ("AWCVX-MIB", "defaultResolverDomainServerPriority"), ("AWCVX-MIB", "defaultResolverDomainServer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcDnsResGroup = awcDnsResGroup.setStatus('current')
awcSnmpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 10)).setObjects(("AWCVX-MIB", "snmpTrapDest"), ("AWCVX-MIB", "snmpTrapCommunity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcSnmpGroup = awcSnmpGroup.setStatus('current')
awcSntpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 11)).setObjects(("AWCVX-MIB", "defaultSntpServer"), ("AWCVX-MIB", "sntpServer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcSntpGroup = awcSntpGroup.setStatus('current')
awcForwardTblGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 12)).setObjects(("AWCVX-MIB", "awcFtMcastAddr"), ("AWCVX-MIB", "awcFtDsHost"), ("AWCVX-MIB", "awcFtBridgeHost"), ("AWCVX-MIB", "awcFtClientSTA"), ("AWCVX-MIB", "awcFtClientSTASelf"), ("AWCVX-MIB", "awcFtBridge"), ("AWCVX-MIB", "awcFtBridgeSelf"), ("AWCVX-MIB", "awcFtRepeater"), ("AWCVX-MIB", "awcFtRepeaterSelf"), ("AWCVX-MIB", "awcFtAccessPoint"), ("AWCVX-MIB", "awcFtBridgeRoot"), ("AWCVX-MIB", "awcFtMaxNumEntries"), ("AWCVX-MIB", "awcFtTimeoutSecUnknown"), ("AWCVX-MIB", "awcFtTimeoutSecMcastAddr"), ("AWCVX-MIB", "awcFtTimeoutSecDsHost"), ("AWCVX-MIB", "awcFtTimeoutSecBridgeHost"), ("AWCVX-MIB", "awcFtTimeoutSecClientSTA"), ("AWCVX-MIB", "awcFtTimeoutSecBridge"), ("AWCVX-MIB", "awcFtTimeoutSecRepeater"), ("AWCVX-MIB", "awcFtTimeoutSecAccessPoint"), ("AWCVX-MIB", "awcFtTimeoutSecBridgeRoot"), ("AWCVX-MIB", "awcFtEnableAwcTpFdbTable"), ("AWCVX-MIB", "awcFtEnableMacAuthServer"), ("AWCVX-MIB", "awcFtRogueApAlertTimeout"), ("AWCVX-MIB", "awcFtEnableMacOrEapAuth"), ("AWCVX-MIB", "awcFtDot1dTpFdbTableEnable"), ("AWCVX-MIB", "awcTpFdbAddress"), ("AWCVX-MIB", "awcTpFdbClassID"), ("AWCVX-MIB", "awcTpFdbSrcPktsImmed"), ("AWCVX-MIB", "awcTpFdbSrcOctetsImmed"), ("AWCVX-MIB", "awcTpFdbSrcErrorPktsImmed"), ("AWCVX-MIB", "awcTpFdbSrcErrorOctetsImmed"), ("AWCVX-MIB", "awcTpFdbDestPktsImmed"), ("AWCVX-MIB", "awcTpFdbDestOctetsImmed"), ("AWCVX-MIB", "awcTpFdbDestErrorPktsImmed"), ("AWCVX-MIB", "awcTpFdbDestErrorOctetsImmed"), ("AWCVX-MIB", "awcTpFdbDestMaxRetryErrorsImmed"), ("AWCVX-MIB", "awcTpFdbIPv4Addr"), ("AWCVX-MIB", "awcTpFdbDdpAddress"), ("AWCVX-MIB", "awcTpFdbDdpSysName"), ("AWCVX-MIB", "awcTpFdbDdpProdDevID"), ("AWCVX-MIB", "awcTpFdbDdpRadioDevID"), ("AWCVX-MIB", "awcTpFdbDdpSwVerMajor"), ("AWCVX-MIB", "awcTpFdbDdpSwVerMinor"), ("AWCVX-MIB", "awcTpFdbDdpSwVerBeta"), ("AWCVX-MIB", "awcTpFdbDdpUptime"), ("AWCVX-MIB", "awcTpFdbDdpNumAnnounceSent"), ("AWCVX-MIB", "awcTpFdbDdpNumAssociated"), ("AWCVX-MIB", "awcTpFdbDdpLoad"), ("AWCVX-MIB", "awcTpFdbDdpDistFromDS"), ("AWCVX-MIB", "awcDot11TpFdbAddress"), ("AWCVX-MIB", "awcDot11TpFdbAID"), ("AWCVX-MIB", "awcDot11TpFdbClientState"), ("AWCVX-MIB", "awcDot11TpFdbTxShortRetries"), ("AWCVX-MIB", "awcDot11TpFdbTxLongRetries"), ("AWCVX-MIB", "awcDot11TpFdbLatestTxShortRetries"), ("AWCVX-MIB", "awcDot11TpFdbLatestTxLongRetries"), ("AWCVX-MIB", "awcDot11TpFdbRxWEPErrors"), ("AWCVX-MIB", "awcDot11TpFdbLatestRxSignalStrength"), ("AWCVX-MIB", "awcDot11TpFdbLatestRxSignalQuality"), ("AWCVX-MIB", "awcDot11TpFdbCapabilities"), ("AWCVX-MIB", "awcDot11TpFdbListenInterval"), ("AWCVX-MIB", "awcDot11TpFdbSupportedDataRates"), ("AWCVX-MIB", "awcDot11TpFdbPreferredTxRate"), ("AWCVX-MIB", "awcDot11TpFdbCurrentBSS"), ("AWCVX-MIB", "awcDot11TpFdbSSID"), ("AWCVX-MIB", "awcDot11TpFdbVlanId"), ("AWCVX-MIB", "awcDot1dTpPortDefaultUcastAllowedToGoTo"), ("AWCVX-MIB", "awcDot1dTpPortDefaultNUcastAllowedToGoTo"), ("AWCVX-MIB", "awcDot1dTpPortMaxNUcastPerSecond"), ("AWCVX-MIB", "awcDot1dTpPortDefaultInEthertypeFilterId"), ("AWCVX-MIB", "awcDot1dTpPortDefaultOutEthertypeFilterId"), ("AWCVX-MIB", "awcDot1dTpPortDefaultInIpProtoFilterId"), ("AWCVX-MIB", "awcDot1dTpPortDefaultOutIpProtoFilterId"), ("AWCVX-MIB", "awcDot1dTpPortDefaultInIpPortFilterId"), ("AWCVX-MIB", "awcDot1dTpPortDefaultOutIpPortFilterId"), ("AWCVX-MIB", "awcTpFdbAlertAddress"), ("AWCVX-MIB", "awcTpFdbFromAlertSrcPktsImmed"), ("AWCVX-MIB", "awcTpFdbFromAlertSrcOctetsImmed"), ("AWCVX-MIB", "awcTpFdbToAlertDestPktsImmed"), ("AWCVX-MIB", "awcTpFdbToAlertDestOctetsImmed"), ("AWCVX-MIB", "awcTpFdbAlertSentAlertTypePktsImmed"), ("AWCVX-MIB", "awcTpFdbAlertSentAlertTypeOctetsImmed"), ("AWCVX-MIB", "awcTpFdbAlertRcvdAlertTypePktsImmed"), ("AWCVX-MIB", "awcTpFdbAlertRcvdAlertTypeOctetsImmed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcForwardTblGroup = awcForwardTblGroup.setStatus('current')
awcEventLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 14)).setObjects(("AWCVX-MIB", "awcEventOffsetGMT"), ("AWCVX-MIB", "awcEventUseDaylightSavingsTime"), ("AWCVX-MIB", "awcEventTimestampGMT"), ("AWCVX-MIB", "awcEventUptimeModifiedGMT"), ("AWCVX-MIB", "awcEventDisplayWallClockTime"), ("AWCVX-MIB", "awcEventDisplayUptimeAscending"), ("AWCVX-MIB", "awcEventDetailDefault"), ("AWCVX-MIB", "awcEventSeverityDispConsole"), ("AWCVX-MIB", "awcEventSeverityDispHtmlGUI"), ("AWCVX-MIB", "awcEventSeverityDispHtmlConsole"), ("AWCVX-MIB", "awcEventAlertSNMP"), ("AWCVX-MIB", "awcEventAlertSyslog"), ("AWCVX-MIB", "awcEventCntSeverityNULL"), ("AWCVX-MIB", "awcEventCntSeveritySilent"), ("AWCVX-MIB", "awcEventCntSeveritySystemFatal"), ("AWCVX-MIB", "awcEventCntSeverityProtocolFatal"), ("AWCVX-MIB", "awcEventCntSeverityPortFatal"), ("AWCVX-MIB", "awcEventCntSeveritySystemAlert"), ("AWCVX-MIB", "awcEventCntSeverityProtocolAlert"), ("AWCVX-MIB", "awcEventCntSeverityPortAlert"), ("AWCVX-MIB", "awcEventCntSeverityExternalAlert"), ("AWCVX-MIB", "awcEventCntSeveritySystemWarning"), ("AWCVX-MIB", "awcEventCntSeverityProtocolWarning"), ("AWCVX-MIB", "awcEventCntSeverityPortWarning"), ("AWCVX-MIB", "awcEventCntSeverityExternalWarning"), ("AWCVX-MIB", "awcEventCntSeveritySystemInfo"), ("AWCVX-MIB", "awcEventCntSeverityProtocolInfo"), ("AWCVX-MIB", "awcEventCntSeverityPortInfo"), ("AWCVX-MIB", "awcEventCntSeverityExternalInfo"), ("AWCVX-MIB", "awcEventDispSeverityNULL"), ("AWCVX-MIB", "awcEventDispSeveritySilent"), ("AWCVX-MIB", "awcEventDispSeveritySystemFatal"), ("AWCVX-MIB", "awcEventDispSeverityProtocolFatal"), ("AWCVX-MIB", "awcEventDispSeverityPortFatal"), ("AWCVX-MIB", "awcEventDispSeveritySystemAlert"), ("AWCVX-MIB", "awcEventDispSeverityProtocolAlert"), ("AWCVX-MIB", "awcEventDispSeverityPortAlert"), ("AWCVX-MIB", "awcEventDispSeverityExternalAlert"), ("AWCVX-MIB", "awcEventDispSeveritySystemWarning"), ("AWCVX-MIB", "awcEventDispSeverityProtocolWarning"), ("AWCVX-MIB", "awcEventDispSeverityPortWarning"), ("AWCVX-MIB", "awcEventDispSeverityExternalWarning"), ("AWCVX-MIB", "awcEventDispSeveritySystemInfo"), ("AWCVX-MIB", "awcEventDispSeverityProtocolInfo"), ("AWCVX-MIB", "awcEventDispSeverityPortInfo"), ("AWCVX-MIB", "awcEventDispSeverityExternalInfo"), ("AWCVX-MIB", "awcEventSyslogAddr"), ("AWCVX-MIB", "awcEventSyslogFacility"), ("AWCVX-MIB", "awcEventTraceStationSeverity"), ("AWCVX-MIB", "awcEventTraceLogSize"), ("AWCVX-MIB", "awcEventTracePacketLen"), ("AWCVX-MIB", "awcEventID"), ("AWCVX-MIB", "awcEventTime"), ("AWCVX-MIB", "awcEventSeverity"), ("AWCVX-MIB", "awcEventDescription"), ("AWCVX-MIB", "awcEventType"), ("AWCVX-MIB", "awcEventUseCiscoFormat"), ("AWCVX-MIB", "awcDot11AuthenticateFailDisposition"), ("AWCVX-MIB", "awcDot11DeauthenticateDisposition"), ("AWCVX-MIB", "awcDot11DisassociateDisposition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcEventLogGroup = awcEventLogGroup.setStatus('current')
awcEtherMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 15)).setObjects(("AWCVX-MIB", "awcEtherIfSpeedSelect"), ("AWCVX-MIB", "awcEtherDuplex"), ("AWCVX-MIB", "awcEtherCamSize"), ("AWCVX-MIB", "awcEtherEnableSwCam"), ("AWCVX-MIB", "awcEtherForcePortUnblock"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcEtherMIBGroup = awcEtherMIBGroup.setStatus('current')
awcPolicyGroupsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 16)).setObjects(("AWCVX-MIB", "awcPolGrpName"), ("AWCVX-MIB", "awcPolGrpStatus"), ("AWCVX-MIB", "awcPolGrpInEthertypeFilterId"), ("AWCVX-MIB", "awcPolGrpOutEthertypeFilterId"), ("AWCVX-MIB", "awcPolGrpInIpProtoFilterId"), ("AWCVX-MIB", "awcPolGrpOutIpProtoFilterId"), ("AWCVX-MIB", "awcPolGrpInIpPortFilterId"), ("AWCVX-MIB", "awcPolGrpOutIpPortFilterId"), ("AWCVX-MIB", "awcDscpToCosMapEnable"), ("AWCVX-MIB", "awcDscpToCosMapCos"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcPolicyGroupsGroup = awcPolicyGroupsGroup.setStatus('current')
awcDdpIAPPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 17)).setObjects(("AWCVX-MIB", "awcIappMcastIpAddr"), ("AWCVX-MIB", "awcIappPort"), ("AWCVX-MIB", "awcP802dot1XVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcDdpIAPPGroup = awcDdpIAPPGroup.setStatus('current')
awcHotStandbyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 18)).setObjects(("AWCVX-MIB", "awcHotStandbyMACAddr"), ("AWCVX-MIB", "awcHotStandbyPollingFrequency"), ("AWCVX-MIB", "awcHotStandbyPollingTimeOut"), ("AWCVX-MIB", "awcHotStandbyInHotStandby"), ("AWCVX-MIB", "awcHotStandbyState"), ("AWCVX-MIB", "awcHotStandbyStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcHotStandbyGroup = awcHotStandbyGroup.setStatus('current')
awcAaaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 19)).setObjects(("AWCVX-MIB", "awcAaaServerPriority"), ("AWCVX-MIB", "awcAaaServerProtocol"), ("AWCVX-MIB", "awcAaaServerName"), ("AWCVX-MIB", "awcAaaServerPort"), ("AWCVX-MIB", "awcAaaServerTimeout"), ("AWCVX-MIB", "awcAaaClientName"), ("AWCVX-MIB", "awcAaaServerSharedSecret"), ("AWCVX-MIB", "awcAaaServer8021xCapabilityEnabled"), ("AWCVX-MIB", "awcAaaServerMacAddrAuthEnabled"), ("AWCVX-MIB", "awcAaaServerAdminAuthEnabled"), ("AWCVX-MIB", "awcAaaServerMipAuthEnabled"), ("AWCVX-MIB", "awcAaaServerMaxRetransmission"), ("AWCVX-MIB", "awcAcctServerPriority"), ("AWCVX-MIB", "awcAcctServerProtocol"), ("AWCVX-MIB", "awcAcctServerName"), ("AWCVX-MIB", "awcAcctServerPort"), ("AWCVX-MIB", "awcAcctServerTimeout"), ("AWCVX-MIB", "awcAcctServerUpdateEnable"), ("AWCVX-MIB", "awcAcctServerUpdateDelay"), ("AWCVX-MIB", "awcAcctClientName"), ("AWCVX-MIB", "awcAcctSecureEnabled"), ("AWCVX-MIB", "awcAcctGeneralEnabled"), ("AWCVX-MIB", "awcAcctServerSharedSecret"), ("AWCVX-MIB", "awcAcctServerMaxRetransmission"), ("AWCVX-MIB", "awcAcctEnable"), ("AWCVX-MIB", "awcAcctStopDelayEnable"), ("AWCVX-MIB", "awcAcctStopDelayTime"), ("AWCVX-MIB", "awcAaaServerPrimaryReattemptPeriod"), ("AWCVX-MIB", "awcAaaServerDot1xAuthCurrent"), ("AWCVX-MIB", "awcAaaServerMacAddrAuthCurrent"), ("AWCVX-MIB", "awcAaaServerAdminAuthCurrent"), ("AWCVX-MIB", "awcAaaServerMipAuthCurrent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcAaaGroup = awcAaaGroup.setStatus('current')
awcProtocolFiltersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 20)).setObjects(("AWCVX-MIB", "awcPfEtSetId"), ("AWCVX-MIB", "awcPfEtSetName"), ("AWCVX-MIB", "awcPfEtDefaultDisposition"), ("AWCVX-MIB", "awcPfEtDefaultUcastTimeToLive"), ("AWCVX-MIB", "awcPfEtDefaultNUcastTimeToLive"), ("AWCVX-MIB", "awcPfEtSetStatus"), ("AWCVX-MIB", "awcPfEtEthertype"), ("AWCVX-MIB", "awcPfEtDisposition"), ("AWCVX-MIB", "awcPfEtUserPriority"), ("AWCVX-MIB", "awcPfEtUcastTimeToLive"), ("AWCVX-MIB", "awcPfEtNUcastTimeToLive"), ("AWCVX-MIB", "awcPfEtAlert"), ("AWCVX-MIB", "awcPfEtStatus"), ("AWCVX-MIB", "awcPfIppSetId"), ("AWCVX-MIB", "awcPfIppSetName"), ("AWCVX-MIB", "awcPfIppDefaultDisposition"), ("AWCVX-MIB", "awcPfIppDefaultUcastTimeToLive"), ("AWCVX-MIB", "awcPfIppDefaultNUcastTimeToLive"), ("AWCVX-MIB", "awcPfIppSetStatus"), ("AWCVX-MIB", "awcPfIppIpProtocol"), ("AWCVX-MIB", "awcPfIppDisposition"), ("AWCVX-MIB", "awcPfIppUserPriority"), ("AWCVX-MIB", "awcPfIppUcastTimeToLive"), ("AWCVX-MIB", "awcPfIppNUcastTimeToLive"), ("AWCVX-MIB", "awcPfIppAlert"), ("AWCVX-MIB", "awcPfIppStatus"), ("AWCVX-MIB", "awcPfIptSetId"), ("AWCVX-MIB", "awcPfIptSetName"), ("AWCVX-MIB", "awcPfIptDefaultDisposition"), ("AWCVX-MIB", "awcPfIptDefaultUcastTimeToLive"), ("AWCVX-MIB", "awcPfIptDefaultNUcastTimeToLive"), ("AWCVX-MIB", "awcPfIptSetStatus"), ("AWCVX-MIB", "awcPfIptIpPort"), ("AWCVX-MIB", "awcPfIptDisposition"), ("AWCVX-MIB", "awcPfIptUserPriority"), ("AWCVX-MIB", "awcPfIptUcastTimeToLive"), ("AWCVX-MIB", "awcPfIptNUcastTimeToLive"), ("AWCVX-MIB", "awcPfIptAlert"), ("AWCVX-MIB", "awcPfIptStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcProtocolFiltersGroup = awcProtocolFiltersGroup.setStatus('current')
awcMobileIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 21)).setObjects(("AWCVX-MIB", "enableMobileIP"), ("AWCVX-MIB", "mipSAIpEnd"), ("AWCVX-MIB", "mipSAGroupSPI"), ("AWCVX-MIB", "mipSAGroupKey"), ("AWCVX-MIB", "mipSAStatus"), ("AWCVX-MIB", "awcmipDebug"), ("AWCVX-MIB", "awcprimAAP"), ("AWCVX-MIB", "awcsec1AAP"), ("AWCVX-MIB", "awcsec2AAP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcMobileIpGroup = awcMobileIpGroup.setStatus('current')
awcEthernetLostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 22)).setObjects(("AWCVX-MIB", "awcEtherLostEthernetSeconds"), ("AWCVX-MIB", "awcEtherLostEthernetAction"), ("AWCVX-MIB", "awcEtherLostEthernetSSID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcEthernetLostGroup = awcEthernetLostGroup.setStatus('current')
awc802dot11GroupExt1 = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 23)).setObjects(("AWCVX-MIB", "awcDot11NonRootMobility"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awc802dot11GroupExt1 = awc802dot11GroupExt1.setStatus('current')
awcForwardTblGroupExt1 = ObjectGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 24)).setObjects(("AWCVX-MIB", "awcFtEnableMcastMapping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcForwardTblGroupExt1 = awcForwardTblGroupExt1.setStatus('current')
awcTrapLogGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 522, 3, 100, 2, 100)).setObjects(("AWCVX-MIB", "awcTrapLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    awcTrapLogGroup = awcTrapLogGroup.setStatus('current')
mibBuilder.exportSymbols("AWCVX-MIB", serialStopBits=serialStopBits, userMgrConfigTable=userMgrConfigTable, awcForwardTbl=awcForwardTbl, awcFileXferCmdStatusFileLoad=awcFileXferCmdStatusFileLoad, awcFileXferFtpDirectory=awcFileXferFtpDirectory, awcDot11DecapExistsMMH=awcDot11DecapExistsMMH, userMgrUserIndex=userMgrUserIndex, awcDot11DesiredBSSLength=awcDot11DesiredBSSLength, awcDot11StationConfigTable=awcDot11StationConfigTable, awcSntpGroup=awcSntpGroup, awcDot11ResourceInfoTable=awcDot11ResourceInfoTable, awcFtRogueApAlertTimeout=awcFtRogueApAlertTimeout, awcFtConfig=awcFtConfig, awcEventDispSeverityPortAlert=awcEventDispSeverityPortAlert, protectLegalPage=protectLegalPage, awcAaaServerDot1xAuthCurrent=awcAaaServerDot1xAuthCurrent, cmdInvokeGetWebUI=cmdInvokeGetWebUI, awcFirstBoot=awcFirstBoot, awcDot11ChannelAutoEnabled=awcDot11ChannelAutoEnabled, awcFtDot1dTpFdbTableEnable=awcFtDot1dTpFdbTableEnable, awcEtherIfSpeedSelect=awcEtherIfSpeedSelect, awcPfIppDefaultDisposition=awcPfIppDefaultDisposition, bootconfigClientName=bootconfigClientName, AwcTpFdbClassID=AwcTpFdbClassID, awcProtocolFiltersGroup=awcProtocolFiltersGroup, awcDot11DesiredSSIDWEPKeyPermuteAlgorithm=awcDot11DesiredSSIDWEPKeyPermuteAlgorithm, awcDot11QBSSElementEnabled=awcDot11QBSSElementEnabled, awcMobileIpGroup=awcMobileIpGroup, awcTpFdbToAlertDestPktsImmed=awcTpFdbToAlertDestPktsImmed, serialOperStatus=serialOperStatus, awcFtEnableMcastMapping=awcFtEnableMcastMapping, awcDot11TpFdbVlanId=awcDot11TpFdbVlanId, awcAcctServerEntry=awcAcctServerEntry, awcsec2AAP=awcsec2AAP, awcDot11AuxiliarySSIDTable=awcDot11AuxiliarySSIDTable, awcPolGrpTable=awcPolGrpTable, awcVxCompliances=awcVxCompliances, awcPrFltIpProtocolSetEntry=awcPrFltIpProtocolSetEntry, awcVxCompliance=awcVxCompliance, awcDscpToCosMapDscp=awcDscpToCosMapDscp, awcPfIppSetId=awcPfIppSetId, bootconfigBootCount=bootconfigBootCount, awcPrFltEthertypeTable=awcPrFltEthertypeTable, awcEventCntSeverityPortAlert=awcEventCntSeverityPortAlert, awcDot11AccessPointCountersTable=awcDot11AccessPointCountersTable, enableSTP=enableSTP, awcAaaClientName=awcAaaClientName, awcDot11SendIGMPGeneralQuery=awcDot11SendIGMPGeneralQuery, awcDot11QBSSElementImplemented=awcDot11QBSSElementImplemented, awcPolGrpOutEthertypeFilterId=awcPolGrpOutEthertypeFilterId, awcEventDispSeverityExternalAlert=awcEventDispSeverityExternalAlert, awcDot11ReassociatedStationCount=awcDot11ReassociatedStationCount, awcForwardTblGroupExt1=awcForwardTblGroupExt1, awcTpFdbAlertSentAlertTypePktsImmed=awcTpFdbAlertSentAlertTypePktsImmed, awcPolGrpOutIpProtoFilterId=awcPolGrpOutIpProtoFilterId, awcDot11SupportedDataRatesPrivacyImplemented=awcDot11SupportedDataRatesPrivacyImplemented, userMgrPassword=userMgrPassword, bootconfigSubnetMask=bootconfigSubnetMask, awcEventDispSeverityNULL=awcEventDispSeverityNULL, serialDataBits=serialDataBits, awcDot1dTpPortDefaultOutEthertypeFilterId=awcDot1dTpPortDefaultOutEthertypeFilterId, awcDot11DesiredBSSIndex=awcDot11DesiredBSSIndex, awcTpFdbIPv4Addr=awcTpFdbIPv4Addr, awcDot11PhyDSSSEntry=awcDot11PhyDSSSEntry, awcForwardTblGroup=awcForwardTblGroup, mipSAGroupKey=mipSAGroupKey, awcEventStatistics=awcEventStatistics, awcDot11AuthenticationDefaultUcastAllowedToGoTo=awcDot11AuthenticationDefaultUcastAllowedToGoTo, awcTpFdbDdpNumAssociated=awcTpFdbDdpNumAssociated, awcAaaServerMipAuthEnabled=awcAaaServerMipAuthEnabled, awcTpFdbSrcErrorPktsImmed=awcTpFdbSrcErrorPktsImmed, awcDot11AuxSSIDAuthAlgEntry=awcDot11AuxSSIDAuthAlgEntry, awcDot11phy=awcDot11phy, awcEventCntSeveritySystemInfo=awcEventCntSeveritySystemInfo, awcDot1dTpPortDefaultOutIpProtoFilterId=awcDot1dTpPortDefaultOutIpProtoFilterId, sysExceptionReboot=sysExceptionReboot, awcAaaServerTimeout=awcAaaServerTimeout, bootconfigFileServerAddr=bootconfigFileServerAddr, awcDot11EncapPktsMMH=awcDot11EncapPktsMMH, awcDscpToCosMapEntry=awcDscpToCosMapEntry, awc802dot11=awc802dot11, awcEtherMIB=awcEtherMIB, awcDot11StationConfigEntry=awcDot11StationConfigEntry, awcDot11PrivacyEntry=awcDot11PrivacyEntry, awcDot11AssociatedStationCount=awcDot11AssociatedStationCount, awcDot11PhyOperationTable=awcDot11PhyOperationTable, awcIfOutDiscardsCoS6=awcIfOutDiscardsCoS6, awcDot11WEPDefaultKeyValue=awcDot11WEPDefaultKeyValue, AwcHotStandbyStatus=AwcHotStandbyStatus, awcDnsResGroup=awcDnsResGroup, awcOemNameShort=awcOemNameShort, bootconfigDhcpClassID=bootconfigDhcpClassID, awcDscpToCosMapTable=awcDscpToCosMapTable, awcSnmpGroup=awcSnmpGroup, awcPfEtDisposition=awcPfEtDisposition, bootconfigVxGroup=bootconfigVxGroup, awcDot11QoSCWmax=awcDot11QoSCWmax, awcPfIptUcastTimeToLive=awcPfIptUcastTimeToLive, awcEventID=awcEventID, awcDot11ResourceInfoEntry=awcDot11ResourceInfoEntry, awcAaaServerPriority=awcAaaServerPriority, awcDdpIAPPGroup=awcDdpIAPPGroup, awcEventCntSeverityProtocolWarning=awcEventCntSeverityProtocolWarning, awcEventTime=awcEventTime, awcEventAlertSNMP=awcEventAlertSNMP, awcHotStandbyPollingFrequency=awcHotStandbyPollingFrequency, AwcHotStandbyState=AwcHotStandbyState, awcDot11WEPDefaultKeyMaxIndex=awcDot11WEPDefaultKeyMaxIndex, awcDot11RxMacCrcErrorCount=awcDot11RxMacCrcErrorCount, awcEventCntSeverityPortWarning=awcEventCntSeverityPortWarning, awcDot11TpFdbSupportedDataRates=awcDot11TpFdbSupportedDataRates, awcTpFdbDdpProdDevID=awcTpFdbDdpProdDevID, awcDot11AuxiliarySSIDLength=awcDot11AuxiliarySSIDLength, awcHotStandbyStatus=awcHotStandbyStatus, awcAcctServerPort=awcAcctServerPort, awcDot11ChanSelectEntry=awcDot11ChanSelectEntry, awcTrapLogGroup=awcTrapLogGroup, awcFileXferFileFirmwareSystem=awcFileXferFileFirmwareSystem, awcDot11PhyFHSSEntry=awcDot11PhyFHSSEntry, awcDot11PhyFHSSTable=awcDot11PhyFHSSTable, awcDot11AllowEncrypted=awcDot11AllowEncrypted, enableHTTP=enableHTTP, awcTpFdbDdpAddress=awcTpFdbDdpAddress, AwcVlanId=AwcVlanId, awcDot11AssignedSTA=awcDot11AssignedSTA, awcDot11StationRole=awcDot11StationRole, awcPrFltIpPortSetEntry=awcPrFltIpPortSetEntry, awcAaaServerSharedSecret=awcAaaServerSharedSecret, awcDot11PrivacyTable=awcDot11PrivacyTable, awcEventCntSeverityExternalWarning=awcEventCntSeverityExternalWarning, awcAcctServerUpdateDelay=awcAcctServerUpdateDelay, AwcPfDisposition=AwcPfDisposition, awcEtherDuplex=awcEtherDuplex, bootblockVersion=bootblockVersion, resolverDomainServerPriority=resolverDomainServerPriority, awcTpFdbDdpTable=awcTpFdbDdpTable, awcPfIptSetId=awcPfIptSetId, bootconfigBootProtocol=bootconfigBootProtocol, awcDot11DeauthenticateCount=awcDot11DeauthenticateCount, awcAcctGeneralEnabled=awcAcctGeneralEnabled, awcIfOutDiscardsCoS4=awcIfOutDiscardsCoS4, awcDot11TxDeferEnergyCount=awcDot11TxDeferEnergyCount, awcFtDsHost=awcFtDsHost, awcEventDispSeverityPortFatal=awcEventDispSeverityPortFatal, serialFlowControl=serialFlowControl, getWebUI=getWebUI, awcDot11AuxSSIDEnableProxyMobileIP=awcDot11AuxSSIDEnableProxyMobileIP, awcEventDisposition=awcEventDisposition, awcPfEtNUcastTimeToLive=awcPfEtNUcastTimeToLive, awcDot1dTpPortDefaultInEthertypeFilterId=awcDot1dTpPortDefaultInEthertypeFilterId, AwcDdpRadioDevID=AwcDdpRadioDevID, awcTpFdbEntry=awcTpFdbEntry, bootconfigNameServerTable=bootconfigNameServerTable, awcDot11FirmwareBootstrapVersion=awcDot11FirmwareBootstrapVersion, awcIfOutDiscardsCoS7=awcIfOutDiscardsCoS7, awcDot11ChannelAutoImplemented=awcDot11ChannelAutoImplemented, awcEventTraceStationSeverity=awcEventTraceStationSeverity, awcFtEnableMacAuthServer=awcFtEnableMacAuthServer, awcTpFdbAlertEntry=awcTpFdbAlertEntry, awcIfOutDiscardsCoS5=awcIfOutDiscardsCoS5, allowBrowseWithoutLogin=allowBrowseWithoutLogin, awcTpFdbAlertRcvdAlertTypePktsImmed=awcTpFdbAlertRcvdAlertTypePktsImmed, awcProtocolFilters=awcProtocolFilters, awcDot11EncapErrorsMMH=awcDot11EncapErrorsMMH, awcDot11TpFdbTable=awcDot11TpFdbTable, bootconfigNameServerPriority=bootconfigNameServerPriority, awcEventDisplayWallClockTime=awcEventDisplayWallClockTime, awcPolGrpInIpProtoFilterId=awcPolGrpInIpProtoFilterId, awcPolicyGroups=awcPolicyGroups, bootconfigNameServer=bootconfigNameServer, bootconfigMultOfferTimeout=bootconfigMultOfferTimeout, awcEventDispSeverityProtocolWarning=awcEventDispSeverityProtocolWarning, awcFileXferCmdStatusFileSave=awcFileXferCmdStatusFileSave, awcAaaServerMacAddrAuthEnabled=awcAaaServerMacAddrAuthEnabled, bootconfigDhcpClientIdType=bootconfigDhcpClientIdType, awcEventCntSeveritySilent=awcEventCntSeveritySilent, WEPKeytype128=WEPKeytype128, awcDot11DisassociateDisposition=awcDot11DisassociateDisposition, awcDot11AuxSSIDMaxAssociatedSTA=awcDot11AuxSSIDMaxAssociatedSTA, awcEventSeverityDispHtmlGUI=awcEventSeverityDispHtmlGUI, awcPfIppDisposition=awcPfIppDisposition, awcFtTimeoutSecBridgeRoot=awcFtTimeoutSecBridgeRoot, enableMobileIP=enableMobileIP, awcEventCntSeverityExternalAlert=awcEventCntSeverityExternalAlert, awcEventAlertSyslog=awcEventAlertSyslog, resolverDomainServerEntry=resolverDomainServerEntry, awcTpFdbAlertTable=awcTpFdbAlertTable, awcFtEnableMacOrEapAuth=awcFtEnableMacOrEapAuth, awcDot11DesiredBSSTable=awcDot11DesiredBSSTable, serialParity=serialParity, awcEventSeverityDispHtmlConsole=awcEventSeverityDispHtmlConsole, awcPolGrpId=awcPolGrpId, awcFtTimeoutSecDsHost=awcFtTimeoutSecDsHost, sntpServer=sntpServer, awcDot11AssignedAIDTable=awcDot11AssignedAIDTable, awcEventDispSeveritySystemAlert=awcEventDispSeveritySystemAlert, awcDot11InfrastructureSSIDExclusive=awcDot11InfrastructureSSIDExclusive, awcPfEtDefaultUcastTimeToLive=awcPfEtDefaultUcastTimeToLive, vxWorksVersion=vxWorksVersion, aironet=aironet, awcDot1dTpPortDefaultUcastAllowedToGoTo=awcDot1dTpPortDefaultUcastAllowedToGoTo, AwcDdpProdDevID=AwcDdpProdDevID, awcTrapLog=awcTrapLog, AwcPfPriority=AwcPfPriority, userMgrConfigEntry=userMgrConfigEntry, awcDot11WEPKeyMaxLen=awcDot11WEPKeyMaxLen, defaultSntpServer=defaultSntpServer, languageCode=languageCode, awcFtBridge=awcFtBridge, awcDot11TpFdbTxLongRetries=awcDot11TpFdbTxLongRetries, awcDot1dTpPortDefaultNUcastAllowedToGoTo=awcDot1dTpPortDefaultNUcastAllowedToGoTo, awcPfIptIpPort=awcPfIptIpPort, bootconfigLogServerAddr=bootconfigLogServerAddr, awcDot11TpFdbCapabilities=awcDot11TpFdbCapabilities, awcAaaServerTable=awcAaaServerTable, awcDot11DecapPktsMMH=awcDot11DecapPktsMMH, awcDot11TpFdbTxShortRetries=awcDot11TpFdbTxShortRetries, awcDot11DesiredSSIDNumAssociatedSTA=awcDot11DesiredSSIDNumAssociatedSTA, enableWDB=enableWDB, awcFtBridgeRoot=awcFtBridgeRoot, awcTpFdbDdpEntry=awcTpFdbDdpEntry, awcIappPort=awcIappPort, awcEthernetLostGroup=awcEthernetLostGroup, mipSATable=mipSATable, awcAcctConfig=awcAcctConfig, awcEventCntSeverityPortInfo=awcEventCntSeverityPortInfo, awcPrFltIpProtocolEntry=awcPrFltIpProtocolEntry, awcDot11AuxSSIDNumAssociatedSTA=awcDot11AuxSSIDNumAssociatedSTA, awcSntp=awcSntp, awcPfIptDisposition=awcPfIptDisposition, awcHttpdGroup=awcHttpdGroup, awcEtherCamSize=awcEtherCamSize, awcIfDefaultIpAddress=awcIfDefaultIpAddress, mipSAEntry=mipSAEntry, awcDot11ForceReqFirmwareVersion=awcDot11ForceReqFirmwareVersion, awcDot11ChanSelectChannel=awcDot11ChanSelectChannel, cmdStatusGetWebUI=cmdStatusGetWebUI, awcTpFdbDdpSwVerBeta=awcTpFdbDdpSwVerBeta, serialTerminalType=serialTerminalType, awcPrFltIpPortTable=awcPrFltIpPortTable, awcVxVersion=awcVxVersion, defaultResolverDomainServerEntry=defaultResolverDomainServerEntry, awcDot11DesiredSSIDDefaultVlanId=awcDot11DesiredSSIDDefaultVlanId, awcPfIptDefaultNUcastTimeToLive=awcPfIptDefaultNUcastTimeToLive, awcPfIppAlert=awcPfIppAlert, awcDot11SupportedDataRatesPrivacyValue=awcDot11SupportedDataRatesPrivacyValue, awcDot11ChanSelectEnable=awcDot11ChanSelectEnable, awcEtherEnableSwCam=awcEtherEnableSwCam, awcEventDispSeverityExternalInfo=awcEventDispSeverityExternalInfo, awcDot11DeauthenticateDisposition=awcDot11DeauthenticateDisposition, awcTpFdbDdpNumAnnounceSent=awcTpFdbDdpNumAnnounceSent, awcDot11QoSCWmin=awcDot11QoSCWmin, awcAaaGroup=awcAaaGroup, awcEventDispSeverityProtocolInfo=awcEventDispSeverityProtocolInfo)
mibBuilder.exportSymbols("AWCVX-MIB", awcTpFdbDdpDistFromDS=awcTpFdbDdpDistFromDS, awcEventDispSeverityPortWarning=awcEventDispSeverityPortWarning, awcPfIppUcastTimeToLive=awcPfIppUcastTimeToLive, awc802dot11GroupExt1=awc802dot11GroupExt1, awcPrFltEthertypeSetEntry=awcPrFltEthertypeSetEntry, awcFtBridgeHost=awcFtBridgeHost, awcEventDispSeveritySystemFatal=awcEventDispSeveritySystemFatal, awcDot11SymbolExtensionsEnabled=awcDot11SymbolExtensionsEnabled, AwcEventDisposition=AwcEventDisposition, awcDot11TpFdbAID=awcDot11TpFdbAID, awcEventDetailDefault=awcEventDetailDefault, awcPfIptDefaultDisposition=awcPfIptDefaultDisposition, awcFileXferProtocol=awcFileXferProtocol, awcPfIppUserPriority=awcPfIppUserPriority, awcEventDispSeveritySilent=awcEventDispSeveritySilent, awcDot11AuthenticateFailDisposition=awcDot11AuthenticateFailDisposition, serialDevFd=serialDevFd, awcFileXferFileWebUI=awcFileXferFileWebUI, mipSAIpStart=mipSAIpStart, awcIfPhysAddress=awcIfPhysAddress, awcDot11AuxSSIDAuthAlgRequireEAP=awcDot11AuxSSIDAuthAlgRequireEAP, awcEtherLostEthernetAction=awcEtherLostEthernetAction, awcDot11AuxSSIDAuthAlgIndex=awcDot11AuxSSIDAuthAlgIndex, awcDot11AuthenticationAlgorithmsEntry=awcDot11AuthenticationAlgorithmsEntry, awcDot11TpFdbCurrentBSS=awcDot11TpFdbCurrentBSS, motherboardRevision=motherboardRevision, awcPfEtSetName=awcPfEtSetName, defaultResolverDomainServerPriority=defaultResolverDomainServerPriority, resolverDomain=resolverDomain, bootconfigGateway=bootconfigGateway, awcTpFdbClassID=awcTpFdbClassID, awcDot11resAttribute=awcDot11resAttribute, awcHotStandbyMACAddr=awcHotStandbyMACAddr, bootconfigDhcpClientIdValue=bootconfigDhcpClientIdValue, awcDot11ChanSelectTable=awcDot11ChanSelectTable, awcDot11AuthenticationRequireEAP=awcDot11AuthenticationRequireEAP, awcTpFdbFromAlertSrcOctetsImmed=awcTpFdbFromAlertSrcOctetsImmed, awcPfIptNUcastTimeToLive=awcPfIptNUcastTimeToLive, awcEtherMIBGroup=awcEtherMIBGroup, awcEventSyslogAddr=awcEventSyslogAddr, awcAaaAuthConfig=awcAaaAuthConfig, awcEventLogGroup=awcEventLogGroup, awcTpFdbDdpSysName=awcTpFdbDdpSysName, awcDot11PrivacyOptionImplementedMaxRate=awcDot11PrivacyOptionImplementedMaxRate, awcEventDispSeverityExternalWarning=awcEventDispSeverityExternalWarning, awcAcctServerProtocol=awcAcctServerProtocol, awcFileXferFileFirmwareRadio1=awcFileXferFileFirmwareRadio1, serialBaud=serialBaud, awcConsoleAutoApply=awcConsoleAutoApply, awcDot11PhyOperationEntry=awcDot11PhyOperationEntry, awcSystem=awcSystem, resolverDomainServer=resolverDomainServer, awcDot11TpFdbLatestRxSignalStrength=awcDot11TpFdbLatestRxSignalStrength, awcPfIppDefaultUcastTimeToLive=awcPfIppDefaultUcastTimeToLive, awcPfIptAlert=awcPfIptAlert, awcDot1dTpPortDefaultOutIpPortFilterId=awcDot1dTpPortDefaultOutIpPortFilterId, awcEventSeverity=awcEventSeverity, awcTpFdbAlertAddress=awcTpFdbAlertAddress, awcTpFdbAlertSentAlertTypeOctetsImmed=awcTpFdbAlertSentAlertTypeOctetsImmed, awcPfIppIpProtocol=awcPfIppIpProtocol, awcDot11CurrentChannel=awcDot11CurrentChannel, awcDot11QoSTable=awcDot11QoSTable, awcPfIptSetStatus=awcPfIptSetStatus, awcFtMaxNumEntries=awcFtMaxNumEntries, awcFtTimeoutSecBridge=awcFtTimeoutSecBridge, awcPrFltIpPortSetTable=awcPrFltIpPortSetTable, bootconfigSaveServerResponse=bootconfigSaveServerResponse, awcDot11AssignedAID=awcDot11AssignedAID, awcEventDispSeveritySystemWarning=awcEventDispSeveritySystemWarning, awcIfIpAddress=awcIfIpAddress, awcDot11TpFdbPreferredTxRate=awcDot11TpFdbPreferredTxRate, awcPfIppStatus=awcPfIppStatus, awcPfEtSetStatus=awcPfEtSetStatus, awcEventSeverityDispConsole=awcEventSeverityDispConsole, bootconfigNameServerEntry=bootconfigNameServerEntry, serialTerminalColumns=serialTerminalColumns, awcAcctServerName=awcAcctServerName, bootconfigDev=bootconfigDev, awcOemHomeURL=awcOemHomeURL, awcAaaServer8021xCapabilityEnabled=awcAaaServer8021xCapabilityEnabled, awcPrFltEthertypeEntry=awcPrFltEthertypeEntry, awcAcctEnable=awcAcctEnable, awcFtTimeoutSecRepeater=awcFtTimeoutSecRepeater, awcAaaServerName=awcAaaServerName, awcDot11PhyDSSSTable=awcDot11PhyDSSSTable, awcFtRepeaterSelf=awcFtRepeaterSelf, awcDot11AuthenticatedStationCount=awcDot11AuthenticatedStationCount, awcEventSyslogFacility=awcEventSyslogFacility, awcEventDispSeveritySystemInfo=awcEventDispSeveritySystemInfo, enableDnsResolver=enableDnsResolver, awcHotStandbyState=awcHotStandbyState, AwcDot11ClientState=AwcDot11ClientState, defaultResolverDomainServerTable=defaultResolverDomainServerTable, awcSnmp=awcSnmp, awcDot11AuxSSIDDefaultPolId=awcDot11AuxSSIDDefaultPolId, enableSNMP=enableSNMP, awcsec1AAP=awcsec1AAP, awcAcctStopDelayTime=awcAcctStopDelayTime, awcTpFdbToAlertDestOctetsImmed=awcTpFdbToAlertDestOctetsImmed, awcAaaServerAdminAuthEnabled=awcAaaServerAdminAuthEnabled, awcUserMgr=awcUserMgr, serialTerminalLines=serialTerminalLines, awcDot11DecapAccessMMH=awcDot11DecapAccessMMH, awcPfEtEthertype=awcPfEtEthertype, awcDot11AuthenticationAlgorithmsIndex=awcDot11AuthenticationAlgorithmsIndex, defaultWebRoot=defaultWebRoot, awcAaaServerPort=awcAaaServerPort, awcDot11WEPDefaultKeyIndex=awcDot11WEPDefaultKeyIndex, awcPolGrpEntry=awcPolGrpEntry, awcDot11res=awcDot11res, awcPrFltEthertypeSetTable=awcPrFltEthertypeSetTable, awcHotStandbyInHotStandby=awcHotStandbyInHotStandby, awcEventDispSeverityPortInfo=awcEventDispSeverityPortInfo, awcDot11AllowAssocBroadcastSSID=awcDot11AllowAssocBroadcastSSID, awcDot1dTpPortEntry=awcDot1dTpPortEntry, awcIfOutDiscardsCoS2=awcIfOutDiscardsCoS2, awcPolGrpInIpPortFilterId=awcPolGrpInIpPortFilterId, awcEventTracePacketLen=awcEventTracePacketLen, awcAaaServerEntry=awcAaaServerEntry, awcTpFdbDdpLoad=awcTpFdbDdpLoad, awcIfAdoptPrimaryIdentity=awcIfAdoptPrimaryIdentity, awcDot11SymbolExtensionsImplemented=awcDot11SymbolExtensionsImplemented, awcPfEtUserPriority=awcPfEtUserPriority, awcIfMSDUMaxLength=awcIfMSDUMaxLength, awcIfEntry=awcIfEntry, awcEtherLostEthernetSeconds=awcEtherLostEthernetSeconds, awcEtherForcePortUnblock=awcEtherForcePortUnblock, awcRipConfig=awcRipConfig, awcHotStandby=awcHotStandby, AwcDot11MicAlgorithm=AwcDot11MicAlgorithm, resolverDomainServerTable=resolverDomainServerTable, bootconfigSntpServer=bootconfigSntpServer, PYSNMP_MODULE_ID=awcVx, awcFileXferCmdInvokeFileLoad=awcFileXferCmdInvokeFileLoad, bootconfigReqLeaseDuration=bootconfigReqLeaseDuration, awcDot11TpFdbLatestTxLongRetries=awcDot11TpFdbLatestTxLongRetries, defaultResolverDomain=defaultResolverDomain, awcAaaServerProtocol=awcAaaServerProtocol, awcEventUptimeModifiedGMT=awcEventUptimeModifiedGMT, awcPolGrpInEthertypeFilterId=awcPolGrpInEthertypeFilterId, awcIfOutDiscardsCoS3=awcIfOutDiscardsCoS3, awcDot11BridgeSpacing=awcDot11BridgeSpacing, awcTpFdbSrcOctetsImmed=awcTpFdbSrcOctetsImmed, awcP802dot1XVersion=awcP802dot1XVersion, awcOemOUI=awcOemOUI, awcDot11CountersTable=awcDot11CountersTable, awcDot11PreambleType=awcDot11PreambleType, awcHotStandbyPollingTimeOut=awcHotStandbyPollingTimeOut, awcDot11DesiredSSIDEnableProxyMobileIP=awcDot11DesiredSSIDEnableProxyMobileIP, awcDot11smt=awcDot11smt, awcIfOutDiscardsCoS0=awcIfOutDiscardsCoS0, awcFtTimeoutSecBridgeHost=awcFtTimeoutSecBridgeHost, awcDot11WEPDefaultKeyLen=awcDot11WEPDefaultKeyLen, awcIfDefaultIpNetMask=awcIfDefaultIpNetMask, awcPfIppSetName=awcPfIppSetName, awcDot11DesiredBSSEntry=awcDot11DesiredBSSEntry, awcPfEtStatus=awcPfEtStatus, awcFileXferUser=awcFileXferUser, bootconfigClientAddr=bootconfigClientAddr, awcPfIppDefaultNUcastTimeToLive=awcPfIppDefaultNUcastTimeToLive, AwcDot11WEPKeyPermuteAlgorithm=AwcDot11WEPKeyPermuteAlgorithm, awcDot1dTpPortDefaultInIpPortFilterId=awcDot1dTpPortDefaultInIpPortFilterId, awcAcctServerPriority=awcAcctServerPriority, awcFileXferPassword=awcFileXferPassword, awcDot11InfrastructureSSID=awcDot11InfrastructureSSID, awcFtAccessPoint=awcFtAccessPoint, awcPfIptUserPriority=awcPfIptUserPriority, awcDot11AuxiliarySSIDEntry=awcDot11AuxiliarySSIDEntry, awcFileXferTftpPort=awcFileXferTftpPort, awcDnsRes=awcDnsRes, awcTpFdbDdpSwVerMinor=awcTpFdbDdpSwVerMinor, defaultHelpRoot=defaultHelpRoot, awcDot11TpFdbRxWEPErrors=awcDot11TpFdbRxWEPErrors, awcEventUseDaylightSavingsTime=awcEventUseDaylightSavingsTime, awcTpFdbDestErrorPktsImmed=awcTpFdbDestErrorPktsImmed, enableUserMgr=enableUserMgr, awcIfOutDiscardsCoS1=awcIfOutDiscardsCoS1, awcAaaServerMaxRetransmission=awcAaaServerMaxRetransmission, bootconfigMinLeaseDuration=bootconfigMinLeaseDuration, bootconfigServerConfigTimeout=bootconfigServerConfigTimeout, awcHttpdPort=awcHttpdPort, awcTpFdbDestMaxRetryErrorsImmed=awcTpFdbDestMaxRetryErrorsImmed, awcEventType=awcEventType, pingTxLen=pingTxLen, awcDevIDtxt=awcDevIDtxt, awcDot11EnetEncapsulationDefault=awcDot11EnetEncapsulationDefault, awcPrFltIpProtocolSetTable=awcPrFltIpProtocolSetTable, awcEventCntSeverityExternalInfo=awcEventCntSeverityExternalInfo, awcSystemGroup=awcSystemGroup, awcMobileIP=awcMobileIP, awcSerialConfigEntry=awcSerialConfigEntry, awcVxGroups=awcVxGroups, awcFtBridgeSelf=awcFtBridgeSelf, awcDscpToCosMapCos=awcDscpToCosMapCos, awcEventCntSeverityProtocolInfo=awcEventCntSeverityProtocolInfo, awcprimAAP=awcprimAAP, mipSAStatus=mipSAStatus, awcIappMcastIpAddr=awcIappMcastIpAddr, awcAaaServerMacAddrAuthCurrent=awcAaaServerMacAddrAuthCurrent, awcAcctServerTimeout=awcAcctServerTimeout, awcAcctServerMaxRetransmission=awcAcctServerMaxRetransmission, awcSerialDevGroup=awcSerialDevGroup, serialDevIndex=serialDevIndex, awcDdpIAPP=awcDdpIAPP, awcTpFdbDestOctetsImmed=awcTpFdbDestOctetsImmed, awcPfIppSetStatus=awcPfIppSetStatus, awcEventTraceLogSize=awcEventTraceLogSize, AwcPolId=AwcPolId, awcIfTable=awcIfTable, awc802dot11Group=awc802dot11Group, AwcInvokeCommand=AwcInvokeCommand, awcPfIptStatus=awcPfIptStatus, awcTpFdbAlertRcvdAlertTypeOctetsImmed=awcTpFdbAlertRcvdAlertTypeOctetsImmed, bootconfigHostName=bootconfigHostName, awcDot11ModulationType=awcDot11ModulationType, awcDot1dTpPortTable=awcDot1dTpPortTable, awcDot1dTpPortDefaultInIpProtoFilterId=awcDot1dTpPortDefaultInIpProtoFilterId, awcVx=awcVx, awcFtTimeoutSecMcastAddr=awcFtTimeoutSecMcastAddr, awcDot11AuxSSIDDefaultVlanId=awcDot11AuxSSIDDefaultVlanId, awcTpFdbTable=awcTpFdbTable, mipSAIpEnd=mipSAIpEnd, userMgrStatus=userMgrStatus, awcPrFltIpPortEntry=awcPrFltIpPortEntry, bootconfigHostAddr=bootconfigHostAddr, enablePSPF=enablePSPF, awcFileXferFileFirmwareRadio0=awcFileXferFileFirmwareRadio0, awcTpFdbDdpRadioDevID=awcTpFdbDdpRadioDevID, awcAaaServerPrimaryReattemptPeriod=awcAaaServerPrimaryReattemptPeriod, awcFtMcastAddr=awcFtMcastAddr, awcAaa=awcAaa, bootconfigVx=bootconfigVx, awcTpFdbDestPktsImmed=awcTpFdbDestPktsImmed, awcDot11WEPDefaultKeysTable=awcDot11WEPDefaultKeysTable, awcFileXferFilesFLASH=awcFileXferFilesFLASH, awcAcctStopDelayEnable=awcAcctStopDelayEnable, awcDot11RoamedStationCount=awcDot11RoamedStationCount, awcHotStandbyGroup=awcHotStandbyGroup, awcFtClientSTASelf=awcFtClientSTASelf, awcEventCntSeverityProtocolFatal=awcEventCntSeverityProtocolFatal, awcSerialDev=awcSerialDev, defaultResolverDomainServer=defaultResolverDomainServer, awcDot11TpFdbEntry=awcDot11TpFdbEntry, awcAcctClientName=awcAcctClientName, awcVxConformance=awcVxConformance, bootconfigReadINI=bootconfigReadINI, awcAcctSecureEnabled=awcAcctSecureEnabled, awcDot11LEAPUserName=awcDot11LEAPUserName, awcDot11SupportedDataRatesPrivacyEntry=awcDot11SupportedDataRatesPrivacyEntry, awcDot11SsidMismatchCount=awcDot11SsidMismatchCount, awcEventTimestampGMT=awcEventTimestampGMT, awcAcctServerTable=awcAcctServerTable, awcDot11MultipleSSIDPerBSSImplemented=awcDot11MultipleSSIDPerBSSImplemented, awcEventCntSeveritySystemAlert=awcEventCntSeveritySystemAlert)
mibBuilder.exportSymbols("AWCVX-MIB", awcDot1dTpPortMaxNUcastPerSecond=awcDot1dTpPortMaxNUcastPerSecond, defaultFileServer=defaultFileServer, awcFtEnableAwcTpFdbTable=awcFtEnableAwcTpFdbTable, awcTpFdbDestErrorOctetsImmed=awcTpFdbDestErrorOctetsImmed, sysFlags=sysFlags, awcTpFdbFromAlertSrcPktsImmed=awcTpFdbFromAlertSrcPktsImmed, serialAdminStatus=serialAdminStatus, awcEventCntSeverityProtocolAlert=awcEventCntSeverityProtocolAlert, awcDot11WEPDefaultKeysEntry=awcDot11WEPDefaultKeysEntry, awcOemName=awcOemName, awcTpFdbSrcErrorOctetsImmed=awcTpFdbSrcErrorOctetsImmed, awcDot11TpFdbAddress=awcDot11TpFdbAddress, awcEventOffsetGMT=awcEventOffsetGMT, awcAcctServerSharedSecret=awcAcctServerSharedSecret, awcDot11NonRootMobility=awcDot11NonRootMobility, awcDot11AuthenticationAlgorithmsTable=awcDot11AuthenticationAlgorithmsTable, enableRebootKey=enableRebootKey, awcDot11DecapErrorsMMH=awcDot11DecapErrorsMMH, awcAaaServerMipAuthCurrent=awcAaaServerMipAuthCurrent, awcDot11PowerManagementSubMode=awcDot11PowerManagementSubMode, awcIfIpNetMask=awcIfIpNetMask, awcDot11AuxSSID=awcDot11AuxSSID, bootconfigCmdStatusIniLoad=bootconfigCmdStatusIniLoad, awcPfEtUcastTimeToLive=awcPfEtUcastTimeToLive, awcPfEtSetId=awcPfEtSetId, awcDot11AccessPointCountersEntry=awcDot11AccessPointCountersEntry, AwcEventSeverity=AwcEventSeverity, awcDot11mac=awcDot11mac, awcDot11CurrentCarrierSet=awcDot11CurrentCarrierSet, awcDot11DesiredSSIDMaxAssociatedSTA=awcDot11DesiredSSIDMaxAssociatedSTA, awcDot11QoSCoS=awcDot11QoSCoS, awcAcctServerUpdateEnable=awcAcctServerUpdateEnable, awcEventCntSeverityPortFatal=awcEventCntSeverityPortFatal, awcPolGrpOutIpPortFilterId=awcPolGrpOutIpPortFilterId, mipSAGroupSPI=mipSAGroupSPI, awcDscpToCosMapEnable=awcDscpToCosMapEnable, bootconfigDomainName=bootconfigDomainName, awcDot11DesiredSSIDInfrastructureWGB=awcDot11DesiredSSIDInfrastructureWGB, awcIfTableGroup=awcIfTableGroup, awcHttpd=awcHttpd, userMgrCapabilities=userMgrCapabilities, awcPolicyGroupsGroup=awcPolicyGroupsGroup, awcFileXferFileFpgaPcmcia=awcFileXferFileFpgaPcmcia, awcDot11CountersEntry=awcDot11CountersEntry, awcTpFdbSrcPktsImmed=awcTpFdbSrcPktsImmed, awcDot11LEAPPassword=awcDot11LEAPPassword, awcTpFdbDdpSwVerMajor=awcTpFdbDdpSwVerMajor, awcDot11AuxSSIDIndex=awcDot11AuxSSIDIndex, awcEtherLostEthernetSSID=awcEtherLostEthernetSSID, awcFtTimeoutSecAccessPoint=awcFtTimeoutSecAccessPoint, awcEventDispSeverityProtocolAlert=awcEventDispSeverityProtocolAlert, awcDot11TpFdbLatestTxShortRetries=awcDot11TpFdbLatestTxShortRetries, awcPrFltIpProtocolTable=awcPrFltIpProtocolTable, awcDot11DesiredBSS=awcDot11DesiredBSS, awcDot11AssignedAIDEntry=awcDot11AssignedAIDEntry, enableSNTP=enableSNTP, awcDot11PHYType=awcDot11PHYType, awcSerialConfigTable=awcSerialConfigTable, awcDot11SupportedDataRatesPrivacyIndex=awcDot11SupportedDataRatesPrivacyIndex, awcDevID=awcDevID, awcDot11DisassociateCount=awcDot11DisassociateCount, enableTelnet=enableTelnet, awcDot11DesiredSSIDMicAlgorithm=awcDot11DesiredSSIDMicAlgorithm, awcDot11AuxSSIDAuthAlgEnable=awcDot11AuxSSIDAuthAlgEnable, awcFtp=awcFtp, awcPfIppNUcastTimeToLive=awcPfIppNUcastTimeToLive, awcPfEtAlert=awcPfEtAlert, awcTpFdbAddress=awcTpFdbAddress, snmpTrapDest=snmpTrapDest, awcPfEtDefaultDisposition=awcPfEtDefaultDisposition, awcDot11TpFdbClientState=awcDot11TpFdbClientState, resolverDomainSuffix=resolverDomainSuffix, awcDot11QoSEntry=awcDot11QoSEntry, awcDot11TpFdbLatestRxSignalQuality=awcDot11TpFdbLatestRxSignalQuality, awcFtRepeater=awcFtRepeater, awcEventDescription=awcEventDescription, awcDot11UseAWCExtensions=awcDot11UseAWCExtensions, bootconfigBootFile=bootconfigBootFile, awcDot11AuxSSIDAuthAlgTable=awcDot11AuxSSIDAuthAlgTable, snmpTrapCommunity=snmpTrapCommunity, awcPfIptDefaultUcastTimeToLive=awcPfIptDefaultUcastTimeToLive, awcDot11Compatible3100=awcDot11Compatible3100, awcLocateUnit=awcLocateUnit, AwcDot11EventDisposition=AwcDot11EventDisposition, awcDot11Compatible4500=awcDot11Compatible4500, awcDot11TpFdbSSID=awcDot11TpFdbSSID, awcEventCntSeverityNULL=awcEventCntSeverityNULL, awcFtClientSTA=awcFtClientSTA, awcEventCntSeveritySystemFatal=awcEventCntSeveritySystemFatal, awcFileXferCmdInvokeFileSave=awcFileXferCmdInvokeFileSave, awcEventTable=awcEventTable, awcPfEtDefaultNUcastTimeToLive=awcPfEtDefaultNUcastTimeToLive, awcEventEntry=awcEventEntry, awcUserMgrGroup=awcUserMgrGroup, awcEventUseCiscoFormat=awcEventUseCiscoFormat, awcEventCntSeveritySystemWarning=awcEventCntSeveritySystemWarning, awcDot11AuxSSIDAuthAlgDefaultUcastAllowedToGoTo=awcDot11AuxSSIDAuthAlgDefaultUcastAllowedToGoTo, awcEventDispSeverityProtocolFatal=awcEventDispSeverityProtocolFatal, awcFtTimeoutSecUnknown=awcFtTimeoutSecUnknown, awcPfIptSetName=awcPfIptSetName, userMgrUserName=userMgrUserName, awcFtStatistics=awcFtStatistics, awcAaaServerAdminAuthCurrent=awcAaaServerAdminAuthCurrent, creationDate=creationDate, awcPolGrpName=awcPolGrpName, awcPolGrpStatus=awcPolGrpStatus, bootconfigCmdInvokeIniLoad=bootconfigCmdInvokeIniLoad, awcDot11SupportedDataRatesPrivacyTable=awcDot11SupportedDataRatesPrivacyTable, awcDot11DesiredSSIDDefaultPolId=awcDot11DesiredSSIDDefaultPolId, awcmipDebug=awcmipDebug, awcFtTimeoutSecClientSTA=awcFtTimeoutSecClientSTA, awcIfDefaultPhysAddress=awcIfDefaultPhysAddress, awcDot11TpFdbListenInterval=awcDot11TpFdbListenInterval, awcEventLog=awcEventLog, awcEventDisplayUptimeAscending=awcEventDisplayUptimeAscending, awcFtpGroup=awcFtpGroup, awcTpFdbDdpUptime=awcTpFdbDdpUptime)
