#
# PySNMP MIB module LLDP-EXT-MED-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LLDP-EXT-MED-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
Dscp, = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
lldpRemLocalPortNum, lldpLocPortNum, lldpRemTimeMark, lldpRemChassisId, lldpPortConfigEntry, lldpExtensions, lldpRemChassisIdSubtype, lldpRemIndex = mibBuilder.importSymbols("LLDP-MIB", "lldpRemLocalPortNum", "lldpLocPortNum", "lldpRemTimeMark", "lldpRemChassisId", "lldpPortConfigEntry", "lldpExtensions", "lldpRemChassisIdSubtype", "lldpRemIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, iso, NotificationType, Integer32, MibIdentifier, Counter32, Unsigned32, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "iso", "NotificationType", "Integer32", "MibIdentifier", "Counter32", "Unsigned32", "Gauge32", "Counter64")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
lldpXMedMIB = ModuleIdentity((1, 0, 8802, 1, 1, 2, 1, 5, 4795))
lldpXMedMIB.setRevisions(('2005-07-28 00:00',))
if mibBuilder.loadTexts: lldpXMedMIB.setLastUpdated('200507280000Z')
if mibBuilder.loadTexts: lldpXMedMIB.setOrganization('TIA TR41.4 Working Group')
lldpXMedNotifications = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 0))
lldpXMedObjects = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1))
lldpXMedTopologyChangeDetected = NotificationType((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 0, 1)).setObjects(("LLDP-MIB", "lldpRemChassisIdSubtype"), ("LLDP-MIB", "lldpRemChassisId"), ("LLDP-EXT-MED-MIB", "lldpXMedRemDeviceClass"))
if mibBuilder.loadTexts: lldpXMedTopologyChangeDetected.setStatus('current')
lldpXMedConfig = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1))
lldpXMedLocalData = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2))
lldpXMedRemoteData = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3))
class LldpXMedDeviceClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("notDefined", 0), ("endpointClass1", 1), ("endpointClass2", 2), ("endpointClass3", 3), ("networkConnectivity", 4))

class LldpXMedCapabilities(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("capabilities", 0), ("networkPolicy", 1), ("location", 2), ("extendedPSE", 3), ("extendedPD", 4), ("inventory", 5))

class LocationSubtype(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("coordinateBased", 2), ("civicAddress", 3), ("elin", 4))

class PolicyAppType(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("unknown", 0), ("voice", 1), ("voiceSignaling", 2), ("guestVoice", 3), ("guestVoiceSignaling", 4), ("softPhoneVoice", 5), ("videoconferencing", 6), ("streamingVideo", 7), ("videoSignaling", 8))

lldpXMedLocDeviceClass = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 1), LldpXMedDeviceClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocDeviceClass.setStatus('current')
lldpXMedPortConfigTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2), )
if mibBuilder.loadTexts: lldpXMedPortConfigTable.setStatus('current')
lldpXMedPortConfigEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1), )
lldpPortConfigEntry.registerAugmentions(("LLDP-EXT-MED-MIB", "lldpXMedPortConfigEntry"))
lldpXMedPortConfigEntry.setIndexNames(*lldpPortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpXMedPortConfigEntry.setStatus('current')
lldpXMedPortCapSupported = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1, 1), LldpXMedCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedPortCapSupported.setStatus('current')
lldpXMedPortConfigTLVsTxEnable = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1, 2), LldpXMedCapabilities()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXMedPortConfigTLVsTxEnable.setStatus('current')
lldpXMedPortConfigNotifEnable = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXMedPortConfigNotifEnable.setStatus('current')
lldpXMedFastStartRepeatCount = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXMedFastStartRepeatCount.setStatus('current')
lldpXMedLocMediaPolicyTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1), )
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyTable.setStatus('current')
lldpXMedLocMediaPolicyEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-MIB", "lldpLocPortNum"), (0, "LLDP-EXT-MED-MIB", "lldpXMedLocMediaPolicyAppType"))
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyEntry.setStatus('current')
lldpXMedLocMediaPolicyAppType = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 1), PolicyAppType())
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyAppType.setStatus('current')
lldpXMedLocMediaPolicyVlanID = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ValueRangeConstraint(4095, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyVlanID.setStatus('current')
lldpXMedLocMediaPolicyPriority = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyPriority.setStatus('current')
lldpXMedLocMediaPolicyDscp = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 4), Dscp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyDscp.setStatus('current')
lldpXMedLocMediaPolicyUnknown = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyUnknown.setStatus('current')
lldpXMedLocMediaPolicyTagged = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocMediaPolicyTagged.setStatus('current')
lldpXMedLocHardwareRev = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocHardwareRev.setStatus('current')
lldpXMedLocFirmwareRev = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocFirmwareRev.setStatus('current')
lldpXMedLocSoftwareRev = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocSoftwareRev.setStatus('current')
lldpXMedLocSerialNum = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocSerialNum.setStatus('current')
lldpXMedLocMfgName = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocMfgName.setStatus('current')
lldpXMedLocModelName = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocModelName.setStatus('current')
lldpXMedLocAssetID = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocAssetID.setStatus('current')
lldpXMedLocLocationTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9), )
if mibBuilder.loadTexts: lldpXMedLocLocationTable.setStatus('current')
lldpXMedLocLocationEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9, 1), ).setIndexNames((0, "LLDP-MIB", "lldpLocPortNum"), (0, "LLDP-EXT-MED-MIB", "lldpXMedLocLocationSubtype"))
if mibBuilder.loadTexts: lldpXMedLocLocationEntry.setStatus('current')
lldpXMedLocLocationSubtype = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9, 1, 1), LocationSubtype())
if mibBuilder.loadTexts: lldpXMedLocLocationSubtype.setStatus('current')
lldpXMedLocLocationInfo = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpXMedLocLocationInfo.setStatus('current')
lldpXMedLocXPoEDeviceType = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("pseDevice", 2), ("pdDevice", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEDeviceType.setStatus('current')
lldpXMedLocXPoEPSEPortTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11), )
if mibBuilder.loadTexts: lldpXMedLocXPoEPSEPortTable.setStatus('current')
lldpXMedLocXPoEPSEPortEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11, 1), ).setIndexNames((0, "LLDP-MIB", "lldpLocPortNum"))
if mibBuilder.loadTexts: lldpXMedLocXPoEPSEPortEntry.setStatus('current')
lldpXMedLocXPoEPSEPortPowerAv = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setUnits('tenth of watt').setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEPSEPortPowerAv.setStatus('current')
lldpXMedLocXPoEPSEPortPDPriority = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("critical", 2), ("high", 3), ("low", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEPSEPortPDPriority.setStatus('current')
lldpXMedLocXPoEPSEPowerSource = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("primary", 2), ("backup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEPSEPowerSource.setStatus('current')
lldpXMedLocXPoEPDPowerReq = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setUnits('tenth of watt').setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEPDPowerReq.setStatus('current')
lldpXMedLocXPoEPDPowerSource = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("fromPSE", 2), ("local", 3), ("localAndPSE", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEPDPowerSource.setStatus('current')
lldpXMedLocXPoEPDPowerPriority = MibScalar((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("critical", 2), ("high", 3), ("low", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedLocXPoEPDPowerPriority.setStatus('current')
lldpXMedRemCapabilitiesTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1), )
if mibBuilder.loadTexts: lldpXMedRemCapabilitiesTable.setStatus('current')
lldpXMedRemCapabilitiesEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"))
if mibBuilder.loadTexts: lldpXMedRemCapabilitiesEntry.setStatus('current')
lldpXMedRemCapSupported = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1, 1), LldpXMedCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemCapSupported.setStatus('current')
lldpXMedRemCapCurrent = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1, 2), LldpXMedCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemCapCurrent.setStatus('current')
lldpXMedRemDeviceClass = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 1, 1, 3), LldpXMedDeviceClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemDeviceClass.setStatus('current')
lldpXMedRemMediaPolicyTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2), )
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyTable.setStatus('current')
lldpXMedRemMediaPolicyEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"), (0, "LLDP-EXT-MED-MIB", "lldpXMedRemMediaPolicyAppType"))
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyEntry.setStatus('current')
lldpXMedRemMediaPolicyAppType = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 1), PolicyAppType())
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyAppType.setStatus('current')
lldpXMedRemMediaPolicyVlanID = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ValueRangeConstraint(4095, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyVlanID.setStatus('current')
lldpXMedRemMediaPolicyPriority = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyPriority.setStatus('current')
lldpXMedRemMediaPolicyDscp = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 4), Dscp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyDscp.setStatus('current')
lldpXMedRemMediaPolicyUnknown = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyUnknown.setStatus('current')
lldpXMedRemMediaPolicyTagged = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemMediaPolicyTagged.setStatus('current')
lldpXMedRemInventoryTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3), )
if mibBuilder.loadTexts: lldpXMedRemInventoryTable.setStatus('current')
lldpXMedRemInventoryEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"))
if mibBuilder.loadTexts: lldpXMedRemInventoryEntry.setStatus('current')
lldpXMedRemHardwareRev = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemHardwareRev.setStatus('current')
lldpXMedRemFirmwareRev = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemFirmwareRev.setStatus('current')
lldpXMedRemSoftwareRev = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemSoftwareRev.setStatus('current')
lldpXMedRemSerialNum = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemSerialNum.setStatus('current')
lldpXMedRemMfgName = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemMfgName.setStatus('current')
lldpXMedRemModelName = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemModelName.setStatus('current')
lldpXMedRemAssetID = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 3, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemAssetID.setStatus('current')
lldpXMedRemLocationTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4), )
if mibBuilder.loadTexts: lldpXMedRemLocationTable.setStatus('current')
lldpXMedRemLocationEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"), (0, "LLDP-EXT-MED-MIB", "lldpXMedRemLocationSubtype"))
if mibBuilder.loadTexts: lldpXMedRemLocationEntry.setStatus('current')
lldpXMedRemLocationSubtype = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4, 1, 1), LocationSubtype())
if mibBuilder.loadTexts: lldpXMedRemLocationSubtype.setStatus('current')
lldpXMedRemLocationInfo = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemLocationInfo.setStatus('current')
lldpXMedRemXPoETable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 5), )
if mibBuilder.loadTexts: lldpXMedRemXPoETable.setStatus('current')
lldpXMedRemXPoEEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 5, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"))
if mibBuilder.loadTexts: lldpXMedRemXPoEEntry.setStatus('current')
lldpXMedRemXPoEDeviceType = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("pseDevice", 2), ("pdDevice", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEDeviceType.setStatus('current')
lldpXMedRemXPoEPSETable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6), )
if mibBuilder.loadTexts: lldpXMedRemXPoEPSETable.setStatus('current')
lldpXMedRemXPoEPSEEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"))
if mibBuilder.loadTexts: lldpXMedRemXPoEPSEEntry.setStatus('current')
lldpXMedRemXPoEPSEPowerAv = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setUnits('tenth of watt').setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEPSEPowerAv.setStatus('current')
lldpXMedRemXPoEPSEPowerSource = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("primary", 2), ("backup", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEPSEPowerSource.setStatus('current')
lldpXMedRemXPoEPSEPowerPriority = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("critical", 2), ("high", 3), ("low", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEPSEPowerPriority.setStatus('current')
lldpXMedRemXPoEPDTable = MibTable((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7), )
if mibBuilder.loadTexts: lldpXMedRemXPoEPDTable.setStatus('current')
lldpXMedRemXPoEPDEntry = MibTableRow((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1), ).setIndexNames((0, "LLDP-MIB", "lldpRemTimeMark"), (0, "LLDP-MIB", "lldpRemLocalPortNum"), (0, "LLDP-MIB", "lldpRemIndex"))
if mibBuilder.loadTexts: lldpXMedRemXPoEPDEntry.setStatus('current')
lldpXMedRemXPoEPDPowerReq = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setUnits('tenth of watt').setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEPDPowerReq.setStatus('current')
lldpXMedRemXPoEPDPowerSource = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("fromPSE", 2), ("local", 3), ("localAndPSE", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEPDPowerSource.setStatus('current')
lldpXMedRemXPoEPDPowerPriority = MibTableColumn((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 1, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("critical", 2), ("high", 3), ("low", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpXMedRemXPoEPDPowerPriority.setStatus('current')
lldpXMedConformance = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2))
lldpXMedCompliances = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 1))
lldpXMedGroups = MibIdentifier((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2))
lldpXMedCompliance = ModuleCompliance((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 1, 1)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedConfigGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedRemSysGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedNotificationsGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedOptMediaPolicyGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedOptInventoryGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedOptLocationGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedOptPoEPSEGroup"), ("LLDP-EXT-MED-MIB", "lldpXMedOptPoEPDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedCompliance = lldpXMedCompliance.setStatus('current')
lldpXMedConfigGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 1)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedPortCapSupported"), ("LLDP-EXT-MED-MIB", "lldpXMedPortConfigTLVsTxEnable"), ("LLDP-EXT-MED-MIB", "lldpXMedPortConfigNotifEnable"), ("LLDP-EXT-MED-MIB", "lldpXMedFastStartRepeatCount"), ("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEDeviceType"), ("LLDP-EXT-MED-MIB", "lldpXMedLocDeviceClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedConfigGroup = lldpXMedConfigGroup.setStatus('current')
lldpXMedOptMediaPolicyGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 2)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedLocMediaPolicyVlanID"), ("LLDP-EXT-MED-MIB", "lldpXMedLocMediaPolicyPriority"), ("LLDP-EXT-MED-MIB", "lldpXMedLocMediaPolicyDscp"), ("LLDP-EXT-MED-MIB", "lldpXMedLocMediaPolicyUnknown"), ("LLDP-EXT-MED-MIB", "lldpXMedLocMediaPolicyTagged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedOptMediaPolicyGroup = lldpXMedOptMediaPolicyGroup.setStatus('current')
lldpXMedOptInventoryGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 3)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedLocHardwareRev"), ("LLDP-EXT-MED-MIB", "lldpXMedLocFirmwareRev"), ("LLDP-EXT-MED-MIB", "lldpXMedLocSoftwareRev"), ("LLDP-EXT-MED-MIB", "lldpXMedLocSerialNum"), ("LLDP-EXT-MED-MIB", "lldpXMedLocMfgName"), ("LLDP-EXT-MED-MIB", "lldpXMedLocModelName"), ("LLDP-EXT-MED-MIB", "lldpXMedLocAssetID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedOptInventoryGroup = lldpXMedOptInventoryGroup.setStatus('current')
lldpXMedOptLocationGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 4)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedLocLocationInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedOptLocationGroup = lldpXMedOptLocationGroup.setStatus('current')
lldpXMedOptPoEPSEGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 5)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEPSEPortPowerAv"), ("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEPSEPortPDPriority"), ("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEPSEPowerSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedOptPoEPSEGroup = lldpXMedOptPoEPSEGroup.setStatus('current')
lldpXMedOptPoEPDGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 6)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEPDPowerReq"), ("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEPDPowerSource"), ("LLDP-EXT-MED-MIB", "lldpXMedLocXPoEPDPowerPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedOptPoEPDGroup = lldpXMedOptPoEPDGroup.setStatus('current')
lldpXMedRemSysGroup = ObjectGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 7)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedRemCapSupported"), ("LLDP-EXT-MED-MIB", "lldpXMedRemCapCurrent"), ("LLDP-EXT-MED-MIB", "lldpXMedRemDeviceClass"), ("LLDP-EXT-MED-MIB", "lldpXMedRemMediaPolicyVlanID"), ("LLDP-EXT-MED-MIB", "lldpXMedRemMediaPolicyPriority"), ("LLDP-EXT-MED-MIB", "lldpXMedRemMediaPolicyDscp"), ("LLDP-EXT-MED-MIB", "lldpXMedRemMediaPolicyUnknown"), ("LLDP-EXT-MED-MIB", "lldpXMedRemMediaPolicyTagged"), ("LLDP-EXT-MED-MIB", "lldpXMedRemHardwareRev"), ("LLDP-EXT-MED-MIB", "lldpXMedRemFirmwareRev"), ("LLDP-EXT-MED-MIB", "lldpXMedRemSoftwareRev"), ("LLDP-EXT-MED-MIB", "lldpXMedRemSerialNum"), ("LLDP-EXT-MED-MIB", "lldpXMedRemMfgName"), ("LLDP-EXT-MED-MIB", "lldpXMedRemModelName"), ("LLDP-EXT-MED-MIB", "lldpXMedRemAssetID"), ("LLDP-EXT-MED-MIB", "lldpXMedRemLocationInfo"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEDeviceType"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEPSEPowerAv"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEPSEPowerSource"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEPSEPowerPriority"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEPDPowerReq"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEPDPowerSource"), ("LLDP-EXT-MED-MIB", "lldpXMedRemXPoEPDPowerPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedRemSysGroup = lldpXMedRemSysGroup.setStatus('current')
lldpXMedNotificationsGroup = NotificationGroup((1, 0, 8802, 1, 1, 2, 1, 5, 4795, 2, 2, 8)).setObjects(("LLDP-EXT-MED-MIB", "lldpXMedTopologyChangeDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpXMedNotificationsGroup = lldpXMedNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("LLDP-EXT-MED-MIB", lldpXMedLocLocationInfo=lldpXMedLocLocationInfo, lldpXMedLocXPoEPSEPowerSource=lldpXMedLocXPoEPSEPowerSource, lldpXMedRemXPoEPDPowerReq=lldpXMedRemXPoEPDPowerReq, lldpXMedLocMediaPolicyTable=lldpXMedLocMediaPolicyTable, lldpXMedLocAssetID=lldpXMedLocAssetID, LldpXMedDeviceClass=LldpXMedDeviceClass, lldpXMedOptMediaPolicyGroup=lldpXMedOptMediaPolicyGroup, lldpXMedRemLocationEntry=lldpXMedRemLocationEntry, lldpXMedRemModelName=lldpXMedRemModelName, lldpXMedRemMediaPolicyTable=lldpXMedRemMediaPolicyTable, lldpXMedOptInventoryGroup=lldpXMedOptInventoryGroup, lldpXMedOptPoEPSEGroup=lldpXMedOptPoEPSEGroup, lldpXMedLocSerialNum=lldpXMedLocSerialNum, lldpXMedRemLocationTable=lldpXMedRemLocationTable, lldpXMedRemMediaPolicyDscp=lldpXMedRemMediaPolicyDscp, lldpXMedRemMediaPolicyTagged=lldpXMedRemMediaPolicyTagged, lldpXMedRemXPoEPSEPowerSource=lldpXMedRemXPoEPSEPowerSource, lldpXMedPortConfigNotifEnable=lldpXMedPortConfigNotifEnable, lldpXMedRemSysGroup=lldpXMedRemSysGroup, lldpXMedGroups=lldpXMedGroups, lldpXMedLocMediaPolicyTagged=lldpXMedLocMediaPolicyTagged, lldpXMedLocMediaPolicyVlanID=lldpXMedLocMediaPolicyVlanID, lldpXMedRemXPoETable=lldpXMedRemXPoETable, PolicyAppType=PolicyAppType, lldpXMedRemXPoEPSEPowerPriority=lldpXMedRemXPoEPSEPowerPriority, lldpXMedRemMediaPolicyPriority=lldpXMedRemMediaPolicyPriority, lldpXMedConfig=lldpXMedConfig, lldpXMedRemCapSupported=lldpXMedRemCapSupported, lldpXMedLocMediaPolicyPriority=lldpXMedLocMediaPolicyPriority, lldpXMedLocMfgName=lldpXMedLocMfgName, lldpXMedCompliance=lldpXMedCompliance, lldpXMedRemXPoEEntry=lldpXMedRemXPoEEntry, lldpXMedOptPoEPDGroup=lldpXMedOptPoEPDGroup, lldpXMedRemMfgName=lldpXMedRemMfgName, PYSNMP_MODULE_ID=lldpXMedMIB, lldpXMedLocXPoEPDPowerPriority=lldpXMedLocXPoEPDPowerPriority, lldpXMedRemMediaPolicyAppType=lldpXMedRemMediaPolicyAppType, lldpXMedRemXPoEPSEEntry=lldpXMedRemXPoEPSEEntry, lldpXMedRemCapabilitiesEntry=lldpXMedRemCapabilitiesEntry, lldpXMedRemCapabilitiesTable=lldpXMedRemCapabilitiesTable, lldpXMedRemLocationSubtype=lldpXMedRemLocationSubtype, lldpXMedRemLocationInfo=lldpXMedRemLocationInfo, LocationSubtype=LocationSubtype, lldpXMedCompliances=lldpXMedCompliances, lldpXMedLocDeviceClass=lldpXMedLocDeviceClass, lldpXMedTopologyChangeDetected=lldpXMedTopologyChangeDetected, lldpXMedRemMediaPolicyUnknown=lldpXMedRemMediaPolicyUnknown, lldpXMedLocMediaPolicyAppType=lldpXMedLocMediaPolicyAppType, lldpXMedMIB=lldpXMedMIB, lldpXMedConformance=lldpXMedConformance, lldpXMedLocXPoEPDPowerSource=lldpXMedLocXPoEPDPowerSource, lldpXMedLocXPoEPSEPortTable=lldpXMedLocXPoEPSEPortTable, lldpXMedLocLocationEntry=lldpXMedLocLocationEntry, lldpXMedLocModelName=lldpXMedLocModelName, lldpXMedPortConfigEntry=lldpXMedPortConfigEntry, lldpXMedRemMediaPolicyEntry=lldpXMedRemMediaPolicyEntry, lldpXMedRemFirmwareRev=lldpXMedRemFirmwareRev, lldpXMedLocMediaPolicyDscp=lldpXMedLocMediaPolicyDscp, LldpXMedCapabilities=LldpXMedCapabilities, lldpXMedLocXPoEPSEPortEntry=lldpXMedLocXPoEPSEPortEntry, lldpXMedLocFirmwareRev=lldpXMedLocFirmwareRev, lldpXMedRemSerialNum=lldpXMedRemSerialNum, lldpXMedLocXPoEDeviceType=lldpXMedLocXPoEDeviceType, lldpXMedNotifications=lldpXMedNotifications, lldpXMedLocLocationTable=lldpXMedLocLocationTable, lldpXMedRemXPoEPDPowerPriority=lldpXMedRemXPoEPDPowerPriority, lldpXMedLocLocationSubtype=lldpXMedLocLocationSubtype, lldpXMedLocXPoEPDPowerReq=lldpXMedLocXPoEPDPowerReq, lldpXMedPortCapSupported=lldpXMedPortCapSupported, lldpXMedRemXPoEPDPowerSource=lldpXMedRemXPoEPDPowerSource, lldpXMedRemDeviceClass=lldpXMedRemDeviceClass, lldpXMedConfigGroup=lldpXMedConfigGroup, lldpXMedRemHardwareRev=lldpXMedRemHardwareRev, lldpXMedRemXPoEPSETable=lldpXMedRemXPoEPSETable, lldpXMedLocalData=lldpXMedLocalData, lldpXMedNotificationsGroup=lldpXMedNotificationsGroup, lldpXMedLocSoftwareRev=lldpXMedLocSoftwareRev, lldpXMedRemSoftwareRev=lldpXMedRemSoftwareRev, lldpXMedRemXPoEDeviceType=lldpXMedRemXPoEDeviceType, lldpXMedRemCapCurrent=lldpXMedRemCapCurrent, lldpXMedFastStartRepeatCount=lldpXMedFastStartRepeatCount, lldpXMedLocMediaPolicyUnknown=lldpXMedLocMediaPolicyUnknown, lldpXMedRemInventoryEntry=lldpXMedRemInventoryEntry, lldpXMedLocHardwareRev=lldpXMedLocHardwareRev, lldpXMedRemXPoEPSEPowerAv=lldpXMedRemXPoEPSEPowerAv, lldpXMedRemMediaPolicyVlanID=lldpXMedRemMediaPolicyVlanID, lldpXMedOptLocationGroup=lldpXMedOptLocationGroup, lldpXMedPortConfigTLVsTxEnable=lldpXMedPortConfigTLVsTxEnable, lldpXMedObjects=lldpXMedObjects, lldpXMedRemInventoryTable=lldpXMedRemInventoryTable, lldpXMedRemXPoEPDTable=lldpXMedRemXPoEPDTable, lldpXMedRemoteData=lldpXMedRemoteData, lldpXMedLocMediaPolicyEntry=lldpXMedLocMediaPolicyEntry, lldpXMedRemAssetID=lldpXMedRemAssetID, lldpXMedRemXPoEPDEntry=lldpXMedRemXPoEPDEntry, lldpXMedLocXPoEPSEPortPDPriority=lldpXMedLocXPoEPSEPortPDPriority, lldpXMedPortConfigTable=lldpXMedPortConfigTable, lldpXMedLocXPoEPSEPortPowerAv=lldpXMedLocXPoEPSEPortPowerAv)
