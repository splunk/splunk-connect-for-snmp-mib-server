#
# PySNMP MIB module ENGENIUS-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENGENIUS-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, NotificationType, TimeTicks, enterprises, Integer32, Counter64, iso, Unsigned32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "TimeTicks", "enterprises", "Integer32", "Counter64", "iso", "Unsigned32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "ModuleIdentity", "Gauge32")
DateAndTime, DisplayString, TruthValue, TimeStamp, TimeInterval, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TruthValue", "TimeStamp", "TimeInterval", "TextualConvention", "MacAddress", "RowStatus")
engeniusprivate = ModuleIdentity((1, 3, 6, 1, 4, 1, 14125, 2))
engeniusprivate.setRevisions(('2009-06-11 11:00', '2009-06-10 16:00', '2009-05-14 10:00',))
if mibBuilder.loadTexts: engeniusprivate.setLastUpdated('200906111100Z')
if mibBuilder.loadTexts: engeniusprivate.setOrganization('Senao R&D Dept., S/W Division')
engenius = MibIdentifier((1, 3, 6, 1, 4, 1, 14125))
status = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 1))
configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2))
command = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 3))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1))
wan = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1))
pppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2))
dns = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 3))
mtu = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 4))
landhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5))
ntp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 6))
admin = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 8))
wlan = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9))
wlansta = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 10))
wlanmesh = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11))
wlanstawds = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 14))
stp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 15))
snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16))
wmm = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 17))
logemail = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 20))
vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 21))
traffic = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 2, 22))
saveCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 3, 1))
resetCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 3, 2))
rebootCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 2, 3, 3))
systemName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone('Access Point')).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemName.setStatus('current')
sysPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone('admin')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysPassword.setStatus('current')
errMsg = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: errMsg.setStatus('current')
statusWLANSTAAssoc = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: statusWLANSTAAssoc.setStatus('current')
modelName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modelName.setStatus('current')
wirelessMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessMacAddress.setStatus('current')
wanIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanIPAddress.setStatus('current')
wanSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanSubnetMask.setStatus('current')
wanConnectionType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dhcp", 1), ("static", 2), ("pppoe", 3))).clone('static')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanConnectionType.setStatus('current')
wanGeneralAccount = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanGeneralAccount.setStatus('current')
wanGeneralDomain = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanGeneralDomain.setStatus('current')
wanGeneralIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1, 4), IpAddress().clone('10.1.1.100')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanGeneralIP.setStatus('current')
wanGeneralSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1, 5), IpAddress().clone('255.255.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanGeneralSubnetMask.setStatus('current')
wanGeneralGateway = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 1, 6), IpAddress().clone('10.1.1.150')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanGeneralGateway.setStatus('current')
wanPPPoELoginName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPPPoELoginName.setStatus('current')
wanPPPoEPassword = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPPPoEPassword.setStatus('current')
wanPPPoEServiceName = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPPPoEServiceName.setStatus('current')
wanPPPoEConnectionType = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("keepalive", 0), ("connectondemand", 1))).clone('keepalive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPPPoEConnectionType.setStatus('current')
wanPPPoEMaxIdleTime = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPPPoEMaxIdleTime.setStatus('current')
wanPPPoERedialPeriod = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 180)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPPPoERedialPeriod.setStatus('current')
wanDNSSourc = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("isp", 0), ("specified", 1))).clone('isp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDNSSourc.setStatus('current')
wanPrimaryDNSIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 3, 2), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPrimaryDNSIP.setStatus('current')
wanSecondaryDNSIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 3, 3), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanSecondaryDNSIP.setStatus('current')
wanMTUMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("manual", 1))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanMTUMode.setStatus('current')
wanMTU = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(576, 1500)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanMTU.setStatus('current')
pppoeMTU = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(576, 1492)).clone(1492)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppoeMTU.setStatus('current')
lanDHCPC = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanDHCPC.setStatus('current')
lanIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 2), IpAddress().clone('192.168.1.1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanIP.setStatus('current')
lanSubnetmask = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 3), IpAddress().clone('255.255.255.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanSubnetmask.setStatus('current')
lanGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 4), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanGatewayIP.setStatus('current')
lanWINSAddr = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 5), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanWINSAddr.setStatus('current')
lanDHCPSrvEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanDHCPSrvEnable.setStatus('current')
lanDHCPSrvStartAddr = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 7), IpAddress().clone('192.168.1.2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanDHCPSrvStartAddr.setStatus('current')
lanDHCPSrvStopAddr = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 5, 8), IpAddress().clone('192.168.1.254')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanDHCPSrvStopAddr.setStatus('current')
timeSettingMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeSettingMode.setStatus('current')
userNTPSrvMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userNTPSrvMode.setStatus('current')
userNTPSrvIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 6, 3), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userNTPSrvIP.setStatus('current')
timeZone = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 6, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('GMT0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeZone.setStatus('current')
username = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33)).clone('admin')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: username.setStatus('current')
remoteManagementEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteManagementEnable.setStatus('current')
remoteUpgradeEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteUpgradeEnable.setStatus('current')
remoteManagementPort = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 8, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(8080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteManagementPort.setStatus('current')
remoteManagementVLANID = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 8, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteManagementVLANID.setStatus('current')
wlanMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7, 9))).clone(namedValues=NamedValues(("wlan11a", 1), ("wlan11b", 2), ("wlan11bg", 3), ("wlan11astaticturbo", 5), ("wlan11gdynamicturbo", 6), ("wlan11gstaticturbo", 7), ("wlan11gpure", 9))).clone('wlan11bg')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMode.setStatus('current')
chanBwMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan20MHz", 0), ("wlan10MHz", 1), ("wlan5MHz", 2))).clone('wlan20MHz')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chanBwMode.setStatus('current')
wlanaSSID = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33)).clone('EnGenius')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanaSSID.setStatus('current')
wlanOpMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("accesspoint", 0), ("clientbridge", 1), ("wdsbridge", 2), ("repeater", 3), ("aprouter", 4), ("clientrouter", 5), ("mesh", 6))).clone('accesspoint')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanOpMode.setStatus('current')
wlanCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanCountryCode.setStatus('current')
wlanCountry = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone('N/A')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanCountry.setStatus('current')
wlanChannel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanChannel.setStatus('current')
wlanACLMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("allow", 1), ("deny", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanACLMode.setStatus('current')
wlanOutdoorDistance = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 30000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanOutdoorDistance.setStatus('current')
wlanDataRate = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6)).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanDataRate.setStatus('current')
wlanTxPower = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanTxPower.setStatus('current')
antennasel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("diversity", 0), ("vertical", 1), ("horizontal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: antennasel.setStatus('current')
wlanBeaconInterval = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 500)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanBeaconInterval.setStatus('current')
wlanRTSTh = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2346)).clone(2346)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanRTSTh.setStatus('current')
wlanFragLen = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346)).clone(2346)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanFragLen.setStatus('current')
wlanProtmode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("ctsonly", 1), ("rtscts", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanProtmode.setStatus('current')
wlanPreferBSSID = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanPreferBSSID.setStatus('current')
wlanTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21), )
if mibBuilder.loadTexts: wlanTable.setStatus('current')
wlanTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1), ).setIndexNames((0, "ENGENIUS-PRIVATE-MIB", "wlanTableIndex"))
if mibBuilder.loadTexts: wlanTableEntry.setStatus('current')
wlanTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)))
if mibBuilder.loadTexts: wlanTableIndex.setStatus('current')
wlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanEnable.setStatus('current')
wlanSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanSSID.setStatus('current')
wlanHideSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHideSSID.setStatus('current')
wlanStaSeparation = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanStaSeparation.setStatus('current')
wlanVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanVLANID.setStatus('current')
wlanAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("open", 1), ("shared", 2), ("auto", 3), ("wlan8021x", 4), ("wpa", 5), ("wpapsk", 6), ("wpa2", 7), ("wpa2psk", 8), ("wpamixed", 9), ("wpapskmixed", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanAuth.setStatus('current')
wlanEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("tkip", 2), ("aes", 3), ("auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanEncryption.setStatus('current')
wlanWepDefaultKeyIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("key1", 1), ("key2", 2), ("key3", 3), ("key4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepDefaultKeyIdx.setStatus('current')
wlanWepKey = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 10), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(5, 5), ValueSizeConstraint(10, 10), ValueSizeConstraint(13, 13), ValueSizeConstraint(16, 16), ValueSizeConstraint(26, 26), ValueSizeConstraint(32, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepKey.setStatus('current')
wlanWpapskPassphrase = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWpapskPassphrase.setStatus('current')
wlanWpaRadiusSrvIP = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWpaRadiusSrvIP.setStatus('current')
wlanWpaRadiusSrvPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWpaRadiusSrvPort.setStatus('current')
wlanWpaRadiusSrvSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWpaRadiusSrvSecret.setStatus('current')
wlanWpaGroupKeyUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 2, 2, 9, 21, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWpaGroupKeyUpdateInterval.setStatus('current')
wlanSTAAuth = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 8, 10))).clone(namedValues=NamedValues(("open", 1), ("shared", 2), ("wpapsk", 6), ("wpa2psk", 8), ("wpapskmixed", 10))).clone('open')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanSTAAuth.setStatus('current')
wlanSTAEncryption = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("tkip", 2), ("aes", 3), ("auto", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanSTAEncryption.setStatus('current')
wlanSTAWepDefaultKeyIdx = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("key1", 1), ("key2", 2), ("key3", 3), ("key4", 4))).clone('key1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanSTAWepDefaultKeyIdx.setStatus('current')
wlanSTAWepKey = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 10, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(5, 5), ValueSizeConstraint(10, 10), ValueSizeConstraint(13, 13), ValueSizeConstraint(16, 16), ValueSizeConstraint(26, 26), ValueSizeConstraint(32, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanSTAWepKey.setStatus('current')
wlanSTAWpapskPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 10, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanSTAWpapskPassphrase.setStatus('current')
wlanMESHSSID = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33)).clone('EnGeniusMesh')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHSSID.setStatus('current')
wlanMESHGateway = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHGateway.setStatus('current')
wlanMESHAuth = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("shared", 2))).clone('open')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHAuth.setStatus('current')
wlanMESHEncryption = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("aes", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHEncryption.setStatus('current')
wlanMESHWepDefaultKeyIdx = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("key1", 1), ("key2", 2), ("key3", 3), ("key4", 4))).clone('key1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHWepDefaultKeyIdx.setStatus('current')
wlanMESHWepKey = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 7), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(5, 5), ValueSizeConstraint(10, 10), ValueSizeConstraint(13, 13), ValueSizeConstraint(16, 16), ValueSizeConstraint(26, 26), ValueSizeConstraint(32, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHWepKey.setStatus('current')
wlanMESHWpapskPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 11, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMESHWpapskPassphrase.setStatus('current')
staWDS = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWDS.setStatus('current')
stpMode = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpMode.setStatus('current')
stpHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpHelloTime.setStatus('current')
stpMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpMaxAge.setStatus('current')
stpForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 15, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpForwardDelay.setStatus('current')
stpPriority = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 15, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(32768)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpPriority.setStatus('current')
snmpEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpEnable.setStatus('current')
snmpCmntyRO = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpCmntyRO.setStatus('current')
snmpCmntyRW = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33)).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpCmntyRW.setStatus('current')
snmpTrapDstIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 4), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapDstIP.setStatus('current')
snmpTrapCmnty = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33)).clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapCmnty.setStatus('current')
snmpCont = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpCont.setStatus('current')
snmpLocation = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpLocation.setStatus('current')
sysObjectID = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 16, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone('1.3.6.1.4.1.14125')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysObjectID.setStatus('current')
wmmEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wmmEnable.setStatus('current')
logServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logServerEnable.setStatus('current')
logServerIP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 20, 2), IpAddress().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logServerIP.setStatus('current')
logLocalEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logLocalEnable.setStatus('current')
logLevel = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("information", 6), ("debug", 7), ("all", 8))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logLevel.setStatus('current')
vpnPassthroughPPTP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnPassthroughPPTP.setStatus('current')
vpnPassthroughL2TP = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnPassthroughL2TP.setStatus('current')
vpnPassthroughIPSec = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 21, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnPassthroughIPSec.setStatus('current')
tcEnable = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcEnable.setStatus('current')
tcInRate = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 22, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcInRate.setStatus('current')
tcInBurst = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 22, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcInBurst.setStatus('current')
tcOutRate = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 22, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcOutRate.setStatus('current')
tcOutBurst = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 2, 22, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tcOutBurst.setStatus('current')
executeSaveCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: executeSaveCmd.setStatus('current')
executeResetCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: executeResetCmd.setStatus('current')
executeRebootCmd = MibScalar((1, 3, 6, 1, 4, 1, 14125, 2, 3, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: executeRebootCmd.setStatus('current')
mibBuilder.exportSymbols("ENGENIUS-PRIVATE-MIB", lanWINSAddr=lanWINSAddr, snmpTrapDstIP=snmpTrapDstIP, ntp=ntp, wanSecondaryDNSIP=wanSecondaryDNSIP, wmmEnable=wmmEnable, wanIPAddress=wanIPAddress, wirelessMacAddress=wirelessMacAddress, mtu=mtu, wlanOpMode=wlanOpMode, wanConnectionType=wanConnectionType, wanMTU=wanMTU, wanGeneralGateway=wanGeneralGateway, wlanFragLen=wlanFragLen, wlanMESHEncryption=wlanMESHEncryption, lanSubnetmask=lanSubnetmask, wlanMESHAuth=wlanMESHAuth, wlanWepKey=wlanWepKey, vpnPassthroughIPSec=vpnPassthroughIPSec, tcOutBurst=tcOutBurst, modelName=modelName, landhcp=landhcp, engeniusprivate=engeniusprivate, executeResetCmd=executeResetCmd, logServerEnable=logServerEnable, wanGeneralIP=wanGeneralIP, logServerIP=logServerIP, wanPPPoEPassword=wanPPPoEPassword, saveCmd=saveCmd, wlanaSSID=wlanaSSID, wlanAuth=wlanAuth, wmm=wmm, pppoeMTU=pppoeMTU, admin=admin, antennasel=antennasel, wlanVLANID=wlanVLANID, systemName=systemName, wan=wan, vpnPassthroughPPTP=vpnPassthroughPPTP, lanIP=lanIP, traffic=traffic, wanPPPoEConnectionType=wanPPPoEConnectionType, wlanMESHWpapskPassphrase=wlanMESHWpapskPassphrase, status=status, rebootCmd=rebootCmd, wlanWpaRadiusSrvIP=wlanWpaRadiusSrvIP, wlanMESHWepKey=wlanMESHWepKey, command=command, stpMaxAge=stpMaxAge, wlanWpapskPassphrase=wlanWpapskPassphrase, wanGeneralDomain=wanGeneralDomain, wlanSTAAuth=wlanSTAAuth, wlanMESHSSID=wlanMESHSSID, wlanstawds=wlanstawds, tcInRate=tcInRate, snmpLocation=snmpLocation, wlanChannel=wlanChannel, lanGatewayIP=lanGatewayIP, wlanBeaconInterval=wlanBeaconInterval, wlanPreferBSSID=wlanPreferBSSID, wlanSTAWpapskPassphrase=wlanSTAWpapskPassphrase, chanBwMode=chanBwMode, executeRebootCmd=executeRebootCmd, wlanCountry=wlanCountry, wlanHideSSID=wlanHideSSID, wlanWpaGroupKeyUpdateInterval=wlanWpaGroupKeyUpdateInterval, snmpEnable=snmpEnable, snmp=snmp, wlanOutdoorDistance=wlanOutdoorDistance, vpnPassthroughL2TP=vpnPassthroughL2TP, remoteManagementPort=remoteManagementPort, wlanTableIndex=wlanTableIndex, wanPrimaryDNSIP=wanPrimaryDNSIP, logLevel=logLevel, staWDS=staWDS, wanPPPoERedialPeriod=wanPPPoERedialPeriod, remoteUpgradeEnable=remoteUpgradeEnable, wlanWepDefaultKeyIdx=wlanWepDefaultKeyIdx, snmpCmntyRO=snmpCmntyRO, lanDHCPSrvStopAddr=lanDHCPSrvStopAddr, wlanEnable=wlanEnable, logemail=logemail, lanDHCPSrvStartAddr=lanDHCPSrvStartAddr, wlanACLMode=wlanACLMode, tcOutRate=tcOutRate, lanDHCPC=lanDHCPC, userNTPSrvIP=userNTPSrvIP, wlanRTSTh=wlanRTSTh, wlanSTAWepKey=wlanSTAWepKey, dns=dns, wlan=wlan, wanDNSSourc=wanDNSSourc, wlanMESHGateway=wlanMESHGateway, stpHelloTime=stpHelloTime, wlanSTAEncryption=wlanSTAEncryption, wlanProtmode=wlanProtmode, lanDHCPSrvEnable=lanDHCPSrvEnable, wlanTableEntry=wlanTableEntry, remoteManagementVLANID=remoteManagementVLANID, wlanDataRate=wlanDataRate, sysObjectID=sysObjectID, executeSaveCmd=executeSaveCmd, wlanWpaRadiusSrvPort=wlanWpaRadiusSrvPort, wlanMESHWepDefaultKeyIdx=wlanMESHWepDefaultKeyIdx, logLocalEnable=logLocalEnable, wlanEncryption=wlanEncryption, configuration=configuration, username=username, wanPPPoELoginName=wanPPPoELoginName, stpPriority=stpPriority, wlanTable=wlanTable, timeSettingMode=timeSettingMode, wlanCountryCode=wlanCountryCode, wanMTUMode=wanMTUMode, wlanmesh=wlanmesh, errMsg=errMsg, snmpCmntyRW=snmpCmntyRW, tcEnable=tcEnable, wanPPPoEServiceName=wanPPPoEServiceName, vpn=vpn, PYSNMP_MODULE_ID=engeniusprivate, wanGeneralSubnetMask=wanGeneralSubnetMask, engenius=engenius, snmpCont=snmpCont, snmpTrapCmnty=snmpTrapCmnty, stpForwardDelay=stpForwardDelay, wlanSTAWepDefaultKeyIdx=wlanSTAWepDefaultKeyIdx, wanSubnetMask=wanSubnetMask, wlanSSID=wlanSSID, userNTPSrvMode=userNTPSrvMode, stpMode=stpMode, wlanTxPower=wlanTxPower, timeZone=timeZone, stp=stp, sysPassword=sysPassword, remoteManagementEnable=remoteManagementEnable, statusWLANSTAAssoc=statusWLANSTAAssoc, wanGeneralAccount=wanGeneralAccount, resetCmd=resetCmd, wanPPPoEMaxIdleTime=wanPPPoEMaxIdleTime, wlanStaSeparation=wlanStaSeparation, wlansta=wlansta, system=system, tcInBurst=tcInBurst, wlanWpaRadiusSrvSecret=wlanWpaRadiusSrvSecret, pppoe=pppoe, wlanMode=wlanMode)
