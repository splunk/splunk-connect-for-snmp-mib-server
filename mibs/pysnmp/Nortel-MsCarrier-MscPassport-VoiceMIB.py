#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-VoiceMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-VoiceMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
StorageType, InterfaceIndex, Gauge32, Unsigned32, DisplayString, RowStatus, Integer32, Counter32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "StorageType", "InterfaceIndex", "Gauge32", "Unsigned32", "DisplayString", "RowStatus", "Integer32", "Counter32")
Link, FixedPoint1, EnterpriseDateAndTime, HexString, NonReplicated, AsciiString, PassportCounter64 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "FixedPoint1", "EnterpriseDateAndTime", "HexString", "NonReplicated", "AsciiString", "PassportCounter64")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, Bits, iso, ModuleIdentity, Gauge32, NotificationType, IpAddress, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Bits", "iso", "ModuleIdentity", "Gauge32", "NotificationType", "IpAddress", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
voiceMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49))
mscVs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80))
mscVsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 1), )
if mibBuilder.loadTexts: mscVsRowStatusTable.setStatus('mandatory')
mscVsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"))
if mibBuilder.loadTexts: mscVsRowStatusEntry.setStatus('mandatory')
mscVsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsRowStatus.setStatus('mandatory')
mscVsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsComponentName.setStatus('mandatory')
mscVsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsStorageType.setStatus('mandatory')
mscVsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscVsIndex.setStatus('mandatory')
mscVsCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 10), )
if mibBuilder.loadTexts: mscVsCidDataTable.setStatus('mandatory')
mscVsCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"))
if mibBuilder.loadTexts: mscVsCidDataEntry.setStatus('mandatory')
mscVsCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsCustomerIdentifier.setStatus('mandatory')
mscVsIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 11), )
if mibBuilder.loadTexts: mscVsIfEntryTable.setStatus('mandatory')
mscVsIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"))
if mibBuilder.loadTexts: mscVsIfEntryEntry.setStatus('mandatory')
mscVsIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsIfAdminStatus.setStatus('mandatory')
mscVsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsIfIndex.setStatus('mandatory')
mscVsOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 12), )
if mibBuilder.loadTexts: mscVsOperStatusTable.setStatus('mandatory')
mscVsOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"))
if mibBuilder.loadTexts: mscVsOperStatusEntry.setStatus('mandatory')
mscVsSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsSnmpOperStatus.setStatus('mandatory')
mscVsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13), )
if mibBuilder.loadTexts: mscVsStateTable.setStatus('mandatory')
mscVsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"))
if mibBuilder.loadTexts: mscVsStateEntry.setStatus('mandatory')
mscVsAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsAdminState.setStatus('mandatory')
mscVsOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsOperationalState.setStatus('mandatory')
mscVsUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsUsageState.setStatus('mandatory')
mscVsAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsAvailabilityStatus.setStatus('mandatory')
mscVsProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsProceduralStatus.setStatus('mandatory')
mscVsControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsControlStatus.setStatus('mandatory')
mscVsAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsAlarmStatus.setStatus('mandatory')
mscVsStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsStandbyStatus.setStatus('mandatory')
mscVsUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsUnknownStatus.setStatus('mandatory')
mscVsOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 15), )
if mibBuilder.loadTexts: mscVsOperationalTable.setStatus('mandatory')
mscVsOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"))
if mibBuilder.loadTexts: mscVsOperationalEntry.setStatus('mandatory')
mscVsServiceFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 15, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsServiceFailureReason.setStatus('mandatory')
mscVsFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2))
mscVsFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 1), )
if mibBuilder.loadTexts: mscVsFramerRowStatusTable.setStatus('mandatory')
mscVsFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerRowStatusEntry.setStatus('mandatory')
mscVsFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerRowStatus.setStatus('mandatory')
mscVsFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerComponentName.setStatus('mandatory')
mscVsFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerStorageType.setStatus('mandatory')
mscVsFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsFramerIndex.setStatus('mandatory')
mscVsFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 10), )
if mibBuilder.loadTexts: mscVsFramerProvTable.setStatus('mandatory')
mscVsFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerProvEntry.setStatus('mandatory')
mscVsFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerInterfaceName.setStatus('mandatory')
mscVsFramerCoderTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12), )
if mibBuilder.loadTexts: mscVsFramerCoderTable.setStatus('mandatory')
mscVsFramerCoderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerCoderEntry.setStatus('mandatory')
mscVsFramerMaxVoiceBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerMaxVoiceBitRate.setStatus('mandatory')
mscVsFramerMinVoiceBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerMinVoiceBitRate.setStatus('mandatory')
mscVsFramerMaxModemBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerMaxModemBitRate.setStatus('mandatory')
mscVsFramerMinModemBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerMinModemBitRate.setStatus('mandatory')
mscVsFramerAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("minus6", 0), ("minus4", 1), ("minus2", 2), ("n0", 3), ("n2", 4), ("n4", 5), ("n6", 6), ("minus12", 7), ("minus11", 8), ("minus10", 9), ("minus9", 10), ("minus8", 11), ("minus7", 12), ("minus5", 13), ("minus3", 14), ("minus1", 15), ("n1", 16), ("n3", 17), ("n5", 18), ("n7", 19), ("n8", 20), ("n9", 21), ("n10", 22), ("n11", 23), ("n12", 24))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerAudioGain.setStatus('obsolete')
mscVsFramerSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4), ("casIdleCode", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerSilenceSuppression.setStatus('mandatory')
mscVsFramerEchoCancellation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEchoCancellation.setStatus('mandatory')
mscVsFramerALawConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerALawConversion.setStatus('mandatory')
mscVsFramerVoiceEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g711G726", 0), ("g728at16", 1), ("g729at8", 2))).clone('g711G726')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerVoiceEncoding.setStatus('mandatory')
mscVsFramerFaxEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711G726", 0), ("faxRelayOnly", 1), ("faxRelayG711G726", 2), ("useVoiceEncoding", 3))).clone('g711G726')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerFaxEncoding.setStatus('mandatory')
mscVsFramerTandemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerTandemPassThrough.setStatus('mandatory')
mscVsFramerInsertedOutputDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 5, 15, 22, 30, 35, 40, 45, 50, 75, 100, 125, 150))).clone(namedValues=NamedValues(("default", 0), ("n5", 5), ("n15", 15), ("n22", 22), ("n30", 30), ("n35", 35), ("n40", 40), ("n45", 45), ("n50", 50), ("n75", 75), ("n100", 100), ("n125", 125), ("n150", 150))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerInsertedOutputDelay.setStatus('mandatory')
mscVsFramerEgressAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEgressAudioGain.setStatus('obsolete')
mscVsFramerFaxIdleSuppressionG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerFaxIdleSuppressionG711G726.setStatus('mandatory')
mscVsFramerEndOfCallPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254), SingleValueConstraint(255))).clone(namedValues=NamedValues(("standard", 0), ("n01", 1), ("n02", 2), ("n03", 3), ("n04", 4), ("n05", 5), ("n06", 6), ("n07", 7), ("n08", 8), ("n09", 9), ("n0a", 10), ("n0b", 11), ("n0c", 12), ("n0d", 13), ("n0e", 14), ("n0f", 15), ("n10", 16), ("n11", 17), ("n12", 18), ("n13", 19), ("n14", 20), ("n15", 21), ("n16", 22), ("n17", 23), ("n18", 24), ("n19", 25), ("n1a", 26), ("n1b", 27), ("n1c", 28), ("n1d", 29), ("n1e", 30), ("n1f", 31), ("n20", 32), ("n21", 33), ("n22", 34), ("n23", 35), ("n24", 36), ("n25", 37), ("n26", 38), ("n27", 39), ("n28", 40), ("n29", 41), ("n2a", 42), ("n2b", 43), ("n2c", 44), ("n2d", 45), ("n2e", 46), ("n2f", 47), ("n30", 48), ("n31", 49), ("n32", 50), ("n33", 51), ("n34", 52), ("n35", 53), ("n36", 54), ("n37", 55), ("n38", 56), ("n39", 57), ("n3a", 58), ("n3b", 59), ("n3c", 60), ("n3d", 61), ("n3e", 62), ("n3f", 63), ("n40", 64), ("n41", 65), ("n42", 66), ("n43", 67), ("n44", 68), ("n45", 69), ("n46", 70), ("n47", 71), ("n48", 72), ("n49", 73), ("n4a", 74), ("n4b", 75), ("n4c", 76), ("n4d", 77), ("n4e", 78), ("n4f", 79), ("n50", 80), ("n51", 81), ("n52", 82), ("n53", 83), ("n54", 84), ("n55", 85), ("n56", 86), ("n57", 87), ("n58", 88), ("n59", 89), ("n5a", 90), ("n5b", 91), ("n5c", 92), ("n5d", 93), ("n5e", 94), ("n5f", 95), ("n60", 96), ("n61", 97), ("n62", 98), ("n63", 99), ("n64", 100), ("n65", 101), ("n66", 102), ("n67", 103), ("n68", 104), ("n69", 105), ("n6a", 106), ("n6b", 107), ("n6c", 108), ("n6d", 109), ("n6e", 110), ("n6f", 111), ("n70", 112), ("n71", 113), ("n72", 114), ("n73", 115), ("n74", 116), ("n75", 117), ("n76", 118), ("n77", 119), ("n78", 120), ("n79", 121), ("n7a", 122), ("n7b", 123), ("n7c", 124), ("n7d", 125), ("n7e", 126), ("n7f", 127), ("n80", 128), ("n81", 129), ("n82", 130), ("n83", 131), ("n84", 132), ("n85", 133), ("n86", 134), ("n87", 135), ("n88", 136), ("n89", 137), ("n8a", 138), ("n8b", 139), ("n8c", 140), ("n8d", 141), ("n8e", 142), ("n8f", 143), ("n90", 144), ("n91", 145), ("n92", 146), ("n93", 147), ("n94", 148), ("n95", 149), ("n96", 150), ("n97", 151), ("n98", 152), ("n99", 153), ("n9a", 154), ("n9b", 155), ("n9c", 156), ("n9d", 157), ("n9e", 158), ("n9f", 159), ("a0", 160), ("a1", 161), ("a2", 162), ("a3", 163), ("a4", 164), ("a5", 165), ("a6", 166), ("a7", 167), ("a8", 168), ("a9", 169), ("aa", 170), ("ab", 171), ("ac", 172), ("ad", 173), ("ae", 174), ("af", 175), ("b0", 176), ("b1", 177), ("b2", 178), ("b3", 179), ("b4", 180), ("b5", 181), ("b6", 182), ("b7", 183), ("b8", 184), ("b9", 185), ("ba", 186), ("bb", 187), ("bc", 188), ("bd", 189), ("be", 190), ("bf", 191), ("c0", 192), ("c1", 193), ("c2", 194), ("c3", 195), ("c4", 196), ("c5", 197), ("c6", 198), ("c7", 199), ("c8", 200), ("c9", 201), ("ca", 202), ("cb", 203), ("cc", 204), ("cd", 205), ("ce", 206), ("cf", 207), ("d0", 208), ("d1", 209), ("d2", 210), ("d3", 211), ("d4", 212), ("d5", 213), ("d6", 214), ("d7", 215), ("d8", 216), ("d9", 217), ("da", 218), ("db", 219), ("dc", 220), ("dd", 221), ("de", 222), ("df", 223), ("e0", 224), ("e1", 225), ("e2", 226), ("e3", 227), ("e4", 228), ("e5", 229), ("e6", 230), ("e7", 231), ("e8", 232), ("e9", 233), ("ea", 234), ("eb", 235), ("ec", 236), ("ed", 237), ("ee", 238), ("ef", 239), ("f0", 240), ("f1", 241), ("f2", 242), ("f3", 243), ("f4", 244), ("f5", 245), ("f6", 246), ("f7", 247), ("f8", 248), ("f9", 249), ("fa", 250), ("fb", 251), ("fc", 252), ("fd", 253), ("fe", 254)) + NamedValues(("ff", 255))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEndOfCallPattern.setStatus('mandatory')
mscVsFramerIngressAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerIngressAudioGain.setStatus('mandatory')
mscVsFramerEgressGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("minus6", 0), ("minus4", 1), ("minus2", 2), ("n0", 3), ("n2", 4), ("n4", 5), ("n6", 6), ("minus12", 7), ("minus11", 8), ("minus10", 9), ("minus9", 10), ("minus8", 11), ("minus7", 12), ("minus5", 13), ("minus3", 14), ("minus1", 15), ("n1", 16), ("n3", 17), ("n5", 18), ("n7", 19), ("n8", 20), ("n9", 21), ("n10", 22), ("n11", 23), ("n12", 24))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEgressGain.setStatus('mandatory')
mscVsFramerComfortNoiseCap = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-78, -78), ValueRangeConstraint(-65, -65), ValueRangeConstraint(-60, -60), ValueRangeConstraint(-54, -54), ValueRangeConstraint(-52, -52), ValueRangeConstraint(-50, -50), ValueRangeConstraint(-48, -48), ValueRangeConstraint(-46, -46), ValueRangeConstraint(-44, -44), ValueRangeConstraint(-42, -42), ValueRangeConstraint(-40, -40), )).clone(-40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerComfortNoiseCap.setStatus('mandatory')
mscVsFramerEchoTailDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 21), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(32, 32), ValueRangeConstraint(64, 64), )).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEchoTailDelay.setStatus('mandatory')
mscVsFramerEchoReturnLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 22), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ValueRangeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEchoReturnLoss.setStatus('mandatory')
mscVsFramerDtmfRegeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerDtmfRegeneration.setStatus('mandatory')
mscVsFramerSpeechHangoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 500)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerSpeechHangoverTime.setStatus('mandatory')
mscVsFramerFaxHangoverTimeG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 20000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerFaxHangoverTimeG711G726.setStatus('mandatory')
mscVsFramerModemFaxSpeechDiscrim = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerModemFaxSpeechDiscrim.setStatus('mandatory')
mscVsFramerV17EncodedAsG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerV17EncodedAsG711G726.setStatus('mandatory')
mscVsFramerEcanBypassMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g164", 0), ("g165", 1), ("never", 2))).clone('g165')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerEcanBypassMode.setStatus('mandatory')
mscVsFramerMaxFaxRelayRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 12, 1, 41), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(24, 24), ValueRangeConstraint(48, 48), ValueRangeConstraint(72, 72), ValueRangeConstraint(96, 96), ValueRangeConstraint(120, 120), ValueRangeConstraint(144, 144), )).clone(144)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerMaxFaxRelayRate.setStatus('mandatory')
mscVsFramerSignalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13), )
if mibBuilder.loadTexts: mscVsFramerSignalTable.setStatus('mandatory')
mscVsFramerSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerSignalEntry.setStatus('mandatory')
mscVsFramerTransmitBusyYellow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerTransmitBusyYellow.setStatus('mandatory')
mscVsFramerTransportSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerTransportSignalling.setStatus('obsolete')
mscVsFramerInterpretSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerInterpretSignalling.setStatus('obsolete')
mscVsFramerInvertBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerInvertBits.setStatus('mandatory')
mscVsFramerSignalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("a", 0), ("aB", 1), ("aBCD", 2))).clone('a')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerSignalBits.setStatus('mandatory')
mscVsFramerTransmitCasYellow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerTransmitCasYellow.setStatus('mandatory')
mscVsFramerCasSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("transparent", 1), ("interpret", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerCasSignalling.setStatus('mandatory')
mscVsFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 14), )
if mibBuilder.loadTexts: mscVsFramerStateTable.setStatus('mandatory')
mscVsFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerStateEntry.setStatus('mandatory')
mscVsFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerAdminState.setStatus('mandatory')
mscVsFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerOperationalState.setStatus('mandatory')
mscVsFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerUsageState.setStatus('mandatory')
mscVsFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15), )
if mibBuilder.loadTexts: mscVsFramerStatsTable.setStatus('mandatory')
mscVsFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerStatsEntry.setStatus('mandatory')
mscVsFramerTotalCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerTotalCells.setStatus('mandatory')
mscVsFramerAudioCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerAudioCells.setStatus('mandatory')
mscVsFramerSilenceCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerSilenceCells.setStatus('mandatory')
mscVsFramerModemCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerModemCells.setStatus('obsolete')
mscVsFramerCurrentEncodingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n640", 1), ("n320", 2), ("n240", 3), ("n160", 4), ("n80", 5), ("n144", 6), ("n120", 7), ("n96", 8), ("n72", 9), ("n63", 10), ("n53", 11), ("n48", 12), ("n24", 13), ("n12", 14), ("n03", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerCurrentEncodingRate.setStatus('obsolete')
mscVsFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerLrcErrors.setStatus('mandatory')
mscVsFramerFrmLostInNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerFrmLostInNetwork.setStatus('mandatory')
mscVsFramerFrmUnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerFrmUnderRuns.setStatus('mandatory')
mscVsFramerFrmDumped = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerFrmDumped.setStatus('mandatory')
mscVsFramerModemSilenceCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerModemSilenceCells.setStatus('obsolete')
mscVsFramerTptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("operating", 0), ("rejected", 1), ("monitoring", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerTptStatus.setStatus('obsolete')
mscVsFramerCurrentEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 32, 33, 64, 65, 66, 67, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g723", 3), ("g726", 4), ("g711", 5), ("v22", 32), ("v22bis", 33), ("faxRelay", 64), ("v27", 65), ("v29", 66), ("v17", 67), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerCurrentEncoding.setStatus('obsolete')
mscVsFramerRecentIngressLineSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 29), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerRecentIngressLineSamples.setStatus('obsolete')
mscVsFramerSentMinVoiceG711G726Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerSentMinVoiceG711G726Rate.setStatus('obsolete')
mscVsFramerSentMinModemFaxG711G726Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerSentMinModemFaxG711G726Rate.setStatus('obsolete')
mscVsFramerSentFaxIdleSuppressionG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerSentFaxIdleSuppressionG711G726.setStatus('obsolete')
mscVsFramerSentSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4), ("casIdleCode", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerSentSilenceSuppression.setStatus('obsolete')
mscVsFramerFaxRelayCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerFaxRelayCells.setStatus('mandatory')
mscVsFramerModemFaxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerModemFaxCells.setStatus('mandatory')
mscVsFramerFaxIdleCells = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 15, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerFaxIdleCells.setStatus('mandatory')
mscVsFramerNegTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16), )
if mibBuilder.loadTexts: mscVsFramerNegTable.setStatus('mandatory')
mscVsFramerNegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerNegEntry.setStatus('mandatory')
mscVsFramerNegotiatedIgSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4), ("casIdleCode", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNegotiatedIgSilenceSuppression.setStatus('mandatory')
mscVsFramerNegotiatedIgFisG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNegotiatedIgFisG711G726.setStatus('mandatory')
mscVsFramerNegotiatedDtmfRegeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNegotiatedDtmfRegeneration.setStatus('mandatory')
mscVsFramerNegotiatedV17AsG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNegotiatedV17AsG711G726.setStatus('mandatory')
mscVsFramerNegotiatedTandemPassThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNegotiatedTandemPassThrough.setStatus('mandatory')
mscVsFramerOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 17), )
if mibBuilder.loadTexts: mscVsFramerOperTable.setStatus('mandatory')
mscVsFramerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"))
if mibBuilder.loadTexts: mscVsFramerOperEntry.setStatus('mandatory')
mscVsFramerOpCurrentEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 32, 33, 64, 65, 66, 67, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g723", 3), ("g726", 4), ("g711", 5), ("v22", 32), ("v22bis", 33), ("faxRelay", 64), ("v27", 65), ("v29", 66), ("v17", 67), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerOpCurrentEncoding.setStatus('mandatory')
mscVsFramerCurrentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n640", 1), ("n320", 2), ("n240", 3), ("n160", 4), ("n80", 5), ("n144", 6), ("n120", 7), ("n96", 8), ("n72", 9), ("n63", 10), ("n53", 11), ("n48", 12), ("n24", 13), ("n12", 14), ("n03", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerCurrentRate.setStatus('mandatory')
mscVsFramerOpTptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("operating", 0), ("monitoring", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerOpTptStatus.setStatus('mandatory')
mscVsFramerOpRecentIngressLineSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 17, 1, 4), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerOpRecentIngressLineSamples.setStatus('mandatory')
mscVsFramerIdleCodeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 204), )
if mibBuilder.loadTexts: mscVsFramerIdleCodeTable.setStatus('mandatory')
mscVsFramerIdleCodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 204, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIdleCodeIndex"))
if mibBuilder.loadTexts: mscVsFramerIdleCodeEntry.setStatus('mandatory')
mscVsFramerIdleCodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 204, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("a", 0), ("b", 1), ("c", 2), ("d", 3))))
if mibBuilder.loadTexts: mscVsFramerIdleCodeIndex.setStatus('mandatory')
mscVsFramerIdleCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 204, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerIdleCodeValue.setStatus('mandatory')
mscVsFramerSeizeCodeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 205), )
if mibBuilder.loadTexts: mscVsFramerSeizeCodeTable.setStatus('mandatory')
mscVsFramerSeizeCodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 205, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerSeizeCodeIndex"))
if mibBuilder.loadTexts: mscVsFramerSeizeCodeEntry.setStatus('mandatory')
mscVsFramerSeizeCodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 205, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("a", 0), ("b", 1), ("c", 2), ("d", 3))))
if mibBuilder.loadTexts: mscVsFramerSeizeCodeIndex.setStatus('mandatory')
mscVsFramerSeizeCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 205, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsFramerSeizeCodeValue.setStatus('mandatory')
mscVsFramerFrmToNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 206), )
if mibBuilder.loadTexts: mscVsFramerFrmToNetworkTable.setStatus('mandatory')
mscVsFramerFrmToNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 206, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerFrmToNetworkIndex"))
if mibBuilder.loadTexts: mscVsFramerFrmToNetworkEntry.setStatus('mandatory')
mscVsFramerFrmToNetworkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 206, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n64KbitS", 0), ("n32KbitS", 1), ("n24KbitS", 2), ("n16KbitS", 3), ("n8KbitS", 4))))
if mibBuilder.loadTexts: mscVsFramerFrmToNetworkIndex.setStatus('mandatory')
mscVsFramerFrmToNetworkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 206, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerFrmToNetworkValue.setStatus('mandatory')
mscVsFramerNEncodingTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 438), )
if mibBuilder.loadTexts: mscVsFramerNEncodingTable.setStatus('mandatory')
mscVsFramerNEncodingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 438, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerNEncodingIndex"))
if mibBuilder.loadTexts: mscVsFramerNEncodingEntry.setStatus('mandatory')
mscVsFramerNEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 438, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("modemFax", 1), ("fax", 2))))
if mibBuilder.loadTexts: mscVsFramerNEncodingIndex.setStatus('mandatory')
mscVsFramerNEncodingValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 438, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 31, 64, 68, 255))).clone(namedValues=NamedValues(("g729", 1), ("g728", 2), ("g726", 4), ("g711", 5), ("g711G726", 31), ("v29V27Relay", 64), ("v17V29V27Relay", 68), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNEncodingValue.setStatus('mandatory')
mscVsFramerNRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 439), )
if mibBuilder.loadTexts: mscVsFramerNRatesTable.setStatus('mandatory')
mscVsFramerNRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 439, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerNRatesTrafficIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerNRatesRateIndex"))
if mibBuilder.loadTexts: mscVsFramerNRatesEntry.setStatus('mandatory')
mscVsFramerNRatesTrafficIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 439, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("voice", 0), ("modemFax", 1), ("fax", 2))))
if mibBuilder.loadTexts: mscVsFramerNRatesTrafficIndex.setStatus('mandatory')
mscVsFramerNRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 439, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: mscVsFramerNRatesRateIndex.setStatus('mandatory')
mscVsFramerNRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 439, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 66, 67, 68, 69, 70))).clone(namedValues=NamedValues(("n00", 0), ("n03", 1), ("n12", 2), ("n24", 3), ("n48", 4), ("n72", 5), ("n96", 6), ("n120", 7), ("n144", 8), ("n80", 66), ("n160", 67), ("n240", 68), ("n320", 69), ("n640", 70)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerNRatesValue.setStatus('mandatory')
mscVsFramerVfpDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5))
mscVsFramerVfpDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5, 1), )
if mibBuilder.loadTexts: mscVsFramerVfpDebugRowStatusTable.setStatus('mandatory')
mscVsFramerVfpDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerVfpDebugIndex"))
if mibBuilder.loadTexts: mscVsFramerVfpDebugRowStatusEntry.setStatus('mandatory')
mscVsFramerVfpDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerVfpDebugRowStatus.setStatus('mandatory')
mscVsFramerVfpDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerVfpDebugComponentName.setStatus('mandatory')
mscVsFramerVfpDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerVfpDebugStorageType.setStatus('mandatory')
mscVsFramerVfpDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsFramerVfpDebugIndex.setStatus('mandatory')
mscVsFramerMvpDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6))
mscVsFramerMvpDebugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6, 1), )
if mibBuilder.loadTexts: mscVsFramerMvpDebugRowStatusTable.setStatus('mandatory')
mscVsFramerMvpDebugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerMvpDebugIndex"))
if mibBuilder.loadTexts: mscVsFramerMvpDebugRowStatusEntry.setStatus('mandatory')
mscVsFramerMvpDebugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerMvpDebugRowStatus.setStatus('mandatory')
mscVsFramerMvpDebugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerMvpDebugComponentName.setStatus('mandatory')
mscVsFramerMvpDebugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerMvpDebugStorageType.setStatus('mandatory')
mscVsFramerMvpDebugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsFramerMvpDebugIndex.setStatus('mandatory')
mscVsFramerPcmCapture = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7))
mscVsFramerPcmCaptureRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7, 1), )
if mibBuilder.loadTexts: mscVsFramerPcmCaptureRowStatusTable.setStatus('mandatory')
mscVsFramerPcmCaptureRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsFramerPcmCaptureIndex"))
if mibBuilder.loadTexts: mscVsFramerPcmCaptureRowStatusEntry.setStatus('mandatory')
mscVsFramerPcmCaptureRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerPcmCaptureRowStatus.setStatus('mandatory')
mscVsFramerPcmCaptureComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerPcmCaptureComponentName.setStatus('mandatory')
mscVsFramerPcmCaptureStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsFramerPcmCaptureStorageType.setStatus('mandatory')
mscVsFramerPcmCaptureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 2, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsFramerPcmCaptureIndex.setStatus('mandatory')
mscVsPlc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3))
mscVsPlcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 1), )
if mibBuilder.loadTexts: mscVsPlcRowStatusTable.setStatus('mandatory')
mscVsPlcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsPlcIndex"))
if mibBuilder.loadTexts: mscVsPlcRowStatusEntry.setStatus('mandatory')
mscVsPlcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsPlcRowStatus.setStatus('mandatory')
mscVsPlcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsPlcComponentName.setStatus('mandatory')
mscVsPlcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsPlcStorageType.setStatus('mandatory')
mscVsPlcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsPlcIndex.setStatus('mandatory')
mscVsPlcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10), )
if mibBuilder.loadTexts: mscVsPlcProvTable.setStatus('mandatory')
mscVsPlcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsPlcIndex"))
if mibBuilder.loadTexts: mscVsPlcProvEntry.setStatus('mandatory')
mscVsPlcRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcRemoteName.setStatus('mandatory')
mscVsPlcSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcSetupPriority.setStatus('mandatory')
mscVsPlcHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcHoldingPriority.setStatus('mandatory')
mscVsPlcRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(32000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcRequiredTxBandwidth.setStatus('mandatory')
mscVsPlcRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048000)).clone(32000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcRequiredRxBandwidth.setStatus('mandatory')
mscVsPlcRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7))).clone('voice')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcRequiredTrafficType.setStatus('mandatory')
mscVsPlcPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="f8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcPermittedTrunkTypes.setStatus('mandatory')
mscVsPlcRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcRequiredSecurity.setStatus('mandatory')
mscVsPlcRequiredCustomerParm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcRequiredCustomerParm.setStatus('mandatory')
mscVsPlcPathAttributeToMinimize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cost", 0), ("delay", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcPathAttributeToMinimize.setStatus('mandatory')
mscVsPlcMaximumAcceptableCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1280)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcMaximumAcceptableCost.setStatus('mandatory')
mscVsPlcMaximumAcceptableDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcMaximumAcceptableDelay.setStatus('mandatory')
mscVsPlcEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcEmissionPriority.setStatus('mandatory')
mscVsPlcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcDiscardPriority.setStatus('mandatory')
mscVsPlcPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcPathType.setStatus('mandatory')
mscVsPlcPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1))).clone('reRoutePath')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcPathFailureAction.setStatus('mandatory')
mscVsPlcBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1))).clone('bumpWhenNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcBumpPreference.setStatus('mandatory')
mscVsPlcOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcOptimization.setStatus('mandatory')
mscVsPlcAddressToCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 20), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcAddressToCall.setStatus('mandatory')
mscVsPlcLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 21), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcLocalAddress.setStatus('mandatory')
mscVsPlcMaximumAcceptableGatewayCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcMaximumAcceptableGatewayCost.setStatus('mandatory')
mscVsPlcMpathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 207), )
if mibBuilder.loadTexts: mscVsPlcMpathTable.setStatus('mandatory')
mscVsPlcMpathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 207, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsPlcIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsPlcMpathIndex"))
if mibBuilder.loadTexts: mscVsPlcMpathEntry.setStatus('mandatory')
mscVsPlcMpathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 207, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: mscVsPlcMpathIndex.setStatus('mandatory')
mscVsPlcMpathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 3, 207, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsPlcMpathValue.setStatus('mandatory')
mscVsLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4))
mscVsLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 1), )
if mibBuilder.loadTexts: mscVsLCoRowStatusTable.setStatus('mandatory')
mscVsLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsLCoIndex"))
if mibBuilder.loadTexts: mscVsLCoRowStatusEntry.setStatus('mandatory')
mscVsLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRowStatus.setStatus('mandatory')
mscVsLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoComponentName.setStatus('mandatory')
mscVsLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoStorageType.setStatus('mandatory')
mscVsLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscVsLCoIndex.setStatus('mandatory')
mscVsLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10), )
if mibBuilder.loadTexts: mscVsLCoPathDataTable.setStatus('mandatory')
mscVsLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsLCoIndex"))
if mibBuilder.loadTexts: mscVsLCoPathDataEntry.setStatus('mandatory')
mscVsLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoState.setStatus('mandatory')
mscVsLCoOverrideRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVsLCoOverrideRemoteName.setStatus('mandatory')
mscVsLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoEnd.setStatus('mandatory')
mscVsLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoCostMetric.setStatus('mandatory')
mscVsLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoDelayMetric.setStatus('mandatory')
mscVsLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRoundTripDelay.setStatus('mandatory')
mscVsLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoSetupPriority.setStatus('mandatory')
mscVsLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoHoldingPriority.setStatus('mandatory')
mscVsLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRequiredTxBandwidth.setStatus('mandatory')
mscVsLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRequiredRxBandwidth.setStatus('mandatory')
mscVsLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRequiredTrafficType.setStatus('mandatory')
mscVsLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPermittedTrunkTypes.setStatus('mandatory')
mscVsLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRequiredSecurity.setStatus('mandatory')
mscVsLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRequiredCustomerParameter.setStatus('mandatory')
mscVsLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoEmissionPriority.setStatus('mandatory')
mscVsLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoDiscardPriority.setStatus('mandatory')
mscVsLCoPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPathType.setStatus('mandatory')
mscVsLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoRetryCount.setStatus('mandatory')
mscVsLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPathFailureCount.setStatus('mandatory')
mscVsLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoReasonForNoRoute.setStatus('mandatory')
mscVsLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoLastTearDownReason.setStatus('mandatory')
mscVsLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPathFailureAction.setStatus('mandatory')
mscVsLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoBumpPreference.setStatus('mandatory')
mscVsLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoOptimization.setStatus('mandatory')
mscVsLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPathUpDateTime.setStatus('mandatory')
mscVsLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 11), )
if mibBuilder.loadTexts: mscVsLCoStatsTable.setStatus('mandatory')
mscVsLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsLCoIndex"))
if mibBuilder.loadTexts: mscVsLCoStatsEntry.setStatus('mandatory')
mscVsLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPktsToNetwork.setStatus('mandatory')
mscVsLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoBytesToNetwork.setStatus('mandatory')
mscVsLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPktsFromNetwork.setStatus('mandatory')
mscVsLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoBytesFromNetwork.setStatus('mandatory')
mscVsLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 264), )
if mibBuilder.loadTexts: mscVsLCoPathTable.setStatus('mandatory')
mscVsLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 264, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsLCoIndex"), (0, "Nortel-MsCarrier-MscPassport-VoiceMIB", "mscVsLCoPathValue"))
if mibBuilder.loadTexts: mscVsLCoPathEntry.setStatus('mandatory')
mscVsLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 80, 4, 264, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVsLCoPathValue.setStatus('mandatory')
voiceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 1))
voiceGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 1, 1))
voiceGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 1, 1, 3))
voiceGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 1, 1, 3, 2))
voiceCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 3))
voiceCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 3, 1))
voiceCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 3, 1, 3))
voiceCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 49, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-VoiceMIB", mscVsFramerVfpDebugRowStatus=mscVsFramerVfpDebugRowStatus, mscVsFramerModemSilenceCells=mscVsFramerModemSilenceCells, mscVsFramerFrmToNetworkEntry=mscVsFramerFrmToNetworkEntry, mscVsPlcMpathEntry=mscVsPlcMpathEntry, mscVsFramerStatsTable=mscVsFramerStatsTable, mscVsFramerPcmCaptureRowStatusEntry=mscVsFramerPcmCaptureRowStatusEntry, mscVsOperStatusEntry=mscVsOperStatusEntry, mscVsLCoPathDataEntry=mscVsLCoPathDataEntry, mscVsFramerMvpDebugRowStatus=mscVsFramerMvpDebugRowStatus, mscVsLCoPathType=mscVsLCoPathType, mscVsFramerEchoReturnLoss=mscVsFramerEchoReturnLoss, mscVsFramerNEncodingTable=mscVsFramerNEncodingTable, mscVsFramerModemFaxSpeechDiscrim=mscVsFramerModemFaxSpeechDiscrim, mscVsPlcComponentName=mscVsPlcComponentName, mscVsRowStatusEntry=mscVsRowStatusEntry, mscVsFramerTotalCells=mscVsFramerTotalCells, mscVsFramerNegotiatedV17AsG711G726=mscVsFramerNegotiatedV17AsG711G726, mscVsPlcMpathIndex=mscVsPlcMpathIndex, mscVsLCoBytesToNetwork=mscVsLCoBytesToNetwork, mscVsFramerIndex=mscVsFramerIndex, mscVsFramerModemFaxCells=mscVsFramerModemFaxCells, mscVsFramerNEncodingValue=mscVsFramerNEncodingValue, mscVsPlcMaximumAcceptableCost=mscVsPlcMaximumAcceptableCost, voiceCapabilitiesCA02A=voiceCapabilitiesCA02A, mscVsFramerSeizeCodeIndex=mscVsFramerSeizeCodeIndex, voiceGroup=voiceGroup, mscVsFramerMvpDebugComponentName=mscVsFramerMvpDebugComponentName, mscVsPlcRequiredCustomerParm=mscVsPlcRequiredCustomerParm, mscVsLCoRequiredSecurity=mscVsLCoRequiredSecurity, mscVsFramerVfpDebugComponentName=mscVsFramerVfpDebugComponentName, mscVsPlcRequiredSecurity=mscVsPlcRequiredSecurity, mscVsPlcPathAttributeToMinimize=mscVsPlcPathAttributeToMinimize, mscVsPlcMaximumAcceptableDelay=mscVsPlcMaximumAcceptableDelay, mscVsFramerCurrentEncoding=mscVsFramerCurrentEncoding, mscVsLCoDiscardPriority=mscVsLCoDiscardPriority, mscVsFramerOperEntry=mscVsFramerOperEntry, mscVsFramerEgressGain=mscVsFramerEgressGain, mscVsPlcEmissionPriority=mscVsPlcEmissionPriority, mscVsStateEntry=mscVsStateEntry, mscVsFramerSpeechHangoverTime=mscVsFramerSpeechHangoverTime, mscVsFramerFaxIdleCells=mscVsFramerFaxIdleCells, mscVsFramerRowStatus=mscVsFramerRowStatus, mscVsFramerStatsEntry=mscVsFramerStatsEntry, mscVsLCoLastTearDownReason=mscVsLCoLastTearDownReason, mscVsFramerStateEntry=mscVsFramerStateEntry, mscVsCustomerIdentifier=mscVsCustomerIdentifier, mscVsFramerSentMinVoiceG711G726Rate=mscVsFramerSentMinVoiceG711G726Rate, mscVsFramerPcmCaptureRowStatus=mscVsFramerPcmCaptureRowStatus, mscVsPlcRowStatus=mscVsPlcRowStatus, mscVsPlcProvEntry=mscVsPlcProvEntry, mscVsLCoPathFailureAction=mscVsLCoPathFailureAction, mscVsFramerStorageType=mscVsFramerStorageType, mscVsPlcSetupPriority=mscVsPlcSetupPriority, mscVsFramerNRatesTable=mscVsFramerNRatesTable, mscVsLCoEmissionPriority=mscVsLCoEmissionPriority, mscVsFramerV17EncodedAsG711G726=mscVsFramerV17EncodedAsG711G726, mscVsPlcStorageType=mscVsPlcStorageType, mscVsLCoRowStatusTable=mscVsLCoRowStatusTable, voiceCapabilitiesCA02=voiceCapabilitiesCA02, mscVsLCoRequiredRxBandwidth=mscVsLCoRequiredRxBandwidth, mscVsPlcOptimization=mscVsPlcOptimization, mscVsFramerNegotiatedDtmfRegeneration=mscVsFramerNegotiatedDtmfRegeneration, mscVsFramerAudioGain=mscVsFramerAudioGain, voiceGroupCA=voiceGroupCA, mscVsFramerEndOfCallPattern=mscVsFramerEndOfCallPattern, mscVsPlcPathType=mscVsPlcPathType, mscVsPlcRemoteName=mscVsPlcRemoteName, mscVsOperationalState=mscVsOperationalState, mscVsPlcRequiredTrafficType=mscVsPlcRequiredTrafficType, mscVsFramerOperationalState=mscVsFramerOperationalState, mscVsFramerVfpDebug=mscVsFramerVfpDebug, mscVsLCoSetupPriority=mscVsLCoSetupPriority, mscVsLCoComponentName=mscVsLCoComponentName, mscVsFramerOpCurrentEncoding=mscVsFramerOpCurrentEncoding, mscVsLCoPathDataTable=mscVsLCoPathDataTable, mscVsFramerFaxRelayCells=mscVsFramerFaxRelayCells, mscVsPlcRowStatusTable=mscVsPlcRowStatusTable, mscVsFramerInterfaceName=mscVsFramerInterfaceName, mscVsFramerStateTable=mscVsFramerStateTable, mscVsSnmpOperStatus=mscVsSnmpOperStatus, mscVsLCoRowStatus=mscVsLCoRowStatus, mscVsFramerVfpDebugRowStatusEntry=mscVsFramerVfpDebugRowStatusEntry, mscVsLCoStatsTable=mscVsLCoStatsTable, voiceMIB=voiceMIB, mscVsFramerSignalBits=mscVsFramerSignalBits, mscVsFramerSentMinModemFaxG711G726Rate=mscVsFramerSentMinModemFaxG711G726Rate, mscVsFramerRowStatusTable=mscVsFramerRowStatusTable, mscVsLCoEnd=mscVsLCoEnd, mscVsLCoHoldingPriority=mscVsLCoHoldingPriority, mscVsOperationalTable=mscVsOperationalTable, mscVsFramerVfpDebugIndex=mscVsFramerVfpDebugIndex, mscVsLCoPathEntry=mscVsLCoPathEntry, mscVsFramerPcmCapture=mscVsFramerPcmCapture, mscVsPlcLocalAddress=mscVsPlcLocalAddress, mscVsLCoBytesFromNetwork=mscVsLCoBytesFromNetwork, mscVsFramerPcmCaptureComponentName=mscVsFramerPcmCaptureComponentName, mscVsFramerTransportSignalling=mscVsFramerTransportSignalling, mscVsFramerMvpDebugIndex=mscVsFramerMvpDebugIndex, mscVsPlcProvTable=mscVsPlcProvTable, mscVsFramerRowStatusEntry=mscVsFramerRowStatusEntry, mscVsLCoPathUpDateTime=mscVsLCoPathUpDateTime, mscVsStorageType=mscVsStorageType, mscVsFramerMvpDebug=mscVsFramerMvpDebug, mscVsFramerEchoTailDelay=mscVsFramerEchoTailDelay, mscVsPlc=mscVsPlc, mscVsFramerFrmUnderRuns=mscVsFramerFrmUnderRuns, mscVsFramerTransmitBusyYellow=mscVsFramerTransmitBusyYellow, mscVsFramerFrmLostInNetwork=mscVsFramerFrmLostInNetwork, mscVsPlcPathFailureAction=mscVsPlcPathFailureAction, mscVsFramerOpRecentIngressLineSamples=mscVsFramerOpRecentIngressLineSamples, mscVsFramerSignalEntry=mscVsFramerSignalEntry, mscVsFramerFrmDumped=mscVsFramerFrmDumped, mscVsFramerNegotiatedIgFisG711G726=mscVsFramerNegotiatedIgFisG711G726, mscVsOperStatusTable=mscVsOperStatusTable, mscVsLCoCostMetric=mscVsLCoCostMetric, voiceCapabilities=voiceCapabilities, mscVsFramerCurrentRate=mscVsFramerCurrentRate, mscVsFramerUsageState=mscVsFramerUsageState, mscVsLCoPktsFromNetwork=mscVsLCoPktsFromNetwork, mscVsFramerEgressAudioGain=mscVsFramerEgressAudioGain, mscVsLCoPermittedTrunkTypes=mscVsLCoPermittedTrunkTypes, mscVsFramerSeizeCodeTable=mscVsFramerSeizeCodeTable, mscVsPlcRequiredRxBandwidth=mscVsPlcRequiredRxBandwidth, mscVsIfAdminStatus=mscVsIfAdminStatus, mscVsFramerMaxModemBitRate=mscVsFramerMaxModemBitRate, mscVsFramerSilenceCells=mscVsFramerSilenceCells, mscVsControlStatus=mscVsControlStatus, mscVsFramerFrmToNetworkValue=mscVsFramerFrmToNetworkValue, mscVsPlcPermittedTrunkTypes=mscVsPlcPermittedTrunkTypes, mscVsPlcBumpPreference=mscVsPlcBumpPreference, mscVsFramerMaxFaxRelayRate=mscVsFramerMaxFaxRelayRate, mscVsPlcDiscardPriority=mscVsPlcDiscardPriority, mscVsLCoStorageType=mscVsLCoStorageType, mscVsLCoRoundTripDelay=mscVsLCoRoundTripDelay, mscVsFramerIdleCodeIndex=mscVsFramerIdleCodeIndex, voiceCapabilitiesCA=voiceCapabilitiesCA, mscVsFramerNRatesEntry=mscVsFramerNRatesEntry, mscVsOperationalEntry=mscVsOperationalEntry, mscVsFramerSignalTable=mscVsFramerSignalTable, mscVsFramerProvEntry=mscVsFramerProvEntry, mscVsPlcAddressToCall=mscVsPlcAddressToCall, mscVsLCoOptimization=mscVsLCoOptimization, mscVsFramerCoderEntry=mscVsFramerCoderEntry, mscVsLCoRowStatusEntry=mscVsLCoRowStatusEntry, mscVsFramerFaxEncoding=mscVsFramerFaxEncoding, mscVsUnknownStatus=mscVsUnknownStatus, mscVsFramerComponentName=mscVsFramerComponentName, mscVsPlcIndex=mscVsPlcIndex, mscVsFramerNRatesRateIndex=mscVsFramerNRatesRateIndex, mscVsLCoState=mscVsLCoState, mscVsFramerNRatesTrafficIndex=mscVsFramerNRatesTrafficIndex, mscVsFramerSeizeCodeEntry=mscVsFramerSeizeCodeEntry, mscVsIfEntryEntry=mscVsIfEntryEntry, mscVsUsageState=mscVsUsageState, mscVsFramerProvTable=mscVsFramerProvTable, mscVsFramerLrcErrors=mscVsFramerLrcErrors, mscVsFramerFaxIdleSuppressionG711G726=mscVsFramerFaxIdleSuppressionG711G726, mscVsLCoRequiredTxBandwidth=mscVsLCoRequiredTxBandwidth, mscVsFramerFaxHangoverTimeG711G726=mscVsFramerFaxHangoverTimeG711G726, mscVsLCoPathFailureCount=mscVsLCoPathFailureCount, mscVsFramerSentFaxIdleSuppressionG711G726=mscVsFramerSentFaxIdleSuppressionG711G726, mscVsFramerPcmCaptureIndex=mscVsFramerPcmCaptureIndex, mscVsFramerNegotiatedIgSilenceSuppression=mscVsFramerNegotiatedIgSilenceSuppression, mscVsFramerPcmCaptureRowStatusTable=mscVsFramerPcmCaptureRowStatusTable, mscVsLCoIndex=mscVsLCoIndex, mscVsFramerIdleCodeValue=mscVsFramerIdleCodeValue, mscVsFramerMvpDebugRowStatusEntry=mscVsFramerMvpDebugRowStatusEntry, mscVsLCoPathValue=mscVsLCoPathValue, mscVsFramerEcanBypassMode=mscVsFramerEcanBypassMode, voiceGroupCA02=voiceGroupCA02, mscVsFramerDtmfRegeneration=mscVsFramerDtmfRegeneration, mscVsComponentName=mscVsComponentName, mscVsIfIndex=mscVsIfIndex, mscVsFramerInvertBits=mscVsFramerInvertBits, mscVsFramerModemCells=mscVsFramerModemCells, mscVsLCoOverrideRemoteName=mscVsLCoOverrideRemoteName, mscVsFramerTptStatus=mscVsFramerTptStatus, mscVsFramerMinModemBitRate=mscVsFramerMinModemBitRate, mscVsFramerNegotiatedTandemPassThrough=mscVsFramerNegotiatedTandemPassThrough, mscVsFramerFrmToNetworkIndex=mscVsFramerFrmToNetworkIndex, mscVsPlcMaximumAcceptableGatewayCost=mscVsPlcMaximumAcceptableGatewayCost, mscVsFramerTandemPassThrough=mscVsFramerTandemPassThrough, mscVsFramerInsertedOutputDelay=mscVsFramerInsertedOutputDelay, mscVsFramerALawConversion=mscVsFramerALawConversion, mscVsLCoBumpPreference=mscVsLCoBumpPreference, mscVsFramerMaxVoiceBitRate=mscVsFramerMaxVoiceBitRate, mscVsFramerComfortNoiseCap=mscVsFramerComfortNoiseCap, mscVsFramerNEncodingIndex=mscVsFramerNEncodingIndex, mscVsFramerFrmToNetworkTable=mscVsFramerFrmToNetworkTable, mscVsProceduralStatus=mscVsProceduralStatus, mscVsFramerCasSignalling=mscVsFramerCasSignalling, mscVsFramerTransmitCasYellow=mscVsFramerTransmitCasYellow, mscVsPlcRowStatusEntry=mscVsPlcRowStatusEntry, mscVsFramerInterpretSignalling=mscVsFramerInterpretSignalling, mscVsPlcMpathValue=mscVsPlcMpathValue, mscVsLCoRequiredTrafficType=mscVsLCoRequiredTrafficType, mscVsLCoRetryCount=mscVsLCoRetryCount, mscVsFramerOperTable=mscVsFramerOperTable, mscVsLCo=mscVsLCo, mscVsFramerSeizeCodeValue=mscVsFramerSeizeCodeValue, mscVsFramerMinVoiceBitRate=mscVsFramerMinVoiceBitRate, mscVsFramerIdleCodeTable=mscVsFramerIdleCodeTable, mscVsRowStatusTable=mscVsRowStatusTable, mscVsFramerAdminState=mscVsFramerAdminState, mscVsFramerNRatesValue=mscVsFramerNRatesValue, mscVsPlcHoldingPriority=mscVsPlcHoldingPriority, mscVsPlcRequiredTxBandwidth=mscVsPlcRequiredTxBandwidth, mscVsLCoPktsToNetwork=mscVsLCoPktsToNetwork, mscVsFramerNegEntry=mscVsFramerNegEntry, mscVsLCoStatsEntry=mscVsLCoStatsEntry, mscVsFramer=mscVsFramer, mscVsStateTable=mscVsStateTable, mscVsFramerVfpDebugRowStatusTable=mscVsFramerVfpDebugRowStatusTable, mscVsAvailabilityStatus=mscVsAvailabilityStatus, mscVsFramerEchoCancellation=mscVsFramerEchoCancellation, mscVsPlcMpathTable=mscVsPlcMpathTable, mscVsFramerVoiceEncoding=mscVsFramerVoiceEncoding, mscVsFramerSentSilenceSuppression=mscVsFramerSentSilenceSuppression, mscVsFramerSilenceSuppression=mscVsFramerSilenceSuppression, mscVsFramerVfpDebugStorageType=mscVsFramerVfpDebugStorageType, mscVsCidDataTable=mscVsCidDataTable, mscVsLCoDelayMetric=mscVsLCoDelayMetric, mscVsFramerMvpDebugStorageType=mscVsFramerMvpDebugStorageType, mscVs=mscVs, mscVsStandbyStatus=mscVsStandbyStatus, mscVsFramerNegTable=mscVsFramerNegTable, mscVsFramerCurrentEncodingRate=mscVsFramerCurrentEncodingRate, mscVsAlarmStatus=mscVsAlarmStatus, mscVsFramerCoderTable=mscVsFramerCoderTable, mscVsIfEntryTable=mscVsIfEntryTable, mscVsRowStatus=mscVsRowStatus, mscVsAdminState=mscVsAdminState, mscVsFramerPcmCaptureStorageType=mscVsFramerPcmCaptureStorageType, voiceGroupCA02A=voiceGroupCA02A, mscVsServiceFailureReason=mscVsServiceFailureReason, mscVsFramerOpTptStatus=mscVsFramerOpTptStatus, mscVsFramerAudioCells=mscVsFramerAudioCells, mscVsIndex=mscVsIndex, mscVsFramerRecentIngressLineSamples=mscVsFramerRecentIngressLineSamples, mscVsFramerIngressAudioGain=mscVsFramerIngressAudioGain, mscVsCidDataEntry=mscVsCidDataEntry, mscVsFramerIdleCodeEntry=mscVsFramerIdleCodeEntry, mscVsFramerMvpDebugRowStatusTable=mscVsFramerMvpDebugRowStatusTable, mscVsLCoRequiredCustomerParameter=mscVsLCoRequiredCustomerParameter, mscVsFramerNEncodingEntry=mscVsFramerNEncodingEntry, mscVsLCoPathTable=mscVsLCoPathTable, mscVsLCoReasonForNoRoute=mscVsLCoReasonForNoRoute)
