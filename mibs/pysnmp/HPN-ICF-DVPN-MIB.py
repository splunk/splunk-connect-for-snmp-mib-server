#
# PySNMP MIB module HPN-ICF-DVPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DVPN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, IpAddress, Unsigned32, iso, ObjectIdentity, MibIdentifier, Gauge32, Counter32, Counter64, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "IpAddress", "Unsigned32", "iso", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter32", "Counter64", "Integer32", "ModuleIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hpnicfDvpn = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57))
if mibBuilder.loadTexts: hpnicfDvpn.setLastUpdated('200507011936Z')
if mibBuilder.loadTexts: hpnicfDvpn.setOrganization('')
class DvpnAlgorithmSuite(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("dvpnDesCbcMd5PreShaModp768", 1), ("dvpnDesCbcMd5PreShaModp1024", 2), ("dvpnDesCbcSha1PreShaModp768", 3), ("dvpnDesCbcSha1PreShaModp1024", 4), ("dvpn3DesCbcMd5PreShaModp768", 5), ("dvpn3DesCbcMd5PreShaModp1024", 6), ("dvpn3DesCbcSha1PreShaModp768", 7), ("dvpn3DesCbcSha1PreShaModp1024", 8), ("dvpnAesCbcMd5PreShaModp768", 9), ("dvpnAesCbcMd5PreShaModp1024", 10), ("dvpnAesCbcSHA1Sha1PreShaModp768", 11), ("dvpnAesCbcSHA1Sha1PreShaModp1024", 12), ("dvpnAlgorithmNone", 13))

class DvpnCommunicateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("clientToserver", 1), ("serverToclient", 2), ("serverToserver", 3), ("clientToclient", 4))

hpnicfDvpnMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1))
hpnicfDvpnMibGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1))
hpnicfDvpnMibTableTroop = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2))
hpnicfDvpnMibNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 3))
hpnicfDvpnMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4))
hpnicfDvpnServiceEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnServiceEnable.setStatus('current')
hpnicfDvpnClassNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnClassNumber.setStatus('current')
hpnicfDvpnClientNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnClientNumber.setStatus('current')
hpnicfDvpnMapAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 180)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnMapAgeTime.setStatus('current')
hpnicfDvpnClientRegisterInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 60)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnClientRegisterInterval.setStatus('current')
hpnicfDvpnClientRegisterDumb = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnClientRegisterDumb.setStatus('current')
hpnicfDvpnClientRegisterRetry = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnClientRegisterRetry.setStatus('current')
hpnicfDvpnInputPkt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnInputPkt.setStatus('current')
hpnicfDvpnDropPkt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDropPkt.setStatus('current')
hpnicfDvpnOutputPkt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnOutputPkt.setStatus('current')
hpnicfDvpnOutputErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnOutputErrorPkt.setStatus('current')
hpnicfDvpnEncryptErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnEncryptErrorPkt.setStatus('current')
hpnicfDvpnCurrentDeviceRole = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("server", 2), ("client", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnCurrentDeviceRole.setStatus('current')
hpnicfDvpnDomainNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainNumber.setStatus('current')
hpnicfDvpnMapNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapNumber.setStatus('current')
hpnicfDvpnSessionNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionNumber.setStatus('current')
hpnicfDvpnServerPreSharedKey = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnServerPreSharedKey.setStatus('current')
hpnicfDvpnMapTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnMapTrapEnable.setStatus('current')
hpnicfDvpnSessionTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnSessionTrapEnable.setStatus('current')
hpnicfDvpnVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version2", 1), ("version3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnVersion.setStatus('current')
hpnicfDvpnClearDomainAllConection = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnClearDomainAllConection.setStatus('current')
hpnicfDvpnClearDvpnStaInfo = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnClearDvpnStaInfo.setStatus('current')
hpnicfDvpnTotalRedirectNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnTotalRedirectNumber.setStatus('current')
hpnicfDvpnGlobalAuthenClientType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnGlobalAuthenClientType.setStatus('current')
hpnicfDvpnGlobalUserDefAAADomain = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnGlobalUserDefAAADomain.setStatus('current')
hpnicfDvpnLocalDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnLocalDeviceId.setStatus('current')
hpnicfDvpnSessionHisAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisAgeTime.setStatus('current')
hpnicfDvpnSessionHisReset = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisReset.setStatus('current')
hpnicfDvpnPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfDvpnPolicyTable.setStatus('current')
hpnicfDvpnPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnPolicyName"))
if mibBuilder.loadTexts: hpnicfDvpnPolicyEntry.setStatus('current')
hpnicfDvpnPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hpnicfDvpnPolicyName.setStatus('current')
hpnicfDvpnPoAuthenClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoAuthenClientType.setStatus('current')
hpnicfDvpnPoSessionAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 3), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoSessionAlgorithmSuite.setStatus('current')
hpnicfDvpnPoSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoSessionIdleTime.setStatus('current')
hpnicfDvpnPoSessionKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoSessionKeepTime.setStatus('current')
hpnicfDvpnPoSessionSetupInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoSessionSetupInterval.setStatus('current')
hpnicfDvpnPoDataAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 7), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoDataAlgorithmSuite.setStatus('current')
hpnicfDvpnPoSaSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(180, 604800)).clone(3600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoSaSeconds.setStatus('current')
hpnicfDvpnPoUserDefAAADomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoUserDefAAADomain.setStatus('current')
hpnicfDvpnPoRefTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnPoRefTimes.setStatus('current')
hpnicfDvpnPoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnPoRowStatus.setStatus('current')
hpnicfDvpnDomainInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfDvpnDomainInfoTable.setStatus('current')
hpnicfDvpnDomainInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainID"))
if mibBuilder.loadTexts: hpnicfDvpnDomainInfoEntry.setStatus('current')
hpnicfDvpnDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfDvpnDomainID.setStatus('current')
hpnicfDvpnDomainSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainSessionNum.setStatus('current')
hpnicfDvpnDomainRedirectNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainRedirectNum.setStatus('current')
hpnicfDvpnDomainInputPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainInputPkt.setStatus('current')
hpnicfDvpnDomainDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainDropPkt.setStatus('current')
hpnicfDvpnDomainOutputPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainOutputPkt.setStatus('current')
hpnicfDvpnDomainOutputErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainOutputErrorPkt.setStatus('current')
hpnicfDvpnDomainEncryptErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnDomainEncryptErrorPkt.setStatus('current')
hpnicfDvpnClassTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3), )
if mibBuilder.loadTexts: hpnicfDvpnClassTable.setStatus('current')
hpnicfDvpnClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnClassName"))
if mibBuilder.loadTexts: hpnicfDvpnClassEntry.setStatus('current')
hpnicfDvpnClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hpnicfDvpnClassName.setStatus('current')
hpnicfDvpnClServerPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClServerPublicIpType.setStatus('current')
hpnicfDvpnClServerPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClServerPublicIp.setStatus('current')
hpnicfDvpnClServerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClServerPriIpType.setStatus('current')
hpnicfDvpnClServerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClServerPriIp.setStatus('current')
hpnicfDvpnClAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 6), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClAlgorithmSuite.setStatus('current')
hpnicfDvpnClAuthenServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("preShareKey", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClAuthenServerType.setStatus('current')
hpnicfDvpnClPreShareKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClPreShareKey.setStatus('current')
hpnicfDvpnClUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClUserName.setStatus('current')
hpnicfDvpnClPwdEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simple", 1), ("cipher", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClPwdEncrypted.setStatus('current')
hpnicfDvpnClPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 11), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClPasswd.setStatus('current')
hpnicfDvpnClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDvpnClassRowStatus.setStatus('current')
hpnicfDvpnTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4), )
if mibBuilder.loadTexts: hpnicfDvpnTunnelTable.setStatus('current')
hpnicfDvpnTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDvpnTunnelEntry.setStatus('current')
hpnicfDvpnTunnelInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2))).clone('client')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnTunnelInterfaceType.setStatus('current')
hpnicfDvpnTunnelAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnTunnelAcl.setStatus('current')
hpnicfDvpnTunnelClientRegType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undistributed", 1), ("forward", 2), ("undistributedandforward", 3), ("normal", 4))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnTunnelClientRegType.setStatus('current')
hpnicfDvpnTunnelDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnTunnelDvpnId.setStatus('current')
hpnicfDvpnTunnelPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnTunnelPolicy.setStatus('current')
hpnicfDvpnTunnelClass = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDvpnTunnelClass.setStatus('current')
hpnicfDvpnMapTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5), )
if mibBuilder.loadTexts: hpnicfDvpnMapTable.setStatus('current')
hpnicfDvpnMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnMapIndex"))
if mibBuilder.loadTexts: hpnicfDvpnMapEntry.setStatus('current')
hpnicfDvpnMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDvpnMapIndex.setStatus('current')
hpnicfDvpnMapPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapPeerDeviceId.setStatus('current')
hpnicfDvpnMapDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapDvpnId.setStatus('current')
hpnicfDvpnMapBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapBuildTime.setStatus('current')
hpnicfDvpnMapPeerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapPeerPriIpType.setStatus('current')
hpnicfDvpnMapPeerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapPeerPriIp.setStatus('current')
hpnicfDvpnMapPeerPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapPeerPublicIpType.setStatus('current')
hpnicfDvpnMapPeerPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapPeerPublicIp.setStatus('current')
hpnicfDvpnMapLocalPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapLocalPriIpType.setStatus('current')
hpnicfDvpnMapLocalPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapLocalPriIp.setStatus('current')
hpnicfDvpnMapLocalPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapLocalPublicIpType.setStatus('current')
hpnicfDvpnMapLocalPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapLocalPublicIp.setStatus('current')
hpnicfDvpnMapUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapUserName.setStatus('current')
hpnicfDvpnMapUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapUdpPort.setStatus('current')
hpnicfDvpnMapControlId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapControlId.setStatus('current')
hpnicfDvpnMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 16), DvpnCommunicateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapType.setStatus('current')
hpnicfDvpnMapState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("mapClientInit", 1), ("mapClientBegin", 2), ("mapClientAlgreq", 3), ("mapClientKexReq", 4), ("mapClientAuthenReq", 5), ("mapClientConfigReq", 6), ("mapClientReq", 7), ("mapClientSuccess", 8), ("mapServerBegin", 9), ("mapServerAlgorithm", 10), ("mapServerKexInit", 11), ("mapServerAuthenInit", 12), ("mapServerConfigInit", 13), ("mapServerInit", 14), ("mapServerFinished", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnMapState.setStatus('current')
hpnicfDvpnSessionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6), )
if mibBuilder.loadTexts: hpnicfDvpnSessionTable.setStatus('current')
hpnicfDvpnSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionDvpnId"), (0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIpType"), (0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIp"))
if mibBuilder.loadTexts: hpnicfDvpnSessionEntry.setStatus('current')
hpnicfDvpnSessionDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDvpnSessionDvpnId.setStatus('current')
hpnicfDvpnSessionPeerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerPriIpType.setStatus('current')
hpnicfDvpnSessionPeerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerPriIp.setStatus('current')
hpnicfDvpnSessionPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerDeviceId.setStatus('current')
hpnicfDvpnSessionBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionBuildTime.setStatus('current')
hpnicfDvpnSessionPeerPubIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerPubIpType.setStatus('current')
hpnicfDvpnSessionPeerPubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerPubIp.setStatus('current')
hpnicfDvpnSessionLocalPubIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionLocalPubIpType.setStatus('current')
hpnicfDvpnSessionLocalPubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionLocalPubIp.setStatus('current')
hpnicfDvpnSessionLocalPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionLocalPriIpType.setStatus('current')
hpnicfDvpnSessionLocalPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionLocalPriIp.setStatus('current')
hpnicfDvpnSessionPeerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerUdpPort.setStatus('current')
hpnicfDvpnSessionInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionInitiator.setStatus('current')
hpnicfDvpnSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionUserName.setStatus('current')
hpnicfDvpnSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sessionSetupInit", 1), ("sessionSetupReq", 2), ("sessionSetupSuccess", 3), ("sessionRekeyReq", 4), ("sessionRekeyRep", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionState.setStatus('current')
hpnicfDvpnSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 16), DvpnCommunicateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionType.setStatus('current')
hpnicfDvpnSessionPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("router", 1), ("pcClient", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionPeerType.setStatus('current')
hpnicfDvpnSessionHisTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7), )
if mibBuilder.loadTexts: hpnicfDvpnSessionHisTable.setStatus('current')
hpnicfDvpnSessionHisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1), ).setIndexNames((0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisDvpnID"), (0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisPeerPriIPType"), (0, "HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisPeerPriIP"))
if mibBuilder.loadTexts: hpnicfDvpnSessionHisEntry.setStatus('current')
hpnicfDvpnSessionHisDvpnID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfDvpnSessionHisDvpnID.setStatus('current')
hpnicfDvpnSessionHisPeerPriIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisPeerPriIPType.setStatus('current')
hpnicfDvpnSessionHisPeerPriIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: hpnicfDvpnSessionHisPeerPriIP.setStatus('current')
hpnicfDvpnSessionHisSendPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisSendPkt.setStatus('current')
hpnicfDvpnSessionHisRcvPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisRcvPkt.setStatus('current')
hpnicfDvpnSessionHisOnlineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisOnlineNumber.setStatus('current')
hpnicfDvpnSessionHisFirstUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisFirstUpTime.setStatus('current')
hpnicfDvpnSessionHisLastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisLastUpTime.setStatus('current')
hpnicfDvpnSessionHisLastDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisLastDownTime.setStatus('current')
hpnicfDvpnSessionHisOnlineFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisOnlineFlag.setStatus('current')
hpnicfDvpnSessionHisPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 2, 7, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDvpnSessionHisPeerDeviceId.setStatus('current')
hpnicfDvpnNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 3, 0))
hpnicfDvpnSessionBuildNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 3, 0, 1)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnLocalDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPubIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPubIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPubIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPubIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerUdpPort"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionUserName"))
if mibBuilder.loadTexts: hpnicfDvpnSessionBuildNotification.setStatus('current')
hpnicfDvpnSessionDelNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 3, 0, 2)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnLocalDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPubIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPubIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPubIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPubIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerUdpPort"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionUserName"))
if mibBuilder.loadTexts: hpnicfDvpnSessionDelNotification.setStatus('current')
hpnicfDvpnMapBuildNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 3, 0, 3)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapIndex"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnLocalDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapUserName"))
if mibBuilder.loadTexts: hpnicfDvpnMapBuildNotification.setStatus('current')
hpnicfDvpnMapDelNotification = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 3, 0, 4)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapIndex"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnLocalDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapUserName"))
if mibBuilder.loadTexts: hpnicfDvpnMapDelNotification.setStatus('current')
hpnicfDvpnMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 1))
hpnicfDvpnMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 1, 1)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnGlobalGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainInfoGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPolicyGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClassGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisGroup"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnMibCompliance = hpnicfDvpnMibCompliance.setStatus('current')
hpnicfDvpnMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2))
hpnicfDvpnGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 1)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnServiceEnable"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClassNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClientNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapAgeTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClientRegisterInterval"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClientRegisterDumb"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClientRegisterRetry"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnInputPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDropPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnOutputPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnOutputErrorPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnEncryptErrorPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnCurrentDeviceRole"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnServerPreSharedKey"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapTrapEnable"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionTrapEnable"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnVersion"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClearDomainAllConection"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClearDvpnStaInfo"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTotalRedirectNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnGlobalAuthenClientType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnGlobalUserDefAAADomain"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnLocalDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisAgeTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnGlobalGroup = hpnicfDvpnGlobalGroup.setStatus('current')
hpnicfDvpnPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 2)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoAuthenClientType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoSessionAlgorithmSuite"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoSessionIdleTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoSessionKeepTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoSessionSetupInterval"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoDataAlgorithmSuite"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoSaSeconds"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoUserDefAAADomain"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoRefTimes"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnPoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnPolicyGroup = hpnicfDvpnPolicyGroup.setStatus('current')
hpnicfDvpnDomainInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 3)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainSessionNum"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainRedirectNum"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainInputPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainDropPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainOutputPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainOutputErrorPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnDomainEncryptErrorPkt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnDomainInfoGroup = hpnicfDvpnDomainInfoGroup.setStatus('current')
hpnicfDvpnClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 4)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnClServerPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClServerPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClServerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClServerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClAlgorithmSuite"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClAuthenServerType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClPreShareKey"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClUserName"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClPwdEncrypted"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClPasswd"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnClassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnClassGroup = hpnicfDvpnClassGroup.setStatus('current')
hpnicfDvpnTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 5)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelInterfaceType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelAcl"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelClientRegType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelPolicy"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnTunnelClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnTunnelGroup = hpnicfDvpnTunnelGroup.setStatus('current')
hpnicfDvpnMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 6)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapIndex"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapBuildTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapPeerPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPublicIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapLocalPublicIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapUserName"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapUdpPort"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapControlId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnMapGroup = hpnicfDvpnMapGroup.setStatus('current')
hpnicfDvpnSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 7)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionDvpnId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerDeviceId"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionBuildTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPubIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPubIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPubIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPubIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPriIpType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionLocalPriIp"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerUdpPort"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionInitiator"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionUserName"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionState"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionPeerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnSessionGroup = hpnicfDvpnSessionGroup.setStatus('current')
hpnicfDvpnSessionHisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 8)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisPeerPriIPType"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisSendPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisRcvPkt"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisOnlineNumber"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisFirstUpTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisLastUpTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisLastDownTime"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisOnlineFlag"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionHisPeerDeviceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnSessionHisGroup = hpnicfDvpnSessionHisGroup.setStatus('current')
hpnicfDvpnNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 57, 1, 4, 2, 9)).setObjects(("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionBuildNotification"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnSessionDelNotification"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapBuildNotification"), ("HPN-ICF-DVPN-MIB", "hpnicfDvpnMapDelNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfDvpnNotificationGroup = hpnicfDvpnNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DVPN-MIB", hpnicfDvpnSessionHisReset=hpnicfDvpnSessionHisReset, hpnicfDvpnDomainInfoEntry=hpnicfDvpnDomainInfoEntry, hpnicfDvpnSessionHisSendPkt=hpnicfDvpnSessionHisSendPkt, hpnicfDvpnMibCompliances=hpnicfDvpnMibCompliances, hpnicfDvpnPolicyEntry=hpnicfDvpnPolicyEntry, hpnicfDvpnPoRefTimes=hpnicfDvpnPoRefTimes, hpnicfDvpnPolicyGroup=hpnicfDvpnPolicyGroup, hpnicfDvpnMapLocalPublicIp=hpnicfDvpnMapLocalPublicIp, hpnicfDvpnSessionHisRcvPkt=hpnicfDvpnSessionHisRcvPkt, hpnicfDvpnSessionHisPeerPriIPType=hpnicfDvpnSessionHisPeerPriIPType, hpnicfDvpnSessionHisAgeTime=hpnicfDvpnSessionHisAgeTime, hpnicfDvpnMapAgeTime=hpnicfDvpnMapAgeTime, hpnicfDvpnSessionHisPeerPriIP=hpnicfDvpnSessionHisPeerPriIP, hpnicfDvpnClServerPublicIp=hpnicfDvpnClServerPublicIp, hpnicfDvpnMapPeerPublicIpType=hpnicfDvpnMapPeerPublicIpType, hpnicfDvpnSessionPeerPubIp=hpnicfDvpnSessionPeerPubIp, hpnicfDvpnClPasswd=hpnicfDvpnClPasswd, DvpnAlgorithmSuite=DvpnAlgorithmSuite, DvpnCommunicateType=DvpnCommunicateType, hpnicfDvpnTunnelClientRegType=hpnicfDvpnTunnelClientRegType, hpnicfDvpnClearDvpnStaInfo=hpnicfDvpnClearDvpnStaInfo, hpnicfDvpnPoSaSeconds=hpnicfDvpnPoSaSeconds, hpnicfDvpnMapPeerPublicIp=hpnicfDvpnMapPeerPublicIp, hpnicfDvpnSessionTrapEnable=hpnicfDvpnSessionTrapEnable, hpnicfDvpnMapBuildNotification=hpnicfDvpnMapBuildNotification, hpnicfDvpnLocalDeviceId=hpnicfDvpnLocalDeviceId, hpnicfDvpnPolicyName=hpnicfDvpnPolicyName, hpnicfDvpnSessionGroup=hpnicfDvpnSessionGroup, hpnicfDvpnMapPeerPriIpType=hpnicfDvpnMapPeerPriIpType, hpnicfDvpnSessionInitiator=hpnicfDvpnSessionInitiator, hpnicfDvpnMibObjects=hpnicfDvpnMibObjects, hpnicfDvpnPoSessionSetupInterval=hpnicfDvpnPoSessionSetupInterval, hpnicfDvpnMibNotification=hpnicfDvpnMibNotification, hpnicfDvpnClPreShareKey=hpnicfDvpnClPreShareKey, hpnicfDvpnGlobalAuthenClientType=hpnicfDvpnGlobalAuthenClientType, hpnicfDvpnPoAuthenClientType=hpnicfDvpnPoAuthenClientType, hpnicfDvpnMapTable=hpnicfDvpnMapTable, hpnicfDvpnMapControlId=hpnicfDvpnMapControlId, hpnicfDvpnDomainNumber=hpnicfDvpnDomainNumber, hpnicfDvpnMapLocalPublicIpType=hpnicfDvpnMapLocalPublicIpType, hpnicfDvpn=hpnicfDvpn, hpnicfDvpnDomainDropPkt=hpnicfDvpnDomainDropPkt, hpnicfDvpnClassEntry=hpnicfDvpnClassEntry, hpnicfDvpnMapDvpnId=hpnicfDvpnMapDvpnId, hpnicfDvpnClAlgorithmSuite=hpnicfDvpnClAlgorithmSuite, hpnicfDvpnMapUserName=hpnicfDvpnMapUserName, hpnicfDvpnPoSessionAlgorithmSuite=hpnicfDvpnPoSessionAlgorithmSuite, hpnicfDvpnDomainSessionNum=hpnicfDvpnDomainSessionNum, hpnicfDvpnSessionHisEntry=hpnicfDvpnSessionHisEntry, hpnicfDvpnMibTableTroop=hpnicfDvpnMibTableTroop, hpnicfDvpnSessionState=hpnicfDvpnSessionState, hpnicfDvpnMapGroup=hpnicfDvpnMapGroup, hpnicfDvpnSessionHisDvpnID=hpnicfDvpnSessionHisDvpnID, hpnicfDvpnNotificationGroup=hpnicfDvpnNotificationGroup, hpnicfDvpnOutputPkt=hpnicfDvpnOutputPkt, hpnicfDvpnSessionBuildTime=hpnicfDvpnSessionBuildTime, hpnicfDvpnSessionLocalPriIpType=hpnicfDvpnSessionLocalPriIpType, hpnicfDvpnSessionLocalPriIp=hpnicfDvpnSessionLocalPriIp, hpnicfDvpnSessionHisGroup=hpnicfDvpnSessionHisGroup, hpnicfDvpnDomainInputPkt=hpnicfDvpnDomainInputPkt, hpnicfDvpnClearDomainAllConection=hpnicfDvpnClearDomainAllConection, hpnicfDvpnSessionPeerUdpPort=hpnicfDvpnSessionPeerUdpPort, hpnicfDvpnMibGlobal=hpnicfDvpnMibGlobal, hpnicfDvpnClientRegisterRetry=hpnicfDvpnClientRegisterRetry, hpnicfDvpnTunnelTable=hpnicfDvpnTunnelTable, hpnicfDvpnSessionHisFirstUpTime=hpnicfDvpnSessionHisFirstUpTime, hpnicfDvpnSessionLocalPubIpType=hpnicfDvpnSessionLocalPubIpType, hpnicfDvpnDomainOutputPkt=hpnicfDvpnDomainOutputPkt, hpnicfDvpnClAuthenServerType=hpnicfDvpnClAuthenServerType, hpnicfDvpnGlobalGroup=hpnicfDvpnGlobalGroup, hpnicfDvpnPoDataAlgorithmSuite=hpnicfDvpnPoDataAlgorithmSuite, hpnicfDvpnPoSessionKeepTime=hpnicfDvpnPoSessionKeepTime, hpnicfDvpnDomainInfoGroup=hpnicfDvpnDomainInfoGroup, hpnicfDvpnClPwdEncrypted=hpnicfDvpnClPwdEncrypted, hpnicfDvpnTunnelPolicy=hpnicfDvpnTunnelPolicy, hpnicfDvpnDomainOutputErrorPkt=hpnicfDvpnDomainOutputErrorPkt, hpnicfDvpnClassName=hpnicfDvpnClassName, hpnicfDvpnMapLocalPriIp=hpnicfDvpnMapLocalPriIp, hpnicfDvpnSessionLocalPubIp=hpnicfDvpnSessionLocalPubIp, hpnicfDvpnSessionDelNotification=hpnicfDvpnSessionDelNotification, hpnicfDvpnMapPeerPriIp=hpnicfDvpnMapPeerPriIp, hpnicfDvpnClassTable=hpnicfDvpnClassTable, hpnicfDvpnVersion=hpnicfDvpnVersion, hpnicfDvpnClUserName=hpnicfDvpnClUserName, hpnicfDvpnDomainInfoTable=hpnicfDvpnDomainInfoTable, hpnicfDvpnSessionUserName=hpnicfDvpnSessionUserName, hpnicfDvpnSessionBuildNotification=hpnicfDvpnSessionBuildNotification, hpnicfDvpnSessionDvpnId=hpnicfDvpnSessionDvpnId, hpnicfDvpnTunnelAcl=hpnicfDvpnTunnelAcl, hpnicfDvpnTunnelDvpnId=hpnicfDvpnTunnelDvpnId, hpnicfDvpnMapEntry=hpnicfDvpnMapEntry, PYSNMP_MODULE_ID=hpnicfDvpn, hpnicfDvpnPolicyTable=hpnicfDvpnPolicyTable, hpnicfDvpnMapBuildTime=hpnicfDvpnMapBuildTime, hpnicfDvpnSessionPeerPriIp=hpnicfDvpnSessionPeerPriIp, hpnicfDvpnTunnelClass=hpnicfDvpnTunnelClass, hpnicfDvpnSessionTable=hpnicfDvpnSessionTable, hpnicfDvpnEncryptErrorPkt=hpnicfDvpnEncryptErrorPkt, hpnicfDvpnSessionHisOnlineNumber=hpnicfDvpnSessionHisOnlineNumber, hpnicfDvpnDomainID=hpnicfDvpnDomainID, hpnicfDvpnClientRegisterDumb=hpnicfDvpnClientRegisterDumb, hpnicfDvpnGlobalUserDefAAADomain=hpnicfDvpnGlobalUserDefAAADomain, hpnicfDvpnMapNumber=hpnicfDvpnMapNumber, hpnicfDvpnSessionHisOnlineFlag=hpnicfDvpnSessionHisOnlineFlag, hpnicfDvpnSessionPeerType=hpnicfDvpnSessionPeerType, hpnicfDvpnServerPreSharedKey=hpnicfDvpnServerPreSharedKey, hpnicfDvpnMapPeerDeviceId=hpnicfDvpnMapPeerDeviceId, hpnicfDvpnSessionPeerDeviceId=hpnicfDvpnSessionPeerDeviceId, hpnicfDvpnClassNumber=hpnicfDvpnClassNumber, hpnicfDvpnClientRegisterInterval=hpnicfDvpnClientRegisterInterval, hpnicfDvpnSessionNumber=hpnicfDvpnSessionNumber, hpnicfDvpnMibConformance=hpnicfDvpnMibConformance, hpnicfDvpnClServerPublicIpType=hpnicfDvpnClServerPublicIpType, hpnicfDvpnClassRowStatus=hpnicfDvpnClassRowStatus, hpnicfDvpnCurrentDeviceRole=hpnicfDvpnCurrentDeviceRole, hpnicfDvpnMibCompliance=hpnicfDvpnMibCompliance, hpnicfDvpnClassGroup=hpnicfDvpnClassGroup, hpnicfDvpnMibGroups=hpnicfDvpnMibGroups, hpnicfDvpnInputPkt=hpnicfDvpnInputPkt, hpnicfDvpnServiceEnable=hpnicfDvpnServiceEnable, hpnicfDvpnSessionPeerPubIpType=hpnicfDvpnSessionPeerPubIpType, hpnicfDvpnSessionEntry=hpnicfDvpnSessionEntry, hpnicfDvpnOutputErrorPkt=hpnicfDvpnOutputErrorPkt, hpnicfDvpnTunnelInterfaceType=hpnicfDvpnTunnelInterfaceType, hpnicfDvpnClServerPriIp=hpnicfDvpnClServerPriIp, hpnicfDvpnMapTrapEnable=hpnicfDvpnMapTrapEnable, hpnicfDvpnTotalRedirectNumber=hpnicfDvpnTotalRedirectNumber, hpnicfDvpnPoRowStatus=hpnicfDvpnPoRowStatus, hpnicfDvpnMapType=hpnicfDvpnMapType, hpnicfDvpnClServerPriIpType=hpnicfDvpnClServerPriIpType, hpnicfDvpnSessionType=hpnicfDvpnSessionType, hpnicfDvpnSessionHisLastDownTime=hpnicfDvpnSessionHisLastDownTime, hpnicfDvpnMapIndex=hpnicfDvpnMapIndex, hpnicfDvpnSessionHisLastUpTime=hpnicfDvpnSessionHisLastUpTime, hpnicfDvpnDomainEncryptErrorPkt=hpnicfDvpnDomainEncryptErrorPkt, hpnicfDvpnDropPkt=hpnicfDvpnDropPkt, hpnicfDvpnTunnelGroup=hpnicfDvpnTunnelGroup, hpnicfDvpnPoSessionIdleTime=hpnicfDvpnPoSessionIdleTime, hpnicfDvpnSessionHisTable=hpnicfDvpnSessionHisTable, hpnicfDvpnMapState=hpnicfDvpnMapState, hpnicfDvpnMapLocalPriIpType=hpnicfDvpnMapLocalPriIpType, hpnicfDvpnNotification=hpnicfDvpnNotification, hpnicfDvpnMapDelNotification=hpnicfDvpnMapDelNotification, hpnicfDvpnClientNumber=hpnicfDvpnClientNumber, hpnicfDvpnTunnelEntry=hpnicfDvpnTunnelEntry, hpnicfDvpnPoUserDefAAADomain=hpnicfDvpnPoUserDefAAADomain, hpnicfDvpnDomainRedirectNum=hpnicfDvpnDomainRedirectNum, hpnicfDvpnMapUdpPort=hpnicfDvpnMapUdpPort, hpnicfDvpnSessionPeerPriIpType=hpnicfDvpnSessionPeerPriIpType, hpnicfDvpnSessionHisPeerDeviceId=hpnicfDvpnSessionHisPeerDeviceId)
