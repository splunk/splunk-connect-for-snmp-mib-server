#
# PySNMP MIB module CISCO-IPSLA-JITTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IPSLA-JITTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
IpSlaCodecType, = mibBuilder.importSymbols("CISCO-IPSLA-TC-MIB", "IpSlaCodecType")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetPortNumber, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, Bits, Integer32, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, TimeTicks, NotificationType, ObjectIdentity, IpAddress, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "Integer32", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "TimeTicks", "NotificationType", "ObjectIdentity", "IpAddress", "Unsigned32", "iso")
StorageType, TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
ciscoIpSlaJitterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 635))
ciscoIpSlaJitterMIB.setRevisions(('2007-07-24 00:00',))
if mibBuilder.loadTexts: ciscoIpSlaJitterMIB.setLastUpdated('200707240000Z')
if mibBuilder.loadTexts: ciscoIpSlaJitterMIB.setOrganization('Cisco Systems, Inc.')
ciscoIpSlaJitterMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 635, 0))
ciscoIpSlaJitterMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 635, 1))
cipslaUdpJitterTmplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1), )
if mibBuilder.loadTexts: cipslaUdpJitterTmplTable.setStatus('current')
cipslaUdpJitterTmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1), ).setIndexNames((0, "CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplName"))
if mibBuilder.loadTexts: cipslaUdpJitterTmplEntry.setStatus('current')
cipslaUdpJitterTmplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cipslaUdpJitterTmplName.setStatus('current')
cipslaUdpJitterTmplDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplDescription.setStatus('current')
cipslaUdpJitterTmplControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplControlEnable.setStatus('current')
cipslaUdpJitterTmplTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplTimeOut.setStatus('current')
cipslaUdpJitterTmplVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplVerifyData.setStatus('current')
cipslaUdpJitterTmplCodecType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 6), IpSlaCodecType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplCodecType.setStatus('current')
cipslaUdpJitterTmplCodecInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 60000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplCodecInterval.setStatus('current')
cipslaUdpJitterTmplCodecPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplCodecPayload.setStatus('current')
cipslaUdpJitterTmplCodecNumPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000))).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplCodecNumPkts.setStatus('current')
cipslaUdpJitterTmplInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplInterval.setStatus('current')
cipslaUdpJitterTmplNumPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(10)).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplNumPkts.setStatus('current')
cipslaUdpJitterTmplSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 12), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplSrcAddrType.setStatus('current')
cipslaUdpJitterTmplSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 13), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplSrcAddr.setStatus('current')
cipslaUdpJitterTmplSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 14), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplSrcPort.setStatus('current')
cipslaUdpJitterTmplPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("milliseconds", 1), ("microseconds", 2))).clone('milliseconds')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplPrecision.setStatus('current')
cipslaUdpJitterTmplReqDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 65024)).clone(32)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplReqDataSize.setStatus('current')
cipslaUdpJitterTmplPktPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("high", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplPktPriority.setStatus('current')
cipslaUdpJitterTmplTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplTOS.setStatus('current')
cipslaUdpJitterTmplVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplVrfName.setStatus('current')
cipslaUdpJitterTmplThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplThreshold.setStatus('current')
cipslaUdpJitterTmplNTPTolAbs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('microseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplNTPTolAbs.setStatus('current')
cipslaUdpJitterTmplNTPTolPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplNTPTolPct.setStatus('current')
cipslaUdpJitterTmplNTPTolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("percent", 1), ("absolute", 2))).clone('percent')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplNTPTolType.setStatus('current')
cipslaUdpJitterTmplIcpifFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplIcpifFactor.setStatus('current')
cipslaUdpJitterTmplStatsHours = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setUnits('hours').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplStatsHours.setStatus('current')
cipslaUdpJitterTmplDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplDistBuckets.setStatus('current')
cipslaUdpJitterTmplDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplDistInterval.setStatus('current')
cipslaUdpJitterTmplStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 28), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplStorageType.setStatus('current')
cipslaUdpJitterTmplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 1, 1, 30), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaUdpJitterTmplRowStatus.setStatus('current')
cipslaIcmpJitterTmplTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2), )
if mibBuilder.loadTexts: cipslaIcmpJitterTmplTable.setStatus('current')
cipslaIcmpJitterTmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1), ).setIndexNames((0, "CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplName"))
if mibBuilder.loadTexts: cipslaIcmpJitterTmplEntry.setStatus('current')
cipslaIcmpJitterTmplName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cipslaIcmpJitterTmplName.setStatus('current')
cipslaIcmpJitterTmplDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplDescription.setStatus('current')
cipslaIcmpJitterTmplTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplTimeOut.setStatus('current')
cipslaIcmpJitterTmplVerifyData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplVerifyData.setStatus('current')
cipslaIcmpJitterTmplNumPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(10)).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplNumPkts.setStatus('current')
cipslaIcmpJitterTmplInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 60000)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplInterval.setStatus('current')
cipslaIcmpJitterTmplSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 7), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplSrcAddrType.setStatus('current')
cipslaIcmpJitterTmplSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplSrcAddr.setStatus('current')
cipslaIcmpJitterTmplTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplTOS.setStatus('current')
cipslaIcmpJitterTmplVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplVrfName.setStatus('current')
cipslaIcmpJitterTmplThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplThreshold.setStatus('current')
cipslaIcmpJitterTmplStatsHours = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setUnits('hours').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplStatsHours.setStatus('current')
cipslaIcmpJitterTmplDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplDistBuckets.setStatus('current')
cipslaIcmpJitterTmplDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplDistInterval.setStatus('current')
cipslaIcmpJitterTmplStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 15), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplStorageType.setStatus('current')
cipslaIcmpJitterTmplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 635, 1, 2, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cipslaIcmpJitterTmplRowStatus.setStatus('current')
ciscoIpSlaJitterMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 635, 2))
ciscoIpSlaJitterMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 635, 2, 1))
ciscoIpSlaJitterMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 635, 2, 2))
ciscoIpSlaJitterMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 635, 2, 1, 1)).setObjects(("CISCO-IPSLA-JITTER-MIB", "ciscoIpSlaUdpJitterTmplGroup"), ("CISCO-IPSLA-JITTER-MIB", "ciscoIpSlaIcmpJitterTmplGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaJitterMIBCompliance = ciscoIpSlaJitterMIBCompliance.setStatus('current')
ciscoIpSlaUdpJitterTmplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 635, 2, 2, 1)).setObjects(("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplDescription"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplControlEnable"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplTimeOut"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplVerifyData"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplCodecType"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplCodecInterval"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplCodecPayload"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplCodecNumPkts"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplInterval"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplNumPkts"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplSrcAddrType"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplSrcAddr"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplSrcPort"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplPrecision"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplReqDataSize"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplPktPriority"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplTOS"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplVrfName"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplThreshold"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplNTPTolAbs"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplNTPTolPct"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplNTPTolType"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplIcpifFactor"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplStatsHours"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplDistBuckets"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplDistInterval"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplStorageType"), ("CISCO-IPSLA-JITTER-MIB", "cipslaUdpJitterTmplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaUdpJitterTmplGroup = ciscoIpSlaUdpJitterTmplGroup.setStatus('current')
ciscoIpSlaIcmpJitterTmplGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 635, 2, 2, 2)).setObjects(("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplDescription"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplTimeOut"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplVerifyData"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplNumPkts"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplInterval"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplSrcAddrType"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplSrcAddr"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplTOS"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplVrfName"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplThreshold"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplStatsHours"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplDistBuckets"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplDistInterval"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplStorageType"), ("CISCO-IPSLA-JITTER-MIB", "cipslaIcmpJitterTmplRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpSlaIcmpJitterTmplGroup = ciscoIpSlaIcmpJitterTmplGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IPSLA-JITTER-MIB", cipslaUdpJitterTmplCodecType=cipslaUdpJitterTmplCodecType, cipslaIcmpJitterTmplDistBuckets=cipslaIcmpJitterTmplDistBuckets, cipslaIcmpJitterTmplDistInterval=cipslaIcmpJitterTmplDistInterval, ciscoIpSlaJitterMIBNotifs=ciscoIpSlaJitterMIBNotifs, cipslaUdpJitterTmplRowStatus=cipslaUdpJitterTmplRowStatus, cipslaUdpJitterTmplIcpifFactor=cipslaUdpJitterTmplIcpifFactor, cipslaIcmpJitterTmplSrcAddrType=cipslaIcmpJitterTmplSrcAddrType, cipslaUdpJitterTmplNumPkts=cipslaUdpJitterTmplNumPkts, ciscoIpSlaJitterMIBCompliance=ciscoIpSlaJitterMIBCompliance, cipslaUdpJitterTmplCodecPayload=cipslaUdpJitterTmplCodecPayload, ciscoIpSlaIcmpJitterTmplGroup=ciscoIpSlaIcmpJitterTmplGroup, cipslaUdpJitterTmplEntry=cipslaUdpJitterTmplEntry, cipslaUdpJitterTmplSrcAddrType=cipslaUdpJitterTmplSrcAddrType, cipslaUdpJitterTmplReqDataSize=cipslaUdpJitterTmplReqDataSize, cipslaIcmpJitterTmplThreshold=cipslaIcmpJitterTmplThreshold, cipslaUdpJitterTmplThreshold=cipslaUdpJitterTmplThreshold, cipslaUdpJitterTmplCodecNumPkts=cipslaUdpJitterTmplCodecNumPkts, cipslaUdpJitterTmplNTPTolType=cipslaUdpJitterTmplNTPTolType, cipslaUdpJitterTmplNTPTolAbs=cipslaUdpJitterTmplNTPTolAbs, ciscoIpSlaJitterMIBGroups=ciscoIpSlaJitterMIBGroups, cipslaIcmpJitterTmplTable=cipslaIcmpJitterTmplTable, ciscoIpSlaJitterMIBObjects=ciscoIpSlaJitterMIBObjects, cipslaUdpJitterTmplTOS=cipslaUdpJitterTmplTOS, cipslaIcmpJitterTmplNumPkts=cipslaIcmpJitterTmplNumPkts, cipslaIcmpJitterTmplStorageType=cipslaIcmpJitterTmplStorageType, cipslaUdpJitterTmplStatsHours=cipslaUdpJitterTmplStatsHours, ciscoIpSlaUdpJitterTmplGroup=ciscoIpSlaUdpJitterTmplGroup, cipslaUdpJitterTmplNTPTolPct=cipslaUdpJitterTmplNTPTolPct, cipslaUdpJitterTmplControlEnable=cipslaUdpJitterTmplControlEnable, PYSNMP_MODULE_ID=ciscoIpSlaJitterMIB, cipslaIcmpJitterTmplRowStatus=cipslaIcmpJitterTmplRowStatus, cipslaIcmpJitterTmplStatsHours=cipslaIcmpJitterTmplStatsHours, cipslaUdpJitterTmplInterval=cipslaUdpJitterTmplInterval, cipslaIcmpJitterTmplTimeOut=cipslaIcmpJitterTmplTimeOut, cipslaUdpJitterTmplVerifyData=cipslaUdpJitterTmplVerifyData, cipslaUdpJitterTmplSrcAddr=cipslaUdpJitterTmplSrcAddr, ciscoIpSlaJitterMIBCompliances=ciscoIpSlaJitterMIBCompliances, cipslaIcmpJitterTmplTOS=cipslaIcmpJitterTmplTOS, cipslaUdpJitterTmplVrfName=cipslaUdpJitterTmplVrfName, cipslaIcmpJitterTmplEntry=cipslaIcmpJitterTmplEntry, cipslaIcmpJitterTmplInterval=cipslaIcmpJitterTmplInterval, cipslaUdpJitterTmplName=cipslaUdpJitterTmplName, ciscoIpSlaJitterMIBConform=ciscoIpSlaJitterMIBConform, cipslaUdpJitterTmplTimeOut=cipslaUdpJitterTmplTimeOut, cipslaUdpJitterTmplPktPriority=cipslaUdpJitterTmplPktPriority, cipslaUdpJitterTmplTable=cipslaUdpJitterTmplTable, cipslaIcmpJitterTmplVerifyData=cipslaIcmpJitterTmplVerifyData, cipslaUdpJitterTmplDescription=cipslaUdpJitterTmplDescription, cipslaUdpJitterTmplStorageType=cipslaUdpJitterTmplStorageType, ciscoIpSlaJitterMIB=ciscoIpSlaJitterMIB, cipslaIcmpJitterTmplName=cipslaIcmpJitterTmplName, cipslaIcmpJitterTmplSrcAddr=cipslaIcmpJitterTmplSrcAddr, cipslaIcmpJitterTmplVrfName=cipslaIcmpJitterTmplVrfName, cipslaUdpJitterTmplDistInterval=cipslaUdpJitterTmplDistInterval, cipslaIcmpJitterTmplDescription=cipslaIcmpJitterTmplDescription, cipslaUdpJitterTmplDistBuckets=cipslaUdpJitterTmplDistBuckets, cipslaUdpJitterTmplCodecInterval=cipslaUdpJitterTmplCodecInterval, cipslaUdpJitterTmplPrecision=cipslaUdpJitterTmplPrecision, cipslaUdpJitterTmplSrcPort=cipslaUdpJitterTmplSrcPort)
