#
# PySNMP MIB module OSPF-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OSPF-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
cjnProtocol, = mibBuilder.importSymbols("Cajun-ROOT", "cjnProtocol")
RouterID, TOSType, AreaID, Metric = mibBuilder.importSymbols("OSPF-MIB", "RouterID", "TOSType", "AreaID", "Metric")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, Bits, Gauge32, ModuleIdentity, Unsigned32, Integer32, IpAddress, Counter64, ObjectIdentity, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Bits", "Gauge32", "ModuleIdentity", "Unsigned32", "Integer32", "IpAddress", "Counter64", "ObjectIdentity", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
cjnOspf = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9))
if mibBuilder.loadTexts: cjnOspf.setLastUpdated('9903020000Z')
if mibBuilder.loadTexts: cjnOspf.setOrganization("Lucent's Concord Technology Center (CTC)")
cjnOspfGblConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1))
cjnOspfRouterId = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 1), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfRouterId.setStatus('current')
cjnOspfPathSplit = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfPathSplit.setStatus('current')
cjnOspfPeMax = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfPeMax.setStatus('current')
cjnOspfSpfState = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfSpfState.setStatus('current')
cjnOspfAsbdrStatus = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfAsbdrStatus.setStatus('current')
cjnOspfAutoVLinkCreate = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfAutoVLinkCreate.setStatus('current')
cjnOspfSpfHold = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 7), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfSpfHold.setStatus('current')
cjnOspfSpfSuspendTime = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 8), Integer32().clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfSpfSuspendTime.setStatus('current')
cjnOspfLocalExtType = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfLocalExtType.setStatus('current')
cjnOspfRipExtType = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfRipExtType.setStatus('current')
cjnOspfSpfStaticExtType = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfSpfStaticExtType.setStatus('current')
cjnOspfLowExtType = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfLowExtType.setStatus('current')
cjnOspfTraceFlags = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfTraceFlags.setStatus('current')
cjnOspfGlobalStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnOspfGlobalStatsReset.setStatus('current')
cjnOspfGblStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2))
cjnOspfTOSCount = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTOSCount.setStatus('current')
cjnOspfRunSpf = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRunSpf.setStatus('current')
cjnOspfAbdrStatus = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfAbdrStatus.setStatus('current')
cjnOspfTxNewLsa = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTxNewLsa.setStatus('current')
cjnOspfRxNewLsa = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRxNewLsa.setStatus('current')
cjnOspfRxHelloCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRxHelloCnt.setStatus('current')
cjnOspfTxHelloCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTxHelloCnt.setStatus('current')
cjnOspfRxDBDescCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRxDBDescCnt.setStatus('current')
cjnOspfTxDBDescCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTxDBDescCnt.setStatus('current')
cjnOspfRxLsaAckCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRxLsaAckCnt.setStatus('current')
cjnOspfTxLsaAckCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTxLsaAckCnt.setStatus('current')
cjnOspfRxLsaUpdCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRxLsaUpdCnt.setStatus('current')
cjnOspfTxLsaUpdCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTxLsaUpdCnt.setStatus('current')
cjnOspfRxLsaReqCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRxLsaReqCnt.setStatus('current')
cjnOspfTxLsaReqCnt = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 2, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfTxLsaReqCnt.setStatus('current')
cjnOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3), )
if mibBuilder.loadTexts: cjnOspfIfTable.setStatus('current')
cjnOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfIfIpAddress"))
if mibBuilder.loadTexts: cjnOspfIfEntry.setStatus('current')
cjnOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfIpAddress.setStatus('current')
cjnOspfIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfRowStatus.setStatus('current')
cjnOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 3), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfAreaId.setStatus('current')
cjnOspfIfMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfMask.setStatus('current')
cjnOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bcast", 1), ("nbma", 2), ("pointToPoint", 3), ("pointToMultiPoint", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfType.setStatus('current')
cjnOspfIfCost = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfCost.setStatus('current')
cjnOspfIfDrRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 7), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfDrRouterId.setStatus('current')
cjnOspfIfDrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfDrIpAddr.setStatus('current')
cjnOspfIfBDrRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfBDrRouterId.setStatus('current')
cjnOspfIfDrState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfDrState.setStatus('current')
cjnOspfIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfHelloTimer.setStatus('current')
cjnOspfIfDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfDeadInterval.setStatus('current')
cjnOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfRtrPriority.setStatus('current')
cjnOspfIfRxmtTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 14), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfRxmtTimer.setStatus('current')
cjnOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfTransitDelay.setStatus('current')
cjnOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfAuthKey.setStatus('current')
cjnOspfIfMd5KeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfMd5KeyId.setStatus('current')
cjnOspfIfMd5KeyFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfMd5KeyFlags.setStatus('current')
cjnOspfIfMd5Key = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfMd5Key.setStatus('current')
cjnOspfIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("simple", 1), ("md5", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfAuthType.setStatus('current')
cjnOspfIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfIfMtu.setStatus('current')
cjnOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 3, 1, 22), Integer32().clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfIfPollInterval.setStatus('current')
cjnOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4), )
if mibBuilder.loadTexts: cjnOspfVirtIfTable.setStatus('current')
cjnOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfVirtIfAreaId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfVirtIfNbrRtrId"))
if mibBuilder.loadTexts: cjnOspfVirtIfEntry.setStatus('current')
cjnOspfVirtIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 1), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfAreaId.setStatus('current')
cjnOspfVirtIfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 2), RouterID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfNbrRtrId.setStatus('current')
cjnOspfVirtIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfRowStatus.setStatus('current')
cjnOspfVirtIfDrRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfVirtIfDrRouterId.setStatus('current')
cjnOspfVirtIfDrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfVirtIfDrIpAddr.setStatus('current')
cjnOspfVirtIfBDrRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 6), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfVirtIfBDrRouterId.setStatus('current')
cjnOspfVirtIfDrState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDesignatedRouter", 1), ("desigatedRouter", 2), ("backupDesignatedRouter", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfVirtIfDrState.setStatus('current')
cjnOspfVirtIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfHelloTimer.setStatus('current')
cjnOspfVirtIfDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfDeadInterval.setStatus('current')
cjnOspfVirtIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfRtrPriority.setStatus('current')
cjnOspfVirtIfRxmtTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfRxmtTimer.setStatus('current')
cjnOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfTransitDelay.setStatus('current')
cjnOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfAuthKey.setStatus('current')
cjnOspfVirtIfMd5Key = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfMd5Key.setStatus('current')
cjnOspfVirtIfMd5KeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfMd5KeyId.setStatus('current')
cjnOspfVirtIfMd5KeyFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfMd5KeyFlags.setStatus('current')
cjnOspfVirtIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("simple", 1), ("md5", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfVirtIfAuthType.setStatus('current')
cjnOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5), )
if mibBuilder.loadTexts: cjnOspfAreaTable.setStatus('current')
cjnOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfAreaId"))
if mibBuilder.loadTexts: cjnOspfAreaEntry.setStatus('current')
cjnOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfAreaId.setStatus('current')
cjnOspfAreaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfAreaRowStatus.setStatus('current')
cjnOspfAreaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nonStub", 0), ("stub", 1), ("nssa", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfAreaType.setStatus('current')
cjnOspfAreaTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noTranslation", 0), ("translate", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfAreaTranslate.setStatus('current')
cjnOspfAreaStubCost = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfAreaStubCost.setStatus('current')
cjnOspfAreaT3Filter = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noFiltering", 0), ("filter", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfAreaT3Filter.setStatus('current')
cjnOspfAreaSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfAreaSpfRuns.setStatus('current')
cjnOspfAreaAbdrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfAreaAbdrCnt.setStatus('current')
cjnOspfAreaAsbdrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfAreaAsbdrCnt.setStatus('current')
cjnOspfAreaNetCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfAreaNetCnt.setStatus('current')
cjnOspfCnfgRangeTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6), )
if mibBuilder.loadTexts: cjnOspfCnfgRangeTable.setStatus('obsolete')
cjnOspfCnfgRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfCnfgRangeAreaId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfCnfgRangeIpAddr"), (0, "OSPF-PRIVATE-MIB", "cjnOspfCnfgRangeMask"))
if mibBuilder.loadTexts: cjnOspfCnfgRangeEntry.setStatus('obsolete')
cjnOspfCnfgRangeAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6, 1, 1), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfCnfgRangeAreaId.setStatus('current')
cjnOspfCnfgRangeIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfCnfgRangeIpAddr.setStatus('current')
cjnOspfCnfgRangeMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfCnfgRangeMask.setStatus('current')
cjnOspfCnfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfCnfgRowStatus.setStatus('current')
cjnOspfCnfgRangeAdv = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAdvertising", 0), ("advertising", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnOspfCnfgRangeAdv.setStatus('current')
cjnOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7), )
if mibBuilder.loadTexts: cjnOspfNbrTable.setStatus('current')
cjnOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfNbrIpAddr"))
if mibBuilder.loadTexts: cjnOspfNbrEntry.setStatus('current')
cjnOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrIpAddr.setStatus('current')
cjnOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrState.setStatus('current')
cjnOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrRtrId.setStatus('current')
cjnOspfNbrMasterSlave = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("slave", 0), ("master", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrMasterSlave.setStatus('current')
cjnOspfNbrDrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrDrIpAddr.setStatus('current')
cjnOspfNbrBackUpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrBackUpIpAddr.setStatus('current')
cjnOspfNbrDDNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNbrDDNum.setStatus('current')
cjnOspfLsaHdrTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8), )
if mibBuilder.loadTexts: cjnOspfLsaHdrTable.setStatus('current')
cjnOspfLsaHdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfLsaHdrAreaId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfLsaHdrLsaType"), (0, "OSPF-PRIVATE-MIB", "cjnOspfLsaHdrAdvRtrId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfLsaHdrLsId"))
if mibBuilder.loadTexts: cjnOspfLsaHdrEntry.setStatus('current')
cjnOspfLsaHdrAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrAreaId.setStatus('current')
cjnOspfLsaHdrLsaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrLsaType.setStatus('current')
cjnOspfLsaHdrAdvRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrAdvRtrId.setStatus('current')
cjnOspfLsaHdrLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrLsId.setStatus('current')
cjnOspfLsaHdrLsaAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrLsaAge.setStatus('current')
cjnOspfLsaHdrChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrChecksum.setStatus('current')
cjnOspfLsaHdrSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfLsaHdrSequence.setStatus('current')
cjnOspfExtLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9), )
if mibBuilder.loadTexts: cjnOspfExtLsdbTable.setStatus('current')
cjnOspfExtLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfExtLsdbType"), (0, "OSPF-PRIVATE-MIB", "cjnOspfExtLsdbAdvRtrId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfExtLsdbLsId"))
if mibBuilder.loadTexts: cjnOspfExtLsdbEntry.setStatus('current')
cjnOspfExtLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbType.setStatus('current')
cjnOspfExtLsdbAdvRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbAdvRtrId.setStatus('current')
cjnOspfExtLsdbLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbLsId.setStatus('current')
cjnOspfExtLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbAge.setStatus('current')
cjnOspfExtLsdbLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbLsdbChecksum.setStatus('current')
cjnOspfExtLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbSequence.setStatus('current')
cjnOspfExtLsdNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdNetMask.setStatus('current')
cjnOspfExtLsdbTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 8), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbTOS.setStatus('current')
cjnOspfExtLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 9), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbMetric.setStatus('current')
cjnOspfExtLsdForwardingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdForwardingAddress.setStatus('current')
cjnOspfExtLsdbRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 9, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfExtLsdbRouteTag.setStatus('current')
cjnOspfNetLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10), )
if mibBuilder.loadTexts: cjnOspfNetLsdbTable.setStatus('current')
cjnOspfNetLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfNetLsdbAreaId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfNetLsdbType"), (0, "OSPF-PRIVATE-MIB", "cjnOspfNetLsdbAdvRtrId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfNetLsdbLsId"))
if mibBuilder.loadTexts: cjnOspfNetLsdbEntry.setStatus('current')
cjnOspfNetLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbAreaId.setStatus('current')
cjnOspfNetLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbType.setStatus('current')
cjnOspfNetLsdbAdvRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbAdvRtrId.setStatus('current')
cjnOspfNetLsdbLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbLsId.setStatus('current')
cjnOspfNetLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbAge.setStatus('current')
cjnOspfNetLsdbLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbLsdbChecksum.setStatus('current')
cjnOspfNetLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdbSequence.setStatus('current')
cjnOspfNetLsdNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 10, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfNetLsdNetMask.setStatus('current')
cjnOspfRouterLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11), )
if mibBuilder.loadTexts: cjnOspfRouterLsdbTable.setStatus('current')
cjnOspfRouterLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsdbAreaId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsdbType"), (0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsdbRtrId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsdbLsId"))
if mibBuilder.loadTexts: cjnOspfRouterLsdbEntry.setStatus('current')
cjnOspfRouterLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbAreaId.setStatus('current')
cjnOspfRouterLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bcast", 1), ("nbma", 2), ("pointToPoint", 3), ("pointToMultiPoint", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbType.setStatus('current')
cjnOspfRouterLsdbRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbRtrId.setStatus('current')
cjnOspfRouterLsdbLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbLsId.setStatus('current')
cjnOspfRouterLsdbLinkData = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbLinkData.setStatus('current')
cjnOspfRouterLsdbNumOfTos = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbNumOfTos.setStatus('current')
cjnOspfRouterLsdbMet = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsdbMet.setStatus('current')
cjnOspfRouterLsaHdrTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12), )
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrTable.setStatus('current')
cjnOspfRouterLsaHdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsaHdrAreaId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsaHdrType"), (0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsaHdrAdvRtrId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfRouterLsaHdrLsId"))
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrEntry.setStatus('current')
cjnOspfRouterLsaHdrAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrAreaId.setStatus('current')
cjnOspfRouterLsaHdrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrType.setStatus('current')
cjnOspfRouterLsaHdrAdvRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrAdvRtrId.setStatus('current')
cjnOspfRouterLsaHdrLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrLsId.setStatus('current')
cjnOspfRouterLsaHdrAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrAge.setStatus('current')
cjnOspfRouterLsaHdrChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrChecksum.setStatus('current')
cjnOspfRouterLsaHdrSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrSequence.setStatus('current')
cjnOspfRouterLsaHdrFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrFlags.setStatus('current')
cjnOspfRouterLsaHdrLinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 12, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfRouterLsaHdrLinkCount.setStatus('current')
cjnOspfSumLsaTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13), )
if mibBuilder.loadTexts: cjnOspfSumLsaTable.setStatus('current')
cjnOspfSumLsaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1), ).setIndexNames((0, "OSPF-PRIVATE-MIB", "cjnOspfSumLsaType"), (0, "OSPF-PRIVATE-MIB", "cjnOspfSumLsaAdvRtrId"), (0, "OSPF-PRIVATE-MIB", "cjnOspfSumLsaLsId"))
if mibBuilder.loadTexts: cjnOspfSumLsaEntry.setStatus('current')
cjnOspfSumLsaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaType.setStatus('current')
cjnOspfSumLsaAdvRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaAdvRtrId.setStatus('current')
cjnOspfSumLsaLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaLsId.setStatus('current')
cjnOspfSumLsaLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaLsdbAge.setStatus('current')
cjnOspfSumLsaChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaChecksum.setStatus('current')
cjnOspfSumLsaSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaSequence.setStatus('current')
cjnOspfSumLsaMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaMask.setStatus('current')
cjnOspfSumLsaTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 8), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaTOS.setStatus('current')
cjnOspfSumLsaMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 9, 13, 1, 9), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnOspfSumLsaMetric.setStatus('current')
mibBuilder.exportSymbols("OSPF-PRIVATE-MIB", cjnOspfSumLsaType=cjnOspfSumLsaType, cjnOspfVirtIfDrRouterId=cjnOspfVirtIfDrRouterId, cjnOspfIfRxmtTimer=cjnOspfIfRxmtTimer, cjnOspfRouterLsaHdrLsId=cjnOspfRouterLsaHdrLsId, cjnOspfIfRtrPriority=cjnOspfIfRtrPriority, cjnOspfTxDBDescCnt=cjnOspfTxDBDescCnt, cjnOspfRouterLsdbAreaId=cjnOspfRouterLsdbAreaId, cjnOspfNbrBackUpIpAddr=cjnOspfNbrBackUpIpAddr, cjnOspfTxLsaAckCnt=cjnOspfTxLsaAckCnt, cjnOspfSumLsaTable=cjnOspfSumLsaTable, cjnOspfCnfgRangeMask=cjnOspfCnfgRangeMask, cjnOspfNetLsdbAge=cjnOspfNetLsdbAge, cjnOspfRouterLsaHdrLinkCount=cjnOspfRouterLsaHdrLinkCount, cjnOspfIfDrIpAddr=cjnOspfIfDrIpAddr, cjnOspfCnfgRangeIpAddr=cjnOspfCnfgRangeIpAddr, cjnOspfNbrDrIpAddr=cjnOspfNbrDrIpAddr, cjnOspfIfTable=cjnOspfIfTable, cjnOspfExtLsdbAge=cjnOspfExtLsdbAge, cjnOspfExtLsdbEntry=cjnOspfExtLsdbEntry, cjnOspfNbrTable=cjnOspfNbrTable, cjnOspfExtLsdbRouteTag=cjnOspfExtLsdbRouteTag, cjnOspfExtLsdbType=cjnOspfExtLsdbType, cjnOspfNbrEntry=cjnOspfNbrEntry, cjnOspfNbrDDNum=cjnOspfNbrDDNum, cjnOspfExtLsdbLsdbChecksum=cjnOspfExtLsdbLsdbChecksum, cjnOspfAutoVLinkCreate=cjnOspfAutoVLinkCreate, cjnOspfSumLsaChecksum=cjnOspfSumLsaChecksum, cjnOspfAbdrStatus=cjnOspfAbdrStatus, cjnOspfAreaId=cjnOspfAreaId, cjnOspfExtLsdbAdvRtrId=cjnOspfExtLsdbAdvRtrId, cjnOspfAreaRowStatus=cjnOspfAreaRowStatus, cjnOspfVirtIfAuthType=cjnOspfVirtIfAuthType, cjnOspfVirtIfAreaId=cjnOspfVirtIfAreaId, cjnOspfSpfHold=cjnOspfSpfHold, cjnOspfIfDrState=cjnOspfIfDrState, cjnOspfNetLsdbAdvRtrId=cjnOspfNetLsdbAdvRtrId, cjnOspfRouterLsdbNumOfTos=cjnOspfRouterLsdbNumOfTos, cjnOspfSpfStaticExtType=cjnOspfSpfStaticExtType, cjnOspfSumLsaEntry=cjnOspfSumLsaEntry, cjnOspfVirtIfRtrPriority=cjnOspfVirtIfRtrPriority, cjnOspfLsaHdrLsaAge=cjnOspfLsaHdrLsaAge, cjnOspfRouterLsaHdrAreaId=cjnOspfRouterLsaHdrAreaId, cjnOspfRunSpf=cjnOspfRunSpf, cjnOspfAreaType=cjnOspfAreaType, cjnOspfAreaAbdrCnt=cjnOspfAreaAbdrCnt, cjnOspfRouterLsaHdrFlags=cjnOspfRouterLsaHdrFlags, cjnOspfRouterLsaHdrAdvRtrId=cjnOspfRouterLsaHdrAdvRtrId, cjnOspfSumLsaMetric=cjnOspfSumLsaMetric, cjnOspfAreaTranslate=cjnOspfAreaTranslate, cjnOspfLsaHdrTable=cjnOspfLsaHdrTable, cjnOspfNetLsdbType=cjnOspfNetLsdbType, cjnOspfIfMd5Key=cjnOspfIfMd5Key, cjnOspfExtLsdbSequence=cjnOspfExtLsdbSequence, cjnOspfVirtIfNbrRtrId=cjnOspfVirtIfNbrRtrId, cjnOspfVirtIfDeadInterval=cjnOspfVirtIfDeadInterval, cjnOspfLocalExtType=cjnOspfLocalExtType, cjnOspfVirtIfMd5KeyId=cjnOspfVirtIfMd5KeyId, cjnOspfRxLsaAckCnt=cjnOspfRxLsaAckCnt, cjnOspfNbrMasterSlave=cjnOspfNbrMasterSlave, cjnOspfTraceFlags=cjnOspfTraceFlags, cjnOspfVirtIfTable=cjnOspfVirtIfTable, cjnOspfSpfSuspendTime=cjnOspfSpfSuspendTime, cjnOspfTxHelloCnt=cjnOspfTxHelloCnt, cjnOspfRxHelloCnt=cjnOspfRxHelloCnt, cjnOspfLsaHdrAreaId=cjnOspfLsaHdrAreaId, cjnOspfIfPollInterval=cjnOspfIfPollInterval, cjnOspfExtLsdbLsId=cjnOspfExtLsdbLsId, cjnOspfIfType=cjnOspfIfType, cjnOspfRouterLsdbLsId=cjnOspfRouterLsdbLsId, cjnOspfIfMtu=cjnOspfIfMtu, cjnOspfCnfgRowStatus=cjnOspfCnfgRowStatus, cjnOspfRouterLsaHdrTable=cjnOspfRouterLsaHdrTable, cjnOspfNbrRtrId=cjnOspfNbrRtrId, cjnOspfExtLsdNetMask=cjnOspfExtLsdNetMask, cjnOspfSumLsaLsdbAge=cjnOspfSumLsaLsdbAge, cjnOspfLowExtType=cjnOspfLowExtType, cjnOspfAreaAsbdrCnt=cjnOspfAreaAsbdrCnt, cjnOspfPathSplit=cjnOspfPathSplit, cjnOspfVirtIfEntry=cjnOspfVirtIfEntry, cjnOspfNetLsdbEntry=cjnOspfNetLsdbEntry, cjnOspfNetLsdNetMask=cjnOspfNetLsdNetMask, cjnOspfLsaHdrLsId=cjnOspfLsaHdrLsId, cjnOspfIfEntry=cjnOspfIfEntry, cjnOspfVirtIfHelloTimer=cjnOspfVirtIfHelloTimer, cjnOspfTxNewLsa=cjnOspfTxNewLsa, cjnOspfLsaHdrEntry=cjnOspfLsaHdrEntry, cjnOspfExtLsdForwardingAddress=cjnOspfExtLsdForwardingAddress, cjnOspfAreaTable=cjnOspfAreaTable, cjnOspfIfAuthType=cjnOspfIfAuthType, cjnOspfRxDBDescCnt=cjnOspfRxDBDescCnt, cjnOspfIfIpAddress=cjnOspfIfIpAddress, PYSNMP_MODULE_ID=cjnOspf, cjnOspfRouterLsdbTable=cjnOspfRouterLsdbTable, cjnOspfIfMd5KeyId=cjnOspfIfMd5KeyId, cjnOspfTxLsaReqCnt=cjnOspfTxLsaReqCnt, cjnOspfLsaHdrAdvRtrId=cjnOspfLsaHdrAdvRtrId, cjnOspfRouterLsaHdrEntry=cjnOspfRouterLsaHdrEntry, cjnOspfNetLsdbAreaId=cjnOspfNetLsdbAreaId, cjnOspfGblConfGroup=cjnOspfGblConfGroup, cjnOspfRouterId=cjnOspfRouterId, cjnOspfCnfgRangeTable=cjnOspfCnfgRangeTable, cjnOspfGblStatsGroup=cjnOspfGblStatsGroup, cjnOspfPeMax=cjnOspfPeMax, cjnOspfNetLsdbSequence=cjnOspfNetLsdbSequence, cjnOspfIfRowStatus=cjnOspfIfRowStatus, cjnOspfVirtIfAuthKey=cjnOspfVirtIfAuthKey, cjnOspfVirtIfMd5Key=cjnOspfVirtIfMd5Key, cjnOspfIfCost=cjnOspfIfCost, cjnOspfTOSCount=cjnOspfTOSCount, cjnOspfVirtIfRowStatus=cjnOspfVirtIfRowStatus, cjnOspfVirtIfBDrRouterId=cjnOspfVirtIfBDrRouterId, cjnOspfRouterLsdbType=cjnOspfRouterLsdbType, cjnOspfRouterLsaHdrType=cjnOspfRouterLsaHdrType, cjnOspfCnfgRangeAdv=cjnOspfCnfgRangeAdv, cjnOspfRouterLsaHdrSequence=cjnOspfRouterLsaHdrSequence, cjnOspfSumLsaTOS=cjnOspfSumLsaTOS, cjnOspfIfAreaId=cjnOspfIfAreaId, cjnOspfRouterLsaHdrChecksum=cjnOspfRouterLsaHdrChecksum, cjnOspfRouterLsdbLinkData=cjnOspfRouterLsdbLinkData, cjnOspfAreaNetCnt=cjnOspfAreaNetCnt, cjnOspfRouterLsdbMet=cjnOspfRouterLsdbMet, cjnOspfRipExtType=cjnOspfRipExtType, cjnOspfExtLsdbTOS=cjnOspfExtLsdbTOS, cjnOspfRouterLsdbEntry=cjnOspfRouterLsdbEntry, cjnOspfIfBDrRouterId=cjnOspfIfBDrRouterId, cjnOspfRxLsaReqCnt=cjnOspfRxLsaReqCnt, cjnOspfRxLsaUpdCnt=cjnOspfRxLsaUpdCnt, cjnOspfRouterLsdbRtrId=cjnOspfRouterLsdbRtrId, cjnOspfSumLsaMask=cjnOspfSumLsaMask, cjnOspfSumLsaSequence=cjnOspfSumLsaSequence, cjnOspfNetLsdbTable=cjnOspfNetLsdbTable, cjnOspfVirtIfDrIpAddr=cjnOspfVirtIfDrIpAddr, cjnOspfVirtIfRxmtTimer=cjnOspfVirtIfRxmtTimer, cjnOspfRxNewLsa=cjnOspfRxNewLsa, cjnOspfVirtIfTransitDelay=cjnOspfVirtIfTransitDelay, cjnOspfVirtIfMd5KeyFlags=cjnOspfVirtIfMd5KeyFlags, cjnOspfNbrIpAddr=cjnOspfNbrIpAddr, cjnOspfIfDrRouterId=cjnOspfIfDrRouterId, cjnOspfIfAuthKey=cjnOspfIfAuthKey, cjnOspfNbrState=cjnOspfNbrState, cjnOspfCnfgRangeAreaId=cjnOspfCnfgRangeAreaId, cjnOspfSpfState=cjnOspfSpfState, cjnOspfGlobalStatsReset=cjnOspfGlobalStatsReset, cjnOspfLsaHdrLsaType=cjnOspfLsaHdrLsaType, cjnOspfAsbdrStatus=cjnOspfAsbdrStatus, cjnOspfSumLsaAdvRtrId=cjnOspfSumLsaAdvRtrId, cjnOspfNetLsdbLsdbChecksum=cjnOspfNetLsdbLsdbChecksum, cjnOspfSumLsaLsId=cjnOspfSumLsaLsId, cjnOspfLsaHdrChecksum=cjnOspfLsaHdrChecksum, cjnOspfLsaHdrSequence=cjnOspfLsaHdrSequence, cjnOspfIfTransitDelay=cjnOspfIfTransitDelay, cjnOspfVirtIfDrState=cjnOspfVirtIfDrState, cjnOspfAreaSpfRuns=cjnOspfAreaSpfRuns, cjnOspfIfDeadInterval=cjnOspfIfDeadInterval, cjnOspfCnfgRangeEntry=cjnOspfCnfgRangeEntry, cjnOspfAreaT3Filter=cjnOspfAreaT3Filter, cjnOspfExtLsdbTable=cjnOspfExtLsdbTable, cjnOspfAreaEntry=cjnOspfAreaEntry, cjnOspf=cjnOspf, cjnOspfExtLsdbMetric=cjnOspfExtLsdbMetric, cjnOspfRouterLsaHdrAge=cjnOspfRouterLsaHdrAge, cjnOspfAreaStubCost=cjnOspfAreaStubCost, cjnOspfIfMask=cjnOspfIfMask, cjnOspfNetLsdbLsId=cjnOspfNetLsdbLsId, cjnOspfIfHelloTimer=cjnOspfIfHelloTimer, cjnOspfIfMd5KeyFlags=cjnOspfIfMd5KeyFlags, cjnOspfTxLsaUpdCnt=cjnOspfTxLsaUpdCnt)
