#
# PySNMP MIB module Unisphere-Data-PIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-PIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:25:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
pimRPSetAddress, pimRPSetGroupAddress, pimRPSetGroupMask, pimRPSetComponent, pimInterfaceIfIndex = mibBuilder.importSymbols("PIM-MIB", "pimRPSetAddress", "pimRPSetGroupAddress", "pimRPSetGroupMask", "pimRPSetComponent", "pimInterfaceIfIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, Counter32, IpAddress, TimeTicks, iso, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, Integer32, Unsigned32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "IpAddress", "TimeTicks", "iso", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "Integer32", "Unsigned32", "Bits", "MibIdentifier")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
usdPimMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43))
usdPimMIB.setRevisions(('2001-03-19 15:37',))
if mibBuilder.loadTexts: usdPimMIB.setLastUpdated('200103191537Z')
if mibBuilder.loadTexts: usdPimMIB.setOrganization('Unisphere Networks, Inc.')
class UsdPimType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("invalid", 0), ("dense", 1), ("sparse", 2), ("sparseAndDense", 3))

usdPimMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1))
usdPimTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 0))
usdPimGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1))
usdPimNumHelloRcvd = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumHelloRcvd.setStatus('current')
usdPimNumJoinPruneRcvd = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumJoinPruneRcvd.setStatus('current')
usdPimNumAssertRcvd = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumAssertRcvd.setStatus('current')
usdPimNumGraftRcvd = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumGraftRcvd.setStatus('current')
usdPimNumGraftAckRcvd = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumGraftAckRcvd.setStatus('current')
usdPimNumHelloSent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumHelloSent.setStatus('current')
usdPimNumJoinPruneSent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumJoinPruneSent.setStatus('current')
usdPimNumAssertSent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumAssertSent.setStatus('current')
usdPimNumGraftSent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumGraftSent.setStatus('current')
usdPimNumGraftAckSent = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimNumGraftAckSent.setStatus('current')
usdPimInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11), )
if mibBuilder.loadTexts: usdPimInterfaceTable.setStatus('current')
usdPimInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1), ).setIndexNames((0, "PIM-MIB", "pimInterfaceIfIndex"))
if mibBuilder.loadTexts: usdPimInterfaceEntry.setStatus('current')
usdPimIntfNumHelloRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumHelloRcvd.setStatus('current')
usdPimIntfNumJoinPruneRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumJoinPruneRcvd.setStatus('current')
usdPimIntfNumAssertRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumAssertRcvd.setStatus('current')
usdPimIntfNumGraftRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumGraftRcvd.setStatus('current')
usdPimIntfNumGraftAckRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumGraftAckRcvd.setStatus('current')
usdPimIntfNumHelloSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumHelloSent.setStatus('current')
usdPimIntfNumJoinPruneSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumJoinPruneSent.setStatus('current')
usdPimIntfNumAssertSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumAssertSent.setStatus('current')
usdPimIntfNumGraftSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumGraftSent.setStatus('current')
usdPimIntfNumGraftAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimIntfNumGraftAckSent.setStatus('current')
usdPimIntfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimIntfVersion.setStatus('current')
usdPimIntfNumNbrs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 11, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimIntfNumNbrs.setStatus('current')
usdPimMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12), )
if mibBuilder.loadTexts: usdPimMRouteTable.setStatus('current')
usdPimMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimMRouteGroup"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteSource"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteSourceMask"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteRPAddress"))
if mibBuilder.loadTexts: usdPimMRouteEntry.setStatus('current')
usdPimMRouteGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 1), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteGroup.setStatus('current')
usdPimMRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteSource.setStatus('current')
usdPimMRouteSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 3), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteSourceMask.setStatus('current')
usdPimMRouteRPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 4), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteRPAddress.setStatus('current')
usdPimMRouteUpstreamAssertTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteUpstreamAssertTimer.setStatus('current')
usdPimMRouteAssertMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteAssertMetric.setStatus('current')
usdPimMRouteAssertPref = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteAssertPref.setStatus('current')
usdPimMRouteAssertRPTBit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteAssertRPTBit.setStatus('current')
usdPimMRouteBits = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 9), Bits().clone(namedValues=NamedValues(("rpt", 0), ("spt", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteBits.setStatus('current')
usdPimMRouteRPAddrInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteRPAddrInUse.setStatus('current')
usdPimMRouteUpstreamNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteUpstreamNbr.setStatus('current')
usdPimMRouteIifAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteIifAddr.setStatus('current')
usdPimMRouteIsWaitingToSwitchToSPT = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteIsWaitingToSwitchToSPT.setStatus('current')
usdPimMRouteEntryExpiryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteEntryExpiryTimer.setStatus('current')
usdPimMRouteSenderDRAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteSenderDRAddr.setStatus('current')
usdPimMRouteRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteRouteAddr.setStatus('current')
usdPimMRouteRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteRouteMask.setStatus('current')
usdPimMRouteGRPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 18), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteGRPAddr.setStatus('current')
usdPimMRouteGRPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteGRPMask.setStatus('current')
usdPimMRouteOtherProtoOifJoinTypeAll = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteOtherProtoOifJoinTypeAll.setStatus('current')
usdPimMRouteOtherProtoOifJoinTypeG = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteOtherProtoOifJoinTypeG.setStatus('current')
usdPimMRouteOtherProtoOifJoinTypeSG = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteOtherProtoOifJoinTypeSG.setStatus('current')
usdPimMRoutePimType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 12, 1, 23), UsdPimType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRoutePimType.setStatus('current')
usdPimMRouteNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13), )
if mibBuilder.loadTexts: usdPimMRouteNextHopTable.setStatus('current')
usdPimMRouteNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopGroupAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopSrcAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopSrcMask"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopRPAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopIfId"), (0, "Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopAddress"))
if mibBuilder.loadTexts: usdPimMRouteNextHopEntry.setStatus('current')
usdPimMRouteNextHopGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteNextHopGroupAddr.setStatus('current')
usdPimMRouteNextHopSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 3), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteNextHopSrcAddr.setStatus('current')
usdPimMRouteNextHopSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 4), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteNextHopSrcMask.setStatus('current')
usdPimMRouteNextHopRPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 5), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteNextHopRPAddr.setStatus('current')
usdPimMRouteNextHopIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 6), InterfaceIndex())
if mibBuilder.loadTexts: usdPimMRouteNextHopIfId.setStatus('current')
usdPimMRouteNextHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 7), IpAddress())
if mibBuilder.loadTexts: usdPimMRouteNextHopAddress.setStatus('current')
usdPimMRouteNextHopPruneReason = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("prune", 2), ("assert", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopPruneReason.setStatus('current')
usdPimMRouteNextHopJoinTypeSSRP = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopJoinTypeSSRP.setStatus('current')
usdPimMRouteNextHopJoinTypeG = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopJoinTypeG.setStatus('current')
usdPimMRouteNextHopJoinTypeSG = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopJoinTypeSG.setStatus('current')
usdPimMRouteNextHopHasLGM = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopHasLGM.setStatus('current')
usdPimMRouteNextHopHasOifAW = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopHasOifAW.setStatus('current')
usdPimMRouteNextHopHasOifSendAssert = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopHasOifSendAssert.setStatus('current')
usdPimMRouteNextHopHasOifRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopHasOifRegister.setStatus('current')
usdPimMRouteNextHopHasOifBorderBit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopHasOifBorderBit.setStatus('current')
usdPimMRouteNextHopHasOifNullEncapsBit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopHasOifNullEncapsBit.setStatus('current')
usdPimMRouteNextHopJoinEndTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopJoinEndTimer.setStatus('current')
usdPimMRouteNextHopAssertEndTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopAssertEndTimer.setStatus('current')
usdPimMRouteNextHopNextAssertTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopNextAssertTimer.setStatus('current')
usdPimMRouteNextHopAssertSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 21), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopAssertSrcAddress.setStatus('current')
usdPimMRouteNextHopRegisterSuppressionTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 22), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopRegisterSuppressionTimer.setStatus('current')
usdPimMRouteNextHopPimType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 23), UsdPimType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopPimType.setStatus('current')
usdPimMRouteNextHopPruneTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopPruneTimeLeft.setStatus('current')
usdPimMRouteNextHopsendingIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 13, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimMRouteNextHopsendingIpAddress.setStatus('current')
usdPimRPSetTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 14), )
if mibBuilder.loadTexts: usdPimRPSetTable.setStatus('current')
usdPimRPSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 14, 1), ).setIndexNames((0, "PIM-MIB", "pimRPSetComponent"), (0, "PIM-MIB", "pimRPSetGroupAddress"), (0, "PIM-MIB", "pimRPSetGroupMask"), (0, "PIM-MIB", "pimRPSetAddress"))
if mibBuilder.loadTexts: usdPimRPSetEntry.setStatus('current')
usdPimRPSetPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimRPSetPriority.setStatus('current')
usdPimRPSetTypeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("pimRPTypeInvalid", 0), ("pimRPTypeStatic", 1), ("pimRPTypeStaticOverride", 2), ("pimRPTypeAutoRP", 3), ("pimRPTypeBSR", 4), ("pimRPTypeStaticNegative", 5), ("pimRPTypeStaticOverrideNegative", 6), ("pimRPTypeAutoRPNegative", 7), ("pimRPTypeBSRNegative", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimRPSetTypeInfo.setStatus('current')
usdPimRPSetAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 14, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimRPSetAccessListName.setStatus('current')
usdPimStaticRPConfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15), )
if mibBuilder.loadTexts: usdPimStaticRPConfTable.setStatus('current')
usdPimStaticRPConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimStaticRPConfComponentIndex"), (0, "Unisphere-Data-PIM-MIB", "usdPimStaticRPConfRPAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimStaticRPConfAccessListName"))
if mibBuilder.loadTexts: usdPimStaticRPConfEntry.setStatus('current')
usdPimStaticRPConfComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdPimStaticRPConfComponentIndex.setStatus('current')
usdPimStaticRPConfRPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdPimStaticRPConfRPAddr.setStatus('current')
usdPimStaticRPConfAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: usdPimStaticRPConfAccessListName.setStatus('current')
usdPimStaticRPConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimStaticRPConfRowStatus.setStatus('current')
usdPimStaticRPConfOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 15, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimStaticRPConfOverride.setStatus('current')
usdPimAutoRPConfTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16), )
if mibBuilder.loadTexts: usdPimAutoRPConfTable.setStatus('current')
usdPimAutoRPConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPConfComponentIndex"), (0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPConfCandRPAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPConfGroupAccessListName"))
if mibBuilder.loadTexts: usdPimAutoRPConfEntry.setStatus('current')
usdPimAutoRPConfComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdPimAutoRPConfComponentIndex.setStatus('current')
usdPimAutoRPConfCandRPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdPimAutoRPConfCandRPAddr.setStatus('current')
usdPimAutoRPConfGroupAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: usdPimAutoRPConfGroupAccessListName.setStatus('current')
usdPimAutoRPConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimAutoRPConfRowStatus.setStatus('current')
usdPimAutoRPConfTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimAutoRPConfTTL.setStatus('current')
usdPimAutoRPConfAncmntIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 6), TimeTicks().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimAutoRPConfAncmntIntvl.setStatus('current')
usdPimAutoRPConfifId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 16, 1, 7), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimAutoRPConfifId.setStatus('current')
usdPimAutoRPCandTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17), )
if mibBuilder.loadTexts: usdPimAutoRPCandTable.setStatus('current')
usdPimAutoRPCandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPCandComponentIndex"), (0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPCandRPAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPCandGroupAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimAutoRPCandGroupMask"))
if mibBuilder.loadTexts: usdPimAutoRPCandEntry.setStatus('current')
usdPimAutoRPCandComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdPimAutoRPCandComponentIndex.setStatus('current')
usdPimAutoRPCandRPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdPimAutoRPCandRPAddr.setStatus('current')
usdPimAutoRPCandGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 3), IpAddress())
if mibBuilder.loadTexts: usdPimAutoRPCandGroupAddr.setStatus('current')
usdPimAutoRPCandGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 4), IpAddress())
if mibBuilder.loadTexts: usdPimAutoRPCandGroupMask.setStatus('current')
usdPimAutoRPCandRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimAutoRPCandRowStatus.setStatus('current')
usdPimAutoRPCandAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimAutoRPCandAccessListName.setStatus('current')
usdPimAutoRPCandAutoRPTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimAutoRPCandAutoRPTTL.setStatus('current')
usdPimAutoRPCandAutoRPAncmntIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimAutoRPCandAutoRPAncmntIntvl.setStatus('current')
usdPimAutoRPCandIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 17, 1, 9), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimAutoRPCandIfId.setStatus('current')
usdPimComponentTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18), )
if mibBuilder.loadTexts: usdPimComponentTable.setStatus('current')
usdPimComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimComponentIndex"))
if mibBuilder.loadTexts: usdPimComponentEntry.setStatus('current')
usdPimComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdPimComponentIndex.setStatus('current')
usdPimComponentAutoRPMappingAgentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimComponentAutoRPMappingAgentRowStatus.setStatus('current')
usdPimComponentConfiguredAutoRPMappingAgentIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimComponentConfiguredAutoRPMappingAgentIfId.setStatus('current')
usdPimComponentAutoRPMappingAgentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 4), TimeTicks().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimComponentAutoRPMappingAgentInterval.setStatus('current')
usdPimComponentAutoRPMappingTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdPimComponentAutoRPMappingTTL.setStatus('current')
usdPimComponentAutoRPMappingAgentIntfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimComponentAutoRPMappingAgentIntfAddr.setStatus('current')
usdPimComponentAutoRPMappingAgentWinnerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimComponentAutoRPMappingAgentWinnerAddr.setStatus('current')
usdPimComponentAutoRPMappingAgentWinnerLastHeard = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 18, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimComponentAutoRPMappingAgentWinnerLastHeard.setStatus('current')
usdPimUnicastRouteTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19), )
if mibBuilder.loadTexts: usdPimUnicastRouteTable.setStatus('current')
usdPimUnicastRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryAddr"), (0, "Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryMask"))
if mibBuilder.loadTexts: usdPimUnicastRouteEntry.setStatus('current')
usdPimUnicastRouteEntryAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 1), IpAddress())
if mibBuilder.loadTexts: usdPimUnicastRouteEntryAddr.setStatus('current')
usdPimUnicastRouteEntryMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdPimUnicastRouteEntryMask.setStatus('current')
usdPimUnicastRouteEntryRpfNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimUnicastRouteEntryRpfNbr.setStatus('current')
usdPimUnicastRouteEntryIifId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimUnicastRouteEntryIifId.setStatus('current')
usdPimUnicastRouteEntryIifAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimUnicastRouteEntryIifAddr.setStatus('current')
usdPimUnicastRouteEntryPref = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimUnicastRouteEntryPref.setStatus('current')
usdPimUnicastRouteEntryMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimUnicastRouteEntryMetric.setStatus('current')
usdPimUnicastRouteEntryPimType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 19, 1, 8), UsdPimType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdPimUnicastRouteEntryPimType.setStatus('current')
usdPimSPTThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 20), )
if mibBuilder.loadTexts: usdPimSPTThresholdTable.setStatus('current')
usdPimSPTThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 20, 1), ).setIndexNames((0, "Unisphere-Data-PIM-MIB", "usdPimSPTThresholdAccessListName"))
if mibBuilder.loadTexts: usdPimSPTThresholdEntry.setStatus('current')
usdPimSPTThresholdAccessListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 20, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: usdPimSPTThresholdAccessListName.setStatus('current')
usdPimSPTThresHoldRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 20, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimSPTThresHoldRowStatus.setStatus('current')
usdPimSPTThresholdKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 1, 1, 20, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdPimSPTThresholdKbps.setStatus('current')
usdPimConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2))
usdPimCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 1))
usdPimGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2))
usdPimCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 1, 1)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimGeneralGroup"), ("Unisphere-Data-PIM-MIB", "usdPimInterfaceGroup"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteConfGroup"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopGroup"), ("Unisphere-Data-PIM-MIB", "usdPimRPSetGroup"), ("Unisphere-Data-PIM-MIB", "usdPimStaticRPConfGroup"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPConfGroup"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPCandGroup"), ("Unisphere-Data-PIM-MIB", "usdPimComponentGroup"), ("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteGroup"), ("Unisphere-Data-PIM-MIB", "usdPimSPTThresholdGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimCompliance = usdPimCompliance.setStatus('current')
usdPimGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 1)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimNumHelloRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimNumJoinPruneRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimNumAssertRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimNumGraftRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimNumGraftAckRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimNumHelloSent"), ("Unisphere-Data-PIM-MIB", "usdPimNumJoinPruneSent"), ("Unisphere-Data-PIM-MIB", "usdPimNumAssertSent"), ("Unisphere-Data-PIM-MIB", "usdPimNumGraftSent"), ("Unisphere-Data-PIM-MIB", "usdPimNumGraftAckSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimGeneralGroup = usdPimGeneralGroup.setStatus('current')
usdPimInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 2)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimIntfNumHelloRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumJoinPruneRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumAssertRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumGraftRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumGraftAckRcvd"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumHelloSent"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumJoinPruneSent"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumAssertSent"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumGraftSent"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumGraftAckSent"), ("Unisphere-Data-PIM-MIB", "usdPimIntfVersion"), ("Unisphere-Data-PIM-MIB", "usdPimIntfNumNbrs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimInterfaceGroup = usdPimInterfaceGroup.setStatus('current')
usdPimMRouteConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 3)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimMRouteUpstreamAssertTimer"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteAssertMetric"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteAssertPref"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteAssertRPTBit"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteBits"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteRPAddrInUse"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteUpstreamNbr"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteIifAddr"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteIsWaitingToSwitchToSPT"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteEntryExpiryTimer"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteSenderDRAddr"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteRouteAddr"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteRouteMask"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteGRPAddr"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteGRPMask"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteOtherProtoOifJoinTypeAll"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteOtherProtoOifJoinTypeG"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteOtherProtoOifJoinTypeSG"), ("Unisphere-Data-PIM-MIB", "usdPimMRoutePimType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimMRouteConfGroup = usdPimMRouteConfGroup.setStatus('current')
usdPimMRouteNextHopGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 4)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopPruneReason"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopJoinTypeSSRP"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopJoinTypeG"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopJoinTypeSG"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopHasLGM"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopHasOifAW"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopHasOifSendAssert"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopHasOifRegister"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopHasOifBorderBit"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopHasOifNullEncapsBit"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopJoinEndTimer"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopAssertEndTimer"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopNextAssertTimer"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopAssertSrcAddress"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopRegisterSuppressionTimer"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopPimType"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopPruneTimeLeft"), ("Unisphere-Data-PIM-MIB", "usdPimMRouteNextHopsendingIpAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimMRouteNextHopGroup = usdPimMRouteNextHopGroup.setStatus('current')
usdPimRPSetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 5)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimRPSetPriority"), ("Unisphere-Data-PIM-MIB", "usdPimRPSetTypeInfo"), ("Unisphere-Data-PIM-MIB", "usdPimRPSetAccessListName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimRPSetGroup = usdPimRPSetGroup.setStatus('current')
usdPimStaticRPConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 6)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimStaticRPConfRowStatus"), ("Unisphere-Data-PIM-MIB", "usdPimStaticRPConfOverride"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimStaticRPConfGroup = usdPimStaticRPConfGroup.setStatus('current')
usdPimAutoRPConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 7)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimAutoRPConfRowStatus"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPConfTTL"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPConfAncmntIntvl"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPConfifId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimAutoRPConfGroup = usdPimAutoRPConfGroup.setStatus('current')
usdPimAutoRPCandGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 8)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimAutoRPCandRowStatus"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPCandAccessListName"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPCandAutoRPTTL"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPCandAutoRPAncmntIntvl"), ("Unisphere-Data-PIM-MIB", "usdPimAutoRPCandIfId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimAutoRPCandGroup = usdPimAutoRPCandGroup.setStatus('current')
usdPimComponentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 9)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimComponentAutoRPMappingAgentRowStatus"), ("Unisphere-Data-PIM-MIB", "usdPimComponentConfiguredAutoRPMappingAgentIfId"), ("Unisphere-Data-PIM-MIB", "usdPimComponentAutoRPMappingAgentInterval"), ("Unisphere-Data-PIM-MIB", "usdPimComponentAutoRPMappingTTL"), ("Unisphere-Data-PIM-MIB", "usdPimComponentAutoRPMappingAgentIntfAddr"), ("Unisphere-Data-PIM-MIB", "usdPimComponentAutoRPMappingAgentWinnerAddr"), ("Unisphere-Data-PIM-MIB", "usdPimComponentAutoRPMappingAgentWinnerLastHeard"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimComponentGroup = usdPimComponentGroup.setStatus('current')
usdPimUnicastRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 10)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryRpfNbr"), ("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryIifId"), ("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryIifAddr"), ("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryPref"), ("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryMetric"), ("Unisphere-Data-PIM-MIB", "usdPimUnicastRouteEntryPimType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimUnicastRouteGroup = usdPimUnicastRouteGroup.setStatus('current')
usdPimSPTThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 43, 2, 2, 11)).setObjects(("Unisphere-Data-PIM-MIB", "usdPimSPTThresHoldRowStatus"), ("Unisphere-Data-PIM-MIB", "usdPimSPTThresholdKbps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdPimSPTThresholdGroup = usdPimSPTThresholdGroup.setStatus('current')
mibBuilder.exportSymbols("Unisphere-Data-PIM-MIB", usdPimMRouteTable=usdPimMRouteTable, usdPimMRouteNextHopHasOifAW=usdPimMRouteNextHopHasOifAW, usdPimMRouteAssertRPTBit=usdPimMRouteAssertRPTBit, UsdPimType=UsdPimType, usdPimMRouteUpstreamAssertTimer=usdPimMRouteUpstreamAssertTimer, usdPimMRouteNextHopAssertSrcAddress=usdPimMRouteNextHopAssertSrcAddress, usdPimIntfNumJoinPruneRcvd=usdPimIntfNumJoinPruneRcvd, usdPimInterfaceGroup=usdPimInterfaceGroup, usdPimMRouteNextHopGroup=usdPimMRouteNextHopGroup, usdPimMRouteGroup=usdPimMRouteGroup, usdPimGlobal=usdPimGlobal, usdPimAutoRPCandAutoRPAncmntIntvl=usdPimAutoRPCandAutoRPAncmntIntvl, usdPimComponentEntry=usdPimComponentEntry, usdPimMRouteUpstreamNbr=usdPimMRouteUpstreamNbr, usdPimMRouteAssertMetric=usdPimMRouteAssertMetric, usdPimStaticRPConfEntry=usdPimStaticRPConfEntry, usdPimMRouteIsWaitingToSwitchToSPT=usdPimMRouteIsWaitingToSwitchToSPT, usdPimStaticRPConfGroup=usdPimStaticRPConfGroup, usdPimMRouteNextHopAddress=usdPimMRouteNextHopAddress, usdPimUnicastRouteEntryIifAddr=usdPimUnicastRouteEntryIifAddr, usdPimComponentTable=usdPimComponentTable, usdPimSPTThresholdTable=usdPimSPTThresholdTable, usdPimNumGraftSent=usdPimNumGraftSent, usdPimIntfNumAssertRcvd=usdPimIntfNumAssertRcvd, usdPimStaticRPConfAccessListName=usdPimStaticRPConfAccessListName, usdPimAutoRPConfGroup=usdPimAutoRPConfGroup, usdPimAutoRPCandAutoRPTTL=usdPimAutoRPCandAutoRPTTL, usdPimRPSetEntry=usdPimRPSetEntry, usdPimMRouteRPAddress=usdPimMRouteRPAddress, usdPimComponentAutoRPMappingAgentWinnerAddr=usdPimComponentAutoRPMappingAgentWinnerAddr, usdPimIntfNumHelloSent=usdPimIntfNumHelloSent, usdPimAutoRPCandGroupMask=usdPimAutoRPCandGroupMask, usdPimAutoRPConfTTL=usdPimAutoRPConfTTL, usdPimSPTThresholdEntry=usdPimSPTThresholdEntry, usdPimMRouteBits=usdPimMRouteBits, usdPimInterfaceTable=usdPimInterfaceTable, usdPimComponentAutoRPMappingAgentWinnerLastHeard=usdPimComponentAutoRPMappingAgentWinnerLastHeard, usdPimNumHelloRcvd=usdPimNumHelloRcvd, usdPimMRouteIifAddr=usdPimMRouteIifAddr, usdPimMRouteNextHopHasOifSendAssert=usdPimMRouteNextHopHasOifSendAssert, usdPimNumJoinPruneSent=usdPimNumJoinPruneSent, usdPimComponentGroup=usdPimComponentGroup, usdPimStaticRPConfRowStatus=usdPimStaticRPConfRowStatus, usdPimMRouteGRPMask=usdPimMRouteGRPMask, usdPimMRouteOtherProtoOifJoinTypeSG=usdPimMRouteOtherProtoOifJoinTypeSG, usdPimComponentAutoRPMappingAgentRowStatus=usdPimComponentAutoRPMappingAgentRowStatus, usdPimComponentAutoRPMappingTTL=usdPimComponentAutoRPMappingTTL, usdPimConformance=usdPimConformance, usdPimMRouteEntryExpiryTimer=usdPimMRouteEntryExpiryTimer, usdPimMRouteNextHopHasLGM=usdPimMRouteNextHopHasLGM, usdPimNumGraftAckSent=usdPimNumGraftAckSent, usdPimAutoRPCandAccessListName=usdPimAutoRPCandAccessListName, usdPimCompliances=usdPimCompliances, usdPimNumHelloSent=usdPimNumHelloSent, usdPimMRouteNextHopJoinTypeG=usdPimMRouteNextHopJoinTypeG, usdPimIntfNumHelloRcvd=usdPimIntfNumHelloRcvd, usdPimComponentAutoRPMappingAgentInterval=usdPimComponentAutoRPMappingAgentInterval, usdPimInterfaceEntry=usdPimInterfaceEntry, usdPimStaticRPConfComponentIndex=usdPimStaticRPConfComponentIndex, PYSNMP_MODULE_ID=usdPimMIB, usdPimIntfNumNbrs=usdPimIntfNumNbrs, usdPimUnicastRouteEntry=usdPimUnicastRouteEntry, usdPimIntfNumAssertSent=usdPimIntfNumAssertSent, usdPimMRouteNextHopEntry=usdPimMRouteNextHopEntry, usdPimUnicastRouteEntryMask=usdPimUnicastRouteEntryMask, usdPimUnicastRouteEntryIifId=usdPimUnicastRouteEntryIifId, usdPimAutoRPConfTable=usdPimAutoRPConfTable, usdPimAutoRPConfCandRPAddr=usdPimAutoRPConfCandRPAddr, usdPimAutoRPCandRowStatus=usdPimAutoRPCandRowStatus, usdPimRPSetPriority=usdPimRPSetPriority, usdPimNumGraftAckRcvd=usdPimNumGraftAckRcvd, usdPimMRouteConfGroup=usdPimMRouteConfGroup, usdPimNumAssertRcvd=usdPimNumAssertRcvd, usdPimAutoRPCandGroup=usdPimAutoRPCandGroup, usdPimMRouteRouteAddr=usdPimMRouteRouteAddr, usdPimAutoRPConfAncmntIntvl=usdPimAutoRPConfAncmntIntvl, usdPimUnicastRouteEntryPref=usdPimUnicastRouteEntryPref, usdPimMRouteNextHopPruneReason=usdPimMRouteNextHopPruneReason, usdPimNumAssertSent=usdPimNumAssertSent, usdPimMRouteNextHopHasOifRegister=usdPimMRouteNextHopHasOifRegister, usdPimSPTThresholdAccessListName=usdPimSPTThresholdAccessListName, usdPimMRouteNextHopAssertEndTimer=usdPimMRouteNextHopAssertEndTimer, usdPimRPSetTypeInfo=usdPimRPSetTypeInfo, usdPimMRouteNextHopJoinEndTimer=usdPimMRouteNextHopJoinEndTimer, usdPimIntfVersion=usdPimIntfVersion, usdPimSPTThresholdGroup=usdPimSPTThresholdGroup, usdPimStaticRPConfRPAddr=usdPimStaticRPConfRPAddr, usdPimIntfNumGraftAckRcvd=usdPimIntfNumGraftAckRcvd, usdPimAutoRPConfifId=usdPimAutoRPConfifId, usdPimMRouteRPAddrInUse=usdPimMRouteRPAddrInUse, usdPimMRouteNextHopSrcMask=usdPimMRouteNextHopSrcMask, usdPimIntfNumGraftAckSent=usdPimIntfNumGraftAckSent, usdPimMRouteOtherProtoOifJoinTypeG=usdPimMRouteOtherProtoOifJoinTypeG, usdPimAutoRPCandTable=usdPimAutoRPCandTable, usdPimUnicastRouteGroup=usdPimUnicastRouteGroup, usdPimUnicastRouteEntryPimType=usdPimUnicastRouteEntryPimType, usdPimAutoRPCandGroupAddr=usdPimAutoRPCandGroupAddr, usdPimMRouteOtherProtoOifJoinTypeAll=usdPimMRouteOtherProtoOifJoinTypeAll, usdPimMRouteRouteMask=usdPimMRouteRouteMask, usdPimMRouteNextHopNextAssertTimer=usdPimMRouteNextHopNextAssertTimer, usdPimMIBObjects=usdPimMIBObjects, usdPimMRouteSource=usdPimMRouteSource, usdPimMRouteNextHopHasOifBorderBit=usdPimMRouteNextHopHasOifBorderBit, usdPimMRouteEntry=usdPimMRouteEntry, usdPimIntfNumGraftSent=usdPimIntfNumGraftSent, usdPimUnicastRouteEntryRpfNbr=usdPimUnicastRouteEntryRpfNbr, usdPimStaticRPConfOverride=usdPimStaticRPConfOverride, usdPimMRouteSenderDRAddr=usdPimMRouteSenderDRAddr, usdPimUnicastRouteTable=usdPimUnicastRouteTable, usdPimMRouteNextHopIfId=usdPimMRouteNextHopIfId, usdPimAutoRPCandIfId=usdPimAutoRPCandIfId, usdPimUnicastRouteEntryAddr=usdPimUnicastRouteEntryAddr, usdPimMRouteNextHopPimType=usdPimMRouteNextHopPimType, usdPimRPSetAccessListName=usdPimRPSetAccessListName, usdPimNumJoinPruneRcvd=usdPimNumJoinPruneRcvd, usdPimStaticRPConfTable=usdPimStaticRPConfTable, usdPimAutoRPConfEntry=usdPimAutoRPConfEntry, usdPimMIB=usdPimMIB, usdPimAutoRPConfComponentIndex=usdPimAutoRPConfComponentIndex, usdPimNumGraftRcvd=usdPimNumGraftRcvd, usdPimGeneralGroup=usdPimGeneralGroup, usdPimRPSetGroup=usdPimRPSetGroup, usdPimRPSetTable=usdPimRPSetTable, usdPimMRouteNextHopHasOifNullEncapsBit=usdPimMRouteNextHopHasOifNullEncapsBit, usdPimAutoRPCandEntry=usdPimAutoRPCandEntry, usdPimComponentAutoRPMappingAgentIntfAddr=usdPimComponentAutoRPMappingAgentIntfAddr, usdPimUnicastRouteEntryMetric=usdPimUnicastRouteEntryMetric, usdPimMRouteAssertPref=usdPimMRouteAssertPref, usdPimMRouteNextHopTable=usdPimMRouteNextHopTable, usdPimMRouteNextHopJoinTypeSSRP=usdPimMRouteNextHopJoinTypeSSRP, usdPimGroups=usdPimGroups, usdPimMRoutePimType=usdPimMRoutePimType, usdPimIntfNumJoinPruneSent=usdPimIntfNumJoinPruneSent, usdPimMRouteNextHopGroupAddr=usdPimMRouteNextHopGroupAddr, usdPimMRouteNextHopSrcAddr=usdPimMRouteNextHopSrcAddr, usdPimTraps=usdPimTraps, usdPimMRouteNextHopsendingIpAddress=usdPimMRouteNextHopsendingIpAddress, usdPimIntfNumGraftRcvd=usdPimIntfNumGraftRcvd, usdPimAutoRPCandComponentIndex=usdPimAutoRPCandComponentIndex, usdPimAutoRPConfRowStatus=usdPimAutoRPConfRowStatus, usdPimAutoRPConfGroupAccessListName=usdPimAutoRPConfGroupAccessListName, usdPimCompliance=usdPimCompliance, usdPimSPTThresHoldRowStatus=usdPimSPTThresHoldRowStatus, usdPimMRouteNextHopJoinTypeSG=usdPimMRouteNextHopJoinTypeSG, usdPimSPTThresholdKbps=usdPimSPTThresholdKbps, usdPimComponentIndex=usdPimComponentIndex, usdPimMRouteGRPAddr=usdPimMRouteGRPAddr, usdPimMRouteNextHopRPAddr=usdPimMRouteNextHopRPAddr, usdPimMRouteNextHopRegisterSuppressionTimer=usdPimMRouteNextHopRegisterSuppressionTimer, usdPimComponentConfiguredAutoRPMappingAgentIfId=usdPimComponentConfiguredAutoRPMappingAgentIfId, usdPimMRouteNextHopPruneTimeLeft=usdPimMRouteNextHopPruneTimeLeft, usdPimAutoRPCandRPAddr=usdPimAutoRPCandRPAddr, usdPimMRouteSourceMask=usdPimMRouteSourceMask)
