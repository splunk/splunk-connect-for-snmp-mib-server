#
# PySNMP MIB module BAY-STACK-STORM-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-STORM-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Counter32, Integer32, ModuleIdentity, Gauge32, Bits, iso, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Counter32", "Integer32", "ModuleIdentity", "Gauge32", "Bits", "iso", "NotificationType", "MibIdentifier")
TextualConvention, TruthValue, DisplayString, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "TimeInterval")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackStormControlMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 42))
bayStackStormControlMib.setRevisions(('2014-03-04 00:00', '2012-06-05 00:00',))
if mibBuilder.loadTexts: bayStackStormControlMib.setLastUpdated('201403040000Z')
if mibBuilder.loadTexts: bayStackStormControlMib.setOrganization('Avaya')
bsStormControlNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 42, 0))
bsStormControlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 42, 1))
bsStormControlScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 1))
bsStormControlPollValue = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bsStormControlPollValue.setStatus('current')
bsStormControlTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2), )
if mibBuilder.loadTexts: bsStormControlTable.setStatus('current')
bsStormControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-STORM-CONTROL-MIB", "bsStormControlTrafficType"))
if mibBuilder.loadTexts: bsStormControlEntry.setStatus('current')
bsStormControlTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unicast", 1), ("broadcast", 2), ("multicast", 3))))
if mibBuilder.loadTexts: bsStormControlTrafficType.setStatus('current')
bsStormControlEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlEnabled.setStatus('current')
bsStormControlLowWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(200)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlLowWatermark.setStatus('current')
bsStormControlHighWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(500)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlHighWatermark.setStatus('current')
bsStormControlPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 5), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(500, 30000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlPollInterval.setStatus('current')
bsStormControlTrapInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlTrapInterval.setStatus('current')
bsStormControlActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("drop", 2), ("shutdown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlActionType.setStatus('current')
bsStormControlIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3), )
if mibBuilder.loadTexts: bsStormControlIfTable.setStatus('current')
bsStormControlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1), ).setIndexNames((0, "BAY-STACK-STORM-CONTROL-MIB", "bsStormControlTrafficType"), (0, "BAY-STACK-STORM-CONTROL-MIB", "bsStormControlIfIndex"))
if mibBuilder.loadTexts: bsStormControlIfEntry.setStatus('current')
bsStormControlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bsStormControlIfIndex.setStatus('current')
bsStormControlIfEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlIfEnabled.setStatus('current')
bsStormControlIfLowWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(200)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlIfLowWatermark.setStatus('current')
bsStormControlIfHighWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100000000)).clone(500)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlIfHighWatermark.setStatus('current')
bsStormControlIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 5), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(500, 30000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlIfPollInterval.setStatus('current')
bsStormControlIfTrapInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlIfTrapInterval.setStatus('current')
bsStormControlIfActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 42, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("drop", 2), ("shutdown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsStormControlIfActionType.setStatus('current')
bsStormControlBelowLowWatermark = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 42, 0, 1)).setObjects(("BAY-STACK-STORM-CONTROL-MIB", "bsStormControlTrafficType"), ("IF-MIB", "ifIndex"), ("BAY-STACK-STORM-CONTROL-MIB", "bsStormControlPollValue"), ("BAY-STACK-STORM-CONTROL-MIB", "bsStormControlLowWatermark"))
if mibBuilder.loadTexts: bsStormControlBelowLowWatermark.setStatus('current')
bsStormControlAboveHighWatermark = NotificationType((1, 3, 6, 1, 4, 1, 45, 5, 42, 0, 2)).setObjects(("BAY-STACK-STORM-CONTROL-MIB", "bsStormControlTrafficType"), ("IF-MIB", "ifIndex"), ("BAY-STACK-STORM-CONTROL-MIB", "bsStormControlPollValue"), ("BAY-STACK-STORM-CONTROL-MIB", "bsStormControlHighWatermark"))
if mibBuilder.loadTexts: bsStormControlAboveHighWatermark.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-STORM-CONTROL-MIB", PYSNMP_MODULE_ID=bayStackStormControlMib, bsStormControlPollInterval=bsStormControlPollInterval, bayStackStormControlMib=bayStackStormControlMib, bsStormControlTrapInterval=bsStormControlTrapInterval, bsStormControlIfIndex=bsStormControlIfIndex, bsStormControlObjects=bsStormControlObjects, bsStormControlEntry=bsStormControlEntry, bsStormControlPollValue=bsStormControlPollValue, bsStormControlIfHighWatermark=bsStormControlIfHighWatermark, bsStormControlIfTable=bsStormControlIfTable, bsStormControlIfLowWatermark=bsStormControlIfLowWatermark, bsStormControlBelowLowWatermark=bsStormControlBelowLowWatermark, bsStormControlScalars=bsStormControlScalars, bsStormControlNotifications=bsStormControlNotifications, bsStormControlHighWatermark=bsStormControlHighWatermark, bsStormControlLowWatermark=bsStormControlLowWatermark, bsStormControlIfTrapInterval=bsStormControlIfTrapInterval, bsStormControlIfEnabled=bsStormControlIfEnabled, bsStormControlAboveHighWatermark=bsStormControlAboveHighWatermark, bsStormControlIfActionType=bsStormControlIfActionType, bsStormControlTable=bsStormControlTable, bsStormControlTrafficType=bsStormControlTrafficType, bsStormControlEnabled=bsStormControlEnabled, bsStormControlIfEntry=bsStormControlIfEntry, bsStormControlIfPollInterval=bsStormControlIfPollInterval, bsStormControlActionType=bsStormControlActionType)
