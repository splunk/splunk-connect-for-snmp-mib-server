#
# PySNMP MIB module CPQAPPLIANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQAPPLIANCE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cpqHoTrapFlags, compaq = mibBuilder.importSymbols("CPQHOST-MIB", "cpqHoTrapFlags", "compaq")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
Counter64, MibIdentifier, IpAddress, NotificationType, enterprises, ObjectIdentity, NotificationType, ModuleIdentity, Bits, Integer32, Gauge32, Counter32, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "IpAddress", "NotificationType", "enterprises", "ObjectIdentity", "NotificationType", "ModuleIdentity", "Bits", "Integer32", "Gauge32", "Counter32", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cpqApplianceMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 21))
cpqApMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 21, 1))
cpqApComponent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 21, 2))
cpqApInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 21, 2, 1))
cpqApConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 21, 2, 2))
cpqApOsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 21, 2, 1, 4))
cpqApMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 232, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqApMibRevMajor.setStatus('mandatory')
cpqApMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 232, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqApMibRevMinor.setStatus('mandatory')
cpqApMibCondition = MibScalar((1, 3, 6, 1, 4, 1, 232, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqApMibCondition.setStatus('mandatory')
cpqApOsCommonPollFreq = MibScalar((1, 3, 6, 1, 4, 1, 232, 21, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpqApOsCommonPollFreq.setStatus('mandatory')
cpqApApplianceId = MibScalar((1, 3, 6, 1, 4, 1, 232, 21, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqApApplianceId.setStatus('mandatory')
cpqApApplianceDescription = MibScalar((1, 3, 6, 1, 4, 1, 232, 21, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpqApApplianceDescription.setStatus('mandatory')
mibBuilder.exportSymbols("CPQAPPLIANCE-MIB", cpqApComponent=cpqApComponent, cpqApMibRevMajor=cpqApMibRevMajor, cpqApConfig=cpqApConfig, cpqApMibRev=cpqApMibRev, cpqApOsCommon=cpqApOsCommon, cpqApplianceMgmt=cpqApplianceMgmt, cpqApMibCondition=cpqApMibCondition, cpqApMibRevMinor=cpqApMibRevMinor, cpqApApplianceId=cpqApApplianceId, cpqApOsCommonPollFreq=cpqApOsCommonPollFreq, cpqApInterface=cpqApInterface, cpqApApplianceDescription=cpqApApplianceDescription)
