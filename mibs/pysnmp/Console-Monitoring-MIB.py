#
# PySNMP MIB module Console-Monitoring-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Console-Monitoring-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:21:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter32, NotificationType, Integer32, ModuleIdentity, Gauge32, ObjectIdentity, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, IpAddress, Unsigned32, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "NotificationType", "Integer32", "ModuleIdentity", "Gauge32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "IpAddress", "Unsigned32", "Counter64", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniAppMon = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 23))
appConsMon = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 23, 4))
consMonGlobalData = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 1))
consMonBS2Group = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2))
consMonVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonVersion.setStatus('mandatory')
consMonMsgFilter = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consMonMsgFilter.setStatus('mandatory')
consMonNegMsgFilter = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonNegMsgFilter.setStatus('mandatory')
consMonCmdFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonCmdFreeIndex.setStatus('mandatory')
consMonCmdTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonCmdTabNum.setStatus('mandatory')
consMonCmdTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 3), )
if mibBuilder.loadTexts: consMonCmdTable.setStatus('mandatory')
consMonCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 3, 1), ).setIndexNames((0, "Console-Monitoring-MIB", "consMonCmdIndex"))
if mibBuilder.loadTexts: consMonCmdEntry.setStatus('mandatory')
consMonCmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonCmdIndex.setStatus('mandatory')
consMonCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consMonCmd.setStatus('mandatory')
consMonCmdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("executing", 2), ("ok", 3), ("error", 4), ("waiting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonCmdResult.setStatus('mandatory')
consMonCmdMainRetco = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonCmdMainRetco.setStatus('mandatory')
consMonOutTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 4), )
if mibBuilder.loadTexts: consMonOutTable.setStatus('mandatory')
consMonOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 4, 1), ).setIndexNames((0, "Console-Monitoring-MIB", "consMonOutCmdIndex"), (0, "Console-Monitoring-MIB", "consMonOutLineNo"))
if mibBuilder.loadTexts: consMonOutEntry.setStatus('mandatory')
consMonOutCmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonOutCmdIndex.setStatus('mandatory')
consMonOutLineNo = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonOutLineNo.setStatus('mandatory')
consMonOutContents = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: consMonOutContents.setStatus('mandatory')
consMonBS2Ans = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 23, 4, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consMonBS2Ans.setStatus('mandatory')
mibBuilder.exportSymbols("Console-Monitoring-MIB", consMonCmdTable=consMonCmdTable, consMonOutCmdIndex=consMonOutCmdIndex, consMonOutContents=consMonOutContents, consMonOutEntry=consMonOutEntry, appConsMon=appConsMon, consMonVersion=consMonVersion, consMonGlobalData=consMonGlobalData, consMonCmdFreeIndex=consMonCmdFreeIndex, sni=sni, consMonCmd=consMonCmd, consMonBS2Ans=consMonBS2Ans, consMonCmdEntry=consMonCmdEntry, consMonCmdResult=consMonCmdResult, consMonCmdIndex=consMonCmdIndex, consMonCmdTabNum=consMonCmdTabNum, consMonNegMsgFilter=consMonNegMsgFilter, consMonBS2Group=consMonBS2Group, sniAppMon=sniAppMon, consMonCmdMainRetco=consMonCmdMainRetco, consMonOutTable=consMonOutTable, consMonMsgFilter=consMonMsgFilter, consMonOutLineNo=consMonOutLineNo, sniProductMibs=sniProductMibs)
