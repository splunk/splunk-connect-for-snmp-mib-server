#
# PySNMP MIB module HUAWEI-BRAS-SRVCFG-EAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-SRVCFG-EAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
InterfaceIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifDescr")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIdOrNone, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone", "VlanId")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, IpAddress, Counter32, ObjectIdentity, Integer32, NotificationType, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, Unsigned32, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "Counter32", "ObjectIdentity", "Integer32", "NotificationType", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "Unsigned32", "TimeTicks", "Gauge32")
RowStatus, TextualConvention, MacAddress, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "MacAddress", "DisplayString", "TruthValue")
hwBRASSrvcfgEap = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4))
if mibBuilder.loadTexts: hwBRASSrvcfgEap.setLastUpdated('200912151800Z')
if mibBuilder.loadTexts: hwBRASSrvcfgEap.setOrganization('Huawei Technologies Co., Ltd.')
hwSrvcfgEapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1))
hwDot1xSystemConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1), )
if mibBuilder.loadTexts: hwDot1xSystemConfigTable.setStatus('current')
hwDot1xSystemConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTemplateIndex"))
if mibBuilder.loadTexts: hwDot1xSystemConfigEntry.setStatus('current')
hwDot1xTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xTemplateIndex.setStatus('current')
hwDot1xHandshakeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xHandshakeSwitch.setStatus('current')
hwDot1xHandshakeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xHandshakeCount.setStatus('current')
hwDot1xHandshakeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xHandshakeInterval.setStatus('current')
hwDot1xIfEAPEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xIfEAPEnd.setStatus('current')
hwDot1xEAPEndPapChap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("pap", 0), ("chap", 1))).clone('chap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xEAPEndPapChap.setStatus('current')
hwDot1xIfSendEAPSIMParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xIfSendEAPSIMParameter.setStatus('current')
hwDot1xRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xRowStatus.setStatus('current')
hwDot1xAuthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xAuthenticationTimeout.setStatus('current')
hwDot1xRequestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xRequestCount.setStatus('current')
hwDot1xRequestInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xRequestInterval.setStatus('current')
hwDot1xReauthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xReauthenticationTimeout.setStatus('current')
hwDot1xGlobal = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xGlobal.setStatus('current')
hwDot1xAuthenMethod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("chap", 1), ("pap", 2), ("eap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xAuthenMethod.setStatus('current')
hwDot1xDhcpTrigger = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xDhcpTrigger.setStatus('current')
hwDot1xHandshake = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xHandshake.setStatus('current')
hwDot1xQuietPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 6), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xQuietPeriod.setStatus('current')
hwDot1xRetry = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xRetry.setStatus('current')
hwDot1xTimerHandshakePeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xTimerHandshakePeriod.setStatus('current')
hwDot1xTimerQuietPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xTimerQuietPeriod.setStatus('current')
hwDot1xTimerServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xTimerServerTimeout.setStatus('current')
hwDot1xTimerClientTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xTimerClientTimeout.setStatus('current')
hwDot1xTimerTxPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xTimerTxPeriod.setStatus('current')
hwDot1xReauthenPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 7200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xReauthenPeriod.setStatus('current')
hwDot1xPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14), )
if mibBuilder.loadTexts: hwDot1xPortConfigTable.setStatus('current')
hwDot1xPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortIndex"))
if mibBuilder.loadTexts: hwDot1xPortConfigEntry.setStatus('current')
hwDot1xPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280)))
if mibBuilder.loadTexts: hwDot1xPortIndex.setStatus('current')
hwDot1xPortSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 2), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortSwitch.setStatus('current')
hwDot1xPortGuestVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 3), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortGuestVlan.setStatus('current')
hwDot1xPortMaxUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortMaxUser.setStatus('current')
hwDot1xPortControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("authorizedForce", 2), ("unauthorizedForce", 3))).clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortControl.setStatus('current')
hwDot1xPortMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("port", 2))).clone('mac')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortMethod.setStatus('current')
hwDot1xPortReauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 7), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortReauthen.setStatus('current')
hwDot1xMacByPass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 8), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xMacByPass.setStatus('current')
hwDot1xModemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xModemVersion.setStatus('current')
hwDot1xForceDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xForceDomain.setStatus('current')
hwDot1xAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xAuthStatus.setStatus('current')
hwDot1xPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 14, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDot1xPortRowStatus.setStatus('current')
hwDot1xQuietFailTimes = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDot1xQuietFailTimes.setStatus('current')
hwDot1xSessionDisplayByPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16), )
if mibBuilder.loadTexts: hwDot1xSessionDisplayByPortTable.setStatus('current')
hwDot1xSessionDisplayByPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xSessDispByPortIndex"), (0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xSessDispByPortUserIndex"))
if mibBuilder.loadTexts: hwDot1xSessionDisplayByPortEntry.setStatus('current')
hwDot1xSessDispByPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280)))
if mibBuilder.loadTexts: hwDot1xSessDispByPortIndex.setStatus('current')
hwDot1xSessDispByPortUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 49151)))
if mibBuilder.loadTexts: hwDot1xSessDispByPortUserIndex.setStatus('current')
hwDot1xSessDispByPortIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortIfName.setStatus('current')
hwDot1xSessDispByPortUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortUserMac.setStatus('current')
hwDot1xSessDispByPortUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortUserState.setStatus('current')
hwDot1xSessDispByPortUserVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortUserVlanId.setStatus('current')
hwDot1xSessDispByPortUserQinqId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortUserQinqId.setStatus('current')
hwDot1xSessDispByPortTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortTemplateIndex.setStatus('current')
hwDot1xSessDispByPortHandShakeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortHandShakeSwitch.setStatus('current')
hwDot1xSessDispByPortReauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 16, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByPortReauth.setStatus('current')
hwDot1xSessionDisplayBySlotTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17), )
if mibBuilder.loadTexts: hwDot1xSessionDisplayBySlotTable.setStatus('current')
hwDot1xSessionDisplayBySlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xSessDispBySlotIndex"), (0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xSessDispBySlotUserIndex"))
if mibBuilder.loadTexts: hwDot1xSessionDisplayBySlotEntry.setStatus('current')
hwDot1xSessDispBySlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280)))
if mibBuilder.loadTexts: hwDot1xSessDispBySlotIndex.setStatus('current')
hwDot1xSessDispBySlotUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 49151)))
if mibBuilder.loadTexts: hwDot1xSessDispBySlotUserIndex.setStatus('current')
hwDot1xSessDispBySlotIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotIfName.setStatus('current')
hwDot1xSessDispBySlotUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotUserMac.setStatus('current')
hwDot1xSessDispBySlotUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotUserState.setStatus('current')
hwDot1xSessDispBySlotUserVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotUserVlanId.setStatus('current')
hwDot1xSessDispBySlotUserQinqId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotUserQinqId.setStatus('current')
hwDot1xSessDispBySlotTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotTemplateIndex.setStatus('current')
hwDot1xSessDispBySlotHandShakeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotHandShakeSwitch.setStatus('current')
hwDot1xSessDispBySlotReauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 17, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispBySlotReauth.setStatus('current')
hwDot1xSessionDisplayByMacTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18), )
if mibBuilder.loadTexts: hwDot1xSessionDisplayByMacTable.setStatus('current')
hwDot1xSessionDisplayByMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xSessDispByMacUserMac"))
if mibBuilder.loadTexts: hwDot1xSessionDisplayByMacEntry.setStatus('current')
hwDot1xSessDispByMacUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 49151))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacUserIndex.setStatus('current')
hwDot1xSessDispByMacIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacIfName.setStatus('current')
hwDot1xSessDispByMacUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacUserMac.setStatus('current')
hwDot1xSessDispByMacUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacUserState.setStatus('current')
hwDot1xSessDispByMacUserVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacUserVlanId.setStatus('current')
hwDot1xSessDispByMacUserQinqId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacUserQinqId.setStatus('current')
hwDot1xSessDispByMacTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacTemplateIndex.setStatus('current')
hwDot1xSessDispByMacHandShakeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacHandShakeSwitch.setStatus('current')
hwDot1xSessDispByMacReauth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 18, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDot1xSessDispByMacReauth.setStatus('current')
hwPacketStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19), )
if mibBuilder.loadTexts: hwPacketStatisticsTable.setStatus('current')
hwPacketStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwSlotIndex"))
if mibBuilder.loadTexts: hwPacketStatisticsEntry.setStatus('current')
hwSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotIndex.setStatus('current')
hwEapReqID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapReqID.setStatus('current')
hwEapRespID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapRespID.setStatus('current')
hwEapReqChallenge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapReqChallenge.setStatus('current')
hwEapRespChallenge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapRespChallenge.setStatus('current')
hwEapSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapSuccess.setStatus('current')
hwEapFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapFailure.setStatus('current')
hwEapStart = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapStart.setStatus('current')
hwEapLogOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapLogOff.setStatus('current')
hwEapKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 1, 19, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEapKey.setStatus('current')
hwSrvcfgEapMibTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 2))
hwSrvcfgEapMaxUserAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 2, 1)).setObjects(("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hwSrvcfgEapMaxUserAlarm.setStatus('current')
hwSrvcfgEapMibUserLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3))
hwEapTrapOid = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 1))
hwEapUserPortMaxNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEapUserPortMaxNumThreshold.setStatus('current')
hwEapUserPortMaxNumThresholdResume = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEapUserPortMaxNumThresholdResume.setStatus('current')
hwEapUserSlot = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEapUserSlot.setStatus('current')
hwEapUserSlotMaxNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEapUserSlotMaxNumThreshold.setStatus('current')
hwEapUserTotalMaxNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 1, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwEapUserTotalMaxNumThreshold.setStatus('current')
hwEapTrapsDefine = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 2))
hwEapTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 2, 0))
hwEapUserPortMaxNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 2, 0, 1)).setObjects(("IF-MIB", "ifDescr"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwEapUserPortMaxNumThreshold"))
if mibBuilder.loadTexts: hwEapUserPortMaxNum.setStatus('current')
hwEapUserPortMaxNumResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 2, 0, 2)).setObjects(("IF-MIB", "ifDescr"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwEapUserPortMaxNumThresholdResume"))
if mibBuilder.loadTexts: hwEapUserPortMaxNumResume.setStatus('current')
hwEapUserSlotMaxNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 2, 0, 3)).setObjects(("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwEapUserSlot"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwEapUserSlotMaxNumThreshold"))
if mibBuilder.loadTexts: hwEapUserSlotMaxNum.setStatus('current')
hwEapUserTotalMaxNum = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 3, 2, 0, 4)).setObjects(("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwEapUserTotalMaxNumThreshold"))
if mibBuilder.loadTexts: hwEapUserTotalMaxNum.setStatus('current')
hwSrvcfgEapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4))
hwSrvcfgEapCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4, 1))
hwSrvcfgEapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4, 1, 1)).setObjects(("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xSystemConfigGroup"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSrvcfgEapCompliance = hwSrvcfgEapCompliance.setStatus('current')
hwDot1xSystemConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4, 2))
hwDot1xSystemConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4, 2, 1)).setObjects(("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTemplateIndex"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xHandshakeSwitch"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xHandshakeCount"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xHandshakeInterval"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xIfEAPEnd"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xEAPEndPapChap"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xIfSendEAPSIMParameter"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1xSystemConfigGroup = hwDot1xSystemConfigGroup.setStatus('current')
hwDot1xPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4, 2, 2)).setObjects(("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xGlobal"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xAuthenMethod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xDhcpTrigger"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xHandshake"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xQuietPeriod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xRetry"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTimerHandshakePeriod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTimerQuietPeriod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTimerServerTimeout"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTimerClientTimeout"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xTimerTxPeriod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xReauthenPeriod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortSwitch"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortGuestVlan"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortMaxUser"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortControl"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortMethod"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xPortReauthen"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xMacByPass"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xModemVersion"), ("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwDot1xQuietFailTimes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1xPortConfigGroup = hwDot1xPortConfigGroup.setStatus('current')
hwDot1xPortTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 4, 4, 2, 3)).setObjects(("HUAWEI-BRAS-SRVCFG-EAP-MIB", "hwSrvcfgEapMaxUserAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDot1xPortTrapGroup = hwDot1xPortTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-BRAS-SRVCFG-EAP-MIB", hwDot1xEAPEndPapChap=hwDot1xEAPEndPapChap, hwDot1xHandshakeInterval=hwDot1xHandshakeInterval, hwDot1xPortControl=hwDot1xPortControl, hwDot1xSessionDisplayByPortTable=hwDot1xSessionDisplayByPortTable, hwDot1xSessDispByPortReauth=hwDot1xSessDispByPortReauth, hwDot1xSessDispBySlotUserIndex=hwDot1xSessDispBySlotUserIndex, hwDot1xRowStatus=hwDot1xRowStatus, hwEapUserPortMaxNumResume=hwEapUserPortMaxNumResume, hwDot1xQuietFailTimes=hwDot1xQuietFailTimes, hwEapSuccess=hwEapSuccess, hwSrvcfgEapMibTraps=hwSrvcfgEapMibTraps, hwDot1xReauthenPeriod=hwDot1xReauthenPeriod, hwEapUserSlot=hwEapUserSlot, hwDot1xSessDispBySlotUserVlanId=hwDot1xSessDispBySlotUserVlanId, hwPacketStatisticsEntry=hwPacketStatisticsEntry, hwDot1xPortIndex=hwDot1xPortIndex, hwBRASSrvcfgEap=hwBRASSrvcfgEap, hwDot1xDhcpTrigger=hwDot1xDhcpTrigger, hwDot1xTimerTxPeriod=hwDot1xTimerTxPeriod, hwDot1xSessionDisplayByMacEntry=hwDot1xSessionDisplayByMacEntry, hwDot1xPortRowStatus=hwDot1xPortRowStatus, hwDot1xSessDispByPortUserVlanId=hwDot1xSessDispByPortUserVlanId, hwEapKey=hwEapKey, hwDot1xPortTrapGroup=hwDot1xPortTrapGroup, hwDot1xSessDispBySlotIndex=hwDot1xSessDispBySlotIndex, hwEapUserPortMaxNum=hwEapUserPortMaxNum, hwDot1xSessionDisplayByPortEntry=hwDot1xSessionDisplayByPortEntry, hwEapUserSlotMaxNumThreshold=hwEapUserSlotMaxNumThreshold, hwDot1xRetry=hwDot1xRetry, hwDot1xSystemConfigTable=hwDot1xSystemConfigTable, hwDot1xTimerHandshakePeriod=hwDot1xTimerHandshakePeriod, hwDot1xSessionDisplayByMacTable=hwDot1xSessionDisplayByMacTable, hwDot1xSessDispByPortIfName=hwDot1xSessDispByPortIfName, hwDot1xSessDispByPortUserState=hwDot1xSessDispByPortUserState, hwDot1xPortReauthen=hwDot1xPortReauthen, hwDot1xModemVersion=hwDot1xModemVersion, hwDot1xSessDispByPortUserMac=hwDot1xSessDispByPortUserMac, hwDot1xSessDispByPortUserQinqId=hwDot1xSessDispByPortUserQinqId, hwDot1xMacByPass=hwDot1xMacByPass, hwDot1xSessDispByPortTemplateIndex=hwDot1xSessDispByPortTemplateIndex, hwDot1xSessDispByMacTemplateIndex=hwDot1xSessDispByMacTemplateIndex, hwDot1xSessDispBySlotTemplateIndex=hwDot1xSessDispBySlotTemplateIndex, hwDot1xPortConfigTable=hwDot1xPortConfigTable, hwEapUserTotalMaxNum=hwEapUserTotalMaxNum, hwEapUserPortMaxNumThresholdResume=hwEapUserPortMaxNumThresholdResume, hwDot1xSessDispBySlotHandShakeSwitch=hwDot1xSessDispBySlotHandShakeSwitch, hwDot1xSessionDisplayBySlotTable=hwDot1xSessionDisplayBySlotTable, hwEapUserSlotMaxNum=hwEapUserSlotMaxNum, hwDot1xTimerClientTimeout=hwDot1xTimerClientTimeout, hwDot1xSessDispByMacUserVlanId=hwDot1xSessDispByMacUserVlanId, hwDot1xSessDispBySlotUserQinqId=hwDot1xSessDispBySlotUserQinqId, hwDot1xSessDispByMacIfName=hwDot1xSessDispByMacIfName, hwDot1xHandshakeCount=hwDot1xHandshakeCount, hwDot1xSessDispByMacUserMac=hwDot1xSessDispByMacUserMac, hwDot1xSessDispByPortUserIndex=hwDot1xSessDispByPortUserIndex, PYSNMP_MODULE_ID=hwBRASSrvcfgEap, hwDot1xSystemConfigGroup=hwDot1xSystemConfigGroup, hwEapRespChallenge=hwEapRespChallenge, hwDot1xSystemConfigGroups=hwDot1xSystemConfigGroups, hwDot1xIfSendEAPSIMParameter=hwDot1xIfSendEAPSIMParameter, hwDot1xReauthenticationTimeout=hwDot1xReauthenticationTimeout, hwDot1xSessDispBySlotIfName=hwDot1xSessDispBySlotIfName, hwDot1xPortGuestVlan=hwDot1xPortGuestVlan, hwEapTraps=hwEapTraps, hwDot1xPortMethod=hwDot1xPortMethod, hwDot1xGlobal=hwDot1xGlobal, hwDot1xSessDispByMacHandShakeSwitch=hwDot1xSessDispByMacHandShakeSwitch, hwDot1xPortConfigGroup=hwDot1xPortConfigGroup, hwDot1xSessDispByPortIndex=hwDot1xSessDispByPortIndex, hwSrvcfgEapCompliance=hwSrvcfgEapCompliance, hwDot1xSessDispByMacUserState=hwDot1xSessDispByMacUserState, hwEapUserTotalMaxNumThreshold=hwEapUserTotalMaxNumThreshold, hwDot1xTemplateIndex=hwDot1xTemplateIndex, hwSrvcfgEapMaxUserAlarm=hwSrvcfgEapMaxUserAlarm, hwSrvcfgEapMibObjects=hwSrvcfgEapMibObjects, hwEapStart=hwEapStart, hwDot1xPortSwitch=hwDot1xPortSwitch, hwDot1xQuietPeriod=hwDot1xQuietPeriod, hwDot1xSystemConfigEntry=hwDot1xSystemConfigEntry, hwEapTrapsDefine=hwEapTrapsDefine, hwDot1xSessDispBySlotUserMac=hwDot1xSessDispBySlotUserMac, hwEapReqID=hwEapReqID, hwDot1xTimerServerTimeout=hwDot1xTimerServerTimeout, hwDot1xHandshakeSwitch=hwDot1xHandshakeSwitch, hwDot1xHandshake=hwDot1xHandshake, hwDot1xSessDispByMacUserQinqId=hwDot1xSessDispByMacUserQinqId, hwDot1xTimerQuietPeriod=hwDot1xTimerQuietPeriod, hwDot1xForceDomain=hwDot1xForceDomain, hwDot1xRequestInterval=hwDot1xRequestInterval, hwEapLogOff=hwEapLogOff, hwDot1xSessDispBySlotReauth=hwDot1xSessDispBySlotReauth, hwDot1xIfEAPEnd=hwDot1xIfEAPEnd, hwDot1xSessDispByPortHandShakeSwitch=hwDot1xSessDispByPortHandShakeSwitch, hwDot1xAuthStatus=hwDot1xAuthStatus, hwDot1xSessDispByMacUserIndex=hwDot1xSessDispByMacUserIndex, hwEapRespID=hwEapRespID, hwDot1xPortMaxUser=hwDot1xPortMaxUser, hwEapFailure=hwEapFailure, hwSrvcfgEapCompliances=hwSrvcfgEapCompliances, hwDot1xRequestCount=hwDot1xRequestCount, hwSrvcfgEapMibUserLimitTraps=hwSrvcfgEapMibUserLimitTraps, hwSlotIndex=hwSlotIndex, hwDot1xSessDispBySlotUserState=hwDot1xSessDispBySlotUserState, hwEapUserPortMaxNumThreshold=hwEapUserPortMaxNumThreshold, hwEapTrapOid=hwEapTrapOid, hwDot1xAuthenticationTimeout=hwDot1xAuthenticationTimeout, hwPacketStatisticsTable=hwPacketStatisticsTable, hwDot1xSessDispByMacReauth=hwDot1xSessDispByMacReauth, hwDot1xSessionDisplayBySlotEntry=hwDot1xSessionDisplayBySlotEntry, hwSrvcfgEapConformance=hwSrvcfgEapConformance, hwDot1xPortConfigEntry=hwDot1xPortConfigEntry, hwDot1xAuthenMethod=hwDot1xAuthenMethod, hwEapReqChallenge=hwEapReqChallenge)
