#
# PySNMP MIB module RADLAN-CLI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-CLI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:37:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, Counter64, TimeTicks, MibIdentifier, Bits, ModuleIdentity, IpAddress, Unsigned32, Gauge32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "Counter64", "TimeTicks", "MibIdentifier", "Bits", "ModuleIdentity", "IpAddress", "Unsigned32", "Gauge32", "NotificationType", "ObjectIdentity")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
rlCli = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 52))
rlCli.setRevisions(('2010-05-25 00:00', '2007-01-02 00:00',))
if mibBuilder.loadTexts: rlCli.setLastUpdated('201005250000Z')
if mibBuilder.loadTexts: rlCli.setOrganization('Radlan - a MARVELL company. Marvell Semiconductor, Inc.')
rlCliMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCliMibVersion.setStatus('current')
rlCliPassword = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCliPassword.setStatus('current')
rlCliTimer = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCliTimer.setStatus('current')
rlCliFileEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCliFileEnable.setStatus('current')
rlCliFileEnableAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCliFileEnableAfterReset.setStatus('current')
rlCLIremoteCLIsupport = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 52, 6))
rlCLIremoteCLIcommand = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("takeRemoteCLI", 1), ("releaseRemoteCLI", 2), ("applySentCLI", 3), ("deleteCommandsCLI", 4), ("setEchoModeCLI", 5), ("unsetEchoModeCLI", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCLIremoteCLIcommand.setStatus('current')
rlCLIremoteCLIexecutionState = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("free", 1), ("notActive", 2), ("inProcess", 3), ("outputAvailable", 4), ("waitingForOutputRetrieval", 5), ("done", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCLIremoteCLIexecutionState.setStatus('current')
rlCLIremoteCLIexecutionCommandIndex = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 6, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCLIremoteCLIexecutionCommandIndex.setStatus('current')
rlCLIremoteCLImode = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deleteCLIOutputOnGet", 1), ("keepCLIOutputOnGet", 2))).clone('deleteCLIOutputOnGet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCLIremoteCLImode.setStatus('current')
rlCLIremoteCLIcommandsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 52, 6, 5), )
if mibBuilder.loadTexts: rlCLIremoteCLIcommandsTable.setStatus('current')
rlCLIremoteCLIcommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 52, 6, 5, 1), ).setIndexNames((0, "RADLAN-CLI-MIB", "rlCLIremoteCLIcommandIndex"), (0, "RADLAN-CLI-MIB", "rlCLIremoteCLIcommandPartNumber"))
if mibBuilder.loadTexts: rlCLIremoteCLIcommandsEntry.setStatus('current')
rlCLIremoteCLIcommandIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rlCLIremoteCLIcommandIndex.setStatus('current')
rlCLIremoteCLIcommandPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rlCLIremoteCLIcommandPartNumber.setStatus('current')
rlCLIremoteCLIcommandPart = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 5, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlCLIremoteCLIcommandPart.setStatus('current')
rlCLIremoteCLIcommandStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rlCLIremoteCLIcommandStatus.setStatus('current')
rlCLIremoteCLIactivationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCLIremoteCLIactivationStatus.setStatus('current')
rlCLIremoteCLIoutputsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 52, 6, 6), )
if mibBuilder.loadTexts: rlCLIremoteCLIoutputsTable.setStatus('current')
rlCLIremoteCLIoutputsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 52, 6, 6, 1), ).setIndexNames((0, "RADLAN-CLI-MIB", "rlCLIremoteCLIoutputRowIndex"), (0, "RADLAN-CLI-MIB", "rlCLIremoteCLIoutputRowPartNumber"))
if mibBuilder.loadTexts: rlCLIremoteCLIoutputsEntry.setStatus('current')
rlCLIremoteCLIoutputRowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rlCLIremoteCLIoutputRowIndex.setStatus('current')
rlCLIremoteCLIoutputRowPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rlCLIremoteCLIoutputRowPartNumber.setStatus('current')
rlCLIremoteCLIoutputRowPart = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCLIremoteCLIoutputRowPart.setStatus('current')
rlCLIremoteCLIoutputRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 6, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCLIremoteCLIoutputRowStatus.setStatus('current')
rlCLIremoteCLIoutputCommandNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 52, 6, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCLIremoteCLIoutputCommandNumber.setStatus('current')
rlCLIremoteCLIinstance = MibScalar((1, 3, 6, 1, 4, 1, 89, 52, 6, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlCLIremoteCLIinstance.setStatus('current')
mibBuilder.exportSymbols("RADLAN-CLI-MIB", rlCLIremoteCLIcommandPart=rlCLIremoteCLIcommandPart, rlCLIremoteCLIexecutionState=rlCLIremoteCLIexecutionState, rlCLIremoteCLIcommandsTable=rlCLIremoteCLIcommandsTable, rlCLIremoteCLIoutputRowIndex=rlCLIremoteCLIoutputRowIndex, rlCLIremoteCLIoutputsTable=rlCLIremoteCLIoutputsTable, rlCLIremoteCLIcommandIndex=rlCLIremoteCLIcommandIndex, rlCLIremoteCLIoutputCommandNumber=rlCLIremoteCLIoutputCommandNumber, rlCLIremoteCLIcommandsEntry=rlCLIremoteCLIcommandsEntry, rlCliFileEnable=rlCliFileEnable, rlCLIremoteCLIexecutionCommandIndex=rlCLIremoteCLIexecutionCommandIndex, rlCLIremoteCLIoutputRowStatus=rlCLIremoteCLIoutputRowStatus, rlCliTimer=rlCliTimer, rlCLIremoteCLIcommandPartNumber=rlCLIremoteCLIcommandPartNumber, rlCLIremoteCLIoutputRowPartNumber=rlCLIremoteCLIoutputRowPartNumber, rlCLIremoteCLIoutputRowPart=rlCLIremoteCLIoutputRowPart, rlCLIremoteCLIactivationStatus=rlCLIremoteCLIactivationStatus, rlCliFileEnableAfterReset=rlCliFileEnableAfterReset, rlCliMibVersion=rlCliMibVersion, rlCliPassword=rlCliPassword, rlCLIremoteCLIcommandStatus=rlCLIremoteCLIcommandStatus, rlCLIremoteCLIinstance=rlCLIremoteCLIinstance, rlCLIremoteCLImode=rlCLIremoteCLImode, rlCLIremoteCLIsupport=rlCLIremoteCLIsupport, rlCli=rlCli, PYSNMP_MODULE_ID=rlCli, rlCLIremoteCLIoutputsEntry=rlCLIremoteCLIoutputsEntry, rlCLIremoteCLIcommand=rlCLIremoteCLIcommand)
