#
# PySNMP MIB module CAMBIUM-PMP80211-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CAMBIUM-PMP80211-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Integer32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, Unsigned32, ObjectIdentity, IpAddress, ModuleIdentity, iso, Gauge32, enterprises, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "Unsigned32", "ObjectIdentity", "IpAddress", "ModuleIdentity", "iso", "Gauge32", "enterprises", "Counter32", "MibIdentifier")
MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString")
pmpMibTree = ModuleIdentity((1, 3, 6, 1, 4, 1, 17713, 21))
pmpMibTree.setRevisions(('2013-04-26 12:38',))
if mibBuilder.loadTexts: pmpMibTree.setLastUpdated('201304261238Z')
if mibBuilder.loadTexts: pmpMibTree.setOrganization('Cambium Networks Inc.')
cambium = MibIdentifier((1, 3, 6, 1, 4, 1, 17713))
cambiumPmp80211SystemStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1))
cambiumGeneralStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1))
cambiumRFStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2))
cambiumGPSStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3))
cambiumLinkStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4))
cambiumAcsStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 5))
cambiumMcastStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6))
cambiumDhcpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7))
cambiumPmp80211SystemMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 2))
cambiumPerformanceMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1))
cambiumRealTimeStatsMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 2, 2))
cambiumAdvancedPerformanceMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 2, 3))
cambiumpmp80211SystemConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3))
cambiumSystemLog = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1))
cambiumDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2))
cambiumSSHServer = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 3))
network = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4))
networkLan = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2))
networkWan = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3))
snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5))
cambiumSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6))
systemConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1))
systemNtpServer = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 2))
cambiumWebServer = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 7))
wireless = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8))
wirelessDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 1))
wirelessInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2))
wirelessPrefList = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3))
wirelessMIRList = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4))
wirelessRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5))
wirelessRadiusServerList = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6))
wirelessRadiusCertificateList = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7))
wirelessRadiusCertificateListRow1 = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 1))
wirelessRadiusCertificateListRow2 = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 2))
wirelessRadiusCertificateListRow3 = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 3))
wirelessRadiusCertificateSet = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 8))
wirelessRadiusExtraCertificateSet = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 9))
l2Firewall = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9))
l3Firewall = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10))
confQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11))
dmz = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 12))
portForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13))
vlans = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14))
dlkm = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 15))
routing = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16))
cambiumDeviceAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 20))
upnpd = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 21))
mgmtVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 4))
dataVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 5))
mcastVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 15))
networkBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7))
mgmtIF = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20))
networkAliases = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27))
cambiumpmp80211SystemActions = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 4))
cambiumpmp80211SystemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 0))
cambiumpmp80211Tools = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6))
cambiumLinkTest = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1))
caminfo = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 2))
cambiumToolBar = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3))
cambiumCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4))
cambiumIDM = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5))
cambiumACSCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 6))
cambiumToolBarOpts = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 1))
cambiumToolBarStates = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 2))
multicast = MibIdentifier((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 10))
cambiumCurrentSWInfo = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumCurrentSWInfo.setStatus('current')
cambiumHWInfo = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ValueRangeConstraint(6, 6), ValueRangeConstraint(7, 7), ValueRangeConstraint(8, 8), ValueRangeConstraint(9, 9), ValueRangeConstraint(10, 10), ValueRangeConstraint(11, 11), ValueRangeConstraint(12, 12), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumHWInfo.setStatus('current')
cambiumDateTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDateTime.setStatus('current')
cambiumSystemUptime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSystemUptime.setStatus('current')
cambiumWirelessMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumWirelessMACAddress.setStatus('current')
cambiumDFSStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDFSStatus.setStatus('current')
cambiumEffectiveSyncSource = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveSyncSource.setStatus('current')
cambiumEffectiveCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveCountryCode.setStatus('current')
cambiumEffectiveAntennaGain = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveAntennaGain.setStatus('current')
cambiumEffectiveTDDRatio = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveTDDRatio.setStatus('current')
cambiumEffectiveSSID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveSSID.setStatus('current')
cambiumEffectiveAuthenticationType = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveAuthenticationType.setStatus('current')
cambiumEffectiveDeviceName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceName.setStatus('current')
cambiumUbootVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumUbootVersion.setStatus('current')
cambiumLANMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLANMACAddress.setStatus('current')
cambiumCurrentuImageIVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumCurrentuImageIVersion.setStatus('current')
cambiumCurrentuImageVersion = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumCurrentuImageVersion.setStatus('current')
cambiumDeviceLatitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDeviceLatitude.setStatus('current')
cambiumDeviceLongitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDeviceLongitude.setStatus('current')
sysRebootCounter = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysRebootCounter.setStatus('current')
cambiumDFSStatusStr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDFSStatusStr.setStatus('current')
cambiumDriverType = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDriverType.setStatus('current')
cambiumESN = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumESN.setStatus('current')
cambiumEPMPMSN = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEPMPMSN.setStatus('current')
cambiumFactoryReset = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumFactoryReset.setStatus('current')
cambiumSubModeType = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSubModeType.setStatus('current')
cambiumSTAConnectedRFFrequency = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2407, 5970))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAConnectedRFFrequency.setStatus('current')
cambiumSTAConnectedRFBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAConnectedRFBandwidth.setStatus('current')
cambiumSTADLRSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADLRSSI.setStatus('current')
cambiumSTADLCINR = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADLCINR.setStatus('obsolete')
cambiumSTAConductedTXPower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-25, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAConductedTXPower.setStatus('current')
cambiumSTAUplinkMCSMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 7), ValueRangeConstraint(9, 15), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAUplinkMCSMode.setStatus('current')
cambiumSTADownlinkMCSMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 7), ValueRangeConstraint(9, 15), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADownlinkMCSMode.setStatus('current')
cambiumSTAConnectedAP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAConnectedAP.setStatus('current')
cambiumSTAPowerControlMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAPowerControlMode.setStatus('current')
cambiumAPNumberOfConnectedSTA = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAPNumberOfConnectedSTA.setStatus('current')
cambiumAPConnectedSTAListTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11), )
if mibBuilder.loadTexts: cambiumAPConnectedSTAListTable.setStatus('obsolete')
cambiumAPConnectedSTAListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumAPNumberOfConnectedSTA"))
if mibBuilder.loadTexts: cambiumAPConnectedSTAListEntry.setStatus('obsolete')
connectedSTAListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListMAC.setStatus('obsolete')
connectedSTAListAID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListAID.setStatus('obsolete')
connectedSTAListChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListChannel.setStatus('obsolete')
connectedSTAListULRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListULRSSI.setStatus('obsolete')
connectedSTAListDLRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListDLRSSI.setStatus('obsolete')
connectedSTAListULCINR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListULCINR.setStatus('obsolete')
connectedSTAListDLCINR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListDLCINR.setStatus('obsolete')
connectedSTAListULMCS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListULMCS.setStatus('obsolete')
connectedSTAListDLMCS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListDLMCS.setStatus('obsolete')
connectedSTAListIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListIP.setStatus('obsolete')
connectedSTAListMirSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListMirSrc.setStatus('obsolete')
connectedSTAListMirULRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListMirULRate.setStatus('obsolete')
connectedSTAListMirDLRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 11, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAListMirDLRate.setStatus('obsolete')
cambiumSTADistanceKm = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADistanceKm.setStatus('current')
cambiumSTADistanceMil = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADistanceMil.setStatus('current')
cambiumPropagationDelay = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 5000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumPropagationDelay.setStatus('current')
cambiumSTAConnectedAPListTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15), )
if mibBuilder.loadTexts: cambiumSTAConnectedAPListTable.setStatus('obsolete')
cambiumSTAConnectedAPListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "connectedAPListSSID"))
if mibBuilder.loadTexts: cambiumSTAConnectedAPListEntry.setStatus('obsolete')
connectedAPListSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListSSID.setStatus('obsolete')
connectedAPListBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListBSSID.setStatus('obsolete')
connectedAPListChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListChannel.setStatus('obsolete')
connectedAPListFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListFrequency.setStatus('obsolete')
connectedAPListBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListBandwidth.setStatus('obsolete')
connectedAPListRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListRate.setStatus('obsolete')
connectedAPListCINR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListCINR.setStatus('obsolete')
connectedAPListRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListRSSI.setStatus('obsolete')
connectedAPListNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListNoise.setStatus('obsolete')
connectedAPListINT = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListINT.setStatus('obsolete')
connectedAPListNEState = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListNEState.setStatus('obsolete')
connectedAPListNEAge = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListNEAge.setStatus('obsolete')
connectedAPListScanAge = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListScanAge.setStatus('obsolete')
connectedAPListRemainingSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListRemainingSTA.setStatus('obsolete')
connectedAPListCAPS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListCAPS.setStatus('obsolete')
connectedAPAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPAuthMethod.setStatus('obsolete')
connectedAPListMeetNEAttemptCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 15, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPListMeetNEAttemptCriteria.setStatus('obsolete')
wirelessInterfaceConnectionState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessInterfaceConnectionState.setStatus('current')
cambiumSTAPriority = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAPriority.setStatus('current')
cambiumSTADLSNR = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADLSNR.setStatus('current')
cambiumConnectedAPMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 19), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumConnectedAPMACAddress.setStatus('current')
cambiumSTAConnectedAPTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20), )
if mibBuilder.loadTexts: cambiumSTAConnectedAPTable.setStatus('current')
cambiumSTAConnectedAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "connectedAPListSSID"))
if mibBuilder.loadTexts: cambiumSTAConnectedAPEntry.setStatus('current')
connectedAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPSSID.setStatus('current')
connectedAPBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPBSSID.setStatus('current')
connectedAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPChannel.setStatus('current')
connectedAPFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPFrequency.setStatus('current')
connectedAPBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPBandwidth.setStatus('current')
connectedAPRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPRate.setStatus('current')
connectedAPSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPSNR.setStatus('current')
connectedAPRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPRSSI.setStatus('current')
connectedAPNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPNoise.setStatus('current')
connectedAPINT = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPINT.setStatus('current')
connectedAPNEState = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPNEState.setStatus('current')
connectedAPNEAge = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPNEAge.setStatus('current')
connectedAPScanAge = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPScanAge.setStatus('current')
connectedAPRemainingSTA = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPRemainingSTA.setStatus('current')
connectedAPCAPS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPCAPS.setStatus('current')
connectedAPAuthenticationMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPAuthenticationMethod.setStatus('current')
connectedAPMeetNEAttemptCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 20, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedAPMeetNEAttemptCriteria.setStatus('current')
staTxCapacity = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTxCapacity.setStatus('current')
staTxQuality = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTxQuality.setStatus('current')
acsState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsState.setStatus('current')
cambiumEffectiveMcastGroupLimit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveMcastGroupLimit.setStatus('current')
cambiumSubscribedMcastGroupNum = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSubscribedMcastGroupNum.setStatus('current')
cambiumAPMcastTotalGroupCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAPMcastTotalGroupCount.setStatus('current')
cambiumMcastHandlingStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumMcastHandlingStatus.setStatus('current')
cambiumSubscribedMcastGroupTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 10), )
if mibBuilder.loadTexts: cambiumSubscribedMcastGroupTable.setStatus('current')
cambiumSubscribedMcastGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 10, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumSubscribedMcastGroupNum"))
if mibBuilder.loadTexts: cambiumSubscribedMcastGroupEntry.setStatus('current')
cambiumRegisteredMcastGroupIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 6, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumRegisteredMcastGroupIP.setStatus('current')
dhcpServerStartIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerStartIP.setStatus('current')
dhcpServerEndIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerEndIP.setStatus('current')
dhcpServerGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerGatewayIP.setStatus('current')
dhcpServerDNSIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpServerDNSIP.setStatus('current')
dhcpServerStaticHostTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 5), )
if mibBuilder.loadTexts: dhcpServerStaticHostTable.setStatus('current')
dhcpServerStaticHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 5, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "dhcpStaticIndex"))
if mibBuilder.loadTexts: dhcpServerStaticHostEntry.setStatus('current')
dhcpStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpStaticIndex.setStatus('current')
dhcpStaticMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 5, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(17, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpStaticMAC.setStatus('current')
dhcpStaticIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpStaticIP.setStatus('current')
dhcpServerLeaseTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 6), )
if mibBuilder.loadTexts: dhcpServerLeaseTable.setStatus('current')
dhcpServerLeaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 6, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "dhcpLeaseIndex"))
if mibBuilder.loadTexts: dhcpServerLeaseEntry.setStatus('current')
dhcpLeaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpLeaseIndex.setStatus('current')
dhcpLeaseMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 6, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(17, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpLeaseMAC.setStatus('current')
dhcpLeaseIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpLeaseIP.setStatus('current')
dhcpLeaseDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 7, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpLeaseDevName.setStatus('current')
cambiumAPConnectedSTATable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30), )
if mibBuilder.loadTexts: cambiumAPConnectedSTATable.setStatus('current')
cambiumAPConnectedSTAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumAPNumberOfConnectedSTA"))
if mibBuilder.loadTexts: cambiumAPConnectedSTAEntry.setStatus('current')
connectedSTAMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMAC.setStatus('current')
connectedSTAAID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAAID.setStatus('current')
connectedSTAChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAChannel.setStatus('current')
connectedSTAULRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAULRSSI.setStatus('current')
connectedSTADLRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTADLRSSI.setStatus('current')
connectedSTAULSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAULSNR.setStatus('current')
connectedSTADLSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTADLSNR.setStatus('current')
connectedSTAULMCS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAULMCS.setStatus('current')
connectedSTADLMCS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTADLMCS.setStatus('current')
connectedSTAIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAIP.setStatus('current')
connectedSTAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAPriority.setStatus('current')
connectedSTAMirSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMirSrc.setStatus('current')
connectedSTAMirULRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMirULRate.setStatus('current')
connectedSTAMirDLRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMirDLRate.setStatus('current')
connectedSTAClickTHWAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAClickTHWAddr.setStatus('current')
connectedSTAClickTWebPort = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAClickTWebPort.setStatus('current')
connectedSTAClickTWebSec = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAClickTWebSec.setStatus('current')
connectedSTAClickTHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAClickTHostName.setStatus('current')
connectedSTAMcastTotalGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMcastTotalGroups.setStatus('current')
connectedSTAMcastGRP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMcastGRP0.setStatus('current')
connectedSTAMcastGRP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMcastGRP1.setStatus('current')
connectedSTAMcastGRP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 24), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMcastGRP2.setStatus('current')
connectedSTAMcastGRP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMcastGRP3.setStatus('current')
connectedSTAMcastGRP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 26), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTAMcastGRP4.setStatus('current')
connectedSTASessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTASessionTime.setStatus('current')
connectedSTADLRateMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTADLRateMbps.setStatus('current')
cambiumAPBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40), )
if mibBuilder.loadTexts: cambiumAPBridgeTable.setStatus('current')
cambiumAPBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "camAPBrTabDevMACAddress"))
if mibBuilder.loadTexts: cambiumAPBridgeEntry.setStatus('current')
camAPBrTabBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camAPBrTabBridgeName.setStatus('current')
camAPBrTabDevMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camAPBrTabDevMACAddress.setStatus('current')
camAPBrTabDevPort = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camAPBrTabDevPort.setStatus('current')
camAPBrTabSTAMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camAPBrTabSTAMACAddress.setStatus('current')
camAPBrTabAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 40, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camAPBrTabAgingTime.setStatus('current')
cambiumSTABridgeTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 50), )
if mibBuilder.loadTexts: cambiumSTABridgeTable.setStatus('current')
cambiumSTABridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 50, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "camSTABrTabDevMACAddress"))
if mibBuilder.loadTexts: cambiumSTABridgeEntry.setStatus('current')
camSTABrTabBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 50, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camSTABrTabBridgeName.setStatus('current')
camSTABrTabDevMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 50, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camSTABrTabDevMACAddress.setStatus('current')
camSTABrTabDevPort = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 50, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camSTABrTabDevPort.setStatus('current')
camSTABrTabAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 50, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camSTABrTabAgingTime.setStatus('current')
cambiumSTAMAC = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(17, 17)).setFixedLength(17)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTAMAC.setStatus('current')
cambiumSTADropReason = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 61), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumSTADropReason.setStatus('current')
connectedSTATXCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTATXCapacity.setStatus('current')
connectedSTATXQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 2, 30, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectedSTATXQuality.setStatus('current')
cambiumGPSCurrentSyncState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSCurrentSyncState.setStatus('current')
cambiumGPSLatitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSLatitude.setStatus('current')
cambiumGPSLongitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSLongitude.setStatus('current')
cambiumGPSHeight = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSHeight.setStatus('current')
cambiumGPSTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSTime.setStatus('current')
cambiumGPSNumTrackedSat = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSNumTrackedSat.setStatus('current')
cambiumGPSNumVisibleSat = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSNumVisibleSat.setStatus('current')
cambiumGPSSatSNRTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 8), )
if mibBuilder.loadTexts: cambiumGPSSatSNRTable.setStatus('current')
cambiumGPSSatSNREntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 8, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "gpsSatelliteId"))
if mibBuilder.loadTexts: cambiumGPSSatSNREntry.setStatus('current')
gpsSatelliteId = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatelliteId.setStatus('current')
gpsSnrValue = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSnrValue.setStatus('current')
gpsSatelliteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatelliteStatus.setStatus('current')
cambiumGPSDeviceInfo = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSDeviceInfo.setStatus('current')
cambiumGPSFirmwareUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumGPSFirmwareUpdateStatus.setStatus('current')
cambiumLANStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLANStatus.setStatus('current')
cambiumWLANStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumWLANStatus.setStatus('current')
cambiumEffectiveDeviceIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceIPAddress.setStatus('current')
cambiumEffectiveSTANetworkMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveSTANetworkMode.setStatus('current')
cambiumEffectiveDeviceLANNetMask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceLANNetMask.setStatus('current')
cambiumEffectiveDeviceDefaultGateWay = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceDefaultGateWay.setStatus('current')
cambiumEffectiveDeviceDNSIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceDNSIPAddress.setStatus('current')
cambiumEffectiveWANIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveWANIPAddress.setStatus('current')
cambiumEffectiveDeviceWANNetMask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceWANNetMask.setStatus('current')
cambiumEffectiveDeviceWANPPPoEStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveDeviceWANPPPoEStatus.setStatus('current')
cambiumLANModeStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLANModeStatus.setStatus('current')
cambiumLANSpeedStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ValueRangeConstraint(1000, 1000), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLANSpeedStatus.setStatus('current')
cambiumDHCPOption82Status = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumDHCPOption82Status.setStatus('current')
cambiumLAN2ModeStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLAN2ModeStatus.setStatus('current')
cambiumLAN2SpeedStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ValueRangeConstraint(1000, 1000), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLAN2SpeedStatus.setStatus('current')
cambiumLAN2Status = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLAN2Status.setStatus('current')
cambiumARPTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 20), )
if mibBuilder.loadTexts: cambiumARPTable.setStatus('current')
cambiumManagementIFStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumManagementIFStatus.setStatus('current')
cambiumManagementIFIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 26), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumManagementIFIPAddress.setStatus('current')
cambiumManagementIFNetMask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumManagementIFNetMask.setStatus('current')
cambiumManagementIFGateway = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 28), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumManagementIFGateway.setStatus('current')
cambiumEffectiveNetworkLanMTU = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 1700), )).clone(1500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveNetworkLanMTU.setStatus('current')
cambiumEffectiveNetworkBridgeMTU = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 1700), )).clone(1500)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEffectiveNetworkBridgeMTU.setStatus('current')
cambiumStaticRoutesTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31), )
if mibBuilder.loadTexts: cambiumStaticRoutesTable.setStatus('current')
cambiumIPAliasTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 32), )
if mibBuilder.loadTexts: cambiumIPAliasTable.setStatus('current')
cambiumCnsServConsStat = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumCnsServConsStat.setStatus('current')
cambiumCnsServAccountID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumCnsServAccountID.setStatus('current')
cambiumAPCnsMGMTState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAPCnsMGMTState.setStatus('current')
cambiumIPAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 32, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumIPAliasTableIndex"))
if mibBuilder.loadTexts: cambiumIPAliasEntry.setStatus('current')
cambiumIPAliasTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIPAliasTableIndex.setStatus('current')
cambiumIPAliasIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 32, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIPAliasIP.setStatus('current')
cambiumIPAliasNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 32, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIPAliasNetmask.setStatus('current')
cambiumARPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 20, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumARPIndex"))
if mibBuilder.loadTexts: cambiumARPEntry.setStatus('current')
cambiumARPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumARPIndex.setStatus('current')
cambiumARPMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 20, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(17, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumARPMAC.setStatus('current')
cambiumARPIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumARPIP.setStatus('current')
cambiumARPInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 20, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumARPInterface.setStatus('current')
cambiumStaticRoutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumStaticRoutesIndex"))
if mibBuilder.loadTexts: cambiumStaticRoutesEntry.setStatus('current')
cambiumStaticRoutesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumStaticRoutesIndex.setStatus('current')
cambiumStaticRoutesDestIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumStaticRoutesDestIP.setStatus('current')
cambiumStaticRoutesGW = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumStaticRoutesGW.setStatus('current')
cambiumStaticRoutesNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumStaticRoutesNetmask.setStatus('current')
cambiumStaticRoutesInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 1, 4, 31, 1, 5), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumStaticRoutesInterface.setStatus('current')
cambiumStatsForceUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStatsForceUpdate.setStatus('current')
cambiumEthRXBytes = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthRXBytes.setStatus('current')
cambiumEthRXPackets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthRXPackets.setStatus('current')
cambiumEthRXErrors = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthRXErrors.setStatus('current')
cambiumEthRXDrops = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthRXDrops.setStatus('current')
cambiumEthRXMulticast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthRXMulticast.setStatus('current')
cambiumEthRXBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthRXBroadcast.setStatus('current')
cambiumEthTXBytes = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthTXBytes.setStatus('current')
cambiumEthTXPackets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthTXPackets.setStatus('current')
cambiumEthTXErrors = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthTXErrors.setStatus('current')
cambiumEthTXDrops = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthTXDrops.setStatus('current')
cambiumEthTXMulticast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthTXMulticast.setStatus('current')
cambiumEthTXBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumEthTXBroadcast.setStatus('current')
cambiumAthRXBytes = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthRXBytes.setStatus('obsolete')
cambiumAthRXPackets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthRXPackets.setStatus('obsolete')
cambiumAthRXErrors = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthRXErrors.setStatus('obsolete')
cambiumAthRXDrops = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthRXDrops.setStatus('obsolete')
cambiumAthRXMulticast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthRXMulticast.setStatus('obsolete')
cambiumAthRXBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthRXBroadcast.setStatus('obsolete')
cambiumAthTXBytes = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthTXBytes.setStatus('obsolete')
cambiumAthTXPackets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthTXPackets.setStatus('obsolete')
cambiumAthTXErrors = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthTXErrors.setStatus('obsolete')
cambiumAthTXDrops = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthTXDrops.setStatus('obsolete')
cambiumAthTXMulticast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthTXMulticast.setStatus('obsolete')
cambiumAthTXBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumAthTXBroadcast.setStatus('obsolete')
sysNetworkEntryAttempt = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysNetworkEntryAttempt.setStatus('current')
sysNetworkEntrySuccess = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysNetworkEntrySuccess.setStatus('current')
sysNetworkEntryAuthenticationFailure = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysNetworkEntryAuthenticationFailure.setStatus('current')
sysDFSDetectedCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDFSDetectedCount.setStatus('current')
ulWLanKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanKbitCount.setStatus('current')
dlWLanKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanKbitCount.setStatus('current')
ulWLanTotalPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanTotalPacketCount.setStatus('current')
sysRebootCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysRebootCount.setStatus('obsolete')
dlWLanTotalPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanTotalPacketCount.setStatus('current')
ulWLanMultiBroadcastKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMultiBroadcastKbitCount.setStatus('current')
dlWLanMultiBroadcastKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMultiBroadcastKbitCount.setStatus('current')
wLanSessionDroppedCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wLanSessionDroppedCount.setStatus('current')
cambiumTDDStatsPerSTATable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46), )
if mibBuilder.loadTexts: cambiumTDDStatsPerSTATable.setStatus('current')
cambiumTDDStatsPerSTAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumTDDStatsPerSTAIndex"))
if mibBuilder.loadTexts: cambiumTDDStatsPerSTAEntry.setStatus('current')
cambiumTDDStatsPerSTAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumTDDStatsPerSTAIndex.setStatus('current')
cambiumTDDStatsListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumTDDStatsListMAC.setStatus('current')
ulWLanPerUserKbitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanPerUserKbitCount.setStatus('current')
dlWLanPerUserKbitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanPerUserKbitCount.setStatus('current')
ulWLanPerUserTotalPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanPerUserTotalPacketCount.setStatus('current')
dlWLanPerUserTotalPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanPerUserTotalPacketCount.setStatus('current')
ulWLanPerUserErrorDroppedPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanPerUserErrorDroppedPacketCount.setStatus('current')
dlWLanPerUserErrorDroppedPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanPerUserErrorDroppedPacketCount.setStatus('current')
dlWLanPerUserCapacityDroppedPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanPerUserCapacityDroppedPacketCount.setStatus('current')
dlWLanPerUserRetransmitPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanPerUserRetransmitPacketCount.setStatus('current')
dlWLanPerUserTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 46, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanPerUserTxPower.setStatus('current')
ulWLanErrorDroppedPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanErrorDroppedPacketCount.setStatus('current')
dlWLanErrorDroppedPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanErrorDroppedPacketCount.setStatus('current')
ulWLanCapacityDroppedPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanCapacityDroppedPacketCount.setStatus('current')
dlWLanCapacityDroppedPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanCapacityDroppedPacketCount.setStatus('current')
ulWLanTotalAvailableFrameTimePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanTotalAvailableFrameTimePerSecond.setStatus('current')
dlWLanTotalAvailableFrameTimePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanTotalAvailableFrameTimePerSecond.setStatus('current')
ulWLanTotalUsedFrameTimePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanTotalUsedFrameTimePerSecond.setStatus('current')
dlWLanTotalUsedFrameTimePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanTotalUsedFrameTimePerSecond.setStatus('current')
ulWLanTotalOverheadFrameTimePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanTotalOverheadFrameTimePerSecond.setStatus('current')
dlWLanTotalOverheadFrameTimePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanTotalOverheadFrameTimePerSecond.setStatus('current')
cambiumMCSTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 57), )
if mibBuilder.loadTexts: cambiumMCSTable.setStatus('obsolete')
cambiumMCSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 57, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumMCSIndex"))
if mibBuilder.loadTexts: cambiumMCSEntry.setStatus('obsolete')
cambiumMCSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 57, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumMCSIndex.setStatus('obsolete')
cambiumMCSNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 57, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumMCSNumber.setStatus('obsolete')
ulWLanMCSUsedFrameTimePerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 57, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCSUsedFrameTimePerSecond.setStatus('obsolete')
dlWLanMCSUsedFrameTimePerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 57, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCSUsedFrameTimePerSecond.setStatus('obsolete')
ulWLanRetransPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanRetransPacketCount.setStatus('current')
dlWLanRetransPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanRetransPacketCount.setStatus('current')
ulWLanBroadcastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanBroadcastPacketCount.setStatus('current')
dlWLanBroadcastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanBroadcastPacketCount.setStatus('current')
ulWLanMulticastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMulticastPacketCount.setStatus('current')
dlWLanMulticastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMulticastPacketCount.setStatus('current')
sysCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCPUUsage.setStatus('current')
rxEtherLanKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanKbitCount.setStatus('current')
rxEtherLanTotalPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanTotalPacketCount.setStatus('current')
rxEtherLanErrorPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanErrorPacketCount.setStatus('current')
rxEtherLanDroppedPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanDroppedPacketCount.setStatus('current')
rxEtherLanMulticastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanMulticastPacketCount.setStatus('current')
rxEtherLanBroadcastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanBroadcastPacketCount.setStatus('current')
rxEtherLanMultiBroadcastKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxEtherLanMultiBroadcastKbitCount.setStatus('current')
txEtherLanKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanKbitCount.setStatus('current')
txEtherLanTotalPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanTotalPacketCount.setStatus('current')
txEtherLanErrorPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanErrorPacketCount.setStatus('current')
txEtherLanDroppedPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanDroppedPacketCount.setStatus('current')
txEtherLanMulticastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanMulticastPacketCount.setStatus('current')
txEtherLanBroadcastPacketCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanBroadcastPacketCount.setStatus('current')
txEtherLanMultiBroadcastKbitCount = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txEtherLanMultiBroadcastKbitCount.setStatus('current')
cambiumStatsResetTimer = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 79), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumStatsResetTimer.setStatus('current')
ulWLanMCS00Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS00Packets.setStatus('current')
ulWLanMCS01Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS01Packets.setStatus('current')
ulWLanMCS02Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS02Packets.setStatus('current')
ulWLanMCS03Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS03Packets.setStatus('current')
ulWLanMCS04Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS04Packets.setStatus('current')
ulWLanMCS05Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS05Packets.setStatus('current')
ulWLanMCS06Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS06Packets.setStatus('current')
ulWLanMCS07Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS07Packets.setStatus('current')
ulWLanMCS08Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS08Packets.setStatus('current')
ulWLanMCS09Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS09Packets.setStatus('current')
ulWLanMCS10Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS10Packets.setStatus('current')
ulWLanMCS11Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS11Packets.setStatus('current')
ulWLanMCS12Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS12Packets.setStatus('current')
ulWLanMCS13Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS13Packets.setStatus('current')
ulWLanMCS14Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS14Packets.setStatus('current')
ulWLanMCS15Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulWLanMCS15Packets.setStatus('current')
dlWLanMCS00Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS00Packets.setStatus('current')
dlWLanMCS01Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS01Packets.setStatus('current')
dlWLanMCS02Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS02Packets.setStatus('current')
dlWLanMCS03Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS03Packets.setStatus('current')
dlWLanMCS04Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS04Packets.setStatus('current')
dlWLanMCS05Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS05Packets.setStatus('current')
dlWLanMCS06Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS06Packets.setStatus('current')
dlWLanMCS07Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS07Packets.setStatus('current')
dlWLanMCS08Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS08Packets.setStatus('current')
dlWLanMCS09Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS09Packets.setStatus('current')
dlWLanMCS10Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS10Packets.setStatus('current')
dlWLanMCS11Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS11Packets.setStatus('current')
dlWLanMCS12Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS12Packets.setStatus('current')
dlWLanMCS13Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS13Packets.setStatus('current')
dlWLanMCS14Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS14Packets.setStatus('current')
dlWLanMCS15Packets = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 2, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlWLanMCS15Packets.setStatus('current')
syslogServerIPFirst = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServerIPFirst.setStatus('current')
syslogServerIPSecond = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServerIPSecond.setStatus('current')
syslogServerIPThird = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServerIPThird.setStatus('current')
syslogServerIPFourth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServerIPFourth.setStatus('current')
syslogServerLogToWeb = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServerLogToWeb.setStatus('current')
syslogServerLogMask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServerLogMask.setStatus('current')
dhcpLanEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanEnable.setStatus('current')
dhcpLanStart = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanStart.setStatus('current')
dhcpLanLimit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483647, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanLimit.setStatus('current')
dhcpLanLeasetime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24)).clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanLeasetime.setStatus('current')
dhcpLanHostTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 5), )
if mibBuilder.loadTexts: dhcpLanHostTable.setStatus('current')
dhcpLanHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 5, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "dhcpLanHostIndex"))
if mibBuilder.loadTexts: dhcpLanHostEntry.setStatus('current')
dhcpLanHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanHostIndex.setStatus('current')
dhcpLanHostIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanHostIP.setStatus('current')
dhcpLanHostMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(17, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanHostMAC.setStatus('current')
dhcpLanHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 5, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 128), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpLanHostName.setStatus('current')
dhcpOption82 = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpOption82.setStatus('current')
cambiumSSHServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumSSHServerEnable.setStatus('current')
networkMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkMode.setStatus('current')
networkSTP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkSTP.setStatus('current')
networkLanIPAddressMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanIPAddressMode.setStatus('current')
networkLanIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanIPAddr.setStatus('current')
networkLanNetmask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanNetmask.setStatus('current')
networkLanGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanGatewayIP.setStatus('current')
networkLanDNSIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanDNSIPAddr.setStatus('obsolete')
networkLanMTU = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 1700), )).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanMTU.setStatus('current')
networkLanDNSIPAddrPrimary = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanDNSIPAddrPrimary.setStatus('current')
networkLanDNSIPAddrSecondary = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanDNSIPAddrSecondary.setStatus('current')
networkLanAutoNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanAutoNegotiation.setStatus('current')
networkLanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), ValueRangeConstraint(1000, 1000), )).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanSpeed.setStatus('current')
networkLanDuplex = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanDuplex.setStatus('current')
networkBroadcastStormEnabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBroadcastStormEnabled.setStatus('current')
networkBroadcastStormRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBroadcastStormRate.setStatus('current')
networkLan2Enabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLan2Enabled.setStatus('current')
networkLan2AutoNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLan2AutoNegotiation.setStatus('current')
networkLan2Speed = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(100, 100), )).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLan2Speed.setStatus('current')
networkLan2Duplex = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLan2Duplex.setStatus('current')
networkLan2PoEEnabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLan2PoEEnabled.setStatus('current')
networkLanEnabled = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanEnabled.setStatus('current')
networkWanIPAddressMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanIPAddressMode.setStatus('current')
networkWanIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanIPAddr.setStatus('current')
networkWanNetmask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanNetmask.setStatus('current')
networkWanGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanGatewayIP.setStatus('current')
networkWanDNSIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanDNSIPAddr.setStatus('obsolete')
networkWanMTU = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 1700), )).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanMTU.setStatus('current')
networkWanDNSIPAddrPrimary = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanDNSIPAddrPrimary.setStatus('current')
networkWanDNSIPAddrSecondary = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanDNSIPAddrSecondary.setStatus('current')
networkWanPPPoE = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoE.setStatus('current')
networkWanPPPoEUsername = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEUsername.setStatus('current')
networkWanPPPoEPassword = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEPassword.setStatus('current')
networkWanPPPoEAC = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEAC.setStatus('current')
networkWanPPPoEService = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEService.setStatus('current')
networkWanPPPoEAuth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEAuth.setStatus('current')
networkWanPPPoEMTU = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 1492), )).clone(1492)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEMTU.setStatus('current')
networkWanPPPoEKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 180), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEKeepAlive.setStatus('current')
networkWanPPPoEMSSClamping = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkWanPPPoEMSSClamping.setStatus('current')
networkBridgeIPAddressMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeIPAddressMode.setStatus('current')
networkBridgeIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeIPAddr.setStatus('current')
networkBridgeNetmask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeNetmask.setStatus('current')
networkBridgeGatewayIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeGatewayIP.setStatus('current')
networkBridgeDNSIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeDNSIPAddr.setStatus('obsolete')
networkBridgeMTU = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(576, 1700), )).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeMTU.setStatus('current')
networkBridgeDNSIPAddrPrimary = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeDNSIPAddrPrimary.setStatus('current')
networkBridgeDNSIPAddrSecondary = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkBridgeDNSIPAddrSecondary.setStatus('current')
networkPortSecurity = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkPortSecurity.setStatus('current')
networkPortSecurityMax = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkPortSecurityMax.setStatus('current')
networkPortSecurityAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkPortSecurityAgingTime.setStatus('current')
mcastGroupLimit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 5), )).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcastGroupLimit.setStatus('current')
mgmtIFEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFEnable.setStatus('current')
mgmtIFVLAN = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFVLAN.setStatus('current')
mgmtIFVID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFVID.setStatus('current')
mgmtIFVP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFVP.setStatus('current')
mgmtIFIPAddressMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFIPAddressMode.setStatus('current')
mgmtIFIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFIPAddr.setStatus('current')
mgmtIFNetmask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFNetmask.setStatus('current')
mgmtIFGateway = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 20, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtIFGateway.setStatus('current')
cambiumIPAliasCnfTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 1), )
if mibBuilder.loadTexts: cambiumIPAliasCnfTable.setStatus('current')
cambiumIPAliasCnfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 1, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumIPAliasesIndex"))
if mibBuilder.loadTexts: cambiumIPAliasCnfEntry.setStatus('current')
cambiumIPAliasesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIPAliasesIndex.setStatus('current')
cambiumIPAliasesIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIPAliasesIpAddr.setStatus('current')
cambiumIPAliasesNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIPAliasesNetmask.setStatus('current')
cambiumIPAliasesInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIPAliasesInfo.setStatus('current')
cambiumIPAliasesEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 27, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIPAliasesEnable.setStatus('current')
networkLanDefaultIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkLanDefaultIP.setStatus('current')
networkRelaydEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkRelaydEnable.setStatus('current')
networkUPNP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkUPNP.setStatus('current')
networkNATPMP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkNATPMP.setStatus('current')
snmpReadOnlyCommunity = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 1), DisplayString().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpReadOnlyCommunity.setStatus('current')
snmpReadWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 2), DisplayString().clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpReadWriteCommunity.setStatus('current')
snmpSystemName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 3), DisplayString().clone('CambiumNetworks')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpSystemName.setStatus('current')
snmpSystemDescription = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpSystemDescription.setStatus('current')
snmpTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapEnable.setStatus('current')
snmpTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapCommunity.setStatus('current')
snmpTrapTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 7), )
if mibBuilder.loadTexts: snmpTrapTable.setStatus('current')
snmpTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 7, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "snmpTrapEntryIndex"))
if mibBuilder.loadTexts: snmpTrapEntry.setStatus('current')
snmpTrapEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapEntryIndex.setStatus('current')
snmpTrapEntryIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 7, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapEntryIP.setStatus('current')
snmpTrapEntryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(162)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrapEntryPort.setStatus('current')
snmpDomainAccessEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpDomainAccessEnable.setStatus('current')
snmpDomainAccessIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 9), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpDomainAccessIP.setStatus('current')
snmpDomainAccessIPMask = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 5, 10), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 15), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpDomainAccessIPMask.setStatus('current')
systemConfigTimezone = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 1), DisplayString().clone('GMT')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemConfigTimezone.setStatus('current')
systemConfigDeviceName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 128), )).clone('Cambium-STA')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemConfigDeviceName.setStatus('current')
systemConfigETSILicense = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('ETSIkey')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemConfigETSILicense.setStatus('current')
systemConfigSWLockBit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigSWLockBit.setStatus('current')
systemConfigHWLockBit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigHWLockBit.setStatus('current')
systemDeviceLocLatitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemDeviceLocLatitude.setStatus('current')
systemDeviceLocLongitude = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemDeviceLocLongitude.setStatus('current')
systemDeviceLocHeight = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemDeviceLocHeight.setStatus('current')
systemConfigisGPSkeyOK = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigisGPSkeyOK.setStatus('obsolete')
systemConfigGPSLockBit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigGPSLockBit.setStatus('obsolete')
systemConfigSMLockBit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigSMLockBit.setStatus('current')
systemConfigSMLimit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigSMLimit.setStatus('current')
powerSequenceFactoryDefault = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: powerSequenceFactoryDefault.setStatus('current')
systemConfigLockedCC = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 16), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigLockedCC.setStatus('current')
systemConfigMinAntGain = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemConfigMinAntGain.setStatus('current')
systemNtpServerIPMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemNtpServerIPMode.setStatus('current')
systemNtpServerPrimaryIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemNtpServerPrimaryIP.setStatus('current')
systemNtpServerSecondaryIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 6, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemNtpServerSecondaryIP.setStatus('current')
webService = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webService.setStatus('current')
httpPort = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpPort.setStatus('current')
httpsPort = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(443)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: httpsPort.setStatus('current')
wirelessDeviceCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 1, 1), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 2), )).clone('NS')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessDeviceCountryCode.setStatus('current')
wirelessType = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessType.setStatus('obsolete')
wirelessDefaultCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 2), )).clone('OT')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessDefaultCountryCode.setStatus('current')
wirelessInterfaceMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceMode.setStatus('current')
wirelessInterfaceSSID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('Cambium-AP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceSSID.setStatus('current')
wirelessInterfaceEncryption = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceEncryption.setStatus('current')
wirelessInterfaceEncryptionKey = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 63), )).clone('Cam39-Tai!wdmv')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceEncryptionKey.setStatus('current')
wirelessInterfaceHTMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceHTMode.setStatus('current')
wirelessInterfaceTXPower = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-24, 30)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceTXPower.setStatus('current')
wirelessInterfaceTDDAntennaGain = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceTDDAntennaGain.setStatus('current')
wirelessInterfaceTDDRatio = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceTDDRatio.setStatus('current')
wirelessInterfaceTPCTRL = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-80, -40)).clone(-60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceTPCTRL.setStatus('current')
wirelessInterfaceTPCMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceTPCMode.setStatus('obsolete')
wirelessInterfacePTPMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfacePTPMode.setStatus('current')
wirelessInterfacePTPMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 13), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfacePTPMACAddress.setStatus('current')
wirelessInterfaceSyncSource = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), )).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceSyncSource.setStatus('current')
wirelessInterfaceSyncHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 864000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceSyncHoldTime.setStatus('current')
wirelessInterfaceScanFrequencyListTwenty = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 16), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1064), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceScanFrequencyListTwenty.setStatus('current')
wirelessInterfaceScanFrequencyListForty = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 17), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1064), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceScanFrequencyListForty.setStatus('current')
centerFrequency = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2407, 5970), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: centerFrequency.setStatus('current')
dfsAlternative1CenterFrequency = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2407, 5970), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dfsAlternative1CenterFrequency.setStatus('current')
dfsAlternative2CenterFrequency = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2407, 5970), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dfsAlternative2CenterFrequency.setStatus('current')
wirelessMaximumCellSize = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMaximumCellSize.setStatus('current')
wirelessCellSizeUnit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessCellSizeUnit.setStatus('current')
wirelessMaximumSTA = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 120), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMaximumSTA.setStatus('current')
wirelessRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusTimeout.setStatus('current')
wirelessRadiusRetry = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusRetry.setStatus('current')
wirelessRadiusGUIUserAuth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusGUIUserAuth.setStatus('current')
wirelessRadiusCurrentGUIUserAuth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusCurrentGUIUserAuth.setStatus('current')
wirelessRadiusSeverInfo = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusSeverInfo.setStatus('current')
wirelessRadiusIdentityStr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)).clone('anonymous')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusIdentityStr.setStatus('current')
wirelessRadiusIdentityRealm = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('cambiumnetworks.com')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusIdentityRealm.setStatus('current')
wirelessRadiusUsername = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)).clone('cambium-station')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUsername.setStatus('current')
wirelessRadiusPassword = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 5, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128)).clone('cambium')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusPassword.setStatus('current')
wirelessRadiusServerTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6, 1), )
if mibBuilder.loadTexts: wirelessRadiusServerTable.setStatus('current')
wirelessRadiusServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6, 1, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "wirelessRadiusServerIndex"))
if mibBuilder.loadTexts: wirelessRadiusServerEntry.setStatus('current')
wirelessRadiusServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusServerIndex.setStatus('current')
wirelessRadiusServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusServerIP.setStatus('current')
wirelessRadiusServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusServerPort.setStatus('current')
wirelessRadiusServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 6, 1, 1, 4), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 128), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusServerSecret.setStatus('current')
wirelessRadiusDefaultCertificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 8, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusDefaultCertificate.setStatus('current')
wirelessRadiusUser1Certificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 8, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 8192), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUser1Certificate.setStatus('current')
wirelessRadiusUser2Certificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 8, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 8192), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUser2Certificate.setStatus('current')
wirelessRadiusUseDefaultCertificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUseDefaultCertificate.setStatus('current')
wirelessRadiusPMP320Certificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 9, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusPMP320Certificate.setStatus('current')
wirelessRadiusUsePMP320Certificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUsePMP320Certificate.setStatus('current')
wirelessRadiusPMP450Certificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 9, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusPMP450Certificate.setStatus('current')
wirelessRadiusUsePMP450Certificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUsePMP450Certificate.setStatus('current')
wirelessRadiusUseDefCertificate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUseDefCertificate.setStatus('obsolete')
wirelessRadiusUser1CertificateName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 2, 1), DisplayString().clone('cert2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUser1CertificateName.setStatus('obsolete')
wirelessRadiusUser2CertificateName = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 3, 1), DisplayString().clone('cert3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRadiusUser2CertificateName.setStatus('obsolete')
wirelessRadiusDefCertificateView = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusDefCertificateView.setStatus('obsolete')
wirelessRadiusUser1CertificateView = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusUser1CertificateView.setStatus('obsolete')
wirelessRadiusUser2CertificateView = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 7, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wirelessRadiusUser2CertificateView.setStatus('obsolete')
dfsAlternative1Bandwidth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dfsAlternative1Bandwidth.setStatus('current')
dfsAlternative2Bandwidth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dfsAlternative2Bandwidth.setStatus('current')
wirelessAcceptableAPRSSIThreshold = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, -20)).clone(-90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessAcceptableAPRSSIThreshold.setStatus('current')
wirelessAcceptableAPCINRThreshold = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-5, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessAcceptableAPCINRThreshold.setStatus('obsolete')
wirelessInterfaceUnblockUSfreqs = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceUnblockUSfreqs.setStatus('obsolete')
wirelessMIREnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMIREnable.setStatus('current')
wirelessMIRSTAProfileNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMIRSTAProfileNumber.setStatus('current')
wirelessMIRAPDefaultProfileNumber = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMIRAPDefaultProfileNumber.setStatus('current')
wirelessMIRProfileTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1), )
if mibBuilder.loadTexts: wirelessMIRProfileTable.setStatus('current')
wirelessMIRProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "wirelessMIRProfileIndex"))
if mibBuilder.loadTexts: wirelessMIRProfileEntry.setStatus('current')
wirelessMIRProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMIRProfileIndex.setStatus('current')
wirelessMIRProfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMIRProfileNumber.setStatus('current')
wirelessMIRProfileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 128), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMIRProfileDescription.setStatus('current')
wirelessDLMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessDLMIR.setStatus('current')
wirelessULMIR = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessULMIR.setStatus('current')
wirelessInterfaceScanFrequencyBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceScanFrequencyBandwidth.setStatus('current')
wirelessInterfaceGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceGuardInterval.setStatus('current')
wirelessInterfaceiFreqReuseMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceiFreqReuseMode.setStatus('current')
wirelessSTAPriority = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSTAPriority.setStatus('current')
wirelessSmoothingBit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSmoothingBit.setStatus('obsolete')
wirelessSecurityMethod = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSecurityMethod.setStatus('current')
wirelessAcceptableAPSNRThreshold = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-5, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessAcceptableAPSNRThreshold.setStatus('current')
wirelessMgmtPacketRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMgmtPacketRate.setStatus('current')
wirelessStaIsolate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessStaIsolate.setStatus('current')
wirelessCcaEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessCcaEnable.setStatus('current')
wirelessInterfaceScanFrequencyListTen = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 42), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1064), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceScanFrequencyListTen.setStatus('current')
wirelessInterfaceScanFrequencyListFive = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 43), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1064), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceScanFrequencyListFive.setStatus('current')
wirelessMulticastEnhanceMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMulticastEnhanceMode.setStatus('current')
wirelessTXPowerManualLimit = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessTXPowerManualLimit.setStatus('current')
wirelessRateMaxMCS = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessRateMaxMCS.setStatus('current')
wirelessSMWifiDistance = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessSMWifiDistance.setStatus('current')
wirelessInterfaceProtocolMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceProtocolMode.setStatus('current')
forceMcastBcast4Addr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forceMcastBcast4Addr.setStatus('current')
wirelessInterfaceRateMinMCS = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceRateMinMCS.setStatus('current')
wirelessInterfaceRateMaxMCS = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceRateMaxMCS.setStatus('current')
wirelessMulticastIgmpFastLeave = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMulticastIgmpFastLeave.setStatus('current')
wirelessInterfaceTDDFrameSize = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2500, 2500), ValueRangeConstraint(5000, 5000), )).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceTDDFrameSize.setStatus('current')
wirelessInterfaceColocState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceColocState.setStatus('current')
wirelessInterfaceColocSystemSyncSrc = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessInterfaceColocSystemSyncSrc.setStatus('current')
wirelessAPWifiWLANmode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessAPWifiWLANmode.setStatus('current')
apWiFiDLCTSMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWiFiDLCTSMode.setStatus('current')
apWiFiULCTSRTSMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWiFiULCTSRTSMode.setStatus('current')
apWiFiRTSThreshold = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 2, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2346)).clone(2346)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWiFiRTSThreshold.setStatus('current')
l2FirewallEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEnable.setStatus('current')
l2FirewallTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2), )
if mibBuilder.loadTexts: l2FirewallTable.setStatus('current')
l2FirewallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "l2FirewallEntryIndex"))
if mibBuilder.loadTexts: l2FirewallEntry.setStatus('current')
l2FirewallEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryIndex.setStatus('current')
l2FirewallEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 128), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryName.setStatus('current')
l2FirewallEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryAction.setStatus('current')
l2FirewallEntryInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryInterface.setStatus('current')
l2FirewallEntryLog = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryLog.setStatus('current')
l2FirewallEntryEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryEtherType.setStatus('current')
l2FirewallEntryVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryVlanID.setStatus('current')
l2FirewallEntrySrcMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 8), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntrySrcMAC.setStatus('current')
l2FirewallEntrySrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 9), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntrySrcMask.setStatus('current')
l2FirewallEntryDstMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 10), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryDstMAC.setStatus('current')
l2FirewallEntryDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 2, 1, 11), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(11, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2FirewallEntryDstMask.setStatus('current')
l2WanRemoteAccess = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2WanRemoteAccess.setStatus('current')
l2SnmpLanRemoteAccess = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2SnmpLanRemoteAccess.setStatus('current')
l2DHCPServersBelowSTA = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2DHCPServersBelowSTA.setStatus('current')
l2LanRemoteAccess = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2LanRemoteAccess.setStatus('current')
l3FirewallEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEnable.setStatus('current')
l3FirewallTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2), )
if mibBuilder.loadTexts: l3FirewallTable.setStatus('current')
l3FirewallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "l3FirewallEntryIndex"))
if mibBuilder.loadTexts: l3FirewallEntry.setStatus('current')
l3FirewallEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryIndex.setStatus('current')
l3FirewallEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 128), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryName.setStatus('current')
l3FirewallEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryAction.setStatus('current')
l3FirewallEntryInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryInterface.setStatus('current')
l3FirewallEntryLog = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryLog.setStatus('current')
l3FirewallEntryProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryProtocol.setStatus('current')
l3FirewallEntryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryPort.setStatus('current')
l3FirewallEntrySrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntrySrcIP.setStatus('current')
l3FirewallEntrySrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntrySrcMask.setStatus('current')
l3FirewallEntryDstIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryDstIP.setStatus('current')
l3FirewallEntryDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryDstMask.setStatus('current')
l3FirewallEntryDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryDSCP.setStatus('current')
l3FirewallEntryToS = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 10, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: l3FirewallEntryToS.setStatus('current')
dmzEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmzEnable.setStatus('current')
dmzIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 12, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dmzIPAddress.setStatus('current')
voipEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: voipEnable.setStatus('current')
qosEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosEnable.setStatus('current')
classificationListTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3), )
if mibBuilder.loadTexts: classificationListTable.setStatus('current')
mcPriority = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcPriority.setStatus('current')
bcPriority = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcPriority.setStatus('current')
classificationListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "classificationRuleIndex"))
if mibBuilder.loadTexts: classificationListEntry.setStatus('current')
classificationRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleIndex.setStatus('current')
classificationRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 9), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleType.setStatus('current')
classificationRuleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleValue.setStatus('current')
classificationRuleIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleIP.setStatus('current')
classificationRuleMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 5), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(17, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleMAC.setStatus('current')
classificationRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 6), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(7, 17), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleMask.setStatus('current')
classificationRuleDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleDirection.setStatus('current')
classificationRuleQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 11, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: classificationRuleQueue.setStatus('current')
portForwardingEntryEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portForwardingEntryEnable.setStatus('current')
portForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2), )
if mibBuilder.loadTexts: portForwardingTable.setStatus('current')
portForwardingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "portForwardingTableEntryIndex"))
if mibBuilder.loadTexts: portForwardingEntry.setStatus('current')
portForwardingTableEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portForwardingTableEntryIndex.setStatus('current')
portForwardingTableEntryProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portForwardingTableEntryProtocol.setStatus('current')
portForwardingTableEntryWLANPortBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portForwardingTableEntryWLANPortBegin.setStatus('current')
portForwardingTableEntryWLANPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portForwardingTableEntryWLANPortEnd.setStatus('current')
portForwardingTableEntryLANIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 13, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portForwardingTableEntryLANIP.setStatus('current')
staticRoutesEnableMain = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staticRoutesEnableMain.setStatus('current')
cambiumStaticRoutesCnfTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2), )
if mibBuilder.loadTexts: cambiumStaticRoutesCnfTable.setStatus('current')
cambiumDeviceAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumDeviceAgentEnable.setStatus('current')
cambiumDeviceAgentCNSURL = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumDeviceAgentCNSURL.setStatus('current')
cambiumCNSDeviceAgentID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 20, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumCNSDeviceAgentID.setStatus('current')
cambiumCNSDeviceAgentPassword = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 20, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumCNSDeviceAgentPassword.setStatus('current')
cambiumStaticRoutesCnfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumStaticRoutesCnfIndex"))
if mibBuilder.loadTexts: cambiumStaticRoutesCnfEntry.setStatus('current')
cambiumStaticRoutesCnfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStaticRoutesCnfIndex.setStatus('current')
cambiumStaticRoutesCnfDestIP = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStaticRoutesCnfDestIP.setStatus('current')
cambiumStaticRoutesCnfGW = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStaticRoutesCnfGW.setStatus('current')
cambiumStaticRoutesCnfNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStaticRoutesCnfNetmask.setStatus('current')
cambiumStaticRoutesCnfEnbl = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStaticRoutesCnfEnbl.setStatus('current')
cambiumStaticRoutesCnfInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 16, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumStaticRoutesCnfInfo.setStatus('current')
mgmtVLANEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtVLANEnable.setStatus('current')
mgmtVLANVID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtVLANVID.setStatus('current')
mgmtVLANVP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgmtVLANVP.setStatus('current')
dataVLANEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataVLANEnable.setStatus('current')
dataVLANVID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataVLANVID.setStatus('current')
dataVLANVP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dataVLANVP.setStatus('current')
mcastVLANEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcastVLANEnable.setStatus('current')
mcastVLANVID = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcastVLANVID.setStatus('current')
mcastVLANVP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 4, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcastVLANVP.setStatus('current')
membershipVLANTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 3), )
if mibBuilder.loadTexts: membershipVLANTable.setStatus('current')
membershipVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 3, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "membershipVLANTableEntryIndex"))
if mibBuilder.loadTexts: membershipVLANEntry.setStatus('current')
membershipVLANTableEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: membershipVLANTableEntryIndex.setStatus('current')
membershipVLANTableEntryVIDBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: membershipVLANTableEntryVIDBegin.setStatus('current')
membershipVLANTableEntryVIDEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: membershipVLANTableEntryVIDEnd.setStatus('current')
mappingVLANTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 5), )
if mibBuilder.loadTexts: mappingVLANTable.setStatus('current')
mappingVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 5, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "mappingVLANTableEntryIndex"))
if mibBuilder.loadTexts: mappingVLANEntry.setStatus('current')
mappingVLANTableEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mappingVLANTableEntryIndex.setStatus('current')
mappingVLANTableEntryCVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mappingVLANTableEntryCVLAN.setStatus('current')
mappingVLANTableEntrySVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 14, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mappingVLANTableEntrySVLAN.setStatus('current')
dlkmNATSIPHelpers = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 3, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dlkmNATSIPHelpers.setStatus('current')
prefferedAPTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3, 1), )
if mibBuilder.loadTexts: prefferedAPTable.setStatus('current')
prefferedAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3, 1, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "prefferedListTableEntryIndex"))
if mibBuilder.loadTexts: prefferedAPEntry.setStatus('current')
prefferedListTableEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prefferedListTableEntryIndex.setStatus('current')
prefferedListTableEntrySSID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prefferedListTableEntrySSID.setStatus('current')
prefferedListTableEntryKEY = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 63), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prefferedListTableEntryKEY.setStatus('current')
prefferedListTableSecurityMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 3, 8, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prefferedListTableSecurityMethod.setStatus('current')
cambiumpmp80211DeviceReboot = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211DeviceReboot.setStatus('current')
cambiumpmp80211ConfigurationReset = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211ConfigurationReset.setStatus('current')
cambiumpmp80211ConfigurationSave = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211ConfigurationSave.setStatus('current')
cambiumpmp80211ConfigurationApply = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211ConfigurationApply.setStatus('current')
cambiumpmp80211ConfigurationDiscard = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211ConfigurationDiscard.setStatus('current')
cambiumpmp80211ConfigurationState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumpmp80211ConfigurationState.setStatus('current')
cambiumpmp80211SoftwareUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211SoftwareUpdate.setStatus('current')
cambiumpmp80211SoftwareUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumpmp80211SoftwareUpdateStatus.setStatus('current')
cambiumpmp80211STAListUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211STAListUpdate.setStatus('current')
cambiumpmp80211STAListUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211STAListUpdateStatus.setStatus('current')
cambiumpmp80211APListUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211APListUpdate.setStatus('current')
cambiumpmp80211APListUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211APListUpdateStatus.setStatus('current')
cambiumpmp80211SoftwareUpdateError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumpmp80211SoftwareUpdateError.setStatus('current')
cambiumpmp80211StatsPerSTAListUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211StatsPerSTAListUpdateStatus.setStatus('current')
cambiumpmp80211StatsPerSTAListUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211StatsPerSTAListUpdate.setStatus('current')
cambiumpmp80211STADisconnect = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211STADisconnect.setStatus('current')
cambiumpmp80211GPSAutopopulate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211GPSAutopopulate.setStatus('current')
cambiumpmp80211SoftwareUpdateErrorStr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumpmp80211SoftwareUpdateErrorStr.setStatus('current')
cambiumpmp80211GpsFirmwareUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumpmp80211GpsFirmwareUpdate.setStatus('current')
cambiumpmp80211GpsFirmwareUpdateError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumpmp80211GpsFirmwareUpdateError.setStatus('current')
cambiumpmp80211GpsFirmwareUpdateErrorStr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumpmp80211GpsFirmwareUpdateErrorStr.setStatus('current')
cambiumBridgeTableAPStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumBridgeTableAPStatus.setStatus('current')
cambiumBridgeTableSTAUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumBridgeTableSTAUpdate.setStatus('current')
cambiumBridgeTableSTAStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumBridgeTableSTAStatus.setStatus('current')
cambiumBridgeTableAPUpdate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumBridgeTableAPUpdate.setStatus('current')
cambiumForceTabUpdDHCP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdDHCP.setStatus('current')
cambiumForceTabUpdTrap = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdTrap.setStatus('current')
cambiumForceTabUpdl2Frw = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdl2Frw.setStatus('current')
cambiumForceTabUpdl3Frw = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdl3Frw.setStatus('current')
cambiumForceTabUpdQos = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdQos.setStatus('current')
cambiumForceTabUpdPortFw = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdPortFw.setStatus('current')
cambiumForceTabUpdVlan = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdVlan.setStatus('current')
cambiumForceTabUpdMappingVlan = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdMappingVlan.setStatus('current')
cambiumConfigurationApplyOnReboot = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumConfigurationApplyOnReboot.setStatus('current')
cambiumForceSTARescan = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceSTARescan.setStatus('current')
cambiumForceTabUpdMcastDeny = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdMcastDeny.setStatus('current')
cambiumForceTabUpdStaticRoutesCnf = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdStaticRoutesCnf.setStatus('current')
cambiumForceTabUpdMIR = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdMIR.setStatus('current')
cambiumForceTabUpdRadiusServ = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdRadiusServ.setStatus('current')
cambiumForceTabUpdPrefAPList = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdPrefAPList.setStatus('current')
cambiumForceTabUpdAPAlias = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 4, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumForceTabUpdAPAlias.setStatus('current')
cambiumpmp80211SoftwareUpdateStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 1)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumpmp80211SoftwareUpdateError"), ("CAMBIUM-PMP80211-MIB", "cambiumpmp80211SoftwareUpdateErrorStr"))
if mibBuilder.loadTexts: cambiumpmp80211SoftwareUpdateStatusTrap.setStatus('current')
cambiumpmp80211GPSSyncStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 2)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumToolbarGPSSyncState"))
if mibBuilder.loadTexts: cambiumpmp80211GPSSyncStatusTrap.setStatus('current')
cambiumpmp80211SystemUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 3))
if mibBuilder.loadTexts: cambiumpmp80211SystemUpTrap.setStatus('current')
cambiumpmp80211DFSStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 4)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumDFSStatus"), ("CAMBIUM-PMP80211-MIB", "cambiumDFSStatusStr"))
if mibBuilder.loadTexts: cambiumpmp80211DFSStatusTrap.setStatus('current')
cambiumpmp80211JSONCfgImportTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 5)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumJSONCfgImportError"))
if mibBuilder.loadTexts: cambiumpmp80211JSONCfgImportTrap.setStatus('current')
cambiumpmp80211JSONCfgExportTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 6)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumJSONCfgExportError"))
if mibBuilder.loadTexts: cambiumpmp80211JSONCfgExportTrap.setStatus('current')
cambiumpmp80211FullCfgRestoreTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 7)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumFullCfgRestoreError"))
if mibBuilder.loadTexts: cambiumpmp80211FullCfgRestoreTrap.setStatus('current')
cambiumpmp80211FullCfgBackupTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 8)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumFullCfgBackUpError"))
if mibBuilder.loadTexts: cambiumpmp80211FullCfgBackupTrap.setStatus('current')
cambiumpmp80211GpsFirmwareUpdateStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 9)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumpmp80211GpsFirmwareUpdateError"), ("CAMBIUM-PMP80211-MIB", "cambiumpmp80211GpsFirmwareUpdateErrorStr"))
if mibBuilder.loadTexts: cambiumpmp80211GpsFirmwareUpdateStatusTrap.setStatus('current')
cambiumpmp80211STADropTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 10)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumSTAMAC"), ("CAMBIUM-PMP80211-MIB", "cambiumSTADropReason"))
if mibBuilder.loadTexts: cambiumpmp80211STADropTrap.setStatus('current')
cambiumpmp80211SMRegTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 11)).setObjects(("CAMBIUM-PMP80211-MIB", "cambiumSTAMAC"))
if mibBuilder.loadTexts: cambiumpmp80211SMRegTrap.setStatus('current')
cambiumpmp80211SystemRebootTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 12))
if mibBuilder.loadTexts: cambiumpmp80211SystemRebootTrap.setStatus('current')
cambiumpmp80211SAModeTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 13))
if mibBuilder.loadTexts: cambiumpmp80211SAModeTrap.setStatus('current')
cambiumpmpETSIframeSkipTrap = NotificationType((1, 3, 6, 1, 4, 1, 17713, 21, 0, 14))
if mibBuilder.loadTexts: cambiumpmpETSIframeSkipTrap.setStatus('current')
cambiumLinkTestDuration = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(6, 6), ValueRangeConstraint(8, 8), ValueRangeConstraint(10, 10), ValueRangeConstraint(12, 12), ValueRangeConstraint(14, 14), ValueRangeConstraint(16, 16), ValueRangeConstraint(18, 18), ValueRangeConstraint(20, 20), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumLinkTestDuration.setStatus('current')
cambiumLinkTestPckSize = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(128, 128), ValueRangeConstraint(800, 800), ValueRangeConstraint(1500, 1500), )).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumLinkTestPckSize.setStatus('current')
cambiumLinkTestStartForMAC = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumLinkTestStartForMAC.setStatus('current')
cambiumLinkTestStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLinkTestStatus.setStatus('current')
cambiumLinkTestResultDate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLinkTestResultDate.setStatus('current')
cambiumLinkTestResultUL = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLinkTestResultUL.setStatus('current')
cambiumLinkTestResultDL = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumLinkTestResultDL.setStatus('current')
caminfoScanFrequencyListCountry = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: caminfoScanFrequencyListCountry.setStatus('current')
caminfoScanFrequencyListTwentyBand = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1064))).setMaxAccess("readonly")
if mibBuilder.loadTexts: caminfoScanFrequencyListTwentyBand.setStatus('current')
caminfoScanFrequencyListFortyBand = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1064))).setMaxAccess("readonly")
if mibBuilder.loadTexts: caminfoScanFrequencyListFortyBand.setStatus('current')
caminfoScanFrequencyListAllow59band = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: caminfoScanFrequencyListAllow59band.setStatus('current')
cambiumInternetConnectionServerIP = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumInternetConnectionServerIP.setStatus('current')
cambiumInternetConnectionPollPeriod = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumInternetConnectionPollPeriod.setStatus('current')
cambiumToolbarGlobeState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumToolbarGlobeState.setStatus('current')
cambiumToolbarGPSSyncState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumToolbarGPSSyncState.setStatus('current')
cambiumToolbarDeviceConfigurationState = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumToolbarDeviceConfigurationState.setStatus('current')
cambiumToolbarSyncSource = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumToolbarSyncSource.setStatus('current')
cambiumToolbarGPSSyncStateStr = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 3, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumToolbarGPSSyncStateStr.setStatus('current')
cambiumJSONCfgImport = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumJSONCfgImport.setStatus('current')
cambiumJSONCfgImportStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumJSONCfgImportStatus.setStatus('current')
cambiumJSONCfgImportError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumJSONCfgImportError.setStatus('current')
cambiumJSONCfgExport = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumJSONCfgExport.setStatus('current')
cambiumJSONCfgExportStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumJSONCfgExportStatus.setStatus('current')
cambiumJSONCfgExportError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumJSONCfgExportError.setStatus('current')
cambiumJSONCfgExportLink = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumJSONCfgExportLink.setStatus('current')
cambiumFullCfgRestore = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumFullCfgRestore.setStatus('current')
cambiumFullCfgRestoreStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumFullCfgRestoreStatus.setStatus('current')
cambiumFullCfgRestoreError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumFullCfgRestoreError.setStatus('current')
cambiumFullCfgBackUp = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumFullCfgBackUp.setStatus('current')
cambiumFullCfgBackUpStatus = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumFullCfgBackUpStatus.setStatus('current')
cambiumFullCfgBackUpError = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumFullCfgBackUpError.setStatus('current')
cambiumFullCfgBackUpLink = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 4, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumFullCfgBackUpLink.setStatus('current')
acsEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acsEnable.setStatus('current')
acsScanMinDwellTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acsScanMinDwellTime.setStatus('current')
acsScanMaxDwellTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acsScanMaxDwellTime.setStatus('current')
acsControl = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acsControl.setStatus('current')
cambiumIDMMode = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIDMMode.setStatus('current')
cambiumIDMTime = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 120000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIDMTime.setStatus('current')
cambiumIDMEnable = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIDMEnable.setStatus('current')
cambiumIDMResultsTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10), )
if mibBuilder.loadTexts: cambiumIDMResultsTable.setStatus('current')
cambiumIDMResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumAPNumberOfConnectedSTA"))
if mibBuilder.loadTexts: cambiumIDMResultsEntry.setStatus('current')
idmDeviceListCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListCycle.setStatus('current')
idmDeviceListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListMAC.setStatus('current')
idmDeviceListLCombRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListLCombRSSI.setStatus('current')
idmDeviceListLRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListLRate.setStatus('current')
idmDeviceListMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListMaxRate.setStatus('current')
idmDeviceListPcktsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListPcktsNum.setStatus('current')
idmDeviceListCRCCombRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListCRCCombRSSI.setStatus('current')
idmDeviceListCRCCh0RSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListCRCCh0RSSI.setStatus('current')
idmDeviceListCRCCh1RSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListCRCCh1RSSI.setStatus('current')
idmDeviceListCRCPcktsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListCRCPcktsNum.setStatus('current')
idmDeviceListPRQCombRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListPRQCombRSSI.setStatus('current')
idmDeviceListPRQCh0RSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListPRQCh0RSSI.setStatus('current')
idmDeviceListPRQCh1RSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListPRQCh1RSSI.setStatus('current')
idmDeviceListPRQPcktsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 10, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmDeviceListPRQPcktsNum.setStatus('current')
cambiumIDMSumMAC = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cambiumIDMSumMAC.setStatus('current')
cambiumIDMSumLCombRSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumLCombRSSI.setStatus('current')
cambiumIDMSumLRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumLRate.setStatus('current')
cambiumIDMSumMaxRate = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumMaxRate.setStatus('current')
cambiumIDMSumPcktsNum = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumPcktsNum.setStatus('current')
cambiumIDMSumCRCCombRSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumCRCCombRSSI.setStatus('current')
cambiumIDMSumCRCCh0RSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumCRCCh0RSSI.setStatus('current')
cambiumIDMSumCRCCh1RSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumCRCCh1RSSI.setStatus('current')
cambiumIDMSumCRCPcktsNum = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumCRCPcktsNum.setStatus('current')
cambiumIDMSumPRQCombRSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumPRQCombRSSI.setStatus('current')
cambiumIDMSumPRQCh0RSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumPRQCh0RSSI.setStatus('current')
cambiumIDMSumPRQCh1RSSI = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumPRQCh1RSSI.setStatus('current')
cambiumIDMSumPRQPcktsNum = MibScalar((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cambiumIDMSumPRQPcktsNum.setStatus('current')
cambiumIDMSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30), )
if mibBuilder.loadTexts: cambiumIDMSummaryTable.setStatus('current')
cambiumIDMSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30, 1), ).setIndexNames((0, "CAMBIUM-PMP80211-MIB", "cambiumAPNumberOfConnectedSTA"))
if mibBuilder.loadTexts: cambiumIDMSummaryEntry.setStatus('current')
idmSummaryIntMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmSummaryIntMAC.setStatus('current')
idmSummaryIntCombRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmSummaryIntCombRSSI.setStatus('current')
idmSummaryIntCh0RSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmSummaryIntCh0RSSI.setStatus('current')
idmSummaryIntCh1RSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmSummaryIntCh1RSSI.setStatus('current')
idmSummaryIntSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 17713, 21, 6, 5, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idmSummaryIntSSID.setStatus('current')
mibBuilder.exportSymbols("CAMBIUM-PMP80211-MIB", cambiumpmp80211SoftwareUpdateErrorStr=cambiumpmp80211SoftwareUpdateErrorStr, systemConfigGPSLockBit=systemConfigGPSLockBit, cambiumIDMSumCRCPcktsNum=cambiumIDMSumCRCPcktsNum, networkLanEnabled=networkLanEnabled, networkLan2Duplex=networkLan2Duplex, cambiumAPConnectedSTAEntry=cambiumAPConnectedSTAEntry, cambiumForceTabUpdDHCP=cambiumForceTabUpdDHCP, systemNtpServerPrimaryIP=systemNtpServerPrimaryIP, connectedSTAListMirULRate=connectedSTAListMirULRate, syslogServerIPThird=syslogServerIPThird, cambiumTDDStatsPerSTAEntry=cambiumTDDStatsPerSTAEntry, l2DHCPServersBelowSTA=l2DHCPServersBelowSTA, cambiumDeviceAgentCNSURL=cambiumDeviceAgentCNSURL, wirelessRadiusUseDefCertificate=wirelessRadiusUseDefCertificate, cambiumManagementIFGateway=cambiumManagementIFGateway, cambiumpmp80211SystemConfiguration=cambiumpmp80211SystemConfiguration, wirelessInterfaceScanFrequencyBandwidth=wirelessInterfaceScanFrequencyBandwidth, wirelessInterfaceTPCMode=wirelessInterfaceTPCMode, cambiumEffectiveDeviceLANNetMask=cambiumEffectiveDeviceLANNetMask, portForwardingTableEntryWLANPortEnd=portForwardingTableEntryWLANPortEnd, networkWanPPPoEAC=networkWanPPPoEAC, dhcpServerStartIP=dhcpServerStartIP, cambiumSTADistanceMil=cambiumSTADistanceMil, dmzEnable=dmzEnable, cambiumGPSLongitude=cambiumGPSLongitude, networkWanPPPoEMSSClamping=networkWanPPPoEMSSClamping, cambiumCurrentuImageVersion=cambiumCurrentuImageVersion, networkLanDNSIPAddrPrimary=networkLanDNSIPAddrPrimary, cambiumIDMSumPRQCh1RSSI=cambiumIDMSumPRQCh1RSSI, wirelessInterfaceEncryption=wirelessInterfaceEncryption, syslogServerLogMask=syslogServerLogMask, dlWLanErrorDroppedPacketCount=dlWLanErrorDroppedPacketCount, mcastVLANVID=mcastVLANVID, cambiumManagementIFNetMask=cambiumManagementIFNetMask, mappingVLANTableEntrySVLAN=mappingVLANTableEntrySVLAN, cambiumPmp80211SystemStatus=cambiumPmp80211SystemStatus, wirelessRadiusTimeout=wirelessRadiusTimeout, networkLanAutoNegotiation=networkLanAutoNegotiation, connectedSTAULSNR=connectedSTAULSNR, cambiumForceTabUpdMappingVlan=cambiumForceTabUpdMappingVlan, wirelessRadiusGUIUserAuth=wirelessRadiusGUIUserAuth, cambiumAthTXMulticast=cambiumAthTXMulticast, connectedSTAMirULRate=connectedSTAMirULRate, cambiumSystem=cambiumSystem, connectedSTAPriority=connectedSTAPriority, wirelessInterfaceScanFrequencyListTwenty=wirelessInterfaceScanFrequencyListTwenty, cambiumWirelessMACAddress=cambiumWirelessMACAddress, wirelessPrefList=wirelessPrefList, connectedAPListScanAge=connectedAPListScanAge, cambiumMCSTable=cambiumMCSTable, cambiumJSONCfgImportStatus=cambiumJSONCfgImportStatus, idmDeviceListCRCCh0RSSI=idmDeviceListCRCCh0RSSI, dhcpServerLeaseTable=dhcpServerLeaseTable, cambiumLinkTestStartForMAC=cambiumLinkTestStartForMAC, gpsSnrValue=gpsSnrValue, cambiumLAN2SpeedStatus=cambiumLAN2SpeedStatus, snmp=snmp, acsState=acsState, networkWanDNSIPAddrSecondary=networkWanDNSIPAddrSecondary, l2FirewallEntryDstMask=l2FirewallEntryDstMask, l3FirewallEntryToS=l3FirewallEntryToS, dlWLanPerUserCapacityDroppedPacketCount=dlWLanPerUserCapacityDroppedPacketCount, cambiumEffectiveSTANetworkMode=cambiumEffectiveSTANetworkMode, wirelessInterfaceColocSystemSyncSrc=wirelessInterfaceColocSystemSyncSrc, cambiumStatsForceUpdate=cambiumStatsForceUpdate, cambiumARPInterface=cambiumARPInterface, cambiumAPBridgeEntry=cambiumAPBridgeEntry, l3FirewallEntryDSCP=l3FirewallEntryDSCP, ulWLanMCS01Packets=ulWLanMCS01Packets, prefferedListTableEntrySSID=prefferedListTableEntrySSID, networkWanMTU=networkWanMTU, wirelessInterfaceTDDFrameSize=wirelessInterfaceTDDFrameSize, classificationListEntry=classificationListEntry, cambiumAPBridgeTable=cambiumAPBridgeTable, cambiumEffectiveDeviceName=cambiumEffectiveDeviceName, wirelessInterfaceScanFrequencyListTen=wirelessInterfaceScanFrequencyListTen, portForwardingTableEntryProtocol=portForwardingTableEntryProtocol, cambiumpmp80211SoftwareUpdateError=cambiumpmp80211SoftwareUpdateError, cambiumEthRXDrops=cambiumEthRXDrops, cambiumCnsServAccountID=cambiumCnsServAccountID, cambiumAcsStatus=cambiumAcsStatus, upnpd=upnpd, wirelessMIRProfileTable=wirelessMIRProfileTable, connectedSTAListULCINR=connectedSTAListULCINR, cambiumMCSIndex=cambiumMCSIndex, cambiumAPConnectedSTATable=cambiumAPConnectedSTATable, l3FirewallEntryName=l3FirewallEntryName, cambiumpmp80211JSONCfgImportTrap=cambiumpmp80211JSONCfgImportTrap, connectedAPListRate=connectedAPListRate, cambiumIPAliasEntry=cambiumIPAliasEntry, networkBridge=networkBridge, wirelessMIRProfileEntry=wirelessMIRProfileEntry, networkWanNetmask=networkWanNetmask, networkBroadcastStormEnabled=networkBroadcastStormEnabled, connectedSTAMcastTotalGroups=connectedSTAMcastTotalGroups, mcastVLANVP=mcastVLANVP, cambiumARPIndex=cambiumARPIndex, ulWLanMCS02Packets=ulWLanMCS02Packets, cambiumToolbarGPSSyncState=cambiumToolbarGPSSyncState, connectedSTAMcastGRP4=connectedSTAMcastGRP4, cambiumForceTabUpdl3Frw=cambiumForceTabUpdl3Frw, cambiumLANModeStatus=cambiumLANModeStatus, dlWLanMCS08Packets=dlWLanMCS08Packets, dhcpServerEndIP=dhcpServerEndIP, networkWanPPPoEAuth=networkWanPPPoEAuth, ulWLanMulticastPacketCount=ulWLanMulticastPacketCount, connectedSTAListULRSSI=connectedSTAListULRSSI, wirelessSTAPriority=wirelessSTAPriority, ulWLanErrorDroppedPacketCount=ulWLanErrorDroppedPacketCount, cambiumTDDStatsPerSTATable=cambiumTDDStatsPerSTATable, networkSTP=networkSTP, connectedSTATXQuality=connectedSTATXQuality, cambiumIDMSumCRCCombRSSI=cambiumIDMSumCRCCombRSSI, cambiumTDDStatsListMAC=cambiumTDDStatsListMAC, wirelessInterfaceScanFrequencyListForty=wirelessInterfaceScanFrequencyListForty, systemConfig=systemConfig, voipEnable=voipEnable, connectedSTAMcastGRP0=connectedSTAMcastGRP0, wirelessRadiusUseDefaultCertificate=wirelessRadiusUseDefaultCertificate, wirelessRadiusExtraCertificateSet=wirelessRadiusExtraCertificateSet, dlkmNATSIPHelpers=dlkmNATSIPHelpers, cambiumLinkTestResultDate=cambiumLinkTestResultDate, sysDFSDetectedCount=sysDFSDetectedCount, cambiumInternetConnectionPollPeriod=cambiumInternetConnectionPollPeriod, cambiumAPMcastTotalGroupCount=cambiumAPMcastTotalGroupCount, cambiumGPSTime=cambiumGPSTime, cambiumIPAliasIP=cambiumIPAliasIP, cambiumSTADLCINR=cambiumSTADLCINR, connectedSTAAID=connectedSTAAID, wirelessRadiusUser1Certificate=wirelessRadiusUser1Certificate, cambiumToolbarGlobeState=cambiumToolbarGlobeState, cambiumDFSStatusStr=cambiumDFSStatusStr, txEtherLanKbitCount=txEtherLanKbitCount, powerSequenceFactoryDefault=powerSequenceFactoryDefault, l2FirewallEntryName=l2FirewallEntryName, wLanSessionDroppedCount=wLanSessionDroppedCount, cambiumIPAliasCnfEntry=cambiumIPAliasCnfEntry, wirelessAPWifiWLANmode=wirelessAPWifiWLANmode, dmz=dmz, dhcpLeaseDevName=dhcpLeaseDevName, wirelessCellSizeUnit=wirelessCellSizeUnit, wirelessInterfaceHTMode=wirelessInterfaceHTMode, connectedAPListMeetNEAttemptCriteria=connectedAPListMeetNEAttemptCriteria, connectedSTADLSNR=connectedSTADLSNR, cambiumForceTabUpdRadiusServ=cambiumForceTabUpdRadiusServ, cambiumEffectiveNetworkLanMTU=cambiumEffectiveNetworkLanMTU, cambiumDateTime=cambiumDateTime, txEtherLanErrorPacketCount=txEtherLanErrorPacketCount, dhcpOption82=dhcpOption82, wirelessDeviceCountryCode=wirelessDeviceCountryCode, cambiumForceTabUpdTrap=cambiumForceTabUpdTrap, mcastVLAN=mcastVLAN, cambiumEthTXMulticast=cambiumEthTXMulticast, cambiumMCSEntry=cambiumMCSEntry, cambiumMCSNumber=cambiumMCSNumber, wirelessMIRAPDefaultProfileNumber=wirelessMIRAPDefaultProfileNumber, cambiumBridgeTableSTAStatus=cambiumBridgeTableSTAStatus, wirelessInterface=wirelessInterface, connectedAPListRSSI=connectedAPListRSSI, connectedSTASessionTime=connectedSTASessionTime, dhcpServerGatewayIP=dhcpServerGatewayIP, networkLanDNSIPAddr=networkLanDNSIPAddr, cambiumMcastHandlingStatus=cambiumMcastHandlingStatus, dataVLANVP=dataVLANVP, staTxCapacity=staTxCapacity, cambiumSTAUplinkMCSMode=cambiumSTAUplinkMCSMode, cambiumIDM=cambiumIDM, networkBridgeDNSIPAddrSecondary=networkBridgeDNSIPAddrSecondary, dhcpLanLimit=dhcpLanLimit, cambiumpmp80211ConfigurationState=cambiumpmp80211ConfigurationState, systemConfigDeviceName=systemConfigDeviceName, dlWLanTotalPacketCount=dlWLanTotalPacketCount, mgmtIF=mgmtIF, connectedAPListINT=connectedAPListINT, idmDeviceListLRate=idmDeviceListLRate, wirelessRadiusCertificateList=wirelessRadiusCertificateList, cambiumEthTXPackets=cambiumEthTXPackets, cambiumpmp80211STAListUpdate=cambiumpmp80211STAListUpdate, dhcpLanHostIndex=dhcpLanHostIndex, syslogServerIPFourth=syslogServerIPFourth, ulWLanMCS09Packets=ulWLanMCS09Packets, cambiumIDMMode=cambiumIDMMode, cambiumRealTimeStatsMonitoring=cambiumRealTimeStatsMonitoring, cambiumForceTabUpdPortFw=cambiumForceTabUpdPortFw, cambiumIDMSumPRQCombRSSI=cambiumIDMSumPRQCombRSSI, sysRebootCounter=sysRebootCounter, connectedSTAListDLRSSI=connectedSTAListDLRSSI, cambiumIPAliasesIndex=cambiumIPAliasesIndex, membershipVLANTableEntryVIDEnd=membershipVLANTableEntryVIDEnd, cambiumManagementIFIPAddress=cambiumManagementIFIPAddress, cambiumStaticRoutesTable=cambiumStaticRoutesTable, wirelessRadiusCertificateListRow1=wirelessRadiusCertificateListRow1, cambiumpmp80211ConfigurationSave=cambiumpmp80211ConfigurationSave, cambiumpmp80211SAModeTrap=cambiumpmp80211SAModeTrap, caminfo=caminfo, connectedAPFrequency=connectedAPFrequency, idmSummaryIntCh0RSSI=idmSummaryIntCh0RSSI, cambiumDhcpStatus=cambiumDhcpStatus, l2LanRemoteAccess=l2LanRemoteAccess, wirelessInterfaceRateMinMCS=wirelessInterfaceRateMinMCS, cambiumpmp80211STAListUpdateStatus=cambiumpmp80211STAListUpdateStatus, cambiumWebServer=cambiumWebServer, acsScanMinDwellTime=acsScanMinDwellTime, connectedAPListCAPS=connectedAPListCAPS, cambiumEffectiveDeviceDefaultGateWay=cambiumEffectiveDeviceDefaultGateWay, wirelessRadiusCurrentGUIUserAuth=wirelessRadiusCurrentGUIUserAuth, cambiumJSONCfgExport=cambiumJSONCfgExport, networkWanPPPoEMTU=networkWanPPPoEMTU, webService=webService, cambiumLinkStatus=cambiumLinkStatus, dlWLanMCS09Packets=dlWLanMCS09Packets, cambiumGeneralStatus=cambiumGeneralStatus, wirelessRadiusDefCertificateView=wirelessRadiusDefCertificateView, connectedAPNEAge=connectedAPNEAge, ulWLanPerUserKbitCount=ulWLanPerUserKbitCount, cambiumpmp80211GpsFirmwareUpdate=cambiumpmp80211GpsFirmwareUpdate, wirelessRadiusIdentityRealm=wirelessRadiusIdentityRealm, cambiumForceTabUpdMIR=cambiumForceTabUpdMIR, wirelessMaximumSTA=wirelessMaximumSTA, cambiumEffectiveNetworkBridgeMTU=cambiumEffectiveNetworkBridgeMTU, cambiumPerformanceMonitoring=cambiumPerformanceMonitoring, l2FirewallEntrySrcMask=l2FirewallEntrySrcMask, cambiumIDMResultsTable=cambiumIDMResultsTable, dfsAlternative2CenterFrequency=dfsAlternative2CenterFrequency, systemDeviceLocHeight=systemDeviceLocHeight, l2FirewallEntryAction=l2FirewallEntryAction, cambiumpmp80211GPSAutopopulate=cambiumpmp80211GPSAutopopulate, connectedAPNoise=connectedAPNoise, mappingVLANTable=mappingVLANTable, portForwardingTableEntryLANIP=portForwardingTableEntryLANIP, cambiumpmpETSIframeSkipTrap=cambiumpmpETSIframeSkipTrap, cambiumIDMResultsEntry=cambiumIDMResultsEntry, ulWLanMCS10Packets=ulWLanMCS10Packets, network=network, classificationRuleQueue=classificationRuleQueue, cambiumLinkTestPckSize=cambiumLinkTestPckSize, cambiumFullCfgRestoreStatus=cambiumFullCfgRestoreStatus, wirelessRateMaxMCS=wirelessRateMaxMCS, cambiumAdvancedPerformanceMonitoring=cambiumAdvancedPerformanceMonitoring, connectedAPBSSID=connectedAPBSSID, mappingVLANEntry=mappingVLANEntry, mcPriority=mcPriority, confQoS=confQoS, dlWLanMultiBroadcastKbitCount=dlWLanMultiBroadcastKbitCount, cambiumAthTXBytes=cambiumAthTXBytes, wirelessRadiusCertificateSet=wirelessRadiusCertificateSet, dhcpLanHostName=dhcpLanHostName, wirelessInterfaceTDDAntennaGain=wirelessInterfaceTDDAntennaGain, l3FirewallEntryDstMask=l3FirewallEntryDstMask, syslogServerLogToWeb=syslogServerLogToWeb, connectedAPSNR=connectedAPSNR, apWiFiDLCTSMode=apWiFiDLCTSMode, cambiumStaticRoutesCnfEnbl=cambiumStaticRoutesCnfEnbl, membershipVLANTableEntryIndex=membershipVLANTableEntryIndex)
mibBuilder.exportSymbols("CAMBIUM-PMP80211-MIB", l2FirewallEntryInterface=l2FirewallEntryInterface, syslogServerIPSecond=syslogServerIPSecond, cambiumHWInfo=cambiumHWInfo, ulWLanKbitCount=ulWLanKbitCount, l3FirewallEntrySrcIP=l3FirewallEntrySrcIP, mgmtIFVID=mgmtIFVID, mgmtIFVLAN=mgmtIFVLAN, cambiumDeviceAgent=cambiumDeviceAgent, idmDeviceListMAC=idmDeviceListMAC, classificationRuleMAC=classificationRuleMAC, cambiumForceTabUpdStaticRoutesCnf=cambiumForceTabUpdStaticRoutesCnf, systemConfigSMLimit=systemConfigSMLimit, acsControl=acsControl, rxEtherLanTotalPacketCount=rxEtherLanTotalPacketCount, idmDeviceListLCombRSSI=idmDeviceListLCombRSSI, dlWLanPerUserTotalPacketCount=dlWLanPerUserTotalPacketCount, ulWLanBroadcastPacketCount=ulWLanBroadcastPacketCount, cambiumUbootVersion=cambiumUbootVersion, wirelessAcceptableAPSNRThreshold=wirelessAcceptableAPSNRThreshold, txEtherLanBroadcastPacketCount=txEtherLanBroadcastPacketCount, wirelessRadiusServerEntry=wirelessRadiusServerEntry, l2FirewallEnable=l2FirewallEnable, ulWLanMCSUsedFrameTimePerSecond=ulWLanMCSUsedFrameTimePerSecond, cambiumBridgeTableAPStatus=cambiumBridgeTableAPStatus, connectedSTADLMCS=connectedSTADLMCS, prefferedAPTable=prefferedAPTable, portForwardingEntryEnable=portForwardingEntryEnable, cambiumpmp80211StatsPerSTAListUpdate=cambiumpmp80211StatsPerSTAListUpdate, cambiumEffectiveDeviceDNSIPAddress=cambiumEffectiveDeviceDNSIPAddress, cambiumCnsServConsStat=cambiumCnsServConsStat, portForwardingTableEntryWLANPortBegin=portForwardingTableEntryWLANPortBegin, cambiumSTAMAC=cambiumSTAMAC, l3FirewallTable=l3FirewallTable, dfsAlternative2Bandwidth=dfsAlternative2Bandwidth, wirelessSecurityMethod=wirelessSecurityMethod, cambiumAPCnsMGMTState=cambiumAPCnsMGMTState, sysNetworkEntryAuthenticationFailure=sysNetworkEntryAuthenticationFailure, classificationRuleIP=classificationRuleIP, cambiumGPSSatSNREntry=cambiumGPSSatSNREntry, apWiFiULCTSRTSMode=apWiFiULCTSRTSMode, cambiumForceTabUpdAPAlias=cambiumForceTabUpdAPAlias, dhcpStaticIP=dhcpStaticIP, cambiumIDMSumCRCCh1RSSI=cambiumIDMSumCRCCh1RSSI, mgmtIFEnable=mgmtIFEnable, cambiumEffectiveTDDRatio=cambiumEffectiveTDDRatio, ulWLanTotalOverheadFrameTimePerSecond=ulWLanTotalOverheadFrameTimePerSecond, cambiumFullCfgBackUpStatus=cambiumFullCfgBackUpStatus, networkLan2AutoNegotiation=networkLan2AutoNegotiation, wirelessInterfaceSyncSource=wirelessInterfaceSyncSource, cambiumFullCfgBackUp=cambiumFullCfgBackUp, cambiumCNSDeviceAgentPassword=cambiumCNSDeviceAgentPassword, wirelessULMIR=wirelessULMIR, snmpSystemDescription=snmpSystemDescription, cambiumStatsResetTimer=cambiumStatsResetTimer, networkPortSecurity=networkPortSecurity, wirelessTXPowerManualLimit=wirelessTXPowerManualLimit, wirelessRadiusDefaultCertificate=wirelessRadiusDefaultCertificate, cambiumAthRXBytes=cambiumAthRXBytes, networkBridgeMTU=networkBridgeMTU, cambiumEffectiveWANIPAddress=cambiumEffectiveWANIPAddress, wirelessSMWifiDistance=wirelessSMWifiDistance, connectedSTAListChannel=connectedSTAListChannel, cambiumpmp80211SMRegTrap=cambiumpmp80211SMRegTrap, connectedAPListBandwidth=connectedAPListBandwidth, cambiumStaticRoutesCnfNetmask=cambiumStaticRoutesCnfNetmask, dlkm=dlkm, cambiumIDMSumLCombRSSI=cambiumIDMSumLCombRSSI, wirelessAcceptableAPRSSIThreshold=wirelessAcceptableAPRSSIThreshold, dataVLAN=dataVLAN, dhcpLanHostTable=dhcpLanHostTable, camAPBrTabAgingTime=camAPBrTabAgingTime, txEtherLanMulticastPacketCount=txEtherLanMulticastPacketCount, connectedAPListNEState=connectedAPListNEState, cambiumRegisteredMcastGroupIP=cambiumRegisteredMcastGroupIP, connectedSTAClickTWebSec=connectedSTAClickTWebSec, connectedAPListChannel=connectedAPListChannel, ulWLanMCS07Packets=ulWLanMCS07Packets, acsEnable=acsEnable, cambiumpmp80211GpsFirmwareUpdateStatusTrap=cambiumpmp80211GpsFirmwareUpdateStatusTrap, wirelessInterfaceConnectionState=wirelessInterfaceConnectionState, cambiumLANStatus=cambiumLANStatus, networkBridgeNetmask=networkBridgeNetmask, cambiumEffectiveDeviceWANNetMask=cambiumEffectiveDeviceWANNetMask, cambiumGPSStatus=cambiumGPSStatus, networkWanPPPoEUsername=networkWanPPPoEUsername, classificationRuleType=classificationRuleType, ulWLanMCS12Packets=ulWLanMCS12Packets, cambiumDeviceAgentEnable=cambiumDeviceAgentEnable, snmpReadOnlyCommunity=snmpReadOnlyCommunity, dlWLanMCS11Packets=dlWLanMCS11Packets, staTxQuality=staTxQuality, cambiumToolbarDeviceConfigurationState=cambiumToolbarDeviceConfigurationState, systemConfigSWLockBit=systemConfigSWLockBit, cambiumStaticRoutesCnfInfo=cambiumStaticRoutesCnfInfo, wirelessRadiusServerIndex=wirelessRadiusServerIndex, cambiumGPSSatSNRTable=cambiumGPSSatSNRTable, portForwarding=portForwarding, dhcpStaticMAC=dhcpStaticMAC, camSTABrTabDevMACAddress=camSTABrTabDevMACAddress, dlWLanMCS06Packets=dlWLanMCS06Packets, wirelessInterfaceColocState=wirelessInterfaceColocState, sysNetworkEntryAttempt=sysNetworkEntryAttempt, dhcpLanHostMAC=dhcpLanHostMAC, cambiumpmp80211FullCfgRestoreTrap=cambiumpmp80211FullCfgRestoreTrap, cambiumManagementIFStatus=cambiumManagementIFStatus, dlWLanMCS04Packets=dlWLanMCS04Packets, dlWLanMCS12Packets=dlWLanMCS12Packets, networkLanIPAddr=networkLanIPAddr, l3FirewallEntryLog=l3FirewallEntryLog, l3FirewallEntryPort=l3FirewallEntryPort, ulWLanTotalPacketCount=ulWLanTotalPacketCount, cambiumForceTabUpdQos=cambiumForceTabUpdQos, cambiumARPTable=cambiumARPTable, cambiumEthRXPackets=cambiumEthRXPackets, cambiumAthRXPackets=cambiumAthRXPackets, cambiumStaticRoutesEntry=cambiumStaticRoutesEntry, cambiumpmp80211DeviceReboot=cambiumpmp80211DeviceReboot, apWiFiRTSThreshold=apWiFiRTSThreshold, wirelessInterfaceGuardInterval=wirelessInterfaceGuardInterval, cambiumIPAliasesEnable=cambiumIPAliasesEnable, networkLanDefaultIP=networkLanDefaultIP, snmpTrapTable=snmpTrapTable, wirelessRadiusUsername=wirelessRadiusUsername, idmDeviceListMaxRate=idmDeviceListMaxRate, cambiumSTADropReason=cambiumSTADropReason, wirelessInterfaceSyncHoldTime=wirelessInterfaceSyncHoldTime, txEtherLanMultiBroadcastKbitCount=txEtherLanMultiBroadcastKbitCount, wirelessRadiusCertificateListRow3=wirelessRadiusCertificateListRow3, cambiumAthTXDrops=cambiumAthTXDrops, connectedSTAULRSSI=connectedSTAULRSSI, cambiumEthTXDrops=cambiumEthTXDrops, sysRebootCount=sysRebootCount, connectedAPListNEAge=connectedAPListNEAge, connectedSTAMirSrc=connectedSTAMirSrc, cambiumSTABridgeEntry=cambiumSTABridgeEntry, cambiumEffectiveDeviceWANPPPoEStatus=cambiumEffectiveDeviceWANPPPoEStatus, cambiumAthRXMulticast=cambiumAthRXMulticast, ulWLanTotalUsedFrameTimePerSecond=ulWLanTotalUsedFrameTimePerSecond, wirelessRadiusUser2CertificateName=wirelessRadiusUser2CertificateName, cambiumSystemLog=cambiumSystemLog, cambiumEffectiveCountryCode=cambiumEffectiveCountryCode, dfsAlternative1Bandwidth=dfsAlternative1Bandwidth, ulWLanCapacityDroppedPacketCount=ulWLanCapacityDroppedPacketCount, cambiumToolBarOpts=cambiumToolBarOpts, camSTABrTabBridgeName=camSTABrTabBridgeName, wirelessInterfaceTXPower=wirelessInterfaceTXPower, cambiumpmp80211GpsFirmwareUpdateError=cambiumpmp80211GpsFirmwareUpdateError, systemDeviceLocLatitude=systemDeviceLocLatitude, snmpDomainAccessIP=snmpDomainAccessIP, connectedAPAuthenticationMethod=connectedAPAuthenticationMethod, cambiumESN=cambiumESN, wirelessMIRSTAProfileNumber=wirelessMIRSTAProfileNumber, cambiumDeviceLatitude=cambiumDeviceLatitude, mappingVLANTableEntryIndex=mappingVLANTableEntryIndex, wirelessRadiusIdentityStr=wirelessRadiusIdentityStr, cambiumForceTabUpdl2Frw=cambiumForceTabUpdl2Frw, cambiumStaticRoutesCnfDestIP=cambiumStaticRoutesCnfDestIP, cambiumToolBar=cambiumToolBar, multicast=multicast, idmDeviceListPRQCh1RSSI=idmDeviceListPRQCh1RSSI, idmDeviceListPRQPcktsNum=idmDeviceListPRQPcktsNum, cambiumEthRXBytes=cambiumEthRXBytes, cambiumStaticRoutesGW=cambiumStaticRoutesGW, dlWLanMCS01Packets=dlWLanMCS01Packets, l2FirewallEntryVlanID=l2FirewallEntryVlanID, cambiumpmp80211DFSStatusTrap=cambiumpmp80211DFSStatusTrap, wirelessRadiusCertificateListRow2=wirelessRadiusCertificateListRow2, ulWLanMCS00Packets=ulWLanMCS00Packets, networkLanIPAddressMode=networkLanIPAddressMode, idmSummaryIntCombRSSI=idmSummaryIntCombRSSI, mgmtVLANEnable=mgmtVLANEnable, cambiumEthTXErrors=cambiumEthTXErrors, networkWanPPPoEService=networkWanPPPoEService, connectedSTAMcastGRP3=connectedSTAMcastGRP3, dfsAlternative1CenterFrequency=dfsAlternative1CenterFrequency, cambiumForceTabUpdPrefAPList=cambiumForceTabUpdPrefAPList, dlWLanTotalOverheadFrameTimePerSecond=dlWLanTotalOverheadFrameTimePerSecond, cambiumpmp80211SystemUpTrap=cambiumpmp80211SystemUpTrap, qosEnable=qosEnable, cambiumIPAliasCnfTable=cambiumIPAliasCnfTable, cambiumSTAConnectedRFBandwidth=cambiumSTAConnectedRFBandwidth, gpsSatelliteId=gpsSatelliteId, ulWLanMCS03Packets=ulWLanMCS03Packets, cambiumSTAPowerControlMode=cambiumSTAPowerControlMode, dlWLanPerUserRetransmitPacketCount=dlWLanPerUserRetransmitPacketCount, l3FirewallEntryProtocol=l3FirewallEntryProtocol, sysNetworkEntrySuccess=sysNetworkEntrySuccess, systemNtpServerIPMode=systemNtpServerIPMode, cambiumDeviceLongitude=cambiumDeviceLongitude, mgmtIFIPAddressMode=mgmtIFIPAddressMode, caminfoScanFrequencyListCountry=caminfoScanFrequencyListCountry, connectedAPCAPS=connectedAPCAPS, wirelessMaximumCellSize=wirelessMaximumCellSize, cambiumFullCfgRestore=cambiumFullCfgRestore, cambiumIDMSummaryEntry=cambiumIDMSummaryEntry, dlWLanMCS05Packets=dlWLanMCS05Packets, wirelessRadiusPMP320Certificate=wirelessRadiusPMP320Certificate, l2SnmpLanRemoteAccess=l2SnmpLanRemoteAccess, connectedSTAListIP=connectedSTAListIP, cambiumJSONCfgImportError=cambiumJSONCfgImportError, connectedAPAuthMethod=connectedAPAuthMethod, connectedAPINT=connectedAPINT, cambiumACSCfg=cambiumACSCfg, camSTABrTabAgingTime=camSTABrTabAgingTime, dlWLanMCS13Packets=dlWLanMCS13Packets, dhcpLanEnable=dhcpLanEnable, networkBridgeIPAddressMode=networkBridgeIPAddressMode, snmpSystemName=snmpSystemName, wirelessInterfaceMode=wirelessInterfaceMode, cambiumInternetConnectionServerIP=cambiumInternetConnectionServerIP, networkWanPPPoEKeepAlive=networkWanPPPoEKeepAlive, connectedSTADLRateMbps=connectedSTADLRateMbps, wirelessInterfaceEncryptionKey=wirelessInterfaceEncryptionKey, cambiumDriverType=cambiumDriverType, cambiumStaticRoutesIndex=cambiumStaticRoutesIndex, l2FirewallEntrySrcMAC=l2FirewallEntrySrcMAC, classificationRuleMask=classificationRuleMask, centerFrequency=centerFrequency, l3Firewall=l3Firewall, cambiumLinkTestDuration=cambiumLinkTestDuration, camAPBrTabDevMACAddress=camAPBrTabDevMACAddress, wirelessInterfaceProtocolMode=wirelessInterfaceProtocolMode, cambiumStaticRoutesInterface=cambiumStaticRoutesInterface, cambiumIPAliasTable=cambiumIPAliasTable, dhcpLeaseIP=dhcpLeaseIP, dlWLanBroadcastPacketCount=dlWLanBroadcastPacketCount, cambiumSTABridgeTable=cambiumSTABridgeTable, ulWLanMCS15Packets=ulWLanMCS15Packets, networkWanPPPoEPassword=networkWanPPPoEPassword, connectedSTAClickTWebPort=connectedSTAClickTWebPort, ulWLanPerUserTotalPacketCount=ulWLanPerUserTotalPacketCount, snmpTrapCommunity=snmpTrapCommunity, networkLan2Enabled=networkLan2Enabled, cambiumpmp80211GpsFirmwareUpdateErrorStr=cambiumpmp80211GpsFirmwareUpdateErrorStr, mgmtVLANVP=mgmtVLANVP, ulWLanMCS04Packets=ulWLanMCS04Packets, cambiumMcastStatus=cambiumMcastStatus, cambiumIPAliasesIpAddr=cambiumIPAliasesIpAddr, cambiumIDMSumLRate=cambiumIDMSumLRate, connectedSTAIP=connectedSTAIP, dlWLanTotalAvailableFrameTimePerSecond=dlWLanTotalAvailableFrameTimePerSecond, l3FirewallEntrySrcMask=l3FirewallEntrySrcMask, connectedAPChannel=connectedAPChannel, connectedSTAMirDLRate=connectedSTAMirDLRate, classificationListTable=classificationListTable, wirelessDefaultCountryCode=wirelessDefaultCountryCode, systemConfigHWLockBit=systemConfigHWLockBit, cambiumAPNumberOfConnectedSTA=cambiumAPNumberOfConnectedSTA, wirelessRadiusUser1CertificateView=wirelessRadiusUser1CertificateView, cambiumLAN2Status=cambiumLAN2Status, networkLan=networkLan, cambiumJSONCfgExportError=cambiumJSONCfgExportError, connectedAPSSID=connectedAPSSID, networkLanDuplex=networkLanDuplex)
mibBuilder.exportSymbols("CAMBIUM-PMP80211-MIB", wirelessStaIsolate=wirelessStaIsolate, idmSummaryIntCh1RSSI=idmSummaryIntCh1RSSI, httpsPort=httpsPort, networkWan=networkWan, PYSNMP_MODULE_ID=pmpMibTree, cambiumSSHServer=cambiumSSHServer, wirelessInterfaceSSID=wirelessInterfaceSSID, connectedSTAMcastGRP2=connectedSTAMcastGRP2, rxEtherLanKbitCount=rxEtherLanKbitCount, connectedAPListNoise=connectedAPListNoise, wirelessMulticastEnhanceMode=wirelessMulticastEnhanceMode, wirelessMIRProfileIndex=wirelessMIRProfileIndex, mgmtIFVP=mgmtIFVP, cambiumCfg=cambiumCfg, cambiumSTAConnectedAPListEntry=cambiumSTAConnectedAPListEntry, networkLan2PoEEnabled=networkLan2PoEEnabled, mgmtIFIPAddr=mgmtIFIPAddr, networkBridgeGatewayIP=networkBridgeGatewayIP, cambiumAPConnectedSTAListTable=cambiumAPConnectedSTAListTable, rxEtherLanErrorPacketCount=rxEtherLanErrorPacketCount, cambiumSTADLRSSI=cambiumSTADLRSSI, rxEtherLanDroppedPacketCount=rxEtherLanDroppedPacketCount, l2FirewallEntry=l2FirewallEntry, cambiumStaticRoutesCnfEntry=cambiumStaticRoutesCnfEntry, cambiumSTADownlinkMCSMode=cambiumSTADownlinkMCSMode, cambiumLinkTestResultDL=cambiumLinkTestResultDL, cambiumGPSHeight=cambiumGPSHeight, camAPBrTabBridgeName=camAPBrTabBridgeName, snmpTrapEntryIndex=snmpTrapEntryIndex, wirelessRadiusUser2CertificateView=wirelessRadiusUser2CertificateView, networkWanPPPoE=networkWanPPPoE, idmDeviceListPcktsNum=idmDeviceListPcktsNum, connectedSTAListDLCINR=connectedSTAListDLCINR, wirelessInterfaceTDDRatio=wirelessInterfaceTDDRatio, networkLan2Speed=networkLan2Speed, wirelessMIRProfileDescription=wirelessMIRProfileDescription, systemConfigETSILicense=systemConfigETSILicense, idmDeviceListCRCCh1RSSI=idmDeviceListCRCCh1RSSI, cambiumConnectedAPMACAddress=cambiumConnectedAPMACAddress, snmpTrapEntry=snmpTrapEntry, cambiumARPIP=cambiumARPIP, wirelessSmoothingBit=wirelessSmoothingBit, l3FirewallEntryAction=l3FirewallEntryAction, cambiumToolbarSyncSource=cambiumToolbarSyncSource, prefferedListTableSecurityMethod=prefferedListTableSecurityMethod, cambiumForceSTARescan=cambiumForceSTARescan, cambiumDFSStatus=cambiumDFSStatus, prefferedAPEntry=prefferedAPEntry, cambiumJSONCfgExportLink=cambiumJSONCfgExportLink, connectedAPListBSSID=connectedAPListBSSID, dlWLanMulticastPacketCount=dlWLanMulticastPacketCount, dhcpLanLeasetime=dhcpLanLeasetime, wirelessInterfaceiFreqReuseMode=wirelessInterfaceiFreqReuseMode, cambiumPropagationDelay=cambiumPropagationDelay, dhcpLanHostEntry=dhcpLanHostEntry, l3FirewallEntryDstIP=l3FirewallEntryDstIP, wirelessType=wirelessType, ulWLanMCS13Packets=ulWLanMCS13Packets, membershipVLANTable=membershipVLANTable, cambiumDHCPOption82Status=cambiumDHCPOption82Status, cambiumJSONCfgExportStatus=cambiumJSONCfgExportStatus, mcastVLANEnable=mcastVLANEnable, dhcpLanStart=dhcpLanStart, ulWLanRetransPacketCount=ulWLanRetransPacketCount, cambiumSTAConnectedAPEntry=cambiumSTAConnectedAPEntry, cambiumIDMSumPRQPcktsNum=cambiumIDMSumPRQPcktsNum, connectedSTAClickTHostName=connectedSTAClickTHostName, syslogServerIPFirst=syslogServerIPFirst, snmpReadWriteCommunity=snmpReadWriteCommunity, cambiumCNSDeviceAgentID=cambiumCNSDeviceAgentID, cambiumpmp80211SystemActions=cambiumpmp80211SystemActions, networkWanIPAddr=networkWanIPAddr, snmpTrapEntryIP=snmpTrapEntryIP, networkLanGatewayIP=networkLanGatewayIP, l2FirewallEntryLog=l2FirewallEntryLog, l3FirewallEntry=l3FirewallEntry, cambiumSSHServerEnable=cambiumSSHServerEnable, cambiumStaticRoutesDestIP=cambiumStaticRoutesDestIP, cambiumAthTXErrors=cambiumAthTXErrors, networkPortSecurityAgingTime=networkPortSecurityAgingTime, membershipVLANTableEntryVIDBegin=membershipVLANTableEntryVIDBegin, portForwardingTable=portForwardingTable, connectedAPMeetNEAttemptCriteria=connectedAPMeetNEAttemptCriteria, cambiumSTAConnectedAP=cambiumSTAConnectedAP, cambiumBridgeTableAPUpdate=cambiumBridgeTableAPUpdate, connectedAPNEState=connectedAPNEState, cambiumAthRXErrors=cambiumAthRXErrors, l2WanRemoteAccess=l2WanRemoteAccess, dhcpServerStaticHostTable=dhcpServerStaticHostTable, dlWLanMCS03Packets=dlWLanMCS03Packets, networkLanSpeed=networkLanSpeed, cambiumIDMTime=cambiumIDMTime, cambiumEthTXBroadcast=cambiumEthTXBroadcast, dlWLanPerUserKbitCount=dlWLanPerUserKbitCount, cambiumIDMSumCRCCh0RSSI=cambiumIDMSumCRCCh0RSSI, mgmtVLANVID=mgmtVLANVID, wirelessRadiusPassword=wirelessRadiusPassword, cambiumGPSLatitude=cambiumGPSLatitude, txEtherLanDroppedPacketCount=txEtherLanDroppedPacketCount, classificationRuleValue=classificationRuleValue, cambiumpmp80211APListUpdateStatus=cambiumpmp80211APListUpdateStatus, connectedSTAChannel=connectedSTAChannel, connectedAPListSSID=connectedAPListSSID, networkMode=networkMode, systemConfigMinAntGain=systemConfigMinAntGain, portForwardingEntry=portForwardingEntry, connectedSTAListULMCS=connectedSTAListULMCS, camSTABrTabDevPort=camSTABrTabDevPort, wirelessMgmtPacketRate=wirelessMgmtPacketRate, cambiumSTADLSNR=cambiumSTADLSNR, ulWLanMCS11Packets=ulWLanMCS11Packets, connectedSTAMAC=connectedSTAMAC, cambiumIDMSumPRQCh0RSSI=cambiumIDMSumPRQCh0RSSI, cambiumStaticRoutesNetmask=cambiumStaticRoutesNetmask, cambiumBridgeTableSTAUpdate=cambiumBridgeTableSTAUpdate, dhcpStaticIndex=dhcpStaticIndex, httpPort=httpPort, cambiumpmp80211SystemTraps=cambiumpmp80211SystemTraps, cambiumForceTabUpdVlan=cambiumForceTabUpdVlan, wirelessMIREnable=wirelessMIREnable, cambiumEffectiveSSID=cambiumEffectiveSSID, cambiumWLANStatus=cambiumWLANStatus, ulWLanMCS06Packets=ulWLanMCS06Packets, cambiumGPSDeviceInfo=cambiumGPSDeviceInfo, snmpDomainAccessIPMask=snmpDomainAccessIPMask, cambiumIPAliasesNetmask=cambiumIPAliasesNetmask, wireless=wireless, networkWanGatewayIP=networkWanGatewayIP, wirelessRadiusUsePMP450Certificate=wirelessRadiusUsePMP450Certificate, dhcpLeaseIndex=dhcpLeaseIndex, cambiumCurrentSWInfo=cambiumCurrentSWInfo, rxEtherLanMultiBroadcastKbitCount=rxEtherLanMultiBroadcastKbitCount, connectedSTADLRSSI=connectedSTADLRSSI, wirelessDLMIR=wirelessDLMIR, forceMcastBcast4Addr=forceMcastBcast4Addr, dlWLanMCS07Packets=dlWLanMCS07Packets, dhcpServerLeaseEntry=dhcpServerLeaseEntry, cambiumEffectiveDeviceIPAddress=cambiumEffectiveDeviceIPAddress, ulWLanMCS05Packets=ulWLanMCS05Packets, cambiumpmp80211StatsPerSTAListUpdateStatus=cambiumpmp80211StatsPerSTAListUpdateStatus, ulWLanMCS14Packets=ulWLanMCS14Packets, dlWLanTotalUsedFrameTimePerSecond=dlWLanTotalUsedFrameTimePerSecond, cambiumpmp80211SoftwareUpdate=cambiumpmp80211SoftwareUpdate, camAPBrTabDevPort=camAPBrTabDevPort, systemConfigSMLockBit=systemConfigSMLockBit, ulWLanMCS08Packets=ulWLanMCS08Packets, wirelessRadiusServerPort=wirelessRadiusServerPort, snmpTrapEntryPort=snmpTrapEntryPort, connectedAPRemainingSTA=connectedAPRemainingSTA, wirelessInterfaceUnblockUSfreqs=wirelessInterfaceUnblockUSfreqs, cambiumGPSFirmwareUpdateStatus=cambiumGPSFirmwareUpdateStatus, prefferedListTableEntryKEY=prefferedListTableEntryKEY, camAPBrTabSTAMACAddress=camAPBrTabSTAMACAddress, cambiumFactoryReset=cambiumFactoryReset, cambiumIDMSummaryTable=cambiumIDMSummaryTable, cambiumEffectiveAuthenticationType=cambiumEffectiveAuthenticationType, networkPortSecurityMax=networkPortSecurityMax, cambiumFullCfgBackUpLink=cambiumFullCfgBackUpLink, cambiumJSONCfgImport=cambiumJSONCfgImport, cambiumSubscribedMcastGroupTable=cambiumSubscribedMcastGroupTable, l2Firewall=l2Firewall, cambiumStaticRoutesCnfGW=cambiumStaticRoutesCnfGW, cambiumARPEntry=cambiumARPEntry, mgmtVLAN=mgmtVLAN, systemConfigisGPSkeyOK=systemConfigisGPSkeyOK, membershipVLANEntry=membershipVLANEntry, cambiumFullCfgRestoreError=cambiumFullCfgRestoreError, dlWLanMCS15Packets=dlWLanMCS15Packets, cambiumEthTXBytes=cambiumEthTXBytes, cambiumpmp80211ConfigurationReset=cambiumpmp80211ConfigurationReset, l3FirewallEntryInterface=l3FirewallEntryInterface, wirelessRadiusSeverInfo=wirelessRadiusSeverInfo, l3FirewallEntryIndex=l3FirewallEntryIndex, l2FirewallEntryEtherType=l2FirewallEntryEtherType, systemConfigTimezone=systemConfigTimezone, systemNtpServerSecondaryIP=systemNtpServerSecondaryIP, mcastGroupLimit=mcastGroupLimit, gpsSatelliteStatus=gpsSatelliteStatus, idmSummaryIntSSID=idmSummaryIntSSID, connectedSTAListMAC=connectedSTAListMAC, cambiumStaticRoutesCnfTable=cambiumStaticRoutesCnfTable, cambiumAPConnectedSTAListEntry=cambiumAPConnectedSTAListEntry, cambiumEffectiveMcastGroupLimit=cambiumEffectiveMcastGroupLimit, classificationRuleIndex=classificationRuleIndex, connectedSTAListMirSrc=connectedSTAListMirSrc, cambiumEffectiveAntennaGain=cambiumEffectiveAntennaGain, snmpDomainAccessEnable=snmpDomainAccessEnable, cambiumSTAConnectedAPTable=cambiumSTAConnectedAPTable, networkLanMTU=networkLanMTU, wirelessRadiusUser1CertificateName=wirelessRadiusUser1CertificateName, cambiumpmp80211ConfigurationApply=cambiumpmp80211ConfigurationApply, cambiumIDMEnable=cambiumIDMEnable, cambiumIPAliasTableIndex=cambiumIPAliasTableIndex, cambiumIDMSumMaxRate=cambiumIDMSumMaxRate, connectedSTAMcastGRP1=connectedSTAMcastGRP1, networkBroadcastStormRate=networkBroadcastStormRate, cambiumSTAPriority=cambiumSTAPriority, acsScanMaxDwellTime=acsScanMaxDwellTime, connectedSTATXCapacity=connectedSTATXCapacity, connectedSTAListMirDLRate=connectedSTAListMirDLRate, cambiumAthRXDrops=cambiumAthRXDrops, connectedAPRate=connectedAPRate, dhcpLanHostIP=dhcpLanHostIP, wirelessMIRList=wirelessMIRList, dlWLanMCS10Packets=dlWLanMCS10Packets, networkWanDNSIPAddrPrimary=networkWanDNSIPAddrPrimary, wirelessRadiusServerIP=wirelessRadiusServerIP, l2FirewallTable=l2FirewallTable, ulWLanMultiBroadcastKbitCount=ulWLanMultiBroadcastKbitCount, cambiumEthRXMulticast=cambiumEthRXMulticast, wirelessCcaEnable=wirelessCcaEnable, networkAliases=networkAliases, cambiumLANMACAddress=cambiumLANMACAddress, connectedAPBandwidth=connectedAPBandwidth, txEtherLanTotalPacketCount=txEtherLanTotalPacketCount, cambiumSTADistanceKm=cambiumSTADistanceKm, connectedAPScanAge=connectedAPScanAge, cambiumPmp80211SystemMonitoring=cambiumPmp80211SystemMonitoring, networkBridgeDNSIPAddrPrimary=networkBridgeDNSIPAddrPrimary, wirelessRadiusServerTable=wirelessRadiusServerTable, dlWLanPerUserTxPower=dlWLanPerUserTxPower, mgmtIFGateway=mgmtIFGateway, rxEtherLanMulticastPacketCount=rxEtherLanMulticastPacketCount, cambiumpmp80211APListUpdate=cambiumpmp80211APListUpdate, wirelessRadius=wirelessRadius, networkWanIPAddressMode=networkWanIPAddressMode, cambiumForceTabUpdMcastDeny=cambiumForceTabUpdMcastDeny, cambiumStaticRoutesCnfIndex=cambiumStaticRoutesCnfIndex, dlWLanMCS14Packets=dlWLanMCS14Packets, connectedSTAListAID=connectedSTAListAID, mappingVLANTableEntryCVLAN=mappingVLANTableEntryCVLAN, portForwardingTableEntryIndex=portForwardingTableEntryIndex, cambiumEffectiveSyncSource=cambiumEffectiveSyncSource, cambiumSubModeType=cambiumSubModeType, cambiumpmp80211STADropTrap=cambiumpmp80211STADropTrap, connectedSTAListDLMCS=connectedSTAListDLMCS, connectedAPListFrequency=connectedAPListFrequency, ulWLanPerUserErrorDroppedPacketCount=ulWLanPerUserErrorDroppedPacketCount, cambiumLANSpeedStatus=cambiumLANSpeedStatus, ulWLanTotalAvailableFrameTimePerSecond=ulWLanTotalAvailableFrameTimePerSecond, cambiumpmp80211STADisconnect=cambiumpmp80211STADisconnect, routing=routing, wirelessInterfaceTPCTRL=wirelessInterfaceTPCTRL, dhcpServerDNSIP=dhcpServerDNSIP, cambiumConfigurationApplyOnReboot=cambiumConfigurationApplyOnReboot, cambiumpmp80211ConfigurationDiscard=cambiumpmp80211ConfigurationDiscard, dlWLanRetransPacketCount=dlWLanRetransPacketCount, cambiumpmp80211SoftwareUpdateStatus=cambiumpmp80211SoftwareUpdateStatus, cambiumpmp80211FullCfgBackupTrap=cambiumpmp80211FullCfgBackupTrap, systemNtpServer=systemNtpServer, wirelessRadiusUser2Certificate=wirelessRadiusUser2Certificate, cambiumLinkTest=cambiumLinkTest, cambiumAthTXPackets=cambiumAthTXPackets, idmDeviceListCRCCombRSSI=idmDeviceListCRCCombRSSI)
mibBuilder.exportSymbols("CAMBIUM-PMP80211-MIB", cambiumIDMSumMAC=cambiumIDMSumMAC, cambiumAthRXBroadcast=cambiumAthRXBroadcast, networkRelaydEnable=networkRelaydEnable, cambiumpmp80211JSONCfgExportTrap=cambiumpmp80211JSONCfgExportTrap, cambiumARPMAC=cambiumARPMAC, cambiumSTAConnectedRFFrequency=cambiumSTAConnectedRFFrequency, cambiumpmp80211Tools=cambiumpmp80211Tools, networkBridgeIPAddr=networkBridgeIPAddr, dlWLanKbitCount=dlWLanKbitCount, cambiumDHCP=cambiumDHCP, cambiumSubscribedMcastGroupEntry=cambiumSubscribedMcastGroupEntry, cambiumTDDStatsPerSTAIndex=cambiumTDDStatsPerSTAIndex, connectedAPListRemainingSTA=connectedAPListRemainingSTA, connectedSTAULMCS=connectedSTAULMCS, rxEtherLanBroadcastPacketCount=rxEtherLanBroadcastPacketCount, cambiumIPAliasesInfo=cambiumIPAliasesInfo, staticRoutesEnableMain=staticRoutesEnableMain, cambiumLinkTestResultUL=cambiumLinkTestResultUL, wirelessInterfaceRateMaxMCS=wirelessInterfaceRateMaxMCS, connectedAPRSSI=connectedAPRSSI, cambiumGPSNumVisibleSat=cambiumGPSNumVisibleSat, dlWLanMCS00Packets=dlWLanMCS00Packets, systemDeviceLocLongitude=systemDeviceLocLongitude, cambiumpmp80211GPSSyncStatusTrap=cambiumpmp80211GPSSyncStatusTrap, vlans=vlans, cambiumCurrentuImageIVersion=cambiumCurrentuImageIVersion, cambiumGPSCurrentSyncState=cambiumGPSCurrentSyncState, sysCPUUsage=sysCPUUsage, wirelessMulticastIgmpFastLeave=wirelessMulticastIgmpFastLeave, cambiumEthRXBroadcast=cambiumEthRXBroadcast, prefferedListTableEntryIndex=prefferedListTableEntryIndex, cambiumSTAConductedTXPower=cambiumSTAConductedTXPower, cambiumIDMSumPcktsNum=cambiumIDMSumPcktsNum, cambiumpmp80211SoftwareUpdateStatusTrap=cambiumpmp80211SoftwareUpdateStatusTrap, wirelessRadiusPMP450Certificate=wirelessRadiusPMP450Certificate, networkBridgeDNSIPAddr=networkBridgeDNSIPAddr, cambiumEthRXErrors=cambiumEthRXErrors, wirelessRadiusRetry=wirelessRadiusRetry, wirelessInterfacePTPMode=wirelessInterfacePTPMode, cambiumToolBarStates=cambiumToolBarStates, cambiumLAN2ModeStatus=cambiumLAN2ModeStatus, dhcpLeaseMAC=dhcpLeaseMAC, dlWLanMCS02Packets=dlWLanMCS02Packets, networkLanNetmask=networkLanNetmask, idmDeviceListCycle=idmDeviceListCycle, dataVLANEnable=dataVLANEnable, dlWLanMCSUsedFrameTimePerSecond=dlWLanMCSUsedFrameTimePerSecond, cambiumLinkTestStatus=cambiumLinkTestStatus, cambiumFullCfgBackUpError=cambiumFullCfgBackUpError, cambiumSystemUptime=cambiumSystemUptime, l2FirewallEntryIndex=l2FirewallEntryIndex, cambium=cambium, pmpMibTree=pmpMibTree, cambiumpmp80211SystemRebootTrap=cambiumpmp80211SystemRebootTrap, cambiumSTAConnectedAPListTable=cambiumSTAConnectedAPListTable, cambiumGPSNumTrackedSat=cambiumGPSNumTrackedSat, networkWanDNSIPAddr=networkWanDNSIPAddr, l2FirewallEntryDstMAC=l2FirewallEntryDstMAC, cambiumIPAliasNetmask=cambiumIPAliasNetmask, wirelessInterfacePTPMACAddress=wirelessInterfacePTPMACAddress, networkNATPMP=networkNATPMP, dataVLANVID=dataVLANVID, networkLanDNSIPAddrSecondary=networkLanDNSIPAddrSecondary, connectedSTAClickTHWAddr=connectedSTAClickTHWAddr, classificationRuleDirection=classificationRuleDirection, cambiumToolbarGPSSyncStateStr=cambiumToolbarGPSSyncStateStr, idmDeviceListCRCPcktsNum=idmDeviceListCRCPcktsNum, caminfoScanFrequencyListAllow59band=caminfoScanFrequencyListAllow59band, wirelessRadiusUsePMP320Certificate=wirelessRadiusUsePMP320Certificate, wirelessDevice=wirelessDevice, wirelessRadiusServerSecret=wirelessRadiusServerSecret, caminfoScanFrequencyListTwentyBand=caminfoScanFrequencyListTwentyBand, idmDeviceListPRQCh0RSSI=idmDeviceListPRQCh0RSSI, dlWLanPerUserErrorDroppedPacketCount=dlWLanPerUserErrorDroppedPacketCount, l3FirewallEnable=l3FirewallEnable, cambiumSubscribedMcastGroupNum=cambiumSubscribedMcastGroupNum, idmDeviceListPRQCombRSSI=idmDeviceListPRQCombRSSI, dmzIPAddress=dmzIPAddress, mgmtIFNetmask=mgmtIFNetmask, caminfoScanFrequencyListFortyBand=caminfoScanFrequencyListFortyBand, cambiumEPMPMSN=cambiumEPMPMSN, wirelessRadiusServerList=wirelessRadiusServerList, systemConfigLockedCC=systemConfigLockedCC, wirelessInterfaceScanFrequencyListFive=wirelessInterfaceScanFrequencyListFive, dlWLanCapacityDroppedPacketCount=dlWLanCapacityDroppedPacketCount, bcPriority=bcPriority, cambiumRFStatus=cambiumRFStatus, wirelessAcceptableAPCINRThreshold=wirelessAcceptableAPCINRThreshold, snmpTrapEnable=snmpTrapEnable, networkUPNP=networkUPNP, cambiumAthTXBroadcast=cambiumAthTXBroadcast, dhcpServerStaticHostEntry=dhcpServerStaticHostEntry, connectedAPListCINR=connectedAPListCINR, wirelessMIRProfileNumber=wirelessMIRProfileNumber, idmSummaryIntMAC=idmSummaryIntMAC)
