#
# PySNMP MIB module HPN-ICF-EPON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-EPON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hpnicfLswSlotIndex, hpnicfLswFrameIndex = mibBuilder.importSymbols("HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswSlotIndex", "hpnicfLswFrameIndex")
hpnicfEpon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfEpon")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, ModuleIdentity, iso, ObjectIdentity, NotificationType, Counter32, TimeTicks, Counter64, Gauge32, Unsigned32, Bits, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "ModuleIdentity", "iso", "ObjectIdentity", "NotificationType", "Counter32", "TimeTicks", "Counter64", "Gauge32", "Unsigned32", "Bits", "MibIdentifier")
DateAndTime, DisplayString, MacAddress, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "MacAddress", "TextualConvention", "RowStatus", "TruthValue")
hpnicfEponMibObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1))
if mibBuilder.loadTexts: hpnicfEponMibObjects.setLastUpdated('200705221008Z')
if mibBuilder.loadTexts: hpnicfEponMibObjects.setOrganization('')
hpnicfEponSysMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1))
hpnicfEponAutoAuthorize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoAuthorize.setStatus('current')
hpnicfEponMonitorCycle = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponMonitorCycle.setStatus('current')
hpnicfEponMsgTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 3), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponMsgTimeOut.setStatus('current')
hpnicfEponMsgLoseNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 4), Integer32().clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponMsgLoseNum.setStatus('current')
hpnicfEponSysHasEPONBoard = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponSysHasEPONBoard.setStatus('current')
hpnicfEponMonitorCycleEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponMonitorCycleEnable.setStatus('current')
hpnicfEponOltSoftwareErrAlmEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponOltSoftwareErrAlmEnable.setStatus('current')
hpnicfEponPortLoopBackAlmEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponPortLoopBackAlmEnable.setStatus('current')
hpnicfEponMonitorCycleMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponMonitorCycleMinVal.setStatus('current')
hpnicfEponMonitorCycleMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponMonitorCycleMaxVal.setStatus('current')
hpnicfEponMsgTimeOutMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponMsgTimeOutMinVal.setStatus('current')
hpnicfEponMsgTimeOutMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponMsgTimeOutMaxVal.setStatus('current')
hpnicfEponMsgLoseNumMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponMsgLoseNumMinVal.setStatus('current')
hpnicfEponMsgLoseNumMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponMsgLoseNumMaxVal.setStatus('current')
hpnicfEponSysScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 15))
hpnicfEponSysManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16), )
if mibBuilder.loadTexts: hpnicfEponSysManTable.setStatus('current')
hpnicfEponSysManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponSlotIndex"))
if mibBuilder.loadTexts: hpnicfEponSysManEntry.setStatus('current')
hpnicfEponSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponSlotIndex.setStatus('current')
hpnicfEponModeSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cmode", 1), ("hmode", 2))).clone('cmode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponModeSwitch.setStatus('current')
hpnicfEponAutomaticMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutomaticMode.setStatus('current')
hpnicfEponOamDiscoveryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 4), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponOamDiscoveryTimeout.setStatus('current')
hpnicfEponEncryptionNoReplyTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 5), Integer32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponEncryptionNoReplyTimeOut.setStatus('current')
hpnicfEponEncryptionUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 6), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponEncryptionUpdateTime.setStatus('current')
hpnicfEponAutoBindStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoBindStatus.setStatus('current')
hpnicfEponAutoUpdateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17), )
if mibBuilder.loadTexts: hpnicfEponAutoUpdateTable.setStatus('current')
hpnicfEponAutoUpdateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponSlotIndex"))
if mibBuilder.loadTexts: hpnicfEponAutoUpdateEntry.setStatus('current')
hpnicfEponAutoUpdateFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoUpdateFileName.setStatus('current')
hpnicfEponAutoUpdateSchedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoUpdateSchedStatus.setStatus('current')
hpnicfEponAutoUpdateSchedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoUpdateSchedTime.setStatus('current')
hpnicfEponAutoUpdateSchedType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("daily", 1), ("weekly", 2), ("comingdate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoUpdateSchedType.setStatus('current')
hpnicfEponAutoUpdateRealTimeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponAutoUpdateRealTimeStatus.setStatus('current')
hpnicfEponOuiIndexNextTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 18), )
if mibBuilder.loadTexts: hpnicfEponOuiIndexNextTable.setStatus('current')
hpnicfEponOuiIndexNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 18, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponSlotIndex"))
if mibBuilder.loadTexts: hpnicfEponOuiIndexNextEntry.setStatus('current')
hpnicfEponOuiIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponOuiIndexNext.setStatus('current')
hpnicfEponOuiTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 19), )
if mibBuilder.loadTexts: hpnicfEponOuiTable.setStatus('current')
hpnicfEponOuiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 19, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponSlotIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfEponOuiIndex"))
if mibBuilder.loadTexts: hpnicfEponOuiEntry.setStatus('current')
hpnicfEponOuiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 19, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponOuiIndex.setStatus('current')
hpnicfEponOuiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 19, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponOuiValue.setStatus('current')
hpnicfEponOamVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 19, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponOamVersion.setStatus('current')
hpnicfEponOuiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 19, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponOuiRowStatus.setStatus('current')
hpnicfEponMulticastControlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 20), )
if mibBuilder.loadTexts: hpnicfEponMulticastControlTable.setStatus('current')
hpnicfEponMulticastControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 20, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponMulticastVlanId"))
if mibBuilder.loadTexts: hpnicfEponMulticastControlEntry.setStatus('current')
hpnicfEponMulticastVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 20, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponMulticastVlanId.setStatus('current')
hpnicfEponMulticastAddressList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 20, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponMulticastAddressList.setStatus('current')
hpnicfEponMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 1, 20, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfEponMulticastStatus.setStatus('current')
hpnicfEponFileName = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 2))
hpnicfEponDbaUpdateFileName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponDbaUpdateFileName.setStatus('current')
hpnicfEponOnuUpdateFileName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponOnuUpdateFileName.setStatus('current')
hpnicfEponOltMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3))
hpnicfOltSysManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1), )
if mibBuilder.loadTexts: hpnicfOltSysManTable.setStatus('current')
hpnicfOltSysManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOltSysManEntry.setStatus('current')
hpnicfOltLaserOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 1), Integer32().clone(96)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltLaserOnTime.setStatus('current')
hpnicfOltLaserOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 2), Integer32().clone(96)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltLaserOffTime.setStatus('current')
hpnicfOltMultiCopyBrdCast = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltMultiCopyBrdCast.setStatus('current')
hpnicfOltEnableDiscardPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltEnableDiscardPacket.setStatus('current')
hpnicfOltSelfTest = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("selftest", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltSelfTest.setStatus('current')
hpnicfOltSelfTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltSelfTestResult.setStatus('current')
hpnicfOltMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltMaxRtt.setStatus('current')
hpnicfOltInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2), )
if mibBuilder.loadTexts: hpnicfOltInfoTable.setStatus('current')
hpnicfOltInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOltInfoEntry.setStatus('current')
hpnicfOltFirmMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltFirmMajorVersion.setStatus('current')
hpnicfOltFirmMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltFirmMinorVersion.setStatus('current')
hpnicfOltHardMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltHardMajorVersion.setStatus('current')
hpnicfOltHardMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltHardMinorVersion.setStatus('current')
hpnicfOltAgcLockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltAgcLockTime.setStatus('current')
hpnicfOltAgcCdrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltAgcCdrTime.setStatus('current')
hpnicfOltMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltMacAddress.setStatus('current')
hpnicfOltWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("open", 2), ("reset", 3), ("closed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltWorkMode.setStatus('current')
hpnicfOltOpticalPowerTx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltOpticalPowerTx.setStatus('current')
hpnicfOltOpticalPowerRx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltOpticalPowerRx.setStatus('current')
hpnicfOltDbaManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3), )
if mibBuilder.loadTexts: hpnicfOltDbaManTable.setStatus('current')
hpnicfOltDbaManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOltDbaManEntry.setStatus('current')
hpnicfOltDbaEnabledType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltDbaEnabledType.setStatus('current')
hpnicfOltDbaDiscoveryLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 2), Integer32().clone(41500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltDbaDiscoveryLength.setStatus('current')
hpnicfOltDbaDiscovryFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 3), Integer32().clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltDbaDiscovryFrequency.setStatus('current')
hpnicfOltDbaCycleLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 4), Integer32().clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltDbaCycleLength.setStatus('current')
hpnicfOltDbaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaVersion.setStatus('current')
hpnicfOltDbaUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltDbaUpdate.setStatus('current')
hpnicfOltDbaUpdateResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("fail", 3), ("fileNotExist", 4), ("notSetFilename", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaUpdateResult.setStatus('current')
hpnicfOltPortAlarmThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4), )
if mibBuilder.loadTexts: hpnicfOltPortAlarmThresholdTable.setStatus('current')
hpnicfOltPortAlarmThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOltPortAlarmThresholdEntry.setStatus('current')
hpnicfOltPortAlarmBerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmBerEnabled.setStatus('current')
hpnicfOltPortAlarmBerDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("berUplink", 1), ("berDownlink", 2), ("berAll", 3))).clone('berAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmBerDirect.setStatus('current')
hpnicfOltPortAlarmBerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 3), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmBerThreshold.setStatus('current')
hpnicfOltPortAlarmFerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmFerEnabled.setStatus('current')
hpnicfOltPortAlarmFerDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ferUplink", 1), ("ferDownlink", 2), ("ferAll", 3))).clone('ferAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmFerDirect.setStatus('current')
hpnicfOltPortAlarmFerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 6), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmFerThreshold.setStatus('current')
hpnicfOltPortAlarmLlidMismatchEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmLlidMismatchEnabled.setStatus('current')
hpnicfOltPortAlarmLlidMismatchThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 8), Integer32().clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmLlidMismatchThreshold.setStatus('current')
hpnicfOltPortAlarmRemoteStableEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmRemoteStableEnabled.setStatus('current')
hpnicfOltPortAlarmLocalStableEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmLocalStableEnabled.setStatus('current')
hpnicfOltPortAlarmRegistrationEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmRegistrationEnabled.setStatus('current')
hpnicfOltPortAlarmOamDisconnectionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 12), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmOamDisconnectionEnabled.setStatus('current')
hpnicfOltPortAlarmEncryptionKeyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 13), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmEncryptionKeyEnabled.setStatus('current')
hpnicfOltPortAlarmVendorSpecificEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 14), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmVendorSpecificEnabled.setStatus('current')
hpnicfOltPortAlarmRegExcessEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 15), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmRegExcessEnabled.setStatus('current')
hpnicfOltPortAlarmDFEEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 4, 1, 16), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOltPortAlarmDFEEnabled.setStatus('current')
hpnicfOltLaserOnTimeMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltLaserOnTimeMinVal.setStatus('current')
hpnicfOltLaserOnTimeMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltLaserOnTimeMaxVal.setStatus('current')
hpnicfOltLaserOffTimeMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltLaserOffTimeMinVal.setStatus('current')
hpnicfOltLaserOffTimeMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltLaserOffTimeMaxVal.setStatus('current')
hpnicfOltDbaDiscoveryLengthMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaDiscoveryLengthMinVal.setStatus('current')
hpnicfOltDbaDiscoveryLengthMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaDiscoveryLengthMaxVal.setStatus('current')
hpnicfOltDbaDiscovryFrequencyMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaDiscovryFrequencyMinVal.setStatus('current')
hpnicfOltDbaDiscovryFrequencyMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaDiscovryFrequencyMaxVal.setStatus('current')
hpnicfOltDbaCycleLengthMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaCycleLengthMinVal.setStatus('current')
hpnicfOltDbaCycleLengthMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltDbaCycleLengthMaxVal.setStatus('current')
hpnicfOltPortAlarmLlidMisMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltPortAlarmLlidMisMinVal.setStatus('current')
hpnicfOltPortAlarmLlidMisMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltPortAlarmLlidMisMaxVal.setStatus('current')
hpnicfOltPortAlarmBerMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltPortAlarmBerMinVal.setStatus('current')
hpnicfOltPortAlarmBerMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltPortAlarmBerMaxVal.setStatus('current')
hpnicfOltPortAlarmFerMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltPortAlarmFerMinVal.setStatus('current')
hpnicfOltPortAlarmFerMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltPortAlarmFerMaxVal.setStatus('current')
hpnicfOnuSilentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 21), )
if mibBuilder.loadTexts: hpnicfOnuSilentTable.setStatus('current')
hpnicfOnuSilentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 21, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuSilentMacAddr"))
if mibBuilder.loadTexts: hpnicfOnuSilentEntry.setStatus('current')
hpnicfOnuSilentMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 21, 1, 1), MacAddress())
if mibBuilder.loadTexts: hpnicfOnuSilentMacAddr.setStatus('current')
hpnicfOnuSilentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 21, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSilentTime.setStatus('current')
hpnicfOltUsingOnuTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 22), )
if mibBuilder.loadTexts: hpnicfOltUsingOnuTable.setStatus('current')
hpnicfOltUsingOnuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 22, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOltUsingOnuNum"))
if mibBuilder.loadTexts: hpnicfOltUsingOnuEntry.setStatus('current')
hpnicfOltUsingOnuNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfOltUsingOnuNum.setStatus('current')
hpnicfOltUsingOnuIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 22, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOltUsingOnuIfIndex.setStatus('current')
hpnicfOltUsingOnuRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 3, 22, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOltUsingOnuRowStatus.setStatus('current')
hpnicfEponOnuMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5))
hpnicfOnuSysManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1), )
if mibBuilder.loadTexts: hpnicfOnuSysManTable.setStatus('current')
hpnicfOnuSysManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuSysManEntry.setStatus('current')
hpnicfOnuEncryptMan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("downlink", 2), ("updownlink", 3))).clone('downlink')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuEncryptMan.setStatus('current')
hpnicfOnuReAuthorize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reAuthorize", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuReAuthorize.setStatus('current')
hpnicfOnuMulticastFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuMulticastFilterStatus.setStatus('current')
hpnicfOnuDbaReportQueueSetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 4), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDbaReportQueueSetNumber.setStatus('current')
hpnicfOnuRemoteFecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRemoteFecStatus.setStatus('current')
hpnicfOnuPortBerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuPortBerStatus.setStatus('current')
hpnicfOnuReset = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuReset.setStatus('current')
hpnicfOnuMulticastControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("igmpsnooping", 1), ("multicastcontrol", 2))).clone('igmpsnooping')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuMulticastControlMode.setStatus('current')
hpnicfOnuAccessVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuAccessVlan.setStatus('current')
hpnicfOnuEncryptKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuEncryptKey.setStatus('current')
hpnicfOnuUniUpDownTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuUniUpDownTrapStatus.setStatus('current')
hpnicfOnuFecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuFecStatus.setStatus('current')
hpnicfOnuMcastCtrlHostAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuMcastCtrlHostAgingTime.setStatus('current')
hpnicfOnuMulticastFastLeaveEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuMulticastFastLeaveEnable.setStatus('current')
hpnicfOnuPortIsolateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuPortIsolateEnable.setStatus('current')
hpnicfOnuLinkTestTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2), )
if mibBuilder.loadTexts: hpnicfOnuLinkTestTable.setStatus('current')
hpnicfOnuLinkTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuLinkTestEntry.setStatus('current')
hpnicfOnuLinkTestFrameNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 1), Integer32().clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuLinkTestFrameNum.setStatus('current')
hpnicfOnuLinkTestFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 1514)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuLinkTestFrameSize.setStatus('current')
hpnicfOnuLinkTestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuLinkTestDelay.setStatus('current')
hpnicfOnuLinkTestVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuLinkTestVlanTag.setStatus('current')
hpnicfOnuLinkTestVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuLinkTestVlanPriority.setStatus('current')
hpnicfOnuLinkTestVlanTagID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuLinkTestVlanTagID.setStatus('current')
hpnicfOnuLinkTestResultSentFrameNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestResultSentFrameNum.setStatus('current')
hpnicfOnuLinkTestResultRetFrameNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestResultRetFrameNum.setStatus('current')
hpnicfOnuLinkTestResultRetErrFrameNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestResultRetErrFrameNum.setStatus('current')
hpnicfOnuLinkTestResultMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestResultMinDelay.setStatus('current')
hpnicfOnuLinkTestResultMeanDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestResultMeanDelay.setStatus('current')
hpnicfOnuLinkTestResultMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestResultMaxDelay.setStatus('current')
hpnicfOnuBandWidthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3), )
if mibBuilder.loadTexts: hpnicfOnuBandWidthTable.setStatus('current')
hpnicfOnuBandWidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuBandWidthEntry.setStatus('current')
hpnicfOnuDownStreamBandWidthPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDownStreamBandWidthPolicy.setStatus('current')
hpnicfOnuDownStreamMaxBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDownStreamMaxBandWidth.setStatus('current')
hpnicfOnuDownStreamMaxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388480)).clone(8388480)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDownStreamMaxBurstSize.setStatus('current')
hpnicfOnuDownStreamHighPriorityFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDownStreamHighPriorityFirst.setStatus('current')
hpnicfOnuDownStreamShortFrameFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDownStreamShortFrameFirst.setStatus('current')
hpnicfOnuP2PBandWidthPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuP2PBandWidthPolicy.setStatus('current')
hpnicfOnuP2PMaxBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuP2PMaxBandWidth.setStatus('current')
hpnicfOnuP2PMaxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388480)).clone(8388480)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuP2PMaxBurstSize.setStatus('current')
hpnicfOnuP2PHighPriorityFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuP2PHighPriorityFirst.setStatus('current')
hpnicfOnuP2PShortFrameFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuP2PShortFrameFirst.setStatus('current')
hpnicfOnuSlaManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4), )
if mibBuilder.loadTexts: hpnicfOnuSlaManTable.setStatus('current')
hpnicfOnuSlaManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuSlaManEntry.setStatus('current')
hpnicfOnuSlaMaxBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuSlaMaxBandWidth.setStatus('current')
hpnicfOnuSlaMinBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuSlaMinBandWidth.setStatus('current')
hpnicfOnuSlaBandWidthStepVal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSlaBandWidthStepVal.setStatus('current')
hpnicfOnuSlaDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2))).clone('low')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuSlaDelay.setStatus('current')
hpnicfOnuSlaFixedBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuSlaFixedBandWidth.setStatus('current')
hpnicfOnuSlaPriorityClass = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuSlaPriorityClass.setStatus('current')
hpnicfOnuSlaFixedPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuSlaFixedPacketSize.setStatus('current')
hpnicfOnuInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5), )
if mibBuilder.loadTexts: hpnicfOnuInfoTable.setStatus('current')
hpnicfOnuInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuInfoEntry.setStatus('current')
hpnicfOnuHardMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuHardMajorVersion.setStatus('current')
hpnicfOnuHardMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuHardMinorVersion.setStatus('current')
hpnicfOnuSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSoftwareVersion.setStatus('current')
hpnicfOnuUniMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("mii", 2), ("gmii", 3), ("tbi", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuUniMacType.setStatus('current')
hpnicfOnuLaserOnTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLaserOnTime.setStatus('current')
hpnicfOnuLaserOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLaserOffTime.setStatus('current')
hpnicfOnuGrantFifoDep = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 255), ValueRangeConstraint(2147483647, 2147483647), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuGrantFifoDep.setStatus('current')
hpnicfOnuWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("on", 2), ("pending", 3), ("off", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuWorkMode.setStatus('current')
hpnicfOnuPCBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPCBVersion.setStatus('current')
hpnicfOnuRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRtt.setStatus('current')
hpnicfOnuEEPROMVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuEEPROMVersion.setStatus('current')
hpnicfOnuRegType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRegType.setStatus('current')
hpnicfOnuHostType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuHostType.setStatus('current')
hpnicfOnuDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuDistance.setStatus('current')
hpnicfOnuLlid = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLlid.setStatus('current')
hpnicfOnuVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuVendorId.setStatus('current')
hpnicfOnuFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuFirmwareVersion.setStatus('current')
hpnicfOnuOpticalPowerReceivedByOlt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuOpticalPowerReceivedByOlt.setStatus('current')
hpnicfOnuMacAddrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 6), )
if mibBuilder.loadTexts: hpnicfOnuMacAddrInfoTable.setStatus('current')
hpnicfOnuMacAddrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuMacIndex"))
if mibBuilder.loadTexts: hpnicfOnuMacAddrInfoEntry.setStatus('current')
hpnicfOnuMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfOnuMacIndex.setStatus('current')
hpnicfOnuMacAddrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bound", 1), ("registered", 2), ("run", 3), ("regIncorrect", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuMacAddrFlag.setStatus('current')
hpnicfOnuMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 6, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuMacAddress.setStatus('current')
hpnicfOnuBindMacAddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 7), )
if mibBuilder.loadTexts: hpnicfOnuBindMacAddrTable.setStatus('current')
hpnicfOnuBindMacAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuBindMacAddrEntry.setStatus('current')
hpnicfOnuBindMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 7, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuBindMacAddress.setStatus('current')
hpnicfOnuBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuBindType.setStatus('current')
hpnicfOnuFirmwareUpdateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 8), )
if mibBuilder.loadTexts: hpnicfOnuFirmwareUpdateTable.setStatus('current')
hpnicfOnuFirmwareUpdateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuFirmwareUpdateEntry.setStatus('current')
hpnicfOnuUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuUpdate.setStatus('current')
hpnicfOnuUpdateResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("updating", 1), ("ok", 2), ("fail", 3), ("fileNotExist", 4), ("notSetFilename", 5), ("fileNotMatchONU", 6), ("timeout", 7), ("otherError", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuUpdateResult.setStatus('current')
hpnicfOnuUpdateFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuUpdateFileName.setStatus('current')
hpnicfOnuLinkTestFrameNumMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestFrameNumMinVal.setStatus('current')
hpnicfOnuLinkTestFrameNumMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuLinkTestFrameNumMaxVal.setStatus('current')
hpnicfOnuSlaMaxBandWidthMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSlaMaxBandWidthMinVal.setStatus('current')
hpnicfOnuSlaMaxBandWidthMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSlaMaxBandWidthMaxVal.setStatus('current')
hpnicfOnuSlaMinBandWidthMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSlaMinBandWidthMinVal.setStatus('current')
hpnicfOnuSlaMinBandWidthMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSlaMinBandWidthMaxVal.setStatus('current')
hpnicfEponOnuTypeManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 15), )
if mibBuilder.loadTexts: hpnicfEponOnuTypeManTable.setStatus('current')
hpnicfEponOnuTypeManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 15, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponOnuTypeIndex"))
if mibBuilder.loadTexts: hpnicfEponOnuTypeManEntry.setStatus('current')
hpnicfEponOnuTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 15, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponOnuTypeIndex.setStatus('current')
hpnicfEponOnuTypeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 15, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponOnuTypeDescr.setStatus('current')
hpnicfOnuPacketManTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 16), )
if mibBuilder.loadTexts: hpnicfOnuPacketManTable.setStatus('current')
hpnicfOnuPacketManEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuPacketManEntry.setStatus('current')
hpnicfOnuPriorityTrust = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dscp", 1), ("ipprecedence", 2), ("cos", 3))).clone('cos')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuPriorityTrust.setStatus('current')
hpnicfOnuQueueScheduler = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("spq", 1), ("wfq", 2))).clone('spq')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuQueueScheduler.setStatus('current')
hpnicfOnuProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17), )
if mibBuilder.loadTexts: hpnicfOnuProtocolTable.setStatus('current')
hpnicfOnuProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuProtocolEntry.setStatus('current')
hpnicfOnuStpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuStpStatus.setStatus('current')
hpnicfOnuIgmpSnoopingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIgmpSnoopingStatus.setStatus('current')
hpnicfOnuDhcpsnoopingOption82 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDhcpsnoopingOption82.setStatus('current')
hpnicfOnuDhcpsnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDhcpsnooping.setStatus('current')
hpnicfOnuPppoe = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuPppoe.setStatus('current')
hpnicfOnuIgmpSnoopingHostAgingT = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIgmpSnoopingHostAgingT.setStatus('current')
hpnicfOnuIgmpSnoopingMaxRespT = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIgmpSnoopingMaxRespT.setStatus('current')
hpnicfOnuIgmpSnoopingRouterAgingT = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIgmpSnoopingRouterAgingT.setStatus('current')
hpnicfOnuIgmpSnoopingAggReportS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIgmpSnoopingAggReportS.setStatus('current')
hpnicfOnuIgmpSnoopingAggLeaveS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 17, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIgmpSnoopingAggLeaveS.setStatus('current')
hpnicfOnuDot1xTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 18), )
if mibBuilder.loadTexts: hpnicfOnuDot1xTable.setStatus('current')
hpnicfOnuDot1xEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuDot1xEntry.setStatus('current')
hpnicfOnuDot1xAccount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 18, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDot1xAccount.setStatus('current')
hpnicfOnuDot1xPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 18, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDot1xPassword.setStatus('current')
hpnicfEponBatchOperationMan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6))
hpnicfOnuPriorityQueueTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 19), )
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueTable.setStatus('current')
hpnicfOnuPriorityQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 19, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuQueueDirection"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuQueueId"))
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueEntry.setStatus('current')
hpnicfOnuQueueDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))))
if mibBuilder.loadTexts: hpnicfOnuQueueDirection.setStatus('current')
hpnicfOnuQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hpnicfOnuQueueId.setStatus('current')
hpnicfOnuQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 19, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuQueueSize.setStatus('current')
hpnicfOnuCountTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 20), )
if mibBuilder.loadTexts: hpnicfOnuCountTable.setStatus('current')
hpnicfOnuCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 20, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuCountEntry.setStatus('current')
hpnicfOnuInCRCErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 20, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuInCRCErrPkts.setStatus('current')
hpnicfOnuOutDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 20, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuOutDroppedFrames.setStatus('current')
hpnicfEponOnuScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21))
hpnicfOnuPriorityQueueSizeMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueSizeMinVal.setStatus('current')
hpnicfOnuPriorityQueueSizeMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueSizeMaxVal.setStatus('current')
hpnicfOnuPriorityQueueBandwidthMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueBandwidthMinVal.setStatus('current')
hpnicfOnuPriorityQueueBandwidthMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueBandwidthMaxVal.setStatus('current')
hpnicfOnuPriorityQueueBurstsizeMinVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueBurstsizeMinVal.setStatus('current')
hpnicfOnuPriorityQueueBurstsizeMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPriorityQueueBurstsizeMaxVal.setStatus('current')
hpnicfOnuUpdateByTypeNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 21, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuUpdateByTypeNextIndex.setStatus('current')
hpnicfOnuQueueBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 22), )
if mibBuilder.loadTexts: hpnicfOnuQueueBandwidthTable.setStatus('current')
hpnicfOnuQueueBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 22, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuQueueDirection"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuQueueId"))
if mibBuilder.loadTexts: hpnicfOnuQueueBandwidthEntry.setStatus('current')
hpnicfOnuQueueMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 22, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuQueueMaxBandwidth.setStatus('current')
hpnicfOnuQueueMaxBurstsize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 22, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuQueueMaxBurstsize.setStatus('current')
hpnicfOnuQueuePolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 22, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuQueuePolicyStatus.setStatus('current')
hpnicfOnuIpAddressTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23), )
if mibBuilder.loadTexts: hpnicfOnuIpAddressTable.setStatus('current')
hpnicfOnuIpAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuIpAddressEntry.setStatus('current')
hpnicfOnuIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIpAddress.setStatus('current')
hpnicfOnuIpAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIpAddressMask.setStatus('current')
hpnicfOnuIpAddressGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuIpAddressGateway.setStatus('current')
hpnicfOnuDhcpallocate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDhcpallocate.setStatus('current')
hpnicfOnuManageVID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuManageVID.setStatus('current')
hpnicfOnuManageVlanIntfS = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 23, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuManageVlanIntfS.setStatus('current')
hpnicfOnuChipSetInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 24), )
if mibBuilder.loadTexts: hpnicfOnuChipSetInfoTable.setStatus('current')
hpnicfOnuChipSetInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuChipSetInfoEntry.setStatus('current')
hpnicfOnuChipSetVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 24, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuChipSetVendorId.setStatus('current')
hpnicfOnuChipSetModel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 24, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuChipSetModel.setStatus('current')
hpnicfOnuChipSetRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 24, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuChipSetRevision.setStatus('current')
hpnicfOnuChipSetDesignDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 24, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuChipSetDesignDate.setStatus('current')
hpnicfOnuCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25), )
if mibBuilder.loadTexts: hpnicfOnuCapabilityTable.setStatus('current')
hpnicfOnuCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuCapabilityEntry.setStatus('current')
hpnicfOnuServiceSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 1), Bits().clone(namedValues=NamedValues(("geinterfacesupport", 0), ("feinterfacesupport", 1), ("voipservicesupport", 2), ("tdmservicesupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuServiceSupported.setStatus('current')
hpnicfOnuGEPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuGEPortNumber.setStatus('current')
hpnicfOnuFEPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuFEPortNumber.setStatus('current')
hpnicfOnuPOTSPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuPOTSPortNumber.setStatus('current')
hpnicfOnuE1PortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuE1PortsNumber.setStatus('current')
hpnicfOnuUpstreamQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuUpstreamQueueNumber.setStatus('current')
hpnicfOnuMaxUpstreamQueuePerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuMaxUpstreamQueuePerPort.setStatus('current')
hpnicfOnuDownstreamQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuDownstreamQueueNumber.setStatus('current')
hpnicfOnuMaxDownstreamQueuePerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuMaxDownstreamQueuePerPort.setStatus('current')
hpnicfOnuBatteryBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuBatteryBackup.setStatus('current')
hpnicfOnuIgspFastLeaveSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuIgspFastLeaveSupported.setStatus('current')
hpnicfOnuMCtrlFastLeaveSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 25, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuMCtrlFastLeaveSupported.setStatus('current')
hpnicfOnuDbaReportTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 26), )
if mibBuilder.loadTexts: hpnicfOnuDbaReportTable.setStatus('current')
hpnicfOnuDbaReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 26, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuDbaReportQueueId"))
if mibBuilder.loadTexts: hpnicfOnuDbaReportEntry.setStatus('current')
hpnicfOnuDbaReportQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 26, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfOnuDbaReportQueueId.setStatus('current')
hpnicfOnuDbaReportThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 26, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDbaReportThreshold.setStatus('current')
hpnicfOnuDbaReportStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 26, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuDbaReportStatus.setStatus('current')
hpnicfOnuCosToLocalPrecedenceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 27), )
if mibBuilder.loadTexts: hpnicfOnuCosToLocalPrecedenceTable.setStatus('current')
hpnicfOnuCosToLocalPrecedenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 27, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuCosToLocalPrecedenceCosIndex"))
if mibBuilder.loadTexts: hpnicfOnuCosToLocalPrecedenceEntry.setStatus('current')
hpnicfOnuCosToLocalPrecedenceCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuCosToLocalPrecedenceCosIndex.setStatus('current')
hpnicfOnuCosToLocalPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuCosToLocalPrecedenceValue.setStatus('current')
hpnicfEponOnuStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 28), )
if mibBuilder.loadTexts: hpnicfEponOnuStpPortTable.setStatus('current')
hpnicfEponOnuStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 28, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfEponStpPortIndex"))
if mibBuilder.loadTexts: hpnicfEponOnuStpPortEntry.setStatus('current')
hpnicfEponStpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 144))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponStpPortIndex.setStatus('current')
hpnicfEponStpPortDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 28, 1, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponStpPortDescr.setStatus('current')
hpnicfEponStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 28, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("discarding", 2), ("learning", 3), ("forwarding", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponStpPortState.setStatus('current')
hpnicfOnuPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29), )
if mibBuilder.loadTexts: hpnicfOnuPhysicalTable.setStatus('current')
hpnicfOnuPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfOnuPhysicalEntry.setStatus('current')
hpnicfOnuBridgeMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuBridgeMac.setStatus('current')
hpnicfOnuFirstPonMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuFirstPonMac.setStatus('current')
hpnicfOnuFirstPonRegState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notExist", 1), ("absent", 2), ("offline", 3), ("silent", 4), ("down", 5), ("up", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuFirstPonRegState.setStatus('current')
hpnicfOnuSecondPonMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSecondPonMac.setStatus('current')
hpnicfOnuSecondPonRegState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 29, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notExist", 1), ("absent", 2), ("offline", 3), ("silent", 4), ("down", 5), ("up", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSecondPonRegState.setStatus('current')
hpnicfOnuSmlkTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30), )
if mibBuilder.loadTexts: hpnicfOnuSmlkTable.setStatus('current')
hpnicfOnuSmlkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuSmlkGroupID"))
if mibBuilder.loadTexts: hpnicfOnuSmlkEntry.setStatus('current')
hpnicfOnuSmlkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSmlkGroupID.setStatus('current')
hpnicfOnuSmlkFirstPonRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("null", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSmlkFirstPonRole.setStatus('current')
hpnicfOnuSmlkFirstPonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("down", 3), ("null", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSmlkFirstPonStatus.setStatus('current')
hpnicfOnuSmlkSecondPonRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("slave", 2), ("null", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSmlkSecondPonRole.setStatus('current')
hpnicfOnuSmlkSecondPonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("down", 3), ("null", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuSmlkSecondPonStatus.setStatus('current')
hpnicfOnuRS485PropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31), )
if mibBuilder.loadTexts: hpnicfOnuRS485PropertiesTable.setStatus('current')
hpnicfOnuRS485PropertiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuRS485SerialIndex"))
if mibBuilder.loadTexts: hpnicfOnuRS485PropertiesEntry.setStatus('current')
hpnicfOnuRS485SerialIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfOnuRS485SerialIndex.setStatus('current')
hpnicfOnuRS485BaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("baudRate300", 1), ("baudRate600", 2), ("baudRate1200", 3), ("baudRate2400", 4), ("baudRate4800", 5), ("baudRate9600", 6), ("baudRate19200", 7), ("baudRate38400", 8), ("baudRate57600", 9), ("baudRate115200", 10))).clone('baudRate9600')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRS485BaudRate.setStatus('current')
hpnicfOnuRS485DataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("five", 1), ("six", 2), ("seven", 3), ("eight", 4))).clone('eight')).setUnits('bit').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRS485DataBits.setStatus('current')
hpnicfOnuRS485Parity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("mark", 4), ("space", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRS485Parity.setStatus('current')
hpnicfOnuRS485StopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("oneAndHalf", 3))).clone('one')).setUnits('bit').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRS485StopBits.setStatus('current')
hpnicfOnuRS485FlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hardware", 2), ("xonOrxoff", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRS485FlowControl.setStatus('current')
hpnicfOnuRS485TXOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485TXOctets.setStatus('current')
hpnicfOnuRS485RXOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485RXOctets.setStatus('current')
hpnicfOnuRS485TXErrOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485TXErrOctets.setStatus('current')
hpnicfOnuRS485RXErrOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485RXErrOctets.setStatus('current')
hpnicfOnuRS485ResetStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 31, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("counting", 1), ("clear", 2))).clone('counting')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfOnuRS485ResetStatistics.setStatus('current')
hpnicfOnuRS485SessionSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 32), )
if mibBuilder.loadTexts: hpnicfOnuRS485SessionSummaryTable.setStatus('current')
hpnicfOnuRS485SessionSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 32, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuRS485SerialIndex"))
if mibBuilder.loadTexts: hpnicfOnuRS485SessionSummaryEntry.setStatus('current')
hpnicfOnuRS485SessionMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionMaxNum.setStatus('current')
hpnicfOnuRS485SessionNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 32, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionNextIndex.setStatus('current')
hpnicfOnuRS485SessionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33), )
if mibBuilder.loadTexts: hpnicfOnuRS485SessionTable.setStatus('current')
hpnicfOnuRS485SessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuRS485SerialIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuRS485SessionIndex"))
if mibBuilder.loadTexts: hpnicfOnuRS485SessionEntry.setStatus('current')
hpnicfOnuRS485SessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hpnicfOnuRS485SessionIndex.setStatus('current')
hpnicfOnuRS485SessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcpClient", 2), ("tcpServer", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionType.setStatus('current')
hpnicfOnuRS485SessionAddType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionAddType.setStatus('current')
hpnicfOnuRS485SessionRemoteIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionRemoteIP.setStatus('current')
hpnicfOnuRS485SessionRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionRemotePort.setStatus('current')
hpnicfOnuRS485SessionLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionLocalPort.setStatus('current')
hpnicfOnuRS485SessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 33, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionRowStatus.setStatus('current')
hpnicfOnuRS485SessionErrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 34), )
if mibBuilder.loadTexts: hpnicfOnuRS485SessionErrInfoTable.setStatus('current')
hpnicfOnuRS485SessionErrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 34, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuRS485SerialIndex"), (0, "HPN-ICF-EPON-MIB", "hpnicfOnuRS485SessionIndex"))
if mibBuilder.loadTexts: hpnicfOnuRS485SessionErrInfoEntry.setStatus('current')
hpnicfOnuRS485SessionErrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 5, 34, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfOnuRS485SessionErrInfo.setStatus('current')
hpnicfEponBatchOperationBySlotTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 1), )
if mibBuilder.loadTexts: hpnicfEponBatchOperationBySlotTable.setStatus('current')
hpnicfEponBatchOperationBySlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 1, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfEponBatchOperationBySlotIndex"))
if mibBuilder.loadTexts: hpnicfEponBatchOperationBySlotEntry.setStatus('current')
hpnicfEponBatchOperationBySlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfEponBatchOperationBySlotIndex.setStatus('current')
hpnicfEponBatchOperationBySlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 9, 10))).clone(namedValues=NamedValues(("resetUnknown", 1), ("updateDba", 9), ("updateONU", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponBatchOperationBySlotType.setStatus('current')
hpnicfEponBatchOperationBySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("batOpBySlot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponBatchOperationBySlot.setStatus('current')
hpnicfEponBatchOperationBySlotResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponBatchOperationBySlotResult.setStatus('current')
hpnicfEponBatchOperationByOLTTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 2), )
if mibBuilder.loadTexts: hpnicfEponBatchOperationByOLTTable.setStatus('current')
hpnicfEponBatchOperationByOLTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEponBatchOperationByOLTEntry.setStatus('current')
hpnicfEponBatchOperationByOLTType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5))).clone(namedValues=NamedValues(("resetUnknown", 1), ("updateONU", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponBatchOperationByOLTType.setStatus('current')
hpnicfEponBatchOperationByOLT = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("batOpByOlt", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfEponBatchOperationByOLT.setStatus('current')
hpnicfEponBatchOperationByOLTResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponBatchOperationByOLTResult.setStatus('current')
hpnicfOnuFirmwareUpdateByTypeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 3), )
if mibBuilder.loadTexts: hpnicfOnuFirmwareUpdateByTypeTable.setStatus('current')
hpnicfOnuFirmwareUpdateByTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 3, 1), ).setIndexNames((0, "HPN-ICF-EPON-MIB", "hpnicfOnuUpdateByOnuTypeIndex"))
if mibBuilder.loadTexts: hpnicfOnuFirmwareUpdateByTypeEntry.setStatus('current')
hpnicfOnuUpdateByOnuTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfOnuUpdateByOnuTypeIndex.setStatus('current')
hpnicfOnuUpdateByTypeOnuType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuUpdateByTypeOnuType.setStatus('current')
hpnicfOnuUpdateByTypeFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuUpdateByTypeFileName.setStatus('current')
hpnicfOnuUpdateByTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 6, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfOnuUpdateByTypeRowStatus.setStatus('current')
hpnicfEponErrorInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7))
hpnicfEponSoftwareErrorCode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponSoftwareErrorCode.setStatus('current')
hpnicfOamVendorSpecificAlarmCode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfOamVendorSpecificAlarmCode.setStatus('current')
hpnicfEponOnuRegErrorMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponOnuRegErrorMacAddr.setStatus('current')
hpnicfOamEventLogType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfOamEventLogType.setStatus('current')
hpnicfOamEventLogLocation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfOamEventLogLocation.setStatus('current')
hpnicfEponLoopbackPortIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponLoopbackPortIndex.setStatus('current')
hpnicfEponLoopbackPortDescr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponLoopbackPortDescr.setStatus('current')
hpnicfOltPortAlarmLlidMisFrames = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 8), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfOltPortAlarmLlidMisFrames.setStatus('current')
hpnicfOltPortAlarmBer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 9), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfOltPortAlarmBer.setStatus('current')
hpnicfOltPortAlarmFer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 10), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfOltPortAlarmFer.setStatus('current')
hpnicfEponOnuRegSilentMac = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponOnuRegSilentMac.setStatus('current')
hpnicfEponOperationResult = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponOperationResult.setStatus('current')
hpnicfEponOnuLaserState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 7, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("laserAlwaysOn", 2), ("signalDegradation", 3), ("endOfLife", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfEponOnuLaserState.setStatus('current')
hpnicfEponTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8))
hpnicfEponTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0))
hpnicfEponPortAlarmBerTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmBerDirect"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmBer"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmBerThreshold"))
if mibBuilder.loadTexts: hpnicfEponPortAlarmBerTrap.setStatus('current')
hpnicfEponPortAlarmFerTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmFerDirect"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmFer"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmFerThreshold"))
if mibBuilder.loadTexts: hpnicfEponPortAlarmFerTrap.setStatus('current')
hpnicfEponErrorLLIDFrameTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmLlidMisFrames"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmLlidMismatchThreshold"))
if mibBuilder.loadTexts: hpnicfEponErrorLLIDFrameTrap.setStatus('current')
hpnicfEponLoopBackEnableTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponLoopbackPortIndex"), ("HPN-ICF-EPON-MIB", "hpnicfEponLoopbackPortDescr"))
if mibBuilder.loadTexts: hpnicfEponLoopBackEnableTrap.setStatus('current')
hpnicfEponOnuRegistrationErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 5)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponOnuRegErrorMacAddr"))
if mibBuilder.loadTexts: hpnicfEponOnuRegistrationErrTrap.setStatus('current')
hpnicfEponOamDisconnectionTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 6)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOamDisconnectionTrap.setStatus('current')
hpnicfEponEncryptionKeyErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 7)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponEncryptionKeyErrTrap.setStatus('current')
hpnicfEponRemoteStableTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 8)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponRemoteStableTrap.setStatus('current')
hpnicfEponLocalStableTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 9)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponLocalStableTrap.setStatus('current')
hpnicfEponOamVendorSpecificTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 10)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOamVendorSpecificAlarmCode"))
if mibBuilder.loadTexts: hpnicfEponOamVendorSpecificTrap.setStatus('current')
hpnicfEponSoftwareErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 11)).setObjects(("HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswFrameIndex"), ("HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswSlotIndex"), ("HPN-ICF-EPON-MIB", "hpnicfEponSoftwareErrorCode"))
if mibBuilder.loadTexts: hpnicfEponSoftwareErrTrap.setStatus('current')
hpnicfEponPortAlarmBerRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 12)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmBerDirect"))
if mibBuilder.loadTexts: hpnicfEponPortAlarmBerRecoverTrap.setStatus('current')
hpnicfEponPortAlarmFerRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 13)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOltPortAlarmFerDirect"))
if mibBuilder.loadTexts: hpnicfEponPortAlarmFerRecoverTrap.setStatus('current')
hpnicfEponErrorLLIDFrameRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 14)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponErrorLLIDFrameRecoverTrap.setStatus('current')
hpnicfEponLoopBackEnableRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 15)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponLoopBackEnableRecoverTrap.setStatus('current')
hpnicfEponOnuRegistrationErrRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 16)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponOnuRegErrorMacAddr"))
if mibBuilder.loadTexts: hpnicfEponOnuRegistrationErrRecoverTrap.setStatus('current')
hpnicfEponOamDisconnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 17)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOamDisconnectionRecoverTrap.setStatus('current')
hpnicfEponEncryptionKeyErrRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 18)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponEncryptionKeyErrRecoverTrap.setStatus('current')
hpnicfEponRemoteStableRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 19)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponRemoteStableRecoverTrap.setStatus('current')
hpnicfEponLocalStableRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 20)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponLocalStableRecoverTrap.setStatus('current')
hpnicfEponOamVendorSpecificRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 21)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOamVendorSpecificAlarmCode"))
if mibBuilder.loadTexts: hpnicfEponOamVendorSpecificRecoverTrap.setStatus('current')
hpnicfEponSoftwareErrRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 22)).setObjects(("HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswFrameIndex"), ("HPN-ICF-LSW-DEV-ADM-MIB", "hpnicfLswSlotIndex"), ("HPN-ICF-EPON-MIB", "hpnicfEponSoftwareErrorCode"))
if mibBuilder.loadTexts: hpnicfEponSoftwareErrRecoverTrap.setStatus('current')
hpnicfDot3OamThresholdRecoverEvent = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 23)).setObjects(("IF-MIB", "ifIndex"), ("HPN-ICF-EPON-MIB", "hpnicfOamEventLogType"), ("HPN-ICF-EPON-MIB", "hpnicfOamEventLogLocation"))
if mibBuilder.loadTexts: hpnicfDot3OamThresholdRecoverEvent.setStatus('current')
hpnicfDot3OamNonThresholdRecoverEvent = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 24)).setObjects(("IF-MIB", "ifIndex"), ("HPN-ICF-EPON-MIB", "hpnicfOamEventLogType"), ("HPN-ICF-EPON-MIB", "hpnicfOamEventLogLocation"))
if mibBuilder.loadTexts: hpnicfDot3OamNonThresholdRecoverEvent.setStatus('current')
hpnicfEponOnuRegExcessTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 25)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOnuRegExcessTrap.setStatus('current')
hpnicfEponOnuRegExcessRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 26)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOnuRegExcessRecoverTrap.setStatus('current')
hpnicfEponOnuPowerOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 27)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOnuPowerOffTrap.setStatus('current')
hpnicfEponOltSwitchoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 28)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOltSwitchoverTrap.setStatus('current')
hpnicfEponOltDFETrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 29)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOltDFETrap.setStatus('current')
hpnicfEponOltDFERecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 30)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hpnicfEponOltDFERecoverTrap.setStatus('current')
hpnicfEponOnuSilenceTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 31)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponOnuRegSilentMac"))
if mibBuilder.loadTexts: hpnicfEponOnuSilenceTrap.setStatus('current')
hpnicfEponOnuSilenceRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 32)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponOnuRegSilentMac"))
if mibBuilder.loadTexts: hpnicfEponOnuSilenceRecoverTrap.setStatus('current')
hpnicfEponOnuUpdateResultTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 33)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOnuBindMacAddress"), ("HPN-ICF-EPON-MIB", "hpnicfOnuUpdateResult"), ("HPN-ICF-EPON-MIB", "hpnicfOnuRegType"), ("HPN-ICF-EPON-MIB", "hpnicfOnuUpdateFileName"))
if mibBuilder.loadTexts: hpnicfEponOnuUpdateResultTrap.setStatus('current')
hpnicfEponOnuAutoBindTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 34)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOnuBindMacAddress"), ("HPN-ICF-EPON-MIB", "hpnicfEponOperationResult"))
if mibBuilder.loadTexts: hpnicfEponOnuAutoBindTrap.setStatus('current')
hpnicfEponOnuPortStpStateTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 35)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponStpPortIndex"), ("HPN-ICF-EPON-MIB", "hpnicfEponStpPortDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponStpPortState"))
if mibBuilder.loadTexts: hpnicfEponOnuPortStpStateTrap.setStatus('current')
hpnicfEponOnuLaserFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 36)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfEponOnuLaserState"))
if mibBuilder.loadTexts: hpnicfEponOnuLaserFailedTrap.setStatus('current')
hpnicfOnuSmlkSwitchoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 8, 0, 37)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"), ("HPN-ICF-EPON-MIB", "hpnicfOnuSmlkGroupID"), ("HPN-ICF-EPON-MIB", "hpnicfOnuSmlkFirstPonStatus"), ("HPN-ICF-EPON-MIB", "hpnicfOnuSmlkSecondPonStatus"))
if mibBuilder.loadTexts: hpnicfOnuSmlkSwitchoverTrap.setStatus('current')
hpnicfEponStat = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 9))
hpnicfEponStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 9, 1), )
if mibBuilder.loadTexts: hpnicfEponStatTable.setStatus('current')
hpnicfEponStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfEponStatEntry.setStatus('current')
hpnicfEponStatFER = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 9, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponStatFER.setStatus('current')
hpnicfEponStatBER = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 42, 1, 9, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfEponStatBER.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-EPON-MIB", hpnicfEponBatchOperationByOLTEntry=hpnicfEponBatchOperationByOLTEntry, hpnicfEponStatBER=hpnicfEponStatBER, hpnicfOnuQueueBandwidthTable=hpnicfOnuQueueBandwidthTable, hpnicfOnuPhysicalTable=hpnicfOnuPhysicalTable, hpnicfOltPortAlarmBer=hpnicfOltPortAlarmBer, hpnicfEponBatchOperationBySlotIndex=hpnicfEponBatchOperationBySlotIndex, hpnicfEponLocalStableRecoverTrap=hpnicfEponLocalStableRecoverTrap, hpnicfOnuRS485SerialIndex=hpnicfOnuRS485SerialIndex, hpnicfOnuRS485TXErrOctets=hpnicfOnuRS485TXErrOctets, hpnicfEponMonitorCycle=hpnicfEponMonitorCycle, hpnicfOnuSlaMinBandWidthMinVal=hpnicfOnuSlaMinBandWidthMinVal, hpnicfEponOuiEntry=hpnicfEponOuiEntry, hpnicfOltAgcCdrTime=hpnicfOltAgcCdrTime, hpnicfOamEventLogType=hpnicfOamEventLogType, hpnicfEponTrap=hpnicfEponTrap, hpnicfOltDbaDiscovryFrequencyMinVal=hpnicfOltDbaDiscovryFrequencyMinVal, hpnicfEponOnuMan=hpnicfEponOnuMan, hpnicfEponOnuRegSilentMac=hpnicfEponOnuRegSilentMac, hpnicfEponOnuLaserState=hpnicfEponOnuLaserState, hpnicfOnuIgmpSnoopingHostAgingT=hpnicfOnuIgmpSnoopingHostAgingT, hpnicfOnuDbaReportTable=hpnicfOnuDbaReportTable, hpnicfOnuUpdateByTypeRowStatus=hpnicfOnuUpdateByTypeRowStatus, hpnicfEponAutoUpdateSchedStatus=hpnicfEponAutoUpdateSchedStatus, hpnicfEponEncryptionKeyErrTrap=hpnicfEponEncryptionKeyErrTrap, hpnicfEponAutoUpdateFileName=hpnicfEponAutoUpdateFileName, hpnicfOnuUniMacType=hpnicfOnuUniMacType, hpnicfOnuSlaMaxBandWidthMinVal=hpnicfOnuSlaMaxBandWidthMinVal, hpnicfEponMsgLoseNumMinVal=hpnicfEponMsgLoseNumMinVal, hpnicfOltPortAlarmRemoteStableEnabled=hpnicfOltPortAlarmRemoteStableEnabled, hpnicfOnuCountTable=hpnicfOnuCountTable, hpnicfOnuIgmpSnoopingAggLeaveS=hpnicfOnuIgmpSnoopingAggLeaveS, hpnicfEponPortAlarmBerRecoverTrap=hpnicfEponPortAlarmBerRecoverTrap, hpnicfOnuRS485RXErrOctets=hpnicfOnuRS485RXErrOctets, hpnicfEponSysHasEPONBoard=hpnicfEponSysHasEPONBoard, hpnicfEponMulticastAddressList=hpnicfEponMulticastAddressList, hpnicfOltLaserOnTime=hpnicfOltLaserOnTime, hpnicfOnuFirstPonMac=hpnicfOnuFirstPonMac, hpnicfOnuRS485RXOctets=hpnicfOnuRS485RXOctets, hpnicfOnuRS485TXOctets=hpnicfOnuRS485TXOctets, hpnicfEponOnuRegErrorMacAddr=hpnicfEponOnuRegErrorMacAddr, hpnicfEponMonitorCycleMaxVal=hpnicfEponMonitorCycleMaxVal, hpnicfOnuCosToLocalPrecedenceValue=hpnicfOnuCosToLocalPrecedenceValue, hpnicfOnuDot1xAccount=hpnicfOnuDot1xAccount, hpnicfOltPortAlarmFer=hpnicfOltPortAlarmFer, hpnicfOnuSmlkSecondPonRole=hpnicfOnuSmlkSecondPonRole, hpnicfEponLoopbackPortDescr=hpnicfEponLoopbackPortDescr, hpnicfOnuRS485SessionRowStatus=hpnicfOnuRS485SessionRowStatus, hpnicfOltPortAlarmThresholdEntry=hpnicfOltPortAlarmThresholdEntry, hpnicfOnuSmlkSecondPonStatus=hpnicfOnuSmlkSecondPonStatus, hpnicfOltPortAlarmFerThreshold=hpnicfOltPortAlarmFerThreshold, hpnicfOnuLinkTestResultSentFrameNum=hpnicfOnuLinkTestResultSentFrameNum, hpnicfOltOpticalPowerTx=hpnicfOltOpticalPowerTx, hpnicfOnuP2PMaxBurstSize=hpnicfOnuP2PMaxBurstSize, hpnicfOltPortAlarmVendorSpecificEnabled=hpnicfOltPortAlarmVendorSpecificEnabled, hpnicfOnuBindMacAddress=hpnicfOnuBindMacAddress, hpnicfOltHardMajorVersion=hpnicfOltHardMajorVersion, hpnicfEponBatchOperationBySlotType=hpnicfEponBatchOperationBySlotType, hpnicfOnuRegType=hpnicfOnuRegType, hpnicfOnuSmlkFirstPonRole=hpnicfOnuSmlkFirstPonRole, hpnicfOnuDbaReportEntry=hpnicfOnuDbaReportEntry, hpnicfEponOnuPowerOffTrap=hpnicfEponOnuPowerOffTrap, hpnicfOnuLinkTestFrameNumMinVal=hpnicfOnuLinkTestFrameNumMinVal, hpnicfOnuPriorityQueueEntry=hpnicfOnuPriorityQueueEntry, hpnicfOnuChipSetInfoTable=hpnicfOnuChipSetInfoTable, hpnicfEponSlotIndex=hpnicfEponSlotIndex, hpnicfOnuSoftwareVersion=hpnicfOnuSoftwareVersion, hpnicfOnuCountEntry=hpnicfOnuCountEntry, hpnicfOnuMacAddress=hpnicfOnuMacAddress, hpnicfOnuMacIndex=hpnicfOnuMacIndex, hpnicfOnuQueueDirection=hpnicfOnuQueueDirection, hpnicfOnuQueueMaxBandwidth=hpnicfOnuQueueMaxBandwidth, hpnicfOnuFecStatus=hpnicfOnuFecStatus, hpnicfOltPortAlarmRegExcessEnabled=hpnicfOltPortAlarmRegExcessEnabled, hpnicfOnuSmlkSwitchoverTrap=hpnicfOnuSmlkSwitchoverTrap, hpnicfOamEventLogLocation=hpnicfOamEventLogLocation, hpnicfOnuRS485StopBits=hpnicfOnuRS485StopBits, hpnicfOamVendorSpecificAlarmCode=hpnicfOamVendorSpecificAlarmCode, hpnicfEponStatEntry=hpnicfEponStatEntry, hpnicfEponAutoAuthorize=hpnicfEponAutoAuthorize, hpnicfEponOnuTypeManTable=hpnicfEponOnuTypeManTable, hpnicfOnuRS485SessionErrInfoTable=hpnicfOnuRS485SessionErrInfoTable, hpnicfOnuBandWidthTable=hpnicfOnuBandWidthTable, hpnicfEponSysScalarGroup=hpnicfEponSysScalarGroup, hpnicfOltAgcLockTime=hpnicfOltAgcLockTime, hpnicfOltUsingOnuEntry=hpnicfOltUsingOnuEntry, hpnicfOnuP2PShortFrameFirst=hpnicfOnuP2PShortFrameFirst, hpnicfOltDbaDiscoveryLengthMinVal=hpnicfOltDbaDiscoveryLengthMinVal, hpnicfOnuPCBVersion=hpnicfOnuPCBVersion, hpnicfOnuLinkTestVlanPriority=hpnicfOnuLinkTestVlanPriority, hpnicfOnuUpdateByOnuTypeIndex=hpnicfOnuUpdateByOnuTypeIndex, hpnicfEponOnuUpdateResultTrap=hpnicfEponOnuUpdateResultTrap, hpnicfOltPortAlarmLlidMisMinVal=hpnicfOltPortAlarmLlidMisMinVal, hpnicfEponEncryptionUpdateTime=hpnicfEponEncryptionUpdateTime, hpnicfOnuQueueScheduler=hpnicfOnuQueueScheduler, hpnicfEponOltDFERecoverTrap=hpnicfEponOltDFERecoverTrap, hpnicfOnuBandWidthEntry=hpnicfOnuBandWidthEntry, hpnicfEponStpPortDescr=hpnicfEponStpPortDescr, hpnicfOnuSilentTable=hpnicfOnuSilentTable, hpnicfEponBatchOperationMan=hpnicfEponBatchOperationMan, hpnicfOnuSilentMacAddr=hpnicfOnuSilentMacAddr, hpnicfOnuChipSetModel=hpnicfOnuChipSetModel, hpnicfOltPortAlarmBerDirect=hpnicfOltPortAlarmBerDirect, hpnicfEponSysManTable=hpnicfEponSysManTable, hpnicfOltSelfTestResult=hpnicfOltSelfTestResult, hpnicfEponLoopBackEnableTrap=hpnicfEponLoopBackEnableTrap, hpnicfEponAutoBindStatus=hpnicfEponAutoBindStatus, hpnicfOnuSmlkTable=hpnicfOnuSmlkTable, hpnicfOnuDhcpsnoopingOption82=hpnicfOnuDhcpsnoopingOption82, hpnicfEponMulticastVlanId=hpnicfEponMulticastVlanId, hpnicfEponOamDisconnectionRecoverTrap=hpnicfEponOamDisconnectionRecoverTrap, hpnicfEponPortLoopBackAlmEnable=hpnicfEponPortLoopBackAlmEnable, hpnicfOltPortAlarmBerMaxVal=hpnicfOltPortAlarmBerMaxVal, hpnicfOnuRS485SessionMaxNum=hpnicfOnuRS485SessionMaxNum, hpnicfEponMsgTimeOutMaxVal=hpnicfEponMsgTimeOutMaxVal, hpnicfOnuSlaManEntry=hpnicfOnuSlaManEntry, hpnicfOnuBindMacAddrEntry=hpnicfOnuBindMacAddrEntry, hpnicfEponOltMan=hpnicfEponOltMan, hpnicfOnuRS485SessionSummaryEntry=hpnicfOnuRS485SessionSummaryEntry, hpnicfEponMibObjects=hpnicfEponMibObjects, hpnicfOnuP2PHighPriorityFirst=hpnicfOnuP2PHighPriorityFirst, hpnicfOnuBindType=hpnicfOnuBindType, hpnicfEponMsgTimeOutMinVal=hpnicfEponMsgTimeOutMinVal, hpnicfEponBatchOperationByOLTTable=hpnicfEponBatchOperationByOLTTable, hpnicfEponStat=hpnicfEponStat, hpnicfOnuBatteryBackup=hpnicfOnuBatteryBackup, hpnicfEponOltSoftwareErrAlmEnable=hpnicfEponOltSoftwareErrAlmEnable, hpnicfOnuDhcpsnooping=hpnicfOnuDhcpsnooping, hpnicfOnuManageVlanIntfS=hpnicfOnuManageVlanIntfS, hpnicfEponOnuPortStpStateTrap=hpnicfEponOnuPortStpStateTrap, hpnicfOnuSlaMaxBandWidth=hpnicfOnuSlaMaxBandWidth, hpnicfOltPortAlarmBerEnabled=hpnicfOltPortAlarmBerEnabled, hpnicfEponOamDiscoveryTimeout=hpnicfEponOamDiscoveryTimeout, hpnicfEponOnuRegExcessRecoverTrap=hpnicfEponOnuRegExcessRecoverTrap, hpnicfEponOnuTypeManEntry=hpnicfEponOnuTypeManEntry, hpnicfOnuQueueMaxBurstsize=hpnicfOnuQueueMaxBurstsize, hpnicfOltDbaCycleLengthMaxVal=hpnicfOltDbaCycleLengthMaxVal, hpnicfOnuDownstreamQueueNumber=hpnicfOnuDownstreamQueueNumber, hpnicfOnuRS485SessionType=hpnicfOnuRS485SessionType, hpnicfDot3OamThresholdRecoverEvent=hpnicfDot3OamThresholdRecoverEvent, hpnicfEponOnuRegExcessTrap=hpnicfEponOnuRegExcessTrap, hpnicfOnuHostType=hpnicfOnuHostType, hpnicfOnuLlid=hpnicfOnuLlid, hpnicfOnuInfoEntry=hpnicfOnuInfoEntry, hpnicfOnuManageVID=hpnicfOnuManageVID, hpnicfOltPortAlarmOamDisconnectionEnabled=hpnicfOltPortAlarmOamDisconnectionEnabled, hpnicfOnuRS485SessionSummaryTable=hpnicfOnuRS485SessionSummaryTable, hpnicfOnuRS485SessionAddType=hpnicfOnuRS485SessionAddType, hpnicfOltDbaCycleLengthMinVal=hpnicfOltDbaCycleLengthMinVal, hpnicfOnuGEPortNumber=hpnicfOnuGEPortNumber, hpnicfOltPortAlarmLlidMisMaxVal=hpnicfOltPortAlarmLlidMisMaxVal, hpnicfOnuDownStreamShortFrameFirst=hpnicfOnuDownStreamShortFrameFirst, hpnicfOnuPppoe=hpnicfOnuPppoe, hpnicfOltPortAlarmBerMinVal=hpnicfOltPortAlarmBerMinVal, hpnicfEponRemoteStableTrap=hpnicfEponRemoteStableTrap, hpnicfOnuUpdate=hpnicfOnuUpdate, hpnicfEponTrapPrefix=hpnicfEponTrapPrefix, hpnicfEponErrorLLIDFrameRecoverTrap=hpnicfEponErrorLLIDFrameRecoverTrap, hpnicfOltDbaDiscoveryLengthMaxVal=hpnicfOltDbaDiscoveryLengthMaxVal, hpnicfEponAutoUpdateSchedTime=hpnicfEponAutoUpdateSchedTime, hpnicfOnuDownStreamMaxBandWidth=hpnicfOnuDownStreamMaxBandWidth, hpnicfEponOamDisconnectionTrap=hpnicfEponOamDisconnectionTrap, hpnicfOnuQueueBandwidthEntry=hpnicfOnuQueueBandwidthEntry, hpnicfOnuP2PMaxBandWidth=hpnicfOnuP2PMaxBandWidth, hpnicfOltMacAddress=hpnicfOltMacAddress, hpnicfOltUsingOnuTable=hpnicfOltUsingOnuTable, hpnicfOnuRS485DataBits=hpnicfOnuRS485DataBits, hpnicfOnuMaxUpstreamQueuePerPort=hpnicfOnuMaxUpstreamQueuePerPort, hpnicfOltPortAlarmLlidMismatchThreshold=hpnicfOltPortAlarmLlidMismatchThreshold, hpnicfOltDbaEnabledType=hpnicfOltDbaEnabledType, hpnicfOnuSlaFixedPacketSize=hpnicfOnuSlaFixedPacketSize, hpnicfOnuRS485SessionLocalPort=hpnicfOnuRS485SessionLocalPort, hpnicfEponMonitorCycleMinVal=hpnicfEponMonitorCycleMinVal, hpnicfOltPortAlarmLlidMismatchEnabled=hpnicfOltPortAlarmLlidMismatchEnabled, hpnicfEponEncryptionKeyErrRecoverTrap=hpnicfEponEncryptionKeyErrRecoverTrap, hpnicfOnuHardMinorVersion=hpnicfOnuHardMinorVersion, hpnicfOnuChipSetVendorId=hpnicfOnuChipSetVendorId, hpnicfOnuFEPortNumber=hpnicfOnuFEPortNumber, hpnicfOnuLinkTestFrameSize=hpnicfOnuLinkTestFrameSize, hpnicfEponPortAlarmFerTrap=hpnicfEponPortAlarmFerTrap, hpnicfOnuWorkMode=hpnicfOnuWorkMode, hpnicfOnuLinkTestResultMinDelay=hpnicfOnuLinkTestResultMinDelay, hpnicfEponDbaUpdateFileName=hpnicfEponDbaUpdateFileName, hpnicfOnuMcastCtrlHostAgingTime=hpnicfOnuMcastCtrlHostAgingTime, hpnicfOnuEncryptKey=hpnicfOnuEncryptKey, hpnicfOnuSlaMinBandWidthMaxVal=hpnicfOnuSlaMinBandWidthMaxVal, hpnicfOnuFirmwareUpdateByTypeTable=hpnicfOnuFirmwareUpdateByTypeTable, hpnicfEponOnuRegistrationErrTrap=hpnicfEponOnuRegistrationErrTrap, hpnicfOltPortAlarmFerMaxVal=hpnicfOltPortAlarmFerMaxVal, hpnicfEponBatchOperationBySlotResult=hpnicfEponBatchOperationBySlotResult, hpnicfOnuHardMajorVersion=hpnicfOnuHardMajorVersion, hpnicfOnuDownStreamHighPriorityFirst=hpnicfOnuDownStreamHighPriorityFirst, hpnicfOltDbaDiscoveryLength=hpnicfOltDbaDiscoveryLength, hpnicfOltDbaDiscovryFrequency=hpnicfOltDbaDiscovryFrequency, hpnicfEponMulticastControlTable=hpnicfEponMulticastControlTable, hpnicfOnuSlaMinBandWidth=hpnicfOnuSlaMinBandWidth, hpnicfEponStpPortState=hpnicfEponStpPortState, hpnicfOltHardMinorVersion=hpnicfOltHardMinorVersion, hpnicfOnuSlaFixedBandWidth=hpnicfOnuSlaFixedBandWidth, hpnicfOltDbaCycleLength=hpnicfOltDbaCycleLength, hpnicfEponOamVersion=hpnicfEponOamVersion, hpnicfEponAutomaticMode=hpnicfEponAutomaticMode, hpnicfOnuAccessVlan=hpnicfOnuAccessVlan, hpnicfEponBatchOperationByOLTType=hpnicfEponBatchOperationByOLTType, hpnicfEponMsgLoseNum=hpnicfEponMsgLoseNum, hpnicfOnuGrantFifoDep=hpnicfOnuGrantFifoDep, hpnicfOnuSilentEntry=hpnicfOnuSilentEntry, hpnicfOnuSlaMaxBandWidthMaxVal=hpnicfOnuSlaMaxBandWidthMaxVal, hpnicfEponOnuRegistrationErrRecoverTrap=hpnicfEponOnuRegistrationErrRecoverTrap, hpnicfOltDbaUpdateResult=hpnicfOltDbaUpdateResult, hpnicfOnuFirmwareUpdateEntry=hpnicfOnuFirmwareUpdateEntry, hpnicfOnuIpAddressEntry=hpnicfOnuIpAddressEntry, hpnicfEponOnuTypeDescr=hpnicfEponOnuTypeDescr, hpnicfOnuP2PBandWidthPolicy=hpnicfOnuP2PBandWidthPolicy, hpnicfOltLaserOnTimeMaxVal=hpnicfOltLaserOnTimeMaxVal, hpnicfEponLoopBackEnableRecoverTrap=hpnicfEponLoopBackEnableRecoverTrap, hpnicfOnuRS485FlowControl=hpnicfOnuRS485FlowControl, hpnicfEponOnuAutoBindTrap=hpnicfEponOnuAutoBindTrap, hpnicfOnuBindMacAddrTable=hpnicfOnuBindMacAddrTable, hpnicfEponMonitorCycleEnable=hpnicfEponMonitorCycleEnable, hpnicfOnuEncryptMan=hpnicfOnuEncryptMan, hpnicfEponOuiRowStatus=hpnicfEponOuiRowStatus, hpnicfOnuPOTSPortNumber=hpnicfOnuPOTSPortNumber, hpnicfOnuDownStreamBandWidthPolicy=hpnicfOnuDownStreamBandWidthPolicy, hpnicfOnuFirmwareVersion=hpnicfOnuFirmwareVersion, hpnicfOnuRS485SessionErrInfoEntry=hpnicfOnuRS485SessionErrInfoEntry, hpnicfOnuRS485SessionErrInfo=hpnicfOnuRS485SessionErrInfo, hpnicfOnuQueueSize=hpnicfOnuQueueSize, hpnicfOnuSmlkGroupID=hpnicfOnuSmlkGroupID, hpnicfOnuRS485SessionEntry=hpnicfOnuRS485SessionEntry, hpnicfOnuMacAddrInfoEntry=hpnicfOnuMacAddrInfoEntry, hpnicfOnuLinkTestResultRetFrameNum=hpnicfOnuLinkTestResultRetFrameNum, hpnicfOnuSlaPriorityClass=hpnicfOnuSlaPriorityClass, hpnicfEponOuiIndex=hpnicfEponOuiIndex, hpnicfOltPortAlarmFerDirect=hpnicfOltPortAlarmFerDirect, hpnicfOnuPacketManEntry=hpnicfOnuPacketManEntry, hpnicfOnuChipSetRevision=hpnicfOnuChipSetRevision, hpnicfOnuInfoTable=hpnicfOnuInfoTable, hpnicfOnuRS485SessionRemotePort=hpnicfOnuRS485SessionRemotePort, hpnicfOnuFirstPonRegState=hpnicfOnuFirstPonRegState, hpnicfOnuProtocolEntry=hpnicfOnuProtocolEntry, hpnicfOnuLinkTestResultMeanDelay=hpnicfOnuLinkTestResultMeanDelay, hpnicfOnuIgmpSnoopingStatus=hpnicfOnuIgmpSnoopingStatus, hpnicfOnuPriorityQueueBandwidthMinVal=hpnicfOnuPriorityQueueBandwidthMinVal, hpnicfOltFirmMinorVersion=hpnicfOltFirmMinorVersion, hpnicfOltInfoTable=hpnicfOltInfoTable, hpnicfOltPortAlarmBerThreshold=hpnicfOltPortAlarmBerThreshold, hpnicfEponErrorLLIDFrameTrap=hpnicfEponErrorLLIDFrameTrap, hpnicfOltMaxRtt=hpnicfOltMaxRtt, hpnicfOltPortAlarmThresholdTable=hpnicfOltPortAlarmThresholdTable, hpnicfOnuCosToLocalPrecedenceEntry=hpnicfOnuCosToLocalPrecedenceEntry, hpnicfOnuIgmpSnoopingAggReportS=hpnicfOnuIgmpSnoopingAggReportS, hpnicfOnuPriorityTrust=hpnicfOnuPriorityTrust, hpnicfOnuEEPROMVersion=hpnicfOnuEEPROMVersion, hpnicfOnuPriorityQueueBurstsizeMaxVal=hpnicfOnuPriorityQueueBurstsizeMaxVal)
mibBuilder.exportSymbols("HPN-ICF-EPON-MIB", hpnicfOltPortAlarmLlidMisFrames=hpnicfOltPortAlarmLlidMisFrames, hpnicfEponSoftwareErrTrap=hpnicfEponSoftwareErrTrap, hpnicfOnuUpstreamQueueNumber=hpnicfOnuUpstreamQueueNumber, hpnicfOnuFirmwareUpdateTable=hpnicfOnuFirmwareUpdateTable, hpnicfOnuChipSetDesignDate=hpnicfOnuChipSetDesignDate, hpnicfEponOnuSilenceRecoverTrap=hpnicfEponOnuSilenceRecoverTrap, hpnicfOltEnableDiscardPacket=hpnicfOltEnableDiscardPacket, hpnicfOnuCosToLocalPrecedenceTable=hpnicfOnuCosToLocalPrecedenceTable, hpnicfOnuMaxDownstreamQueuePerPort=hpnicfOnuMaxDownstreamQueuePerPort, hpnicfEponAutoUpdateSchedType=hpnicfEponAutoUpdateSchedType, hpnicfEponOnuTypeIndex=hpnicfEponOnuTypeIndex, hpnicfEponOuiIndexNext=hpnicfEponOuiIndexNext, hpnicfOnuSilentTime=hpnicfOnuSilentTime, hpnicfOnuSlaBandWidthStepVal=hpnicfOnuSlaBandWidthStepVal, hpnicfOnuLinkTestResultRetErrFrameNum=hpnicfOnuLinkTestResultRetErrFrameNum, hpnicfOnuMacAddrFlag=hpnicfOnuMacAddrFlag, hpnicfOnuRS485PropertiesEntry=hpnicfOnuRS485PropertiesEntry, hpnicfOnuIpAddressTable=hpnicfOnuIpAddressTable, hpnicfOltWorkMode=hpnicfOltWorkMode, hpnicfEponSoftwareErrorCode=hpnicfEponSoftwareErrorCode, hpnicfEponMsgTimeOut=hpnicfEponMsgTimeOut, hpnicfEponOuiTable=hpnicfEponOuiTable, hpnicfOltPortAlarmFerEnabled=hpnicfOltPortAlarmFerEnabled, hpnicfOnuRtt=hpnicfOnuRtt, hpnicfEponOltDFETrap=hpnicfEponOltDFETrap, hpnicfOnuIpAddressGateway=hpnicfOnuIpAddressGateway, hpnicfEponOperationResult=hpnicfEponOperationResult, hpnicfOnuLinkTestVlanTag=hpnicfOnuLinkTestVlanTag, hpnicfOnuMCtrlFastLeaveSupported=hpnicfOnuMCtrlFastLeaveSupported, hpnicfOnuServiceSupported=hpnicfOnuServiceSupported, hpnicfOnuDhcpallocate=hpnicfOnuDhcpallocate, hpnicfOnuPriorityQueueTable=hpnicfOnuPriorityQueueTable, hpnicfEponLoopbackPortIndex=hpnicfEponLoopbackPortIndex, hpnicfEponMulticastControlEntry=hpnicfEponMulticastControlEntry, hpnicfOnuBridgeMac=hpnicfOnuBridgeMac, hpnicfOnuIpAddressMask=hpnicfOnuIpAddressMask, hpnicfOnuPriorityQueueBurstsizeMinVal=hpnicfOnuPriorityQueueBurstsizeMinVal, hpnicfEponAutoUpdateEntry=hpnicfEponAutoUpdateEntry, hpnicfOnuPriorityQueueSizeMinVal=hpnicfOnuPriorityQueueSizeMinVal, hpnicfOnuRS485BaudRate=hpnicfOnuRS485BaudRate, hpnicfOnuDistance=hpnicfOnuDistance, hpnicfOnuInCRCErrPkts=hpnicfOnuInCRCErrPkts, hpnicfEponRemoteStableRecoverTrap=hpnicfEponRemoteStableRecoverTrap, hpnicfOnuCapabilityEntry=hpnicfOnuCapabilityEntry, hpnicfOnuSysManEntry=hpnicfOnuSysManEntry, hpnicfOltDbaManEntry=hpnicfOltDbaManEntry, hpnicfOnuPortBerStatus=hpnicfOnuPortBerStatus, hpnicfOnuSlaManTable=hpnicfOnuSlaManTable, hpnicfOnuMulticastFastLeaveEnable=hpnicfOnuMulticastFastLeaveEnable, hpnicfOltUsingOnuRowStatus=hpnicfOltUsingOnuRowStatus, hpnicfOnuSecondPonRegState=hpnicfOnuSecondPonRegState, hpnicfOnuSlaDelay=hpnicfOnuSlaDelay, hpnicfOnuLinkTestEntry=hpnicfOnuLinkTestEntry, hpnicfEponStpPortIndex=hpnicfEponStpPortIndex, hpnicfOnuSmlkEntry=hpnicfOnuSmlkEntry, hpnicfEponAutoUpdateRealTimeStatus=hpnicfEponAutoUpdateRealTimeStatus, hpnicfOnuMulticastControlMode=hpnicfOnuMulticastControlMode, hpnicfOltLaserOffTimeMinVal=hpnicfOltLaserOffTimeMinVal, hpnicfEponOnuStpPortTable=hpnicfEponOnuStpPortTable, hpnicfEponAutoUpdateTable=hpnicfEponAutoUpdateTable, hpnicfOnuPhysicalEntry=hpnicfOnuPhysicalEntry, hpnicfOnuDbaReportThreshold=hpnicfOnuDbaReportThreshold, hpnicfOnuRemoteFecStatus=hpnicfOnuRemoteFecStatus, hpnicfOltDbaVersion=hpnicfOltDbaVersion, hpnicfOnuDownStreamMaxBurstSize=hpnicfOnuDownStreamMaxBurstSize, hpnicfOnuPriorityQueueSizeMaxVal=hpnicfOnuPriorityQueueSizeMaxVal, hpnicfEponStatFER=hpnicfEponStatFER, hpnicfEponMsgLoseNumMaxVal=hpnicfEponMsgLoseNumMaxVal, hpnicfOnuLinkTestTable=hpnicfOnuLinkTestTable, hpnicfOnuE1PortsNumber=hpnicfOnuE1PortsNumber, hpnicfOltDbaManTable=hpnicfOltDbaManTable, hpnicfOltPortAlarmRegistrationEnabled=hpnicfOltPortAlarmRegistrationEnabled, hpnicfEponModeSwitch=hpnicfEponModeSwitch, hpnicfEponLocalStableTrap=hpnicfEponLocalStableTrap, hpnicfOltPortAlarmLocalStableEnabled=hpnicfOltPortAlarmLocalStableEnabled, hpnicfOltOpticalPowerRx=hpnicfOltOpticalPowerRx, hpnicfEponSysMan=hpnicfEponSysMan, hpnicfOnuUpdateByTypeOnuType=hpnicfOnuUpdateByTypeOnuType, hpnicfEponSysManEntry=hpnicfEponSysManEntry, hpnicfEponBatchOperationByOLTResult=hpnicfEponBatchOperationByOLTResult, hpnicfEponOnuUpdateFileName=hpnicfEponOnuUpdateFileName, hpnicfEponOnuLaserFailedTrap=hpnicfEponOnuLaserFailedTrap, hpnicfOnuIgmpSnoopingMaxRespT=hpnicfOnuIgmpSnoopingMaxRespT, hpnicfOnuRS485PropertiesTable=hpnicfOnuRS485PropertiesTable, hpnicfEponBatchOperationBySlotTable=hpnicfEponBatchOperationBySlotTable, hpnicfOnuChipSetInfoEntry=hpnicfOnuChipSetInfoEntry, hpnicfOnuLinkTestResultMaxDelay=hpnicfOnuLinkTestResultMaxDelay, hpnicfEponBatchOperationByOLT=hpnicfEponBatchOperationByOLT, hpnicfOnuDbaReportStatus=hpnicfOnuDbaReportStatus, hpnicfEponOnuSilenceTrap=hpnicfEponOnuSilenceTrap, hpnicfEponOltSwitchoverTrap=hpnicfEponOltSwitchoverTrap, hpnicfOnuSecondPonMac=hpnicfOnuSecondPonMac, hpnicfOnuVendorId=hpnicfOnuVendorId, hpnicfOltLaserOffTime=hpnicfOltLaserOffTime, hpnicfEponOnuStpPortEntry=hpnicfEponOnuStpPortEntry, hpnicfOltDbaUpdate=hpnicfOltDbaUpdate, hpnicfOnuOpticalPowerReceivedByOlt=hpnicfOnuOpticalPowerReceivedByOlt, hpnicfOnuDbaReportQueueId=hpnicfOnuDbaReportQueueId, hpnicfEponOnuScalarGroup=hpnicfEponOnuScalarGroup, hpnicfOnuCapabilityTable=hpnicfOnuCapabilityTable, hpnicfOltDbaDiscovryFrequencyMaxVal=hpnicfOltDbaDiscovryFrequencyMaxVal, hpnicfEponOamVendorSpecificTrap=hpnicfEponOamVendorSpecificTrap, hpnicfOnuRS485SessionTable=hpnicfOnuRS485SessionTable, hpnicfOltUsingOnuNum=hpnicfOltUsingOnuNum, hpnicfOnuProtocolTable=hpnicfOnuProtocolTable, hpnicfOltSelfTest=hpnicfOltSelfTest, hpnicfEponOuiValue=hpnicfEponOuiValue, hpnicfOnuIpAddress=hpnicfOnuIpAddress, hpnicfOnuRS485SessionRemoteIP=hpnicfOnuRS485SessionRemoteIP, hpnicfOnuUniUpDownTrapStatus=hpnicfOnuUniUpDownTrapStatus, hpnicfOnuOutDroppedFrames=hpnicfOnuOutDroppedFrames, hpnicfEponPortAlarmFerRecoverTrap=hpnicfEponPortAlarmFerRecoverTrap, hpnicfEponEncryptionNoReplyTimeOut=hpnicfEponEncryptionNoReplyTimeOut, hpnicfOltPortAlarmEncryptionKeyEnabled=hpnicfOltPortAlarmEncryptionKeyEnabled, hpnicfOnuDbaReportQueueSetNumber=hpnicfOnuDbaReportQueueSetNumber, hpnicfOltUsingOnuIfIndex=hpnicfOltUsingOnuIfIndex, hpnicfOnuMacAddrInfoTable=hpnicfOnuMacAddrInfoTable, hpnicfOnuMulticastFilterStatus=hpnicfOnuMulticastFilterStatus, hpnicfOnuDot1xPassword=hpnicfOnuDot1xPassword, hpnicfOnuPriorityQueueBandwidthMaxVal=hpnicfOnuPriorityQueueBandwidthMaxVal, hpnicfOnuQueueId=hpnicfOnuQueueId, hpnicfOnuSmlkFirstPonStatus=hpnicfOnuSmlkFirstPonStatus, hpnicfOnuUpdateFileName=hpnicfOnuUpdateFileName, hpnicfEponSoftwareErrRecoverTrap=hpnicfEponSoftwareErrRecoverTrap, hpnicfEponBatchOperationBySlotEntry=hpnicfEponBatchOperationBySlotEntry, hpnicfOnuSysManTable=hpnicfOnuSysManTable, hpnicfOltMultiCopyBrdCast=hpnicfOltMultiCopyBrdCast, hpnicfOnuFirmwareUpdateByTypeEntry=hpnicfOnuFirmwareUpdateByTypeEntry, hpnicfOltPortAlarmFerMinVal=hpnicfOltPortAlarmFerMinVal, hpnicfOnuUpdateByTypeNextIndex=hpnicfOnuUpdateByTypeNextIndex, hpnicfEponPortAlarmBerTrap=hpnicfEponPortAlarmBerTrap, hpnicfOnuDot1xTable=hpnicfOnuDot1xTable, hpnicfEponMulticastStatus=hpnicfEponMulticastStatus, hpnicfOnuLinkTestFrameNum=hpnicfOnuLinkTestFrameNum, hpnicfOltSysManEntry=hpnicfOltSysManEntry, hpnicfOnuRS485Parity=hpnicfOnuRS485Parity, hpnicfOnuQueuePolicyStatus=hpnicfOnuQueuePolicyStatus, hpnicfOltLaserOnTimeMinVal=hpnicfOltLaserOnTimeMinVal, hpnicfOnuReAuthorize=hpnicfOnuReAuthorize, hpnicfOnuLinkTestDelay=hpnicfOnuLinkTestDelay, hpnicfOnuIgmpSnoopingRouterAgingT=hpnicfOnuIgmpSnoopingRouterAgingT, hpnicfOnuLaserOffTime=hpnicfOnuLaserOffTime, hpnicfOltInfoEntry=hpnicfOltInfoEntry, hpnicfEponOuiIndexNextTable=hpnicfEponOuiIndexNextTable, hpnicfOnuLaserOnTime=hpnicfOnuLaserOnTime, hpnicfEponOuiIndexNextEntry=hpnicfEponOuiIndexNextEntry, hpnicfEponOamVendorSpecificRecoverTrap=hpnicfEponOamVendorSpecificRecoverTrap, hpnicfOnuLinkTestFrameNumMaxVal=hpnicfOnuLinkTestFrameNumMaxVal, hpnicfEponFileName=hpnicfEponFileName, hpnicfOnuIgspFastLeaveSupported=hpnicfOnuIgspFastLeaveSupported, hpnicfOltSysManTable=hpnicfOltSysManTable, hpnicfOnuPacketManTable=hpnicfOnuPacketManTable, hpnicfOnuRS485ResetStatistics=hpnicfOnuRS485ResetStatistics, hpnicfOnuLinkTestVlanTagID=hpnicfOnuLinkTestVlanTagID, hpnicfOnuRS485SessionNextIndex=hpnicfOnuRS485SessionNextIndex, hpnicfOltLaserOffTimeMaxVal=hpnicfOltLaserOffTimeMaxVal, hpnicfOnuUpdateResult=hpnicfOnuUpdateResult, hpnicfOltPortAlarmDFEEnabled=hpnicfOltPortAlarmDFEEnabled, hpnicfOnuStpStatus=hpnicfOnuStpStatus, hpnicfOnuCosToLocalPrecedenceCosIndex=hpnicfOnuCosToLocalPrecedenceCosIndex, PYSNMP_MODULE_ID=hpnicfEponMibObjects, hpnicfOnuUpdateByTypeFileName=hpnicfOnuUpdateByTypeFileName, hpnicfEponBatchOperationBySlot=hpnicfEponBatchOperationBySlot, hpnicfOnuPortIsolateEnable=hpnicfOnuPortIsolateEnable, hpnicfEponStatTable=hpnicfEponStatTable, hpnicfOnuReset=hpnicfOnuReset, hpnicfEponErrorInfo=hpnicfEponErrorInfo, hpnicfOltFirmMajorVersion=hpnicfOltFirmMajorVersion, hpnicfOnuRS485SessionIndex=hpnicfOnuRS485SessionIndex, hpnicfOnuDot1xEntry=hpnicfOnuDot1xEntry, hpnicfDot3OamNonThresholdRecoverEvent=hpnicfDot3OamNonThresholdRecoverEvent)
