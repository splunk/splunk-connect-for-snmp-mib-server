#
# PySNMP MIB module H3C-DVPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-DVPN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:08:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Unsigned32, ObjectIdentity, Bits, ModuleIdentity, IpAddress, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, Integer32, TimeTicks, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "Bits", "ModuleIdentity", "IpAddress", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "Integer32", "TimeTicks", "Counter32", "MibIdentifier")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
h3cDvpn = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57))
if mibBuilder.loadTexts: h3cDvpn.setLastUpdated('200507011936Z')
if mibBuilder.loadTexts: h3cDvpn.setOrganization('Huawei 3Com Technologies Co., Ltd.')
class DvpnAlgorithmSuite(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("dvpnDesCbcMd5PreShaModp768", 1), ("dvpnDesCbcMd5PreShaModp1024", 2), ("dvpnDesCbcSha1PreShaModp768", 3), ("dvpnDesCbcSha1PreShaModp1024", 4), ("dvpn3DesCbcMd5PreShaModp768", 5), ("dvpn3DesCbcMd5PreShaModp1024", 6), ("dvpn3DesCbcSha1PreShaModp768", 7), ("dvpn3DesCbcSha1PreShaModp1024", 8), ("dvpnAesCbcMd5PreShaModp768", 9), ("dvpnAesCbcMd5PreShaModp1024", 10), ("dvpnAesCbcSHA1Sha1PreShaModp768", 11), ("dvpnAesCbcSHA1Sha1PreShaModp1024", 12), ("dvpnAlgorithmNone", 13))

class DvpnCommunicateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("clientToserver", 1), ("serverToclient", 2), ("serverToserver", 3), ("clientToclient", 4))

h3cDvpnMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1))
h3cDvpnMibGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1))
h3cDvpnMibTableTroop = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2))
h3cDvpnMibNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 3))
h3cDvpnMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4))
h3cDvpnServiceEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnServiceEnable.setStatus('current')
h3cDvpnClassNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnClassNumber.setStatus('current')
h3cDvpnClientNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnClientNumber.setStatus('current')
h3cDvpnMapAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 180)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnMapAgeTime.setStatus('current')
h3cDvpnClientRegisterInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 60)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnClientRegisterInterval.setStatus('current')
h3cDvpnClientRegisterDumb = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnClientRegisterDumb.setStatus('current')
h3cDvpnClientRegisterRetry = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnClientRegisterRetry.setStatus('current')
h3cDvpnInputPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnInputPkt.setStatus('current')
h3cDvpnDropPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDropPkt.setStatus('current')
h3cDvpnOutputPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnOutputPkt.setStatus('current')
h3cDvpnOutputErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnOutputErrorPkt.setStatus('current')
h3cDvpnEncryptErrorPkt = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnEncryptErrorPkt.setStatus('current')
h3cDvpnCurrentDeviceRole = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("server", 2), ("client", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnCurrentDeviceRole.setStatus('current')
h3cDvpnDomainNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainNumber.setStatus('current')
h3cDvpnMapNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapNumber.setStatus('current')
h3cDvpnSessionNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionNumber.setStatus('current')
h3cDvpnServerPreSharedKey = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnServerPreSharedKey.setStatus('current')
h3cDvpnMapTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnMapTrapEnable.setStatus('current')
h3cDvpnSessionTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnSessionTrapEnable.setStatus('current')
h3cDvpnVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version2", 1), ("version3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnVersion.setStatus('current')
h3cDvpnClearDomainAllConection = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnClearDomainAllConection.setStatus('current')
h3cDvpnClearDvpnStaInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnClearDvpnStaInfo.setStatus('current')
h3cDvpnTotalRedirectNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnTotalRedirectNumber.setStatus('current')
h3cDvpnGlobalAuthenClientType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnGlobalAuthenClientType.setStatus('current')
h3cDvpnGlobalUserDefAAADomain = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnGlobalUserDefAAADomain.setStatus('current')
h3cDvpnLocalDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnLocalDeviceId.setStatus('current')
h3cDvpnSessionHisAgeTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnSessionHisAgeTime.setStatus('current')
h3cDvpnSessionHisReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnSessionHisReset.setStatus('current')
h3cDvpnPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1), )
if mibBuilder.loadTexts: h3cDvpnPolicyTable.setStatus('current')
h3cDvpnPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1), ).setIndexNames((0, "H3C-DVPN-MIB", "h3cDvpnPolicyName"))
if mibBuilder.loadTexts: h3cDvpnPolicyEntry.setStatus('current')
h3cDvpnPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: h3cDvpnPolicyName.setStatus('current')
h3cDvpnPoAuthenClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoAuthenClientType.setStatus('current')
h3cDvpnPoSessionAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 3), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoSessionAlgorithmSuite.setStatus('current')
h3cDvpnPoSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoSessionIdleTime.setStatus('current')
h3cDvpnPoSessionKeepTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoSessionKeepTime.setStatus('current')
h3cDvpnPoSessionSetupInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoSessionSetupInterval.setStatus('current')
h3cDvpnPoDataAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 7), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoDataAlgorithmSuite.setStatus('current')
h3cDvpnPoSaSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(180, 604800)).clone(3600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoSaSeconds.setStatus('current')
h3cDvpnPoUserDefAAADomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoUserDefAAADomain.setStatus('current')
h3cDvpnPoRefTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnPoRefTimes.setStatus('current')
h3cDvpnPoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnPoRowStatus.setStatus('current')
h3cDvpnDomainInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2), )
if mibBuilder.loadTexts: h3cDvpnDomainInfoTable.setStatus('current')
h3cDvpnDomainInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1), ).setIndexNames((0, "H3C-DVPN-MIB", "h3cDvpnDomainID"))
if mibBuilder.loadTexts: h3cDvpnDomainInfoEntry.setStatus('current')
h3cDvpnDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: h3cDvpnDomainID.setStatus('current')
h3cDvpnDomainSessionNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainSessionNum.setStatus('current')
h3cDvpnDomainRedirectNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainRedirectNum.setStatus('current')
h3cDvpnDomainInputPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainInputPkt.setStatus('current')
h3cDvpnDomainDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainDropPkt.setStatus('current')
h3cDvpnDomainOutputPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainOutputPkt.setStatus('current')
h3cDvpnDomainOutputErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainOutputErrorPkt.setStatus('current')
h3cDvpnDomainEncryptErrorPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnDomainEncryptErrorPkt.setStatus('current')
h3cDvpnClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3), )
if mibBuilder.loadTexts: h3cDvpnClassTable.setStatus('current')
h3cDvpnClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1), ).setIndexNames((0, "H3C-DVPN-MIB", "h3cDvpnClassName"))
if mibBuilder.loadTexts: h3cDvpnClassEntry.setStatus('current')
h3cDvpnClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: h3cDvpnClassName.setStatus('current')
h3cDvpnClServerPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClServerPublicIpType.setStatus('current')
h3cDvpnClServerPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClServerPublicIp.setStatus('current')
h3cDvpnClServerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClServerPriIpType.setStatus('current')
h3cDvpnClServerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClServerPriIp.setStatus('current')
h3cDvpnClAlgorithmSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 6), DvpnAlgorithmSuite().clone('dvpnDesCbcMd5PreShaModp768')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClAlgorithmSuite.setStatus('current')
h3cDvpnClAuthenServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("preShareKey", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClAuthenServerType.setStatus('current')
h3cDvpnClPreShareKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClPreShareKey.setStatus('current')
h3cDvpnClUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClUserName.setStatus('current')
h3cDvpnClPwdEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simple", 1), ("cipher", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClPwdEncrypted.setStatus('current')
h3cDvpnClPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 11), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClPasswd.setStatus('current')
h3cDvpnClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cDvpnClassRowStatus.setStatus('current')
h3cDvpnTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4), )
if mibBuilder.loadTexts: h3cDvpnTunnelTable.setStatus('current')
h3cDvpnTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cDvpnTunnelEntry.setStatus('current')
h3cDvpnTunnelInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2))).clone('client')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnTunnelInterfaceType.setStatus('current')
h3cDvpnTunnelAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnTunnelAcl.setStatus('current')
h3cDvpnTunnelClientRegType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undistributed", 1), ("forward", 2), ("undistributedandforward", 3), ("normal", 4))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnTunnelClientRegType.setStatus('current')
h3cDvpnTunnelDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnTunnelDvpnId.setStatus('current')
h3cDvpnTunnelPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnTunnelPolicy.setStatus('current')
h3cDvpnTunnelClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cDvpnTunnelClass.setStatus('current')
h3cDvpnMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5), )
if mibBuilder.loadTexts: h3cDvpnMapTable.setStatus('current')
h3cDvpnMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1), ).setIndexNames((0, "H3C-DVPN-MIB", "h3cDvpnMapIndex"))
if mibBuilder.loadTexts: h3cDvpnMapEntry.setStatus('current')
h3cDvpnMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDvpnMapIndex.setStatus('current')
h3cDvpnMapPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapPeerDeviceId.setStatus('current')
h3cDvpnMapDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapDvpnId.setStatus('current')
h3cDvpnMapBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapBuildTime.setStatus('current')
h3cDvpnMapPeerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapPeerPriIpType.setStatus('current')
h3cDvpnMapPeerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapPeerPriIp.setStatus('current')
h3cDvpnMapPeerPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapPeerPublicIpType.setStatus('current')
h3cDvpnMapPeerPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapPeerPublicIp.setStatus('current')
h3cDvpnMapLocalPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapLocalPriIpType.setStatus('current')
h3cDvpnMapLocalPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapLocalPriIp.setStatus('current')
h3cDvpnMapLocalPublicIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapLocalPublicIpType.setStatus('current')
h3cDvpnMapLocalPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapLocalPublicIp.setStatus('current')
h3cDvpnMapUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapUserName.setStatus('current')
h3cDvpnMapUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapUdpPort.setStatus('current')
h3cDvpnMapControlId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapControlId.setStatus('current')
h3cDvpnMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 16), DvpnCommunicateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapType.setStatus('current')
h3cDvpnMapState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("mapClientInit", 1), ("mapClientBegin", 2), ("mapClientAlgreq", 3), ("mapClientKexReq", 4), ("mapClientAuthenReq", 5), ("mapClientConfigReq", 6), ("mapClientReq", 7), ("mapClientSuccess", 8), ("mapServerBegin", 9), ("mapServerAlgorithm", 10), ("mapServerKexInit", 11), ("mapServerAuthenInit", 12), ("mapServerConfigInit", 13), ("mapServerInit", 14), ("mapServerFinished", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnMapState.setStatus('current')
h3cDvpnSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6), )
if mibBuilder.loadTexts: h3cDvpnSessionTable.setStatus('current')
h3cDvpnSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1), ).setIndexNames((0, "H3C-DVPN-MIB", "h3cDvpnSessionDvpnId"), (0, "H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIpType"), (0, "H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIp"))
if mibBuilder.loadTexts: h3cDvpnSessionEntry.setStatus('current')
h3cDvpnSessionDvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDvpnSessionDvpnId.setStatus('current')
h3cDvpnSessionPeerPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDvpnSessionPeerPriIpType.setStatus('current')
h3cDvpnSessionPeerPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDvpnSessionPeerPriIp.setStatus('current')
h3cDvpnSessionPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionPeerDeviceId.setStatus('current')
h3cDvpnSessionBuildTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionBuildTime.setStatus('current')
h3cDvpnSessionPeerPubIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionPeerPubIpType.setStatus('current')
h3cDvpnSessionPeerPubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionPeerPubIp.setStatus('current')
h3cDvpnSessionLocalPubIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionLocalPubIpType.setStatus('current')
h3cDvpnSessionLocalPubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 9), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionLocalPubIp.setStatus('current')
h3cDvpnSessionLocalPriIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionLocalPriIpType.setStatus('current')
h3cDvpnSessionLocalPriIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionLocalPriIp.setStatus('current')
h3cDvpnSessionPeerUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionPeerUdpPort.setStatus('current')
h3cDvpnSessionInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionInitiator.setStatus('current')
h3cDvpnSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionUserName.setStatus('current')
h3cDvpnSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("sessionSetupInit", 1), ("sessionSetupReq", 2), ("sessionSetupSuccess", 3), ("sessionRekeyReq", 4), ("sessionRekeyRep", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionState.setStatus('current')
h3cDvpnSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 16), DvpnCommunicateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionType.setStatus('current')
h3cDvpnSessionPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 6, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("router", 1), ("pcClient", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionPeerType.setStatus('current')
h3cDvpnSessionHisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7), )
if mibBuilder.loadTexts: h3cDvpnSessionHisTable.setStatus('current')
h3cDvpnSessionHisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1), ).setIndexNames((0, "H3C-DVPN-MIB", "h3cDvpnSessionHisDvpnID"), (0, "H3C-DVPN-MIB", "h3cDvpnSessionHisPeerPriIPType"), (0, "H3C-DVPN-MIB", "h3cDvpnSessionHisPeerPriIP"))
if mibBuilder.loadTexts: h3cDvpnSessionHisEntry.setStatus('current')
h3cDvpnSessionHisDvpnID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: h3cDvpnSessionHisDvpnID.setStatus('current')
h3cDvpnSessionHisPeerPriIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisPeerPriIPType.setStatus('current')
h3cDvpnSessionHisPeerPriIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: h3cDvpnSessionHisPeerPriIP.setStatus('current')
h3cDvpnSessionHisSendPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisSendPkt.setStatus('current')
h3cDvpnSessionHisRcvPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisRcvPkt.setStatus('current')
h3cDvpnSessionHisOnlineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisOnlineNumber.setStatus('current')
h3cDvpnSessionHisFirstUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisFirstUpTime.setStatus('current')
h3cDvpnSessionHisLastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisLastUpTime.setStatus('current')
h3cDvpnSessionHisLastDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisLastDownTime.setStatus('current')
h3cDvpnSessionHisOnlineFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisOnlineFlag.setStatus('current')
h3cDvpnSessionHisPeerDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 2, 7, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cDvpnSessionHisPeerDeviceId.setStatus('current')
h3cDvpnNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 3, 0))
h3cDvpnSessionBuildNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 3, 0, 1)).setObjects(("H3C-DVPN-MIB", "h3cDvpnSessionDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnLocalDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPriIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPubIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPubIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPubIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPubIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerUdpPort"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerType"), ("H3C-DVPN-MIB", "h3cDvpnSessionUserName"))
if mibBuilder.loadTexts: h3cDvpnSessionBuildNotification.setStatus('current')
h3cDvpnSessionDelNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 3, 0, 2)).setObjects(("H3C-DVPN-MIB", "h3cDvpnSessionDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnLocalDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPriIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPubIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPubIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPubIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPubIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerUdpPort"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerType"), ("H3C-DVPN-MIB", "h3cDvpnSessionUserName"))
if mibBuilder.loadTexts: h3cDvpnSessionDelNotification.setStatus('current')
h3cDvpnMapBuildNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 3, 0, 3)).setObjects(("H3C-DVPN-MIB", "h3cDvpnMapIndex"), ("H3C-DVPN-MIB", "h3cDvpnMapDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnLocalDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPriIp"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnMapUserName"))
if mibBuilder.loadTexts: h3cDvpnMapBuildNotification.setStatus('current')
h3cDvpnMapDelNotification = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 3, 0, 4)).setObjects(("H3C-DVPN-MIB", "h3cDvpnMapIndex"), ("H3C-DVPN-MIB", "h3cDvpnMapDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnLocalDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPriIp"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnMapUserName"))
if mibBuilder.loadTexts: h3cDvpnMapDelNotification.setStatus('current')
h3cDvpnMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 1))
h3cDvpnMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 1, 1)).setObjects(("H3C-DVPN-MIB", "h3cDvpnGlobalGroup"), ("H3C-DVPN-MIB", "h3cDvpnDomainInfoGroup"), ("H3C-DVPN-MIB", "h3cDvpnPolicyGroup"), ("H3C-DVPN-MIB", "h3cDvpnClassGroup"), ("H3C-DVPN-MIB", "h3cDvpnTunnelGroup"), ("H3C-DVPN-MIB", "h3cDvpnMapGroup"), ("H3C-DVPN-MIB", "h3cDvpnSessionGroup"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisGroup"), ("H3C-DVPN-MIB", "h3cDvpnNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnMibCompliance = h3cDvpnMibCompliance.setStatus('current')
h3cDvpnMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2))
h3cDvpnGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 1)).setObjects(("H3C-DVPN-MIB", "h3cDvpnServiceEnable"), ("H3C-DVPN-MIB", "h3cDvpnClassNumber"), ("H3C-DVPN-MIB", "h3cDvpnClientNumber"), ("H3C-DVPN-MIB", "h3cDvpnMapAgeTime"), ("H3C-DVPN-MIB", "h3cDvpnClientRegisterInterval"), ("H3C-DVPN-MIB", "h3cDvpnClientRegisterDumb"), ("H3C-DVPN-MIB", "h3cDvpnClientRegisterRetry"), ("H3C-DVPN-MIB", "h3cDvpnInputPkt"), ("H3C-DVPN-MIB", "h3cDvpnDropPkt"), ("H3C-DVPN-MIB", "h3cDvpnOutputPkt"), ("H3C-DVPN-MIB", "h3cDvpnOutputErrorPkt"), ("H3C-DVPN-MIB", "h3cDvpnEncryptErrorPkt"), ("H3C-DVPN-MIB", "h3cDvpnCurrentDeviceRole"), ("H3C-DVPN-MIB", "h3cDvpnDomainNumber"), ("H3C-DVPN-MIB", "h3cDvpnMapNumber"), ("H3C-DVPN-MIB", "h3cDvpnSessionNumber"), ("H3C-DVPN-MIB", "h3cDvpnServerPreSharedKey"), ("H3C-DVPN-MIB", "h3cDvpnMapTrapEnable"), ("H3C-DVPN-MIB", "h3cDvpnSessionTrapEnable"), ("H3C-DVPN-MIB", "h3cDvpnVersion"), ("H3C-DVPN-MIB", "h3cDvpnClearDomainAllConection"), ("H3C-DVPN-MIB", "h3cDvpnClearDvpnStaInfo"), ("H3C-DVPN-MIB", "h3cDvpnTotalRedirectNumber"), ("H3C-DVPN-MIB", "h3cDvpnGlobalAuthenClientType"), ("H3C-DVPN-MIB", "h3cDvpnGlobalUserDefAAADomain"), ("H3C-DVPN-MIB", "h3cDvpnLocalDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisAgeTime"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnGlobalGroup = h3cDvpnGlobalGroup.setStatus('current')
h3cDvpnPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 2)).setObjects(("H3C-DVPN-MIB", "h3cDvpnPoAuthenClientType"), ("H3C-DVPN-MIB", "h3cDvpnPoSessionAlgorithmSuite"), ("H3C-DVPN-MIB", "h3cDvpnPoSessionIdleTime"), ("H3C-DVPN-MIB", "h3cDvpnPoSessionKeepTime"), ("H3C-DVPN-MIB", "h3cDvpnPoSessionSetupInterval"), ("H3C-DVPN-MIB", "h3cDvpnPoDataAlgorithmSuite"), ("H3C-DVPN-MIB", "h3cDvpnPoSaSeconds"), ("H3C-DVPN-MIB", "h3cDvpnPoUserDefAAADomain"), ("H3C-DVPN-MIB", "h3cDvpnPoRefTimes"), ("H3C-DVPN-MIB", "h3cDvpnPoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnPolicyGroup = h3cDvpnPolicyGroup.setStatus('current')
h3cDvpnDomainInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 3)).setObjects(("H3C-DVPN-MIB", "h3cDvpnDomainSessionNum"), ("H3C-DVPN-MIB", "h3cDvpnDomainRedirectNum"), ("H3C-DVPN-MIB", "h3cDvpnDomainInputPkt"), ("H3C-DVPN-MIB", "h3cDvpnDomainDropPkt"), ("H3C-DVPN-MIB", "h3cDvpnDomainOutputPkt"), ("H3C-DVPN-MIB", "h3cDvpnDomainOutputErrorPkt"), ("H3C-DVPN-MIB", "h3cDvpnDomainEncryptErrorPkt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnDomainInfoGroup = h3cDvpnDomainInfoGroup.setStatus('current')
h3cDvpnClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 4)).setObjects(("H3C-DVPN-MIB", "h3cDvpnClServerPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnClServerPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnClServerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnClServerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnClAlgorithmSuite"), ("H3C-DVPN-MIB", "h3cDvpnClAuthenServerType"), ("H3C-DVPN-MIB", "h3cDvpnClPreShareKey"), ("H3C-DVPN-MIB", "h3cDvpnClUserName"), ("H3C-DVPN-MIB", "h3cDvpnClPwdEncrypted"), ("H3C-DVPN-MIB", "h3cDvpnClPasswd"), ("H3C-DVPN-MIB", "h3cDvpnClassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnClassGroup = h3cDvpnClassGroup.setStatus('current')
h3cDvpnTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 5)).setObjects(("H3C-DVPN-MIB", "h3cDvpnTunnelInterfaceType"), ("H3C-DVPN-MIB", "h3cDvpnTunnelAcl"), ("H3C-DVPN-MIB", "h3cDvpnTunnelClientRegType"), ("H3C-DVPN-MIB", "h3cDvpnTunnelDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnTunnelPolicy"), ("H3C-DVPN-MIB", "h3cDvpnTunnelClass"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnTunnelGroup = h3cDvpnTunnelGroup.setStatus('current')
h3cDvpnMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 6)).setObjects(("H3C-DVPN-MIB", "h3cDvpnMapIndex"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnMapDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnMapBuildTime"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapPeerPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPriIp"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPublicIpType"), ("H3C-DVPN-MIB", "h3cDvpnMapLocalPublicIp"), ("H3C-DVPN-MIB", "h3cDvpnMapUserName"), ("H3C-DVPN-MIB", "h3cDvpnMapUdpPort"), ("H3C-DVPN-MIB", "h3cDvpnMapControlId"), ("H3C-DVPN-MIB", "h3cDvpnMapType"), ("H3C-DVPN-MIB", "h3cDvpnMapState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnMapGroup = h3cDvpnMapGroup.setStatus('current')
h3cDvpnSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 7)).setObjects(("H3C-DVPN-MIB", "h3cDvpnSessionDvpnId"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerDeviceId"), ("H3C-DVPN-MIB", "h3cDvpnSessionBuildTime"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPubIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPubIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerPriIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPubIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPubIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPriIpType"), ("H3C-DVPN-MIB", "h3cDvpnSessionLocalPriIp"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerUdpPort"), ("H3C-DVPN-MIB", "h3cDvpnSessionInitiator"), ("H3C-DVPN-MIB", "h3cDvpnSessionUserName"), ("H3C-DVPN-MIB", "h3cDvpnSessionState"), ("H3C-DVPN-MIB", "h3cDvpnSessionType"), ("H3C-DVPN-MIB", "h3cDvpnSessionPeerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnSessionGroup = h3cDvpnSessionGroup.setStatus('current')
h3cDvpnSessionHisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 8)).setObjects(("H3C-DVPN-MIB", "h3cDvpnSessionHisPeerPriIPType"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisSendPkt"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisRcvPkt"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisOnlineNumber"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisFirstUpTime"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisLastUpTime"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisLastDownTime"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisOnlineFlag"), ("H3C-DVPN-MIB", "h3cDvpnSessionHisPeerDeviceId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnSessionHisGroup = h3cDvpnSessionHisGroup.setStatus('current')
h3cDvpnNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 57, 1, 4, 2, 9)).setObjects(("H3C-DVPN-MIB", "h3cDvpnSessionBuildNotification"), ("H3C-DVPN-MIB", "h3cDvpnSessionDelNotification"), ("H3C-DVPN-MIB", "h3cDvpnMapBuildNotification"), ("H3C-DVPN-MIB", "h3cDvpnMapDelNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cDvpnNotificationGroup = h3cDvpnNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("H3C-DVPN-MIB", h3cDvpnInputPkt=h3cDvpnInputPkt, PYSNMP_MODULE_ID=h3cDvpn, h3cDvpnSessionPeerPriIp=h3cDvpnSessionPeerPriIp, h3cDvpnSessionPeerType=h3cDvpnSessionPeerType, h3cDvpnMapUserName=h3cDvpnMapUserName, h3cDvpnPoSaSeconds=h3cDvpnPoSaSeconds, h3cDvpnDomainInfoTable=h3cDvpnDomainInfoTable, h3cDvpnDomainOutputPkt=h3cDvpnDomainOutputPkt, h3cDvpnTunnelTable=h3cDvpnTunnelTable, h3cDvpnMapPeerDeviceId=h3cDvpnMapPeerDeviceId, h3cDvpnMibCompliances=h3cDvpnMibCompliances, h3cDvpnClUserName=h3cDvpnClUserName, h3cDvpnMapUdpPort=h3cDvpnMapUdpPort, h3cDvpnPoDataAlgorithmSuite=h3cDvpnPoDataAlgorithmSuite, h3cDvpnDomainInfoGroup=h3cDvpnDomainInfoGroup, h3cDvpnSessionHisAgeTime=h3cDvpnSessionHisAgeTime, h3cDvpnMapTable=h3cDvpnMapTable, h3cDvpnNotification=h3cDvpnNotification, h3cDvpnClServerPublicIpType=h3cDvpnClServerPublicIpType, h3cDvpnSessionHisReset=h3cDvpnSessionHisReset, h3cDvpnMibNotification=h3cDvpnMibNotification, h3cDvpnSessionType=h3cDvpnSessionType, h3cDvpnSessionTrapEnable=h3cDvpnSessionTrapEnable, h3cDvpnSessionDelNotification=h3cDvpnSessionDelNotification, h3cDvpnTunnelClass=h3cDvpnTunnelClass, h3cDvpnDomainDropPkt=h3cDvpnDomainDropPkt, h3cDvpnSessionTable=h3cDvpnSessionTable, h3cDvpnSessionPeerUdpPort=h3cDvpnSessionPeerUdpPort, h3cDvpnMapControlId=h3cDvpnMapControlId, h3cDvpnSessionPeerPubIpType=h3cDvpnSessionPeerPubIpType, h3cDvpnSessionHisOnlineFlag=h3cDvpnSessionHisOnlineFlag, h3cDvpnSessionInitiator=h3cDvpnSessionInitiator, h3cDvpnSessionGroup=h3cDvpnSessionGroup, h3cDvpnClientNumber=h3cDvpnClientNumber, h3cDvpnClAlgorithmSuite=h3cDvpnClAlgorithmSuite, h3cDvpnDomainInputPkt=h3cDvpnDomainInputPkt, h3cDvpnClearDomainAllConection=h3cDvpnClearDomainAllConection, h3cDvpnMapDelNotification=h3cDvpnMapDelNotification, h3cDvpnSessionHisGroup=h3cDvpnSessionHisGroup, h3cDvpnPoSessionAlgorithmSuite=h3cDvpnPoSessionAlgorithmSuite, h3cDvpnMapPeerPublicIp=h3cDvpnMapPeerPublicIp, h3cDvpnPolicyName=h3cDvpnPolicyName, h3cDvpnPoUserDefAAADomain=h3cDvpnPoUserDefAAADomain, h3cDvpnSessionBuildNotification=h3cDvpnSessionBuildNotification, h3cDvpnSessionHisLastUpTime=h3cDvpnSessionHisLastUpTime, h3cDvpnMapDvpnId=h3cDvpnMapDvpnId, h3cDvpnMapPeerPublicIpType=h3cDvpnMapPeerPublicIpType, h3cDvpnServerPreSharedKey=h3cDvpnServerPreSharedKey, h3cDvpnMapLocalPublicIpType=h3cDvpnMapLocalPublicIpType, h3cDvpnSessionHisTable=h3cDvpnSessionHisTable, h3cDvpnSessionState=h3cDvpnSessionState, h3cDvpnPoSessionKeepTime=h3cDvpnPoSessionKeepTime, h3cDvpnClPwdEncrypted=h3cDvpnClPwdEncrypted, h3cDvpnPolicyGroup=h3cDvpnPolicyGroup, h3cDvpnMapGroup=h3cDvpnMapGroup, h3cDvpnTunnelClientRegType=h3cDvpnTunnelClientRegType, h3cDvpnSessionHisFirstUpTime=h3cDvpnSessionHisFirstUpTime, h3cDvpnPolicyEntry=h3cDvpnPolicyEntry, h3cDvpnSessionNumber=h3cDvpnSessionNumber, h3cDvpnDomainNumber=h3cDvpnDomainNumber, h3cDvpnTunnelPolicy=h3cDvpnTunnelPolicy, h3cDvpnGlobalGroup=h3cDvpnGlobalGroup, h3cDvpnDropPkt=h3cDvpnDropPkt, DvpnCommunicateType=DvpnCommunicateType, h3cDvpnTunnelEntry=h3cDvpnTunnelEntry, h3cDvpnVersion=h3cDvpnVersion, h3cDvpnMapState=h3cDvpnMapState, h3cDvpnSessionLocalPubIp=h3cDvpnSessionLocalPubIp, h3cDvpnPoSessionIdleTime=h3cDvpnPoSessionIdleTime, h3cDvpnMibGroups=h3cDvpnMibGroups, h3cDvpnGlobalUserDefAAADomain=h3cDvpnGlobalUserDefAAADomain, h3cDvpnPoRowStatus=h3cDvpnPoRowStatus, DvpnAlgorithmSuite=DvpnAlgorithmSuite, h3cDvpnCurrentDeviceRole=h3cDvpnCurrentDeviceRole, h3cDvpnMapPeerPriIp=h3cDvpnMapPeerPriIp, h3cDvpnServiceEnable=h3cDvpnServiceEnable, h3cDvpnSessionHisEntry=h3cDvpnSessionHisEntry, h3cDvpnSessionHisDvpnID=h3cDvpnSessionHisDvpnID, h3cDvpnSessionHisRcvPkt=h3cDvpnSessionHisRcvPkt, h3cDvpnTunnelInterfaceType=h3cDvpnTunnelInterfaceType, h3cDvpnMapLocalPriIp=h3cDvpnMapLocalPriIp, h3cDvpnSessionEntry=h3cDvpnSessionEntry, h3cDvpnOutputPkt=h3cDvpnOutputPkt, h3cDvpnClassEntry=h3cDvpnClassEntry, h3cDvpnMibGlobal=h3cDvpnMibGlobal, h3cDvpnClServerPublicIp=h3cDvpnClServerPublicIp, h3cDvpnPoSessionSetupInterval=h3cDvpnPoSessionSetupInterval, h3cDvpnSessionLocalPriIp=h3cDvpnSessionLocalPriIp, h3cDvpnDomainInfoEntry=h3cDvpnDomainInfoEntry, h3cDvpnMapLocalPriIpType=h3cDvpnMapLocalPriIpType, h3cDvpnClientRegisterDumb=h3cDvpnClientRegisterDumb, h3cDvpnClassGroup=h3cDvpnClassGroup, h3cDvpnNotificationGroup=h3cDvpnNotificationGroup, h3cDvpnClServerPriIpType=h3cDvpnClServerPriIpType, h3cDvpnMapBuildNotification=h3cDvpnMapBuildNotification, h3cDvpnDomainRedirectNum=h3cDvpnDomainRedirectNum, h3cDvpnLocalDeviceId=h3cDvpnLocalDeviceId, h3cDvpnSessionDvpnId=h3cDvpnSessionDvpnId, h3cDvpnPolicyTable=h3cDvpnPolicyTable, h3cDvpnClAuthenServerType=h3cDvpnClAuthenServerType, h3cDvpnMibObjects=h3cDvpnMibObjects, h3cDvpnSessionHisPeerPriIPType=h3cDvpnSessionHisPeerPriIPType, h3cDvpn=h3cDvpn, h3cDvpnSessionPeerPubIp=h3cDvpnSessionPeerPubIp, h3cDvpnClassName=h3cDvpnClassName, h3cDvpnSessionUserName=h3cDvpnSessionUserName, h3cDvpnSessionPeerDeviceId=h3cDvpnSessionPeerDeviceId, h3cDvpnMibConformance=h3cDvpnMibConformance, h3cDvpnDomainSessionNum=h3cDvpnDomainSessionNum, h3cDvpnClServerPriIp=h3cDvpnClServerPriIp, h3cDvpnTunnelAcl=h3cDvpnTunnelAcl, h3cDvpnMapNumber=h3cDvpnMapNumber, h3cDvpnSessionPeerPriIpType=h3cDvpnSessionPeerPriIpType, h3cDvpnMapEntry=h3cDvpnMapEntry, h3cDvpnDomainEncryptErrorPkt=h3cDvpnDomainEncryptErrorPkt, h3cDvpnGlobalAuthenClientType=h3cDvpnGlobalAuthenClientType, h3cDvpnClassRowStatus=h3cDvpnClassRowStatus, h3cDvpnSessionBuildTime=h3cDvpnSessionBuildTime, h3cDvpnMapPeerPriIpType=h3cDvpnMapPeerPriIpType, h3cDvpnSessionLocalPriIpType=h3cDvpnSessionLocalPriIpType, h3cDvpnClassNumber=h3cDvpnClassNumber, h3cDvpnSessionHisLastDownTime=h3cDvpnSessionHisLastDownTime, h3cDvpnClassTable=h3cDvpnClassTable, h3cDvpnDomainOutputErrorPkt=h3cDvpnDomainOutputErrorPkt, h3cDvpnClPasswd=h3cDvpnClPasswd, h3cDvpnEncryptErrorPkt=h3cDvpnEncryptErrorPkt, h3cDvpnPoAuthenClientType=h3cDvpnPoAuthenClientType, h3cDvpnSessionHisSendPkt=h3cDvpnSessionHisSendPkt, h3cDvpnMapIndex=h3cDvpnMapIndex, h3cDvpnClientRegisterInterval=h3cDvpnClientRegisterInterval, h3cDvpnMapLocalPublicIp=h3cDvpnMapLocalPublicIp, h3cDvpnSessionHisOnlineNumber=h3cDvpnSessionHisOnlineNumber, h3cDvpnMapTrapEnable=h3cDvpnMapTrapEnable, h3cDvpnMapType=h3cDvpnMapType, h3cDvpnMapBuildTime=h3cDvpnMapBuildTime, h3cDvpnMibTableTroop=h3cDvpnMibTableTroop, h3cDvpnDomainID=h3cDvpnDomainID, h3cDvpnTotalRedirectNumber=h3cDvpnTotalRedirectNumber, h3cDvpnMibCompliance=h3cDvpnMibCompliance, h3cDvpnMapAgeTime=h3cDvpnMapAgeTime, h3cDvpnTunnelDvpnId=h3cDvpnTunnelDvpnId, h3cDvpnClearDvpnStaInfo=h3cDvpnClearDvpnStaInfo, h3cDvpnOutputErrorPkt=h3cDvpnOutputErrorPkt, h3cDvpnPoRefTimes=h3cDvpnPoRefTimes, h3cDvpnClPreShareKey=h3cDvpnClPreShareKey, h3cDvpnSessionHisPeerPriIP=h3cDvpnSessionHisPeerPriIP, h3cDvpnSessionLocalPubIpType=h3cDvpnSessionLocalPubIpType, h3cDvpnClientRegisterRetry=h3cDvpnClientRegisterRetry, h3cDvpnTunnelGroup=h3cDvpnTunnelGroup, h3cDvpnSessionHisPeerDeviceId=h3cDvpnSessionHisPeerDeviceId)
