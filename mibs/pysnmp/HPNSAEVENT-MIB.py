#
# PySNMP MIB module HPNSAEVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPNSAEVENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, IpAddress, iso, Gauge32, enterprises, Integer32, ModuleIdentity, Counter64, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "IpAddress", "iso", "Gauge32", "enterprises", "Integer32", "ModuleIdentity", "Counter64", "Bits", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpnsa = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23))
hpnsaEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19))
hpnsaEventLogRev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 1))
hpnsaEventLogAgentInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2))
hpnsaEventAgentCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 3))
hpnsaEventLogPresenceId = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 4))
hpnsaEventLogStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5))
hpnsaEventCustomerAcknowledgeActions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 6))
hpnsaEventLogMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogMibRevMajor.setStatus('mandatory')
hpnsaEventLogMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogMibRevMinor.setStatus('mandatory')
hpnsaEventLogAgentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2, 1), )
if mibBuilder.loadTexts: hpnsaEventLogAgentTable.setStatus('mandatory')
hpnsaEventLogAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2, 1, 1), ).setIndexNames((0, "HPNSAEVENT-MIB", "hpnsaEventLogAgentIndex"))
if mibBuilder.loadTexts: hpnsaEventLogAgentEntry.setStatus('mandatory')
hpnsaEventLogAgentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogAgentIndex.setStatus('mandatory')
hpnsaEventLogAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogAgentName.setStatus('mandatory')
hpnsaEventLogAgentVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogAgentVersion.setStatus('mandatory')
hpnsaEventLogAgentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogAgentDate.setStatus('mandatory')
hpnsaEventCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 3, 1), )
if mibBuilder.loadTexts: hpnsaEventCfgTable.setStatus('mandatory')
hpnsaEventCfgTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 3, 1, 1), ).setIndexNames((0, "HPNSAEVENT-MIB", "hpnsaEventLogRecType"))
if mibBuilder.loadTexts: hpnsaEventCfgTableEntry.setStatus('mandatory')
hpnsaEventLogRecType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 33, 34, 35, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 247, 248))).clone(namedValues=NamedValues(("errorEccSingleBit", 1), ("errorEccMultipleBit", 2), ("errorParityMemory", 3), ("errorBusTimeout", 4), ("errorIOChannelCheck", 5), ("errorSoftwareNMI", 6), ("errorPostMemoryResize", 7), ("errorPost", 8), ("errorPciParity", 9), ("errorPciSystem", 10), ("errorCpuFailure", 11), ("errorFailsafeTimeout", 12), ("infoSingleBitErrorDisabled", 13), ("infoErrorLoggingDisabled", 14), ("errorSystemLimitExceeded", 16), ("infoAsynchronousSystemReset", 17), ("infoSystemReconfig", 20), ("errorPCISystem", 21), ("logAreaReset", 22), ("systemRebooted", 23), ("errorECCSingleBit", 33), ("errorECCMultipleBit", 34), ("errorPOSTMemoryResize", 35), ("cpuDeconfigured", 128), ("p6ECCError", 129), ("frontPanelNMI", 130), ("cpuPciSingleFanError", 131), ("cpuPciMultipleFanError", 132), ("cpuPciFanRestored", 133), ("watchdogTimerReset", 134), ("memorySingleFanError", 135), ("memoryMultipleFanError", 136), ("memoryFanRestored", 137), ("cpuReconfigured", 138), ("powerSupplyEvent", 139), ("powerSupplyRemoved", 140), ("powerSupplyInserted", 141), ("controlBoardReset", 142), ("controlBoardPowerCycle", 143), ("cpuCardMissing", 144), ("voltageRegulatingMonitorFailure", 145), ("infoRedundantPowerSupply", 247), ("infoHotSwapModule", 248)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogRecType.setStatus('mandatory')
hpnsaEventLogRecTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisabled", 1), ("trapEnabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaEventLogRecTrapEnable.setStatus('mandatory')
hpnsaEccPresent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEccPresent.setStatus('mandatory')
hpnsaPostPresent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaPostPresent.setStatus('mandatory')
hpnsaTempVoltagePresent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaTempVoltagePresent.setStatus('mandatory')
hpnsaASRPresent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaASRPresent.setStatus('mandatory')
hpnsaNMIPresent = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaNMIPresent.setStatus('mandatory')
hpnsaEventLogPercentFull = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogPercentFull.setStatus('mandatory')
hpnsaEventLogLastErasedDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLastErasedDate.setStatus('mandatory')
hpnsaEventLogErasures = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogErasures.setStatus('mandatory')
hpnsaEventLogEraseLog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1234))).clone(namedValues=NamedValues(("eraseLogNow", 1234)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaEventLogEraseLog.setStatus('mandatory')
hpnsaEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5), )
if mibBuilder.loadTexts: hpnsaEventLogTable.setStatus('mandatory')
hpnsaEventLogTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1), ).setIndexNames((0, "HPNSAEVENT-MIB", "hpnsaEventLogTableIndex"))
if mibBuilder.loadTexts: hpnsaEventLogTableEntry.setStatus('mandatory')
hpnsaEventLogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogTableIndex.setStatus('mandatory')
hpnsaEventLogEntryDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryDate.setStatus('mandatory')
hpnsaEventLogEntryDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryDescr.setStatus('mandatory')
hpnsaEventLogEntryTrapID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryTrapID.setStatus('mandatory')
hpnsaEventLogEntryVB1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB1.setStatus('mandatory')
hpnsaEventLogEntryVB2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB2.setStatus('mandatory')
hpnsaEventLogEntryVB3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB3.setStatus('mandatory')
hpnsaEventLogEntryVB4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB4.setStatus('mandatory')
hpnsaEventLogEntryVB5 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB5.setStatus('mandatory')
hpnsaEventLogEntryVB6 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB6.setStatus('mandatory')
hpnsaEventLogEntryVB7 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB7.setStatus('mandatory')
hpnsaEventLogEntryVB8 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryVB8.setStatus('mandatory')
hpnsaEventLogEntryAdvisory = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryAdvisory.setStatus('mandatory')
hpnsaEventLogEntryReportEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryReportEntity.setStatus('mandatory')
hpnsaEventLogEntrySeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntrySeverity.setStatus('mandatory')
hpnsaEventLogEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 6, 9, 15))).clone(namedValues=NamedValues(("informational", 2), ("infoWithAlert", 3), ("repaired", 6), ("caution", 9), ("critical", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaEventLogEntryStatus.setStatus('mandatory')
hpnsaEventLogEntryInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryInfo.setStatus('mandatory')
hpnsaEventLogEntryUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 5, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogEntryUpdateTime.setStatus('mandatory')
hpnsaEventLogNumberOfEvents = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogNumberOfEvents.setStatus('mandatory')
hpnsaEventLogAggregationStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("degraded", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogAggregationStatus.setStatus('mandatory')
hpnsaEventLogLocalTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8), )
if mibBuilder.loadTexts: hpnsaEventLogLocalTable.setStatus('mandatory')
hpnsaEventLogLocalTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1), ).setIndexNames((0, "HPNSAEVENT-MIB", "hpnsaEventLogTableIndex"))
if mibBuilder.loadTexts: hpnsaEventLogLocalTableEntry.setStatus('mandatory')
hpnsaEventLogLocalTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalTableIndex.setStatus('mandatory')
hpnsaEventLogLocalEntryDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryDate.setStatus('mandatory')
hpnsaEventLogLocalEntryDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryDescr.setStatus('mandatory')
hpnsaEventLogLocalEntryTrapID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryTrapID.setStatus('mandatory')
hpnsaEventLogLocalEntryVB1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB1.setStatus('mandatory')
hpnsaEventLogLocalEntryVB2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB2.setStatus('mandatory')
hpnsaEventLogLocalEntryVB3 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB3.setStatus('mandatory')
hpnsaEventLogLocalEntryVB4 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB4.setStatus('mandatory')
hpnsaEventLogLocalEntryVB5 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB5.setStatus('mandatory')
hpnsaEventLogLocalEntryVB6 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB6.setStatus('mandatory')
hpnsaEventLogLocalEntryVB7 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB7.setStatus('mandatory')
hpnsaEventLogLocalEntryVB8 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryVB8.setStatus('mandatory')
hpnsaEventLogLocalEntryAdvisory = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryAdvisory.setStatus('mandatory')
hpnsaEventLogLocalEntryReportEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryReportEntity.setStatus('mandatory')
hpnsaEventLogLocalEntrySeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntrySeverity.setStatus('mandatory')
hpnsaEventLogLocalEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 6, 9, 15))).clone(namedValues=NamedValues(("informational", 2), ("infoWithAlert", 3), ("repaired", 6), ("caution", 9), ("critical", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryStatus.setStatus('mandatory')
hpnsaEventLogLocalEntryInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryInfo.setStatus('mandatory')
hpnsaEventLogLocalEntryUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 8, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogLocalEntryUpdateTime.setStatus('mandatory')
hpnsaEventLogNumOfLocalEvents = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaEventLogNumOfLocalEvents.setStatus('mandatory')
hpnsaEventClearLEDs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 19, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clearAttentionLED", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: hpnsaEventClearLEDs.setStatus('optional')
mibBuilder.exportSymbols("HPNSAEVENT-MIB", hpnsaEventLogAgentVersion=hpnsaEventLogAgentVersion, hpnsaEventLogEntryVB7=hpnsaEventLogEntryVB7, hpnsaEventLogEntryVB3=hpnsaEventLogEntryVB3, hpnsaEventLogLocalTableIndex=hpnsaEventLogLocalTableIndex, hpnsaEventLogAggregationStatus=hpnsaEventLogAggregationStatus, hpnsaEventLogEntryVB2=hpnsaEventLogEntryVB2, nm=nm, hpnsaEventLogLocalEntryTrapID=hpnsaEventLogLocalEntryTrapID, hpnsaEventLogAgentInfo=hpnsaEventLogAgentInfo, hpnsaEventLogLocalEntryAdvisory=hpnsaEventLogLocalEntryAdvisory, hpnsaEventLogLocalEntryStatus=hpnsaEventLogLocalEntryStatus, hpnsaEventLogStatistics=hpnsaEventLogStatistics, hpnsaEventLogMibRevMajor=hpnsaEventLogMibRevMajor, hpnsaEventLogErasures=hpnsaEventLogErasures, hpnsaEventLogLocalEntryInfo=hpnsaEventLogLocalEntryInfo, hpnsaEventLogLocalEntryVB1=hpnsaEventLogLocalEntryVB1, hpnsaEventLogAgentEntry=hpnsaEventLogAgentEntry, hpnsaEventLogPresenceId=hpnsaEventLogPresenceId, hpnsaEventLogNumOfLocalEvents=hpnsaEventLogNumOfLocalEvents, hpnsaEventLogEntryAdvisory=hpnsaEventLogEntryAdvisory, hpnsaEventLogEntryReportEntity=hpnsaEventLogEntryReportEntity, hpnsaEventLogLocalEntryVB2=hpnsaEventLogLocalEntryVB2, hpnsaEventLogLocalEntryVB4=hpnsaEventLogLocalEntryVB4, hpnsaEventLogEntryDescr=hpnsaEventLogEntryDescr, hpnsaEventLogRecType=hpnsaEventLogRecType, hpnsaEventLogTableIndex=hpnsaEventLogTableIndex, hpnsaEventLogEntryVB4=hpnsaEventLogEntryVB4, hpnsaEventLogLocalTable=hpnsaEventLogLocalTable, hpnsaEventLogLocalEntryVB5=hpnsaEventLogLocalEntryVB5, hpnsaEventLogEntryVB8=hpnsaEventLogEntryVB8, hpnsaPostPresent=hpnsaPostPresent, hpnsaTempVoltagePresent=hpnsaTempVoltagePresent, hpnsaEventLogLastErasedDate=hpnsaEventLogLastErasedDate, hpnsaEventLogEntryStatus=hpnsaEventLogEntryStatus, hpnsaEventLogLocalEntryVB6=hpnsaEventLogLocalEntryVB6, hpnsaASRPresent=hpnsaASRPresent, hpnsaEventLogAgentTable=hpnsaEventLogAgentTable, hpnsaEventLogEntryTrapID=hpnsaEventLogEntryTrapID, hpnsaEventLogEntrySeverity=hpnsaEventLogEntrySeverity, hpnsaEventCustomerAcknowledgeActions=hpnsaEventCustomerAcknowledgeActions, hpnsaEventAgentCfgInfo=hpnsaEventAgentCfgInfo, hpnsaEventLogAgentDate=hpnsaEventLogAgentDate, hpnsaEventLogEntryDate=hpnsaEventLogEntryDate, hp=hp, hpnsaEventLogLocalEntrySeverity=hpnsaEventLogLocalEntrySeverity, hpnsaEventLogLocalEntryVB7=hpnsaEventLogLocalEntryVB7, hpnsaEventLogLocalEntryUpdateTime=hpnsaEventLogLocalEntryUpdateTime, hpnsaEventLogLocalTableEntry=hpnsaEventLogLocalTableEntry, hpnsaEventLogTable=hpnsaEventLogTable, hpnsaEventLogLocalEntryVB8=hpnsaEventLogLocalEntryVB8, hpnsaEventLogLocalEntryVB3=hpnsaEventLogLocalEntryVB3, hpnsaEventLogEntryVB5=hpnsaEventLogEntryVB5, hpnsaEventLogLocalEntryDate=hpnsaEventLogLocalEntryDate, hpnsaEventCfgTable=hpnsaEventCfgTable, hpnsaEventLogEraseLog=hpnsaEventLogEraseLog, hpnsa=hpnsa, hpnsaEventLogEntryInfo=hpnsaEventLogEntryInfo, hpnsaEventLogPercentFull=hpnsaEventLogPercentFull, hpnsaEventLog=hpnsaEventLog, hpnsaEventLogAgentIndex=hpnsaEventLogAgentIndex, hpnsaEventCfgTableEntry=hpnsaEventCfgTableEntry, hpnsaEventLogMibRevMinor=hpnsaEventLogMibRevMinor, hpnsaNMIPresent=hpnsaNMIPresent, hpnsaEventLogTableEntry=hpnsaEventLogTableEntry, hpnsaEventLogAgentName=hpnsaEventLogAgentName, hpnsaEccPresent=hpnsaEccPresent, hpnsaEventClearLEDs=hpnsaEventClearLEDs, hpnsaEventLogNumberOfEvents=hpnsaEventLogNumberOfEvents, hpnsaEventLogRev=hpnsaEventLogRev, hpnsaEventLogEntryUpdateTime=hpnsaEventLogEntryUpdateTime, hpnsaEventLogLocalEntryDescr=hpnsaEventLogLocalEntryDescr, hpnsaEventLogLocalEntryReportEntity=hpnsaEventLogLocalEntryReportEntity, hpnsaEventLogEntryVB1=hpnsaEventLogEntryVB1, hpnsaEventLogRecTrapEnable=hpnsaEventLogRecTrapEnable, hpnsaEventLogEntryVB6=hpnsaEventLogEntryVB6)
