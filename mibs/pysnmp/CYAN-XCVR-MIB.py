#
# PySNMP MIB module CYAN-XCVR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-XCVR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
cyanEntityModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules")
CyanPowerClassTc, CyanNoYesTc, CyanXcvrIdentifierTc, CyanOpStateQualTc, CyanOpStateTc, CyanSecServiceStateTc, CyanWdmTypeTc, CyanAdminStateTc, CyanXcvrConnectorCodeTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanPowerClassTc", "CyanNoYesTc", "CyanXcvrIdentifierTc", "CyanOpStateQualTc", "CyanOpStateTc", "CyanSecServiceStateTc", "CyanWdmTypeTc", "CyanAdminStateTc", "CyanXcvrConnectorCodeTc")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, ObjectIdentity, ModuleIdentity, TimeTicks, MibIdentifier, NotificationType, iso, Counter64, Integer32, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "iso", "Counter64", "Integer32", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanXcvrModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140))
cyanXcvrModule.setRevisions(('2014-12-07 05:45',))
if mibBuilder.loadTexts: cyanXcvrModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanXcvrModule.setOrganization('Cyan, Inc.')
cyanXcvrMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1))
cyanXcvrTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1), )
if mibBuilder.loadTexts: cyanXcvrTable.setStatus('current')
cyanXcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1), ).setIndexNames((0, "CYAN-XCVR-MIB", "cyanXcvrShelfId"), (0, "CYAN-XCVR-MIB", "cyanXcvrModuleId"), (0, "CYAN-XCVR-MIB", "cyanXcvrXcvrId"))
if mibBuilder.loadTexts: cyanXcvrEntry.setStatus('current')
cyanXcvrShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanXcvrShelfId.setStatus('current')
cyanXcvrModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanXcvrModuleId.setStatus('current')
cyanXcvrXcvrId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanXcvrXcvrId.setStatus('current')
cyanXcvrAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 4), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrAdminState.setStatus('current')
cyanXcvrAutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrAutoinserviceSoakTimeSec.setStatus('current')
cyanXcvrComplianceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrComplianceCode.setStatus('current')
cyanXcvrConnectorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 7), CyanXcvrConnectorCodeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrConnectorCode.setStatus('current')
cyanXcvrCyanName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrCyanName.setStatus('current')
cyanXcvrCyanPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 42))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrCyanPartNumber.setStatus('current')
cyanXcvrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrDescription.setStatus('current')
cyanXcvrIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrIdentifier.setStatus('current')
cyanXcvrIdentifierCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 12), CyanXcvrIdentifierTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrIdentifierCode.setStatus('current')
cyanXcvrLength9 = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrLength9.setStatus('current')
cyanXcvrMaxBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrMaxBitRate.setStatus('current')
cyanXcvrMfgDateCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrMfgDateCode.setStatus('current')
cyanXcvrMinBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrMinBitRate.setStatus('current')
cyanXcvrMmf3Maxlen = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrMmf3Maxlen.setStatus('current')
cyanXcvrMmf4Maxlen = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrMmf4Maxlen.setStatus('current')
cyanXcvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrName.setStatus('current')
cyanXcvrNominalBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrNominalBitRate.setStatus('current')
cyanXcvrOidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOidClass.setStatus('current')
cyanXcvrOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 22), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOperState.setStatus('current')
cyanXcvrOperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 23), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOperStateQual.setStatus('current')
cyanXcvrOptSensitivityAdjustSupp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 24), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOptSensitivityAdjustSupp.setStatus('current')
cyanXcvrOssLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOssLabel.setStatus('current')
cyanXcvrOuiCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOuiCode.setStatus('current')
cyanXcvrOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrOwner.setStatus('current')
cyanXcvrPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrPartNumber.setStatus('current')
cyanXcvrPowerClass = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 29), CyanPowerClassTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrPowerClass.setStatus('current')
cyanXcvrRealTimeDiagImplemented = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 30), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrRealTimeDiagImplemented.setStatus('current')
cyanXcvrRxPwrHiAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrRxPwrHiAlrmThres.setStatus('current')
cyanXcvrRxPwrHiWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrRxPwrHiWarnThres.setStatus('current')
cyanXcvrRxPwrLoAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrRxPwrLoAlrmThres.setStatus('current')
cyanXcvrRxPwrLoWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrRxPwrLoWarnThres.setStatus('current')
cyanXcvrSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 35), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrSecServState.setStatus('current')
cyanXcvrSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrSerialNumber.setStatus('current')
cyanXcvrSfpOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrSfpOptions.setStatus('current')
cyanXcvrTempHiAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTempHiAlrmThres.setStatus('current')
cyanXcvrTempHiWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTempHiWarnThres.setStatus('current')
cyanXcvrTempLoAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTempLoAlrmThres.setStatus('current')
cyanXcvrTempLoWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTempLoWarnThres.setStatus('current')
cyanXcvrTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTemperature.setStatus('current')
cyanXcvrTxBiasCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxBiasCurrent.setStatus('current')
cyanXcvrTxBiasHiAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxBiasHiAlrmThres.setStatus('current')
cyanXcvrTxBiasHiWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxBiasHiWarnThres.setStatus('current')
cyanXcvrTxBiasLoAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxBiasLoAlrmThres.setStatus('current')
cyanXcvrTxBiasLoWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxBiasLoWarnThres.setStatus('current')
cyanXcvrTxPwrHiAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxPwrHiAlrmThres.setStatus('current')
cyanXcvrTxPwrHiWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxPwrHiWarnThres.setStatus('current')
cyanXcvrTxPwrLoAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxPwrLoAlrmThres.setStatus('current')
cyanXcvrTxPwrLoWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128000, 128000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrTxPwrLoWarnThres.setStatus('current')
cyanXcvrVccVoltHiAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVccVoltHiAlrmThres.setStatus('current')
cyanXcvrVccVoltHiWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVccVoltHiWarnThres.setStatus('current')
cyanXcvrVccVoltLoAlrmThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVccVoltLoAlrmThres.setStatus('current')
cyanXcvrVccVoltLoWarnThres = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVccVoltLoWarnThres.setStatus('current')
cyanXcvrVccVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVccVoltage.setStatus('current')
cyanXcvrVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVendorName.setStatus('current')
cyanXcvrVendorRev = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrVendorRev.setStatus('current')
cyanXcvrWavelength = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrWavelength.setStatus('current')
cyanXcvrWdmType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 60), CyanWdmTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrWdmType.setStatus('current')
cyanXcvrWlenError = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrWlenError.setStatus('current')
cyanXcvrWlenIsTunable = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 62), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrWlenIsTunable.setStatus('current')
cyanXcvrWlenSetpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrWlenSetpoint.setStatus('current')
cyanXcvrWlenTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 1, 1, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanXcvrWlenTolerance.setStatus('current')
cyanXcvrObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 20)).setObjects(("CYAN-XCVR-MIB", "cyanXcvrAdminState"), ("CYAN-XCVR-MIB", "cyanXcvrAutoinserviceSoakTimeSec"), ("CYAN-XCVR-MIB", "cyanXcvrComplianceCode"), ("CYAN-XCVR-MIB", "cyanXcvrConnectorCode"), ("CYAN-XCVR-MIB", "cyanXcvrCyanName"), ("CYAN-XCVR-MIB", "cyanXcvrCyanPartNumber"), ("CYAN-XCVR-MIB", "cyanXcvrDescription"), ("CYAN-XCVR-MIB", "cyanXcvrIdentifier"), ("CYAN-XCVR-MIB", "cyanXcvrIdentifierCode"), ("CYAN-XCVR-MIB", "cyanXcvrLength9"), ("CYAN-XCVR-MIB", "cyanXcvrMaxBitRate"), ("CYAN-XCVR-MIB", "cyanXcvrMfgDateCode"), ("CYAN-XCVR-MIB", "cyanXcvrMinBitRate"), ("CYAN-XCVR-MIB", "cyanXcvrMmf3Maxlen"), ("CYAN-XCVR-MIB", "cyanXcvrMmf4Maxlen"), ("CYAN-XCVR-MIB", "cyanXcvrName"), ("CYAN-XCVR-MIB", "cyanXcvrNominalBitRate"), ("CYAN-XCVR-MIB", "cyanXcvrOidClass"), ("CYAN-XCVR-MIB", "cyanXcvrOperState"), ("CYAN-XCVR-MIB", "cyanXcvrOperStateQual"), ("CYAN-XCVR-MIB", "cyanXcvrOptSensitivityAdjustSupp"), ("CYAN-XCVR-MIB", "cyanXcvrOssLabel"), ("CYAN-XCVR-MIB", "cyanXcvrOuiCode"), ("CYAN-XCVR-MIB", "cyanXcvrOwner"), ("CYAN-XCVR-MIB", "cyanXcvrPartNumber"), ("CYAN-XCVR-MIB", "cyanXcvrPowerClass"), ("CYAN-XCVR-MIB", "cyanXcvrRealTimeDiagImplemented"), ("CYAN-XCVR-MIB", "cyanXcvrRxPwrHiAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrRxPwrHiWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrRxPwrLoAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrRxPwrLoWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrSecServState"), ("CYAN-XCVR-MIB", "cyanXcvrSerialNumber"), ("CYAN-XCVR-MIB", "cyanXcvrSfpOptions"), ("CYAN-XCVR-MIB", "cyanXcvrTempHiAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrTempHiWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrTempLoAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrTempLoWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrTemperature"), ("CYAN-XCVR-MIB", "cyanXcvrTxBiasCurrent"), ("CYAN-XCVR-MIB", "cyanXcvrTxBiasHiAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxBiasHiWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxBiasLoAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxBiasLoWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxPwrHiAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxPwrHiWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxPwrLoAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrTxPwrLoWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrVccVoltHiAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrVccVoltHiWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrVccVoltLoAlrmThres"), ("CYAN-XCVR-MIB", "cyanXcvrVccVoltLoWarnThres"), ("CYAN-XCVR-MIB", "cyanXcvrVccVoltage"), ("CYAN-XCVR-MIB", "cyanXcvrVendorName"), ("CYAN-XCVR-MIB", "cyanXcvrVendorRev"), ("CYAN-XCVR-MIB", "cyanXcvrWavelength"), ("CYAN-XCVR-MIB", "cyanXcvrWdmType"), ("CYAN-XCVR-MIB", "cyanXcvrWlenError"), ("CYAN-XCVR-MIB", "cyanXcvrWlenIsTunable"), ("CYAN-XCVR-MIB", "cyanXcvrWlenSetpoint"), ("CYAN-XCVR-MIB", "cyanXcvrWlenTolerance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanXcvrObjectGroup = cyanXcvrObjectGroup.setStatus('current')
cyanXcvrCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 140, 30)).setObjects(("CYAN-XCVR-MIB", "cyanXcvrObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanXcvrCompliance = cyanXcvrCompliance.setStatus('current')
mibBuilder.exportSymbols("CYAN-XCVR-MIB", cyanXcvrModuleId=cyanXcvrModuleId, cyanXcvrMfgDateCode=cyanXcvrMfgDateCode, cyanXcvrVendorRev=cyanXcvrVendorRev, cyanXcvrTemperature=cyanXcvrTemperature, cyanXcvrOidClass=cyanXcvrOidClass, cyanXcvrOperStateQual=cyanXcvrOperStateQual, cyanXcvrAutoinserviceSoakTimeSec=cyanXcvrAutoinserviceSoakTimeSec, cyanXcvrOperState=cyanXcvrOperState, cyanXcvrTable=cyanXcvrTable, cyanXcvrTempLoWarnThres=cyanXcvrTempLoWarnThres, cyanXcvrSerialNumber=cyanXcvrSerialNumber, cyanXcvrTxPwrHiAlrmThres=cyanXcvrTxPwrHiAlrmThres, cyanXcvrIdentifierCode=cyanXcvrIdentifierCode, cyanXcvrWdmType=cyanXcvrWdmType, cyanXcvrRxPwrHiWarnThres=cyanXcvrRxPwrHiWarnThres, cyanXcvrWlenSetpoint=cyanXcvrWlenSetpoint, cyanXcvrRxPwrLoWarnThres=cyanXcvrRxPwrLoWarnThres, cyanXcvrTempHiWarnThres=cyanXcvrTempHiWarnThres, cyanXcvrWlenTolerance=cyanXcvrWlenTolerance, cyanXcvrVccVoltHiWarnThres=cyanXcvrVccVoltHiWarnThres, cyanXcvrCyanName=cyanXcvrCyanName, cyanXcvrCyanPartNumber=cyanXcvrCyanPartNumber, cyanXcvrEntry=cyanXcvrEntry, cyanXcvrWlenIsTunable=cyanXcvrWlenIsTunable, cyanXcvrRealTimeDiagImplemented=cyanXcvrRealTimeDiagImplemented, cyanXcvrConnectorCode=cyanXcvrConnectorCode, cyanXcvrPowerClass=cyanXcvrPowerClass, cyanXcvrTxPwrLoAlrmThres=cyanXcvrTxPwrLoAlrmThres, cyanXcvrMmf4Maxlen=cyanXcvrMmf4Maxlen, cyanXcvrTxBiasCurrent=cyanXcvrTxBiasCurrent, cyanXcvrTxBiasHiWarnThres=cyanXcvrTxBiasHiWarnThres, cyanXcvrRxPwrHiAlrmThres=cyanXcvrRxPwrHiAlrmThres, cyanXcvrTempHiAlrmThres=cyanXcvrTempHiAlrmThres, cyanXcvrOwner=cyanXcvrOwner, cyanXcvrMibObjects=cyanXcvrMibObjects, cyanXcvrNominalBitRate=cyanXcvrNominalBitRate, cyanXcvrTxBiasHiAlrmThres=cyanXcvrTxBiasHiAlrmThres, cyanXcvrVccVoltLoAlrmThres=cyanXcvrVccVoltLoAlrmThres, cyanXcvrCompliance=cyanXcvrCompliance, cyanXcvrIdentifier=cyanXcvrIdentifier, cyanXcvrTempLoAlrmThres=cyanXcvrTempLoAlrmThres, cyanXcvrDescription=cyanXcvrDescription, cyanXcvrMaxBitRate=cyanXcvrMaxBitRate, cyanXcvrModule=cyanXcvrModule, cyanXcvrShelfId=cyanXcvrShelfId, cyanXcvrPartNumber=cyanXcvrPartNumber, cyanXcvrVccVoltHiAlrmThres=cyanXcvrVccVoltHiAlrmThres, cyanXcvrOuiCode=cyanXcvrOuiCode, cyanXcvrMmf3Maxlen=cyanXcvrMmf3Maxlen, cyanXcvrLength9=cyanXcvrLength9, cyanXcvrName=cyanXcvrName, cyanXcvrXcvrId=cyanXcvrXcvrId, cyanXcvrComplianceCode=cyanXcvrComplianceCode, cyanXcvrTxPwrHiWarnThres=cyanXcvrTxPwrHiWarnThres, cyanXcvrSfpOptions=cyanXcvrSfpOptions, cyanXcvrVccVoltLoWarnThres=cyanXcvrVccVoltLoWarnThres, cyanXcvrObjectGroup=cyanXcvrObjectGroup, cyanXcvrRxPwrLoAlrmThres=cyanXcvrRxPwrLoAlrmThres, cyanXcvrTxBiasLoAlrmThres=cyanXcvrTxBiasLoAlrmThres, cyanXcvrVendorName=cyanXcvrVendorName, cyanXcvrVccVoltage=cyanXcvrVccVoltage, cyanXcvrWavelength=cyanXcvrWavelength, cyanXcvrTxPwrLoWarnThres=cyanXcvrTxPwrLoWarnThres, cyanXcvrSecServState=cyanXcvrSecServState, cyanXcvrOssLabel=cyanXcvrOssLabel, cyanXcvrTxBiasLoWarnThres=cyanXcvrTxBiasLoWarnThres, cyanXcvrAdminState=cyanXcvrAdminState, cyanXcvrWlenError=cyanXcvrWlenError, cyanXcvrOptSensitivityAdjustSupp=cyanXcvrOptSensitivityAdjustSupp, PYSNMP_MODULE_ID=cyanXcvrModule, cyanXcvrMinBitRate=cyanXcvrMinBitRate)
