#
# PySNMP MIB module INTEL-IP-MULTICAST-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-IP-MULTICAST-ROUTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, IpAddress, Gauge32, Unsigned32, Counter32, TimeTicks, NotificationType, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "IpAddress", "Gauge32", "Unsigned32", "Counter32", "TimeTicks", "NotificationType", "iso", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipmrouter = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 32))
conf = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 32, 1))
confMaxDvmrpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confMaxDvmrpRoutes.setStatus('mandatory')
confIfTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2), )
if mibBuilder.loadTexts: confIfTable.setStatus('mandatory')
confIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1), ).setIndexNames((0, "INTEL-IP-MULTICAST-ROUTER-MIB", "confIfIndex"))
if mibBuilder.loadTexts: confIfEntry.setStatus('mandatory')
confIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confIfIndex.setStatus('mandatory')
confIfMCRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfMCRouteProto.setStatus('mandatory')
confIfIgmpQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfIgmpQueryInterval.setStatus('mandatory')
confIfIgmpRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfIgmpRobustness.setStatus('mandatory')
confIfDvmrpMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfDvmrpMetric.setStatus('mandatory')
confIfDvmrpUnreachableMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfDvmrpUnreachableMetric.setStatus('mandatory')
confIfCreateObj = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfCreateObj.setStatus('mandatory')
confIfDeleteObj = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 32, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("delete", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfDeleteObj.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-IP-MULTICAST-ROUTER-MIB", confIfDvmrpUnreachableMetric=confIfDvmrpUnreachableMetric, confIfCreateObj=confIfCreateObj, confIfMCRouteProto=confIfMCRouteProto, confIfDeleteObj=confIfDeleteObj, ipmrouter=ipmrouter, confIfTable=confIfTable, confMaxDvmrpRoutes=confMaxDvmrpRoutes, conf=conf, confIfEntry=confIfEntry, confIfIgmpQueryInterval=confIfIgmpQueryInterval, confIfIgmpRobustness=confIfIgmpRobustness, confIfDvmrpMetric=confIfDvmrpMetric, confIfIndex=confIfIndex)
