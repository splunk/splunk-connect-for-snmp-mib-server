#
# PySNMP MIB module HPN-ICF-DOT11-CFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-DOT11-CFG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:25:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
HpnicfDot11SSIDEncryptModeType, HpnicfDot11WorkMode, HpnicfDot11RadioType2, HpnicfDot11RadioType, HpnicfDot11PreambleType, HpnicfDot11ServicePolicyIDType, HpnicfDot11CirMode, HpnicfDot11RadioElementIndex, HpnicfDot11TruthValueCM, hpnicfDot11, hpnicfDot11APElementIndex, HpnicfDot11ChannelScopeType, HpnicfDot11TunnelSecSchemType, HpnicfDot11AuthenType, HpnicfDot11ObjectIDType, HpnicfDot11SSIDStringType, HpnicfDot11SecIEStatusType, HpnicfDot11TxPwrLevelScopeType, HpnicfDot11RadioScopeType = mibBuilder.importSymbols("HPN-ICF-DOT11-REF-MIB", "HpnicfDot11SSIDEncryptModeType", "HpnicfDot11WorkMode", "HpnicfDot11RadioType2", "HpnicfDot11RadioType", "HpnicfDot11PreambleType", "HpnicfDot11ServicePolicyIDType", "HpnicfDot11CirMode", "HpnicfDot11RadioElementIndex", "HpnicfDot11TruthValueCM", "hpnicfDot11", "hpnicfDot11APElementIndex", "HpnicfDot11ChannelScopeType", "HpnicfDot11TunnelSecSchemType", "HpnicfDot11AuthenType", "HpnicfDot11ObjectIDType", "HpnicfDot11SSIDStringType", "HpnicfDot11SecIEStatusType", "HpnicfDot11TxPwrLevelScopeType", "HpnicfDot11RadioScopeType")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, TimeTicks, Counter32, Counter64, Gauge32, ModuleIdentity, IpAddress, iso, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "TimeTicks", "Counter32", "Counter64", "Gauge32", "ModuleIdentity", "IpAddress", "iso", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32")
MacAddress, TruthValue, RowStatus, DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "RowStatus", "DisplayString", "DateAndTime", "TextualConvention")
hpnicfDot11CFG = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4))
hpnicfDot11CFG.setRevisions(('2010-09-25 18:00', '2010-09-02 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2009-03-20 15:30', '2008-11-07 15:30', '2008-07-09 18:00', '2008-02-25 18:00', '2007-12-21 18:00', '2007-10-09 16:55', '2007-06-19 18:00', '2007-04-27 20:00', '2007-02-01 20:00', '2006-05-10 19:00',))
if mibBuilder.loadTexts: hpnicfDot11CFG.setLastUpdated('201009251800Z')
if mibBuilder.loadTexts: hpnicfDot11CFG.setOrganization('')
hpnicfDot11GlobeConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1))
hpnicfDot11PolicyConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2))
hpnicfDot11APConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3))
hpnicfDot11RadioIntfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4))
hpnicfDot11DataRateConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5))
hpnicfDot11InterfaceConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6))
hpnicfDot11ACBackupGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 7))
hpnicfDot11RadioElementConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8))
hpnicfDot11CfgNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9))
hpnicfDot11GlobalCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11GlobalCountryCode.setStatus('current')
hpnicfDot11StaKeepALiveTimerIntvl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 2), Unsigned32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StaKeepALiveTimerIntvl.setStatus('current')
hpnicfDot11StaIdleTimerIntvl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 3), Integer32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11StaIdleTimerIntvl.setStatus('current')
hpnicfDot11BroadcastProbeReply = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11BroadcastProbeReply.setStatus('current')
hpnicfDot11APScanMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2))).clone('passive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APScanMode.setStatus('current')
hpnicfDot11ACCtrlTunnelSecSupport = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 6), HpnicfDot11TunnelSecSchemType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ACCtrlTunnelSecSupport.setStatus('current')
hpnicfDot11ACDataTunnelSecSupport = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 7), HpnicfDot11TunnelSecSchemType().clone('cleartxt')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ACDataTunnelSecSupport.setStatus('current')
hpnicfDot11ACAutoAPSupport = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ACAutoAPSupport.setStatus('current')
hpnicfDot11AutoAPName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11AutoAPName.setStatus('current')
hpnicfDot11PersistentName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11PersistentName.setStatus('current')
hpnicfDot11IntfTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 11), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11IntfTrapThreshold.setStatus('current')
hpnicfDot11MonitorInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 15), ))).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11MonitorInterval.setStatus('current')
hpnicfDot11SampleInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 300), ))).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SampleInterval.setStatus('current')
hpnicfDot11ChnlSwitChkInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 180)).clone(8)).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ChnlSwitChkInterval.setStatus('current')
hpnicfDot11APUserUplimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APUserUplimit.setStatus('current')
hpnicfDot11APL2IsolateEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APL2IsolateEnable.setStatus('current')
hpnicfDot11APBSSIDSupportNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11APBSSIDSupportNum.setStatus('current')
hpnicfDot11APLastUpdateStatTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 18), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11APLastUpdateStatTime.setStatus('current')
hpnicfDot11APDoSProtectEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 19), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APDoSProtectEnable.setStatus('current')
hpnicfDot11MaxAPPerIf = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11MaxAPPerIf.setStatus('current')
hpnicfDot11SampleTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 21), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SampleTimeStamp.setStatus('current')
hpnicfDot11UplinkTrackId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 22), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11UplinkTrackId.setStatus('current')
hpnicfDot11RtCollectSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 23), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RtCollectSwitch.setStatus('current')
hpnicfDot11RglCollectIntvl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 24), Integer32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RglCollectIntvl.setStatus('current')
hpnicfDot11RtCollectIntvl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 25), Integer32()).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RtCollectIntvl.setStatus('current')
hpnicfDot11AllAPCpuUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11AllAPCpuUsageThreshold.setStatus('current')
hpnicfDot11AllAPMemUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11AllAPMemUsageThreshold.setStatus('current')
hpnicfDot11AdjIntfTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 28), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11AdjIntfTrapThreshold.setStatus('current')
hpnicfDot11AllAPMonitorMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11AllAPMonitorMode.setStatus('current')
hpnicfDot11GlobalApFmwUpdState = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11GlobalApFmwUpdState.setStatus('current')
hpnicfDot11ACNasIDCM = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 1, 31), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ACNasIDCM.setStatus('current')
hpnicfDot11RadioPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1), )
if mibBuilder.loadTexts: hpnicfDot11RadioPolicyTable.setStatus('current')
hpnicfDot11RadioPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1), ).setIndexNames((1, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioPolicyName"))
if mibBuilder.loadTexts: hpnicfDot11RadioPolicyEntry.setStatus('current')
hpnicfDot11RadioPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hpnicfDot11RadioPolicyName.setStatus('current')
hpnicfDot11BeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 2), Integer32().clone(100)).setUnits('TU').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11BeaconInterval.setStatus('current')
hpnicfDot11DtimInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 3), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11DtimInterval.setStatus('current')
hpnicfDot11RtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 4), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RtsThreshold.setStatus('current')
hpnicfDot11FragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 5), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11FragThreshold.setStatus('current')
hpnicfDot11ShortRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 6), Integer32().clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11ShortRetryThreshold.setStatus('current')
hpnicfDot11LongRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 7), Integer32().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11LongRetryThreshold.setStatus('current')
hpnicfDot11MaxRxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 8), Unsigned32().clone(2000)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11MaxRxLifetime.setStatus('current')
hpnicfDot11RdoPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RdoPolicyRowStatus.setStatus('current')
hpnicfDot11RdoClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RdoClientMaxCount.setStatus('current')
hpnicfDot11BeaconIntervalMs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 1, 1, 11), Integer32()).setUnits('ms').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11BeaconIntervalMs.setStatus('current')
hpnicfDot11ServicePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2), )
if mibBuilder.loadTexts: hpnicfDot11ServicePolicyTable.setStatus('current')
hpnicfDot11ServicePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ServicePolicyID"))
if mibBuilder.loadTexts: hpnicfDot11ServicePolicyEntry.setStatus('current')
hpnicfDot11ServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 1), HpnicfDot11ServicePolicyIDType())
if mibBuilder.loadTexts: hpnicfDot11ServicePolicyID.setStatus('current')
hpnicfDot11SSIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 2), HpnicfDot11SSIDStringType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SSIDName.setStatus('current')
hpnicfDot11SSIDHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SSIDHidden.setStatus('current')
hpnicfDot11AuthenMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 4), HpnicfDot11AuthenType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11AuthenMode.setStatus('current')
hpnicfDot11SSIDEncryptionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 5), HpnicfDot11SSIDEncryptModeType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SSIDEncryptionMode.setStatus('current')
hpnicfDot11WlanInfBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 6), OctetString().clone('WLAN-ESS')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanInfBindingType.setStatus('current')
hpnicfDot11WlanInfBindingID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanInfBindingID.setStatus('current')
hpnicfDot11SrvPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SrvPolicyRowStatus.setStatus('current')
hpnicfDot11ClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11ClientMaxCount.setStatus('current')
hpnicfDot11SPInCirMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 10), HpnicfDot11CirMode().clone('static')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPInCirMode.setStatus('current')
hpnicfDot11SPInCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 11), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPInCirValue.setStatus('current')
hpnicfDot11SPOutCirMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 12), HpnicfDot11CirMode().clone('static')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPOutCirMode.setStatus('current')
hpnicfDot11SPOutCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 13), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPOutCirValue.setStatus('current')
hpnicfDot11WlanInfPVID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 14), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanInfPVID.setStatus('current')
hpnicfDot11SPInCirStaticValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 15), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPInCirStaticValue.setStatus('current')
hpnicfDot11SPOutCirStaticValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 16), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPOutCirStaticValue.setStatus('current')
hpnicfDot11SPIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPIsolate.setStatus('current')
hpnicfDot11WlanexAuthServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 18), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanexAuthServerIP.setStatus('current')
hpnicfDot11SPBeaconMeasEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPBeaconMeasEnable.setStatus('current')
hpnicfDot11SPBeaconMeasType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passive", 1), ("active", 2), ("beaconTable", 3))).clone('beaconTable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPBeaconMeasType.setStatus('current')
hpnicfDot11SPBeaconMeasInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 200)).clone(60)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPBeaconMeasInterval.setStatus('current')
hpnicfDot11AuthenModeCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("opensystem", 0), ("sharedkey", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11AuthenModeCM.setStatus('current')
hpnicfDot11SecIEStatusCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("wpa", 1), ("wpa2", 2), ("wlanex", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SecIEStatusCM.setStatus('current')
hpnicfDot11SecurityCiphersCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("wep40", 1), ("wep104", 2), ("tkip", 3), ("aesccmp", 4), ("wpisms4", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SecurityCiphersCM.setStatus('current')
hpnicfDot11SrvPolicyStatusCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SrvPolicyStatusCM.setStatus('current')
hpnicfDot11SSIDHiddenCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 26), HpnicfDot11TruthValueCM().clone('dot11false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SSIDHiddenCM.setStatus('current')
hpnicfDot11SPIsolateCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 2, 1, 27), HpnicfDot11TruthValueCM().clone('dot11false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SPIsolateCM.setStatus('current')
hpnicfDot11ServicePolicyExtTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3), )
if mibBuilder.loadTexts: hpnicfDot11ServicePolicyExtTable.setStatus('current')
hpnicfDot11ServicePolicyExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ServicePolicyExtID"))
if mibBuilder.loadTexts: hpnicfDot11ServicePolicyExtEntry.setStatus('current')
hpnicfDot11ServicePolicyExtID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 1), HpnicfDot11ServicePolicyIDType())
if mibBuilder.loadTexts: hpnicfDot11ServicePolicyExtID.setStatus('current')
hpnicfDot11SecIEStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 2), HpnicfDot11SecIEStatusType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SecIEStatus.setStatus('current')
hpnicfDot11SecurityCiphers = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SecurityCiphers.setStatus('current')
hpnicfDot11CipherKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 4), Integer32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11CipherKeyIndex.setStatus('current')
hpnicfDot11CipherKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11CipherKey.setStatus('current')
hpnicfDot11SrvPolicyExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SrvPolicyExtRowStatus.setStatus('current')
hpnicfDot11CipherKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("char", 1), ("hex", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11CipherKeyType.setStatus('current')
hpnicfDot11RadioPolicyExtTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4), )
if mibBuilder.loadTexts: hpnicfDot11RadioPolicyExtTable.setStatus('current')
hpnicfDot11RadioPolicyExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RPAPSerialID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RPRadioID"))
if mibBuilder.loadTexts: hpnicfDot11RadioPolicyExtEntry.setStatus('current')
hpnicfDot11RPAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hpnicfDot11RPAPSerialID.setStatus('current')
hpnicfDot11RPRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11RPRadioID.setStatus('current')
hpnicfDot11RPBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 3), Integer32().clone(100)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPBeaconInterval.setStatus('current')
hpnicfDot11RPDtimInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 4), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPDtimInterval.setStatus('current')
hpnicfDot11RPRtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 5), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPRtsThreshold.setStatus('current')
hpnicfDot11RPFragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 6), Integer32().clone(2346)).setUnits('byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPFragThreshold.setStatus('current')
hpnicfDot11RPShortRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 7), Integer32().clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPShortRetryThreshold.setStatus('current')
hpnicfDot11RPLongRetryThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 8), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPLongRetryThreshold.setStatus('current')
hpnicfDot11RPClientMaxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPClientMaxCount.setStatus('current')
hpnicfDot11RPBeaconIntervalCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 4, 1, 10), Integer32().clone(100)).setUnits('timeunit').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RPBeaconIntervalCM.setStatus('current')
hpnicfDot11SrvPortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5), )
if mibBuilder.loadTexts: hpnicfDot11SrvPortSecurityTable.setStatus('current')
hpnicfDot11SrvPortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SecurityServicePolicyID"))
if mibBuilder.loadTexts: hpnicfDot11SrvPortSecurityEntry.setStatus('current')
hpnicfDot11SecurityServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1, 1), HpnicfDot11ServicePolicyIDType())
if mibBuilder.loadTexts: hpnicfDot11SecurityServicePolicyID.setStatus('current')
hpnicfDot11SrvPortSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noRestrictions", 1), ("userLoginSecureExt", 2), ("psk", 3), ("macAddressAndPsk", 4), ("userLoginSecureExtOrPsk", 5), ("ext", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SrvPortSecurityMode.setStatus('current')
hpnicfDot11SrvSecurityKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("userLoginTxKeyTypeNone", 1), ("userLoginTxKeyTypeDot11Key", 2), ("userLoginTxKeyTypeRsaRC4Key", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SrvSecurityKeyType.setStatus('current')
hpnicfDot11SrvSecurityPskKeyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pskKeyModeNone", 1), ("pskKeyModePassPhrase", 2), ("pskKeyModeRawKey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SrvSecurityPskKeyMode.setStatus('current')
hpnicfDot11SrvSecurityPskKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SrvSecurityPskKeyString.setStatus('current')
hpnicfDot11SrvPortSecurityModeCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("psk", 1), ("radius", 2), ("wlanex", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SrvPortSecurityModeCM.setStatus('current')
hpnicfDot11SrvPolicyExtendTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 6), )
if mibBuilder.loadTexts: hpnicfDot11SrvPolicyExtendTable.setStatus('current')
hpnicfDot11SrvPolicyExtendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ServicePolicyID"))
if mibBuilder.loadTexts: hpnicfDot11SrvPolicyExtendEntry.setStatus('current')
hpnicfDot11SPEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SPEnable.setStatus('current')
hpnicfDot11APTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1), )
if mibBuilder.loadTexts: hpnicfDot11APTemplateTable.setStatus('current')
hpnicfDot11APTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11APTemplateName"))
if mibBuilder.loadTexts: hpnicfDot11APTemplateEntry.setStatus('current')
hpnicfDot11APTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hpnicfDot11APTemplateName.setStatus('current')
hpnicfDot11APSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APSerialID.setStatus('current')
hpnicfDot11TemplateAPModelAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11TemplateAPModelAlias.setStatus('current')
hpnicfDot11Description = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11Description.setStatus('current')
hpnicfDot11APWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APWorkMode.setStatus('current')
hpnicfDot11APTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APTemplateRowStatus.setStatus('current')
hpnicfDot11APName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 7), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APName.setStatus('current')
hpnicfDot11StatisInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 8), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StatisInterv.setStatus('current')
hpnicfDot11APBroadcastProbeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APBroadcastProbeReply.setStatus('current')
hpnicfDot11StaIdleTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 10), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StaIdleTimerInterv.setStatus('current')
hpnicfDot11StaKeepAliveTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 11), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StaKeepAliveTimerInterv.setStatus('current')
hpnicfDot11APCir = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 12), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APCir.setStatus('current')
hpnicfDot11APCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 13), Integer32()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APCbs.setStatus('current')
hpnicfDot11APPriorityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APPriorityLevel.setStatus('current')
hpnicfDot11APElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11APElementID.setStatus('current')
hpnicfDot11APDevDetectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APDevDetectEnable.setStatus('current')
hpnicfDot11APGetIPMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcpAlloc", 1), ("static", 2))).clone('dhcpAlloc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APGetIPMethod.setStatus('current')
hpnicfDot11StatisIntervMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("realtime", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StatisIntervMode.setStatus('current')
hpnicfDot11ApTrapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 19), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11ApTrapEnabled.setStatus('current')
hpnicfDot11ApFmwUpdState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("inherit", 3))).clone('inherit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11ApFmwUpdState.setStatus('current')
hpnicfDot11StatisIntervModeCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11StatisIntervModeCM.setStatus('current')
hpnicfDot11ApNasIDCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 1, 1, 22), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11ApNasIDCM.setStatus('current')
hpnicfDot11RadioToConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2), )
if mibBuilder.loadTexts: hpnicfDot11RadioToConfigTable.setStatus('current')
hpnicfDot11RadioToConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11APTemplateNameCfg"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11CfgRadioID"))
if mibBuilder.loadTexts: hpnicfDot11RadioToConfigEntry.setStatus('current')
hpnicfDot11APTemplateNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hpnicfDot11APTemplateNameCfg.setStatus('current')
hpnicfDot11CfgRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11CfgRadioID.setStatus('current')
hpnicfDot11CfgRadioPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgRadioPolicyName.setStatus('current')
hpnicfDot11CfgRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 4), HpnicfDot11RadioType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgRadioType.setStatus('current')
hpnicfDot11CfgChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 5), HpnicfDot11ChannelScopeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgChannel.setStatus('current')
hpnicfDot11CfgMaxTxPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 6), HpnicfDot11TxPwrLevelScopeType()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgMaxTxPowerLevel.setStatus('current')
hpnicfDot11PreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 7), HpnicfDot11PreambleType().clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11PreambleLen.setStatus('current')
hpnicfDot11CfgRadioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgRadioStatus.setStatus('current')
hpnicfDot11CfgRdElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11CfgRdElementID.setStatus('current')
hpnicfDot11CfgWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 10), HpnicfDot11WorkMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgWorkMode.setStatus('current')
hpnicfDot11CfgPwrAttValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgPwrAttValue.setStatus('current')
hpnicfDot11RadioTxArithmetic = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("quality", 1), ("bandwidth", 2))).clone('quality')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioTxArithmetic.setStatus('current')
hpnicfDot11CfgChannelLockStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unlocked", 1), ("locked", 2))).clone('unlocked')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgChannelLockStat.setStatus('current')
hpnicfDot11CfgPowerLockStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unlocked", 1), ("locked", 2))).clone('unlocked')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgPowerLockStat.setStatus('current')
hpnicfDot11CfgLBRdGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 15), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgLBRdGroupId.setStatus('current')
hpnicfDot11CfgRRMSDRdGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 16), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgRRMSDRdGroupId.setStatus('current')
hpnicfDot11CfgRadioType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 17), HpnicfDot11RadioType2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgRadioType2.setStatus('current')
hpnicfDot11CfgIDSEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgIDSEnable.setStatus('current')
hpnicfDot11CfgSaEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgSaEnable.setStatus('current')
hpnicfDot11CfgSaCltRtFFTData = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgSaCltRtFFTData.setStatus('current')
hpnicfDot11CfgSaBand = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dot11g", 1), ("dot11aLower", 2), ("dot11aMiddle", 3), ("dot11aUpper", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11CfgSaBand.setStatus('current')
hpnicfDot11APServiceSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 3), )
if mibBuilder.loadTexts: hpnicfDot11APServiceSetTable.setStatus('current')
hpnicfDot11APServiceSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11APTemplateNameCfg"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11CfgRadioID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11CfgServicePolicyID"))
if mibBuilder.loadTexts: hpnicfDot11APServiceSetEntry.setStatus('current')
hpnicfDot11CfgServicePolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 3, 1, 1), HpnicfDot11ServicePolicyIDType())
if mibBuilder.loadTexts: hpnicfDot11CfgServicePolicyID.setStatus('current')
hpnicfDot11SrvSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SrvSetRowStatus.setStatus('current')
hpnicfDot11ServiceSetVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11ServiceSetVlanId.setStatus('current')
hpnicfDot11APSTVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 11), )
if mibBuilder.loadTexts: hpnicfDot11APSTVlanTable.setStatus('current')
hpnicfDot11APSTVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 11, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SIDAPSerialID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11CfgRadioID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11CfgServicePolicyID"))
if mibBuilder.loadTexts: hpnicfDot11APSTVlanEntry.setStatus('current')
hpnicfDot11CfgSTVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11CfgSTVLANID.setStatus('current')
hpnicfDot11CfgSTNASPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11CfgSTNASPortID.setStatus('current')
hpnicfDot11CfgServiceSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11CfgServiceSetRowStatus.setStatus('current')
hpnicfDot11CfgSTNASID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11CfgSTNASID.setStatus('current')
hpnicfDot11APSysInfoSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 4), )
if mibBuilder.loadTexts: hpnicfDot11APSysInfoSetTable.setStatus('current')
hpnicfDot11APSysInfoSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 4, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SIDAPSerialID"))
if mibBuilder.loadTexts: hpnicfDot11APSysInfoSetEntry.setStatus('current')
hpnicfDot11APSysNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APSysNetID.setStatus('current')
hpnicfDot11APCpuUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APCpuUsageThreshold.setStatus('current')
hpnicfDot11APMemUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('onepercent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APMemUsageThreshold.setStatus('current')
hpnicfDot11APLimitTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 5), )
if mibBuilder.loadTexts: hpnicfDot11APLimitTable.setStatus('current')
hpnicfDot11APLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"))
if mibBuilder.loadTexts: hpnicfDot11APLimitEntry.setStatus('current')
hpnicfDot11APSsidNumLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APSsidNumLimit.setStatus('current')
hpnicfDot11APUserCntLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APUserCntLimit.setStatus('current')
hpnicfDot11APUserThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APUserThreshold.setStatus('current')
hpnicfDot11APIfSetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 6), )
if mibBuilder.loadTexts: hpnicfDot11APIfSetTable.setStatus('current')
hpnicfDot11APIfSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 6, 1), ).setIndexNames((0, "HPN-ICF-DOT11-REF-MIB", "hpnicfDot11APElementIndex"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11APSetIfIndex"))
if mibBuilder.loadTexts: hpnicfDot11APIfSetEntry.setStatus('current')
hpnicfDot11APSetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11APSetIfIndex.setStatus('current')
hpnicfDot11APIfAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11APIfAlias.setStatus('current')
hpnicfDot11APServiceVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 7), )
if mibBuilder.loadTexts: hpnicfDot11APServiceVlanTable.setStatus('current')
hpnicfDot11APServiceVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 7, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11APServiceVlanSerialID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11APServiceVlanSPID"))
if mibBuilder.loadTexts: hpnicfDot11APServiceVlanEntry.setStatus('current')
hpnicfDot11APServiceVlanSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 7, 1, 1), OctetString())
if mibBuilder.loadTexts: hpnicfDot11APServiceVlanSerialID.setStatus('current')
hpnicfDot11APServiceVlanSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 7, 1, 2), HpnicfDot11ServicePolicyIDType())
if mibBuilder.loadTexts: hpnicfDot11APServiceVlanSPID.setStatus('current')
hpnicfDot11APServiceVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APServiceVlanId.setStatus('current')
hpnicfDot11APServiceVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11APServiceVlanRowStatus.setStatus('current')
hpnicfDot11RadioConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8), )
if mibBuilder.loadTexts: hpnicfDot11RadioConfigTable.setStatus('current')
hpnicfDot11RadioConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RCAPSerialID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RCRadioID"))
if mibBuilder.loadTexts: hpnicfDot11RadioConfigEntry.setStatus('current')
hpnicfDot11RCAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127)))
if mibBuilder.loadTexts: hpnicfDot11RCAPSerialID.setStatus('current')
hpnicfDot11RCRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11RCRadioID.setStatus('current')
hpnicfDot11RCRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 3), HpnicfDot11RadioType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCRadioType.setStatus('current')
hpnicfDot11RCChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 4), HpnicfDot11ChannelScopeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCChannel.setStatus('current')
hpnicfDot11RCPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 5), HpnicfDot11PreambleType().clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCPreambleLen.setStatus('current')
hpnicfDot11RCPwrAttValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCPwrAttValue.setStatus('current')
hpnicfDot11RCApPowerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 7), HpnicfDot11TxPwrLevelScopeType()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCApPowerLevel.setStatus('current')
hpnicfDot11RCDynamicChlState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCDynamicChlState.setStatus('current')
hpnicfDot11RCDynamicPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCDynamicPowerState.setStatus('current')
hpnicfDot11RCRadioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCRadioStatus.setStatus('current')
hpnicfDot11RCRadioRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCRadioRate.setStatus('current')
hpnicfDot11RCPwrAdjustStepLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RCPwrAdjustStepLength.setStatus('current')
hpnicfDot11RCRadioType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 13), HpnicfDot11RadioType2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCRadioType2.setStatus('current')
hpnicfDot11RCPreambleLenCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("long", 0), ("short", 1))).clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCPreambleLenCM.setStatus('current')
hpnicfDot11RCDynamicChlStateCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCDynamicChlStateCM.setStatus('current')
hpnicfDot11RCRadioStatusCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCRadioStatusCM.setStatus('current')
hpnicfDot11RCRadioRateCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCRadioRateCM.setStatus('current')
hpnicfDot11RCDynamicPowerStateCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 8, 1, 18), HpnicfDot11TruthValueCM()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RCDynamicPowerStateCM.setStatus('current')
hpnicfDot11RadioSSIDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9), )
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDCfgTable.setStatus('current')
hpnicfDot11RadioSSIDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioSSIDSerialID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioSSIDRadioID"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioSSIDWLANID"))
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDCfgEntry.setStatus('current')
hpnicfDot11RadioSSIDSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDSerialID.setStatus('current')
hpnicfDot11RadioSSIDRadioID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDRadioID.setStatus('current')
hpnicfDot11RadioSSIDWLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1, 3), Integer32())
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDWLANID.setStatus('current')
hpnicfDot11RadioSSIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1, 4), HpnicfDot11ServicePolicyIDType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDIndex.setStatus('current')
hpnicfDot11RadioBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11RadioBSSID.setStatus('current')
hpnicfDot11RadioSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RadioSSIDRowStatus.setStatus('current')
hpnicfDot11APSerialIDTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10), )
if mibBuilder.loadTexts: hpnicfDot11APSerialIDTable.setStatus('current')
hpnicfDot11APSerialIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SIDAPSerialID"))
if mibBuilder.loadTexts: hpnicfDot11APSerialIDEntry.setStatus('current')
hpnicfDot11SIDAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 1), OctetString())
if mibBuilder.loadTexts: hpnicfDot11SIDAPSerialID.setStatus('current')
hpnicfDot11SIDAPWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPWorkMode.setStatus('current')
hpnicfDot11SIDAPGetIPMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dhcpAlloc", 1), ("static", 2))).clone('dhcpAlloc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPGetIPMethod.setStatus('current')
hpnicfDot11SIDAPTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPTemplateName.setStatus('current')
hpnicfDot11SIDModelAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDModelAlias.setStatus('current')
hpnicfDot11SIDAPDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPDescription.setStatus('current')
hpnicfDot11SIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDRowStatus.setStatus('current')
hpnicfDot11SIDAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 8), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPName.setStatus('current')
hpnicfDot11SIDStatisInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 9), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDStatisInterv.setStatus('current')
hpnicfDot11SIDAPBroadcastProbeReply = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPBroadcastProbeReply.setStatus('current')
hpnicfDot11SIDAPStaIdleTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 11), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPStaIdleTimerInterv.setStatus('current')
hpnicfDot11SIDStaKeepAliveTimerInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 12), Integer32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDStaKeepAliveTimerInterv.setStatus('current')
hpnicfDot11SIDAPCir = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 13), Integer32()).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPCir.setStatus('current')
hpnicfDot11SIDAPCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 14), Integer32()).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPCbs.setStatus('current')
hpnicfDot11SIDAPPriorityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPPriorityLevel.setStatus('current')
hpnicfDot11SIDAPElementID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11SIDAPElementID.setStatus('current')
hpnicfDot11SIDAPDevDetectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPDevDetectEnable.setStatus('current')
hpnicfDot11SIDAPStatisIntervMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("realtime", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPStatisIntervMode.setStatus('current')
hpnicfDot11SIDAPWorkModeCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("monitor", 1), ("semimonitor", 2))).clone('normal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11SIDAPWorkModeCM.setStatus('current')
hpnicfDot11RadioIntfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1), )
if mibBuilder.loadTexts: hpnicfDot11RadioIntfConfigTable.setStatus('current')
hpnicfDot11RadioIntfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioIfIdx"))
if mibBuilder.loadTexts: hpnicfDot11RadioIntfConfigEntry.setStatus('current')
hpnicfDot11RadioIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11RadioIfIdx.setStatus('current')
hpnicfDot11RadioCfgBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 2), Integer32().clone(100)).setUnits('TU').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgBeaconIntvl.setStatus('current')
hpnicfDot11RadioCfgDtimIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 3), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgDtimIntvl.setStatus('current')
hpnicfDot11RadioCfgRtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 4), Integer32().clone(2346)).setUnits('Byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgRtsThreshold.setStatus('current')
hpnicfDot11RadioCfgFragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 5), Integer32().clone(2346)).setUnits('Byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgFragThreshold.setStatus('current')
hpnicfDot11RadioCfgShtRetryThld = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 6), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgShtRetryThld.setStatus('current')
hpnicfDot11RadioCfglongRtrThld = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 7), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfglongRtrThld.setStatus('current')
hpnicfDot11RadioCfgMaxRxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 8), Unsigned32().clone(2000)).setUnits('millisecond').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgMaxRxLifetime.setStatus('current')
hpnicfDot11RadioCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 9), HpnicfDot11RadioType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgType.setStatus('current')
hpnicfDot11RadioCfgChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 10), HpnicfDot11ChannelScopeType().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgChannel.setStatus('current')
hpnicfDot11RadioCfgMaxTxPwrLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 11), HpnicfDot11TxPwrLevelScopeType()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgMaxTxPwrLvl.setStatus('current')
hpnicfDot11RadioCfgPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 12), HpnicfDot11PreambleType().clone('short')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgPreambleLen.setStatus('current')
hpnicfDot11RadioCfgWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 13), HpnicfDot11WorkMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgWorkMode.setStatus('current')
hpnicfDot11RadioCfgOnly11gEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgOnly11gEnable.setStatus('current')
hpnicfDot11RadioCfgType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 15), HpnicfDot11RadioType2()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgType2.setStatus('current')
hpnicfDot11RadioCfgRssithresholdCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 1, 1, 16), Integer32().clone(1)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioCfgRssithresholdCM.setStatus('current')
hpnicfDot11RadioIntfBindTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 2), )
if mibBuilder.loadTexts: hpnicfDot11RadioIntfBindTable.setStatus('current')
hpnicfDot11RadioIntfBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioIfIdx"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioIntfBindSvcPlcyID"))
if mibBuilder.loadTexts: hpnicfDot11RadioIntfBindEntry.setStatus('current')
hpnicfDot11RadioIntfBindSvcPlcyID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 2, 1, 1), HpnicfDot11ServicePolicyIDType())
if mibBuilder.loadTexts: hpnicfDot11RadioIntfBindSvcPlcyID.setStatus('current')
hpnicfDot11RadioIntfBindIfIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RadioIntfBindIfIdx.setStatus('current')
hpnicfDot11RadioIntfBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11RadioIntfBindRowStatus.setStatus('current')
hpnicfDot11DataRateConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1), )
if mibBuilder.loadTexts: hpnicfDot11DataRateConfigTable.setStatus('current')
hpnicfDot11DataRateConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioTypeID"))
if mibBuilder.loadTexts: hpnicfDot11DataRateConfigEntry.setStatus('current')
hpnicfDot11RadioTypeID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1, 1, 1), HpnicfDot11RadioType())
if mibBuilder.loadTexts: hpnicfDot11RadioTypeID.setStatus('current')
hpnicfDot11SupportedRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SupportedRateSet.setStatus('current')
hpnicfDot11MandatoryRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11MandatoryRateSet.setStatus('current')
hpnicfDot11DisabledRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11DisabledRateSet.setStatus('current')
hpnicfDot11SmartRateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SmartRateSet.setStatus('current')
hpnicfDot11WlanEssIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 1), )
if mibBuilder.loadTexts: hpnicfDot11WlanEssIfTable.setStatus('current')
hpnicfDot11WlanEssIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11WlanEssIfNumber"))
if mibBuilder.loadTexts: hpnicfDot11WlanEssIfEntry.setStatus('current')
hpnicfDot11WlanEssIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11WlanEssIfNumber.setStatus('current')
hpnicfDot11WlanEssIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WlanEssIfIndex.setStatus('current')
hpnicfDot11WlanEssRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanEssRowStatus.setStatus('current')
hpnicfDot11WlanBssIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 2), )
if mibBuilder.loadTexts: hpnicfDot11WlanBssIfTable.setStatus('current')
hpnicfDot11WlanBssIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11WlanBssIfNumber"))
if mibBuilder.loadTexts: hpnicfDot11WlanBssIfEntry.setStatus('current')
hpnicfDot11WlanBssIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11WlanBssIfNumber.setStatus('current')
hpnicfDot11WlanBssIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WlanBssIfIndex.setStatus('current')
hpnicfDot11WlanBssRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanBssRowStatus.setStatus('current')
hpnicfDot11WLANEthernetIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 3), )
if mibBuilder.loadTexts: hpnicfDot11WLANEthernetIfTable.setStatus('current')
hpnicfDot11WLANEthernetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11WlanEthernetIfNumber"))
if mibBuilder.loadTexts: hpnicfDot11WLANEthernetIfEntry.setStatus('current')
hpnicfDot11WlanEthernetIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11WlanEthernetIfNumber.setStatus('current')
hpnicfDot11WLANEthernetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WLANEthernetIfIndex.setStatus('current')
hpnicfDot11WlanEthernetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanEthernetRowStatus.setStatus('current')
hpnicfDot11PortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 4), )
if mibBuilder.loadTexts: hpnicfDot11PortSecurityTable.setStatus('current')
hpnicfDot11PortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfDot11PortSecurityEntry.setStatus('current')
hpnicfDot11PortSecurityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noRestrictions", 1), ("userLoginSecureExt", 2), ("psk", 3), ("macAddressAndPsk", 4), ("userLoginSecureExtOrPsk", 5), ("ext", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11PortSecurityMode.setStatus('current')
hpnicfDot11SecurityUserLoginTxKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("userLoginTxKeyTypeNone", 1), ("userLoginTxKeyTypeDot11Key", 2), ("userLoginTxKeyTypeRsaRC4Key", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SecurityUserLoginTxKeyType.setStatus('current')
hpnicfDot11SecurityPskKeyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pskKeyModeNone", 1), ("pskKeyModePassPhrase", 2), ("pskKeyModeRawKey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SecurityPskKeyMode.setStatus('current')
hpnicfDot11SecurityPskKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11SecurityPskKeyString.setStatus('current')
hpnicfDot11WlanMeshIfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 5), )
if mibBuilder.loadTexts: hpnicfDot11WlanMeshIfTable.setStatus('current')
hpnicfDot11WlanMeshIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 5, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11WlanMeshIfNumber"))
if mibBuilder.loadTexts: hpnicfDot11WlanMeshIfEntry.setStatus('current')
hpnicfDot11WlanMeshIfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfDot11WlanMeshIfNumber.setStatus('current')
hpnicfDot11WlanMeshIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfDot11WlanMeshIfIndex.setStatus('current')
hpnicfDot11WlanMeshRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 6, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfDot11WlanMeshRowStatus.setStatus('current')
hpnicfDot11BackupACAdrssIP = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 7, 1), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11BackupACAdrssIP.setStatus('current')
hpnicfDot11BackupACAdrssIPv6 = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 7, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11BackupACAdrssIPv6.setStatus('current')
hpnicfDot11nRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1), )
if mibBuilder.loadTexts: hpnicfDot11nRadioCfgTable.setStatus('current')
hpnicfDot11nRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11nRadioCfgIndex"))
if mibBuilder.loadTexts: hpnicfDot11nRadioCfgEntry.setStatus('current')
hpnicfDot11nRadioCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 1), HpnicfDot11RadioElementIndex())
if mibBuilder.loadTexts: hpnicfDot11nRadioCfgIndex.setStatus('current')
hpnicfDot11nAMpduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nAMpduEnable.setStatus('current')
hpnicfDot11nAMsduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nAMsduEnable.setStatus('current')
hpnicfDot11nClientDot11nOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nClientDot11nOnly.setStatus('current')
hpnicfDot11nChanelBand = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mode20", 1), ("mode40", 2), ("mode80", 3))).clone('mode40')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nChanelBand.setStatus('current')
hpnicfDot11nShortGiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nShortGiEnable.setStatus('current')
hpnicfDot11nClientDot11acOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nClientDot11acOnly.setStatus('current')
hpnicfDot11RadioWDSTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2), )
if mibBuilder.loadTexts: hpnicfDot11RadioWDSTable.setStatus('current')
hpnicfDot11RadioWDSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11RadioWDSIndex"))
if mibBuilder.loadTexts: hpnicfDot11RadioWDSEntry.setStatus('current')
hpnicfDot11RadioWDSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2, 1, 1), HpnicfDot11RadioElementIndex())
if mibBuilder.loadTexts: hpnicfDot11RadioWDSIndex.setStatus('current')
hpnicfDot11RadioWDSMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nowds", 1), ("wds", 2))).clone('nowds')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWDSMode.setStatus('current')
hpnicfDot11RadioWDSNetWorkID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11RadioWDSNetWorkID.setStatus('current')
hpnicfDot11WDSSecPskKeyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pskKeyModeNone", 1), ("pskKeyModePassPhrase", 2), ("pskKeyModeRawKey", 3))).clone('pskKeyModeNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WDSSecPskKeyMode.setStatus('current')
hpnicfDot11WDSSecPskKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11WDSSecPskKeyString.setStatus('current')
hpnicfDot11nRadioCfg2Table = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3), )
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2Table.setStatus('current')
hpnicfDot11nRadioCfg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1), ).setIndexNames((0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11nRadioCfg2APIDIndex"), (0, "HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11nRadioCfg2RadioIDIndex"))
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2Entry.setStatus('current')
hpnicfDot11nRadioCfg2APIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 1), HpnicfDot11ObjectIDType())
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2APIDIndex.setStatus('current')
hpnicfDot11nRadioCfg2RadioIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 2), HpnicfDot11RadioScopeType())
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2RadioIDIndex.setStatus('current')
hpnicfDot11nRadioCfg2AMpduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2AMpduEnable.setStatus('current')
hpnicfDot11nRadioCfg2AMsduEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2AMsduEnable.setStatus('current')
hpnicfDot11nRadioCfg2ClientDot11nOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ClientDot11nOnly.setStatus('current')
hpnicfDot11nRadioCfg2ChannelBand = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mode20", 1), ("mode40", 2), ("mode80", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ChannelBand.setStatus('current')
hpnicfDot11nRadioCfg2ShortGiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ShortGiEnable.setStatus('current')
hpnicfDot11nRadioCfg2AMpduEnableCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2AMpduEnableCM.setStatus('current')
hpnicfDot11nRadioCfg2ChannelBandCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mode40", 1), ("mode20", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ChannelBandCM.setStatus('current')
hpnicfDot11nRadioCfg2ShortGiEnableCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ShortGiEnableCM.setStatus('current')
hpnicfDot11nRadioCfg2ClientDot11acOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ClientDot11acOnly.setStatus('current')
hpnicfDot11nRadioCfg2ClientDot11nOnlyCM = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 8, 3, 1, 12), HpnicfDot11TruthValueCM().clone('dot11false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfDot11nRadioCfg2ClientDot11nOnlyCM.setStatus('current')
hpnicfDot11CfgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 0))
hpnicfDot11CfgCipherChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 0, 1)).setObjects(("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SSIDName"), ("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SecurityCiphers"))
if mibBuilder.loadTexts: hpnicfDot11CfgCipherChange.setStatus('current')
hpnicfDot11CfgPSKChange = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 0, 2)).setObjects(("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11SSIDName"))
if mibBuilder.loadTexts: hpnicfDot11CfgPSKChange.setStatus('current')
hpnicfDot11SSIDWepIDConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 0, 3)).setObjects(("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11PreConflictTemplateNum"), ("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11CurrConflictTemplateNum"), ("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ConflictCipherIdx"), ("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ConfigureAPID"), ("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ConfigureRadioID"), ("HPN-ICF-DOT11-CFG-MIB", "hpnicfDot11ConfigureAPMacAddress"))
if mibBuilder.loadTexts: hpnicfDot11SSIDWepIDConflictTrap.setStatus('current')
hpnicfDot11CfgTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1))
hpnicfDot11PreConflictTemplateNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11PreConflictTemplateNum.setStatus('current')
hpnicfDot11CurrConflictTemplateNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11CurrConflictTemplateNum.setStatus('current')
hpnicfDot11ConflictCipherIdx = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11ConflictCipherIdx.setStatus('current')
hpnicfDot11ConfigureAPID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1, 4), HpnicfDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11ConfigureAPID.setStatus('current')
hpnicfDot11ConfigureRadioID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1, 5), HpnicfDot11RadioScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11ConfigureRadioID.setStatus('current')
hpnicfDot11ConfigureAPMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 75, 4, 9, 1, 6), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfDot11ConfigureAPMacAddress.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-DOT11-CFG-MIB", hpnicfDot11nRadioCfg2ClientDot11nOnly=hpnicfDot11nRadioCfg2ClientDot11nOnly, hpnicfDot11RCRadioType=hpnicfDot11RCRadioType, hpnicfDot11APElementID=hpnicfDot11APElementID, hpnicfDot11APTemplateRowStatus=hpnicfDot11APTemplateRowStatus, hpnicfDot11SrvPortSecurityEntry=hpnicfDot11SrvPortSecurityEntry, hpnicfDot11RPLongRetryThreshold=hpnicfDot11RPLongRetryThreshold, hpnicfDot11SrvSecurityKeyType=hpnicfDot11SrvSecurityKeyType, hpnicfDot11SIDAPCbs=hpnicfDot11SIDAPCbs, hpnicfDot11PortSecurityMode=hpnicfDot11PortSecurityMode, hpnicfDot11APConfigGroup=hpnicfDot11APConfigGroup, hpnicfDot11APDevDetectEnable=hpnicfDot11APDevDetectEnable, hpnicfDot11ApFmwUpdState=hpnicfDot11ApFmwUpdState, hpnicfDot11APIfSetEntry=hpnicfDot11APIfSetEntry, hpnicfDot11SrvSetRowStatus=hpnicfDot11SrvSetRowStatus, hpnicfDot11DisabledRateSet=hpnicfDot11DisabledRateSet, hpnicfDot11SPOutCirValue=hpnicfDot11SPOutCirValue, hpnicfDot11SrvPolicyExtRowStatus=hpnicfDot11SrvPolicyExtRowStatus, hpnicfDot11APSysNetID=hpnicfDot11APSysNetID, hpnicfDot11ConflictCipherIdx=hpnicfDot11ConflictCipherIdx, hpnicfDot11RadioWDSNetWorkID=hpnicfDot11RadioWDSNetWorkID, hpnicfDot11RadioWDSIndex=hpnicfDot11RadioWDSIndex, hpnicfDot11RadioSSIDSerialID=hpnicfDot11RadioSSIDSerialID, hpnicfDot11RadioToConfigTable=hpnicfDot11RadioToConfigTable, hpnicfDot11ServicePolicyExtID=hpnicfDot11ServicePolicyExtID, hpnicfDot11StaIdleTimerIntvl=hpnicfDot11StaIdleTimerIntvl, hpnicfDot11APSTVlanTable=hpnicfDot11APSTVlanTable, hpnicfDot11UplinkTrackId=hpnicfDot11UplinkTrackId, hpnicfDot11DataRateConfigGroup=hpnicfDot11DataRateConfigGroup, hpnicfDot11SSIDWepIDConflictTrap=hpnicfDot11SSIDWepIDConflictTrap, hpnicfDot11CfgPSKChange=hpnicfDot11CfgPSKChange, hpnicfDot11StaIdleTimerInterv=hpnicfDot11StaIdleTimerInterv, hpnicfDot11CfgWorkMode=hpnicfDot11CfgWorkMode, hpnicfDot11APName=hpnicfDot11APName, hpnicfDot11nRadioCfgIndex=hpnicfDot11nRadioCfgIndex, hpnicfDot11AllAPCpuUsageThreshold=hpnicfDot11AllAPCpuUsageThreshold, hpnicfDot11ServicePolicyID=hpnicfDot11ServicePolicyID, hpnicfDot11AdjIntfTrapThreshold=hpnicfDot11AdjIntfTrapThreshold, hpnicfDot11APIfSetTable=hpnicfDot11APIfSetTable, hpnicfDot11APGetIPMethod=hpnicfDot11APGetIPMethod, hpnicfDot11SSIDHiddenCM=hpnicfDot11SSIDHiddenCM, hpnicfDot11SSIDHidden=hpnicfDot11SSIDHidden, hpnicfDot11RCPwrAttValue=hpnicfDot11RCPwrAttValue, hpnicfDot11RadioIntfConfigEntry=hpnicfDot11RadioIntfConfigEntry, hpnicfDot11nClientDot11nOnly=hpnicfDot11nClientDot11nOnly, hpnicfDot11WlanEssIfEntry=hpnicfDot11WlanEssIfEntry, hpnicfDot11BeaconIntervalMs=hpnicfDot11BeaconIntervalMs, hpnicfDot11RadioIntfBindSvcPlcyID=hpnicfDot11RadioIntfBindSvcPlcyID, hpnicfDot11RCAPSerialID=hpnicfDot11RCAPSerialID, hpnicfDot11WlanMeshRowStatus=hpnicfDot11WlanMeshRowStatus, hpnicfDot11SPIsolate=hpnicfDot11SPIsolate, hpnicfDot11WlanBssIfTable=hpnicfDot11WlanBssIfTable, hpnicfDot11nRadioCfg2ClientDot11acOnly=hpnicfDot11nRadioCfg2ClientDot11acOnly, hpnicfDot11SrvPortSecurityModeCM=hpnicfDot11SrvPortSecurityModeCM, hpnicfDot11RadioSSIDWLANID=hpnicfDot11RadioSSIDWLANID, hpnicfDot11MaxAPPerIf=hpnicfDot11MaxAPPerIf, hpnicfDot11SecurityCiphersCM=hpnicfDot11SecurityCiphersCM, hpnicfDot11APIfAlias=hpnicfDot11APIfAlias, hpnicfDot11FragThreshold=hpnicfDot11FragThreshold, hpnicfDot11RPDtimInterval=hpnicfDot11RPDtimInterval, hpnicfDot11nRadioCfg2ClientDot11nOnlyCM=hpnicfDot11nRadioCfg2ClientDot11nOnlyCM, hpnicfDot11nRadioCfg2AMpduEnableCM=hpnicfDot11nRadioCfg2AMpduEnableCM, hpnicfDot11RadioCfgBeaconIntvl=hpnicfDot11RadioCfgBeaconIntvl, hpnicfDot11APCir=hpnicfDot11APCir, hpnicfDot11APUserThreshold=hpnicfDot11APUserThreshold, hpnicfDot11GlobeConfigGroup=hpnicfDot11GlobeConfigGroup, hpnicfDot11DataRateConfigEntry=hpnicfDot11DataRateConfigEntry, hpnicfDot11WLANEthernetIfTable=hpnicfDot11WLANEthernetIfTable, hpnicfDot11APUserUplimit=hpnicfDot11APUserUplimit, hpnicfDot11RadioCfgRssithresholdCM=hpnicfDot11RadioCfgRssithresholdCM, hpnicfDot11AllAPMonitorMode=hpnicfDot11AllAPMonitorMode, hpnicfDot11RadioTxArithmetic=hpnicfDot11RadioTxArithmetic, hpnicfDot11ServicePolicyExtEntry=hpnicfDot11ServicePolicyExtEntry, hpnicfDot11RCPwrAdjustStepLength=hpnicfDot11RCPwrAdjustStepLength, hpnicfDot11APLimitTable=hpnicfDot11APLimitTable, hpnicfDot11SPInCirMode=hpnicfDot11SPInCirMode, hpnicfDot11RadioSSIDRowStatus=hpnicfDot11RadioSSIDRowStatus, hpnicfDot11SPBeaconMeasInterval=hpnicfDot11SPBeaconMeasInterval, hpnicfDot11RadioCfgDtimIntvl=hpnicfDot11RadioCfgDtimIntvl, hpnicfDot11nRadioCfg2RadioIDIndex=hpnicfDot11nRadioCfg2RadioIDIndex, hpnicfDot11RadioPolicyEntry=hpnicfDot11RadioPolicyEntry, hpnicfDot11APServiceVlanSerialID=hpnicfDot11APServiceVlanSerialID, hpnicfDot11nRadioCfgEntry=hpnicfDot11nRadioCfgEntry, hpnicfDot11ACNasIDCM=hpnicfDot11ACNasIDCM, hpnicfDot11RadioIntfBindTable=hpnicfDot11RadioIntfBindTable, hpnicfDot11PreambleLen=hpnicfDot11PreambleLen, hpnicfDot11APTemplateName=hpnicfDot11APTemplateName, hpnicfDot11CfgRdElementID=hpnicfDot11CfgRdElementID, hpnicfDot11nRadioCfg2ChannelBandCM=hpnicfDot11nRadioCfg2ChannelBandCM, hpnicfDot11CfgSTNASID=hpnicfDot11CfgSTNASID, hpnicfDot11CfgPwrAttValue=hpnicfDot11CfgPwrAttValue, hpnicfDot11RCDynamicChlStateCM=hpnicfDot11RCDynamicChlStateCM, hpnicfDot11RadioCfgPreambleLen=hpnicfDot11RadioCfgPreambleLen, hpnicfDot11APSsidNumLimit=hpnicfDot11APSsidNumLimit, hpnicfDot11CfgSTVLANID=hpnicfDot11CfgSTVLANID, hpnicfDot11RtsThreshold=hpnicfDot11RtsThreshold, hpnicfDot11nAMsduEnable=hpnicfDot11nAMsduEnable, hpnicfDot11RadioPolicyExtEntry=hpnicfDot11RadioPolicyExtEntry, hpnicfDot11SecurityCiphers=hpnicfDot11SecurityCiphers, hpnicfDot11APSysInfoSetTable=hpnicfDot11APSysInfoSetTable, hpnicfDot11APServiceVlanEntry=hpnicfDot11APServiceVlanEntry, hpnicfDot11RPShortRetryThreshold=hpnicfDot11RPShortRetryThreshold, hpnicfDot11GlobalApFmwUpdState=hpnicfDot11GlobalApFmwUpdState, hpnicfDot11APL2IsolateEnable=hpnicfDot11APL2IsolateEnable, hpnicfDot11RPClientMaxCount=hpnicfDot11RPClientMaxCount, hpnicfDot11APSerialID=hpnicfDot11APSerialID, hpnicfDot11CfgRadioPolicyName=hpnicfDot11CfgRadioPolicyName, hpnicfDot11RadioIntfConfigGroup=hpnicfDot11RadioIntfConfigGroup, hpnicfDot11CFG=hpnicfDot11CFG, hpnicfDot11SrvPolicyStatusCM=hpnicfDot11SrvPolicyStatusCM, hpnicfDot11RPFragThreshold=hpnicfDot11RPFragThreshold, hpnicfDot11SIDAPSerialID=hpnicfDot11SIDAPSerialID, hpnicfDot11RtCollectSwitch=hpnicfDot11RtCollectSwitch, hpnicfDot11RCRadioID=hpnicfDot11RCRadioID, hpnicfDot11WlanMeshIfIndex=hpnicfDot11WlanMeshIfIndex, hpnicfDot11SIDAPPriorityLevel=hpnicfDot11SIDAPPriorityLevel, hpnicfDot11APServiceVlanSPID=hpnicfDot11APServiceVlanSPID, hpnicfDot11SSIDEncryptionMode=hpnicfDot11SSIDEncryptionMode, hpnicfDot11RadioIfIdx=hpnicfDot11RadioIfIdx, hpnicfDot11SecurityPskKeyMode=hpnicfDot11SecurityPskKeyMode, hpnicfDot11WlanMeshIfEntry=hpnicfDot11WlanMeshIfEntry, hpnicfDot11ConfigureAPMacAddress=hpnicfDot11ConfigureAPMacAddress, hpnicfDot11APSerialIDEntry=hpnicfDot11APSerialIDEntry, hpnicfDot11SecurityServicePolicyID=hpnicfDot11SecurityServicePolicyID, hpnicfDot11CfgMaxTxPowerLevel=hpnicfDot11CfgMaxTxPowerLevel, hpnicfDot11APDoSProtectEnable=hpnicfDot11APDoSProtectEnable, hpnicfDot11PolicyConfigGroup=hpnicfDot11PolicyConfigGroup, hpnicfDot11APServiceSetEntry=hpnicfDot11APServiceSetEntry, hpnicfDot11WlanEthernetRowStatus=hpnicfDot11WlanEthernetRowStatus, hpnicfDot11SecIEStatus=hpnicfDot11SecIEStatus, hpnicfDot11SIDStaKeepAliveTimerInterv=hpnicfDot11SIDStaKeepAliveTimerInterv, hpnicfDot11CfgPowerLockStat=hpnicfDot11CfgPowerLockStat, hpnicfDot11RCRadioRateCM=hpnicfDot11RCRadioRateCM, hpnicfDot11APSTVlanEntry=hpnicfDot11APSTVlanEntry, hpnicfDot11DataRateConfigTable=hpnicfDot11DataRateConfigTable, hpnicfDot11Description=hpnicfDot11Description, hpnicfDot11APLastUpdateStatTime=hpnicfDot11APLastUpdateStatTime, hpnicfDot11ClientMaxCount=hpnicfDot11ClientMaxCount, hpnicfDot11ServicePolicyExtTable=hpnicfDot11ServicePolicyExtTable, hpnicfDot11RadioSSIDIndex=hpnicfDot11RadioSSIDIndex, hpnicfDot11RadioSSIDCfgTable=hpnicfDot11RadioSSIDCfgTable, hpnicfDot11SrvPolicyExtendTable=hpnicfDot11SrvPolicyExtendTable, hpnicfDot11CfgServiceSetRowStatus=hpnicfDot11CfgServiceSetRowStatus, hpnicfDot11WlanBssIfIndex=hpnicfDot11WlanBssIfIndex, hpnicfDot11SPEnable=hpnicfDot11SPEnable, hpnicfDot11RCRadioRate=hpnicfDot11RCRadioRate, hpnicfDot11APScanMode=hpnicfDot11APScanMode, hpnicfDot11RadioWDSTable=hpnicfDot11RadioWDSTable, hpnicfDot11SupportedRateSet=hpnicfDot11SupportedRateSet, hpnicfDot11APServiceSetTable=hpnicfDot11APServiceSetTable, hpnicfDot11ACBackupGroup=hpnicfDot11ACBackupGroup, hpnicfDot11PreConflictTemplateNum=hpnicfDot11PreConflictTemplateNum, hpnicfDot11SrvPolicyRowStatus=hpnicfDot11SrvPolicyRowStatus, hpnicfDot11ChnlSwitChkInterval=hpnicfDot11ChnlSwitChkInterval, hpnicfDot11WlanInfBindingType=hpnicfDot11WlanInfBindingType, hpnicfDot11DtimInterval=hpnicfDot11DtimInterval, hpnicfDot11IntfTrapThreshold=hpnicfDot11IntfTrapThreshold, hpnicfDot11RadioIntfBindRowStatus=hpnicfDot11RadioIntfBindRowStatus, hpnicfDot11SIDAPWorkModeCM=hpnicfDot11SIDAPWorkModeCM, hpnicfDot11SPIsolateCM=hpnicfDot11SPIsolateCM, hpnicfDot11nRadioCfg2APIDIndex=hpnicfDot11nRadioCfg2APIDIndex, hpnicfDot11InterfaceConfigGroup=hpnicfDot11InterfaceConfigGroup, hpnicfDot11AllAPMemUsageThreshold=hpnicfDot11AllAPMemUsageThreshold, hpnicfDot11CfgLBRdGroupId=hpnicfDot11CfgLBRdGroupId, hpnicfDot11ACDataTunnelSecSupport=hpnicfDot11ACDataTunnelSecSupport, hpnicfDot11PersistentName=hpnicfDot11PersistentName, hpnicfDot11CfgRadioID=hpnicfDot11CfgRadioID, hpnicfDot11RadioIntfConfigTable=hpnicfDot11RadioIntfConfigTable, hpnicfDot11nChanelBand=hpnicfDot11nChanelBand, hpnicfDot11SSIDName=hpnicfDot11SSIDName, hpnicfDot11APCbs=hpnicfDot11APCbs, hpnicfDot11RadioWDSMode=hpnicfDot11RadioWDSMode, PYSNMP_MODULE_ID=hpnicfDot11CFG, hpnicfDot11RdoPolicyRowStatus=hpnicfDot11RdoPolicyRowStatus, hpnicfDot11RadioSSIDCfgEntry=hpnicfDot11RadioSSIDCfgEntry, hpnicfDot11CipherKeyIndex=hpnicfDot11CipherKeyIndex, hpnicfDot11CfgSaBand=hpnicfDot11CfgSaBand, hpnicfDot11AuthenModeCM=hpnicfDot11AuthenModeCM, hpnicfDot11RCRadioStatusCM=hpnicfDot11RCRadioStatusCM, hpnicfDot11RdoClientMaxCount=hpnicfDot11RdoClientMaxCount, hpnicfDot11SPInCirStaticValue=hpnicfDot11SPInCirStaticValue, hpnicfDot11APPriorityLevel=hpnicfDot11APPriorityLevel, hpnicfDot11RadioWDSEntry=hpnicfDot11RadioWDSEntry, hpnicfDot11RCChannel=hpnicfDot11RCChannel, hpnicfDot11MaxRxLifetime=hpnicfDot11MaxRxLifetime, hpnicfDot11WlanexAuthServerIP=hpnicfDot11WlanexAuthServerIP, hpnicfDot11CfgRadioType=hpnicfDot11CfgRadioType, hpnicfDot11SIDAPElementID=hpnicfDot11SIDAPElementID, hpnicfDot11WlanInfPVID=hpnicfDot11WlanInfPVID, hpnicfDot11CipherKeyType=hpnicfDot11CipherKeyType, hpnicfDot11BackupACAdrssIPv6=hpnicfDot11BackupACAdrssIPv6, hpnicfDot11MandatoryRateSet=hpnicfDot11MandatoryRateSet, hpnicfDot11SIDAPWorkMode=hpnicfDot11SIDAPWorkMode, hpnicfDot11SIDAPDescription=hpnicfDot11SIDAPDescription, hpnicfDot11RtCollectIntvl=hpnicfDot11RtCollectIntvl, hpnicfDot11RadioPolicyExtTable=hpnicfDot11RadioPolicyExtTable, hpnicfDot11SIDAPGetIPMethod=hpnicfDot11SIDAPGetIPMethod, hpnicfDot11WlanEssIfNumber=hpnicfDot11WlanEssIfNumber, hpnicfDot11SPOutCirStaticValue=hpnicfDot11SPOutCirStaticValue, hpnicfDot11CfgTrapVarObjects=hpnicfDot11CfgTrapVarObjects, hpnicfDot11SIDModelAlias=hpnicfDot11SIDModelAlias, hpnicfDot11ConfigureAPID=hpnicfDot11ConfigureAPID, hpnicfDot11SrvPolicyExtendEntry=hpnicfDot11SrvPolicyExtendEntry, hpnicfDot11ACAutoAPSupport=hpnicfDot11ACAutoAPSupport, hpnicfDot11APServiceVlanTable=hpnicfDot11APServiceVlanTable, hpnicfDot11SIDAPBroadcastProbeReply=hpnicfDot11SIDAPBroadcastProbeReply, hpnicfDot11APTemplateEntry=hpnicfDot11APTemplateEntry, hpnicfDot11RadioCfgType2=hpnicfDot11RadioCfgType2, hpnicfDot11nRadioCfg2ShortGiEnable=hpnicfDot11nRadioCfg2ShortGiEnable, hpnicfDot11PortSecurityTable=hpnicfDot11PortSecurityTable, hpnicfDot11SPInCirValue=hpnicfDot11SPInCirValue, hpnicfDot11BeaconInterval=hpnicfDot11BeaconInterval, hpnicfDot11SIDAPStatisIntervMode=hpnicfDot11SIDAPStatisIntervMode, hpnicfDot11RadioCfgType=hpnicfDot11RadioCfgType, hpnicfDot11CfgNotifyGroup=hpnicfDot11CfgNotifyGroup, hpnicfDot11WDSSecPskKeyString=hpnicfDot11WDSSecPskKeyString, hpnicfDot11CfgNotifications=hpnicfDot11CfgNotifications, hpnicfDot11RCDynamicPowerState=hpnicfDot11RCDynamicPowerState, hpnicfDot11CfgSTNASPortID=hpnicfDot11CfgSTNASPortID, hpnicfDot11APMemUsageThreshold=hpnicfDot11APMemUsageThreshold, hpnicfDot11nRadioCfg2AMsduEnable=hpnicfDot11nRadioCfg2AMsduEnable, hpnicfDot11RCPreambleLen=hpnicfDot11RCPreambleLen, hpnicfDot11RadioConfigEntry=hpnicfDot11RadioConfigEntry, hpnicfDot11RglCollectIntvl=hpnicfDot11RglCollectIntvl, hpnicfDot11SIDAPTemplateName=hpnicfDot11SIDAPTemplateName, hpnicfDot11APSetIfIndex=hpnicfDot11APSetIfIndex, hpnicfDot11APServiceVlanRowStatus=hpnicfDot11APServiceVlanRowStatus, hpnicfDot11WDSSecPskKeyMode=hpnicfDot11WDSSecPskKeyMode, hpnicfDot11APTemplateNameCfg=hpnicfDot11APTemplateNameCfg, hpnicfDot11LongRetryThreshold=hpnicfDot11LongRetryThreshold, hpnicfDot11SIDAPName=hpnicfDot11SIDAPName, hpnicfDot11SrvSecurityPskKeyMode=hpnicfDot11SrvSecurityPskKeyMode, hpnicfDot11WlanEthernetIfNumber=hpnicfDot11WlanEthernetIfNumber, hpnicfDot11ACCtrlTunnelSecSupport=hpnicfDot11ACCtrlTunnelSecSupport, hpnicfDot11SPBeaconMeasType=hpnicfDot11SPBeaconMeasType, hpnicfDot11CipherKey=hpnicfDot11CipherKey, hpnicfDot11APWorkMode=hpnicfDot11APWorkMode, hpnicfDot11CfgServicePolicyID=hpnicfDot11CfgServicePolicyID, hpnicfDot11SIDAPStaIdleTimerInterv=hpnicfDot11SIDAPStaIdleTimerInterv, hpnicfDot11WlanMeshIfNumber=hpnicfDot11WlanMeshIfNumber, hpnicfDot11WLANEthernetIfIndex=hpnicfDot11WLANEthernetIfIndex, hpnicfDot11APSerialIDTable=hpnicfDot11APSerialIDTable, hpnicfDot11CurrConflictTemplateNum=hpnicfDot11CurrConflictTemplateNum, hpnicfDot11AuthenMode=hpnicfDot11AuthenMode, hpnicfDot11SecurityPskKeyString=hpnicfDot11SecurityPskKeyString, hpnicfDot11nShortGiEnable=hpnicfDot11nShortGiEnable, hpnicfDot11ServicePolicyTable=hpnicfDot11ServicePolicyTable, hpnicfDot11CfgChannelLockStat=hpnicfDot11CfgChannelLockStat, hpnicfDot11SPOutCirMode=hpnicfDot11SPOutCirMode, hpnicfDot11RadioTypeID=hpnicfDot11RadioTypeID, hpnicfDot11WlanEssRowStatus=hpnicfDot11WlanEssRowStatus, hpnicfDot11RCDynamicChlState=hpnicfDot11RCDynamicChlState, hpnicfDot11ShortRetryThreshold=hpnicfDot11ShortRetryThreshold, hpnicfDot11WlanMeshIfTable=hpnicfDot11WlanMeshIfTable, hpnicfDot11SrvSecurityPskKeyString=hpnicfDot11SrvSecurityPskKeyString)
mibBuilder.exportSymbols("HPN-ICF-DOT11-CFG-MIB", hpnicfDot11RadioCfgFragThreshold=hpnicfDot11RadioCfgFragThreshold, hpnicfDot11SampleInterval=hpnicfDot11SampleInterval, hpnicfDot11CfgIDSEnable=hpnicfDot11CfgIDSEnable, hpnicfDot11APLimitEntry=hpnicfDot11APLimitEntry, hpnicfDot11APUserCntLimit=hpnicfDot11APUserCntLimit, hpnicfDot11RadioCfglongRtrThld=hpnicfDot11RadioCfglongRtrThld, hpnicfDot11SPBeaconMeasEnable=hpnicfDot11SPBeaconMeasEnable, hpnicfDot11RadioBSSID=hpnicfDot11RadioBSSID, hpnicfDot11RadioElementConfigGroup=hpnicfDot11RadioElementConfigGroup, hpnicfDot11APCpuUsageThreshold=hpnicfDot11APCpuUsageThreshold, hpnicfDot11SecIEStatusCM=hpnicfDot11SecIEStatusCM, hpnicfDot11StatisIntervMode=hpnicfDot11StatisIntervMode, hpnicfDot11CfgChannel=hpnicfDot11CfgChannel, hpnicfDot11BroadcastProbeReply=hpnicfDot11BroadcastProbeReply, hpnicfDot11RadioSSIDRadioID=hpnicfDot11RadioSSIDRadioID, hpnicfDot11CfgCipherChange=hpnicfDot11CfgCipherChange, hpnicfDot11GlobalCountryCode=hpnicfDot11GlobalCountryCode, hpnicfDot11RCPreambleLenCM=hpnicfDot11RCPreambleLenCM, hpnicfDot11SampleTimeStamp=hpnicfDot11SampleTimeStamp, hpnicfDot11RPAPSerialID=hpnicfDot11RPAPSerialID, hpnicfDot11nRadioCfg2ShortGiEnableCM=hpnicfDot11nRadioCfg2ShortGiEnableCM, hpnicfDot11TemplateAPModelAlias=hpnicfDot11TemplateAPModelAlias, hpnicfDot11RadioIntfBindIfIdx=hpnicfDot11RadioIntfBindIfIdx, hpnicfDot11nRadioCfg2ChannelBand=hpnicfDot11nRadioCfg2ChannelBand, hpnicfDot11SIDRowStatus=hpnicfDot11SIDRowStatus, hpnicfDot11ServiceSetVlanId=hpnicfDot11ServiceSetVlanId, hpnicfDot11RCRadioType2=hpnicfDot11RCRadioType2, hpnicfDot11CfgRadioType2=hpnicfDot11CfgRadioType2, hpnicfDot11CfgSaEnable=hpnicfDot11CfgSaEnable, hpnicfDot11RadioConfigTable=hpnicfDot11RadioConfigTable, hpnicfDot11RadioToConfigEntry=hpnicfDot11RadioToConfigEntry, hpnicfDot11WLANEthernetIfEntry=hpnicfDot11WLANEthernetIfEntry, hpnicfDot11RadioIntfBindEntry=hpnicfDot11RadioIntfBindEntry, hpnicfDot11RadioPolicyTable=hpnicfDot11RadioPolicyTable, hpnicfDot11RadioCfgOnly11gEnable=hpnicfDot11RadioCfgOnly11gEnable, hpnicfDot11AutoAPName=hpnicfDot11AutoAPName, hpnicfDot11WlanBssIfNumber=hpnicfDot11WlanBssIfNumber, hpnicfDot11MonitorInterval=hpnicfDot11MonitorInterval, hpnicfDot11CfgSaCltRtFFTData=hpnicfDot11CfgSaCltRtFFTData, hpnicfDot11nRadioCfgTable=hpnicfDot11nRadioCfgTable, hpnicfDot11WlanBssRowStatus=hpnicfDot11WlanBssRowStatus, hpnicfDot11RadioCfgMaxTxPwrLvl=hpnicfDot11RadioCfgMaxTxPwrLvl, hpnicfDot11nClientDot11acOnly=hpnicfDot11nClientDot11acOnly, hpnicfDot11RadioCfgRtsThreshold=hpnicfDot11RadioCfgRtsThreshold, hpnicfDot11CfgRRMSDRdGroupId=hpnicfDot11CfgRRMSDRdGroupId, hpnicfDot11RCDynamicPowerStateCM=hpnicfDot11RCDynamicPowerStateCM, hpnicfDot11SrvPortSecurityMode=hpnicfDot11SrvPortSecurityMode, hpnicfDot11WlanEssIfTable=hpnicfDot11WlanEssIfTable, hpnicfDot11RCRadioStatus=hpnicfDot11RCRadioStatus, hpnicfDot11SrvPortSecurityTable=hpnicfDot11SrvPortSecurityTable, hpnicfDot11ServicePolicyEntry=hpnicfDot11ServicePolicyEntry, hpnicfDot11RadioCfgMaxRxLifetime=hpnicfDot11RadioCfgMaxRxLifetime, hpnicfDot11RPBeaconIntervalCM=hpnicfDot11RPBeaconIntervalCM, hpnicfDot11StaKeepAliveTimerInterv=hpnicfDot11StaKeepAliveTimerInterv, hpnicfDot11SIDAPDevDetectEnable=hpnicfDot11SIDAPDevDetectEnable, hpnicfDot11CfgRadioStatus=hpnicfDot11CfgRadioStatus, hpnicfDot11StaKeepALiveTimerIntvl=hpnicfDot11StaKeepALiveTimerIntvl, hpnicfDot11nRadioCfg2AMpduEnable=hpnicfDot11nRadioCfg2AMpduEnable, hpnicfDot11RPBeaconInterval=hpnicfDot11RPBeaconInterval, hpnicfDot11StatisInterv=hpnicfDot11StatisInterv, hpnicfDot11PortSecurityEntry=hpnicfDot11PortSecurityEntry, hpnicfDot11RPRadioID=hpnicfDot11RPRadioID, hpnicfDot11SIDAPCir=hpnicfDot11SIDAPCir, hpnicfDot11WlanBssIfEntry=hpnicfDot11WlanBssIfEntry, hpnicfDot11ApTrapEnabled=hpnicfDot11ApTrapEnabled, hpnicfDot11APSysInfoSetEntry=hpnicfDot11APSysInfoSetEntry, hpnicfDot11StatisIntervModeCM=hpnicfDot11StatisIntervModeCM, hpnicfDot11SmartRateSet=hpnicfDot11SmartRateSet, hpnicfDot11nRadioCfg2Entry=hpnicfDot11nRadioCfg2Entry, hpnicfDot11APBroadcastProbeReply=hpnicfDot11APBroadcastProbeReply, hpnicfDot11nRadioCfg2Table=hpnicfDot11nRadioCfg2Table, hpnicfDot11RadioPolicyName=hpnicfDot11RadioPolicyName, hpnicfDot11WlanEssIfIndex=hpnicfDot11WlanEssIfIndex, hpnicfDot11ApNasIDCM=hpnicfDot11ApNasIDCM, hpnicfDot11SecurityUserLoginTxKeyType=hpnicfDot11SecurityUserLoginTxKeyType, hpnicfDot11RadioCfgShtRetryThld=hpnicfDot11RadioCfgShtRetryThld, hpnicfDot11RPRtsThreshold=hpnicfDot11RPRtsThreshold, hpnicfDot11APTemplateTable=hpnicfDot11APTemplateTable, hpnicfDot11RadioCfgChannel=hpnicfDot11RadioCfgChannel, hpnicfDot11SIDStatisInterv=hpnicfDot11SIDStatisInterv, hpnicfDot11RCApPowerLevel=hpnicfDot11RCApPowerLevel, hpnicfDot11APServiceVlanId=hpnicfDot11APServiceVlanId, hpnicfDot11BackupACAdrssIP=hpnicfDot11BackupACAdrssIP, hpnicfDot11APBSSIDSupportNum=hpnicfDot11APBSSIDSupportNum, hpnicfDot11RadioCfgWorkMode=hpnicfDot11RadioCfgWorkMode, hpnicfDot11nAMpduEnable=hpnicfDot11nAMpduEnable, hpnicfDot11WlanInfBindingID=hpnicfDot11WlanInfBindingID, hpnicfDot11ConfigureRadioID=hpnicfDot11ConfigureRadioID)
