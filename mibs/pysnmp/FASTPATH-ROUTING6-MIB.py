#
# PySNMP MIB module FASTPATH-ROUTING6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FASTPATH-ROUTING6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:58:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
fastPath, = mibBuilder.importSymbols("BROADCOM-REF-MIB", "fastPath")
Ipv6AddressPrefix, Ipv6Address, Ipv6IfIndexOrZero, Ipv6AddressIfIdentifier, Ipv6IfIndex = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressPrefix", "Ipv6Address", "Ipv6IfIndexOrZero", "Ipv6AddressIfIdentifier", "Ipv6IfIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, ObjectIdentity, Gauge32, NotificationType, Bits, Unsigned32, IpAddress, MibIdentifier, Counter32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "ObjectIdentity", "Gauge32", "NotificationType", "Bits", "Unsigned32", "IpAddress", "MibIdentifier", "Counter32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TruthValue, TimeStamp, VariablePointer, RowStatus, TextualConvention, PhysAddress, RowPointer, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "VariablePointer", "RowStatus", "TextualConvention", "PhysAddress", "RowPointer", "DisplayString", "MacAddress")
fastPathRoutingIpv6 = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30))
fastPathRoutingIpv6.setRevisions(('2007-05-23 00:00', '2005-09-21 17:00',))
if mibBuilder.loadTexts: fastPathRoutingIpv6.setLastUpdated('200705230000Z')
if mibBuilder.loadTexts: fastPathRoutingIpv6.setOrganization('Broadcom Corporation')
agentIpv6Group = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1))
agentIpv6RoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RoutingMode.setStatus('current')
agentIpv6InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2), )
if mibBuilder.loadTexts: agentIpv6InterfaceTable.setStatus('current')
agentIpv6InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6InterfaceIfIndex"))
if mibBuilder.loadTexts: agentIpv6InterfaceEntry.setStatus('current')
agentIpv6InterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6InterfaceIfIndex.setStatus('current')
agentIpv6InterfaceMtuValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1280, 1500), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceMtuValue.setStatus('current')
agentIpv6InterfaceDadTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceDadTransmits.setStatus('current')
agentIpv6InterfaceLinkLocalOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceLinkLocalOnly.setStatus('current')
agentIpv6InterfaceIcmpUnreachables = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceIcmpUnreachables.setStatus('current')
agentIpv6RouterAdvertisementTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3), )
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementTable.setStatus('current')
agentIpv6RouterAdvertisementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6RouterAdvertisementIfIndex"))
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementEntry.setStatus('current')
agentIpv6RouterAdvertisementIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementIfIndex.setStatus('current')
agentIpv6RouterAdvertisementSuppressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementSuppressMode.setStatus('current')
agentIpv6RouterAdvertisementMaxAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1800)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementMaxAdvertisementInterval.setStatus('current')
agentIpv6RouterAdvertisementAdvertisementLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 65520)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementAdvertisementLifetime.setStatus('current')
agentIpv6RouterAdvertisementNbrSolicitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementNbrSolicitInterval.setStatus('current')
agentIpv6RouterAdvertisementReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementReachableTime.setStatus('current')
agentIpv6RouterAdvertisementManagedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementManagedFlag.setStatus('current')
agentIpv6RouterAdvertisementOtherFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementOtherFlag.setStatus('current')
agentIpv6AddrPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4), )
if mibBuilder.loadTexts: agentIpv6AddrPrefixTable.setStatus('current')
agentIpv6AddrPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6InterfaceIfIndex"), (0, "FASTPATH-ROUTING6-MIB", "agentIpv6AddrPrefix"), (0, "FASTPATH-ROUTING6-MIB", "agentIpv6AddrPrefixLength"))
if mibBuilder.loadTexts: agentIpv6AddrPrefixEntry.setStatus('current')
agentIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentIpv6AddrPrefix.setStatus('current')
agentIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: agentIpv6AddrPrefixLength.setStatus('current')
agentIpv6AddrPrefixOnLinkFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixOnLinkFlag.setStatus('current')
agentIpv6AddrPrefixAutonomousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixAutonomousFlag.setStatus('current')
agentIpv6AddrPrefixAdvPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixAdvPreferredLifetime.setStatus('current')
agentIpv6AddrPrefixAdvValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixAdvValidLifetime.setStatus('current')
agentIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5), )
if mibBuilder.loadTexts: agentIpv6AddrTable.setStatus('current')
agentIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6InterfaceIfIndex"), (0, "FASTPATH-ROUTING6-MIB", "agentIpv6AddrAddress"))
if mibBuilder.loadTexts: agentIpv6AddrEntry.setStatus('current')
agentIpv6AddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6AddrAddress.setStatus('current')
agentIpv6AddrPfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6AddrPfxLength.setStatus('current')
agentIpv6AddrEui64Flag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6AddrEui64Flag.setStatus('current')
agentIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6AddrStatus.setStatus('current')
agentIpv6StaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6), )
if mibBuilder.loadTexts: agentIpv6StaticRouteTable.setStatus('current')
agentIpv6StaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6StaticRouteDest"), (0, "FASTPATH-ROUTING6-MIB", "agentIpv6StaticRoutePfxLength"), (0, "FASTPATH-ROUTING6-MIB", "agentIpv6StaticRouteIfIndex"), (0, "FASTPATH-ROUTING6-MIB", "agentIpv6StaticRouteNextHop"))
if mibBuilder.loadTexts: agentIpv6StaticRouteEntry.setStatus('current')
agentIpv6StaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentIpv6StaticRouteDest.setStatus('current')
agentIpv6StaticRoutePfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: agentIpv6StaticRoutePfxLength.setStatus('current')
agentIpv6StaticRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 3), Ipv6IfIndexOrZero())
if mibBuilder.loadTexts: agentIpv6StaticRouteIfIndex.setStatus('current')
agentIpv6StaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 4), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6StaticRouteNextHop.setStatus('current')
agentIpv6StaticRoutePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6StaticRoutePreference.setStatus('current')
agentIpv6StaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6StaticRouteStatus.setStatus('current')
agentIpv6ServicePortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7))
agentIpv6ServicePortPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1), )
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixTable.setStatus('current')
agentIpv6ServicePortPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6ServicePortPrefixIndex"))
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixEntry.setStatus('current')
agentIpv6ServicePortPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixIndex.setStatus('current')
agentIpv6ServicePortPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortPrefix.setStatus('current')
agentIpv6ServicePortPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixLength.setStatus('current')
agentIpv6ServicePortDefaultRouterTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2), )
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouterTable.setStatus('current')
agentIpv6ServicePortDefaultRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6ServicePortDefaultRouterIndex"))
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouterEntry.setStatus('current')
agentIpv6ServicePortDefaultRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouterIndex.setStatus('current')
agentIpv6ServicePortDefaultRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouter.setStatus('current')
agentIpv6ServicePortNbrTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3), )
if mibBuilder.loadTexts: agentIpv6ServicePortNbrTable.setStatus('current')
agentIpv6ServicePortNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1), ).setIndexNames((0, "FASTPATH-ROUTING6-MIB", "agentIpv6ServicePortNbrAddr"))
if mibBuilder.loadTexts: agentIpv6ServicePortNbrEntry.setStatus('current')
agentIpv6ServicePortNbrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6ServicePortNbrAddr.setStatus('current')
agentIpv6ServicePortNbrPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrPhysAddr.setStatus('current')
agentIpv6ServicePortNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("reachable", 1), ("stale", 2), ("delay", 3), ("probe", 4), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrState.setStatus('current')
agentIpv6ServicePortNbrUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrUpdated.setStatus('current')
agentIpv6ServicePortNbrIsRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrIsRouter.setStatus('current')
agentIpv6IcmpControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 8))
agentIpv6IcmpRateLimitInterval = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6IcmpRateLimitInterval.setStatus('current')
agentIpv6IcmpRateLimitBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6IcmpRateLimitBurstSize.setStatus('current')
mibBuilder.exportSymbols("FASTPATH-ROUTING6-MIB", agentIpv6ServicePortPrefixIndex=agentIpv6ServicePortPrefixIndex, agentIpv6Group=agentIpv6Group, agentIpv6RouterAdvertisementManagedFlag=agentIpv6RouterAdvertisementManagedFlag, agentIpv6StaticRoutePreference=agentIpv6StaticRoutePreference, agentIpv6IcmpRateLimitBurstSize=agentIpv6IcmpRateLimitBurstSize, agentIpv6ServicePortDefaultRouterTable=agentIpv6ServicePortDefaultRouterTable, agentIpv6RoutingMode=agentIpv6RoutingMode, agentIpv6RouterAdvertisementTable=agentIpv6RouterAdvertisementTable, agentIpv6StaticRouteIfIndex=agentIpv6StaticRouteIfIndex, agentIpv6ServicePortGroup=agentIpv6ServicePortGroup, agentIpv6ServicePortPrefixEntry=agentIpv6ServicePortPrefixEntry, agentIpv6IcmpControlGroup=agentIpv6IcmpControlGroup, agentIpv6ServicePortDefaultRouter=agentIpv6ServicePortDefaultRouter, agentIpv6InterfaceMtuValue=agentIpv6InterfaceMtuValue, agentIpv6ServicePortNbrTable=agentIpv6ServicePortNbrTable, agentIpv6ServicePortNbrEntry=agentIpv6ServicePortNbrEntry, agentIpv6RouterAdvertisementEntry=agentIpv6RouterAdvertisementEntry, agentIpv6ServicePortPrefix=agentIpv6ServicePortPrefix, agentIpv6ServicePortNbrIsRouter=agentIpv6ServicePortNbrIsRouter, agentIpv6AddrPrefixEntry=agentIpv6AddrPrefixEntry, agentIpv6InterfaceDadTransmits=agentIpv6InterfaceDadTransmits, agentIpv6RouterAdvertisementSuppressMode=agentIpv6RouterAdvertisementSuppressMode, agentIpv6AddrPrefixLength=agentIpv6AddrPrefixLength, agentIpv6AddrStatus=agentIpv6AddrStatus, agentIpv6ServicePortNbrPhysAddr=agentIpv6ServicePortNbrPhysAddr, fastPathRoutingIpv6=fastPathRoutingIpv6, agentIpv6RouterAdvertisementNbrSolicitInterval=agentIpv6RouterAdvertisementNbrSolicitInterval, agentIpv6AddrPrefixAdvValidLifetime=agentIpv6AddrPrefixAdvValidLifetime, agentIpv6RouterAdvertisementIfIndex=agentIpv6RouterAdvertisementIfIndex, agentIpv6RouterAdvertisementReachableTime=agentIpv6RouterAdvertisementReachableTime, agentIpv6ServicePortDefaultRouterIndex=agentIpv6ServicePortDefaultRouterIndex, agentIpv6StaticRoutePfxLength=agentIpv6StaticRoutePfxLength, agentIpv6StaticRouteTable=agentIpv6StaticRouteTable, agentIpv6InterfaceLinkLocalOnly=agentIpv6InterfaceLinkLocalOnly, agentIpv6InterfaceIcmpUnreachables=agentIpv6InterfaceIcmpUnreachables, agentIpv6InterfaceEntry=agentIpv6InterfaceEntry, agentIpv6RouterAdvertisementMaxAdvertisementInterval=agentIpv6RouterAdvertisementMaxAdvertisementInterval, agentIpv6ServicePortPrefixLength=agentIpv6ServicePortPrefixLength, agentIpv6AddrEntry=agentIpv6AddrEntry, agentIpv6ServicePortPrefixTable=agentIpv6ServicePortPrefixTable, agentIpv6AddrTable=agentIpv6AddrTable, agentIpv6ServicePortNbrAddr=agentIpv6ServicePortNbrAddr, agentIpv6AddrPrefixOnLinkFlag=agentIpv6AddrPrefixOnLinkFlag, agentIpv6AddrPfxLength=agentIpv6AddrPfxLength, agentIpv6StaticRouteStatus=agentIpv6StaticRouteStatus, agentIpv6RouterAdvertisementOtherFlag=agentIpv6RouterAdvertisementOtherFlag, agentIpv6ServicePortDefaultRouterEntry=agentIpv6ServicePortDefaultRouterEntry, agentIpv6AddrPrefixAdvPreferredLifetime=agentIpv6AddrPrefixAdvPreferredLifetime, agentIpv6ServicePortNbrState=agentIpv6ServicePortNbrState, agentIpv6AddrAddress=agentIpv6AddrAddress, agentIpv6StaticRouteEntry=agentIpv6StaticRouteEntry, agentIpv6InterfaceIfIndex=agentIpv6InterfaceIfIndex, agentIpv6AddrEui64Flag=agentIpv6AddrEui64Flag, agentIpv6ServicePortNbrUpdated=agentIpv6ServicePortNbrUpdated, agentIpv6StaticRouteDest=agentIpv6StaticRouteDest, PYSNMP_MODULE_ID=fastPathRoutingIpv6, agentIpv6AddrPrefixAutonomousFlag=agentIpv6AddrPrefixAutonomousFlag, agentIpv6AddrPrefix=agentIpv6AddrPrefix, agentIpv6IcmpRateLimitInterval=agentIpv6IcmpRateLimitInterval, agentIpv6InterfaceTable=agentIpv6InterfaceTable, agentIpv6AddrPrefixTable=agentIpv6AddrPrefixTable, agentIpv6RouterAdvertisementAdvertisementLifetime=agentIpv6RouterAdvertisementAdvertisementLifetime, agentIpv6StaticRouteNextHop=agentIpv6StaticRouteNextHop)
