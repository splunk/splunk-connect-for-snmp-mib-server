#
# PySNMP MIB module CISCO-GSLB-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-GSLB-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:42:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
CiscoGslbPeerStatus, CiscoGslbNodeServices = mibBuilder.importSymbols("CISCO-GSLB-TC-MIB", "CiscoGslbPeerStatus", "CiscoGslbNodeServices")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress, InetAddressDNS = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressDNS")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
iso, NotificationType, Counter32, Counter64, ObjectIdentity, ModuleIdentity, IpAddress, Bits, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "Counter32", "Counter64", "ObjectIdentity", "ModuleIdentity", "IpAddress", "Bits", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "MibIdentifier")
TruthValue, TextualConvention, StorageType, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "StorageType", "RowStatus", "DisplayString")
ciscoGslbSystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 589))
ciscoGslbSystemMIB.setRevisions(('2011-06-06 00:00', '2006-12-04 00:00',))
if mibBuilder.loadTexts: ciscoGslbSystemMIB.setLastUpdated('201106060000Z')
if mibBuilder.loadTexts: ciscoGslbSystemMIB.setOrganization('Cisco Systems, Inc.')
ciscoGslbSystemMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 0))
ciscoGslbSystemMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1))
ciscoGslbSystemMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 2))
cgsNotifControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 1))
cgsNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 2))
cgsGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3))
cgsPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4))
cgsProxZoneStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5))
cgsResources = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6))
cgsNodeService = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3, 1), CiscoGslbNodeServices()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsNodeService.setStatus('current')
cgsNodeCommIfName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3, 2), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsNodeCommIfName.setStatus('current')
cgsNodeCommIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsNodeCommIfIndex.setStatus('current')
cgsNodeStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3, 4), CiscoGslbPeerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsNodeStatus.setStatus('current')
cgsNodeLocation = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsNodeLocation.setStatus('current')
cgsNodeRegion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 3, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsNodeRegion.setStatus('current')
cgsPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1), )
if mibBuilder.loadTexts: cgsPeerTable.setStatus('current')
cgsPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-GSLB-SYSTEM-MIB", "cgsPeerAddressType"), (0, "CISCO-GSLB-SYSTEM-MIB", "cgsPeerAddress"))
if mibBuilder.loadTexts: cgsPeerEntry.setStatus('current')
cgsPeerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cgsPeerAddressType.setStatus('current')
cgsPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: cgsPeerAddress.setStatus('current')
cgsPeerLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsPeerLocation.setStatus('current')
cgsPeerDnsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 4), InetAddressDNS()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsPeerDnsName.setStatus('current')
cgsPeerService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 5), CiscoGslbNodeServices()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsPeerService.setStatus('current')
cgsPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 6), CiscoGslbPeerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsPeerStatus.setStatus('current')
cgsPeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 4, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsPeerVersion.setStatus('current')
cgsProxZoneTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1), )
if mibBuilder.loadTexts: cgsProxZoneTable.setStatus('current')
cgsProxZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-GSLB-SYSTEM-MIB", "cgsProxZoneName"))
if mibBuilder.loadTexts: cgsProxZoneEntry.setStatus('current')
cgsProxZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: cgsProxZoneName.setStatus('current')
cgsProxPrimaryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsProxPrimaryAddressType.setStatus('current')
cgsProxPrimaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsProxPrimaryAddress.setStatus('current')
cgsProxSecondaryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsProxSecondaryAddressType.setStatus('current')
cgsProxSecondaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsProxSecondaryAddress.setStatus('current')
cgsProxEchoSentReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 6), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxEchoSentReqs.setStatus('current')
cgsProxEchoRcvdResps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 7), Counter32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxEchoRcvdResps.setStatus('current')
cgsProxSentMeasureReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 8), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxSentMeasureReqs.setStatus('current')
cgsProxRcvdMeasureResps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 9), Counter32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxRcvdMeasureResps.setStatus('current')
cgsProxTotalSentReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 10), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxTotalSentReqs.setStatus('current')
cgsProxTotalRcvdResps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 11), Counter32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxTotalRcvdResps.setStatus('current')
cgsProxSendRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 12), Unsigned32()).setUnits('rate per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxSendRate.setStatus('current')
cgsProxRcvdRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 13), Unsigned32()).setUnits('rate per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxRcvdRate.setStatus('current')
cgsProxPeakSendRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 14), Unsigned32()).setUnits('rate per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxPeakSendRate.setStatus('current')
cgsProxPeakRcvdRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 15), Unsigned32()).setUnits('rate per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsProxPeakRcvdRate.setStatus('current')
cgsProxStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 16), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsProxStorageType.setStatus('current')
cgsProxRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 5, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsProxRowStatus.setStatus('current')
cgsRegionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 1), )
if mibBuilder.loadTexts: cgsRegionTable.setStatus('deprecated')
cgsRegionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-GSLB-SYSTEM-MIB", "cgsRegionName"))
if mibBuilder.loadTexts: cgsRegionEntry.setStatus('deprecated')
cgsRegionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: cgsRegionName.setStatus('deprecated')
cgsRegionComments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 1, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionComments.setStatus('deprecated')
cgsRegionStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionStorageType.setStatus('deprecated')
cgsRegionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionRowStatus.setStatus('deprecated')
cgsLocationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2), )
if mibBuilder.loadTexts: cgsLocationTable.setStatus('current')
cgsLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1), ).setIndexNames((0, "CISCO-GSLB-SYSTEM-MIB", "cgsLocationName"))
if mibBuilder.loadTexts: cgsLocationEntry.setStatus('current')
cgsLocationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80)))
if mibBuilder.loadTexts: cgsLocationName.setStatus('current')
cgsLocationRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsLocationRegion.setStatus('current')
cgsLocationZone = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsLocationZone.setStatus('current')
cgsLocationComments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1, 4), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsLocationComments.setStatus('current')
cgsLocationStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsLocationStorageType.setStatus('current')
cgsLocationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsLocationRowStatus.setStatus('current')
cgsRegionIdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3), )
if mibBuilder.loadTexts: cgsRegionIdTable.setStatus('current')
cgsRegionIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1), ).setIndexNames((0, "CISCO-GSLB-SYSTEM-MIB", "cgsRegionId"))
if mibBuilder.loadTexts: cgsRegionIdEntry.setStatus('current')
cgsRegionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cgsRegionId.setStatus('current')
cgsRegionIdName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionIdName.setStatus('current')
cgsRegionIdComments = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionIdComments.setStatus('current')
cgsReqCountPerRegionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 4), Counter32()).setUnits('number of hits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsReqCountPerRegionId.setStatus('current')
cgsReqCountRatePerRegionId1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 5), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsReqCountRatePerRegionId1Min.setStatus('current')
cgsReqCountRatePerRegionId5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 6), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsReqCountRatePerRegionId5Min.setStatus('current')
cgsReqCountRatePerRegionId30Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 7), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsReqCountRatePerRegionId30Min.setStatus('current')
cgsReqCountRatePerRegionId4Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 8), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsReqCountRatePerRegionId4Hr.setStatus('current')
cgsAnswerCountPerRegionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 9), Counter32()).setUnits('number of hits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsAnswerCountPerRegionId.setStatus('current')
cgsAnswerCountRatePerRegionId1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 10), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsAnswerCountRatePerRegionId1Min.setStatus('current')
cgsAnswerCountRatePerRegionId5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 11), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsAnswerCountRatePerRegionId5Min.setStatus('current')
cgsAnswerCountRatePerRegionId30Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 12), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsAnswerCountRatePerRegionId30Min.setStatus('current')
cgsAnswerCountRatePerRegionId4Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 13), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsAnswerCountRatePerRegionId4Hr.setStatus('current')
cgsUnAnswerCountPerRegionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 14), Counter32()).setUnits('number of hits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsUnAnswerCountPerRegionId.setStatus('current')
cgsUnAnswerCountRatePerRegionId1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 15), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsUnAnswerCountRatePerRegionId1Min.setStatus('current')
cgsUnAnswerCountRatePerRegionId5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 16), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsUnAnswerCountRatePerRegionId5Min.setStatus('current')
cgsUnAnswerCountRatePerRegionId30Min = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 17), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsUnAnswerCountRatePerRegionId30Min.setStatus('current')
cgsUnAnswerCountRatePerRegionId4Hr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 18), Gauge32()).setUnits('hits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cgsUnAnswerCountRatePerRegionId4Hr.setStatus('current')
cgsRegionIdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 19), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionIdStorageType.setStatus('current')
cgsRegionIdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 6, 3, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cgsRegionIdRowStatus.setStatus('current')
cgsPeerEventNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cgsPeerEventNotifEnable.setStatus('current')
cgsPeerPrevStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 589, 1, 2, 1), CiscoGslbPeerStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cgsPeerPrevStatus.setStatus('current')
ciscoGslbSystemPeerEventStatus = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 589, 0, 1)).setObjects(("SNMPv2-MIB", "sysName"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerDnsName"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerService"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerPrevStatus"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerStatus"))
if mibBuilder.loadTexts: ciscoGslbSystemPeerEventStatus.setStatus('current')
ciscoGslbSystemMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 1))
ciscoGslbSystemMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2))
ciscoGslbSystemMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 1, 1)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemGeneralGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemPeerGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemProxZoneGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemResourceGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemNotifControlGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemNotifObjectsGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemMIBCompliance = ciscoGslbSystemMIBCompliance.setStatus('deprecated')
ciscoGslbSystemMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 1, 2)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemGeneralGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemPeerGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemProxZoneGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemNotifControlGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemNotifObjectsGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemNotifGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemResourceLocationGroup"), ("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemResourceRegionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemMIBComplianceRev1 = ciscoGslbSystemMIBComplianceRev1.setStatus('current')
ciscoGslbSystemGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 1)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsNodeService"), ("CISCO-GSLB-SYSTEM-MIB", "cgsNodeCommIfName"), ("CISCO-GSLB-SYSTEM-MIB", "cgsNodeCommIfIndex"), ("CISCO-GSLB-SYSTEM-MIB", "cgsNodeStatus"), ("CISCO-GSLB-SYSTEM-MIB", "cgsNodeLocation"), ("CISCO-GSLB-SYSTEM-MIB", "cgsNodeRegion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemGeneralGroup = ciscoGslbSystemGeneralGroup.setStatus('current')
ciscoGslbSystemPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 2)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsPeerLocation"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerDnsName"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerService"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerStatus"), ("CISCO-GSLB-SYSTEM-MIB", "cgsPeerVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemPeerGroup = ciscoGslbSystemPeerGroup.setStatus('current')
ciscoGslbSystemProxZoneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 3)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsProxPrimaryAddressType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxPrimaryAddress"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxSecondaryAddressType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxSecondaryAddress"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxEchoSentReqs"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxEchoRcvdResps"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxSentMeasureReqs"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxRcvdMeasureResps"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxTotalSentReqs"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxTotalRcvdResps"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxSendRate"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxRcvdRate"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxPeakSendRate"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxPeakRcvdRate"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxStorageType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsProxRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemProxZoneGroup = ciscoGslbSystemProxZoneGroup.setStatus('current')
ciscoGslbSystemResourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 4)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsRegionComments"), ("CISCO-GSLB-SYSTEM-MIB", "cgsRegionStorageType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsRegionRowStatus"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationRegion"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationZone"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationComments"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationStorageType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemResourceGroup = ciscoGslbSystemResourceGroup.setStatus('deprecated')
ciscoGslbSystemNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 5)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsPeerEventNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemNotifControlGroup = ciscoGslbSystemNotifControlGroup.setStatus('current')
ciscoGslbSystemNotifObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 6)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsPeerPrevStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemNotifObjectsGroup = ciscoGslbSystemNotifObjectsGroup.setStatus('current')
ciscoGslbSystemNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 7)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "ciscoGslbSystemPeerEventStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemNotifGroup = ciscoGslbSystemNotifGroup.setStatus('current')
ciscoGslbSystemResourceLocationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 8)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsLocationRegion"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationZone"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationComments"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationStorageType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsLocationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemResourceLocationGroup = ciscoGslbSystemResourceLocationGroup.setStatus('current')
ciscoGslbSystemResourceRegionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 589, 2, 2, 9)).setObjects(("CISCO-GSLB-SYSTEM-MIB", "cgsRegionIdName"), ("CISCO-GSLB-SYSTEM-MIB", "cgsRegionIdComments"), ("CISCO-GSLB-SYSTEM-MIB", "cgsReqCountPerRegionId"), ("CISCO-GSLB-SYSTEM-MIB", "cgsReqCountRatePerRegionId1Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsReqCountRatePerRegionId5Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsReqCountRatePerRegionId30Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsReqCountRatePerRegionId4Hr"), ("CISCO-GSLB-SYSTEM-MIB", "cgsAnswerCountPerRegionId"), ("CISCO-GSLB-SYSTEM-MIB", "cgsAnswerCountRatePerRegionId1Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsAnswerCountRatePerRegionId5Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsAnswerCountRatePerRegionId30Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsAnswerCountRatePerRegionId4Hr"), ("CISCO-GSLB-SYSTEM-MIB", "cgsUnAnswerCountPerRegionId"), ("CISCO-GSLB-SYSTEM-MIB", "cgsUnAnswerCountRatePerRegionId1Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsUnAnswerCountRatePerRegionId5Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsUnAnswerCountRatePerRegionId30Min"), ("CISCO-GSLB-SYSTEM-MIB", "cgsUnAnswerCountRatePerRegionId4Hr"), ("CISCO-GSLB-SYSTEM-MIB", "cgsRegionIdStorageType"), ("CISCO-GSLB-SYSTEM-MIB", "cgsRegionIdRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoGslbSystemResourceRegionGroup = ciscoGslbSystemResourceRegionGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-GSLB-SYSTEM-MIB", cgsAnswerCountRatePerRegionId5Min=cgsAnswerCountRatePerRegionId5Min, cgsLocationComments=cgsLocationComments, PYSNMP_MODULE_ID=ciscoGslbSystemMIB, cgsReqCountRatePerRegionId30Min=cgsReqCountRatePerRegionId30Min, cgsResources=cgsResources, cgsProxRcvdMeasureResps=cgsProxRcvdMeasureResps, cgsLocationName=cgsLocationName, cgsProxSendRate=cgsProxSendRate, cgsPeer=cgsPeer, ciscoGslbSystemResourceRegionGroup=ciscoGslbSystemResourceRegionGroup, cgsRegionIdName=cgsRegionIdName, cgsUnAnswerCountRatePerRegionId4Hr=cgsUnAnswerCountRatePerRegionId4Hr, ciscoGslbSystemResourceGroup=ciscoGslbSystemResourceGroup, cgsRegionRowStatus=cgsRegionRowStatus, cgsPeerEventNotifEnable=cgsPeerEventNotifEnable, cgsRegionName=cgsRegionName, ciscoGslbSystemMIBCompliance=ciscoGslbSystemMIBCompliance, cgsProxEchoSentReqs=cgsProxEchoSentReqs, cgsAnswerCountRatePerRegionId4Hr=cgsAnswerCountRatePerRegionId4Hr, cgsPeerDnsName=cgsPeerDnsName, cgsProxPeakSendRate=cgsProxPeakSendRate, cgsReqCountRatePerRegionId5Min=cgsReqCountRatePerRegionId5Min, ciscoGslbSystemMIBNotifs=ciscoGslbSystemMIBNotifs, cgsRegionIdEntry=cgsRegionIdEntry, cgsRegionIdTable=cgsRegionIdTable, cgsPeerPrevStatus=cgsPeerPrevStatus, cgsNodeStatus=cgsNodeStatus, cgsAnswerCountPerRegionId=cgsAnswerCountPerRegionId, cgsProxZoneStats=cgsProxZoneStats, cgsPeerService=cgsPeerService, cgsGeneral=cgsGeneral, cgsNodeLocation=cgsNodeLocation, cgsNodeCommIfName=cgsNodeCommIfName, cgsProxZoneTable=cgsProxZoneTable, cgsPeerTable=cgsPeerTable, cgsProxPeakRcvdRate=cgsProxPeakRcvdRate, cgsNodeRegion=cgsNodeRegion, cgsLocationTable=cgsLocationTable, cgsUnAnswerCountPerRegionId=cgsUnAnswerCountPerRegionId, ciscoGslbSystemMIB=ciscoGslbSystemMIB, cgsProxStorageType=cgsProxStorageType, cgsProxRowStatus=cgsProxRowStatus, ciscoGslbSystemGeneralGroup=ciscoGslbSystemGeneralGroup, cgsProxSentMeasureReqs=cgsProxSentMeasureReqs, cgsUnAnswerCountRatePerRegionId1Min=cgsUnAnswerCountRatePerRegionId1Min, cgsProxZoneName=cgsProxZoneName, cgsPeerStatus=cgsPeerStatus, cgsNotifControl=cgsNotifControl, cgsReqCountRatePerRegionId4Hr=cgsReqCountRatePerRegionId4Hr, cgsRegionIdRowStatus=cgsRegionIdRowStatus, cgsProxEchoRcvdResps=cgsProxEchoRcvdResps, ciscoGslbSystemMIBComplianceRev1=ciscoGslbSystemMIBComplianceRev1, cgsProxPrimaryAddress=cgsProxPrimaryAddress, ciscoGslbSystemMIBConform=ciscoGslbSystemMIBConform, cgsLocationRegion=cgsLocationRegion, cgsPeerEntry=cgsPeerEntry, cgsLocationEntry=cgsLocationEntry, cgsLocationRowStatus=cgsLocationRowStatus, ciscoGslbSystemPeerGroup=ciscoGslbSystemPeerGroup, ciscoGslbSystemNotifObjectsGroup=ciscoGslbSystemNotifObjectsGroup, cgsProxSecondaryAddress=cgsProxSecondaryAddress, cgsAnswerCountRatePerRegionId1Min=cgsAnswerCountRatePerRegionId1Min, ciscoGslbSystemPeerEventStatus=ciscoGslbSystemPeerEventStatus, cgsPeerAddress=cgsPeerAddress, cgsRegionTable=cgsRegionTable, cgsPeerVersion=cgsPeerVersion, cgsPeerAddressType=cgsPeerAddressType, cgsRegionId=cgsRegionId, cgsProxTotalRcvdResps=cgsProxTotalRcvdResps, cgsProxRcvdRate=cgsProxRcvdRate, ciscoGslbSystemNotifControlGroup=ciscoGslbSystemNotifControlGroup, cgsRegionEntry=cgsRegionEntry, ciscoGslbSystemMIBGroups=ciscoGslbSystemMIBGroups, ciscoGslbSystemProxZoneGroup=ciscoGslbSystemProxZoneGroup, cgsUnAnswerCountRatePerRegionId30Min=cgsUnAnswerCountRatePerRegionId30Min, ciscoGslbSystemMIBObjects=ciscoGslbSystemMIBObjects, cgsProxZoneEntry=cgsProxZoneEntry, cgsUnAnswerCountRatePerRegionId5Min=cgsUnAnswerCountRatePerRegionId5Min, cgsPeerLocation=cgsPeerLocation, ciscoGslbSystemMIBCompliances=ciscoGslbSystemMIBCompliances, cgsNodeService=cgsNodeService, cgsRegionComments=cgsRegionComments, cgsProxPrimaryAddressType=cgsProxPrimaryAddressType, cgsNodeCommIfIndex=cgsNodeCommIfIndex, ciscoGslbSystemNotifGroup=ciscoGslbSystemNotifGroup, cgsProxSecondaryAddressType=cgsProxSecondaryAddressType, cgsRegionStorageType=cgsRegionStorageType, cgsReqCountRatePerRegionId1Min=cgsReqCountRatePerRegionId1Min, cgsProxTotalSentReqs=cgsProxTotalSentReqs, cgsReqCountPerRegionId=cgsReqCountPerRegionId, cgsNotifObjects=cgsNotifObjects, ciscoGslbSystemResourceLocationGroup=ciscoGslbSystemResourceLocationGroup, cgsLocationZone=cgsLocationZone, cgsLocationStorageType=cgsLocationStorageType, cgsRegionIdComments=cgsRegionIdComments, cgsAnswerCountRatePerRegionId30Min=cgsAnswerCountRatePerRegionId30Min, cgsRegionIdStorageType=cgsRegionIdStorageType)
