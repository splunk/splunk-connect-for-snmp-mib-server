#
# PySNMP MIB module CISCO-FC-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FC-MGMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:40:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, MibIdentifier, Integer32, Gauge32, Counter32, Counter64, Unsigned32, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "MibIdentifier", "Integer32", "Gauge32", "Counter32", "Counter64", "Unsigned32", "IpAddress", "ObjectIdentity")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ciscoFcMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 999999))
ciscoFcMgmtMIB.setRevisions(('2002-09-12 00:00',))
if mibBuilder.loadTexts: ciscoFcMgmtMIB.setLastUpdated('200209120000Z')
if mibBuilder.loadTexts: ciscoFcMgmtMIB.setOrganization('Cisco Systems, Inc.')
cfcmgmtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1))
cfcmgmtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999999, 2))
cfcmgmtNotifPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999999, 2, 0))
cfcmgmtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3))
class CfcmFcNameIdOrZero(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), )
class CfcmFcAddressId(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), )
class CfcmDomainIdOrZero(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 239)

class CfcmFcPortType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("unknown", 1), ("other", 2), ("dynamic", 3), ("nPort", 4), ("nlPort", 5), ("fPort", 6), ("flPort", 7), ("ePort", 8), ("bPort", 9))

class CfcmFcClasses(TextualConvention, Bits):
    reference = 'Classes of service are described in FC-FS Section 13.'
    status = 'current'
    namedValues = NamedValues(("classF", 0), ("class1", 1), ("class2", 2), ("class3", 3), ("class4", 4), ("class5", 5), ("class6", 6))

class CfcmFcBbCredit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 32767)

class CfcmFcBbCreditModel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("regular", 1), ("alternate", 2))

class CfcmFcDataFieldSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(128, 2112)

class CfcmFcUnitFunctions(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("other", 0), ("hub", 1), ("switch", 2), ("bridge", 3), ("gateway", 4), ("host", 5), ("storageSubsys", 6), ("storageAccessDev", 7), ("nas", 8), ("wdmux", 9))

class CfcmPhysicalIndexOrZero(TextualConvention, Integer32):
    reference = 'entPhysicalTable is defined in the Entity MIB, RFC 2737.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class CfcmHrSWInstalledIndexOrZero(TextualConvention, Integer32):
    reference = 'hrSWInstalledTable is defined in the Host Resources MIB, RFC 2790.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class CfcmMilliSeconds(TextualConvention, Unsigned32):
    status = 'current'

class CfcmMicroSeconds(TextualConvention, Unsigned32):
    status = 'current'

cfcmInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1), )
if mibBuilder.loadTexts: cfcmInstanceTable.setStatus('current')
cfcmInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1), ).setIndexNames((0, "CISCO-FC-MGMT-MIB", "cfcmInstanceIndex"))
if mibBuilder.loadTexts: cfcmInstanceEntry.setStatus('current')
cfcmInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cfcmInstanceIndex.setStatus('current')
cfcmInstanceWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 2), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmInstanceWwn.setStatus('current')
cfcmInstanceFunctions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 3), CfcmFcUnitFunctions()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmInstanceFunctions.setStatus('current')
cfcmInstancePhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 4), CfcmPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmInstancePhysicalIndex.setStatus('current')
cfcmInstanceSoftwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 5), CfcmHrSWInstalledIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmInstanceSoftwareIndex.setStatus('current')
cfcmInstanceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("warning", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmInstanceStatus.setStatus('current')
cfcmInstanceTextName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcmInstanceTextName.setStatus('current')
cfcmInstanceDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 8), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcmInstanceDescr.setStatus('current')
cfcmInstanceFabricId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 1, 1, 9), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmInstanceFabricId.setStatus('current')
cfcmSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 2), )
if mibBuilder.loadTexts: cfcmSwitchTable.setStatus('current')
cfcmSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 2, 1), ).setIndexNames((0, "CISCO-FC-MGMT-MIB", "cfcmInstanceIndex"), (0, "CISCO-FC-MGMT-MIB", "cfcmSwitchIndex"))
if mibBuilder.loadTexts: cfcmSwitchEntry.setStatus('current')
cfcmSwitchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cfcmSwitchIndex.setStatus('current')
cfcmSwitchDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 2, 1, 2), CfcmDomainIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcmSwitchDomainId.setStatus('current')
cfcmSwitchPrincipal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmSwitchPrincipal.setStatus('current')
cfcmPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3), )
if mibBuilder.loadTexts: cfcmPortTable.setStatus('current')
cfcmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfcmPortEntry.setStatus('current')
cfcmPortInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortInstanceIndex.setStatus('current')
cfcmPortWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 2), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortWwn.setStatus('current')
cfcmPortNodeWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 3), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortNodeWwn.setStatus('current')
cfcmPortAdminType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 4), CfcmFcPortType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcmPortAdminType.setStatus('current')
cfcmPortOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 5), CfcmFcPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortOperType.setStatus('current')
cfcmPortFcCapClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 6), CfcmFcClasses()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortFcCapClass.setStatus('current')
cfcmPortFcOperClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 7), CfcmFcClasses()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortFcOperClass.setStatus('current')
cfcmPortTransmitterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("shortwave850nm", 3), ("longwave1550nm", 4), ("longwave1310nm", 5), ("electrical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortTransmitterType.setStatus('current')
cfcmPortConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("gbic", 3), ("embedded", 4), ("glm", 5), ("gbicSerialId", 6), ("gbicNoSerialId", 7), ("sfpSerialId", 8), ("sfpNoSerialId", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortConnectorType.setStatus('current')
cfcmPortSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortSerialNumber.setStatus('current')
cfcmPortPhysicalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortPhysicalNumber.setStatus('current')
cfcmPortAdminSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("auto", 1), ("eighthGbs", 2), ("quarterGbs", 3), ("halfGbs", 4), ("oneGbs", 5), ("twoGbs", 6), ("fourGbs", 7), ("tenGbs", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcmPortAdminSpeed.setStatus('current')
cfcmPortCapProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 13), Bits().clone(namedValues=NamedValues(("unknown", 0), ("loop", 1), ("fabric", 2), ("scsi", 3), ("tcpIp", 4), ("vi", 5), ("ficon", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortCapProtocols.setStatus('current')
cfcmPortOperProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 3, 1, 14), Bits().clone(namedValues=NamedValues(("unknown", 0), ("loop", 1), ("fabric", 2), ("scsi", 3), ("tcpIp", 4), ("vi", 5), ("ficon", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortOperProtocols.setStatus('current')
cfcmPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4), )
if mibBuilder.loadTexts: cfcmPortStatsTable.setStatus('current')
cfcmPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1), )
cfcmPortEntry.registerAugmentions(("CISCO-FC-MGMT-MIB", "cfcmPortStatsEntry"))
cfcmPortStatsEntry.setIndexNames(*cfcmPortEntry.getIndexNames())
if mibBuilder.loadTexts: cfcmPortStatsEntry.setStatus('current')
cfcmPortBBCreditZeros = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortBBCreditZeros.setStatus('current')
cfcmPortFullInputBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortFullInputBuffers.setStatus('current')
cfcmPortClass2RxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2RxFrames.setStatus('current')
cfcmPortClass2RxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2RxOctets.setStatus('current')
cfcmPortClass2TxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2TxFrames.setStatus('current')
cfcmPortClass2TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2TxOctets.setStatus('current')
cfcmPortClass2Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2Discards.setStatus('current')
cfcmPortClass2RxFbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2RxFbsyFrames.setStatus('current')
cfcmPortClass2RxPbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2RxPbsyFrames.setStatus('current')
cfcmPortClass2RxFrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2RxFrjtFrames.setStatus('current')
cfcmPortClass2RxPrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2RxPrjtFrames.setStatus('current')
cfcmPortClass2TxFbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2TxFbsyFrames.setStatus('current')
cfcmPortClass2TxPbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2TxPbsyFrames.setStatus('current')
cfcmPortClass2TxFrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2TxFrjtFrames.setStatus('current')
cfcmPortClass2TxPrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass2TxPrjtFrames.setStatus('current')
cfcmPortClass3RxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass3RxFrames.setStatus('current')
cfcmPortClass3RxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass3RxOctets.setStatus('current')
cfcmPortClass3TxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass3TxFrames.setStatus('current')
cfcmPortClass3TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass3TxOctets.setStatus('current')
cfcmPortClass3Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClass3Discards.setStatus('current')
cfcmPortClassFRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClassFRxFrames.setStatus('current')
cfcmPortClassFRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClassFRxOctets.setStatus('current')
cfcmPortClassFTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClassFTxFrames.setStatus('current')
cfcmPortClassFTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClassFTxOctets.setStatus('current')
cfcmPortClassFDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortClassFDiscards.setStatus('current')
cfcmPortLcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5), )
if mibBuilder.loadTexts: cfcmPortLcStatsTable.setStatus('current')
cfcmPortLcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1), )
cfcmPortEntry.registerAugmentions(("CISCO-FC-MGMT-MIB", "cfcmPortLcStatsEntry"))
cfcmPortLcStatsEntry.setIndexNames(*cfcmPortEntry.getIndexNames())
if mibBuilder.loadTexts: cfcmPortLcStatsEntry.setStatus('current')
cfcmPortLcBBCreditZeros = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcBBCreditZeros.setStatus('current')
cfcmPortLcFullInputBuffers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcFullInputBuffers.setStatus('current')
cfcmPortLcClass2RxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2RxFrames.setStatus('current')
cfcmPortLcClass2RxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2RxOctets.setStatus('current')
cfcmPortLcClass2TxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2TxFrames.setStatus('current')
cfcmPortLcClass2TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2TxOctets.setStatus('current')
cfcmPortLcClass2Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2Discards.setStatus('current')
cfcmPortLcClass2RxFbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2RxFbsyFrames.setStatus('current')
cfcmPortLcClass2RxPbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2RxPbsyFrames.setStatus('current')
cfcmPortLcClass2RxFrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2RxFrjtFrames.setStatus('current')
cfcmPortLcClass2RxPrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2RxPrjtFrames.setStatus('current')
cfcmPortLcClass2TxFbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2TxFbsyFrames.setStatus('current')
cfcmPortLcClass2TxPbsyFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2TxPbsyFrames.setStatus('current')
cfcmPortLcClass2TxFrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2TxFrjtFrames.setStatus('current')
cfcmPortLcClass2TxPrjtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass2TxPrjtFrames.setStatus('current')
cfcmPortLcClass3RxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass3RxFrames.setStatus('current')
cfcmPortLcClass3RxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass3RxOctets.setStatus('current')
cfcmPortLcClass3TxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass3TxFrames.setStatus('current')
cfcmPortLcClass3TxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass3TxOctets.setStatus('current')
cfcmPortLcClass3Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLcClass3Discards.setStatus('current')
cfcmPortErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6), )
if mibBuilder.loadTexts: cfcmPortErrorsTable.setStatus('current')
cfcmPortErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1), )
cfcmPortEntry.registerAugmentions(("CISCO-FC-MGMT-MIB", "cfcmPortErrorsEntry"))
cfcmPortErrorsEntry.setIndexNames(*cfcmPortEntry.getIndexNames())
if mibBuilder.loadTexts: cfcmPortErrorsEntry.setStatus('current')
cfcmPortRxLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortRxLinkResets.setStatus('current')
cfcmPortTxLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortTxLinkResets.setStatus('current')
cfcmPortLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLinkResets.setStatus('current')
cfcmPortRxOfflineSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortRxOfflineSequences.setStatus('current')
cfcmPortTxOfflineSequences = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortTxOfflineSequences.setStatus('current')
cfcmPortLinkFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLinkFailures.setStatus('current')
cfcmPortLossofSynchs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLossofSynchs.setStatus('current')
cfcmPortLossofSignals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortLossofSignals.setStatus('current')
cfcmPortPrimSeqProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortPrimSeqProtocolErrors.setStatus('current')
cfcmPortInvalidTxWords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortInvalidTxWords.setStatus('current')
cfcmPortInvalidCRCs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortInvalidCRCs.setStatus('current')
cfcmPortInvalidOrderedSets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortInvalidOrderedSets.setStatus('current')
cfcmPortFrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortFrameTooLongs.setStatus('current')
cfcmPortTruncatedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortTruncatedFrames.setStatus('current')
cfcmPortAddressErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortAddressErrors.setStatus('current')
cfcmPortDelimiterErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortDelimiterErrors.setStatus('current')
cfcmPortEncodingDisparityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortEncodingDisparityErrors.setStatus('current')
cfcmPortOtherErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmPortOtherErrors.setStatus('current')
cfcmFxPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7), )
if mibBuilder.loadTexts: cfcmFxPortTable.setStatus('current')
cfcmFxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfcmFxPortEntry.setStatus('current')
cfcmFxPortRatov = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 1), CfcmMilliSeconds()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortRatov.setStatus('current')
cfcmFxPortEdtov = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 2), CfcmMilliSeconds()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortEdtov.setStatus('current')
cfcmFxPortRttov = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 3), CfcmMilliSeconds()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortRttov.setStatus('current')
cfcmFxPortHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 4), CfcmMicroSeconds()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortHoldTime.setStatus('current')
cfcmFxPortCapBbCreditMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 5), CfcmFcBbCredit()).setUnits('buffers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapBbCreditMax.setStatus('current')
cfcmFxPortCapBbCreditMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 6), CfcmFcBbCredit()).setUnits('buffers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapBbCreditMin.setStatus('current')
cfcmFxPortCapDataFieldSizeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 7), CfcmFcDataFieldSize()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapDataFieldSizeMax.setStatus('current')
cfcmFxPortCapDataFieldSizeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 8), CfcmFcDataFieldSize()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapDataFieldSizeMin.setStatus('current')
cfcmFxPortCapClass2SeqDeliv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapClass2SeqDeliv.setStatus('current')
cfcmFxPortCapClass3SeqDeliv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapClass3SeqDeliv.setStatus('current')
cfcmFxPortCapHoldTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 11), CfcmMicroSeconds()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapHoldTimeMax.setStatus('current')
cfcmFxPortCapHoldTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 7, 1, 12), CfcmMicroSeconds()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFxPortCapHoldTimeMin.setStatus('current')
cfcmISPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 8), )
if mibBuilder.loadTexts: cfcmISPortTable.setStatus('current')
cfcmISPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cfcmISPortEntry.setStatus('current')
cfcmISPortClassFCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 8, 1, 1), CfcmFcBbCredit()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcmISPortClassFCredit.setStatus('current')
cfcmISPortClassFDataFieldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 8, 1, 2), CfcmFcDataFieldSize()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmISPortClassFDataFieldSize.setStatus('current')
cfcmFLoginTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9), )
if mibBuilder.loadTexts: cfcmFLoginTable.setStatus('current')
cfcmFLoginEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-FC-MGMT-MIB", "cfcmFLoginNxPortIndex"))
if mibBuilder.loadTexts: cfcmFLoginEntry.setStatus('current')
cfcmFLoginNxPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cfcmFLoginNxPortIndex.setStatus('current')
cfcmFLoginPortWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 2), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginPortWwn.setStatus('current')
cfcmFLoginNodeWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 3), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginNodeWwn.setStatus('current')
cfcmFLoginBbCreditModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 4), CfcmFcBbCreditModel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginBbCreditModel.setStatus('current')
cfcmFLoginBbCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 5), CfcmFcBbCredit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginBbCredit.setStatus('current')
cfcmFLoginClassesAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 6), CfcmFcClasses()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginClassesAgreed.setStatus('current')
cfcmFLoginClass2SeqDelivAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginClass2SeqDelivAgreed.setStatus('current')
cfcmFLoginClass2DataFieldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 8), CfcmFcDataFieldSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginClass2DataFieldSize.setStatus('current')
cfcmFLoginClass3SeqDelivAgreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginClass3SeqDelivAgreed.setStatus('current')
cfcmFLoginClass3DataFieldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 9, 1, 10), CfcmFcDataFieldSize()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmFLoginClass3DataFieldSize.setStatus('current')
cfcmLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10), )
if mibBuilder.loadTexts: cfcmLinkTable.setStatus('current')
cfcmLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1), ).setIndexNames((0, "CISCO-FC-MGMT-MIB", "cfcmInstanceIndex"), (0, "CISCO-FC-MGMT-MIB", "cfcmLinkIndex"))
if mibBuilder.loadTexts: cfcmLinkEntry.setStatus('current')
cfcmLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cfcmLinkIndex.setStatus('current')
cfcmLinkEnd1NodeWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 2), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd1NodeWwn.setStatus('current')
cfcmLinkEnd1PhysPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd1PhysPortNumber.setStatus('current')
cfcmLinkEnd1PortWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 4), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd1PortWwn.setStatus('current')
cfcmLinkEnd2NodeWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 5), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2NodeWwn.setStatus('current')
cfcmLinkEnd2PhysPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2PhysPortNumber.setStatus('current')
cfcmLinkEnd2PortWwn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 7), CfcmFcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2PortWwn.setStatus('current')
cfcmLinkEnd2AgentAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2AgentAddress.setStatus('current')
cfcmLinkEnd2PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 9), CfcmFcPortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2PortType.setStatus('current')
cfcmLinkEnd2UnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 10), CfcmFcUnitFunctions()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2UnitType.setStatus('current')
cfcmLinkEnd2FcAddressId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 999999, 1, 10, 1, 11), CfcmFcAddressId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcmLinkEnd2FcAddressId.setStatus('current')
cfcmgmtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 1))
cfcmgmtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2))
cfcmgmtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 1, 1)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmInstanceBasicGroup"), ("CISCO-FC-MGMT-MIB", "cfcmPortBasicGroup"), ("CISCO-FC-MGMT-MIB", "cfcmPortStatsGroup"), ("CISCO-FC-MGMT-MIB", "cfcmPortErrorsGroup"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass23StatsGroup"), ("CISCO-FC-MGMT-MIB", "cfcmPortClassFStatsGroup"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcStatsGroup"), ("CISCO-FC-MGMT-MIB", "cfcmSwitchBasicGroup"), ("CISCO-FC-MGMT-MIB", "cfcmSwitchPortGroup"), ("CISCO-FC-MGMT-MIB", "cfcmSwitchLoginGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmgmtCompliance = cfcmgmtCompliance.setStatus('current')
cfcmInstanceBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 1)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmInstanceWwn"), ("CISCO-FC-MGMT-MIB", "cfcmInstanceFunctions"), ("CISCO-FC-MGMT-MIB", "cfcmInstancePhysicalIndex"), ("CISCO-FC-MGMT-MIB", "cfcmInstanceSoftwareIndex"), ("CISCO-FC-MGMT-MIB", "cfcmInstanceStatus"), ("CISCO-FC-MGMT-MIB", "cfcmInstanceTextName"), ("CISCO-FC-MGMT-MIB", "cfcmInstanceDescr"), ("CISCO-FC-MGMT-MIB", "cfcmInstanceFabricId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmInstanceBasicGroup = cfcmInstanceBasicGroup.setStatus('current')
cfcmSwitchBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 2)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmSwitchDomainId"), ("CISCO-FC-MGMT-MIB", "cfcmSwitchPrincipal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmSwitchBasicGroup = cfcmSwitchBasicGroup.setStatus('current')
cfcmPortBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 3)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmPortInstanceIndex"), ("CISCO-FC-MGMT-MIB", "cfcmPortWwn"), ("CISCO-FC-MGMT-MIB", "cfcmPortNodeWwn"), ("CISCO-FC-MGMT-MIB", "cfcmPortAdminType"), ("CISCO-FC-MGMT-MIB", "cfcmPortOperType"), ("CISCO-FC-MGMT-MIB", "cfcmPortFcCapClass"), ("CISCO-FC-MGMT-MIB", "cfcmPortFcOperClass"), ("CISCO-FC-MGMT-MIB", "cfcmPortTransmitterType"), ("CISCO-FC-MGMT-MIB", "cfcmPortConnectorType"), ("CISCO-FC-MGMT-MIB", "cfcmPortSerialNumber"), ("CISCO-FC-MGMT-MIB", "cfcmPortPhysicalNumber"), ("CISCO-FC-MGMT-MIB", "cfcmPortAdminSpeed"), ("CISCO-FC-MGMT-MIB", "cfcmPortCapProtocols"), ("CISCO-FC-MGMT-MIB", "cfcmPortOperProtocols"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmPortBasicGroup = cfcmPortBasicGroup.setStatus('current')
cfcmPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 4)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmPortBBCreditZeros"), ("CISCO-FC-MGMT-MIB", "cfcmPortFullInputBuffers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmPortStatsGroup = cfcmPortStatsGroup.setStatus('current')
cfcmPortClass23StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 5)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmPortClass2RxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2RxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2TxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2TxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2Discards"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2RxFbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2RxPbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2RxFrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2RxPrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2TxFbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2TxPbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2TxFrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass2TxPrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass3RxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass3RxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass3TxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass3TxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortClass3Discards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmPortClass23StatsGroup = cfcmPortClass23StatsGroup.setStatus('current')
cfcmPortClassFStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 6)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmPortClassFRxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClassFRxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortClassFTxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortClassFTxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortClassFDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmPortClassFStatsGroup = cfcmPortClassFStatsGroup.setStatus('current')
cfcmPortLcStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 7)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmPortLcBBCreditZeros"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcFullInputBuffers"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2RxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2RxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2TxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2TxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2Discards"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass3Discards"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass3RxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass3RxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass3TxFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass3TxOctets"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2RxFbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2RxPbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2RxFrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2RxPrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2TxFbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2TxPbsyFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2TxFrjtFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortLcClass2TxPrjtFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmPortLcStatsGroup = cfcmPortLcStatsGroup.setStatus('current')
cfcmPortErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 8)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmPortRxLinkResets"), ("CISCO-FC-MGMT-MIB", "cfcmPortTxLinkResets"), ("CISCO-FC-MGMT-MIB", "cfcmPortLinkResets"), ("CISCO-FC-MGMT-MIB", "cfcmPortRxOfflineSequences"), ("CISCO-FC-MGMT-MIB", "cfcmPortTxOfflineSequences"), ("CISCO-FC-MGMT-MIB", "cfcmPortLinkFailures"), ("CISCO-FC-MGMT-MIB", "cfcmPortLossofSynchs"), ("CISCO-FC-MGMT-MIB", "cfcmPortLossofSignals"), ("CISCO-FC-MGMT-MIB", "cfcmPortPrimSeqProtocolErrors"), ("CISCO-FC-MGMT-MIB", "cfcmPortInvalidTxWords"), ("CISCO-FC-MGMT-MIB", "cfcmPortInvalidCRCs"), ("CISCO-FC-MGMT-MIB", "cfcmPortInvalidOrderedSets"), ("CISCO-FC-MGMT-MIB", "cfcmPortFrameTooLongs"), ("CISCO-FC-MGMT-MIB", "cfcmPortTruncatedFrames"), ("CISCO-FC-MGMT-MIB", "cfcmPortAddressErrors"), ("CISCO-FC-MGMT-MIB", "cfcmPortDelimiterErrors"), ("CISCO-FC-MGMT-MIB", "cfcmPortEncodingDisparityErrors"), ("CISCO-FC-MGMT-MIB", "cfcmPortOtherErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmPortErrorsGroup = cfcmPortErrorsGroup.setStatus('current')
cfcmSwitchPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 9)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmFxPortRatov"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortEdtov"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortRttov"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortHoldTime"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapBbCreditMax"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapBbCreditMin"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapDataFieldSizeMax"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapDataFieldSizeMin"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapClass2SeqDeliv"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapClass3SeqDeliv"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapHoldTimeMax"), ("CISCO-FC-MGMT-MIB", "cfcmFxPortCapHoldTimeMin"), ("CISCO-FC-MGMT-MIB", "cfcmISPortClassFCredit"), ("CISCO-FC-MGMT-MIB", "cfcmISPortClassFDataFieldSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmSwitchPortGroup = cfcmSwitchPortGroup.setStatus('current')
cfcmSwitchLoginGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 10)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmFLoginPortWwn"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginNodeWwn"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginBbCreditModel"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginBbCredit"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginClassesAgreed"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginClass2SeqDelivAgreed"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginClass2DataFieldSize"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginClass3SeqDelivAgreed"), ("CISCO-FC-MGMT-MIB", "cfcmFLoginClass3DataFieldSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmSwitchLoginGroup = cfcmSwitchLoginGroup.setStatus('current')
cfcmLinkBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 999999, 3, 2, 11)).setObjects(("CISCO-FC-MGMT-MIB", "cfcmLinkEnd1NodeWwn"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd1PhysPortNumber"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd1PortWwn"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2NodeWwn"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2PhysPortNumber"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2PortWwn"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2AgentAddress"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2PortType"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2UnitType"), ("CISCO-FC-MGMT-MIB", "cfcmLinkEnd2FcAddressId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfcmLinkBasicGroup = cfcmLinkBasicGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FC-MGMT-MIB", cfcmPortClass2RxPrjtFrames=cfcmPortClass2RxPrjtFrames, cfcmgmtGroups=cfcmgmtGroups, cfcmFxPortTable=cfcmFxPortTable, cfcmLinkEnd1PhysPortNumber=cfcmLinkEnd1PhysPortNumber, cfcmPortClass2TxFbsyFrames=cfcmPortClass2TxFbsyFrames, cfcmFLoginEntry=cfcmFLoginEntry, cfcmPortClass3RxFrames=cfcmPortClass3RxFrames, cfcmInstanceFunctions=cfcmInstanceFunctions, cfcmPortPhysicalNumber=cfcmPortPhysicalNumber, cfcmFxPortEdtov=cfcmFxPortEdtov, cfcmPortLcClass2TxFbsyFrames=cfcmPortLcClass2TxFbsyFrames, cfcmPortClass2RxFbsyFrames=cfcmPortClass2RxFbsyFrames, cfcmPortTable=cfcmPortTable, cfcmPortLcClass2TxOctets=cfcmPortLcClass2TxOctets, CfcmFcDataFieldSize=CfcmFcDataFieldSize, cfcmFxPortCapClass2SeqDeliv=cfcmFxPortCapClass2SeqDeliv, cfcmPortClass3RxOctets=cfcmPortClass3RxOctets, CfcmFcPortType=CfcmFcPortType, cfcmPortOperType=cfcmPortOperType, cfcmFxPortCapDataFieldSizeMin=cfcmFxPortCapDataFieldSizeMin, CfcmMicroSeconds=CfcmMicroSeconds, cfcmPortStatsTable=cfcmPortStatsTable, cfcmPortLcClass2RxPrjtFrames=cfcmPortLcClass2RxPrjtFrames, cfcmPortClassFDiscards=cfcmPortClassFDiscards, cfcmPortLcClass2RxOctets=cfcmPortLcClass2RxOctets, cfcmFxPortCapHoldTimeMin=cfcmFxPortCapHoldTimeMin, cfcmPortErrorsGroup=cfcmPortErrorsGroup, cfcmPortClassFRxFrames=cfcmPortClassFRxFrames, cfcmPortRxLinkResets=cfcmPortRxLinkResets, cfcmPortClass2TxPrjtFrames=cfcmPortClass2TxPrjtFrames, cfcmPortLcClass2RxFbsyFrames=cfcmPortLcClass2RxFbsyFrames, cfcmFxPortEntry=cfcmFxPortEntry, CfcmPhysicalIndexOrZero=CfcmPhysicalIndexOrZero, CfcmFcBbCredit=CfcmFcBbCredit, cfcmLinkIndex=cfcmLinkIndex, cfcmLinkEnd2PortType=cfcmLinkEnd2PortType, cfcmPortLcStatsTable=cfcmPortLcStatsTable, cfcmPortLcClass2RxPbsyFrames=cfcmPortLcClass2RxPbsyFrames, cfcmLinkTable=cfcmLinkTable, cfcmFxPortRatov=cfcmFxPortRatov, cfcmPortAddressErrors=cfcmPortAddressErrors, cfcmFLoginClass3SeqDelivAgreed=cfcmFLoginClass3SeqDelivAgreed, cfcmLinkEnd2PhysPortNumber=cfcmLinkEnd2PhysPortNumber, cfcmPortErrorsTable=cfcmPortErrorsTable, cfcmISPortClassFCredit=cfcmISPortClassFCredit, cfcmISPortTable=cfcmISPortTable, cfcmgmtCompliance=cfcmgmtCompliance, cfcmFLoginBbCredit=cfcmFLoginBbCredit, cfcmPortLcClass2TxFrames=cfcmPortLcClass2TxFrames, cfcmPortFcCapClass=cfcmPortFcCapClass, cfcmPortLossofSynchs=cfcmPortLossofSynchs, cfcmLinkEnd2FcAddressId=cfcmLinkEnd2FcAddressId, PYSNMP_MODULE_ID=ciscoFcMgmtMIB, cfcmPortLcClass3RxOctets=cfcmPortLcClass3RxOctets, cfcmPortEntry=cfcmPortEntry, cfcmFxPortCapHoldTimeMax=cfcmFxPortCapHoldTimeMax, cfcmPortLinkResets=cfcmPortLinkResets, cfcmPortFrameTooLongs=cfcmPortFrameTooLongs, cfcmPortClass3Discards=cfcmPortClass3Discards, cfcmPortLossofSignals=cfcmPortLossofSignals, cfcmSwitchPrincipal=cfcmSwitchPrincipal, cfcmFLoginClass2DataFieldSize=cfcmFLoginClass2DataFieldSize, cfcmPortLcClass2RxFrames=cfcmPortLcClass2RxFrames, cfcmInstanceSoftwareIndex=cfcmInstanceSoftwareIndex, cfcmInstanceTextName=cfcmInstanceTextName, CfcmDomainIdOrZero=CfcmDomainIdOrZero, cfcmPortLcClass2RxFrjtFrames=cfcmPortLcClass2RxFrjtFrames, cfcmFLoginNxPortIndex=cfcmFLoginNxPortIndex, cfcmFxPortCapClass3SeqDeliv=cfcmFxPortCapClass3SeqDeliv, CfcmFcClasses=CfcmFcClasses, cfcmPortLcClass2TxPbsyFrames=cfcmPortLcClass2TxPbsyFrames, cfcmPortLcClass3TxFrames=cfcmPortLcClass3TxFrames, cfcmPortPrimSeqProtocolErrors=cfcmPortPrimSeqProtocolErrors, cfcmFLoginPortWwn=cfcmFLoginPortWwn, cfcmInstanceBasicGroup=cfcmInstanceBasicGroup, cfcmPortAdminSpeed=cfcmPortAdminSpeed, cfcmPortFcOperClass=cfcmPortFcOperClass, CfcmMilliSeconds=CfcmMilliSeconds, cfcmPortSerialNumber=cfcmPortSerialNumber, cfcmPortLcClass2TxFrjtFrames=cfcmPortLcClass2TxFrjtFrames, cfcmPortBBCreditZeros=cfcmPortBBCreditZeros, cfcmPortErrorsEntry=cfcmPortErrorsEntry, cfcmPortAdminType=cfcmPortAdminType, cfcmPortLcClass3TxOctets=cfcmPortLcClass3TxOctets, cfcmISPortEntry=cfcmISPortEntry, cfcmPortStatsGroup=cfcmPortStatsGroup, cfcmPortClass2TxPbsyFrames=cfcmPortClass2TxPbsyFrames, cfcmPortClass2TxFrjtFrames=cfcmPortClass2TxFrjtFrames, cfcmPortClassFTxOctets=cfcmPortClassFTxOctets, cfcmPortTxLinkResets=cfcmPortTxLinkResets, cfcmSwitchPortGroup=cfcmSwitchPortGroup, cfcmPortInvalidCRCs=cfcmPortInvalidCRCs, CfcmFcNameIdOrZero=CfcmFcNameIdOrZero, cfcmPortLinkFailures=cfcmPortLinkFailures, cfcmPortClass3TxFrames=cfcmPortClass3TxFrames, cfcmPortNodeWwn=cfcmPortNodeWwn, cfcmPortEncodingDisparityErrors=cfcmPortEncodingDisparityErrors, cfcmLinkEnd2AgentAddress=cfcmLinkEnd2AgentAddress, cfcmLinkEnd2UnitType=cfcmLinkEnd2UnitType, cfcmFLoginClass3DataFieldSize=cfcmFLoginClass3DataFieldSize, cfcmPortClass23StatsGroup=cfcmPortClass23StatsGroup, cfcmPortClass2RxPbsyFrames=cfcmPortClass2RxPbsyFrames, cfcmgmtNotifPrefix=cfcmgmtNotifPrefix, cfcmInstancePhysicalIndex=cfcmInstancePhysicalIndex, cfcmFLoginNodeWwn=cfcmFLoginNodeWwn, ciscoFcMgmtMIB=ciscoFcMgmtMIB, cfcmSwitchTable=cfcmSwitchTable, cfcmPortLcClass2TxPrjtFrames=cfcmPortLcClass2TxPrjtFrames, cfcmPortLcFullInputBuffers=cfcmPortLcFullInputBuffers, cfcmInstanceDescr=cfcmInstanceDescr, cfcmPortClass2RxFrjtFrames=cfcmPortClass2RxFrjtFrames, CfcmFcUnitFunctions=CfcmFcUnitFunctions, CfcmFcBbCreditModel=CfcmFcBbCreditModel, cfcmLinkEnd1PortWwn=cfcmLinkEnd1PortWwn, cfcmISPortClassFDataFieldSize=cfcmISPortClassFDataFieldSize, cfcmPortOtherErrors=cfcmPortOtherErrors, cfcmPortLcClass2Discards=cfcmPortLcClass2Discards, cfcmPortClass2TxOctets=cfcmPortClass2TxOctets, cfcmSwitchBasicGroup=cfcmSwitchBasicGroup, cfcmLinkBasicGroup=cfcmLinkBasicGroup, cfcmFxPortCapBbCreditMax=cfcmFxPortCapBbCreditMax, CfcmFcAddressId=CfcmFcAddressId, cfcmFxPortCapBbCreditMin=cfcmFxPortCapBbCreditMin, cfcmSwitchIndex=cfcmSwitchIndex, cfcmPortTxOfflineSequences=cfcmPortTxOfflineSequences, cfcmPortCapProtocols=cfcmPortCapProtocols, cfcmgmtCompliances=cfcmgmtCompliances, cfcmSwitchDomainId=cfcmSwitchDomainId, cfcmFLoginClassesAgreed=cfcmFLoginClassesAgreed, cfcmPortWwn=cfcmPortWwn, cfcmPortTruncatedFrames=cfcmPortTruncatedFrames, cfcmPortStatsEntry=cfcmPortStatsEntry, cfcmPortLcBBCreditZeros=cfcmPortLcBBCreditZeros, cfcmLinkEnd2PortWwn=cfcmLinkEnd2PortWwn, cfcmFxPortCapDataFieldSizeMax=cfcmFxPortCapDataFieldSizeMax, cfcmPortTransmitterType=cfcmPortTransmitterType, cfcmPortClass2TxFrames=cfcmPortClass2TxFrames, cfcmSwitchEntry=cfcmSwitchEntry, cfcmInstanceEntry=cfcmInstanceEntry, cfcmInstanceFabricId=cfcmInstanceFabricId, cfcmInstanceTable=cfcmInstanceTable, cfcmInstanceWwn=cfcmInstanceWwn, cfcmPortClassFStatsGroup=cfcmPortClassFStatsGroup, cfcmPortClass3TxOctets=cfcmPortClass3TxOctets, cfcmFxPortHoldTime=cfcmFxPortHoldTime, cfcmPortDelimiterErrors=cfcmPortDelimiterErrors, cfcmPortClass2Discards=cfcmPortClass2Discards, cfcmPortConnectorType=cfcmPortConnectorType, CfcmHrSWInstalledIndexOrZero=CfcmHrSWInstalledIndexOrZero, cfcmPortRxOfflineSequences=cfcmPortRxOfflineSequences, cfcmPortLcStatsEntry=cfcmPortLcStatsEntry, cfcmSwitchLoginGroup=cfcmSwitchLoginGroup, cfcmgmtConformance=cfcmgmtConformance, cfcmFLoginTable=cfcmFLoginTable, cfcmPortClass2RxFrames=cfcmPortClass2RxFrames, cfcmLinkEntry=cfcmLinkEntry, cfcmInstanceStatus=cfcmInstanceStatus, cfcmgmtNotifications=cfcmgmtNotifications, cfcmPortClass2RxOctets=cfcmPortClass2RxOctets, cfcmPortInvalidTxWords=cfcmPortInvalidTxWords, cfcmgmtObjects=cfcmgmtObjects, cfcmPortLcClass3Discards=cfcmPortLcClass3Discards, cfcmPortBasicGroup=cfcmPortBasicGroup, cfcmInstanceIndex=cfcmInstanceIndex, cfcmPortInvalidOrderedSets=cfcmPortInvalidOrderedSets, cfcmPortInstanceIndex=cfcmPortInstanceIndex, cfcmLinkEnd1NodeWwn=cfcmLinkEnd1NodeWwn, cfcmPortOperProtocols=cfcmPortOperProtocols, cfcmPortLcStatsGroup=cfcmPortLcStatsGroup, cfcmPortFullInputBuffers=cfcmPortFullInputBuffers, cfcmPortClassFRxOctets=cfcmPortClassFRxOctets, cfcmFxPortRttov=cfcmFxPortRttov, cfcmFLoginBbCreditModel=cfcmFLoginBbCreditModel, cfcmLinkEnd2NodeWwn=cfcmLinkEnd2NodeWwn, cfcmPortClassFTxFrames=cfcmPortClassFTxFrames, cfcmPortLcClass3RxFrames=cfcmPortLcClass3RxFrames, cfcmFLoginClass2SeqDelivAgreed=cfcmFLoginClass2SeqDelivAgreed)
