#
# PySNMP MIB module NETSCREEN-VR-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VR-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
netscreenVR, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVR")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, mib_2, MibIdentifier, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, iso, TimeTicks, Unsigned32, ObjectIdentity, Integer32, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "mib-2", "MibIdentifier", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "iso", "TimeTicks", "Unsigned32", "ObjectIdentity", "Integer32", "Counter64", "NotificationType")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
nsVrOspf = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 18, 5))
if mibBuilder.loadTexts: nsVrOspf.setLastUpdated('200506202022Z')
if mibBuilder.loadTexts: nsVrOspf.setOrganization('Juniper Networks, Inc.')
class AreaID(TextualConvention, IpAddress):
    status = 'current'

class RouterID(TextualConvention, IpAddress):
    status = 'current'

class Metric(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class BigMetric(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16777215)

class Status(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class PositiveInteger(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class HelloRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

class UpToMaxAge(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 3600)

class InterfaceIndex(TextualConvention, Integer32):
    status = 'current'

class DesignatedRouterPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class TOSType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 30)

nsVrOspfGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1), )
if mibBuilder.loadTexts: nsVrOspfGeneralTable.setStatus('current')
nsVrOspfGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfGeneralVRID"))
if mibBuilder.loadTexts: nsVrOspfGeneralEntry.setStatus('current')
nsVrOspfRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 1), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfRouterId.setStatus('current')
nsVrOspfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 2), Status()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAdminStat.setStatus('current')
nsVrOspfVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("version2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVersionNumber.setStatus('current')
nsVrOspfAreaBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaBdrRtrStatus.setStatus('current')
nsVrOspfASBdrRtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfASBdrRtrStatus.setStatus('current')
nsVrOspfExternLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExternLsaCount.setStatus('current')
nsVrOspfExternLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExternLsaCksumSum.setStatus('current')
nsVrOspfTOSSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfTOSSupport.setStatus('current')
nsVrOspfOriginateNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfOriginateNewLsas.setStatus('current')
nsVrOspfRxNewLsas = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfRxNewLsas.setStatus('current')
nsVrOspfExtLsdbLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbLimit.setStatus('current')
nsVrOspfMulticastExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfMulticastExtensions.setStatus('current')
nsVrOspfExitOverflowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 13), PositiveInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExitOverflowInterval.setStatus('current')
nsVrOspfDemandExtensions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfDemandExtensions.setStatus('current')
nsVrOspfGeneralVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfGeneralVRID.setStatus('current')
nsVrOspfAreaTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2), )
if mibBuilder.loadTexts: nsVrOspfAreaTable.setStatus('current')
nsVrOspfAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaId"))
if mibBuilder.loadTexts: nsVrOspfAreaEntry.setStatus('current')
nsVrOspfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaId.setStatus('current')
nsVrOspfImportAsExtern = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("importExternal", 1), ("importNoExternal", 2), ("importNssa", 3))).clone('importExternal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfImportAsExtern.setStatus('current')
nsVrOspfSpfRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfSpfRuns.setStatus('current')
nsVrOspfAreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaBdrRtrCount.setStatus('current')
nsVrOspfAsBdrRtrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAsBdrRtrCount.setStatus('current')
nsVrOspfAreaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaLsaCount.setStatus('current')
nsVrOspfAreaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaLsaCksumSum.setStatus('current')
nsVrOspfAreaSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAreaSummary", 1), ("sendAreaSummary", 2))).clone('noAreaSummary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfAreaSummary.setStatus('current')
nsVrOspfAreaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfAreaStatus.setStatus('current')
nsVrOspfAreaVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaVRID.setStatus('current')
nsVrOspfStubAreaTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3), )
if mibBuilder.loadTexts: nsVrOspfStubAreaTable.setStatus('current')
nsVrOspfStubAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfStubVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfStubAreaId"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfStubTOS"))
if mibBuilder.loadTexts: nsVrOspfStubAreaEntry.setStatus('current')
nsVrOspfStubAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfStubAreaId.setStatus('current')
nsVrOspfStubTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1, 2), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfStubTOS.setStatus('current')
nsVrOspfStubMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1, 3), BigMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfStubMetric.setStatus('current')
nsVrOspfStubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfStubStatus.setStatus('current')
nsVrOspfStubMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nsVrOspfMetric", 1), ("comparableCost", 2), ("nonComparable", 3))).clone('nsVrOspfMetric')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfStubMetricType.setStatus('current')
nsVrOspfStubVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfStubVRID.setStatus('current')
nsVrOspfLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4), )
if mibBuilder.loadTexts: nsVrOspfLsdbTable.setStatus('current')
nsVrOspfLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfLsdbVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfLsdbAreaId"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfLsdbType"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfLsdbLsid"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfLsdbRouterId"))
if mibBuilder.loadTexts: nsVrOspfLsdbEntry.setStatus('current')
nsVrOspfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbAreaId.setStatus('current')
nsVrOspfLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5), ("multicastLink", 6), ("nssaExternalLink", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbType.setStatus('current')
nsVrOspfLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbLsid.setStatus('current')
nsVrOspfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbRouterId.setStatus('current')
nsVrOspfLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbSequence.setStatus('current')
nsVrOspfLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbAge.setStatus('current')
nsVrOspfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbChecksum.setStatus('current')
nsVrOspfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbAdvertisement.setStatus('current')
nsVrOspfLsdbVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfLsdbVRID.setStatus('current')
nsVrOspfHostTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6), )
if mibBuilder.loadTexts: nsVrOspfHostTable.setStatus('current')
nsVrOspfHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfHostVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfHostIpAddress"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfHostTOS"))
if mibBuilder.loadTexts: nsVrOspfHostEntry.setStatus('current')
nsVrOspfHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfHostIpAddress.setStatus('current')
nsVrOspfHostTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1, 2), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfHostTOS.setStatus('current')
nsVrOspfHostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1, 3), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfHostMetric.setStatus('current')
nsVrOspfHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfHostStatus.setStatus('current')
nsVrOspfHostAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1, 5), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfHostAreaID.setStatus('current')
nsVrOspfHostVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfHostVRID.setStatus('current')
nsVrOspfIfTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7), )
if mibBuilder.loadTexts: nsVrOspfIfTable.setStatus('current')
nsVrOspfIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfIpAddress"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAddressLessIf"))
if mibBuilder.loadTexts: nsVrOspfIfEntry.setStatus('current')
nsVrOspfIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfIpAddress.setStatus('current')
nsVrOspfAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAddressLessIf.setStatus('current')
nsVrOspfIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 3), AreaID().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfAreaId.setStatus('current')
nsVrOspfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3), ("pointToMultipoint", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfType.setStatus('current')
nsVrOspfIfAdminStat = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 5), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfAdminStat.setStatus('current')
nsVrOspfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 6), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfRtrPriority.setStatus('current')
nsVrOspfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 7), UpToMaxAge().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfTransitDelay.setStatus('current')
nsVrOspfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 8), UpToMaxAge().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfRetransInterval.setStatus('current')
nsVrOspfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 9), HelloRange().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfHelloInterval.setStatus('current')
nsVrOspfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 10), PositiveInteger().clone(40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfRtrDeadInterval.setStatus('current')
nsVrOspfIfPollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 11), PositiveInteger().clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfPollInterval.setStatus('current')
nsVrOspfIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfState.setStatus('current')
nsVrOspfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 13), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfDesignatedRouter.setStatus('current')
nsVrOspfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 14), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfBackupDesignatedRouter.setStatus('current')
nsVrOspfIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfEvents.setStatus('current')
nsVrOspfIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfAuthKey.setStatus('current')
nsVrOspfIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfStatus.setStatus('current')
nsVrOspfIfMulticastForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("blocked", 1), ("multicast", 2), ("unicast", 3))).clone('blocked')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfMulticastForwarding.setStatus('current')
nsVrOspfIfDemand = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfDemand.setStatus('current')
nsVrOspfIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfAuthType.setStatus('current')
nsVrOspfIfVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 7, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfVRID.setStatus('current')
nsVrOspfIfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8), )
if mibBuilder.loadTexts: nsVrOspfIfMetricTable.setStatus('current')
nsVrOspfIfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfMetricVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfMetricIpAddress"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfMetricAddressLessIf"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfMetricTOS"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfIfMetricVRID"))
if mibBuilder.loadTexts: nsVrOspfIfMetricEntry.setStatus('current')
nsVrOspfIfMetricIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfMetricIpAddress.setStatus('current')
nsVrOspfIfMetricAddressLessIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfMetricAddressLessIf.setStatus('current')
nsVrOspfIfMetricTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1, 3), TOSType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfMetricTOS.setStatus('current')
nsVrOspfIfMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1, 4), Metric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfMetricValue.setStatus('current')
nsVrOspfIfMetricStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfIfMetricStatus.setStatus('current')
nsVrOspfIfMetricVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfIfMetricVRID.setStatus('current')
nsVrOspfVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9), )
if mibBuilder.loadTexts: nsVrOspfVirtIfTable.setStatus('current')
nsVrOspfVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfVirtIfVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfVirtIfAreaId"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfVirtIfNeighbor"))
if mibBuilder.loadTexts: nsVrOspfVirtIfEntry.setStatus('current')
nsVrOspfVirtIfAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtIfAreaId.setStatus('current')
nsVrOspfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtIfNeighbor.setStatus('current')
nsVrOspfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 3), UpToMaxAge().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfTransitDelay.setStatus('current')
nsVrOspfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 4), UpToMaxAge().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfRetransInterval.setStatus('current')
nsVrOspfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 5), HelloRange().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfHelloInterval.setStatus('current')
nsVrOspfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 6), PositiveInteger().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfRtrDeadInterval.setStatus('current')
nsVrOspfVirtIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtIfState.setStatus('current')
nsVrOspfVirtIfEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtIfEvents.setStatus('current')
nsVrOspfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfAuthKey.setStatus('current')
nsVrOspfVirtIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfStatus.setStatus('current')
nsVrOspfVirtIfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfVirtIfAuthType.setStatus('current')
nsVrOspfVirtIfVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtIfVRID.setStatus('current')
nsVrOspfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10), )
if mibBuilder.loadTexts: nsVrOspfNbrTable.setStatus('current')
nsVrOspfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfNbrVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfNbrIpAddr"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfNbrAddressLessIndex"))
if mibBuilder.loadTexts: nsVrOspfNbrEntry.setStatus('current')
nsVrOspfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrIpAddr.setStatus('current')
nsVrOspfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrAddressLessIndex.setStatus('current')
nsVrOspfNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 3), RouterID().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrRtrId.setStatus('current')
nsVrOspfNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrOptions.setStatus('current')
nsVrOspfNbrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 5), DesignatedRouterPriority().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfNbrPriority.setStatus('current')
nsVrOspfNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrState.setStatus('current')
nsVrOspfNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrEvents.setStatus('current')
nsVrOspfNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrLsRetransQLen.setStatus('current')
nsVrOspfNbmaNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfNbmaNbrStatus.setStatus('current')
nsVrOspfNbmaNbrPermanence = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("permanent", 2))).clone('permanent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbmaNbrPermanence.setStatus('current')
nsVrOspfNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrHelloSuppressed.setStatus('current')
nsVrOspfNbrVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfNbrVRID.setStatus('current')
nsVrOspfVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11), )
if mibBuilder.loadTexts: nsVrOspfVirtNbrTable.setStatus('current')
nsVrOspfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfVirtNbrVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfVirtNbrArea"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfVirtNbrRtrId"))
if mibBuilder.loadTexts: nsVrOspfVirtNbrEntry.setStatus('current')
nsVrOspfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrArea.setStatus('current')
nsVrOspfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrRtrId.setStatus('current')
nsVrOspfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrIpAddr.setStatus('current')
nsVrOspfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrOptions.setStatus('current')
nsVrOspfVirtNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrState.setStatus('current')
nsVrOspfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrEvents.setStatus('current')
nsVrOspfVirtNbrLsRetransQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrLsRetransQLen.setStatus('current')
nsVrOspfVirtNbrHelloSuppressed = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrHelloSuppressed.setStatus('current')
nsVrOspfVirtNbrVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfVirtNbrVRID.setStatus('current')
nsVrOspfExtLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12), )
if mibBuilder.loadTexts: nsVrOspfExtLsdbTable.setStatus('current')
nsVrOspfExtLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfExtLsdbVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfExtLsdbType"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfExtLsdbLsid"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfExtLsdbRouterId"))
if mibBuilder.loadTexts: nsVrOspfExtLsdbEntry.setStatus('current')
nsVrOspfExtLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5))).clone(namedValues=NamedValues(("asExternalLink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbType.setStatus('current')
nsVrOspfExtLsdbLsid = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbLsid.setStatus('current')
nsVrOspfExtLsdbRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 3), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbRouterId.setStatus('current')
nsVrOspfExtLsdbSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbSequence.setStatus('current')
nsVrOspfExtLsdbAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbAge.setStatus('current')
nsVrOspfExtLsdbChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbChecksum.setStatus('current')
nsVrOspfExtLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(36, 36)).setFixedLength(36)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbAdvertisement.setStatus('current')
nsVrOspfExtLsdbVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfExtLsdbVRID.setStatus('current')
nsVrOspfAreaAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14), )
if mibBuilder.loadTexts: nsVrOspfAreaAggregateTable.setStatus('current')
nsVrOspfAreaAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1), ).setIndexNames((0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaAggregateVRID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaAggregateAreaID"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaAggregateLsdbType"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaAggregateNet"), (0, "NETSCREEN-VR-OSPF-MIB", "nsVrOspfAreaAggregateMask"))
if mibBuilder.loadTexts: nsVrOspfAreaAggregateEntry.setStatus('current')
nsVrOspfAreaAggregateAreaID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateAreaID.setStatus('current')
nsVrOspfAreaAggregateLsdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 7))).clone(namedValues=NamedValues(("summaryLink", 3), ("nssaExternalLink", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateLsdbType.setStatus('current')
nsVrOspfAreaAggregateNet = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateNet.setStatus('current')
nsVrOspfAreaAggregateMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateMask.setStatus('current')
nsVrOspfAreaAggregateStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateStatus.setStatus('current')
nsVrOspfAreaAggregateEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertiseMatching", 1), ("doNotAdvertiseMatching", 2))).clone('advertiseMatching')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateEffect.setStatus('current')
nsVrOspfAreaAggregateVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 5, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVrOspfAreaAggregateVRID.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-VR-OSPF-MIB", nsVrOspfLsdbAge=nsVrOspfLsdbAge, TOSType=TOSType, nsVrOspfIfMetricEntry=nsVrOspfIfMetricEntry, nsVrOspf=nsVrOspf, HelloRange=HelloRange, nsVrOspfLsdbEntry=nsVrOspfLsdbEntry, nsVrOspfLsdbType=nsVrOspfLsdbType, nsVrOspfLsdbChecksum=nsVrOspfLsdbChecksum, nsVrOspfExternLsaCksumSum=nsVrOspfExternLsaCksumSum, nsVrOspfIfPollInterval=nsVrOspfIfPollInterval, nsVrOspfVirtNbrArea=nsVrOspfVirtNbrArea, nsVrOspfIfTransitDelay=nsVrOspfIfTransitDelay, nsVrOspfIfAuthKey=nsVrOspfIfAuthKey, nsVrOspfIfBackupDesignatedRouter=nsVrOspfIfBackupDesignatedRouter, nsVrOspfIfMetricIpAddress=nsVrOspfIfMetricIpAddress, nsVrOspfVirtIfNeighbor=nsVrOspfVirtIfNeighbor, nsVrOspfIfRtrPriority=nsVrOspfIfRtrPriority, nsVrOspfImportAsExtern=nsVrOspfImportAsExtern, nsVrOspfIfRetransInterval=nsVrOspfIfRetransInterval, nsVrOspfVirtIfRetransInterval=nsVrOspfVirtIfRetransInterval, nsVrOspfAreaVRID=nsVrOspfAreaVRID, nsVrOspfAsBdrRtrCount=nsVrOspfAsBdrRtrCount, nsVrOspfIfStatus=nsVrOspfIfStatus, nsVrOspfIfHelloInterval=nsVrOspfIfHelloInterval, nsVrOspfVirtNbrTable=nsVrOspfVirtNbrTable, nsVrOspfAreaAggregateStatus=nsVrOspfAreaAggregateStatus, nsVrOspfAreaAggregateVRID=nsVrOspfAreaAggregateVRID, nsVrOspfStubMetric=nsVrOspfStubMetric, nsVrOspfHostAreaID=nsVrOspfHostAreaID, nsVrOspfAreaSummary=nsVrOspfAreaSummary, nsVrOspfHostIpAddress=nsVrOspfHostIpAddress, nsVrOspfNbrVRID=nsVrOspfNbrVRID, nsVrOspfStubAreaTable=nsVrOspfStubAreaTable, nsVrOspfExtLsdbAdvertisement=nsVrOspfExtLsdbAdvertisement, nsVrOspfExitOverflowInterval=nsVrOspfExitOverflowInterval, nsVrOspfHostEntry=nsVrOspfHostEntry, nsVrOspfIfMetricStatus=nsVrOspfIfMetricStatus, nsVrOspfAreaLsaCksumSum=nsVrOspfAreaLsaCksumSum, nsVrOspfVirtNbrLsRetransQLen=nsVrOspfVirtNbrLsRetransQLen, nsVrOspfAreaAggregateMask=nsVrOspfAreaAggregateMask, nsVrOspfAreaBdrRtrCount=nsVrOspfAreaBdrRtrCount, AreaID=AreaID, nsVrOspfNbrHelloSuppressed=nsVrOspfNbrHelloSuppressed, nsVrOspfLsdbSequence=nsVrOspfLsdbSequence, nsVrOspfAreaAggregateEffect=nsVrOspfAreaAggregateEffect, nsVrOspfVirtNbrRtrId=nsVrOspfVirtNbrRtrId, nsVrOspfVirtIfAuthType=nsVrOspfVirtIfAuthType, nsVrOspfExtLsdbAge=nsVrOspfExtLsdbAge, nsVrOspfVirtIfVRID=nsVrOspfVirtIfVRID, nsVrOspfNbrTable=nsVrOspfNbrTable, nsVrOspfAreaAggregateEntry=nsVrOspfAreaAggregateEntry, nsVrOspfHostVRID=nsVrOspfHostVRID, nsVrOspfRxNewLsas=nsVrOspfRxNewLsas, nsVrOspfNbrRtrId=nsVrOspfNbrRtrId, nsVrOspfIfEvents=nsVrOspfIfEvents, nsVrOspfRouterId=nsVrOspfRouterId, nsVrOspfIfState=nsVrOspfIfState, nsVrOspfIfMetricAddressLessIf=nsVrOspfIfMetricAddressLessIf, nsVrOspfNbmaNbrPermanence=nsVrOspfNbmaNbrPermanence, nsVrOspfLsdbVRID=nsVrOspfLsdbVRID, nsVrOspfAreaId=nsVrOspfAreaId, RouterID=RouterID, nsVrOspfVirtIfTransitDelay=nsVrOspfVirtIfTransitDelay, nsVrOspfAreaAggregateLsdbType=nsVrOspfAreaAggregateLsdbType, nsVrOspfAreaAggregateTable=nsVrOspfAreaAggregateTable, nsVrOspfExtLsdbVRID=nsVrOspfExtLsdbVRID, nsVrOspfVirtIfTable=nsVrOspfVirtIfTable, nsVrOspfVirtNbrOptions=nsVrOspfVirtNbrOptions, nsVrOspfLsdbTable=nsVrOspfLsdbTable, nsVrOspfAreaStatus=nsVrOspfAreaStatus, nsVrOspfIfTable=nsVrOspfIfTable, nsVrOspfIfVRID=nsVrOspfIfVRID, nsVrOspfLsdbAdvertisement=nsVrOspfLsdbAdvertisement, nsVrOspfAreaLsaCount=nsVrOspfAreaLsaCount, nsVrOspfIfAreaId=nsVrOspfIfAreaId, nsVrOspfIfMetricTable=nsVrOspfIfMetricTable, nsVrOspfGeneralEntry=nsVrOspfGeneralEntry, nsVrOspfExtLsdbEntry=nsVrOspfExtLsdbEntry, nsVrOspfLsdbRouterId=nsVrOspfLsdbRouterId, nsVrOspfExtLsdbSequence=nsVrOspfExtLsdbSequence, nsVrOspfAreaAggregateAreaID=nsVrOspfAreaAggregateAreaID, nsVrOspfIfMetricTOS=nsVrOspfIfMetricTOS, nsVrOspfVirtNbrEntry=nsVrOspfVirtNbrEntry, nsVrOspfNbrPriority=nsVrOspfNbrPriority, nsVrOspfAdminStat=nsVrOspfAdminStat, nsVrOspfExtLsdbChecksum=nsVrOspfExtLsdbChecksum, nsVrOspfVirtNbrIpAddr=nsVrOspfVirtNbrIpAddr, nsVrOspfVirtIfState=nsVrOspfVirtIfState, nsVrOspfExtLsdbLimit=nsVrOspfExtLsdbLimit, nsVrOspfASBdrRtrStatus=nsVrOspfASBdrRtrStatus, nsVrOspfExtLsdbTable=nsVrOspfExtLsdbTable, nsVrOspfIfEntry=nsVrOspfIfEntry, nsVrOspfVirtIfAuthKey=nsVrOspfVirtIfAuthKey, nsVrOspfOriginateNewLsas=nsVrOspfOriginateNewLsas, nsVrOspfHostMetric=nsVrOspfHostMetric, nsVrOspfIfType=nsVrOspfIfType, nsVrOspfIfRtrDeadInterval=nsVrOspfIfRtrDeadInterval, nsVrOspfNbrEvents=nsVrOspfNbrEvents, PYSNMP_MODULE_ID=nsVrOspf, nsVrOspfVirtNbrState=nsVrOspfVirtNbrState, nsVrOspfGeneralVRID=nsVrOspfGeneralVRID, nsVrOspfGeneralTable=nsVrOspfGeneralTable, nsVrOspfExtLsdbType=nsVrOspfExtLsdbType, nsVrOspfLsdbLsid=nsVrOspfLsdbLsid, nsVrOspfAreaEntry=nsVrOspfAreaEntry, nsVrOspfStubVRID=nsVrOspfStubVRID, nsVrOspfAddressLessIf=nsVrOspfAddressLessIf, nsVrOspfHostStatus=nsVrOspfHostStatus, nsVrOspfNbrEntry=nsVrOspfNbrEntry, nsVrOspfIfAuthType=nsVrOspfIfAuthType, nsVrOspfExternLsaCount=nsVrOspfExternLsaCount, UpToMaxAge=UpToMaxAge, nsVrOspfNbrAddressLessIndex=nsVrOspfNbrAddressLessIndex, nsVrOspfNbrState=nsVrOspfNbrState, nsVrOspfIfDemand=nsVrOspfIfDemand, BigMetric=BigMetric, nsVrOspfVirtIfRtrDeadInterval=nsVrOspfVirtIfRtrDeadInterval, Metric=Metric, nsVrOspfNbrIpAddr=nsVrOspfNbrIpAddr, nsVrOspfVirtIfEntry=nsVrOspfVirtIfEntry, nsVrOspfExtLsdbLsid=nsVrOspfExtLsdbLsid, nsVrOspfIfIpAddress=nsVrOspfIfIpAddress, nsVrOspfDemandExtensions=nsVrOspfDemandExtensions, DesignatedRouterPriority=DesignatedRouterPriority, nsVrOspfVirtIfHelloInterval=nsVrOspfVirtIfHelloInterval, Status=Status, nsVrOspfVersionNumber=nsVrOspfVersionNumber, PositiveInteger=PositiveInteger, nsVrOspfIfAdminStat=nsVrOspfIfAdminStat, nsVrOspfStubAreaEntry=nsVrOspfStubAreaEntry, nsVrOspfMulticastExtensions=nsVrOspfMulticastExtensions, nsVrOspfVirtIfAreaId=nsVrOspfVirtIfAreaId, nsVrOspfAreaAggregateNet=nsVrOspfAreaAggregateNet, nsVrOspfStubMetricType=nsVrOspfStubMetricType, nsVrOspfExtLsdbRouterId=nsVrOspfExtLsdbRouterId, nsVrOspfHostTOS=nsVrOspfHostTOS, nsVrOspfIfMulticastForwarding=nsVrOspfIfMulticastForwarding, nsVrOspfIfDesignatedRouter=nsVrOspfIfDesignatedRouter, nsVrOspfVirtNbrVRID=nsVrOspfVirtNbrVRID, nsVrOspfSpfRuns=nsVrOspfSpfRuns, nsVrOspfStubTOS=nsVrOspfStubTOS, nsVrOspfIfMetricVRID=nsVrOspfIfMetricVRID, nsVrOspfVirtNbrEvents=nsVrOspfVirtNbrEvents, nsVrOspfHostTable=nsVrOspfHostTable, nsVrOspfAreaTable=nsVrOspfAreaTable, nsVrOspfNbrOptions=nsVrOspfNbrOptions, nsVrOspfStubAreaId=nsVrOspfStubAreaId, InterfaceIndex=InterfaceIndex, nsVrOspfStubStatus=nsVrOspfStubStatus, nsVrOspfVirtNbrHelloSuppressed=nsVrOspfVirtNbrHelloSuppressed, nsVrOspfNbrLsRetransQLen=nsVrOspfNbrLsRetransQLen, nsVrOspfAreaBdrRtrStatus=nsVrOspfAreaBdrRtrStatus, nsVrOspfLsdbAreaId=nsVrOspfLsdbAreaId, nsVrOspfNbmaNbrStatus=nsVrOspfNbmaNbrStatus, nsVrOspfVirtIfStatus=nsVrOspfVirtIfStatus, nsVrOspfVirtIfEvents=nsVrOspfVirtIfEvents, nsVrOspfTOSSupport=nsVrOspfTOSSupport, nsVrOspfIfMetricValue=nsVrOspfIfMetricValue)
