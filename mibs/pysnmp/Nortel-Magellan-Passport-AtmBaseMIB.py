#
# PySNMP MIB module Nortel-Magellan-Passport-AtmBaseMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-AtmBaseMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
lpEngIndex, lpIndex, lp, lpEng = mibBuilder.importSymbols("Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex", "lpIndex", "lp", "lpEng")
DisplayString, RowStatus, Integer32, Unsigned32, StorageType, Gauge32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "RowStatus", "Integer32", "Unsigned32", "StorageType", "Gauge32")
FixedPoint1, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "FixedPoint1", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Integer32, Bits, iso, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, ModuleIdentity, MibIdentifier, Counter64, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "Bits", "iso", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Counter64", "Gauge32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
atmBaseMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63))
lpArc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19))
lpArcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 1), )
if mibBuilder.loadTexts: lpArcRowStatusTable.setStatus('obsolete')
lpArcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpArcIndex"))
if mibBuilder.loadTexts: lpArcRowStatusEntry.setStatus('obsolete')
lpArcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcRowStatus.setStatus('obsolete')
lpArcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpArcComponentName.setStatus('obsolete')
lpArcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpArcStorageType.setStatus('obsolete')
lpArcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpArcIndex.setStatus('obsolete')
lpArcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100), )
if mibBuilder.loadTexts: lpArcProvTable.setStatus('obsolete')
lpArcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpArcIndex"))
if mibBuilder.loadTexts: lpArcProvEntry.setStatus('obsolete')
lpArcTotalConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752)).clone(3072)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcTotalConnectionPoolCapacity.setStatus('obsolete')
lpArcMulticastBranchesCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcMulticastBranchesCapacity.setStatus('obsolete')
lpArcTxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcTxFrameMemoryAllocation.setStatus('obsolete')
lpArcRxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcRxFrameMemoryAllocation.setStatus('obsolete')
lpArcPerVcQueueInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcPerVcQueueInterfaces.setStatus('obsolete')
lpArcShapingStackAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcShapingStackAllocation.setStatus('obsolete')
lpArcShapingScalingFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 40), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(14, 14), ValueRangeConstraint(20, 20), ValueRangeConstraint(28, 28), ValueRangeConstraint(40, 40), ValueRangeConstraint(56, 56), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcShapingScalingFactor.setStatus('obsolete')
lpArcCdvAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcCdvAttenuation.setStatus('obsolete')
lpArcPortAggregation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcPortAggregation.setStatus('obsolete')
lpArcSubConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcSubConnectionPoolCapacity.setStatus('obsolete')
lpArcLnnConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 100, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcLnnConnectionPoolCapacity.setStatus('obsolete')
lpArcConnCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 291), )
if mibBuilder.loadTexts: lpArcConnCapTable.setStatus('obsolete')
lpArcConnCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 291, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpArcConnCapIndex"))
if mibBuilder.loadTexts: lpArcConnCapEntry.setStatus('obsolete')
lpArcConnCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 291, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: lpArcConnCapIndex.setStatus('obsolete')
lpArcConnCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 19, 291, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(512, 4096), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpArcConnCapValue.setStatus('obsolete')
lpAru = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20))
lpAruRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 1), )
if mibBuilder.loadTexts: lpAruRowStatusTable.setStatus('obsolete')
lpAruRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"))
if mibBuilder.loadTexts: lpAruRowStatusEntry.setStatus('obsolete')
lpAruRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRowStatus.setStatus('obsolete')
lpAruComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruComponentName.setStatus('obsolete')
lpAruStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruStorageType.setStatus('obsolete')
lpAruIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpAruIndex.setStatus('obsolete')
lpAruOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100), )
if mibBuilder.loadTexts: lpAruOperTable.setStatus('obsolete')
lpAruOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"))
if mibBuilder.loadTexts: lpAruOperEntry.setStatus('obsolete')
lpAruTotalConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTotalConnectionPoolUsage.setStatus('obsolete')
lpAruMulticastBranchesUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10752))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruMulticastBranchesUsage.setStatus('obsolete')
lpAruTxCellBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxCellBlockCapacity.setStatus('obsolete')
lpAruTxCellBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 20), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxCellBlockUsage.setStatus('obsolete')
lpAruTxCellFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxCellFreeListSize.setStatus('obsolete')
lpAruTxCellFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxCellFreeListCongestionState.setStatus('obsolete')
lpAruTxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxFrameMemoryAllocation.setStatus('obsolete')
lpAruTxFrameBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxFrameBlockCapacity.setStatus('obsolete')
lpAruTxFrameBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 50), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxFrameBlockUsage.setStatus('obsolete')
lpAruTxFrameFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 53), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxFrameFreeListSize.setStatus('obsolete')
lpAruTxFrameFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxFrameFreeListCongestionState.setStatus('obsolete')
lpAruRxCellBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 60), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxCellBlockCapacity.setStatus('obsolete')
lpAruRxCellBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 70), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxCellBlockUsage.setStatus('obsolete')
lpAruRxCellFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 73), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxCellFreeListSize.setStatus('obsolete')
lpAruRxCellFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxCellFreeListCongestionState.setStatus('obsolete')
lpAruRxFrameMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 80), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxFrameMemoryAllocation.setStatus('obsolete')
lpAruRxFrameBlockCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 90), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxFrameBlockCapacity.setStatus('obsolete')
lpAruRxFrameBlockUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 100), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxFrameBlockUsage.setStatus('obsolete')
lpAruRxFrameFreeListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 103), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxFrameFreeListSize.setStatus('obsolete')
lpAruRxFrameFreeListCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 106), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxFrameFreeListCongestionState.setStatus('obsolete')
lpAruSubConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 107), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruSubConnectionPoolAvailable.setStatus('obsolete')
lpAruSubConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 108), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruSubConnectionPoolUsage.setStatus('obsolete')
lpAruLnnConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 109), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruLnnConnectionPoolAvailable.setStatus('obsolete')
lpAruLnnConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 100, 1, 110), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruLnnConnectionPoolUsage.setStatus('obsolete')
lpAruConnUsageTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 292), )
if mibBuilder.loadTexts: lpAruConnUsageTable.setStatus('obsolete')
lpAruConnUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 292, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruConnUsageIndex"))
if mibBuilder.loadTexts: lpAruConnUsageEntry.setStatus('obsolete')
lpAruConnUsageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 292, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: lpAruConnUsageIndex.setStatus('obsolete')
lpAruConnUsageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 292, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruConnUsageValue.setStatus('obsolete')
lpAruTxCflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 353), )
if mibBuilder.loadTexts: lpAruTxCflThreshTable.setStatus('obsolete')
lpAruTxCflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 353, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruTxCflThreshIndex"))
if mibBuilder.loadTexts: lpAruTxCflThreshEntry.setStatus('obsolete')
lpAruTxCflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 353, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpAruTxCflThreshIndex.setStatus('obsolete')
lpAruTxCflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 353, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxCflThreshValue.setStatus('obsolete')
lpAruTxFflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 354), )
if mibBuilder.loadTexts: lpAruTxFflThreshTable.setStatus('obsolete')
lpAruTxFflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 354, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruTxFflThreshIndex"))
if mibBuilder.loadTexts: lpAruTxFflThreshEntry.setStatus('obsolete')
lpAruTxFflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 354, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpAruTxFflThreshIndex.setStatus('obsolete')
lpAruTxFflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 354, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruTxFflThreshValue.setStatus('obsolete')
lpAruRxCflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 355), )
if mibBuilder.loadTexts: lpAruRxCflThreshTable.setStatus('obsolete')
lpAruRxCflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 355, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruRxCflThreshIndex"))
if mibBuilder.loadTexts: lpAruRxCflThreshEntry.setStatus('obsolete')
lpAruRxCflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 355, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpAruRxCflThreshIndex.setStatus('obsolete')
lpAruRxCflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 355, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxCflThreshValue.setStatus('obsolete')
lpAruRxFflThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 356), )
if mibBuilder.loadTexts: lpAruRxFflThreshTable.setStatus('obsolete')
lpAruRxFflThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 356, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpAruRxFflThreshIndex"))
if mibBuilder.loadTexts: lpAruRxFflThreshEntry.setStatus('obsolete')
lpAruRxFflThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 356, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpAruRxFflThreshIndex.setStatus('obsolete')
lpAruRxFflThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 20, 356, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpAruRxFflThreshValue.setStatus('obsolete')
lpEngArc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5))
lpEngArcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 1), )
if mibBuilder.loadTexts: lpEngArcRowStatusTable.setStatus('mandatory')
lpEngArcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"))
if mibBuilder.loadTexts: lpEngArcRowStatusEntry.setStatus('mandatory')
lpEngArcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcRowStatus.setStatus('mandatory')
lpEngArcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcComponentName.setStatus('mandatory')
lpEngArcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcStorageType.setStatus('mandatory')
lpEngArcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngArcIndex.setStatus('mandatory')
lpEngArcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10), )
if mibBuilder.loadTexts: lpEngArcOperTable.setStatus('mandatory')
lpEngArcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"))
if mibBuilder.loadTexts: lpEngArcOperEntry.setStatus('mandatory')
lpEngArcTotalConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTotalConnectionPoolAvailable.setStatus('mandatory')
lpEngArcTotalConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTotalConnectionPoolUsage.setStatus('mandatory')
lpEngArcMulticastBranchesAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcMulticastBranchesAvailable.setStatus('mandatory')
lpEngArcMulticastBranchesUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcMulticastBranchesUsage.setStatus('mandatory')
lpEngArcTxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellMemoryAllocation.setStatus('mandatory')
lpEngArcTxCellMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellMemoryAvailable.setStatus('obsolete')
lpEngArcTxCellMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellMemoryMinAvailable.setStatus('obsolete')
lpEngArcTxCellMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellMemoryCongestionState.setStatus('mandatory')
lpEngArcRxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellMemoryAllocation.setStatus('mandatory')
lpEngArcRxCellMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellMemoryAvailable.setStatus('obsolete')
lpEngArcRxCellMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellMemoryMinAvailable.setStatus('obsolete')
lpEngArcRxCellMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellMemoryCongestionState.setStatus('mandatory')
lpEngArcTxCellMemoryMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellMemoryMaxUsage.setStatus('mandatory')
lpEngArcTxCellMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellMemoryUsage.setStatus('mandatory')
lpEngArcRxCellMemoryMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 15), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellMemoryMaxUsage.setStatus('mandatory')
lpEngArcRxCellMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 10, 1, 16), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellMemoryUsage.setStatus('mandatory')
lpEngArcTxCellThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 440), )
if mibBuilder.loadTexts: lpEngArcTxCellThreshTable.setStatus('mandatory')
lpEngArcTxCellThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 440, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcTxCellThreshIndex"))
if mibBuilder.loadTexts: lpEngArcTxCellThreshEntry.setStatus('mandatory')
lpEngArcTxCellThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 440, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpEngArcTxCellThreshIndex.setStatus('mandatory')
lpEngArcTxCellThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 440, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcTxCellThreshValue.setStatus('mandatory')
lpEngArcRxCellThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 444), )
if mibBuilder.loadTexts: lpEngArcRxCellThreshTable.setStatus('mandatory')
lpEngArcRxCellThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 444, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcRxCellThreshIndex"))
if mibBuilder.loadTexts: lpEngArcRxCellThreshEntry.setStatus('mandatory')
lpEngArcRxCellThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 444, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpEngArcRxCellThreshIndex.setStatus('mandatory')
lpEngArcRxCellThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 444, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcRxCellThreshValue.setStatus('mandatory')
lpEngArcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2))
lpEngArcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 1), )
if mibBuilder.loadTexts: lpEngArcOvRowStatusTable.setStatus('mandatory')
lpEngArcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcOvIndex"))
if mibBuilder.loadTexts: lpEngArcOvRowStatusEntry.setStatus('mandatory')
lpEngArcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcOvRowStatus.setStatus('mandatory')
lpEngArcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcOvComponentName.setStatus('mandatory')
lpEngArcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcOvStorageType.setStatus('mandatory')
lpEngArcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngArcOvIndex.setStatus('mandatory')
lpEngArcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 10), )
if mibBuilder.loadTexts: lpEngArcOvProvTable.setStatus('mandatory')
lpEngArcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcOvIndex"))
if mibBuilder.loadTexts: lpEngArcOvProvEntry.setStatus('mandatory')
lpEngArcOvTotalConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768)).clone(3072)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcOvTotalConnectionPoolCapacity.setStatus('mandatory')
lpEngArcOvMulticastBranchesCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcOvMulticastBranchesCapacity.setStatus('mandatory')
lpEngArcOvTxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcOvTxCellMemoryAllocation.setStatus('mandatory')
lpEngArcOvRxCellMemoryAllocation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcOvRxCellMemoryAllocation.setStatus('mandatory')
lpEngArcCqc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3))
lpEngArcCqcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 1), )
if mibBuilder.loadTexts: lpEngArcCqcRowStatusTable.setStatus('mandatory')
lpEngArcCqcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcIndex"))
if mibBuilder.loadTexts: lpEngArcCqcRowStatusEntry.setStatus('mandatory')
lpEngArcCqcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcCqcRowStatus.setStatus('mandatory')
lpEngArcCqcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcCqcComponentName.setStatus('mandatory')
lpEngArcCqcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcCqcStorageType.setStatus('mandatory')
lpEngArcCqcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngArcCqcIndex.setStatus('mandatory')
lpEngArcCqcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 10), )
if mibBuilder.loadTexts: lpEngArcCqcOperTable.setStatus('mandatory')
lpEngArcCqcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcIndex"))
if mibBuilder.loadTexts: lpEngArcCqcOperEntry.setStatus('mandatory')
lpEngArcCqcCdvReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("cardDependent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcCqcCdvReduction.setStatus('mandatory')
lpEngArcCqcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2))
lpEngArcCqcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 1), )
if mibBuilder.loadTexts: lpEngArcCqcOvRowStatusTable.setStatus('mandatory')
lpEngArcCqcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcOvIndex"))
if mibBuilder.loadTexts: lpEngArcCqcOvRowStatusEntry.setStatus('mandatory')
lpEngArcCqcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcCqcOvRowStatus.setStatus('mandatory')
lpEngArcCqcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcCqcOvComponentName.setStatus('mandatory')
lpEngArcCqcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcCqcOvStorageType.setStatus('mandatory')
lpEngArcCqcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngArcCqcOvIndex.setStatus('mandatory')
lpEngArcCqcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 10), )
if mibBuilder.loadTexts: lpEngArcCqcOvProvTable.setStatus('mandatory')
lpEngArcCqcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcOvIndex"))
if mibBuilder.loadTexts: lpEngArcCqcOvProvEntry.setStatus('mandatory')
lpEngArcCqcOvPerVcQueueInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcCqcOvPerVcQueueInterfaces.setStatus('mandatory')
lpEngArcCqcOvShapingScalingFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 10, 1, 2), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 10), ValueRangeConstraint(14, 14), ValueRangeConstraint(20, 20), ValueRangeConstraint(28, 28), ValueRangeConstraint(40, 40), ValueRangeConstraint(56, 56), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcCqcOvShapingScalingFactor.setStatus('mandatory')
lpEngArcCqcOvCdvReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("cardDependent", 2))).clone('cardDependent')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcCqcOvCdvReduction.setStatus('mandatory')
lpEngArcCqcOvPortCongestionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aggregate", 0), ("individualQueue", 1))).clone('aggregate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcCqcOvPortCongestionPolicy.setStatus('mandatory')
lpEngArcCqcOvConnCapTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 450), )
if mibBuilder.loadTexts: lpEngArcCqcOvConnCapTable.setStatus('mandatory')
lpEngArcCqcOvConnCapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 450, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcOvIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcCqcOvConnCapIndex"))
if mibBuilder.loadTexts: lpEngArcCqcOvConnCapEntry.setStatus('mandatory')
lpEngArcCqcOvConnCapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 450, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: lpEngArcCqcOvConnCapIndex.setStatus('mandatory')
lpEngArcCqcOvConnCapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 3, 2, 450, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(512, 4096), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcCqcOvConnCapValue.setStatus('mandatory')
lpEngArcAqm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4))
lpEngArcAqmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 1), )
if mibBuilder.loadTexts: lpEngArcAqmRowStatusTable.setStatus('mandatory')
lpEngArcAqmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmIndex"))
if mibBuilder.loadTexts: lpEngArcAqmRowStatusEntry.setStatus('mandatory')
lpEngArcAqmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmRowStatus.setStatus('mandatory')
lpEngArcAqmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmComponentName.setStatus('mandatory')
lpEngArcAqmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmStorageType.setStatus('mandatory')
lpEngArcAqmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: lpEngArcAqmIndex.setStatus('mandatory')
lpEngArcAqmOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10), )
if mibBuilder.loadTexts: lpEngArcAqmOperTable.setStatus('mandatory')
lpEngArcAqmOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmIndex"))
if mibBuilder.loadTexts: lpEngArcAqmOperEntry.setStatus('mandatory')
lpEngArcAqmConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmConnectionPoolAvailable.setStatus('mandatory')
lpEngArcAqmConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmConnectionPoolUsage.setStatus('mandatory')
lpEngArcAqmTxCellMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmTxCellMemoryAvailable.setStatus('obsolete')
lpEngArcAqmTxCellMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmTxCellMemoryMinAvailable.setStatus('obsolete')
lpEngArcAqmTxCellMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmTxCellMemoryCongestionState.setStatus('mandatory')
lpEngArcAqmTxCellMemoryMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmTxCellMemoryMaxUsage.setStatus('mandatory')
lpEngArcAqmTxCellMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmTxCellMemoryUsage.setStatus('mandatory')
lpEngArcAqmMaxVirtualLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(6, 6), ValueRangeConstraint(14, 14), ValueRangeConstraint(29, 29), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmMaxVirtualLinks.setStatus('mandatory')
lpEngArcAqmVirtualLinkUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmVirtualLinkUsage.setStatus('mandatory')
lpEngArcAqmVirtualLinkGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmVirtualLinkGranularity.setStatus('mandatory')
lpEngArcAqmTxCellThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 448), )
if mibBuilder.loadTexts: lpEngArcAqmTxCellThreshTable.setStatus('mandatory')
lpEngArcAqmTxCellThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 448, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmTxCellThreshIndex"))
if mibBuilder.loadTexts: lpEngArcAqmTxCellThreshEntry.setStatus('mandatory')
lpEngArcAqmTxCellThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 448, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpEngArcAqmTxCellThreshIndex.setStatus('mandatory')
lpEngArcAqmTxCellThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 448, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 163839))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmTxCellThreshValue.setStatus('mandatory')
lpEngArcAqmOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2))
lpEngArcAqmOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 1), )
if mibBuilder.loadTexts: lpEngArcAqmOvRowStatusTable.setStatus('mandatory')
lpEngArcAqmOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmOvIndex"))
if mibBuilder.loadTexts: lpEngArcAqmOvRowStatusEntry.setStatus('mandatory')
lpEngArcAqmOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmOvRowStatus.setStatus('mandatory')
lpEngArcAqmOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmOvComponentName.setStatus('mandatory')
lpEngArcAqmOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngArcAqmOvStorageType.setStatus('mandatory')
lpEngArcAqmOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngArcAqmOvIndex.setStatus('mandatory')
lpEngArcAqmOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10), )
if mibBuilder.loadTexts: lpEngArcAqmOvProvTable.setStatus('mandatory')
lpEngArcAqmOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngArcAqmOvIndex"))
if mibBuilder.loadTexts: lpEngArcAqmOvProvEntry.setStatus('mandatory')
lpEngArcAqmOvConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 16000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmOvConnectionPoolCapacity.setStatus('mandatory')
lpEngArcAqmOvHighPriorityEpdOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 1024)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmOvHighPriorityEpdOffset.setStatus('mandatory')
lpEngArcAqmOvLowPriorityEpdOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 1024)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmOvLowPriorityEpdOffset.setStatus('mandatory')
lpEngArcAqmOvPortCongestionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("aggregate", 0), ("individualQueue", 1))).clone('individualQueue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmOvPortCongestionPolicy.setStatus('mandatory')
lpEngArcAqmOvMaxVirtualLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(6, 6), ValueRangeConstraint(14, 14), ValueRangeConstraint(29, 29), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmOvMaxVirtualLinks.setStatus('mandatory')
lpEngArcAqmOvVirtualLinkGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 5, 4, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("minimum", 0), ("ds1", 1), ("e1", 2), ("jt2", 3))).clone('minimum')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngArcAqmOvVirtualLinkGranularity.setStatus('mandatory')
lpEngFcrc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6))
lpEngFcrcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 1), )
if mibBuilder.loadTexts: lpEngFcrcRowStatusTable.setStatus('mandatory')
lpEngFcrcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"))
if mibBuilder.loadTexts: lpEngFcrcRowStatusEntry.setStatus('mandatory')
lpEngFcrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFcrcRowStatus.setStatus('mandatory')
lpEngFcrcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcComponentName.setStatus('mandatory')
lpEngFcrcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcStorageType.setStatus('mandatory')
lpEngFcrcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngFcrcIndex.setStatus('mandatory')
lpEngFcrcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10), )
if mibBuilder.loadTexts: lpEngFcrcOperTable.setStatus('mandatory')
lpEngFcrcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"))
if mibBuilder.loadTexts: lpEngFcrcOperEntry.setStatus('mandatory')
lpEngFcrcSubConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 49152))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcSubConnectionPoolAvailable.setStatus('mandatory')
lpEngFcrcSubConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 49152))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcSubConnectionPoolUsage.setStatus('mandatory')
lpEngFcrcLnnConnectionPoolAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcLnnConnectionPoolAvailable.setStatus('mandatory')
lpEngFcrcLnnConnectionPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcLnnConnectionPoolUsage.setStatus('mandatory')
lpEngFcrcTxFrameMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcTxFrameMemoryAvailable.setStatus('obsolete')
lpEngFcrcTxFrameMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcTxFrameMemoryMinAvailable.setStatus('obsolete')
lpEngFcrcTxFrameMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcTxFrameMemoryCongestionState.setStatus('mandatory')
lpEngFcrcRxFrameMemoryAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcRxFrameMemoryAvailable.setStatus('obsolete')
lpEngFcrcRxFrameMemoryMinAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcRxFrameMemoryMinAvailable.setStatus('obsolete')
lpEngFcrcRxFrameMemoryCongestionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcRxFrameMemoryCongestionState.setStatus('mandatory')
lpEngFcrcTxFrameMemoryMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcTxFrameMemoryMaxUsage.setStatus('mandatory')
lpEngFcrcTxFrameMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcTxFrameMemoryUsage.setStatus('mandatory')
lpEngFcrcRxFrameMemoryMaxUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 13), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcRxFrameMemoryMaxUsage.setStatus('mandatory')
lpEngFcrcRxFrameMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 10, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcRxFrameMemoryUsage.setStatus('mandatory')
lpEngFcrcTxFrThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 442), )
if mibBuilder.loadTexts: lpEngFcrcTxFrThreshTable.setStatus('mandatory')
lpEngFcrcTxFrThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 442, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcTxFrThreshIndex"))
if mibBuilder.loadTexts: lpEngFcrcTxFrThreshEntry.setStatus('mandatory')
lpEngFcrcTxFrThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 442, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpEngFcrcTxFrThreshIndex.setStatus('mandatory')
lpEngFcrcTxFrThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 442, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcTxFrThreshValue.setStatus('mandatory')
lpEngFcrcRxFrThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 446), )
if mibBuilder.loadTexts: lpEngFcrcRxFrThreshTable.setStatus('mandatory')
lpEngFcrcRxFrThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 446, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcRxFrThreshIndex"))
if mibBuilder.loadTexts: lpEngFcrcRxFrThreshEntry.setStatus('mandatory')
lpEngFcrcRxFrThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 446, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: lpEngFcrcRxFrThreshIndex.setStatus('mandatory')
lpEngFcrcRxFrThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 446, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcRxFrThreshValue.setStatus('mandatory')
lpEngFcrcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2))
lpEngFcrcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 1), )
if mibBuilder.loadTexts: lpEngFcrcOvRowStatusTable.setStatus('mandatory')
lpEngFcrcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcOvIndex"))
if mibBuilder.loadTexts: lpEngFcrcOvRowStatusEntry.setStatus('mandatory')
lpEngFcrcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFcrcOvRowStatus.setStatus('mandatory')
lpEngFcrcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcOvComponentName.setStatus('mandatory')
lpEngFcrcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcOvStorageType.setStatus('mandatory')
lpEngFcrcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngFcrcOvIndex.setStatus('mandatory')
lpEngFcrcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 10), )
if mibBuilder.loadTexts: lpEngFcrcOvProvTable.setStatus('mandatory')
lpEngFcrcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcOvIndex"))
if mibBuilder.loadTexts: lpEngFcrcOvProvEntry.setStatus('mandatory')
lpEngFcrcOvSubConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 49152), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFcrcOvSubConnectionPoolCapacity.setStatus('mandatory')
lpEngFcrcOvLnnConnectionPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2048), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFcrcOvLnnConnectionPoolCapacity.setStatus('mandatory')
lpEngFcrcPqc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3))
lpEngFcrcPqcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 1), )
if mibBuilder.loadTexts: lpEngFcrcPqcRowStatusTable.setStatus('mandatory')
lpEngFcrcPqcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcPqcIndex"))
if mibBuilder.loadTexts: lpEngFcrcPqcRowStatusEntry.setStatus('mandatory')
lpEngFcrcPqcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFcrcPqcRowStatus.setStatus('mandatory')
lpEngFcrcPqcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcComponentName.setStatus('mandatory')
lpEngFcrcPqcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcStorageType.setStatus('mandatory')
lpEngFcrcPqcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngFcrcPqcIndex.setStatus('mandatory')
lpEngFcrcPqcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 10), )
if mibBuilder.loadTexts: lpEngFcrcPqcOperTable.setStatus('mandatory')
lpEngFcrcPqcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcPqcIndex"))
if mibBuilder.loadTexts: lpEngFcrcPqcOperEntry.setStatus('mandatory')
lpEngFcrcPqcIpRoutesPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 10, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcIpRoutesPoolSize.setStatus('mandatory')
lpEngFcrcPqcIpRoutesPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 10, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcIpRoutesPoolUsage.setStatus('mandatory')
lpEngFcrcPqcIpRoutesPoolAvailableEst = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 10, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcIpRoutesPoolAvailableEst.setStatus('mandatory')
lpEngFcrcPqcOv = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2))
lpEngFcrcPqcOvRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 1), )
if mibBuilder.loadTexts: lpEngFcrcPqcOvRowStatusTable.setStatus('mandatory')
lpEngFcrcPqcOvRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcPqcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcPqcOvIndex"))
if mibBuilder.loadTexts: lpEngFcrcPqcOvRowStatusEntry.setStatus('mandatory')
lpEngFcrcPqcOvRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcOvRowStatus.setStatus('mandatory')
lpEngFcrcPqcOvComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcOvComponentName.setStatus('mandatory')
lpEngFcrcPqcOvStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngFcrcPqcOvStorageType.setStatus('mandatory')
lpEngFcrcPqcOvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngFcrcPqcOvIndex.setStatus('mandatory')
lpEngFcrcPqcOvProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 10), )
if mibBuilder.loadTexts: lpEngFcrcPqcOvProvTable.setStatus('mandatory')
lpEngFcrcPqcOvProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcPqcIndex"), (0, "Nortel-Magellan-Passport-AtmBaseMIB", "lpEngFcrcPqcOvIndex"))
if mibBuilder.loadTexts: lpEngFcrcPqcOvProvEntry.setStatus('mandatory')
lpEngFcrcPqcOvIpRoutesPoolCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 6, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngFcrcPqcOvIpRoutesPoolCapacity.setStatus('mandatory')
atmBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 1))
atmBaseGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 1, 5))
atmBaseGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 1, 5, 1))
atmBaseGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 1, 5, 1, 2))
atmBaseCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 3))
atmBaseCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 3, 5))
atmBaseCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 3, 5, 1))
atmBaseCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 63, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-AtmBaseMIB", lpAruMulticastBranchesUsage=lpAruMulticastBranchesUsage, lpEngArcOvTotalConnectionPoolCapacity=lpEngArcOvTotalConnectionPoolCapacity, lpAruTxFflThreshTable=lpAruTxFflThreshTable, lpEngArcIndex=lpEngArcIndex, lpEngArcOperEntry=lpEngArcOperEntry, lpEngFcrcPqcOvProvTable=lpEngFcrcPqcOvProvTable, lpAruRxFflThreshIndex=lpAruRxFflThreshIndex, lpEngArcOvRxCellMemoryAllocation=lpEngArcOvRxCellMemoryAllocation, lpEngFcrcPqcOvProvEntry=lpEngFcrcPqcOvProvEntry, atmBaseGroupBE00=atmBaseGroupBE00, lpArcProvEntry=lpArcProvEntry, lpEngArcTxCellThreshTable=lpEngArcTxCellThreshTable, lpArc=lpArc, lpEngArcAqmOperEntry=lpEngArcAqmOperEntry, lpEngArcCqcOvIndex=lpEngArcCqcOvIndex, lpEngFcrcPqcRowStatus=lpEngFcrcPqcRowStatus, lpAruRxFrameMemoryAllocation=lpAruRxFrameMemoryAllocation, lpEngFcrcOv=lpEngFcrcOv, lpAruTxFrameBlockUsage=lpAruTxFrameBlockUsage, lpEngFcrcLnnConnectionPoolUsage=lpEngFcrcLnnConnectionPoolUsage, lpEngArcAqmOv=lpEngArcAqmOv, lpEngArcAqmOvProvTable=lpEngArcAqmOvProvTable, lpEngFcrcIndex=lpEngFcrcIndex, lpEngArcCqcOvConnCapIndex=lpEngArcCqcOvConnCapIndex, lpEngArcAqmOvIndex=lpEngArcAqmOvIndex, lpEngArcRowStatus=lpEngArcRowStatus, lpEngArcMulticastBranchesAvailable=lpEngArcMulticastBranchesAvailable, lpEngFcrcRowStatusTable=lpEngFcrcRowStatusTable, lpEngArcCqcOvPortCongestionPolicy=lpEngArcCqcOvPortCongestionPolicy, lpEngFcrcPqcIndex=lpEngFcrcPqcIndex, lpEngArcCqcOperEntry=lpEngArcCqcOperEntry, lpEngArcCqcComponentName=lpEngArcCqcComponentName, lpEngFcrcRxFrameMemoryMinAvailable=lpEngFcrcRxFrameMemoryMinAvailable, lpEngArcCqcOvProvTable=lpEngArcCqcOvProvTable, lpEngArcAqmMaxVirtualLinks=lpEngArcAqmMaxVirtualLinks, lpAruConnUsageTable=lpAruConnUsageTable, lpEngFcrcTxFrameMemoryCongestionState=lpEngFcrcTxFrameMemoryCongestionState, lpEngArcAqmOvRowStatusEntry=lpEngArcAqmOvRowStatusEntry, lpAruTxFflThreshValue=lpAruTxFflThreshValue, lpEngArcAqmOvComponentName=lpEngArcAqmOvComponentName, lpEngFcrcTxFrThreshEntry=lpEngFcrcTxFrThreshEntry, lpEngFcrcOvProvEntry=lpEngFcrcOvProvEntry, lpEngArcAqmRowStatusTable=lpEngArcAqmRowStatusTable, lpEngArcTxCellThreshValue=lpEngArcTxCellThreshValue, lpArcRowStatusTable=lpArcRowStatusTable, atmBaseGroup=atmBaseGroup, lpEngFcrcPqcComponentName=lpEngFcrcPqcComponentName, lpEngArcTxCellMemoryUsage=lpEngArcTxCellMemoryUsage, lpEngArcAqmOvStorageType=lpEngArcAqmOvStorageType, lpEngArcMulticastBranchesUsage=lpEngArcMulticastBranchesUsage, lpAruSubConnectionPoolUsage=lpAruSubConnectionPoolUsage, lpEngArcCqcIndex=lpEngArcCqcIndex, lpEngArcCqcOvPerVcQueueInterfaces=lpEngArcCqcOvPerVcQueueInterfaces, lpAruConnUsageValue=lpAruConnUsageValue, lpEngArcCqcOvConnCapTable=lpEngArcCqcOvConnCapTable, lpEngFcrcOvComponentName=lpEngFcrcOvComponentName, lpEngArcStorageType=lpEngArcStorageType, lpArcConnCapEntry=lpArcConnCapEntry, lpEngArcAqmTxCellThreshIndex=lpEngArcAqmTxCellThreshIndex, lpEngFcrcRxFrameMemoryUsage=lpEngFcrcRxFrameMemoryUsage, lpEngArcOvProvEntry=lpEngArcOvProvEntry, lpEngFcrcLnnConnectionPoolAvailable=lpEngFcrcLnnConnectionPoolAvailable, lpEngFcrcRowStatus=lpEngFcrcRowStatus, lpEngArcTxCellMemoryMinAvailable=lpEngArcTxCellMemoryMinAvailable, lpEngFcrcPqc=lpEngFcrcPqc, lpAruOperTable=lpAruOperTable, lpEngFcrcPqcIpRoutesPoolSize=lpEngFcrcPqcIpRoutesPoolSize, lpEngFcrcPqcStorageType=lpEngFcrcPqcStorageType, lpEngArcRxCellMemoryCongestionState=lpEngArcRxCellMemoryCongestionState, lpEngFcrcPqcOv=lpEngFcrcPqcOv, lpAruRxFflThreshTable=lpAruRxFflThreshTable, lpEngFcrcPqcOvIndex=lpEngFcrcPqcOvIndex, lpEngArcAqmOvHighPriorityEpdOffset=lpEngArcAqmOvHighPriorityEpdOffset, lpEngArcCqcOvRowStatusEntry=lpEngArcCqcOvRowStatusEntry, lpEngArcCqcOvProvEntry=lpEngArcCqcOvProvEntry, lpAruTotalConnectionPoolUsage=lpAruTotalConnectionPoolUsage, lpEngArcTxCellThreshEntry=lpEngArcTxCellThreshEntry, lpEngFcrcOperEntry=lpEngFcrcOperEntry, lpEngFcrcRowStatusEntry=lpEngFcrcRowStatusEntry, lpEngArcTotalConnectionPoolUsage=lpEngArcTotalConnectionPoolUsage, lpEngArcOvTxCellMemoryAllocation=lpEngArcOvTxCellMemoryAllocation, lpEngArcAqmVirtualLinkUsage=lpEngArcAqmVirtualLinkUsage, lpEngArcCqcOvStorageType=lpEngArcCqcOvStorageType, lpEngArcCqcOvComponentName=lpEngArcCqcOvComponentName, lpAruTxCellFreeListCongestionState=lpAruTxCellFreeListCongestionState, lpAruRxFflThreshEntry=lpAruRxFflThreshEntry, lpAruLnnConnectionPoolUsage=lpAruLnnConnectionPoolUsage, lpAruTxFrameFreeListSize=lpAruTxFrameFreeListSize, lpEngFcrcSubConnectionPoolAvailable=lpEngFcrcSubConnectionPoolAvailable, lpAruStorageType=lpAruStorageType, lpEngArcOvComponentName=lpEngArcOvComponentName, lpEngFcrcOperTable=lpEngFcrcOperTable, lpEngArcAqmTxCellThreshValue=lpEngArcAqmTxCellThreshValue, lpEngFcrcPqcOvComponentName=lpEngFcrcPqcOvComponentName, lpEngArcTxCellThreshIndex=lpEngArcTxCellThreshIndex, lpEngFcrcOvIndex=lpEngFcrcOvIndex, lpEngFcrcOvLnnConnectionPoolCapacity=lpEngFcrcOvLnnConnectionPoolCapacity, lpEngArcOvStorageType=lpEngArcOvStorageType, lpAruSubConnectionPoolAvailable=lpAruSubConnectionPoolAvailable, lpEngArcOvIndex=lpEngArcOvIndex, lpAruTxCflThreshEntry=lpAruTxCflThreshEntry, lpAruOperEntry=lpAruOperEntry, lpArcCdvAttenuation=lpArcCdvAttenuation, atmBaseGroupBE=atmBaseGroupBE, lpEngArcRxCellThreshIndex=lpEngArcRxCellThreshIndex, atmBaseCapabilitiesBE00=atmBaseCapabilitiesBE00, lpEngArcAqmVirtualLinkGranularity=lpEngArcAqmVirtualLinkGranularity, lpEngFcrcOvRowStatus=lpEngFcrcOvRowStatus, lpAruRxCflThreshTable=lpAruRxCflThreshTable, lpEngArcComponentName=lpEngArcComponentName, lpAruTxCflThreshValue=lpAruTxCflThreshValue, lpEngArcRxCellThreshEntry=lpEngArcRxCellThreshEntry, lpEngArcOvRowStatus=lpEngArcOvRowStatus, lpEngArcCqcOvConnCapEntry=lpEngArcCqcOvConnCapEntry, lpEngArcCqcOvShapingScalingFactor=lpEngArcCqcOvShapingScalingFactor, lpEngArcAqmOvConnectionPoolCapacity=lpEngArcAqmOvConnectionPoolCapacity, lpAruRxCellFreeListSize=lpAruRxCellFreeListSize, lpEngFcrcTxFrThreshValue=lpEngFcrcTxFrThreshValue, lpEngArcOvProvTable=lpEngArcOvProvTable, lpEngFcrcPqcOperEntry=lpEngFcrcPqcOperEntry, atmBaseGroupBE00A=atmBaseGroupBE00A, lpArcComponentName=lpArcComponentName, lpEngArcAqmIndex=lpEngArcAqmIndex, lpEngArcRxCellThreshTable=lpEngArcRxCellThreshTable, lpEngArcAqmComponentName=lpEngArcAqmComponentName, lpArcConnCapTable=lpArcConnCapTable, lpEngArcRxCellMemoryUsage=lpEngArcRxCellMemoryUsage, lpAruTxCflThreshTable=lpAruTxCflThreshTable, lpEngArcAqmStorageType=lpEngArcAqmStorageType, lpEngFcrcPqcRowStatusTable=lpEngFcrcPqcRowStatusTable, lpEngArcCqcOperTable=lpEngArcCqcOperTable, lpAruRxCellBlockCapacity=lpAruRxCellBlockCapacity, lpAruRowStatusEntry=lpAruRowStatusEntry, lpEngArc=lpEngArc, lpEngArcAqmTxCellMemoryCongestionState=lpEngArcAqmTxCellMemoryCongestionState, lpEngArcAqmOvRowStatus=lpEngArcAqmOvRowStatus, lpEngArcAqmOvPortCongestionPolicy=lpEngArcAqmOvPortCongestionPolicy, lpEngArcRxCellMemoryAllocation=lpEngArcRxCellMemoryAllocation, lpArcMulticastBranchesCapacity=lpArcMulticastBranchesCapacity, lpAruTxFflThreshEntry=lpAruTxFflThreshEntry, lpArcSubConnectionPoolCapacity=lpArcSubConnectionPoolCapacity, lpAruRowStatusTable=lpAruRowStatusTable, lpAruRxFrameBlockUsage=lpAruRxFrameBlockUsage, lpAruTxCflThreshIndex=lpAruTxCflThreshIndex, lpArcRowStatusEntry=lpArcRowStatusEntry, lpAruRxCellBlockUsage=lpAruRxCellBlockUsage, lpEngFcrcPqcOvRowStatusEntry=lpEngFcrcPqcOvRowStatusEntry, lpEngFcrcPqcOvRowStatus=lpEngFcrcPqcOvRowStatus, lpEngArcAqmRowStatusEntry=lpEngArcAqmRowStatusEntry, lpEngFcrcRxFrThreshEntry=lpEngFcrcRxFrThreshEntry, lpEngFcrcOvRowStatusTable=lpEngFcrcOvRowStatusTable, lpEngArcAqmTxCellThreshTable=lpEngArcAqmTxCellThreshTable, lpAruLnnConnectionPoolAvailable=lpAruLnnConnectionPoolAvailable, lpArcConnCapValue=lpArcConnCapValue, lpArcLnnConnectionPoolCapacity=lpArcLnnConnectionPoolCapacity, lpArcRowStatus=lpArcRowStatus, lpAruIndex=lpAruIndex, lpEngFcrcOvStorageType=lpEngFcrcOvStorageType, lpAruRowStatus=lpAruRowStatus, lpAruTxFrameMemoryAllocation=lpAruTxFrameMemoryAllocation, lpEngArcOv=lpEngArcOv, lpEngArcAqmOvMaxVirtualLinks=lpEngArcAqmOvMaxVirtualLinks, lpEngFcrcRxFrThreshIndex=lpEngFcrcRxFrThreshIndex, atmBaseCapabilitiesBE00A=atmBaseCapabilitiesBE00A, lpAruTxCellBlockUsage=lpAruTxCellBlockUsage, lpAruRxFflThreshValue=lpAruRxFflThreshValue, lpEngArcOvRowStatusEntry=lpEngArcOvRowStatusEntry, atmBaseCapabilitiesBE=atmBaseCapabilitiesBE, lpEngFcrcTxFrameMemoryUsage=lpEngFcrcTxFrameMemoryUsage, lpEngArcCqc=lpEngArcCqc, lpEngArcCqcRowStatus=lpEngArcCqcRowStatus, lpEngArcCqcOvRowStatus=lpEngArcCqcOvRowStatus, lpEngArcAqmTxCellMemoryUsage=lpEngArcAqmTxCellMemoryUsage, lpEngArcOperTable=lpEngArcOperTable, lpEngArcCqcStorageType=lpEngArcCqcStorageType, lpEngArcAqmOvVirtualLinkGranularity=lpEngArcAqmOvVirtualLinkGranularity, lpEngArcRowStatusTable=lpEngArcRowStatusTable, lpAruComponentName=lpAruComponentName, lpEngArcTxCellMemoryAvailable=lpEngArcTxCellMemoryAvailable, lpEngArcTxCellMemoryMaxUsage=lpEngArcTxCellMemoryMaxUsage, lpEngArcAqmConnectionPoolUsage=lpEngArcAqmConnectionPoolUsage, lpEngArcOvRowStatusTable=lpEngArcOvRowStatusTable, lpEngArcCqcOv=lpEngArcCqcOv, lpEngFcrc=lpEngFcrc, lpEngArcAqmTxCellThreshEntry=lpEngArcAqmTxCellThreshEntry, lpEngArcAqmOvRowStatusTable=lpEngArcAqmOvRowStatusTable, lpAruTxFrameFreeListCongestionState=lpAruTxFrameFreeListCongestionState, lpAruTxFrameBlockCapacity=lpAruTxFrameBlockCapacity, lpAru=lpAru, lpEngFcrcOvSubConnectionPoolCapacity=lpEngFcrcOvSubConnectionPoolCapacity, lpEngArcCqcRowStatusEntry=lpEngArcCqcRowStatusEntry, lpEngFcrcRxFrameMemoryCongestionState=lpEngFcrcRxFrameMemoryCongestionState, lpEngFcrcRxFrameMemoryMaxUsage=lpEngFcrcRxFrameMemoryMaxUsage, lpEngFcrcPqcOvStorageType=lpEngFcrcPqcOvStorageType, lpEngFcrcPqcOvIpRoutesPoolCapacity=lpEngFcrcPqcOvIpRoutesPoolCapacity, lpArcProvTable=lpArcProvTable, lpAruRxCellFreeListCongestionState=lpAruRxCellFreeListCongestionState, lpAruConnUsageEntry=lpAruConnUsageEntry, lpAruConnUsageIndex=lpAruConnUsageIndex, atmBaseMIB=atmBaseMIB, lpEngArcCqcOvCdvReduction=lpEngArcCqcOvCdvReduction, lpEngFcrcComponentName=lpEngFcrcComponentName, lpEngArcRowStatusEntry=lpEngArcRowStatusEntry, lpEngFcrcRxFrThreshValue=lpEngFcrcRxFrThreshValue, lpArcTxFrameMemoryAllocation=lpArcTxFrameMemoryAllocation, lpEngArcAqmRowStatus=lpEngArcAqmRowStatus, lpEngArcTotalConnectionPoolAvailable=lpEngArcTotalConnectionPoolAvailable, lpEngArcRxCellMemoryMaxUsage=lpEngArcRxCellMemoryMaxUsage, lpEngArcAqmTxCellMemoryMinAvailable=lpEngArcAqmTxCellMemoryMinAvailable, lpAruTxCellBlockCapacity=lpAruTxCellBlockCapacity, lpArcShapingScalingFactor=lpArcShapingScalingFactor, lpEngArcTxCellMemoryCongestionState=lpEngArcTxCellMemoryCongestionState, lpArcPerVcQueueInterfaces=lpArcPerVcQueueInterfaces, lpEngArcAqm=lpEngArcAqm, lpEngFcrcTxFrThreshTable=lpEngFcrcTxFrThreshTable, lpEngFcrcPqcRowStatusEntry=lpEngFcrcPqcRowStatusEntry, lpAruRxCflThreshEntry=lpAruRxCflThreshEntry, lpEngFcrcPqcOperTable=lpEngFcrcPqcOperTable, atmBaseCapabilities=atmBaseCapabilities, lpEngArcRxCellMemoryAvailable=lpEngArcRxCellMemoryAvailable, lpArcIndex=lpArcIndex, lpEngArcRxCellMemoryMinAvailable=lpEngArcRxCellMemoryMinAvailable, lpEngArcAqmConnectionPoolAvailable=lpEngArcAqmConnectionPoolAvailable, lpEngFcrcTxFrThreshIndex=lpEngFcrcTxFrThreshIndex, lpEngFcrcOvRowStatusEntry=lpEngFcrcOvRowStatusEntry, lpArcStorageType=lpArcStorageType, lpEngArcAqmTxCellMemoryAvailable=lpEngArcAqmTxCellMemoryAvailable, lpEngArcRxCellThreshValue=lpEngArcRxCellThreshValue, lpArcTotalConnectionPoolCapacity=lpArcTotalConnectionPoolCapacity, lpEngFcrcTxFrameMemoryMinAvailable=lpEngFcrcTxFrameMemoryMinAvailable, lpEngFcrcTxFrameMemoryMaxUsage=lpEngFcrcTxFrameMemoryMaxUsage, lpEngFcrcPqcIpRoutesPoolUsage=lpEngFcrcPqcIpRoutesPoolUsage, lpAruTxCellFreeListSize=lpAruTxCellFreeListSize, lpEngFcrcStorageType=lpEngFcrcStorageType, lpAruRxCflThreshIndex=lpAruRxCflThreshIndex, lpEngFcrcPqcIpRoutesPoolAvailableEst=lpEngFcrcPqcIpRoutesPoolAvailableEst, lpArcShapingStackAllocation=lpArcShapingStackAllocation, lpAruRxFrameFreeListCongestionState=lpAruRxFrameFreeListCongestionState, lpEngArcCqcRowStatusTable=lpEngArcCqcRowStatusTable, lpEngArcCqcOvConnCapValue=lpEngArcCqcOvConnCapValue, lpEngArcAqmTxCellMemoryMaxUsage=lpEngArcAqmTxCellMemoryMaxUsage, lpEngFcrcPqcOvRowStatusTable=lpEngFcrcPqcOvRowStatusTable, lpEngArcAqmOperTable=lpEngArcAqmOperTable, lpEngArcCqcCdvReduction=lpEngArcCqcCdvReduction, lpEngArcTxCellMemoryAllocation=lpEngArcTxCellMemoryAllocation, lpEngArcAqmOvProvEntry=lpEngArcAqmOvProvEntry, lpArcConnCapIndex=lpArcConnCapIndex, lpEngArcCqcOvRowStatusTable=lpEngArcCqcOvRowStatusTable, lpEngArcOvMulticastBranchesCapacity=lpEngArcOvMulticastBranchesCapacity, lpAruRxCflThreshValue=lpAruRxCflThreshValue, lpEngArcAqmOvLowPriorityEpdOffset=lpEngArcAqmOvLowPriorityEpdOffset, lpArcPortAggregation=lpArcPortAggregation, lpAruRxFrameBlockCapacity=lpAruRxFrameBlockCapacity, lpArcRxFrameMemoryAllocation=lpArcRxFrameMemoryAllocation)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-AtmBaseMIB", lpEngFcrcSubConnectionPoolUsage=lpEngFcrcSubConnectionPoolUsage, lpEngFcrcTxFrameMemoryAvailable=lpEngFcrcTxFrameMemoryAvailable, lpEngFcrcOvProvTable=lpEngFcrcOvProvTable, lpEngFcrcRxFrThreshTable=lpEngFcrcRxFrThreshTable, lpEngFcrcRxFrameMemoryAvailable=lpEngFcrcRxFrameMemoryAvailable, lpAruTxFflThreshIndex=lpAruTxFflThreshIndex, lpAruRxFrameFreeListSize=lpAruRxFrameFreeListSize)
