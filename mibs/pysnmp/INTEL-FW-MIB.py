#
# PySNMP MIB module INTEL-FW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-FW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, iso, Gauge32, ModuleIdentity, Unsigned32, NotificationType, Integer32, Counter64, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "iso", "Gauge32", "ModuleIdentity", "Unsigned32", "NotificationType", "Integer32", "Counter64", "MibIdentifier", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
fw = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 9))
fwInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 9, 1))
fwModuleTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1), )
if mibBuilder.loadTexts: fwModuleTable.setStatus('mandatory')
fwModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1), ).setIndexNames((0, "INTEL-FW-MIB", "fwModuleChassisIndex"), (0, "INTEL-FW-MIB", "fwModuleModuleIndex"), (0, "INTEL-FW-MIB", "fwModuleSWSectionIndex"), (0, "INTEL-FW-MIB", "fwModuleSWNumberIndex"))
if mibBuilder.loadTexts: fwModuleEntry.setStatus('mandatory')
fwModuleChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleChassisIndex.setStatus('mandatory')
fwModuleModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleModuleIndex.setStatus('mandatory')
fwModuleSWSectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("runningSW", 1), ("backUpSW", 2), ("upgradeSW", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleSWSectionIndex.setStatus('mandatory')
fwModuleSWNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleSWNumberIndex.setStatus('mandatory')
fwModuleDeletePlugIn = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fwModuleDeletePlugIn.setStatus('mandatory')
fwModuleDeleteBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fwModuleDeleteBackup.setStatus('mandatory')
fwModuleFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleFileName.setStatus('mandatory')
fwModuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleDescription.setStatus('mandatory')
fwModuleLoadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleLoadTime.setStatus('mandatory')
fwModuleIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleIpAddress.setStatus('mandatory')
fwModuleMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleMajorVersion.setStatus('mandatory')
fwModuleMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleMinorVersion.setStatus('mandatory')
fwModuleVersionTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleVersionTxt.setStatus('mandatory')
fwModuleSwStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("approved", 1), ("experimental", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fwModuleSwStatus.setStatus('mandatory')
fwModuleSwType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("firmware", 1), ("plugin", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleSwType.setStatus('mandatory')
fwModuleFileID = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwModuleFileID.setStatus('mandatory')
fwPatternTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2), )
if mibBuilder.loadTexts: fwPatternTable.setStatus('mandatory')
fwPatternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1), ).setIndexNames((0, "INTEL-FW-MIB", "fwPatternChassisIndex"), (0, "INTEL-FW-MIB", "fwPatternModuleIndex"), (0, "INTEL-FW-MIB", "fwPatternFileIndex"))
if mibBuilder.loadTexts: fwPatternEntry.setStatus('mandatory')
fwPatternChassisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternChassisIndex.setStatus('mandatory')
fwPatternModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternModuleIndex.setStatus('mandatory')
fwPatternFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternFileIndex.setStatus('mandatory')
fwPatternFileFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternFileFilter.setStatus('mandatory')
fwPatternFileDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternFileDesc.setStatus('mandatory')
fwPatternFileShortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternFileShortDesc.setStatus('mandatory')
fwPatternDefaultEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternDefaultEnable.setStatus('mandatory')
fwPatternFileID = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwPatternFileID.setStatus('mandatory')
fwInfoNoOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInfoNoOfEntries.setStatus('mandatory')
fwInfoLastUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInfoLastUpdateTime.setStatus('mandatory')
fwInfoGoUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fwInfoGoUpgrade.setStatus('mandatory')
fwInfoLastTftpToStatusMsgTimeout = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInfoLastTftpToStatusMsgTimeout.setStatus('mandatory')
fwInfoResetToRebootTimeout = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInfoResetToRebootTimeout.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-FW-MIB", fwModuleFileID=fwModuleFileID, fwModuleIpAddress=fwModuleIpAddress, fwModuleModuleIndex=fwModuleModuleIndex, fwModuleSWNumberIndex=fwModuleSWNumberIndex, fwPatternFileDesc=fwPatternFileDesc, fwInfoResetToRebootTimeout=fwInfoResetToRebootTimeout, fwModuleDeletePlugIn=fwModuleDeletePlugIn, fwInfoLastTftpToStatusMsgTimeout=fwInfoLastTftpToStatusMsgTimeout, fwPatternFileShortDesc=fwPatternFileShortDesc, fwInfoNoOfEntries=fwInfoNoOfEntries, fwPatternChassisIndex=fwPatternChassisIndex, fwModuleDeleteBackup=fwModuleDeleteBackup, fwModuleFileName=fwModuleFileName, fwModuleDescription=fwModuleDescription, fwModuleTable=fwModuleTable, fwPatternEntry=fwPatternEntry, fwModuleEntry=fwModuleEntry, fwModuleMajorVersion=fwModuleMajorVersion, fwModuleSWSectionIndex=fwModuleSWSectionIndex, fwPatternTable=fwPatternTable, fwModuleSwType=fwModuleSwType, fwModuleMinorVersion=fwModuleMinorVersion, fwInfoLastUpdateTime=fwInfoLastUpdateTime, fwModuleLoadTime=fwModuleLoadTime, fwInfoGoUpgrade=fwInfoGoUpgrade, fwModuleSwStatus=fwModuleSwStatus, fwPatternDefaultEnable=fwPatternDefaultEnable, fwModuleVersionTxt=fwModuleVersionTxt, fwInfo=fwInfo, fwPatternFileIndex=fwPatternFileIndex, fwPatternFileFilter=fwPatternFileFilter, fwPatternModuleIndex=fwPatternModuleIndex, fw=fw, fwModuleChassisIndex=fwModuleChassisIndex, fwPatternFileID=fwPatternFileID)
