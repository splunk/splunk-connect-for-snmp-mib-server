#
# PySNMP MIB module TIMETRA-MSDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-MSDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:12:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Integer32, TimeTicks, ObjectIdentity, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, IpAddress, Unsigned32, Counter32, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "TimeTicks", "ObjectIdentity", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "IpAddress", "Unsigned32", "Counter32", "NotificationType", "Gauge32")
DisplayString, RowStatus, TextualConvention, TimeStamp, TruthValue, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TimeStamp", "TruthValue", "TimeInterval")
tmnxSRNotifyPrefix, timetraSRMIBModules, tmnxSRObjs, tmnxSRConfs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "timetraSRMIBModules", "tmnxSRObjs", "tmnxSRConfs")
TNamedItemOrEmpty, TmnxAdminState, TPolicyStatementNameOrEmpty, TNamedItem = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TNamedItemOrEmpty", "TmnxAdminState", "TPolicyStatementNameOrEmpty", "TNamedItem")
timetraMsdpMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 43))
timetraMsdpMIBModule.setRevisions(('2011-08-01 00:00', '1909-02-28 00:00', '2006-08-01 00:00',))
if mibBuilder.loadTexts: timetraMsdpMIBModule.setLastUpdated('201108010000Z')
if mibBuilder.loadTexts: timetraMsdpMIBModule.setOrganization('Alcatel-Lucent')
tmnxMsdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43))
tmnxMsdpGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1))
tmnxMsdpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43))
tmnxMsdpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 1))
tmnxMsdpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2))
tmnxMsdpNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43))
tmnxMsdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43, 0))
tmnxMsdpMaxActiveSources = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpMaxActiveSources.setStatus('current')
tmnxMsdpMsgRcvRate = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpMsgRcvRate.setStatus('current')
tmnxMsdpMsgRcvRateTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 600), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpMsgRcvRateTime.setStatus('current')
tmnxMsdpMsgRcvRateThd = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 4), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpMsgRcvRateThd.setStatus('current')
tmnxMsdpDataEncapsulation = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpDataEncapsulation.setStatus('current')
tmnxMsdpAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 6), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpAdminState.setStatus('current')
tmnxMsdpExportPolicy1 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 7), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpExportPolicy1.setStatus('current')
tmnxMsdpExportPolicy2 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 8), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpExportPolicy2.setStatus('current')
tmnxMsdpExportPolicy3 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 9), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpExportPolicy3.setStatus('current')
tmnxMsdpExportPolicy4 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 10), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpExportPolicy4.setStatus('current')
tmnxMsdpExportPolicy5 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 11), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpExportPolicy5.setStatus('current')
tmnxMsdpImportPolicy1 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 12), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpImportPolicy1.setStatus('current')
tmnxMsdpImportPolicy2 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 13), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpImportPolicy2.setStatus('current')
tmnxMsdpImportPolicy3 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 14), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpImportPolicy3.setStatus('current')
tmnxMsdpImportPolicy4 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 15), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpImportPolicy4.setStatus('current')
tmnxMsdpImportPolicy5 = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 16), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpImportPolicy5.setStatus('current')
tmnxMsdpLocalAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 17), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpLocalAddressType.setStatus('current')
tmnxMsdpLocalAddress = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 18), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpLocalAddress.setStatus('current')
tmnxMsdpStatusPeerCount = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpStatusPeerCount.setStatus('current')
tmnxMsdpStatusPeersEstablished = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpStatusPeersEstablished.setStatus('current')
tmnxMsdpStatusSACount = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpStatusSACount.setStatus('current')
tmnxMsdpStatusLastTimeUp = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpStatusLastTimeUp.setStatus('current')
tmnxMsdpStatusActSrcLimExceeded = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpStatusActSrcLimExceeded.setStatus('current')
tmnxMsdpRpfLookupSequence = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("mucastRouteTable", 0), ("ucastRouteTable", 1), ("both", 2))).clone('ucastRouteTable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpRpfLookupSequence.setStatus('current')
tmnxMsdpSACacheLifetime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(90, 600)).clone(90)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxMsdpSACacheLifetime.setStatus('current')
tmnxMsdpSARejectExportPolicy = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSARejectExportPolicy.setStatus('current')
tmnxMsdpSARejectImportPolicy = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSARejectImportPolicy.setStatus('current')
tmnxMsdpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2), )
if mibBuilder.loadTexts: tmnxMsdpPeerTable.setStatus('current')
tmnxMsdpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1), ).setIndexNames((0, "TIMETRA-MSDP-MIB", "tmnxMsdpPeerAddressType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpPeerAddress"))
if mibBuilder.loadTexts: tmnxMsdpPeerEntry.setStatus('current')
tmnxMsdpPeerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpPeerAddressType.setStatus('current')
tmnxMsdpPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpPeerAddress.setStatus('current')
tmnxMsdpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerRowStatus.setStatus('current')
tmnxMsdpPeerMaxActiveSources = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerMaxActiveSources.setStatus('current')
tmnxMsdpPeerMsgRcvRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerMsgRcvRate.setStatus('current')
tmnxMsdpPeerMsgRcvRateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 600), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerMsgRcvRateTime.setStatus('current')
tmnxMsdpPeerMsgRcvRateThd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 7), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerMsgRcvRateThd.setStatus('current')
tmnxMsdpPeerAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerAuthKey.setStatus('current')
tmnxMsdpPeerAuthKeyEncrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerAuthKeyEncrypted.setStatus('current')
tmnxMsdpPeerDefaultPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerDefaultPeer.setStatus('current')
tmnxMsdpPeerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 11), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerAdminState.setStatus('current')
tmnxMsdpPeerExportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 12), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerExportPolicy1.setStatus('current')
tmnxMsdpPeerExportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 13), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerExportPolicy2.setStatus('current')
tmnxMsdpPeerExportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 14), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerExportPolicy3.setStatus('current')
tmnxMsdpPeerExportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 15), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerExportPolicy4.setStatus('current')
tmnxMsdpPeerExportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 16), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerExportPolicy5.setStatus('current')
tmnxMsdpPeerImportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 17), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerImportPolicy1.setStatus('current')
tmnxMsdpPeerImportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 18), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerImportPolicy2.setStatus('current')
tmnxMsdpPeerImportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 19), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerImportPolicy3.setStatus('current')
tmnxMsdpPeerImportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 20), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerImportPolicy4.setStatus('current')
tmnxMsdpPeerImportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 21), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerImportPolicy5.setStatus('current')
tmnxMsdpPeerLocalAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 22), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerLocalAddressType.setStatus('current')
tmnxMsdpPeerLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 23), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerLocalAddress.setStatus('current')
tmnxMsdpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("listen", 0), ("established", 1), ("inactive", 2), ("disabled", 3), ("connecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerState.setStatus('current')
tmnxMsdpPeerLastUpOrDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 25), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerLastUpOrDown.setStatus('current')
tmnxMsdpPeerConRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerConRetry.setStatus('current')
tmnxMsdpPeerStateTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 27), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStateTimer.setStatus('current')
tmnxMsdpPeerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 28), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerTimeout.setStatus('current')
tmnxMsdpPeerSAAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerSAAccepted.setStatus('current')
tmnxMsdpPeerSARecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerSARecvd.setStatus('current')
tmnxMsdpPeerLastASLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 2, 1, 31), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerLastASLimit.setStatus('current')
tmnxMsdpPeerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3), )
if mibBuilder.loadTexts: tmnxMsdpPeerGroupTable.setStatus('current')
tmnxMsdpPeerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1), ).setIndexNames((0, "TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupName"))
if mibBuilder.loadTexts: tmnxMsdpPeerGroupEntry.setStatus('current')
tmnxMsdpPeerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxMsdpPeerGroupName.setStatus('current')
tmnxMsdpPeerGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupRowStatus.setStatus('current')
tmnxMsdpPeerGroupMsgRcvRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupMsgRcvRate.setStatus('current')
tmnxMsdpPeerGroupMsgRcvRateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 600), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupMsgRcvRateTime.setStatus('current')
tmnxMsdpPeerGroupMsgRcvRateThd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 5), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupMsgRcvRateThd.setStatus('current')
tmnxMsdpPeerGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 6), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupAdminState.setStatus('current')
tmnxMsdpPeerGroupExportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 7), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupExportPolicy1.setStatus('current')
tmnxMsdpPeerGroupExportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 8), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupExportPolicy2.setStatus('current')
tmnxMsdpPeerGroupExportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 9), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupExportPolicy3.setStatus('current')
tmnxMsdpPeerGroupExportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 10), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupExportPolicy4.setStatus('current')
tmnxMsdpPeerGroupExportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 11), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupExportPolicy5.setStatus('current')
tmnxMsdpPeerGroupImportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 12), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupImportPolicy1.setStatus('current')
tmnxMsdpPeerGroupImportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 13), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupImportPolicy2.setStatus('current')
tmnxMsdpPeerGroupImportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 14), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupImportPolicy3.setStatus('current')
tmnxMsdpPeerGroupImportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 15), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupImportPolicy4.setStatus('current')
tmnxMsdpPeerGroupImportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 16), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupImportPolicy5.setStatus('current')
tmnxMsdpPeerGroupLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 17), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupLocalAddrType.setStatus('current')
tmnxMsdpPeerGroupLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 18), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupLocalAddress.setStatus('current')
tmnxMsdpPeerGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("mesh-group", 2))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupMode.setStatus('current')
tmnxMsdpPeerGroupMaxActSources = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupMaxActSources.setStatus('current')
tmnxMsdpPeerGroupActMsgsExMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGroupActMsgsExMax.setStatus('current')
tmnxMsdpPeerGrpSARejExpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpSARejExpPolicy.setStatus('current')
tmnxMsdpPeerGrpSARejImpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpSARejImpPolicy.setStatus('current')
tmnxMsdpPeerGrpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4), )
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerTable.setStatus('current')
tmnxMsdpPeerGrpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1), ).setIndexNames((0, "TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupName"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerAddressType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerAddress"))
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerEntry.setStatus('current')
tmnxMsdpPeerGrpPeerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerAddressType.setStatus('current')
tmnxMsdpPeerGrpPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerAddress.setStatus('current')
tmnxMsdpPeerGrpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerRowStatus.setStatus('current')
tmnxMsdpPeerGrpPeerMaxActSrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerMaxActSrcs.setStatus('current')
tmnxMsdpPeerGrpPeerMsgRcvRt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 10000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerMsgRcvRt.setStatus('current')
tmnxMsdpPeerGrpPeerMsgRcvRtTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 600), ))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerMsgRcvRtTime.setStatus('current')
tmnxMsdpPeerGrpPeerMsgRcvRtThd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 7), Gauge32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerMsgRcvRtThd.setStatus('current')
tmnxMsdpPeerGrpPeerAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerAuthKey.setStatus('current')
tmnxMsdpPeerGrpPeerAKeyEncrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 9), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerAKeyEncrypt.setStatus('current')
tmnxMsdpPeerGrpPeerDefaultPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerDefaultPeer.setStatus('current')
tmnxMsdpPeerGrpPeerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 11), TmnxAdminState().clone('inService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerAdminState.setStatus('current')
tmnxMsdpPeerGrpPeerExportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 12), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerExportPolicy1.setStatus('current')
tmnxMsdpPeerGrpPeerExportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 13), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerExportPolicy2.setStatus('current')
tmnxMsdpPeerGrpPeerExportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 14), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerExportPolicy3.setStatus('current')
tmnxMsdpPeerGrpPeerExportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 15), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerExportPolicy4.setStatus('current')
tmnxMsdpPeerGrpPeerExportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 16), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerExportPolicy5.setStatus('current')
tmnxMsdpPeerGrpPeerImportPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 17), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerImportPolicy1.setStatus('current')
tmnxMsdpPeerGrpPeerImportPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 18), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerImportPolicy2.setStatus('current')
tmnxMsdpPeerGrpPeerImportPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 19), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerImportPolicy3.setStatus('current')
tmnxMsdpPeerGrpPeerImportPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 20), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerImportPolicy4.setStatus('current')
tmnxMsdpPeerGrpPeerImportPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 21), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerImportPolicy5.setStatus('current')
tmnxMsdpPeerGrpPeerLocAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 22), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerLocAddrType.setStatus('current')
tmnxMsdpPeerGrpPeerLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 23), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerLocalAddress.setStatus('current')
tmnxMsdpPeerGrpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("listen", 0), ("established", 1), ("inactive", 2), ("disabled", 3), ("connecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerState.setStatus('current')
tmnxMsdpPeerGrpPeerLastUpOrDown = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 25), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerLastUpOrDown.setStatus('current')
tmnxMsdpPeerGrpPeerConRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerConRetry.setStatus('current')
tmnxMsdpPeerGrpPeerStateTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 27), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerStateTimer.setStatus('current')
tmnxMsdpPeerGrpPeerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 28), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerTimeout.setStatus('current')
tmnxMsdpPeerGrpPeerSAAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerSAAccepted.setStatus('current')
tmnxMsdpPeerGrpPeerSARecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerSARecvd.setStatus('current')
tmnxMsdpPeerGrpPeerLastASLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 4, 1, 31), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerGrpPeerLastASLimit.setStatus('current')
tmnxMsdpSourceTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5), )
if mibBuilder.loadTexts: tmnxMsdpSourceTable.setStatus('current')
tmnxMsdpSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1), ).setIndexNames((0, "TIMETRA-MSDP-MIB", "tmnxMsdpSourcePrefixType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSourcePrefix"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSourceMask"))
if mibBuilder.loadTexts: tmnxMsdpSourceEntry.setStatus('current')
tmnxMsdpSourcePrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSourcePrefixType.setStatus('current')
tmnxMsdpSourcePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSourcePrefix.setStatus('current')
tmnxMsdpSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: tmnxMsdpSourceMask.setStatus('current')
tmnxMsdpSourceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpSourceRowStatus.setStatus('current')
tmnxMsdpSourceMaxActiveSources = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000000), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxMsdpSourceMaxActiveSources.setStatus('current')
tmnxMsdpSourceDiscMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynamic", 0), ("configured", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSourceDiscMethod.setStatus('current')
tmnxMsdpSourceSrcActMsgsExMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSourceSrcActMsgsExMax.setStatus('current')
tmnxMsdpSourceLastExEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 5, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSourceLastExEventTime.setStatus('current')
tmnxMsdpSrcActiveTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6), )
if mibBuilder.loadTexts: tmnxMsdpSrcActiveTable.setStatus('current')
tmnxMsdpSrcActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1), ).setIndexNames((0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveGroupAddrType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveGroupAddr"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveSourceAddrType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveSourceAddr"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveOriginRPType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveOriginRP"))
if mibBuilder.loadTexts: tmnxMsdpSrcActiveEntry.setStatus('current')
tmnxMsdpSrcActiveGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActiveGroupAddrType.setStatus('current')
tmnxMsdpSrcActiveGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActiveGroupAddr.setStatus('current')
tmnxMsdpSrcActiveSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 3), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActiveSourceAddrType.setStatus('current')
tmnxMsdpSrcActiveSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActiveSourceAddr.setStatus('current')
tmnxMsdpSrcActiveOriginRPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 5), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActiveOriginRPType.setStatus('current')
tmnxMsdpSrcActiveOriginRP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActiveOriginRP.setStatus('current')
tmnxMsdpSrcActivePrLearnFrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActivePrLearnFrType.setStatus('current')
tmnxMsdpSrcActivePeerLearntFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActivePeerLearntFrom.setStatus('current')
tmnxMsdpSrcActiveRPFPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActiveRPFPeerType.setStatus('current')
tmnxMsdpSrcActiveRPFPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActiveRPFPeer.setStatus('current')
tmnxMsdpSrcActiveUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 11), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActiveUpTime.setStatus('current')
tmnxMsdpSrcActiveExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 6, 1, 12), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActiveExpiryTime.setStatus('current')
tmnxMsdpPeerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7), )
if mibBuilder.loadTexts: tmnxMsdpPeerStatsTable.setStatus('current')
tmnxMsdpPeerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1), )
tmnxMsdpPeerEntry.registerAugmentions(("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsEntry"))
tmnxMsdpPeerStatsEntry.setIndexNames(*tmnxMsdpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxMsdpPeerStatsEntry.setStatus('current')
tmnxMsdpPeerStatsActSrcLimExcd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsActSrcLimExcd.setStatus('current')
tmnxMsdpPeerStatsLastStChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsLastStChange.setStatus('current')
tmnxMsdpPeerStatsLastMsgPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 3), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsLastMsgPeer.setStatus('current')
tmnxMsdpPeerStatsRPFFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsRPFFailures.setStatus('current')
tmnxMsdpPeerStatsRemoteCloses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsRemoteCloses.setStatus('current')
tmnxMsdpPeerStatsPeerTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsPeerTimeouts.setStatus('current')
tmnxMsdpPeerStatsSAMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSAMsgsSent.setStatus('current')
tmnxMsdpPeerStatsSAMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSAMsgsRecvd.setStatus('current')
tmnxMsdpPeerStatsSAReqMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSAReqMsgsSent.setStatus('current')
tmnxMsdpPeerStatsSAReqMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSAReqMsgsRecvd.setStatus('current')
tmnxMsdpPeerStatsSAResMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSAResMsgsSent.setStatus('current')
tmnxMsdpPeerStatsSAResMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSAResMsgsRecvd.setStatus('current')
tmnxMsdpPeerStatsKAMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsKAMsgsSent.setStatus('current')
tmnxMsdpPeerStatsKAMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsKAMsgsRecvd.setStatus('current')
tmnxMsdpPeerStatsUnknMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsUnknMsgsRecvd.setStatus('current')
tmnxMsdpPeerStatsErrorMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsErrorMsgsRecvd.setStatus('current')
tmnxMsdpPeerStatsSALearnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSALearnt.setStatus('current')
tmnxMsdpPeerStatsSARejExpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSARejExpPolicy.setStatus('current')
tmnxMsdpPeerStatsSARejImpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsSARejImpPolicy.setStatus('current')
tmnxMsdpPeerStatsResvMsgsRecvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 7, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpPeerStatsResvMsgsRecvd.setStatus('current')
tmnxMsdpSrcActRejTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8), )
if mibBuilder.loadTexts: tmnxMsdpSrcActRejTable.setStatus('current')
tmnxMsdpSrcActRejEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1), ).setIndexNames((0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejPeerGroupName"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejGroupAddrType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejGroupAddr"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejSourceAddrType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejSourceAddr"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejOriginRPType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejOriginRP"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejPeerAddrType"), (0, "TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejPeerAddr"))
if mibBuilder.loadTexts: tmnxMsdpSrcActRejEntry.setStatus('current')
tmnxMsdpSrcActRejPeerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 1), TNamedItemOrEmpty())
if mibBuilder.loadTexts: tmnxMsdpSrcActRejPeerGroupName.setStatus('current')
tmnxMsdpSrcActRejGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 2), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActRejGroupAddrType.setStatus('current')
tmnxMsdpSrcActRejGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActRejGroupAddr.setStatus('current')
tmnxMsdpSrcActRejSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 4), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActRejSourceAddrType.setStatus('current')
tmnxMsdpSrcActRejSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActRejSourceAddr.setStatus('current')
tmnxMsdpSrcActRejOriginRPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 6), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActRejOriginRPType.setStatus('current')
tmnxMsdpSrcActRejOriginRP = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 7), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActRejOriginRP.setStatus('current')
tmnxMsdpSrcActRejPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 8), InetAddressType())
if mibBuilder.loadTexts: tmnxMsdpSrcActRejPeerAddrType.setStatus('current')
tmnxMsdpSrcActRejPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxMsdpSrcActRejPeerAddr.setStatus('current')
tmnxMsdpSrcActRejFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 43, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("importPolicyFailure", 1), ("exportPolicyFailure", 2), ("rpfFailure", 3), ("actSrcLimitExceeded", 4), ("srcActSrcLimitExceeded", 5), ("peerActSrcLimitExceeded", 6), ("groupActSrcLimitExceeded", 7), ("groupPeerActSrcLimitExceeded", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxMsdpSrcActRejFailureReason.setStatus('current')
tmnxMsdpActSrcLimExcd = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43, 0, 1)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpMaxActiveSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpStatusActSrcLimExceeded"))
if mibBuilder.loadTexts: tmnxMsdpActSrcLimExcd.setStatus('current')
tmnxMsdpPeerActSrcLimExcd = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43, 0, 2)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsActSrcLimExcd"))
if mibBuilder.loadTexts: tmnxMsdpPeerActSrcLimExcd.setStatus('current')
tmnxMsdpRPFFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43, 0, 3)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveRPFPeerType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveRPFPeer"))
if mibBuilder.loadTexts: tmnxMsdpRPFFailure.setStatus('current')
tmnxMsdpSourceSrcActMsgsExcd = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43, 0, 4)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpSourceMaxActiveSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceSrcActMsgsExMax"))
if mibBuilder.loadTexts: tmnxMsdpSourceSrcActMsgsExcd.setStatus('current')
tmnxMsdpGroupSrcActMsgsExcd = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 43, 0, 5)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupMaxActSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupActMsgsExMax"))
if mibBuilder.loadTexts: tmnxMsdpGroupSrcActMsgsExcd.setStatus('current')
tmnxMsdpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 1, 1)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpGlobalGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpCompliance = tmnxMsdpCompliance.setStatus('obsolete')
tmnxMsdpV10v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 1, 2)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpGlobalGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveRejGroup"), ("TIMETRA-MSDP-MIB", "tmnxMsdpNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpV10v0Compliance = tmnxMsdpV10v0Compliance.setStatus('current')
tmnxMsdpGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 1)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpMaxActiveSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpMsgRcvRate"), ("TIMETRA-MSDP-MIB", "tmnxMsdpMsgRcvRateTime"), ("TIMETRA-MSDP-MIB", "tmnxMsdpMsgRcvRateThd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpDataEncapsulation"), ("TIMETRA-MSDP-MIB", "tmnxMsdpAdminState"), ("TIMETRA-MSDP-MIB", "tmnxMsdpExportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpExportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpExportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpExportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpExportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpImportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpImportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpImportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpImportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpImportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpLocalAddress"), ("TIMETRA-MSDP-MIB", "tmnxMsdpLocalAddressType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpStatusPeerCount"), ("TIMETRA-MSDP-MIB", "tmnxMsdpStatusPeersEstablished"), ("TIMETRA-MSDP-MIB", "tmnxMsdpStatusSACount"), ("TIMETRA-MSDP-MIB", "tmnxMsdpStatusLastTimeUp"), ("TIMETRA-MSDP-MIB", "tmnxMsdpStatusActSrcLimExceeded"), ("TIMETRA-MSDP-MIB", "tmnxMsdpRpfLookupSequence"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSACacheLifetime"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSARejectExportPolicy"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSARejectImportPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpGlobalGroup = tmnxMsdpGlobalGroup.setStatus('current')
tmnxMsdpPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 2)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpPeerRowStatus"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerMaxActiveSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerMsgRcvRate"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerMsgRcvRateTime"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerMsgRcvRateThd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerAuthKey"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerAuthKeyEncrypted"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerDefaultPeer"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerAdminState"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerExportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerExportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerExportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerExportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerExportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerImportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerImportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerImportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerImportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerImportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerLocalAddressType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerLocalAddress"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerRowStatus"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerMaxActSrcs"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerMsgRcvRt"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerMsgRcvRtTime"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerMsgRcvRtThd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerAuthKey"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerAKeyEncrypt"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerDefaultPeer"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerAdminState"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerExportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerExportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerExportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerExportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerExportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerImportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerImportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerImportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerImportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerImportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerLocAddrType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerLocalAddress"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsActSrcLimExcd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsLastStChange"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsLastMsgPeer"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsRPFFailures"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsRemoteCloses"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsPeerTimeouts"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSAMsgsSent"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSAMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSAReqMsgsSent"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSAReqMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSAResMsgsSent"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSAResMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsKAMsgsSent"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsKAMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsUnknMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsErrorMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSALearnt"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSARejExpPolicy"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsSARejImpPolicy"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStatsResvMsgsRecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerState"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerLastUpOrDown"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerConRetry"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerStateTimer"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerTimeout"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerSAAccepted"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerSARecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerLastASLimit"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerState"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerLastUpOrDown"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerConRetry"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerStateTimer"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerTimeout"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerSAAccepted"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerSARecvd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpPeerLastASLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpPeerGroup = tmnxMsdpPeerGroup.setStatus('current')
tmnxMsdpPeerGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 3)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupRowStatus"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupMsgRcvRate"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupMsgRcvRateTime"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupMsgRcvRateThd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupAdminState"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupExportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupExportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupExportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupExportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupExportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupImportPolicy1"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupImportPolicy2"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupImportPolicy3"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupImportPolicy4"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupImportPolicy5"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupLocalAddrType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupLocalAddress"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupMode"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupMaxActSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGroupActMsgsExMax"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpSARejExpPolicy"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerGrpSARejImpPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpPeerGroupGroup = tmnxMsdpPeerGroupGroup.setStatus('current')
tmnxMsdpSourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 4)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpSourceRowStatus"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceMaxActiveSources"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceDiscMethod"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceSrcActMsgsExMax"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceLastExEventTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpSourceGroup = tmnxMsdpSourceGroup.setStatus('current')
tmnxMsdpSrcActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 5)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActivePrLearnFrType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActivePeerLearntFrom"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveRPFPeerType"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveRPFPeer"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveUpTime"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActiveExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpSrcActiveGroup = tmnxMsdpSrcActiveGroup.setStatus('current')
tmnxMsdpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 6)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpActSrcLimExcd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpPeerActSrcLimExcd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpRPFFailure"), ("TIMETRA-MSDP-MIB", "tmnxMsdpSourceSrcActMsgsExcd"), ("TIMETRA-MSDP-MIB", "tmnxMsdpGroupSrcActMsgsExcd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpNotificationGroup = tmnxMsdpNotificationGroup.setStatus('current')
tmnxMsdpSrcActiveRejGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 43, 2, 7)).setObjects(("TIMETRA-MSDP-MIB", "tmnxMsdpSrcActRejFailureReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxMsdpSrcActiveRejGroup = tmnxMsdpSrcActiveRejGroup.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-MSDP-MIB", tmnxMsdpNotifications=tmnxMsdpNotifications, tmnxMsdpPeerExportPolicy4=tmnxMsdpPeerExportPolicy4, tmnxMsdpPeerImportPolicy5=tmnxMsdpPeerImportPolicy5, tmnxMsdpPeerLocalAddress=tmnxMsdpPeerLocalAddress, tmnxMsdpPeerStatsSAReqMsgsSent=tmnxMsdpPeerStatsSAReqMsgsSent, tmnxMsdpPeerStatsResvMsgsRecvd=tmnxMsdpPeerStatsResvMsgsRecvd, tmnxMsdpPeerGroupMode=tmnxMsdpPeerGroupMode, tmnxMsdpLocalAddressType=tmnxMsdpLocalAddressType, tmnxMsdpPeerStatsRPFFailures=tmnxMsdpPeerStatsRPFFailures, tmnxMsdpPeerGroupExportPolicy1=tmnxMsdpPeerGroupExportPolicy1, tmnxMsdpPeerGroup=tmnxMsdpPeerGroup, tmnxMsdpPeerActSrcLimExcd=tmnxMsdpPeerActSrcLimExcd, tmnxMsdpGlobalGroup=tmnxMsdpGlobalGroup, tmnxMsdpSrcActRejSourceAddr=tmnxMsdpSrcActRejSourceAddr, tmnxMsdpPeerGrpPeerAuthKey=tmnxMsdpPeerGrpPeerAuthKey, tmnxMsdpLocalAddress=tmnxMsdpLocalAddress, tmnxMsdpPeerGrpPeerExportPolicy2=tmnxMsdpPeerGrpPeerExportPolicy2, tmnxMsdpPeerGrpPeerImportPolicy1=tmnxMsdpPeerGrpPeerImportPolicy1, tmnxMsdpPeerGrpPeerLocalAddress=tmnxMsdpPeerGrpPeerLocalAddress, tmnxMsdpPeerGrpPeerMsgRcvRtThd=tmnxMsdpPeerGrpPeerMsgRcvRtThd, tmnxMsdpImportPolicy4=tmnxMsdpImportPolicy4, tmnxMsdpStatusActSrcLimExceeded=tmnxMsdpStatusActSrcLimExceeded, tmnxMsdpPeerGroupRowStatus=tmnxMsdpPeerGroupRowStatus, tmnxMsdpNotifyPrefix=tmnxMsdpNotifyPrefix, tmnxMsdpPeerGroupLocalAddrType=tmnxMsdpPeerGroupLocalAddrType, tmnxMsdpSARejectImportPolicy=tmnxMsdpSARejectImportPolicy, tmnxMsdpPeerExportPolicy3=tmnxMsdpPeerExportPolicy3, tmnxMsdpPeerGrpPeerAddressType=tmnxMsdpPeerGrpPeerAddressType, tmnxMsdpPeerGroupMsgRcvRate=tmnxMsdpPeerGroupMsgRcvRate, tmnxMsdpPeerGroupLocalAddress=tmnxMsdpPeerGroupLocalAddress, tmnxMsdpSrcActiveRPFPeer=tmnxMsdpSrcActiveRPFPeer, tmnxMsdpStatusPeersEstablished=tmnxMsdpStatusPeersEstablished, tmnxMsdpPeerGrpPeerImportPolicy2=tmnxMsdpPeerGrpPeerImportPolicy2, tmnxMsdpExportPolicy4=tmnxMsdpExportPolicy4, tmnxMsdpPeerAuthKey=tmnxMsdpPeerAuthKey, tmnxMsdpSourceLastExEventTime=tmnxMsdpSourceLastExEventTime, tmnxMsdpSARejectExportPolicy=tmnxMsdpSARejectExportPolicy, tmnxMsdpPeerStatsRemoteCloses=tmnxMsdpPeerStatsRemoteCloses, tmnxMsdpCompliance=tmnxMsdpCompliance, tmnxMsdpPeerExportPolicy5=tmnxMsdpPeerExportPolicy5, tmnxMsdpPeerGrpPeerDefaultPeer=tmnxMsdpPeerGrpPeerDefaultPeer, tmnxMsdpPeerStatsTable=tmnxMsdpPeerStatsTable, tmnxMsdpSrcActRejGroupAddrType=tmnxMsdpSrcActRejGroupAddrType, tmnxMsdpMaxActiveSources=tmnxMsdpMaxActiveSources, tmnxMsdpSrcActRejPeerGroupName=tmnxMsdpSrcActRejPeerGroupName, tmnxMsdpPeerGrpPeerState=tmnxMsdpPeerGrpPeerState, tmnxMsdpNotificationGroup=tmnxMsdpNotificationGroup, tmnxMsdpImportPolicy3=tmnxMsdpImportPolicy3, tmnxMsdpPeerTable=tmnxMsdpPeerTable, tmnxMsdpSrcActRejOriginRP=tmnxMsdpSrcActRejOriginRP, tmnxMsdpPeerStateTimer=tmnxMsdpPeerStateTimer, tmnxMsdpPeerGroupActMsgsExMax=tmnxMsdpPeerGroupActMsgsExMax, tmnxMsdpSrcActiveExpiryTime=tmnxMsdpSrcActiveExpiryTime, tmnxMsdpPeerStatsPeerTimeouts=tmnxMsdpPeerStatsPeerTimeouts, tmnxMsdpSourceMaxActiveSources=tmnxMsdpSourceMaxActiveSources, tmnxMsdpPeerMaxActiveSources=tmnxMsdpPeerMaxActiveSources, tmnxMsdpSourceDiscMethod=tmnxMsdpSourceDiscMethod, tmnxMsdpPeerImportPolicy1=tmnxMsdpPeerImportPolicy1, tmnxMsdpMsgRcvRateThd=tmnxMsdpMsgRcvRateThd, tmnxMsdpPeerAuthKeyEncrypted=tmnxMsdpPeerAuthKeyEncrypted, tmnxMsdpPeerGrpPeerEntry=tmnxMsdpPeerGrpPeerEntry, tmnxMsdpSrcActiveEntry=tmnxMsdpSrcActiveEntry, tmnxMsdpSrcActRejSourceAddrType=tmnxMsdpSrcActRejSourceAddrType, tmnxMsdpPeerGroupName=tmnxMsdpPeerGroupName, tmnxMsdpPeerStatsKAMsgsSent=tmnxMsdpPeerStatsKAMsgsSent, tmnxMsdpPeerGroupEntry=tmnxMsdpPeerGroupEntry, tmnxMsdpPeerSAAccepted=tmnxMsdpPeerSAAccepted, tmnxMsdpPeerGroupMsgRcvRateThd=tmnxMsdpPeerGroupMsgRcvRateThd, tmnxMsdpPeerGrpPeerExportPolicy1=tmnxMsdpPeerGrpPeerExportPolicy1, tmnxMsdpSrcActRejEntry=tmnxMsdpSrcActRejEntry, tmnxMsdpPeerStatsSAReqMsgsRecvd=tmnxMsdpPeerStatsSAReqMsgsRecvd, tmnxMsdpPeerDefaultPeer=tmnxMsdpPeerDefaultPeer, tmnxMsdpPeerGroupMaxActSources=tmnxMsdpPeerGroupMaxActSources, tmnxMsdpPeerGrpPeerAddress=tmnxMsdpPeerGrpPeerAddress, tmnxMsdpExportPolicy1=tmnxMsdpExportPolicy1, tmnxMsdpPeerStatsSAMsgsRecvd=tmnxMsdpPeerStatsSAMsgsRecvd, tmnxMsdpSourceSrcActMsgsExMax=tmnxMsdpSourceSrcActMsgsExMax, tmnxMsdpConformance=tmnxMsdpConformance, tmnxMsdpSrcActiveSourceAddrType=tmnxMsdpSrcActiveSourceAddrType, tmnxMsdpPeerLocalAddressType=tmnxMsdpPeerLocalAddressType, tmnxMsdpPeerGrpPeerMsgRcvRt=tmnxMsdpPeerGrpPeerMsgRcvRt, tmnxMsdpSrcActRejGroupAddr=tmnxMsdpSrcActRejGroupAddr, tmnxMsdpPeerGroupExportPolicy2=tmnxMsdpPeerGroupExportPolicy2, tmnxMsdpSrcActiveTable=tmnxMsdpSrcActiveTable, tmnxMsdpMsgRcvRateTime=tmnxMsdpMsgRcvRateTime, tmnxMsdpPeerStatsSARejImpPolicy=tmnxMsdpPeerStatsSARejImpPolicy, tmnxMsdpPeerGrpPeerStateTimer=tmnxMsdpPeerGrpPeerStateTimer, tmnxMsdpSACacheLifetime=tmnxMsdpSACacheLifetime, tmnxMsdpAdminState=tmnxMsdpAdminState, tmnxMsdpSrcActiveGroup=tmnxMsdpSrcActiveGroup, tmnxMsdpPeerStatsErrorMsgsRecvd=tmnxMsdpPeerStatsErrorMsgsRecvd, tmnxMsdpMsgRcvRate=tmnxMsdpMsgRcvRate, tmnxMsdpPeerGroupExportPolicy5=tmnxMsdpPeerGroupExportPolicy5, timetraMsdpMIBModule=timetraMsdpMIBModule, tmnxMsdpPeerStatsKAMsgsRecvd=tmnxMsdpPeerStatsKAMsgsRecvd, tmnxMsdpPeerGrpPeerConRetry=tmnxMsdpPeerGrpPeerConRetry, tmnxMsdpPeerExportPolicy1=tmnxMsdpPeerExportPolicy1, tmnxMsdpRpfLookupSequence=tmnxMsdpRpfLookupSequence, tmnxMsdpSourcePrefix=tmnxMsdpSourcePrefix, tmnxMsdpPeerGrpPeerLastASLimit=tmnxMsdpPeerGrpPeerLastASLimit, tmnxMsdpPeerGrpSARejImpPolicy=tmnxMsdpPeerGrpSARejImpPolicy, tmnxMsdpPeerExportPolicy2=tmnxMsdpPeerExportPolicy2, tmnxMsdpPeerGrpPeerImportPolicy4=tmnxMsdpPeerGrpPeerImportPolicy4, tmnxMsdpPeerMsgRcvRateTime=tmnxMsdpPeerMsgRcvRateTime, tmnxMsdpSrcActivePeerLearntFrom=tmnxMsdpSrcActivePeerLearntFrom, tmnxMsdpImportPolicy5=tmnxMsdpImportPolicy5, tmnxMsdpSrcActRejTable=tmnxMsdpSrcActRejTable, tmnxMsdpSourceSrcActMsgsExcd=tmnxMsdpSourceSrcActMsgsExcd, tmnxMsdpSrcActRejPeerAddrType=tmnxMsdpSrcActRejPeerAddrType, tmnxMsdpCompliances=tmnxMsdpCompliances, tmnxMsdpGroups=tmnxMsdpGroups, tmnxMsdpSourceMask=tmnxMsdpSourceMask, tmnxMsdpPeerRowStatus=tmnxMsdpPeerRowStatus, tmnxMsdpSrcActRejPeerAddr=tmnxMsdpSrcActRejPeerAddr, tmnxMsdpSrcActRejFailureReason=tmnxMsdpSrcActRejFailureReason, tmnxMsdpPeerGroupImportPolicy3=tmnxMsdpPeerGroupImportPolicy3, tmnxMsdpPeerImportPolicy3=tmnxMsdpPeerImportPolicy3, tmnxMsdpSourceRowStatus=tmnxMsdpSourceRowStatus, tmnxMsdpPeerTimeout=tmnxMsdpPeerTimeout, tmnxMsdpRPFFailure=tmnxMsdpRPFFailure, tmnxMsdpStatusPeerCount=tmnxMsdpStatusPeerCount, tmnxMsdpPeerGrpPeerSARecvd=tmnxMsdpPeerGrpPeerSARecvd, tmnxMsdpPeerMsgRcvRate=tmnxMsdpPeerMsgRcvRate, tmnxMsdpSrcActiveOriginRPType=tmnxMsdpSrcActiveOriginRPType, tmnxMsdpSrcActRejOriginRPType=tmnxMsdpSrcActRejOriginRPType, tmnxMsdpPeerStatsLastMsgPeer=tmnxMsdpPeerStatsLastMsgPeer, tmnxMsdpGlobals=tmnxMsdpGlobals, PYSNMP_MODULE_ID=timetraMsdpMIBModule, tmnxMsdpSrcActivePrLearnFrType=tmnxMsdpSrcActivePrLearnFrType, tmnxMsdpPeerGrpPeerTimeout=tmnxMsdpPeerGrpPeerTimeout, tmnxMsdpPeerGrpPeerExportPolicy5=tmnxMsdpPeerGrpPeerExportPolicy5, tmnxMsdpPeerGrpPeerSAAccepted=tmnxMsdpPeerGrpPeerSAAccepted, tmnxMsdpPeerConRetry=tmnxMsdpPeerConRetry, tmnxMsdpPeerGrpPeerLocAddrType=tmnxMsdpPeerGrpPeerLocAddrType, tmnxMsdpPeerStatsSARejExpPolicy=tmnxMsdpPeerStatsSARejExpPolicy, tmnxMsdpPeerGroupImportPolicy4=tmnxMsdpPeerGroupImportPolicy4, tmnxMsdpImportPolicy2=tmnxMsdpImportPolicy2, tmnxMsdpStatusLastTimeUp=tmnxMsdpStatusLastTimeUp, tmnxMsdpPeerGroupMsgRcvRateTime=tmnxMsdpPeerGroupMsgRcvRateTime, tmnxMsdpPeerAddress=tmnxMsdpPeerAddress, tmnxMsdpPeerMsgRcvRateThd=tmnxMsdpPeerMsgRcvRateThd, tmnxMsdpExportPolicy5=tmnxMsdpExportPolicy5, tmnxMsdpSrcActiveSourceAddr=tmnxMsdpSrcActiveSourceAddr, tmnxMsdpPeerGrpPeerRowStatus=tmnxMsdpPeerGrpPeerRowStatus, tmnxMsdpPeerGrpPeerLastUpOrDown=tmnxMsdpPeerGrpPeerLastUpOrDown, tmnxMsdpPeerStatsActSrcLimExcd=tmnxMsdpPeerStatsActSrcLimExcd, tmnxMsdpPeerLastUpOrDown=tmnxMsdpPeerLastUpOrDown, tmnxMsdpPeerGrpPeerMaxActSrcs=tmnxMsdpPeerGrpPeerMaxActSrcs, tmnxMsdpPeerImportPolicy4=tmnxMsdpPeerImportPolicy4, tmnxMsdpPeerGroupGroup=tmnxMsdpPeerGroupGroup, tmnxMsdpObjects=tmnxMsdpObjects, tmnxMsdpStatusSACount=tmnxMsdpStatusSACount, tmnxMsdpPeerSARecvd=tmnxMsdpPeerSARecvd, tmnxMsdpSrcActiveGroupAddr=tmnxMsdpSrcActiveGroupAddr, tmnxMsdpGroupSrcActMsgsExcd=tmnxMsdpGroupSrcActMsgsExcd, tmnxMsdpPeerStatsSAResMsgsRecvd=tmnxMsdpPeerStatsSAResMsgsRecvd, tmnxMsdpPeerGroupExportPolicy3=tmnxMsdpPeerGroupExportPolicy3, tmnxMsdpPeerGrpSARejExpPolicy=tmnxMsdpPeerGrpSARejExpPolicy, tmnxMsdpSourceGroup=tmnxMsdpSourceGroup, tmnxMsdpPeerGrpPeerMsgRcvRtTime=tmnxMsdpPeerGrpPeerMsgRcvRtTime, tmnxMsdpPeerStatsLastStChange=tmnxMsdpPeerStatsLastStChange, tmnxMsdpSourcePrefixType=tmnxMsdpSourcePrefixType, tmnxMsdpSrcActiveOriginRP=tmnxMsdpSrcActiveOriginRP, tmnxMsdpSrcActiveUpTime=tmnxMsdpSrcActiveUpTime, tmnxMsdpPeerGrpPeerExportPolicy3=tmnxMsdpPeerGrpPeerExportPolicy3, tmnxMsdpPeerGroupImportPolicy5=tmnxMsdpPeerGroupImportPolicy5, tmnxMsdpPeerStatsSAMsgsSent=tmnxMsdpPeerStatsSAMsgsSent, tmnxMsdpSrcActiveRejGroup=tmnxMsdpSrcActiveRejGroup, tmnxMsdpPeerStatsUnknMsgsRecvd=tmnxMsdpPeerStatsUnknMsgsRecvd, tmnxMsdpPeerGrpPeerExportPolicy4=tmnxMsdpPeerGrpPeerExportPolicy4, tmnxMsdpPeerStatsSAResMsgsSent=tmnxMsdpPeerStatsSAResMsgsSent, tmnxMsdpPeerAddressType=tmnxMsdpPeerAddressType, tmnxMsdpPeerGrpPeerAdminState=tmnxMsdpPeerGrpPeerAdminState, tmnxMsdpPeerStatsSALearnt=tmnxMsdpPeerStatsSALearnt, tmnxMsdpDataEncapsulation=tmnxMsdpDataEncapsulation, tmnxMsdpPeerGrpPeerImportPolicy3=tmnxMsdpPeerGrpPeerImportPolicy3, tmnxMsdpPeerGroupExportPolicy4=tmnxMsdpPeerGroupExportPolicy4, tmnxMsdpPeerState=tmnxMsdpPeerState, tmnxMsdpPeerLastASLimit=tmnxMsdpPeerLastASLimit, tmnxMsdpPeerGrpPeerTable=tmnxMsdpPeerGrpPeerTable, tmnxMsdpPeerGroupTable=tmnxMsdpPeerGroupTable, tmnxMsdpImportPolicy1=tmnxMsdpImportPolicy1, tmnxMsdpExportPolicy2=tmnxMsdpExportPolicy2, tmnxMsdpV10v0Compliance=tmnxMsdpV10v0Compliance, tmnxMsdpPeerGroupAdminState=tmnxMsdpPeerGroupAdminState, tmnxMsdpSourceTable=tmnxMsdpSourceTable, tmnxMsdpSrcActiveGroupAddrType=tmnxMsdpSrcActiveGroupAddrType, tmnxMsdpActSrcLimExcd=tmnxMsdpActSrcLimExcd, tmnxMsdpPeerGroupImportPolicy2=tmnxMsdpPeerGroupImportPolicy2, tmnxMsdpPeerGrpPeerAKeyEncrypt=tmnxMsdpPeerGrpPeerAKeyEncrypt, tmnxMsdpSourceEntry=tmnxMsdpSourceEntry, tmnxMsdpSrcActiveRPFPeerType=tmnxMsdpSrcActiveRPFPeerType, tmnxMsdpPeerGrpPeerImportPolicy5=tmnxMsdpPeerGrpPeerImportPolicy5, tmnxMsdpExportPolicy3=tmnxMsdpExportPolicy3, tmnxMsdpPeerStatsEntry=tmnxMsdpPeerStatsEntry, tmnxMsdpPeerAdminState=tmnxMsdpPeerAdminState, tmnxMsdpPeerImportPolicy2=tmnxMsdpPeerImportPolicy2, tmnxMsdpPeerGroupImportPolicy1=tmnxMsdpPeerGroupImportPolicy1, tmnxMsdpPeerEntry=tmnxMsdpPeerEntry)
