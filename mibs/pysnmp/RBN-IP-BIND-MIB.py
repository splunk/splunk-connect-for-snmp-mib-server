#
# PySNMP MIB module RBN-IP-BIND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBN-IP-BIND-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:44:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
rbnMgmt, = mibBuilder.importSymbols("RBN-SMI", "rbnMgmt")
RbnCircuitHandle, = mibBuilder.importSymbols("RBN-TC", "RbnCircuitHandle")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, iso, Counter32, Unsigned32, Counter64, IpAddress, NotificationType, ModuleIdentity, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Counter32", "Unsigned32", "Counter64", "IpAddress", "NotificationType", "ModuleIdentity", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rbnIpBindMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2352, 2, 26))
rbnIpBindMib.setRevisions(('2002-08-20 12:00',))
if mibBuilder.loadTexts: rbnIpBindMib.setLastUpdated('200208201200Z')
if mibBuilder.loadTexts: rbnIpBindMib.setOrganization('Redback Networks, Inc.')
rbnIpBindMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 26, 0))
rbnIpBindMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1))
rbnIpBindMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 26, 2))
rbnIpBindTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1), )
if mibBuilder.loadTexts: rbnIpBindTable.setStatus('current')
rbnIpBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RBN-IP-BIND-MIB", "rbnIpBindCircuitHandle"))
if mibBuilder.loadTexts: rbnIpBindEntry.setStatus('current')
rbnIpBindCircuitHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1, 1, 1), RbnCircuitHandle())
if mibBuilder.loadTexts: rbnIpBindCircuitHandle.setStatus('current')
rbnIpBindIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIpBindIfIndex.setStatus('current')
rbnIpBindHierarchicalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIpBindHierarchicalIfIndex.setStatus('current')
rbnIpBindCircuitDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIpBindCircuitDescr.setStatus('current')
rbnIpBindContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 26, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIpBindContextName.setStatus('current')
rbnIpBindCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 26, 2, 1))
rbnIpBindGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 26, 2, 2))
rbnIpBindCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 26, 2, 1, 1)).setObjects(("RBN-IP-BIND-MIB", "rbnIpBindDisplayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnIpBindCompliance = rbnIpBindCompliance.setStatus('current')
rbnIpBindDisplayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 26, 2, 2, 1)).setObjects(("RBN-IP-BIND-MIB", "rbnIpBindIfIndex"), ("RBN-IP-BIND-MIB", "rbnIpBindHierarchicalIfIndex"), ("RBN-IP-BIND-MIB", "rbnIpBindCircuitDescr"), ("RBN-IP-BIND-MIB", "rbnIpBindContextName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnIpBindDisplayGroup = rbnIpBindDisplayGroup.setStatus('current')
mibBuilder.exportSymbols("RBN-IP-BIND-MIB", rbnIpBindEntry=rbnIpBindEntry, rbnIpBindMibObjects=rbnIpBindMibObjects, rbnIpBindDisplayGroup=rbnIpBindDisplayGroup, rbnIpBindCompliances=rbnIpBindCompliances, PYSNMP_MODULE_ID=rbnIpBindMib, rbnIpBindIfIndex=rbnIpBindIfIndex, rbnIpBindContextName=rbnIpBindContextName, rbnIpBindTable=rbnIpBindTable, rbnIpBindHierarchicalIfIndex=rbnIpBindHierarchicalIfIndex, rbnIpBindGroups=rbnIpBindGroups, rbnIpBindMibConformance=rbnIpBindMibConformance, rbnIpBindCompliance=rbnIpBindCompliance, rbnIpBindMib=rbnIpBindMib, rbnIpBindMibNotifications=rbnIpBindMibNotifications, rbnIpBindCircuitDescr=rbnIpBindCircuitDescr, rbnIpBindCircuitHandle=rbnIpBindCircuitHandle)
