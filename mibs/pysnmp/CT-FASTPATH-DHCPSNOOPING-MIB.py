#
# PySNMP MIB module CT-FASTPATH-DHCPSNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CT-FASTPATH-DHCPSNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:13:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ctDhcpSnoopingExpMib, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctDhcpSnoopingExpMib")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, iso, MibIdentifier, ModuleIdentity, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Gauge32, Bits, Integer32, Unsigned32, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "MibIdentifier", "ModuleIdentity", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Gauge32", "Bits", "Integer32", "Unsigned32", "Counter32", "NotificationType")
DisplayString, RowStatus, MacAddress, PhysAddress, TextualConvention, TruthValue, StorageType, RowPointer = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "MacAddress", "PhysAddress", "TextualConvention", "TruthValue", "StorageType", "RowPointer")
ctFastPathDHCPSnoopingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1))
if mibBuilder.loadTexts: ctFastPathDHCPSnoopingMIB.setLastUpdated('200807231519Z')
if mibBuilder.loadTexts: ctFastPathDHCPSnoopingMIB.setOrganization('Enterasys Networks, Inc.')
ctAgentDhcpSnoopingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1))
ctAgentDhcpSnoopingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingAdminMode.setStatus('current')
ctAgentDhcpSnoopingVerifyMac = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingVerifyMac.setStatus('current')
ctAgentDhcpSnoopingVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 3), )
if mibBuilder.loadTexts: ctAgentDhcpSnoopingVlanConfigTable.setStatus('current')
ctAgentDhcpSnoopingVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 3, 1), ).setIndexNames((0, "CT-FASTPATH-DHCPSNOOPING-MIB", "ctAgentDhcpSnoopingVlanIndex"))
if mibBuilder.loadTexts: ctAgentDhcpSnoopingVlanConfigEntry.setStatus('current')
ctAgentDhcpSnoopingVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: ctAgentDhcpSnoopingVlanIndex.setStatus('current')
ctAgentDhcpSnoopingVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingVlanEnable.setStatus('current')
ctAgentDhcpSnoopingIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 4), )
if mibBuilder.loadTexts: ctAgentDhcpSnoopingIfConfigTable.setStatus('current')
ctAgentDhcpSnoopingIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctAgentDhcpSnoopingIfConfigEntry.setStatus('current')
ctAgentDhcpSnoopingIfTrustEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingIfTrustEnable.setStatus('current')
ctAgentDhcpSnoopingIfLogEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingIfLogEnable.setStatus('current')
ctAgentDhcpSnoopingIfRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(15)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingIfRateLimit.setStatus('current')
ctAgentDhcpSnoopingIfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingIfBurstInterval.setStatus('current')
ctAgentDhcpSnoopingStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingStatsReset.setStatus('current')
ctAgentDhcpSnoopingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 7), )
if mibBuilder.loadTexts: ctAgentDhcpSnoopingStatsTable.setStatus('current')
ctAgentDhcpSnoopingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctAgentDhcpSnoopingStatsEntry.setStatus('current')
ctAgentDhcpSnoopingMacVerifyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingMacVerifyFailures.setStatus('current')
ctAgentDhcpSnoopingInvalidClientMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingInvalidClientMessages.setStatus('current')
ctAgentDhcpSnoopingInvalidServerMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDhcpSnoopingInvalidServerMessages.setStatus('current')
ctAgentStaticDsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10), )
if mibBuilder.loadTexts: ctAgentStaticDsBindingTable.setStatus('current')
ctAgentStaticDsBinding = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10, 1), ).setIndexNames((0, "CT-FASTPATH-DHCPSNOOPING-MIB", "ctAgentStaticDsBindingMacAddr"))
if mibBuilder.loadTexts: ctAgentStaticDsBinding.setStatus('current')
ctAgentStaticDsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10, 1, 1), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentStaticDsBindingIfIndex.setStatus('current')
ctAgentStaticDsBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10, 1, 2), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentStaticDsBindingVlanId.setStatus('current')
ctAgentStaticDsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentStaticDsBindingMacAddr.setStatus('current')
ctAgentStaticDsBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentStaticDsBindingIpAddr.setStatus('current')
ctAgentStaticDsBindingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ctAgentStaticDsBindingRowStatus.setStatus('current')
ctAgentDynamicDsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 11), )
if mibBuilder.loadTexts: ctAgentDynamicDsBindingTable.setStatus('current')
ctAgentDynamicDsBinding = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 11, 11), ).setIndexNames((0, "CT-FASTPATH-DHCPSNOOPING-MIB", "ctAgentDynamicDsBindingMacAddr"))
if mibBuilder.loadTexts: ctAgentDynamicDsBinding.setStatus('current')
ctAgentDynamicDsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 11, 11, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDynamicDsBindingIfIndex.setStatus('current')
ctAgentDynamicDsBindingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 11, 11, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDynamicDsBindingVlanId.setStatus('current')
ctAgentDynamicDsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 11, 11, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDynamicDsBindingMacAddr.setStatus('current')
ctAgentDynamicDsBindingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 11, 11, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctAgentDynamicDsBindingIpAddr.setStatus('current')
ctDhcpSnoopingIntfErrorDisabledTrap = NotificationType((1, 3, 6, 1, 4, 1, 52, 4, 2, 35, 1, 1, 12)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ctDhcpSnoopingIntfErrorDisabledTrap.setStatus('current')
mibBuilder.exportSymbols("CT-FASTPATH-DHCPSNOOPING-MIB", ctAgentDynamicDsBinding=ctAgentDynamicDsBinding, ctAgentStaticDsBindingRowStatus=ctAgentStaticDsBindingRowStatus, ctAgentStaticDsBindingMacAddr=ctAgentStaticDsBindingMacAddr, ctAgentDhcpSnoopingStatsEntry=ctAgentDhcpSnoopingStatsEntry, ctAgentDhcpSnoopingInvalidClientMessages=ctAgentDhcpSnoopingInvalidClientMessages, ctAgentStaticDsBinding=ctAgentStaticDsBinding, ctAgentStaticDsBindingIpAddr=ctAgentStaticDsBindingIpAddr, ctAgentStaticDsBindingVlanId=ctAgentStaticDsBindingVlanId, ctAgentDhcpSnoopingIfConfigEntry=ctAgentDhcpSnoopingIfConfigEntry, ctAgentDynamicDsBindingMacAddr=ctAgentDynamicDsBindingMacAddr, ctAgentDhcpSnoopingIfConfigTable=ctAgentDhcpSnoopingIfConfigTable, ctAgentDhcpSnoopingStatsReset=ctAgentDhcpSnoopingStatsReset, ctAgentStaticDsBindingIfIndex=ctAgentStaticDsBindingIfIndex, PYSNMP_MODULE_ID=ctFastPathDHCPSnoopingMIB, ctAgentDhcpSnoopingVerifyMac=ctAgentDhcpSnoopingVerifyMac, ctAgentDhcpSnoopingStatsTable=ctAgentDhcpSnoopingStatsTable, ctAgentDhcpSnoopingIfBurstInterval=ctAgentDhcpSnoopingIfBurstInterval, ctAgentDynamicDsBindingIfIndex=ctAgentDynamicDsBindingIfIndex, ctAgentDhcpSnoopingVlanEnable=ctAgentDhcpSnoopingVlanEnable, ctAgentDhcpSnoopingVlanConfigTable=ctAgentDhcpSnoopingVlanConfigTable, ctAgentDhcpSnoopingIfLogEnable=ctAgentDhcpSnoopingIfLogEnable, ctAgentDynamicDsBindingVlanId=ctAgentDynamicDsBindingVlanId, ctAgentDhcpSnoopingInvalidServerMessages=ctAgentDhcpSnoopingInvalidServerMessages, ctAgentStaticDsBindingTable=ctAgentStaticDsBindingTable, ctAgentDhcpSnoopingVlanIndex=ctAgentDhcpSnoopingVlanIndex, ctAgentDhcpSnoopingMacVerifyFailures=ctAgentDhcpSnoopingMacVerifyFailures, ctAgentDhcpSnoopingAdminMode=ctAgentDhcpSnoopingAdminMode, ctAgentDynamicDsBindingTable=ctAgentDynamicDsBindingTable, ctAgentDynamicDsBindingIpAddr=ctAgentDynamicDsBindingIpAddr, ctAgentDhcpSnoopingIfTrustEnable=ctAgentDhcpSnoopingIfTrustEnable, ctAgentDhcpSnoopingVlanConfigEntry=ctAgentDhcpSnoopingVlanConfigEntry, ctAgentDhcpSnoopingIfRateLimit=ctAgentDhcpSnoopingIfRateLimit, ctDhcpSnoopingIntfErrorDisabledTrap=ctDhcpSnoopingIntfErrorDisabledTrap, ctAgentDhcpSnoopingConfigGroup=ctAgentDhcpSnoopingConfigGroup, ctFastPathDHCPSnoopingMIB=ctFastPathDHCPSnoopingMIB)
