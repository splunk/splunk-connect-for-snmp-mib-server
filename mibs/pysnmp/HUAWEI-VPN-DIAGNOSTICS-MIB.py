#
# PySNMP MIB module HUAWEI-VPN-DIAGNOSTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VPN-DIAGNOSTICS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:38:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
HWL2VpnVcEncapsType, = mibBuilder.importSymbols("HUAWEI-VPLS-EXT-MIB", "HWL2VpnVcEncapsType")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, Bits, IpAddress, TimeTicks, Integer32, iso, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, mib_2, ObjectIdentity, MibIdentifier, NotificationType, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "IpAddress", "TimeTicks", "Integer32", "iso", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mib-2", "ObjectIdentity", "MibIdentifier", "NotificationType", "ModuleIdentity", "Gauge32")
MacAddress, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString")
vpndiagnostics = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172))
vpndiagnostics.setRevisions(('2014-01-18 17:22', '2013-12-16 09:58', '2013-07-16 16:00', '2008-06-06 16:00',))
if mibBuilder.loadTexts: vpndiagnostics.setLastUpdated('201401181722Z')
if mibBuilder.loadTexts: vpndiagnostics.setOrganization('Huawei Technologies Co.,Ltd.')
class MacOpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("populate", 1), ("purge", 2))

macoper = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1))
populateBase = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1))
hwOamMacPopulateCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacPopulateCount.setStatus('current')
hwOamMacPurgeCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacPurgeCount.setStatus('current')
hwOamMacPurgeRegCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacPurgeRegCount.setStatus('current')
hwOamMacCountReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("populatereset", 1), ("purgereset", 2), ("purgeregreset", 3), ("allreset", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwOamMacCountReset.setStatus('current')
hwOamMacSwitch = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwOamMacSwitch.setStatus('current')
hwOamMacEntryNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacEntryNum.setStatus('current')
hwOamMacOperTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2), )
if mibBuilder.loadTexts: hwOamMacOperTable.setStatus('current')
hwOamMacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperIndex"))
if mibBuilder.loadTexts: hwOamMacOperEntry.setStatus('current')
hwOamMacOperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: hwOamMacOperIndex.setStatus('current')
hwOamMacOperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperAddress.setStatus('current')
hwOamMacOperVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperVsiName.setStatus('current')
hwOamMacOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 4), MacOpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperType.setStatus('current')
hwOamMacOperRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 5), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperRegister.setStatus('current')
hwOamMacOperFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 6), EnabledStatus().clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperFlood.setStatus('current')
hwOamMacOperNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperNum.setStatus('current')
hwOamMacOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwOamMacOperRowStatus.setStatus('current')
hwOamMacListTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 3), )
if mibBuilder.loadTexts: hwOamMacListTable.setStatus('current')
hwOamMacListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 3, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacListIndex"))
if mibBuilder.loadTexts: hwOamMacListEntry.setStatus('current')
hwOamMacListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: hwOamMacListIndex.setStatus('current')
hwOamMacListAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacListAddress.setStatus('current')
hwOamMacDisplayTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4), )
if mibBuilder.loadTexts: hwOamMacDisplayTable.setStatus('current')
hwOamMacDisplayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayIndex"))
if mibBuilder.loadTexts: hwOamMacDisplayEntry.setStatus('current')
hwOamMacDisplayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: hwOamMacDisplayIndex.setStatus('current')
hwOamMacDisplayAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacDisplayAddress.setStatus('current')
hwOamMacDisplayType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1, 3), MacOpType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacDisplayType.setStatus('current')
hwOamMacDisplayVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacDisplayVsiName.setStatus('current')
hwOamMacDisplayAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacDisplayAgeTime.setStatus('current')
hwOamMacDisplayLsrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 4, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwOamMacDisplayLsrId.setStatus('current')
macoperConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5))
hwOamMacGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 1))
macoperCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 2))
macoperCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 2, 1)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwPopuBaseGroup"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperGroup"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacListGroup"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    macoperCompliance = macoperCompliance.setStatus('current')
hwPopuBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 1, 1)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacPopulateCount"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacPurgeCount"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacPurgeRegCount"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacCountReset"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacSwitch"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacEntryNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPopuBaseGroup = hwPopuBaseGroup.setStatus('current')
hwOamMacOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 1, 2)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperAddress"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperVsiName"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperRegister"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperFlood"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperNum"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacOperRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwOamMacOperGroup = hwOamMacOperGroup.setStatus('current')
hwOamMacListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 1, 3)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacListAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwOamMacListGroup = hwOamMacListGroup.setStatus('current')
hwOamMacDisplayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 1, 5, 1, 4)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayAddress"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayVsiName"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayAgeTime"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwOamMacDisplayLsrId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwOamMacDisplayGroup = hwOamMacDisplayGroup.setStatus('current')
hwVpnCfgPing = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2))
hwVpnCfgPingTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1), )
if mibBuilder.loadTexts: hwVpnCfgPingTable.setStatus('current')
hwVpnCfgPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingIndex"))
if mibBuilder.loadTexts: hwVpnCfgPingEntry.setStatus('current')
hwVpnCfgPingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwVpnCfgPingIndex.setStatus('current')
hwVpnCfgPingPeerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingPeerIpType.setStatus('current')
hwVpnCfgPingPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingPeerIp.setStatus('current')
hwVpnCfgPingVpnIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("martiniVPLS", 1), ("kompellaVPLS", 2), ("l3vpn", 3), ("pwe3", 4), ("martiniVLL", 5), ("bgpadVPLS", 6), ("unknown", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingVpnIdType.setStatus('current')
hwVpnCfgPingVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingVpnId.setStatus('current')
hwVpnCfgPingPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingPwId.setStatus('current')
hwVpnCfgPingTunnelUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("localOnly", 2), ("remoteOnly", 3), ("localAndRemote", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingTunnelUsed.setStatus('current')
hwVpnCfgPingOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 8), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingOperation.setStatus('current')
hwVpnCfgPingResultDetail = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("requestSentReplyRecieved", 1), ("requestSentReplyTimeout", 2), ("requestFailedReplyFailed", 3), ("noResult", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultDetail.setStatus('current')
hwVpnCfgPingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingRowStatus.setStatus('current')
hwVpnCfgPingSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("primary", 0), ("secondary", 1), ("unknown", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingSecondary.setStatus('current')
hwVpnCfgPingIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 12), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingIfName.setStatus('current')
hwVpnCfgPingPwIdNew = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 1, 1, 13), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVpnCfgPingPwIdNew.setStatus('current')
hwVpnCfgPingResultTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2), )
if mibBuilder.loadTexts: hwVpnCfgPingResultTable.setStatus('current')
hwVpnCfgPingResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingIndex"), (0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultLocation"))
if mibBuilder.loadTexts: hwVpnCfgPingResultEntry.setStatus('current')
hwVpnCfgPingResultLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2))))
if mibBuilder.loadTexts: hwVpnCfgPingResultLocation.setStatus('current')
hwVpnCfgPingResultVpnIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("martiniVPLS", 1), ("kompellaVPLS", 2), ("l3vpn", 3), ("pwe3", 4), ("martiniVLL", 5), ("bgpadVPLS", 6), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultVpnIdType.setStatus('current')
hwVpnCfgPingResultVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultVpnId.setStatus('current')
hwVpnCfgPingResultDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultDesc.setStatus('current')
hwVpnCfgPingResultVpnAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultVpnAdminStatus.setStatus('current')
hwVpnCfgPingResultOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultOperStatus.setStatus('current')
hwVpnCfgPingResultMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultMtu.setStatus('current')
hwVpnCfgPingResultCeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultCeCount.setStatus('current')
hwVpnCfgPingResultActualIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultActualIpType.setStatus('current')
hwVpnCfgPingResultActualIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultActualIp.setStatus('current')
hwVpnCfgPingResultPeerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultPeerIpType.setStatus('current')
hwVpnCfgPingResultPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultPeerIp.setStatus('current')
hwVpnCfgPingResultPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultPwId.setStatus('current')
hwVpnCfgPingResultPeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("upe", 1), ("spe", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultPeType.setStatus('current')
hwVpnCfgPingResultVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 15), HWL2VpnVcEncapsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultVcType.setStatus('current')
hwVpnCfgPingResultLabelIn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultLabelIn.setStatus('current')
hwVpnCfgPingResultLableOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultLableOut.setStatus('current')
hwVpnCfgPingResultControlWord = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultControlWord.setStatus('current')
hwVpnCfgPingResultPriOrSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("primary", 0), ("secondary", 1), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultPriOrSec.setStatus('current')
hwVpnCfgPingResultVplsID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 20), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultVplsID.setStatus('current')
hwVpnCfgPingResultRD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 21), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultRD.setStatus('current')
hwVpnCfgPingResultPwIdNew = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultPwIdNew.setStatus('current')
hwVpnCfgPingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3))
hwVpnCfgPingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 1))
hwVpnCfgPingCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 2))
hwVpnCfgPingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 2, 1)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingGroup"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultGroup"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultIRtGroup"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultERtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVpnCfgPingCompliance = hwVpnCfgPingCompliance.setStatus('current')
hwVpnCfgPingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 1, 1)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingPeerIpType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingPeerIp"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingVpnIdType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingVpnId"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingPwId"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingTunnelUsed"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingOperation"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultDetail"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingRowStatus"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingIfName"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingSecondary"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingPwIdNew"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVpnCfgPingGroup = hwVpnCfgPingGroup.setStatus('current')
hwVpnCfgPingResultGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 1, 2)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultVpnIdType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultVpnId"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultDesc"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultVpnAdminStatus"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultOperStatus"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultMtu"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultCeCount"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultActualIpType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultActualIp"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultPeerIpType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultPeerIp"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultPwId"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultPeType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultVcType"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultLabelIn"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultLableOut"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultControlWord"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultPriOrSec"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultVplsID"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultRD"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultPwIdNew"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVpnCfgPingResultGroup = hwVpnCfgPingResultGroup.setStatus('current')
hwVpnCfgPingResultIRtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 1, 3)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultIRtIndex"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultIRt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVpnCfgPingResultIRtGroup = hwVpnCfgPingResultIRtGroup.setStatus('current')
hwVpnCfgPingResultERtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 3, 1, 4)).setObjects(("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultERtIndex"), ("HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultERt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVpnCfgPingResultERtGroup = hwVpnCfgPingResultERtGroup.setStatus('current')
hwVpnCfgPingResultIRtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 4), )
if mibBuilder.loadTexts: hwVpnCfgPingResultIRtTable.setStatus('current')
hwVpnCfgPingResultIRtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 4, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingIndex"), (0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultLocation"), (0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultIRtIndex"))
if mibBuilder.loadTexts: hwVpnCfgPingResultIRtEntry.setStatus('current')
hwVpnCfgPingResultIRtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: hwVpnCfgPingResultIRtIndex.setStatus('current')
hwVpnCfgPingResultIRt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 4, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultIRt.setStatus('current')
hwVpnCfgPingResultERtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 5), )
if mibBuilder.loadTexts: hwVpnCfgPingResultERtTable.setStatus('current')
hwVpnCfgPingResultERtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 5, 1), ).setIndexNames((0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingIndex"), (0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultLocation"), (0, "HUAWEI-VPN-DIAGNOSTICS-MIB", "hwVpnCfgPingResultERtIndex"))
if mibBuilder.loadTexts: hwVpnCfgPingResultERtEntry.setStatus('current')
hwVpnCfgPingResultERtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: hwVpnCfgPingResultERtIndex.setStatus('current')
hwVpnCfgPingResultERt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 172, 2, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVpnCfgPingResultERt.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-VPN-DIAGNOSTICS-MIB", hwOamMacOperType=hwOamMacOperType, hwVpnCfgPingPeerIp=hwVpnCfgPingPeerIp, hwOamMacOperTable=hwOamMacOperTable, macoperCompliance=macoperCompliance, hwVpnCfgPingResultERtIndex=hwVpnCfgPingResultERtIndex, hwOamMacListIndex=hwOamMacListIndex, hwVpnCfgPingResultDetail=hwVpnCfgPingResultDetail, hwVpnCfgPingIndex=hwVpnCfgPingIndex, hwVpnCfgPingResultActualIpType=hwVpnCfgPingResultActualIpType, hwPopuBaseGroup=hwPopuBaseGroup, hwVpnCfgPingCompliances=hwVpnCfgPingCompliances, macoperCompliances=macoperCompliances, hwOamMacGroup=hwOamMacGroup, hwVpnCfgPingSecondary=hwVpnCfgPingSecondary, macoperConformance=macoperConformance, hwVpnCfgPingResultERt=hwVpnCfgPingResultERt, hwOamMacDisplayAgeTime=hwOamMacDisplayAgeTime, hwVpnCfgPingResultIRtTable=hwVpnCfgPingResultIRtTable, hwVpnCfgPingResultIRt=hwVpnCfgPingResultIRt, hwOamMacPopulateCount=hwOamMacPopulateCount, hwOamMacListAddress=hwOamMacListAddress, hwOamMacDisplayVsiName=hwOamMacDisplayVsiName, hwOamMacOperEntry=hwOamMacOperEntry, hwVpnCfgPingGroup=hwVpnCfgPingGroup, hwOamMacOperAddress=hwOamMacOperAddress, macoper=macoper, hwVpnCfgPingRowStatus=hwVpnCfgPingRowStatus, hwVpnCfgPingVpnId=hwVpnCfgPingVpnId, hwOamMacDisplayAddress=hwOamMacDisplayAddress, hwVpnCfgPingResultVpnId=hwVpnCfgPingResultVpnId, hwVpnCfgPingResultPeerIpType=hwVpnCfgPingResultPeerIpType, hwVpnCfgPingResultERtGroup=hwVpnCfgPingResultERtGroup, MacOpType=MacOpType, hwOamMacListTable=hwOamMacListTable, hwVpnCfgPingResultIRtIndex=hwVpnCfgPingResultIRtIndex, hwVpnCfgPingGroups=hwVpnCfgPingGroups, hwOamMacDisplayLsrId=hwOamMacDisplayLsrId, hwVpnCfgPingResultCeCount=hwVpnCfgPingResultCeCount, hwVpnCfgPingResultVcType=hwVpnCfgPingResultVcType, hwOamMacPurgeRegCount=hwOamMacPurgeRegCount, hwVpnCfgPingResultLocation=hwVpnCfgPingResultLocation, hwVpnCfgPingVpnIdType=hwVpnCfgPingVpnIdType, hwVpnCfgPingResultPeType=hwVpnCfgPingResultPeType, hwOamMacDisplayEntry=hwOamMacDisplayEntry, hwOamMacDisplayIndex=hwOamMacDisplayIndex, hwVpnCfgPingResultIRtGroup=hwVpnCfgPingResultIRtGroup, hwVpnCfgPingPeerIpType=hwVpnCfgPingPeerIpType, hwOamMacListEntry=hwOamMacListEntry, hwVpnCfgPingResultPriOrSec=hwVpnCfgPingResultPriOrSec, hwOamMacDisplayGroup=hwOamMacDisplayGroup, hwVpnCfgPingResultOperStatus=hwVpnCfgPingResultOperStatus, hwVpnCfgPingResultERtEntry=hwVpnCfgPingResultERtEntry, vpndiagnostics=vpndiagnostics, hwOamMacOperVsiName=hwOamMacOperVsiName, hwVpnCfgPingResultTable=hwVpnCfgPingResultTable, populateBase=populateBase, hwVpnCfgPingResultLableOut=hwVpnCfgPingResultLableOut, hwVpnCfgPingResultRD=hwVpnCfgPingResultRD, hwVpnCfgPingConformance=hwVpnCfgPingConformance, hwVpnCfgPingResultEntry=hwVpnCfgPingResultEntry, hwVpnCfgPingEntry=hwVpnCfgPingEntry, hwVpnCfgPingResultIRtEntry=hwVpnCfgPingResultIRtEntry, hwVpnCfgPingResultDesc=hwVpnCfgPingResultDesc, hwOamMacSwitch=hwOamMacSwitch, hwOamMacOperRowStatus=hwOamMacOperRowStatus, hwVpnCfgPingIfName=hwVpnCfgPingIfName, hwVpnCfgPingResultPwId=hwVpnCfgPingResultPwId, hwVpnCfgPingPwIdNew=hwVpnCfgPingPwIdNew, hwVpnCfgPingResultControlWord=hwVpnCfgPingResultControlWord, hwOamMacDisplayType=hwOamMacDisplayType, hwOamMacOperIndex=hwOamMacOperIndex, hwOamMacOperGroup=hwOamMacOperGroup, hwVpnCfgPingResultVpnAdminStatus=hwVpnCfgPingResultVpnAdminStatus, hwOamMacOperNum=hwOamMacOperNum, hwOamMacOperFlood=hwOamMacOperFlood, hwOamMacCountReset=hwOamMacCountReset, hwVpnCfgPingResultGroup=hwVpnCfgPingResultGroup, PYSNMP_MODULE_ID=vpndiagnostics, hwOamMacOperRegister=hwOamMacOperRegister, hwVpnCfgPing=hwVpnCfgPing, hwVpnCfgPingCompliance=hwVpnCfgPingCompliance, hwVpnCfgPingPwId=hwVpnCfgPingPwId, hwVpnCfgPingResultPwIdNew=hwVpnCfgPingResultPwIdNew, hwOamMacPurgeCount=hwOamMacPurgeCount, hwVpnCfgPingResultVpnIdType=hwVpnCfgPingResultVpnIdType, hwOamMacDisplayTable=hwOamMacDisplayTable, hwVpnCfgPingTable=hwVpnCfgPingTable, hwVpnCfgPingResultLabelIn=hwVpnCfgPingResultLabelIn, hwVpnCfgPingResultPeerIp=hwVpnCfgPingResultPeerIp, hwVpnCfgPingResultERtTable=hwVpnCfgPingResultERtTable, hwVpnCfgPingResultMtu=hwVpnCfgPingResultMtu, hwOamMacEntryNum=hwOamMacEntryNum, hwVpnCfgPingResultVplsID=hwVpnCfgPingResultVplsID, hwVpnCfgPingOperation=hwVpnCfgPingOperation, hwVpnCfgPingResultActualIp=hwVpnCfgPingResultActualIp, hwVpnCfgPingTunnelUsed=hwVpnCfgPingTunnelUsed, hwOamMacListGroup=hwOamMacListGroup)
