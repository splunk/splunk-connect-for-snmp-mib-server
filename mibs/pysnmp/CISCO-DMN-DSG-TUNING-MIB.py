#
# PySNMP MIB module CISCO-DMN-DSG-TUNING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-TUNING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, TimeTicks, NotificationType, Counter64, Unsigned32, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, ObjectIdentity, iso, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "NotificationType", "Counter64", "Unsigned32", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "ObjectIdentity", "iso", "IpAddress", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoDSGTuning = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5))
ciscoDSGTuning.setRevisions(('2012-11-19 08:00', '2010-10-13 08:00', '2010-08-03 09:00', '2010-06-17 06:00', '2010-05-03 11:00', '2010-04-12 09:00', '2010-03-22 05:00', '2010-02-12 15:00', '2010-01-18 15:00', '2009-12-20 15:00', '2009-11-22 15:00',))
if mibBuilder.loadTexts: ciscoDSGTuning.setLastUpdated('201211190800Z')
if mibBuilder.loadTexts: ciscoDSGTuning.setOrganization('Cisco Systems, Inc.')
activeTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 1))
activeTuningTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2))
tuningStatusTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3))
siRcvTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4))
activeTuningInput = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))).clone(namedValues=NamedValues(("asi", 1), ("rf1", 2), ("rf2", 3), ("rf3", 4), ("rf4", 5), ("ipi", 6), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTuningInput.setStatus('current')
activeTuningValidateOrbPos = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("writeOnly", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTuningValidateOrbPos.setStatus('current')
activeTuningChScan = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("scan", 1), ("writeOnly", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTuningChScan.setStatus('current')
activeTunerTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1), )
if mibBuilder.loadTexts: activeTunerTable.setStatus('current')
activeTunerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "activeTunerIndex"))
if mibBuilder.loadTexts: activeTunerEntry.setStatus('current')
activeTunerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: activeTunerIndex.setStatus('current')
activeTunerRFInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 255))).clone(namedValues=NamedValues(("rf1", 2), ("rf2", 3), ("rf3", 4), ("rf4", 5), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerRFInput.setStatus('current')
activeTunerFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerFreq.setStatus('current')
activeTunerSymbolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10000, 450000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerSymbolRate.setStatus('current')
activeTunerDVBSFEC = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 6, 7, 10))).clone(namedValues=NamedValues(("oneHalf", 1), ("twoThirds", 3), ("threeQuarters", 4), ("fiveSixths", 6), ("sevenEigths", 7), ("auto", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerDVBSFEC.setStatus('current')
activeTunerModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dvbs", 1), ("dvbs2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerModulation.setStatus('current')
activeTunerRollOff = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("f35", 1), ("f25", 2), ("f20", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerRollOff.setStatus('current')
activeTunerIQ = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inverted", 1), ("nonInverted", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeTunerIQ.setStatus('current')
activeInputTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2), )
if mibBuilder.loadTexts: activeInputTable.setStatus('current')
activeInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "activeInputRFIndex"))
if mibBuilder.loadTexts: activeInputEntry.setStatus('current')
activeInputRFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rf1", 1), ("rf2", 2), ("rf3", 3), ("rf4", 4))))
if mibBuilder.loadTexts: activeInputRFIndex.setStatus('current')
activeInputLNBType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cBand", 1), ("singleKuBand", 2), ("dualKuBand", 3), ("advanced", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLNBType.setStatus('current')
activeInputLNBTrim = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLNBTrim.setStatus('current')
activeInputLNBTrim2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLNBTrim2.setStatus('current')
activeInputLocalOscFreq1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLocalOscFreq1.setStatus('current')
activeInputLocalOscFreq2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLocalOscFreq2.setStatus('current')
activeInputCrossOver = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputCrossOver.setStatus('current')
activeInputLocalOscControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLocalOscControl.setStatus('current')
activeInputOrbitalPos = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputOrbitalPos.setStatus('current')
activeInputEastWestFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("east", 1), ("west", 2), ("notApplicable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputEastWestFlag.setStatus('current')
activeInputPolarization = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("horizontal", 1), ("vertical", 2), ("automatic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputPolarization.setStatus('current')
activeInputSatName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeInputSatName.setStatus('current')
activeInputLastLNBConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputLastLNBConfig.setStatus('current')
activeInputDiSeqCEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputDiSeqCEnable.setStatus('current')
activeInputDiSeqCSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("off", 1), ("a", 2), ("b", 3), ("c", 4), ("d", 5), ("e", 6), ("f", 7), ("g", 8), ("h", 9), ("i", 10), ("j", 11), ("k", 12), ("l", 13), ("m", 14), ("n", 15), ("o", 16), ("p", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeInputDiSeqCSwitch.setStatus('current')
lnbPowerTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 3), )
if mibBuilder.loadTexts: lnbPowerTable.setStatus('current')
lnbPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "lnbPowerIndex"))
if mibBuilder.loadTexts: lnbPowerEntry.setStatus('current')
lnbPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: lnbPowerIndex.setStatus('current')
lnbPowerInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 255))).clone(namedValues=NamedValues(("rf1", 2), ("rf2", 3), ("rf3", 4), ("rf4", 5), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lnbPowerInput.setStatus('current')
lnbPowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 1), ("thirteenV", 2), ("eighteenH", 3), ("hNIT", 4), ("vNIT", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lnbPowerControl.setStatus('current')
lnbPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 1), ("normal", 2), ("noLoad", 3), ("overTemperature", 4), ("overLoad", 5), ("shortCircuit", 6), ("disabled", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnbPowerStatus.setStatus('current')
satSignalTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1), )
if mibBuilder.loadTexts: satSignalTable.setStatus('current')
satSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "satSignalIndex"))
if mibBuilder.loadTexts: satSignalEntry.setStatus('current')
satSignalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: satSignalIndex.setStatus('current')
satSignalPvBer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPvBer.setStatus('current')
satSignalQPSKBer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalQPSKBer.setStatus('current')
satSignalLdpCber = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalLdpCber.setStatus('current')
satSignalCndisp = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalCndisp.setStatus('current')
satSignalCnMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalCnMargin.setStatus('current')
satSignalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalLevel.setStatus('current')
satSignalSatDishCnMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalSatDishCnMargin.setStatus('current')
satSignalSatDishSigLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalSatDishSigLevel.setStatus('current')
satSignalPerDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPerDisp.setStatus('current')
satSignalAfc = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalAfc.setStatus('current')
satSignalUncorErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalUncorErrCnt.setStatus('current')
satSignalCorErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalCorErrCnt.setStatus('current')
satSignalRfLock = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noLock", 1), ("lock", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalRfLock.setStatus('current')
satSignalDnLkFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalDnLkFreq.setStatus('current')
satSignalLbandFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalLbandFreq.setStatus('current')
satSignalSymbolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalSymbolRate.setStatus('current')
satSignalFecRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("notApplicable", 1), ("half", 2), ("threeFifth", 3), ("twoThird", 4), ("threeQuater", 5), ("fourFifth", 6), ("fiveSixth", 7), ("sevenEight", 8), ("eightNinth", 9), ("nineTenth", 10), ("auto", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalFecRate.setStatus('current')
satSignalPolarization = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("horizontal", 1), ("vertical", 2), ("leftCircular", 3), ("rightCircular", 4), ("auto", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPolarization.setStatus('current')
satSignalModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notApplicable", 1), ("qpskDvbs", 2), ("qpskDvbs2", 3), ("eightPskDvbs2", 4), ("sixteenQamDvbs2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalModulation.setStatus('current')
satSignalIQ = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inverted", 1), ("nonlnverted", 2), ("auto", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalIQ.setStatus('current')
satSignalLnbPsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("notApplicable", 1), ("normal", 2), ("noLoad", 3), ("overTemperature", 4), ("overLoad", 5), ("shortCircuit", 6), ("disabled", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalLnbPsStatus.setStatus('current')
satSignalPilots = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPilots.setStatus('current')
satSignalLoSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("auto", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalLoSelect.setStatus('current')
satSignalPolar = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("horizontal", 1), ("vertical", 2), ("leftCircular", 3), ("rightCircular", 4), ("auto", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPolar.setStatus('current')
satSignalClearSigErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("writeOnly", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: satSignalClearSigErrCnt.setStatus('current')
satSignalValidateOrbPosDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalValidateOrbPosDate.setStatus('current')
satSignalValidateOrbPosStat = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalValidateOrbPosStat.setStatus('current')
satSignalChScanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("scanning", 2), ("done", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalChScanStatus.setStatus('current')
satSignalSigLevelRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalSigLevelRaw.setStatus('current')
satSignalP1DStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalP1DStatus.setStatus('current')
satSignalDvbS2FrameLen = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("shortFrame", 1), ("longFrame", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalDvbS2FrameLen.setStatus('current')
satSignalCnMarginRaw = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalCnMarginRaw.setStatus('current')
satSignalDvbSQpskErrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalDvbSQpskErrCount.setStatus('current')
satSignalDvbS2LdpcErrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalDvbS2LdpcErrCount.setStatus('current')
satSignalPvErrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPvErrCount.setStatus('current')
satSignalFecSyncStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalFecSyncStatus.setStatus('current')
satSignalPktErrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: satSignalPktErrCount.setStatus('current')
inputStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2), )
if mibBuilder.loadTexts: inputStatusTable.setStatus('current')
inputStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "inputStatusIndex"))
if mibBuilder.loadTexts: inputStatusEntry.setStatus('current')
inputStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: inputStatusIndex.setStatus('current')
inputStatusCurInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("rf", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusCurInput.setStatus('current')
inputStatusSatLock = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nolock", 1), ("lockminussignal", 2), ("lockplussignal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusSatLock.setStatus('current')
inputStatusMpgIpLock = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nolock", 1), ("lock", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusMpgIpLock.setStatus('current')
inputStatusInputRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusInputRate.setStatus('current')
inputStatusNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusNetworkName.setStatus('current')
inputStatusNetworkId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusNetworkId.setStatus('current')
inputStatusTransportId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusTransportId.setStatus('current')
inputStatusScramblingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("des", 2), ("dvb", 3), ("biss1", 4), ("biss2", 5), ("biss3", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusScramblingMode.setStatus('current')
inputStatusTransportError = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("ok", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusTransportError.setStatus('current')
inputStatusAsiLock = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nolock", 1), ("lock", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusAsiLock.setStatus('current')
inputStatusAsiLinkError = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("ok", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusAsiLinkError.setStatus('current')
inputStatusAsiPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("oneHundredAndEightyEight", 2), ("twoHundredAndFour", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusAsiPacketSize.setStatus('current')
inputStatusLastTuneReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusLastTuneReason.setStatus('current')
inputStatusCurD985xInput = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusCurD985xInput.setStatus('current')
inputStatusIpiLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiLinkStatus.setStatus('current')
inputStatusIpiSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiSignal.setStatus('current')
inputStatusIpiFecLock = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiFecLock.setStatus('current')
inputStatusIpiPcrLock = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiPcrLock.setStatus('current')
inputStatusIpiDelLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiDelLatency.setStatus('current')
inputStatusIpiData1SrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 21), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiData1SrcIP.setStatus('current')
inputStatusIpiData2SrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiData2SrcIP.setStatus('current')
inputStatusIpiData1TsType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiData1TsType.setStatus('current')
inputStatusIpiData2TsType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 3, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputStatusIpiData2TsType.setStatus('current')
siRcvOptionTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1), )
if mibBuilder.loadTexts: siRcvOptionTable.setStatus('current')
siRcvOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "siRcvOptionInstance"))
if mibBuilder.loadTexts: siRcvOptionEntry.setStatus('current')
siRcvOptionInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: siRcvOptionInstance.setStatus('current')
siRcvOptionAcqMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("basic", 1), ("auto", 2), ("custom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionAcqMode.setStatus('current')
siRcvOptionReacq = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("writeOnly", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionReacq.setStatus('current')
siRcvOptionNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionNetID.setStatus('current')
siRcvOptionInputSel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userCfg", 1), ("swMap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionInputSel.setStatus('current')
siRcvOptionFreqSel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nit", 1), ("userCfg", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionFreqSel.setStatus('current')
siRcvOptionServListMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rigorous", 1), ("degraded", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionServListMode.setStatus('current')
siRcvOptionUseBAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionUseBAT.setStatus('current')
siRcvOptionUseNIT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionUseNIT.setStatus('current')
siRcvOptionUseSDT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionUseSDT.setStatus('current')
siRcvOptionUsePAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: siRcvOptionUsePAT.setStatus('current')
siRcvOptionStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2), )
if mibBuilder.loadTexts: siRcvOptionStatusTable.setStatus('current')
siRcvOptionStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "siRcvOptionStatusInstance"))
if mibBuilder.loadTexts: siRcvOptionStatusEntry.setStatus('current')
siRcvOptionStatusInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: siRcvOptionStatusInstance.setStatus('current')
siRcvOptionLastChanReas = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nit", 1), ("uplinkForceRetune", 2), ("userEntry", 3), ("preset", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionLastChanReas.setStatus('current')
siRcvOptionLastActivated = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionLastActivated.setStatus('current')
siRcvOptionStatusFreqSel = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nit", 1), ("userCfg", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionStatusFreqSel.setStatus('current')
siRcvOptionStatusServListMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rigorous", 1), ("degraded", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionStatusServListMode.setStatus('current')
siRcvOptionStatusUseBAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionStatusUseBAT.setStatus('current')
siRcvOptionStatusUseNIT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionStatusUseNIT.setStatus('current')
siRcvOptionStatusUseSDT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionStatusUseSDT.setStatus('current')
siRcvOptionStatusUsePAT = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siRcvOptionStatusUsePAT.setStatus('current')
siInfoRxTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3), )
if mibBuilder.loadTexts: siInfoRxTable.setStatus('current')
siInfoRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "siInfoRxInstance"), (0, "CISCO-DMN-DSG-TUNING-MIB", "siInfoRxIdx"))
if mibBuilder.loadTexts: siInfoRxEntry.setStatus('current')
siInfoRxInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: siInfoRxInstance.setStatus('current')
siInfoRxIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: siInfoRxIdx.setStatus('current')
siInfoRxType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("pat", 1), ("cat", 2), ("pmt", 3), ("tsdt", 4), ("nit", 5), ("nitother", 6), ("sdt", 7), ("sdtother", 8), ("bat", 9), ("aeitpf", 10), ("oeitpf", 11), ("aeitES0", 12), ("aeitES1", 13), ("oeitES", 14), ("tdt", 15), ("rst", 16), ("st", 17), ("tot", 18), ("dit", 19), ("sit", 20), ("ecmodd", 21), ("ecmeven", 22), ("emm", 23), ("mpe", 24), ("dpi", 25), ("drt", 26), ("cdt", 27), ("mct", 28), ("mat", 29), ("mit", 30), ("ect", 31), ("invalidtableid", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxType.setStatus('current')
siInfoRxIDExt = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxIDExt.setStatus('current')
siInfoRxUid = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxUid.setStatus('current')
siInfoRxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("partial", 2), ("full", 3), ("update", 4), ("timeout", 5), ("lost", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxStatus.setStatus('current')
siInfoRxVer = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxVer.setStatus('current')
siInfoRxPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxPID.setStatus('current')
siInfoRxSections = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoRxSections.setStatus('current')
siInfoTsTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4), )
if mibBuilder.loadTexts: siInfoTsTable.setStatus('current')
siInfoTsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "siInfoTsInstance"), (0, "CISCO-DMN-DSG-TUNING-MIB", "siInfoTsIdx"))
if mibBuilder.loadTexts: siInfoTsEntry.setStatus('current')
siInfoTsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: siInfoTsInstance.setStatus('current')
siInfoTsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: siInfoTsIdx.setStatus('current')
siInfoTsId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsId.setStatus('current')
siInfoTsFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsFreq.setStatus('current')
siInfoTsSymRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsSymRate.setStatus('current')
siInfoTsOrbPosn = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsOrbPosn.setStatus('current')
siInfoTsPolar = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("horizontal", 1), ("vertical", 2), ("leftCircular", 3), ("rightCircular", 4), ("auto", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsPolar.setStatus('current')
siInfoTsFEC = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("notApplicable", 1), ("half", 2), ("threeFifth", 3), ("twoThird", 4), ("threeQuarter", 5), ("fourFifth", 6), ("fiveSixth", 7), ("sevenEighth", 8), ("eightNinth", 9), ("nineTenth", 10), ("auto", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsFEC.setStatus('current')
siInfoTsModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notapplicable", 1), ("qpskDvbS", 2), ("qpskDvbS2", 3), ("eightPskDvbS2", 4), ("sixteenQamDvbsS2", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsModulation.setStatus('current')
siInfoTsOrgNetID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsOrgNetID.setStatus('current')
siInfoTsEastWestFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("east", 1), ("west", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoTsEastWestFlag.setStatus('current')
siInfoVCInfoTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5), )
if mibBuilder.loadTexts: siInfoVCInfoTable.setStatus('current')
siInfoVCInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1), ).setIndexNames((0, "CISCO-DMN-DSG-TUNING-MIB", "siInfoVCInfoInstance"), (0, "CISCO-DMN-DSG-TUNING-MIB", "siInfoVCInfoIdx"))
if mibBuilder.loadTexts: siInfoVCInfoEntry.setStatus('current')
siInfoVCInfoInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: siInfoVCInfoInstance.setStatus('current')
siInfoVCInfoIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 262144)))
if mibBuilder.loadTexts: siInfoVCInfoIdx.setStatus('current')
siInfoVCInfoId = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoId.setStatus('current')
siInfoVCInfoTxID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoTxID.setStatus('current')
siInfoVCInfoProgName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoProgName.setStatus('current')
siInfoVCInfoPMTPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoPMTPID.setStatus('current')
siInfoVCInfoCHType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tv", 1), ("radio", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoCHType.setStatus('current')
siInfoVCInfoECMPID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoECMPID.setStatus('current')
siInfoVCInfoAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 5, 4, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInfoVCInfoAuthorized.setStatus('current')
mibBuilder.exportSymbols("CISCO-DMN-DSG-TUNING-MIB", activeTunerIQ=activeTunerIQ, lnbPowerTable=lnbPowerTable, satSignalIndex=satSignalIndex, satSignalSatDishCnMargin=satSignalSatDishCnMargin, siInfoVCInfoId=siInfoVCInfoId, inputStatusCurD985xInput=inputStatusCurD985xInput, siInfoTsFreq=siInfoTsFreq, inputStatusScramblingMode=inputStatusScramblingMode, inputStatusIpiData1SrcIP=inputStatusIpiData1SrcIP, siRcvOptionEntry=siRcvOptionEntry, siRcvOptionStatusInstance=siRcvOptionStatusInstance, siRcvOptionStatusEntry=siRcvOptionStatusEntry, satSignalPerDisp=satSignalPerDisp, siInfoTsId=siInfoTsId, inputStatusMpgIpLock=inputStatusMpgIpLock, satSignalChScanStatus=satSignalChScanStatus, siInfoRxInstance=siInfoRxInstance, siInfoRxUid=siInfoRxUid, siInfoTsOrbPosn=siInfoTsOrbPosn, activeInputLastLNBConfig=activeInputLastLNBConfig, siInfoVCInfoPMTPID=siInfoVCInfoPMTPID, lnbPowerControl=lnbPowerControl, siInfoVCInfoECMPID=siInfoVCInfoECMPID, activeTuningValidateOrbPos=activeTuningValidateOrbPos, satSignalPvBer=satSignalPvBer, siInfoTsModulation=siInfoTsModulation, satSignalSatDishSigLevel=satSignalSatDishSigLevel, satSignalP1DStatus=satSignalP1DStatus, siRcvOptionStatusFreqSel=siRcvOptionStatusFreqSel, siInfoTsPolar=siInfoTsPolar, activeInputDiSeqCEnable=activeInputDiSeqCEnable, activeTunerSymbolRate=activeTunerSymbolRate, inputStatusIpiFecLock=inputStatusIpiFecLock, satSignalDvbSQpskErrCount=satSignalDvbSQpskErrCount, siRcvOptionReacq=siRcvOptionReacq, inputStatusCurInput=inputStatusCurInput, siInfoRxPID=siInfoRxPID, siInfoTsIdx=siInfoTsIdx, satSignalCnMarginRaw=satSignalCnMarginRaw, siInfoRxSections=siInfoRxSections, inputStatusEntry=inputStatusEntry, activeTunerModulation=activeTunerModulation, activeInputDiSeqCSwitch=activeInputDiSeqCSwitch, activeInputRFIndex=activeInputRFIndex, satSignalFecRate=satSignalFecRate, satSignalDvbS2LdpcErrCount=satSignalDvbS2LdpcErrCount, siInfoVCInfoCHType=siInfoVCInfoCHType, satSignalSymbolRate=satSignalSymbolRate, satSignalPilots=satSignalPilots, activeTuningTable=activeTuningTable, satSignalIQ=satSignalIQ, satSignalSigLevelRaw=satSignalSigLevelRaw, siInfoRxEntry=siInfoRxEntry, activeTunerEntry=activeTunerEntry, siRcvOptionStatusUseBAT=siRcvOptionStatusUseBAT, inputStatusIpiSignal=inputStatusIpiSignal, inputStatusIpiPcrLock=inputStatusIpiPcrLock, siRcvOptionStatusServListMode=siRcvOptionStatusServListMode, activeInputLNBTrim=activeInputLNBTrim, activeInputCrossOver=activeInputCrossOver, satSignalQPSKBer=satSignalQPSKBer, siRcvOptionInstance=siRcvOptionInstance, siInfoTsOrgNetID=siInfoTsOrgNetID, siInfoVCInfoTxID=siInfoVCInfoTxID, siInfoVCInfoAuthorized=siInfoVCInfoAuthorized, inputStatusAsiLinkError=inputStatusAsiLinkError, siRcvOptionUseSDT=siRcvOptionUseSDT, siInfoTsEastWestFlag=siInfoTsEastWestFlag, activeInputLocalOscFreq2=activeInputLocalOscFreq2, inputStatusIndex=inputStatusIndex, activeInputSatName=activeInputSatName, siRcvOptionInputSel=siRcvOptionInputSel, inputStatusNetworkId=inputStatusNetworkId, satSignalValidateOrbPosDate=satSignalValidateOrbPosDate, inputStatusTable=inputStatusTable, siRcvOptionUseBAT=siRcvOptionUseBAT, siRcvOptionLastChanReas=siRcvOptionLastChanReas, satSignalUncorErrCnt=satSignalUncorErrCnt, siInfoTsFEC=siInfoTsFEC, satSignalClearSigErrCnt=satSignalClearSigErrCnt, inputStatusAsiPacketSize=inputStatusAsiPacketSize, ciscoDSGTuning=ciscoDSGTuning, siRcvOptionStatusUseNIT=siRcvOptionStatusUseNIT, satSignalLevel=satSignalLevel, siRcvTable=siRcvTable, satSignalCorErrCnt=satSignalCorErrCnt, activeTunerTable=activeTunerTable, lnbPowerStatus=lnbPowerStatus, siRcvOptionTable=siRcvOptionTable, satSignalFecSyncStatus=satSignalFecSyncStatus, activeTunerFreq=activeTunerFreq, satSignalEntry=satSignalEntry, activeTunerRFInput=activeTunerRFInput, satSignalPolarization=satSignalPolarization, siRcvOptionAcqMode=siRcvOptionAcqMode, siRcvOptionServListMode=siRcvOptionServListMode, satSignalLoSelect=satSignalLoSelect, siRcvOptionNetID=siRcvOptionNetID, satSignalTable=satSignalTable, satSignalPktErrCount=satSignalPktErrCount, satSignalCnMargin=satSignalCnMargin, inputStatusInputRate=inputStatusInputRate, satSignalDnLkFreq=satSignalDnLkFreq, siRcvOptionStatusUsePAT=siRcvOptionStatusUsePAT, activeTunerIndex=activeTunerIndex, satSignalLbandFreq=satSignalLbandFreq, siInfoVCInfoEntry=siInfoVCInfoEntry, activeTunerRollOff=activeTunerRollOff, siInfoRxType=siInfoRxType, siInfoTsInstance=siInfoTsInstance, siRcvOptionUseNIT=siRcvOptionUseNIT, siInfoVCInfoInstance=siInfoVCInfoInstance, siInfoRxTable=siInfoRxTable, siRcvOptionStatusTable=siRcvOptionStatusTable, siInfoTsEntry=siInfoTsEntry, satSignalValidateOrbPosStat=satSignalValidateOrbPosStat, inputStatusIpiData2TsType=inputStatusIpiData2TsType, siInfoRxIDExt=siInfoRxIDExt, activeInputTable=activeInputTable, siInfoVCInfoTable=siInfoVCInfoTable, siRcvOptionLastActivated=siRcvOptionLastActivated, satSignalDvbS2FrameLen=satSignalDvbS2FrameLen, satSignalLnbPsStatus=satSignalLnbPsStatus, siInfoTsTable=siInfoTsTable, activeInputLocalOscControl=activeInputLocalOscControl, inputStatusIpiLinkStatus=inputStatusIpiLinkStatus, siInfoRxVer=siInfoRxVer, siRcvOptionUsePAT=siRcvOptionUsePAT, siRcvOptionStatusUseSDT=siRcvOptionStatusUseSDT, activeTuningInput=activeTuningInput, activeInputLNBTrim2=activeInputLNBTrim2, satSignalLdpCber=satSignalLdpCber, inputStatusIpiDelLatency=inputStatusIpiDelLatency, activeInputEntry=activeInputEntry, siInfoRxStatus=siInfoRxStatus, activeInputEastWestFlag=activeInputEastWestFlag, lnbPowerIndex=lnbPowerIndex, inputStatusTransportError=inputStatusTransportError, lnbPowerInput=lnbPowerInput, satSignalAfc=satSignalAfc, inputStatusNetworkName=inputStatusNetworkName, satSignalRfLock=satSignalRfLock, siInfoVCInfoIdx=siInfoVCInfoIdx, satSignalModulation=satSignalModulation, activeInputLocalOscFreq1=activeInputLocalOscFreq1, satSignalPolar=satSignalPolar, inputStatusSatLock=inputStatusSatLock, activeInputLNBType=activeInputLNBType, inputStatusIpiData1TsType=inputStatusIpiData1TsType, tuningStatusTable=tuningStatusTable, satSignalCndisp=satSignalCndisp, siInfoTsSymRate=siInfoTsSymRate, activeInputOrbitalPos=activeInputOrbitalPos, inputStatusTransportId=inputStatusTransportId, activeTuning=activeTuning, inputStatusIpiData2SrcIP=inputStatusIpiData2SrcIP, siRcvOptionFreqSel=siRcvOptionFreqSel, activeInputPolarization=activeInputPolarization, lnbPowerEntry=lnbPowerEntry, satSignalPvErrCount=satSignalPvErrCount, activeTuningChScan=activeTuningChScan, inputStatusAsiLock=inputStatusAsiLock, siInfoVCInfoProgName=siInfoVCInfoProgName, PYSNMP_MODULE_ID=ciscoDSGTuning, inputStatusLastTuneReason=inputStatusLastTuneReason, activeTunerDVBSFEC=activeTunerDVBSFEC, siInfoRxIdx=siInfoRxIdx)
