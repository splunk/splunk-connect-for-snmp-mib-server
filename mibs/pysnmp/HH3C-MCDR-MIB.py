#
# PySNMP MIB module HH3C-MCDR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MCDR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, TimeTicks, Gauge32, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, Unsigned32, Counter32, iso, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "TimeTicks", "Gauge32", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "Unsigned32", "Counter32", "iso", "NotificationType", "MibIdentifier")
DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime")
hh3cMultCDR = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 86))
hh3cMultCDR.setRevisions(('2007-12-15 00:00',))
if mibBuilder.loadTexts: hh3cMultCDR.setLastUpdated('200712150000Z')
if mibBuilder.loadTexts: hh3cMultCDR.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cMultCDRCfgObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 86, 1))
hh3cMultCDRStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 86, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMultCDRStatus.setStatus('current')
hh3cMultCDRReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 86, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMultCDRReportInterval.setStatus('current')
hh3cMultCDRCacheLimit = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 86, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMultCDRCacheLimit.setStatus('current')
hh3cMultCDRRecordDelay = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 86, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMultCDRRecordDelay.setStatus('current')
hh3cMultCDRRecordSend = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 86, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("caching", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMultCDRRecordSend.setStatus('current')
hh3cMultUserOnlineInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2), )
if mibBuilder.loadTexts: hh3cMultUserOnlineInfoTable.setStatus('current')
hh3cMultUserOnlineInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HH3C-MCDR-MIB", "hh3cMultUserRecordID"))
if mibBuilder.loadTexts: hh3cMultUserOnlineInfoEntry.setStatus('current')
hh3cMultUserRecordID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cMultUserRecordID.setStatus('current')
hh3cMultUserSubIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserSubIfIndex.setStatus('current')
hh3cMultUserVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserVlanID.setStatus('current')
hh3cMultUserJoinGAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserJoinGAddrType.setStatus('current')
hh3cMultUserJoinGAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserJoinGAddr.setStatus('current')
hh3cMultUserJoinSAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserJoinSAddrType.setStatus('current')
hh3cMultUserJoinSAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserJoinSAddr.setStatus('current')
hh3cMultUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("preview", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserStatus.setStatus('current')
hh3cMultUserJoinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserJoinTime.setStatus('current')
hh3cMultUserPreviewTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserPreviewTimes.setStatus('current')
hh3cMultUserPreviewRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 86, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMultUserPreviewRemain.setStatus('current')
mibBuilder.exportSymbols("HH3C-MCDR-MIB", hh3cMultUserStatus=hh3cMultUserStatus, hh3cMultUserJoinGAddr=hh3cMultUserJoinGAddr, PYSNMP_MODULE_ID=hh3cMultCDR, hh3cMultCDR=hh3cMultCDR, hh3cMultCDRRecordSend=hh3cMultCDRRecordSend, hh3cMultUserOnlineInfoEntry=hh3cMultUserOnlineInfoEntry, hh3cMultUserJoinSAddrType=hh3cMultUserJoinSAddrType, hh3cMultCDRReportInterval=hh3cMultCDRReportInterval, hh3cMultUserPreviewTimes=hh3cMultUserPreviewTimes, hh3cMultUserJoinGAddrType=hh3cMultUserJoinGAddrType, hh3cMultUserOnlineInfoTable=hh3cMultUserOnlineInfoTable, hh3cMultUserJoinTime=hh3cMultUserJoinTime, hh3cMultUserRecordID=hh3cMultUserRecordID, hh3cMultUserPreviewRemain=hh3cMultUserPreviewRemain, hh3cMultCDRCacheLimit=hh3cMultCDRCacheLimit, hh3cMultCDRStatus=hh3cMultCDRStatus, hh3cMultUserSubIfIndex=hh3cMultUserSubIfIndex, hh3cMultCDRRecordDelay=hh3cMultCDRRecordDelay, hh3cMultUserVlanID=hh3cMultUserVlanID, hh3cMultUserJoinSAddr=hh3cMultUserJoinSAddr, hh3cMultCDRCfgObject=hh3cMultCDRCfgObject)
