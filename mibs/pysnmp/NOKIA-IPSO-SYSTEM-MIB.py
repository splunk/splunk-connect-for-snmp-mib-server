#
# PySNMP MIB module NOKIA-IPSO-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NOKIA-IPSO-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:13:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
hrPartitionSize, hrPartitionIndex, hrPartitionLabel, hrFSMountPoint = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "hrPartitionSize", "hrPartitionIndex", "hrPartitionLabel", "hrFSMountPoint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, enterprises, ModuleIdentity, Unsigned32, IpAddress, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Bits, ObjectIdentity, MibIdentifier, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "enterprises", "ModuleIdentity", "Unsigned32", "IpAddress", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Bits", "ObjectIdentity", "MibIdentifier", "Integer32", "Counter64")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
ipsoSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 94, 1, 21, 1))
ipsoSystem.setRevisions(('1999-10-20 00:00', '1900-01-11 00:00', '1970-01-01 00:00',))
if mibBuilder.loadTexts: ipsoSystem.setLastUpdated('0001300000Z')
if mibBuilder.loadTexts: ipsoSystem.setOrganization('Nokia')
nokia = MibIdentifier((1, 3, 6, 1, 4, 1, 94))
nokiaProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1))
ipsoProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 21))
ipsoChassisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoChassisSerialNumber"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoChassisMBType"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoChassisMBRevNumber"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoChassisMBSerialNumber"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoChassisTemperature"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoCardIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoCardOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoChassisGroup = ipsoChassisGroup.setStatus('current')
ipsoChassisSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoChassisSerialNumber.setStatus('current')
ipsoChassisMBType = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoChassisMBType.setStatus('current')
ipsoChassisMBRevNumber = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoChassisMBRevNumber.setStatus('current')
ipsoChassisMBSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoChassisMBSerialNumber.setStatus('current')
ipsoChassisTemperature = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("overTemperature", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoChassisTemperature.setStatus('current')
ipsoCardTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 6), )
if mibBuilder.loadTexts: ipsoCardTable.setStatus('current')
ipsoCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 6, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoCardIndex"))
if mibBuilder.loadTexts: ipsoCardEntry.setStatus('current')
ipsoCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoCardIndex.setStatus('current')
ipsoCardOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoCardOperStatus.setStatus('current')
ipsoFanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 2)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoFanIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoFanOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoFanGroup = ipsoFanGroup.setStatus('current')
ipsoFanTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 2, 1), )
if mibBuilder.loadTexts: ipsoFanTable.setStatus('current')
ipsoFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 2, 1, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoFanIndex"))
if mibBuilder.loadTexts: ipsoFanEntry.setStatus('current')
ipsoFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoFanIndex.setStatus('current')
ipsoFanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("notRunning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoFanOperStatus.setStatus('current')
ipsoPowerSupplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 3)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoPowerSupplyIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPowerSupplyOverTemperature"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPowerSupplyOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoPowerSupplyGroup = ipsoPowerSupplyGroup.setStatus('current')
ipsoPowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 3, 1), )
if mibBuilder.loadTexts: ipsoPowerSupplyTable.setStatus('current')
ipsoPowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 3, 1, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoPowerSupplyIndex"))
if mibBuilder.loadTexts: ipsoPowerSupplyEntry.setStatus('current')
ipsoPowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPowerSupplyIndex.setStatus('current')
ipsoPowerSupplyOverTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("overTemperature", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPowerSupplyOverTemperature.setStatus('current')
ipsoPowerSupplyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("notRunning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPowerSupplyOperStatus.setStatus('current')
ipsoConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigFilePath"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigFileDateAndTime"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigLogSize"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigLogIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigLogDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoConfigGroup = ipsoConfigGroup.setStatus('current')
ipsoConfigTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 1), )
if mibBuilder.loadTexts: ipsoConfigTable.setStatus('current')
ipsoConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 1, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigIndex"))
if mibBuilder.loadTexts: ipsoConfigEntry.setStatus('current')
ipsoConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoConfigIndex.setStatus('current')
ipsoConfigFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoConfigFilePath.setStatus('current')
ipsoConfigFileDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoConfigFileDateAndTime.setStatus('current')
ipsoConfigLogSize = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsoConfigLogSize.setStatus('current')
ipsoConfigLogTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 3), )
if mibBuilder.loadTexts: ipsoConfigLogTable.setStatus('current')
ipsoConfigLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 3, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigLogIndex"))
if mibBuilder.loadTexts: ipsoConfigLogEntry.setStatus('current')
ipsoConfigLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoConfigLogIndex.setStatus('current')
ipsoConfigLogDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 4, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoConfigLogDescr.setStatus('current')
ipsoImageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoImageIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoImageVersionNumber"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoImageSerialNumber"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoImageTimeOfLoad"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoImageGroup = ipsoImageGroup.setStatus('current')
ipsoImageTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5, 1), )
if mibBuilder.loadTexts: ipsoImageTable.setStatus('current')
ipsoImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5, 1, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoImageIndex"))
if mibBuilder.loadTexts: ipsoImageEntry.setStatus('current')
ipsoImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoImageIndex.setStatus('current')
ipsoImageVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoImageVersionNumber.setStatus('current')
ipsoImageSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoImageSerialNumber.setStatus('current')
ipsoImageTimeOfLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 5, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoImageTimeOfLoad.setStatus('current')
ipsoStorageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 6)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoSIMMTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoStorageGroup = ipsoStorageGroup.setStatus('current')
ipsoSIMMTotal = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoSIMMTotal.setStatus('current')
ipsoProcessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessorUtilization"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessID"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessParentID"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessOwner"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessMemory"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessPercentCPU"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoProcessGroup = ipsoProcessGroup.setStatus('current')
ipsoProcessorUtilization = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProcessorUtilization.setStatus('current')
ipsoProcessTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2), )
if mibBuilder.loadTexts: ipsoProcessTable.setStatus('current')
ipsoProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoProcessID"))
if mibBuilder.loadTexts: ipsoProcessEntry.setStatus('current')
ipsoProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProcessID.setStatus('current')
ipsoProcessParentID = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProcessParentID.setStatus('current')
ipsoProcessOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProcessOwner.setStatus('current')
ipsoProcessMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProcessMemory.setStatus('current')
ipsoProcessPercentCPU = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProcessPercentCPU.setStatus('current')
ipsoDiskMirrorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoTotalDiskMirrorSets"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMirrorSetIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMirrorSetSourceDrive"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMirrorSetDestinationDrive"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMirrorSetSyncPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoDiskMirrorGroup = ipsoDiskMirrorGroup.setStatus('current')
ipsoTotalDiskMirrorSets = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoTotalDiskMirrorSets.setStatus('current')
ipsoDiskMirrorSetTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 2), )
if mibBuilder.loadTexts: ipsoDiskMirrorSetTable.setStatus('current')
ipsoDiskMirrorSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 2, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetIndex"))
if mibBuilder.loadTexts: ipsoDiskMirrorSetEntry.setStatus('current')
ipsoDiskMirrorSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskMirrorSetIndex.setStatus('current')
ipsoDiskMirrorSetSourceDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskMirrorSetSourceDriveIndex.setStatus('current')
ipsoDiskMirrorSetDestinationDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskMirrorSetDestinationDriveIndex.setStatus('current')
ipsoDiskMirrorSetSyncPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 9, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskMirrorSetSyncPercent.setStatus('current')
ipsoAssetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoAssetChassisSerialNumber"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoCPUModel"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoCPUMfr"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoCPUFreq"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoKernMaxMem"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMotherBoardSerNum"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMotherBoardRev"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoMotherBoardModel"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoOSRelease"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoOSVersion"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoProductModel"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPkgIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPkgName"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPkgMajorVersion"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPkgMinorVersion"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoPkgLicense"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskSysDriveIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveModel"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveCapacity"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveLocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoAssetGroup = ipsoAssetGroup.setStatus('current')
ipsoAssetChassisSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoAssetChassisSerialNumber.setStatus('current')
ipsoCPUModel = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoCPUModel.setStatus('current')
ipsoCPUMfr = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoCPUMfr.setStatus('current')
ipsoCPUFreq = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoCPUFreq.setStatus('current')
ipsoKernMaxMem = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoKernMaxMem.setStatus('current')
ipsoMotherBoardSerNum = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoMotherBoardSerNum.setStatus('current')
ipsoMotherBoardRev = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoMotherBoardRev.setStatus('current')
ipsoMotherBoardModel = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoMotherBoardModel.setStatus('current')
ipsoOSRelease = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoOSRelease.setStatus('current')
ipsoOSVersion = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoOSVersion.setStatus('current')
ipsoProductModel = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoProductModel.setStatus('current')
ipsoAssetTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12), )
if mibBuilder.loadTexts: ipsoAssetTable.setStatus('current')
ipsoAssetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoPkgIndex"))
if mibBuilder.loadTexts: ipsoAssetEntry.setStatus('current')
ipsoPkgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPkgIndex.setStatus('current')
ipsoPkgName = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPkgName.setStatus('current')
ipsoPkgMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPkgMajorVersion.setStatus('current')
ipsoPkgMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPkgMinorVersion.setStatus('current')
ipsoPkgLicense = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoPkgLicense.setStatus('current')
ipsoDiskDriveTable = MibTable((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13), )
if mibBuilder.loadTexts: ipsoDiskDriveTable.setStatus('current')
ipsoDiskDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13, 1), ).setIndexNames((0, "NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveIndex"))
if mibBuilder.loadTexts: ipsoDiskDriveEntry.setStatus('current')
ipsoDiskDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskDriveIndex.setStatus('current')
ipsoSysDiskDriveIndex = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoSysDiskDriveIndex.setStatus('current')
ipsoDiskDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskDriveModel.setStatus('current')
ipsoDiskDriveCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskDriveCapacity.setStatus('current')
ipsoDiskDriveLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 10, 13, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDiskDriveLocation.setStatus('current')
ipsoLicenseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 11)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsofeaturename"), ("NOKIA-IPSO-SYSTEM-MIB", "noofdaystoexpire"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoLicenseGroup = ipsoLicenseGroup.setStatus('current')
ipsoFeatureName = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoFeatureName.setStatus('current')
ipsoDaysToExpire = MibScalar((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsoDaysToExpire.setStatus('current')
ipsoNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "systemTrapConfigurationChange"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapConfigurationFileChange"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapConfigurationSaveChange"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapLowDiskSpace"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapNoDiskSpace"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapDiskFailure"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapDiskMirrorSetCreate"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapDiskMirrorSetDelete"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapDiskMirrorSyncFailure"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapDiskMirrorSyncSuccess"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapSnmpProcessShutdown"), ("NOKIA-IPSO-SYSTEM-MIB", "systemTrapLicense"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsoNotificationGroup = ipsoNotificationGroup.setStatus('current')
systemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1))
systemTrapConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 1))
if mibBuilder.loadTexts: systemTrapConfigurationChange.setStatus('current')
systemTrapConfigurationFileChange = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 2)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigFilePath"))
if mibBuilder.loadTexts: systemTrapConfigurationFileChange.setStatus('current')
systemTrapConfigurationSaveChange = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 3)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoConfigFilePath"))
if mibBuilder.loadTexts: systemTrapConfigurationSaveChange.setStatus('current')
systemTrapLowDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 4)).setObjects(("HOST-RESOURCES-MIB", "hrPartitionIndex"), ("HOST-RESOURCES-MIB", "hrPartitionLabel"), ("HOST-RESOURCES-MIB", "hrPartitionSize"), ("HOST-RESOURCES-MIB", "hrFSMountPoint"))
if mibBuilder.loadTexts: systemTrapLowDiskSpace.setStatus('current')
systemTrapNoDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 5)).setObjects(("HOST-RESOURCES-MIB", "hrPartitionIndex"), ("HOST-RESOURCES-MIB", "hrPartitionLabel"), ("HOST-RESOURCES-MIB", "hrPartitionSize"), ("HOST-RESOURCES-MIB", "hrFSMountPoint"))
if mibBuilder.loadTexts: systemTrapNoDiskSpace.setStatus('current')
systemTrapDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 6)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveIndex"))
if mibBuilder.loadTexts: systemTrapDiskFailure.setStatus('current')
systemTrapDiskMirrorSetCreate = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 7)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetSourceDriveIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetDestinationDriveIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveLocation"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveLocation"))
if mibBuilder.loadTexts: systemTrapDiskMirrorSetCreate.setStatus('current')
systemTrapDiskMirrorSetDelete = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 8)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetSourceDriveIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetDestinationDriveIndex"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveLocation"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskDriveLocation"))
if mibBuilder.loadTexts: systemTrapDiskMirrorSetDelete.setStatus('current')
systemTrapSnmpProcessShutdown = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 9))
if mibBuilder.loadTexts: systemTrapSnmpProcessShutdown.setStatus('current')
systemTrapDiskMirrorSyncFailure = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 10)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetIndex"))
if mibBuilder.loadTexts: systemTrapDiskMirrorSyncFailure.setStatus('current')
systemTrapDiskMirrorSyncSuccess = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 11)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoDiskMirrorSetIndex"))
if mibBuilder.loadTexts: systemTrapDiskMirrorSyncSuccess.setStatus('current')
systemTrapLicense = NotificationType((1, 3, 6, 1, 4, 1, 94, 1, 21, 1, 8, 1, 16)).setObjects(("NOKIA-IPSO-SYSTEM-MIB", "ipsoFeatureName"), ("NOKIA-IPSO-SYSTEM-MIB", "ipsoDaysToExpire"))
if mibBuilder.loadTexts: systemTrapLicense.setStatus('current')
mibBuilder.exportSymbols("NOKIA-IPSO-SYSTEM-MIB", ipsoImageTimeOfLoad=ipsoImageTimeOfLoad, ipsoPkgLicense=ipsoPkgLicense, ipsoCardIndex=ipsoCardIndex, ipsoLicenseGroup=ipsoLicenseGroup, ipsoMotherBoardRev=ipsoMotherBoardRev, ipsoDiskMirrorSetTable=ipsoDiskMirrorSetTable, ipsoConfigLogTable=ipsoConfigLogTable, systemTrapSnmpProcessShutdown=systemTrapSnmpProcessShutdown, ipsoFanEntry=ipsoFanEntry, ipsoChassisMBRevNumber=ipsoChassisMBRevNumber, ipsoNotificationGroup=ipsoNotificationGroup, ipsoDiskDriveModel=ipsoDiskDriveModel, ipsoSysDiskDriveIndex=ipsoSysDiskDriveIndex, ipsoDiskDriveLocation=ipsoDiskDriveLocation, ipsoProcessID=ipsoProcessID, ipsoPowerSupplyIndex=ipsoPowerSupplyIndex, ipsoImageTable=ipsoImageTable, ipsoProcessGroup=ipsoProcessGroup, nokia=nokia, ipsoAssetChassisSerialNumber=ipsoAssetChassisSerialNumber, ipsoCardEntry=ipsoCardEntry, ipsoDaysToExpire=ipsoDaysToExpire, ipsoDiskDriveEntry=ipsoDiskDriveEntry, ipsoPowerSupplyTable=ipsoPowerSupplyTable, ipsoChassisTemperature=ipsoChassisTemperature, ipsoPowerSupplyGroup=ipsoPowerSupplyGroup, ipsoFanTable=ipsoFanTable, ipsoProductModel=ipsoProductModel, systemTraps=systemTraps, ipsoDiskMirrorSetSyncPercent=ipsoDiskMirrorSetSyncPercent, systemTrapDiskMirrorSyncFailure=systemTrapDiskMirrorSyncFailure, ipsoCPUMfr=ipsoCPUMfr, ipsoDiskDriveCapacity=ipsoDiskDriveCapacity, ipsoPowerSupplyEntry=ipsoPowerSupplyEntry, systemTrapDiskMirrorSetCreate=systemTrapDiskMirrorSetCreate, ipsoTotalDiskMirrorSets=ipsoTotalDiskMirrorSets, ipsoFeatureName=ipsoFeatureName, ipsoDiskDriveIndex=ipsoDiskDriveIndex, ipsoConfigIndex=ipsoConfigIndex, ipsoConfigLogIndex=ipsoConfigLogIndex, ipsoConfigLogEntry=ipsoConfigLogEntry, ipsoPkgMajorVersion=ipsoPkgMajorVersion, ipsoChassisSerialNumber=ipsoChassisSerialNumber, ipsoPkgIndex=ipsoPkgIndex, ipsoChassisGroup=ipsoChassisGroup, ipsoProducts=ipsoProducts, ipsoOSVersion=ipsoOSVersion, systemTrapDiskFailure=systemTrapDiskFailure, ipsoProcessOwner=ipsoProcessOwner, ipsoCPUFreq=ipsoCPUFreq, systemTrapDiskMirrorSyncSuccess=systemTrapDiskMirrorSyncSuccess, ipsoConfigLogDescr=ipsoConfigLogDescr, ipsoImageEntry=ipsoImageEntry, systemTrapNoDiskSpace=systemTrapNoDiskSpace, systemTrapConfigurationChange=systemTrapConfigurationChange, ipsoImageSerialNumber=ipsoImageSerialNumber, ipsoDiskMirrorGroup=ipsoDiskMirrorGroup, ipsoCardTable=ipsoCardTable, ipsoImageIndex=ipsoImageIndex, ipsoImageGroup=ipsoImageGroup, ipsoCPUModel=ipsoCPUModel, ipsoProcessEntry=ipsoProcessEntry, ipsoProcessTable=ipsoProcessTable, nokiaProducts=nokiaProducts, ipsoDiskMirrorSetDestinationDriveIndex=ipsoDiskMirrorSetDestinationDriveIndex, ipsoAssetGroup=ipsoAssetGroup, ipsoProcessParentID=ipsoProcessParentID, ipsoProcessMemory=ipsoProcessMemory, ipsoDiskMirrorSetSourceDriveIndex=ipsoDiskMirrorSetSourceDriveIndex, systemTrapLicense=systemTrapLicense, ipsoStorageGroup=ipsoStorageGroup, ipsoProcessorUtilization=ipsoProcessorUtilization, systemTrapLowDiskSpace=systemTrapLowDiskSpace, ipsoImageVersionNumber=ipsoImageVersionNumber, systemTrapConfigurationFileChange=systemTrapConfigurationFileChange, PYSNMP_MODULE_ID=ipsoSystem, ipsoAssetEntry=ipsoAssetEntry, ipsoPkgMinorVersion=ipsoPkgMinorVersion, ipsoConfigFilePath=ipsoConfigFilePath, ipsoFanGroup=ipsoFanGroup, ipsoKernMaxMem=ipsoKernMaxMem, ipsoFanOperStatus=ipsoFanOperStatus, ipsoSIMMTotal=ipsoSIMMTotal, ipsoConfigTable=ipsoConfigTable, ipsoChassisMBType=ipsoChassisMBType, ipsoConfigFileDateAndTime=ipsoConfigFileDateAndTime, ipsoChassisMBSerialNumber=ipsoChassisMBSerialNumber, ipsoOSRelease=ipsoOSRelease, ipsoAssetTable=ipsoAssetTable, systemTrapConfigurationSaveChange=systemTrapConfigurationSaveChange, ipsoCardOperStatus=ipsoCardOperStatus, ipsoPowerSupplyOperStatus=ipsoPowerSupplyOperStatus, ipsoPkgName=ipsoPkgName, systemTrapDiskMirrorSetDelete=systemTrapDiskMirrorSetDelete, ipsoDiskDriveTable=ipsoDiskDriveTable, ipsoDiskMirrorSetIndex=ipsoDiskMirrorSetIndex, ipsoSystem=ipsoSystem, ipsoFanIndex=ipsoFanIndex, ipsoDiskMirrorSetEntry=ipsoDiskMirrorSetEntry, ipsoMotherBoardModel=ipsoMotherBoardModel, ipsoConfigGroup=ipsoConfigGroup, ipsoProcessPercentCPU=ipsoProcessPercentCPU, ipsoConfigEntry=ipsoConfigEntry, ipsoMotherBoardSerNum=ipsoMotherBoardSerNum, ipsoPowerSupplyOverTemperature=ipsoPowerSupplyOverTemperature, ipsoConfigLogSize=ipsoConfigLogSize)
