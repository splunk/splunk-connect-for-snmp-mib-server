#
# PySNMP MIB module A3COM0048-EMBEDDED-SCRIPTS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM0048-EMBEDDED-SCRIPTS
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
rmonExtensions, = mibBuilder.importSymbols("A3COM0004-GENERIC", "rmonExtensions")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
OwnerString, EntryStatus = mibBuilder.importSymbols("RMON-MIB", "OwnerString", "EntryStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, Integer32, ObjectIdentity, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, Unsigned32, NotificationType, IpAddress, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Integer32", "ObjectIdentity", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "Unsigned32", "NotificationType", "IpAddress", "iso", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
command = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 25, 5))
cmdMacroTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1), )
if mibBuilder.loadTexts: cmdMacroTable.setStatus('mandatory')
cmdMacroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1, 1), ).setIndexNames((0, "A3COM0048-EMBEDDED-SCRIPTS", "cmdMacroIndex"))
if mibBuilder.loadTexts: cmdMacroEntry.setStatus('mandatory')
cmdMacroIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cmdMacroIndex.setStatus('mandatory')
cmdMacroName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdMacroName.setStatus('mandatory')
cmdMacroString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdMacroString.setStatus('mandatory')
cmdMacroOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1, 1, 4), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdMacroOwner.setStatus('mandatory')
cmdMacroStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 1, 1, 5), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdMacroStatus.setStatus('mandatory')
cmdExecTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2), )
if mibBuilder.loadTexts: cmdExecTable.setStatus('mandatory')
cmdExecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1), ).setIndexNames((0, "A3COM0048-EMBEDDED-SCRIPTS", "cmdExecUnit"), (0, "A3COM0048-EMBEDDED-SCRIPTS", "cmdExecIndex"))
if mibBuilder.loadTexts: cmdExecEntry.setStatus('mandatory')
cmdExecUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cmdExecUnit.setStatus('mandatory')
cmdExecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cmdExecIndex.setStatus('mandatory')
cmdExecProcessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("inactive", 1), ("running", 2), ("suspended", 3), ("dying", 4), ("paused", 5), ("searching", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdExecProcessStatus.setStatus('mandatory')
cmdExecStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdExecStartTime.setStatus('mandatory')
cmdExecLastExecTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdExecLastExecTime.setStatus('mandatory')
cmdExecSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdExecSystemTime.setStatus('mandatory')
cmdExecStatement = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdExecStatement.setStatus('mandatory')
cmdExecOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("execute", 2), ("suspend", 3), ("continue", 4), ("step", 5), ("kill", 6), ("Abort", 7), ("Next", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdExecOperation.setStatus('mandatory')
cmdExecLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))).clone(namedValues=NamedValues(("none", 1), ("syntax", 2), ("noResource", 3), ("illegalAssignment", 4), ("blockMismatch", 5), ("badFnParams", 6), ("stackOverflow", 7), ("accessViolation", 8), ("typeMismatch", 9), ("nestTooDeep", 10), ("runTimeError", 11), ("noSuchVar", 12), ("outOfRange", 13), ("illegalLeftVal", 14), ("brokenRemoteProc", 15), ("sourceNotFound", 16), ("missingSemiColon", 17), ("missingEndList", 18), ("missingEndOid", 19), ("missingEndBracket", 20), ("missingEndSubscript", 21), ("missingEndParams", 22), ("invalidQuoteStr", 23), ("invalidGlobalName", 24), ("namedVarNotSupported", 25), ("processKilled", 26), ("childDiedBadly", 27), ("noTargetProcess", 28), ("invalidBinaryImage", 29), ("divideByZero", 30), ("parentDiedPadly", 31), ("nestedErrorHandler", 32), ("rpcTargetDoesnotExist", 33), ("rpcTargetNotSupported", 34), ("assertionFailed", 35), ("missingControlExpression", 36)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdExecLastError.setStatus('mandatory')
cmdExecOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 11), OwnerString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdExecOwner.setStatus('mandatory')
cmdExecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 12), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdExecStatus.setStatus('mandatory')
cmdExecMacroName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 25, 5, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdExecMacroName.setStatus('mandatory')
mibBuilder.exportSymbols("A3COM0048-EMBEDDED-SCRIPTS", cmdExecSystemTime=cmdExecSystemTime, cmdExecIndex=cmdExecIndex, cmdExecStatus=cmdExecStatus, cmdMacroString=cmdMacroString, cmdExecOperation=cmdExecOperation, cmdMacroIndex=cmdMacroIndex, cmdExecStartTime=cmdExecStartTime, cmdMacroName=cmdMacroName, cmdExecLastExecTime=cmdExecLastExecTime, cmdExecUnit=cmdExecUnit, cmdExecOwner=cmdExecOwner, cmdExecProcessStatus=cmdExecProcessStatus, cmdExecLastError=cmdExecLastError, cmdExecEntry=cmdExecEntry, command=command, cmdMacroStatus=cmdMacroStatus, cmdMacroTable=cmdMacroTable, cmdExecStatement=cmdExecStatement, cmdMacroOwner=cmdMacroOwner, cmdExecMacroName=cmdExecMacroName, cmdMacroEntry=cmdMacroEntry, cmdExecTable=cmdExecTable)
