#
# PySNMP MIB module Nortel-Magellan-Passport-VnetMcdnSigMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-VnetMcdnSigMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
Counter32, StorageType, DisplayString, Unsigned32, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Counter32", "StorageType", "DisplayString", "Unsigned32", "RowStatus")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
sigChan, sigChanIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChan", "sigChanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Gauge32, Unsigned32, Integer32, ObjectIdentity, Counter64, IpAddress, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Gauge32", "Unsigned32", "Integer32", "ObjectIdentity", "Counter64", "IpAddress", "iso", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vnetMcdnSigMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142))
sigChanMcdn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17))
sigChanMcdnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 1), )
if mibBuilder.loadTexts: sigChanMcdnRowStatusTable.setStatus('mandatory')
sigChanMcdnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnRowStatusEntry.setStatus('mandatory')
sigChanMcdnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnRowStatus.setStatus('mandatory')
sigChanMcdnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnComponentName.setStatus('mandatory')
sigChanMcdnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnStorageType.setStatus('mandatory')
sigChanMcdnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanMcdnIndex.setStatus('mandatory')
sigChanMcdnL2Table = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11), )
if mibBuilder.loadTexts: sigChanMcdnL2Table.setStatus('mandatory')
sigChanMcdnL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnL2Entry.setStatus('mandatory')
sigChanMcdnT23 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT23.setStatus('mandatory')
sigChanMcdnT200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT200.setStatus('mandatory')
sigChanMcdnN200 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnN200.setStatus('mandatory')
sigChanMcdnT203 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT203.setStatus('mandatory')
sigChanMcdnCircuitSwitchedK = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnCircuitSwitchedK.setStatus('mandatory')
sigChanMcdnL3Table = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12), )
if mibBuilder.loadTexts: sigChanMcdnL3Table.setStatus('mandatory')
sigChanMcdnL3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnL3Entry.setStatus('mandatory')
sigChanMcdnT302 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT302.setStatus('mandatory')
sigChanMcdnT304 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT304.setStatus('mandatory')
sigChanMcdnT309 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 120)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT309.setStatus('mandatory')
sigChanMcdnT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT310.setStatus('mandatory')
sigChanMcdnT316 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(31, 180)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnT316.setStatus('mandatory')
sigChanMcdnT317 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 179)).clone(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnT317.setStatus('mandatory')
sigChanMcdnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13), )
if mibBuilder.loadTexts: sigChanMcdnProvTable.setStatus('mandatory')
sigChanMcdnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnProvEntry.setStatus('mandatory')
sigChanMcdnSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("user", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnSide.setStatus('mandatory')
sigChanMcdnMaxNonCallConcurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnMaxNonCallConcurrent.setStatus('mandatory')
sigChanMcdnOverlapSending = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnOverlapSending.setStatus('mandatory')
sigChanMcdnOverlapReceiving = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnOverlapReceiving.setStatus('mandatory')
sigChanMcdnChanMaintenanceHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("globalOnStartup", 0), ("serviceMessage", 1), ("restartMessage", 2))).clone('restartMessage')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnChanMaintenanceHandling.setStatus('mandatory')
sigChanMcdnStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 14), )
if mibBuilder.loadTexts: sigChanMcdnStateTable.setStatus('mandatory')
sigChanMcdnStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnStateEntry.setStatus('mandatory')
sigChanMcdnAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnAdminState.setStatus('mandatory')
sigChanMcdnOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnOperationalState.setStatus('mandatory')
sigChanMcdnUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnUsageState.setStatus('mandatory')
sigChanMcdnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 15), )
if mibBuilder.loadTexts: sigChanMcdnStatsTable.setStatus('mandatory')
sigChanMcdnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 15, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnStatsEntry.setStatus('mandatory')
sigChanMcdnTotalCallsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 15, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnTotalCallsToIf.setStatus('mandatory')
sigChanMcdnTotalCallsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnTotalCallsFromIf.setStatus('mandatory')
sigChanMcdnNonCallAssocSessionsToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnNonCallAssocSessionsToIf.setStatus('mandatory')
sigChanMcdnNonCallAssocSessionsFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnNonCallAssocSessionsFromIf.setStatus('mandatory')
sigChanMcdnOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16), )
if mibBuilder.loadTexts: sigChanMcdnOperTable.setStatus('mandatory')
sigChanMcdnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnOperEntry.setStatus('mandatory')
sigChanMcdnActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnActiveChannels.setStatus('mandatory')
sigChanMcdnActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnActiveVoiceChannels.setStatus('mandatory')
sigChanMcdnActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnActiveDataChannels.setStatus('mandatory')
sigChanMcdnPeakActiveChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnPeakActiveChannels.setStatus('mandatory')
sigChanMcdnPeakActiveVoiceChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnPeakActiveVoiceChannels.setStatus('mandatory')
sigChanMcdnPeakActiveDataChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnPeakActiveDataChannels.setStatus('mandatory')
sigChanMcdnDChanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("outOfService", 0), ("establishing", 1), ("established", 2), ("enabling", 3), ("inService", 4), ("restarting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnDChanStatus.setStatus('mandatory')
sigChanMcdnToolsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 17), )
if mibBuilder.loadTexts: sigChanMcdnToolsTable.setStatus('mandatory')
sigChanMcdnToolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 17, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnToolsEntry.setStatus('mandatory')
sigChanMcdnTracing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnTracing.setStatus('mandatory')
sigChanMcdnMessageTraced = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="ffffff80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnMessageTraced.setStatus('mandatory')
sigChanMcdnDirectionTraced = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 17, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="c0")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnDirectionTraced.setStatus('mandatory')
sigChanMcdnClsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 18), )
if mibBuilder.loadTexts: sigChanMcdnClsTable.setStatus('mandatory')
sigChanMcdnClsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 18, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnClsEntry.setStatus('mandatory')
sigChanMcdnClsFeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 18, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="ffc1")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnClsFeaturesSupported.setStatus('mandatory')
sigChanMcdnCoTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 19), )
if mibBuilder.loadTexts: sigChanMcdnCoTable.setStatus('mandatory')
sigChanMcdnCoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 19, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"))
if mibBuilder.loadTexts: sigChanMcdnCoEntry.setStatus('mandatory')
sigChanMcdnDropBackCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noDropBackAllowed", 0), ("dropBackToOriginator", 1), ("dropBackToPriorNode", 2))).clone('noDropBackAllowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnDropBackCongestion.setStatus('mandatory')
sigChanMcdnNetworkNameDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 19, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnNetworkNameDisplay.setStatus('mandatory')
sigChanMcdnMultisiteBusinessGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 19, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("transport", 0), ("discard", 1))).clone('transport')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnMultisiteBusinessGroup.setStatus('mandatory')
sigChanMcdnConOrFeaturesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 19, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="fff8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnConOrFeaturesSupported.setStatus('mandatory')
sigChanMcdnFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2))
sigChanMcdnFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 1), )
if mibBuilder.loadTexts: sigChanMcdnFramerRowStatusTable.setStatus('mandatory')
sigChanMcdnFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnFramerIndex"))
if mibBuilder.loadTexts: sigChanMcdnFramerRowStatusEntry.setStatus('mandatory')
sigChanMcdnFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerRowStatus.setStatus('mandatory')
sigChanMcdnFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerComponentName.setStatus('mandatory')
sigChanMcdnFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerStorageType.setStatus('mandatory')
sigChanMcdnFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: sigChanMcdnFramerIndex.setStatus('mandatory')
sigChanMcdnFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 10), )
if mibBuilder.loadTexts: sigChanMcdnFramerProvTable.setStatus('mandatory')
sigChanMcdnFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnFramerIndex"))
if mibBuilder.loadTexts: sigChanMcdnFramerProvEntry.setStatus('mandatory')
sigChanMcdnFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sigChanMcdnFramerInterfaceName.setStatus('mandatory')
sigChanMcdnFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 12), )
if mibBuilder.loadTexts: sigChanMcdnFramerStateTable.setStatus('mandatory')
sigChanMcdnFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnFramerIndex"))
if mibBuilder.loadTexts: sigChanMcdnFramerStateEntry.setStatus('mandatory')
sigChanMcdnFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerAdminState.setStatus('mandatory')
sigChanMcdnFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerOperationalState.setStatus('mandatory')
sigChanMcdnFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerUsageState.setStatus('mandatory')
sigChanMcdnFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13), )
if mibBuilder.loadTexts: sigChanMcdnFramerStatsTable.setStatus('mandatory')
sigChanMcdnFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VoiceNetworkingMIB", "sigChanIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnIndex"), (0, "Nortel-Magellan-Passport-VnetMcdnSigMIB", "sigChanMcdnFramerIndex"))
if mibBuilder.loadTexts: sigChanMcdnFramerStatsEntry.setStatus('mandatory')
sigChanMcdnFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerFrmToIf.setStatus('mandatory')
sigChanMcdnFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerFrmFromIf.setStatus('mandatory')
sigChanMcdnFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerOctetFromIf.setStatus('mandatory')
sigChanMcdnFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerAborts.setStatus('mandatory')
sigChanMcdnFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerCrcErrors.setStatus('mandatory')
sigChanMcdnFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerLrcErrors.setStatus('mandatory')
sigChanMcdnFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerNonOctetErrors.setStatus('mandatory')
sigChanMcdnFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerOverruns.setStatus('mandatory')
sigChanMcdnFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerUnderruns.setStatus('mandatory')
sigChanMcdnFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 115, 17, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sigChanMcdnFramerLargeFrmErrors.setStatus('mandatory')
vnetMcdnSigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 1))
vnetMcdnSigGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 1, 5))
vnetMcdnSigGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 1, 5, 2))
vnetMcdnSigGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 1, 5, 2, 2))
vnetMcdnSigCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 3))
vnetMcdnSigCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 3, 5))
vnetMcdnSigCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 3, 5, 2))
vnetMcdnSigCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 142, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-VnetMcdnSigMIB", vnetMcdnSigGroupBE=vnetMcdnSigGroupBE, sigChanMcdnFramerFrmToIf=sigChanMcdnFramerFrmToIf, sigChanMcdnMessageTraced=sigChanMcdnMessageTraced, sigChanMcdnFramerOctetFromIf=sigChanMcdnFramerOctetFromIf, vnetMcdnSigGroupBE01A=vnetMcdnSigGroupBE01A, sigChanMcdnIndex=sigChanMcdnIndex, sigChanMcdnFramerInterfaceName=sigChanMcdnFramerInterfaceName, sigChanMcdnL2Table=sigChanMcdnL2Table, sigChanMcdnChanMaintenanceHandling=sigChanMcdnChanMaintenanceHandling, vnetMcdnSigGroup=vnetMcdnSigGroup, sigChanMcdnT316=sigChanMcdnT316, vnetMcdnSigGroupBE01=vnetMcdnSigGroupBE01, sigChanMcdnStateEntry=sigChanMcdnStateEntry, sigChanMcdnL2Entry=sigChanMcdnL2Entry, vnetMcdnSigCapabilitiesBE=vnetMcdnSigCapabilitiesBE, sigChanMcdnProvTable=sigChanMcdnProvTable, sigChanMcdnFramerStatsTable=sigChanMcdnFramerStatsTable, sigChanMcdnT203=sigChanMcdnT203, sigChanMcdnFramer=sigChanMcdnFramer, sigChanMcdnFramerStatsEntry=sigChanMcdnFramerStatsEntry, sigChanMcdnStatsEntry=sigChanMcdnStatsEntry, sigChanMcdnFramerStateTable=sigChanMcdnFramerStateTable, sigChanMcdnDropBackCongestion=sigChanMcdnDropBackCongestion, sigChanMcdnL3Entry=sigChanMcdnL3Entry, sigChanMcdnT200=sigChanMcdnT200, sigChanMcdnFramerOverruns=sigChanMcdnFramerOverruns, sigChanMcdnPeakActiveDataChannels=sigChanMcdnPeakActiveDataChannels, sigChanMcdnProvEntry=sigChanMcdnProvEntry, sigChanMcdnCircuitSwitchedK=sigChanMcdnCircuitSwitchedK, sigChanMcdnSide=sigChanMcdnSide, sigChanMcdnFramerOperationalState=sigChanMcdnFramerOperationalState, sigChanMcdnMaxNonCallConcurrent=sigChanMcdnMaxNonCallConcurrent, sigChanMcdnRowStatus=sigChanMcdnRowStatus, sigChanMcdnFramerRowStatus=sigChanMcdnFramerRowStatus, sigChanMcdnAdminState=sigChanMcdnAdminState, sigChanMcdnFramerRowStatusEntry=sigChanMcdnFramerRowStatusEntry, sigChanMcdnOperEntry=sigChanMcdnOperEntry, sigChanMcdnClsFeaturesSupported=sigChanMcdnClsFeaturesSupported, sigChanMcdnFramerRowStatusTable=sigChanMcdnFramerRowStatusTable, sigChanMcdnClsTable=sigChanMcdnClsTable, sigChanMcdnTracing=sigChanMcdnTracing, sigChanMcdnFramerFrmFromIf=sigChanMcdnFramerFrmFromIf, sigChanMcdnTotalCallsFromIf=sigChanMcdnTotalCallsFromIf, sigChanMcdnDirectionTraced=sigChanMcdnDirectionTraced, sigChanMcdnOverlapReceiving=sigChanMcdnOverlapReceiving, vnetMcdnSigCapabilities=vnetMcdnSigCapabilities, sigChanMcdnOverlapSending=sigChanMcdnOverlapSending, sigChanMcdnActiveDataChannels=sigChanMcdnActiveDataChannels, vnetMcdnSigMIB=vnetMcdnSigMIB, sigChanMcdnPeakActiveVoiceChannels=sigChanMcdnPeakActiveVoiceChannels, sigChanMcdnStatsTable=sigChanMcdnStatsTable, sigChanMcdnCoEntry=sigChanMcdnCoEntry, sigChanMcdnNetworkNameDisplay=sigChanMcdnNetworkNameDisplay, sigChanMcdnTotalCallsToIf=sigChanMcdnTotalCallsToIf, sigChanMcdnActiveVoiceChannels=sigChanMcdnActiveVoiceChannels, sigChanMcdnToolsTable=sigChanMcdnToolsTable, sigChanMcdnT309=sigChanMcdnT309, sigChanMcdnT23=sigChanMcdnT23, sigChanMcdnT310=sigChanMcdnT310, sigChanMcdnToolsEntry=sigChanMcdnToolsEntry, sigChanMcdnL3Table=sigChanMcdnL3Table, sigChanMcdnFramerProvTable=sigChanMcdnFramerProvTable, sigChanMcdn=sigChanMcdn, vnetMcdnSigCapabilitiesBE01A=vnetMcdnSigCapabilitiesBE01A, sigChanMcdnActiveChannels=sigChanMcdnActiveChannels, sigChanMcdnFramerCrcErrors=sigChanMcdnFramerCrcErrors, sigChanMcdnFramerLrcErrors=sigChanMcdnFramerLrcErrors, sigChanMcdnFramerStateEntry=sigChanMcdnFramerStateEntry, sigChanMcdnFramerProvEntry=sigChanMcdnFramerProvEntry, sigChanMcdnT302=sigChanMcdnT302, sigChanMcdnUsageState=sigChanMcdnUsageState, sigChanMcdnFramerComponentName=sigChanMcdnFramerComponentName, sigChanMcdnFramerUnderruns=sigChanMcdnFramerUnderruns, sigChanMcdnOperationalState=sigChanMcdnOperationalState, sigChanMcdnFramerNonOctetErrors=sigChanMcdnFramerNonOctetErrors, sigChanMcdnOperTable=sigChanMcdnOperTable, sigChanMcdnRowStatusEntry=sigChanMcdnRowStatusEntry, sigChanMcdnConOrFeaturesSupported=sigChanMcdnConOrFeaturesSupported, sigChanMcdnFramerStorageType=sigChanMcdnFramerStorageType, sigChanMcdnCoTable=sigChanMcdnCoTable, sigChanMcdnN200=sigChanMcdnN200, sigChanMcdnClsEntry=sigChanMcdnClsEntry, sigChanMcdnMultisiteBusinessGroup=sigChanMcdnMultisiteBusinessGroup, sigChanMcdnComponentName=sigChanMcdnComponentName, vnetMcdnSigCapabilitiesBE01=vnetMcdnSigCapabilitiesBE01, sigChanMcdnT317=sigChanMcdnT317, sigChanMcdnPeakActiveChannels=sigChanMcdnPeakActiveChannels, sigChanMcdnStateTable=sigChanMcdnStateTable, sigChanMcdnNonCallAssocSessionsToIf=sigChanMcdnNonCallAssocSessionsToIf, sigChanMcdnFramerAdminState=sigChanMcdnFramerAdminState, sigChanMcdnRowStatusTable=sigChanMcdnRowStatusTable, sigChanMcdnT304=sigChanMcdnT304, sigChanMcdnStorageType=sigChanMcdnStorageType, sigChanMcdnFramerAborts=sigChanMcdnFramerAborts, sigChanMcdnNonCallAssocSessionsFromIf=sigChanMcdnNonCallAssocSessionsFromIf, sigChanMcdnFramerIndex=sigChanMcdnFramerIndex, sigChanMcdnDChanStatus=sigChanMcdnDChanStatus, sigChanMcdnFramerLargeFrmErrors=sigChanMcdnFramerLargeFrmErrors, sigChanMcdnFramerUsageState=sigChanMcdnFramerUsageState)
