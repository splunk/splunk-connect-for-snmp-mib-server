#
# PySNMP MIB module SONOMASYSTEMS-SONOMA-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMASYSTEMS-SONOMA-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter32, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Integer32, Counter64, Unsigned32, Bits, ObjectIdentity, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Integer32", "Counter64", "Unsigned32", "Bits", "ObjectIdentity", "TimeTicks", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sonomaLAN, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaLAN")
sonomaEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1))
ethernetAdapterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1))
enetSMCGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1))
enetSMCConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 1), )
if mibBuilder.loadTexts: enetSMCConfigTable.setStatus('mandatory')
enetSMCConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 1, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ETHERNET-MIB", "enetSMCConfigIndex"))
if mibBuilder.loadTexts: enetSMCConfigEntry.setStatus('mandatory')
enetSMCConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCConfigIndex.setStatus('mandatory')
enetSMCConfigLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed10Mbps", 1), ("speed100Mbps", 2), ("speedAuto", 3))).clone('speed10Mbps')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enetSMCConfigLineSpeed.setStatus('mandatory')
enetSMCConfigInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("aui", 1), ("twistedPair", 2), ("utp", 3), ("bnc", 4), ("auto", 5))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enetSMCConfigInterface.setStatus('mandatory')
enetSMCConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("halfDuplex", 1), ("fullDuplex", 2))).clone('halfDuplex')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enetSMCConfigMode.setStatus('mandatory')
enetSMCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2), )
if mibBuilder.loadTexts: enetSMCStatsTable.setStatus('mandatory')
enetSMCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ETHERNET-MIB", "enetSMCStatsIndex"))
if mibBuilder.loadTexts: enetSMCStatsEntry.setStatus('mandatory')
enetSMCStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCStatsIndex.setStatus('mandatory')
enetSMCSQEErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCSQEErrors.setStatus('mandatory')
enetSMCRxMissedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCRxMissedFrames.setStatus('mandatory')
enetSMCRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCRetries.setStatus('mandatory')
enetSMCCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCCollisions.setStatus('mandatory')
enetSMCRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCRunts.setStatus('mandatory')
enetSMCFRAMorCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCFRAMorCRCErrors.setStatus('mandatory')
enetSMCTxDeferrals = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCTxDeferrals.setStatus('mandatory')
enetSMCLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCLateCollisions.setStatus('mandatory')
enetSMCLossofCarrierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCLossofCarrierErrors.setStatus('mandatory')
enetSMCRetryErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCRetryErrors.setStatus('mandatory')
enetSMCNoOfLinkResets = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCNoOfLinkResets.setStatus('mandatory')
enetSMCLastLinkResetReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noReason", 1), ("management", 2), ("deviceReset", 3), ("cableDrop", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCLastLinkResetReason.setStatus('mandatory')
enetSMCTimeSinceLastLinkReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCTimeSinceLastLinkReset.setStatus('mandatory')
enetSMCRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCRxPackets.setStatus('mandatory')
enetSMCStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 3), )
if mibBuilder.loadTexts: enetSMCStatusTable.setStatus('mandatory')
enetSMCStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 3, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ETHERNET-MIB", "enetSMCStatsIndex"))
if mibBuilder.loadTexts: enetSMCStatusEntry.setStatus('mandatory')
enetSMCLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed10Mbps", 1), ("speed100Mbps", 2), ("speedAuto", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCLineSpeed.setStatus('mandatory')
enetSMCLineMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("halfDuplex", 1), ("fullDuplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCLineMode.setStatus('mandatory')
enetSMCLineInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 5, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("aui", 1), ("twistedPair", 2), ("utp", 3), ("bnc", 4), ("auto", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enetSMCLineInterface.setStatus('mandatory')
mibBuilder.exportSymbols("SONOMASYSTEMS-SONOMA-ETHERNET-MIB", ethernetAdapterGroup=ethernetAdapterGroup, enetSMCLossofCarrierErrors=enetSMCLossofCarrierErrors, enetSMCLineSpeed=enetSMCLineSpeed, enetSMCNoOfLinkResets=enetSMCNoOfLinkResets, enetSMCStatusTable=enetSMCStatusTable, enetSMCTxDeferrals=enetSMCTxDeferrals, enetSMCConfigInterface=enetSMCConfigInterface, enetSMCRetries=enetSMCRetries, enetSMCConfigIndex=enetSMCConfigIndex, enetSMCRxMissedFrames=enetSMCRxMissedFrames, enetSMCConfigLineSpeed=enetSMCConfigLineSpeed, enetSMCCollisions=enetSMCCollisions, enetSMCConfigEntry=enetSMCConfigEntry, enetSMCRunts=enetSMCRunts, enetSMCLineInterface=enetSMCLineInterface, enetSMCStatusEntry=enetSMCStatusEntry, enetSMCStatsEntry=enetSMCStatsEntry, enetSMCRxPackets=enetSMCRxPackets, enetSMCConfigTable=enetSMCConfigTable, sonomaEthernet=sonomaEthernet, enetSMCGroup=enetSMCGroup, enetSMCLateCollisions=enetSMCLateCollisions, enetSMCStatsTable=enetSMCStatsTable, enetSMCLineMode=enetSMCLineMode, enetSMCRetryErrors=enetSMCRetryErrors, enetSMCSQEErrors=enetSMCSQEErrors, enetSMCFRAMorCRCErrors=enetSMCFRAMorCRCErrors, enetSMCTimeSinceLastLinkReset=enetSMCTimeSinceLastLinkReset, enetSMCConfigMode=enetSMCConfigMode, enetSMCStatsIndex=enetSMCStatsIndex, enetSMCLastLinkResetReason=enetSMCLastLinkResetReason)
