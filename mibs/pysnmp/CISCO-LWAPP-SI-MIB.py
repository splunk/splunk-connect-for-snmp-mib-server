#
# PySNMP MIB module CISCO-LWAPP-SI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-SI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:49:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ciscoLwappSpectrum, cLApName, cLApSysMacAddress, cLApDot11IfSlotId = mibBuilder.importSymbols("CISCO-LWAPP-AP-MIB", "ciscoLwappSpectrum", "cLApName", "cLApSysMacAddress", "cLApDot11IfSlotId")
CLDot11Band, = mibBuilder.importSymbols("CISCO-LWAPP-TC-MIB", "CLDot11Band")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, iso, TimeTicks, IpAddress, Bits, Counter32, Integer32, Counter64, ModuleIdentity, Unsigned32, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "TimeTicks", "IpAddress", "Bits", "Counter32", "Integer32", "Counter64", "ModuleIdentity", "Unsigned32", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
ciscoLwappSiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1))
ciscoLwappSiMIB.setRevisions(('2015-05-18 00:00', '2011-10-01 00:00', '2011-05-16 00:00',))
if mibBuilder.loadTexts: ciscoLwappSiMIB.setLastUpdated('201505180000Z')
if mibBuilder.loadTexts: ciscoLwappSiMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappSiMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0))
ciscoLwappSiMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1))
ciscoLwappSiMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2))
ciscoLwappSiMIBNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 3))
ciscoLwappAirQuality = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1))
ciscoLwappInterference = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2))
ciscoLwappSiDot11Band = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3))
ciscoLwappSiApIf = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4))
cLSiApIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1), )
if mibBuilder.loadTexts: cLSiApIfTable.setStatus('current')
cLSiApIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"))
if mibBuilder.loadTexts: cLSiApIfEntry.setStatus('current')
cLSiApIfSpectrumIntelligenceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiApIfSpectrumIntelligenceEnable.setStatus('current')
cLSiApIfSpectrumCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiApIfSpectrumCapable.setStatus('current')
cLSiApIfRapidUpdateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiApIfRapidUpdateEnable.setStatus('current')
cLSiApIfDetailSpectrumModeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiApIfDetailSpectrumModeEnable.setStatus('current')
cLSiApIfSensordOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("notApplicable", 3))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiApIfSensordOperationalStatus.setStatus('current')
cLSiApIfNumOfSeActiveConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiApIfNumOfSeActiveConnection.setStatus('current')
cLSiApIfSensordErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 129, 130))).clone(namedValues=NamedValues(("configured", 1), ("invalidSIConfig", 2), ("apNonCleanAirMode", 3), ("failedChannelConfig", 4), ("failedResourceAllocation", 5), ("failedConnectionWithSensor", 6), ("radioNotCleanAirCapable", 7), ("failedSIStream", 8), ("radioDisabled", 9), ("recoverableError", 129), ("unrecoverableCrash", 130)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiApIfSensordErrorCode.setStatus('current')
cLSiDot11BandTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1), )
if mibBuilder.loadTexts: cLSiDot11BandTable.setStatus('current')
cLSiDot11BandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-SI-MIB", "cLSiD11Band"))
if mibBuilder.loadTexts: cLSiDot11BandEntry.setStatus('current')
cLSiD11Band = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 1), CLDot11Band())
if mibBuilder.loadTexts: cLSiD11Band.setStatus('current')
cLSiD11SpectrumIntelligenceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11SpectrumIntelligenceEnable.setStatus('current')
cLSiD11InterferenceDeviceList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 3), Bits().clone(namedValues=NamedValues(("wiMaxFixed", 0), ("wiMaxMobile", 1), ("xbox", 2), ("canopy", 3), ("radar", 4), ("superAg", 5), ("wifiInvalidChannel", 6), ("wifiInverted", 7), ("eightZeroTwoDot15dot4", 8), ("videoCamera", 9), ("dectLikePhone", 10), ("continuousTransmitter", 11), ("jammer", 12), ("tddTransmitter", 13), ("bluetoothDiscovery", 14), ("eightZeroTwoDot11Fh", 15), ("microwaveOven", 16), ("bluetoothLink", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11InterferenceDeviceList.setStatus('current')
cLSiD11PollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 60))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11PollingInterval.setStatus('current')
cLSiD11IdrReportingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11IdrReportingEnable.setStatus('current')
cLSiD11AqiTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11AqiTrapEnable.setStatus('current')
cLSiD11AqiTrapThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11AqiTrapThreshold.setStatus('current')
cLSiD11IdrTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11IdrTrapEnable.setStatus('current')
cLSiD11IdrTrapDeviceList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 10), Bits().clone(namedValues=NamedValues(("wiMaxFixed", 0), ("wiMaxMobile", 1), ("xbox", 2), ("canopy", 3), ("radar", 4), ("superAg", 5), ("wifiInvalidChannel", 6), ("wifiInverted", 7), ("eightZeroTwoDot15dot4", 8), ("videoCamera", 9), ("dectLikePhone", 10), ("continuousTransmitter", 11), ("jammer", 12), ("tddTransmitter", 13), ("bluetoothDiscovery", 14), ("eightZeroTwoDot11Fh", 15), ("microwaveOven", 16), ("bluetoothLink", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11IdrTrapDeviceList.setStatus('current')
cLSiD11IdrPersistentDevicePropagation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11IdrPersistentDevicePropagation.setStatus('current')
cLSiD11IdrUnclassifiedTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11IdrUnclassifiedTrapEnable.setStatus('current')
cLSiD11IdrUnclassifiedTrapThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11IdrUnclassifiedTrapThreshold.setStatus('current')
cLSiAqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1), )
if mibBuilder.loadTexts: cLSiAqTable.setStatus('current')
cLSiAqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiAqChannelNumber"))
if mibBuilder.loadTexts: cLSiAqEntry.setStatus('current')
cLSiAqChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)))
if mibBuilder.loadTexts: cLSiAqChannelNumber.setStatus('current')
cLSiAqMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqMinIndex.setStatus('current')
cLSiAqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqIndex.setStatus('current')
cLSiAqTotalChannelPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -60))).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqTotalChannelPower.setStatus('current')
cLSiAqTotalChannelDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqTotalChannelDutyCycle.setStatus('current')
cLSiAqInterferencePower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -60))).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferencePower.setStatus('current')
cLSiAqInterferenceDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceDutyCycle.setStatus('current')
cLSiAqInterferenceDeviceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceDeviceCount.setStatus('current')
cLSiAqInterfererClassReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterfererClassReportCount.setStatus('current')
cLSiAqTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqTimeStamp.setStatus('current')
cLSiAqInterferenceClassReportTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2), )
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportTable.setStatus('current')
cLSiAqInterferenceClassReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiAqChannelNumber"), (0, "CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportIndex"))
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportEntry.setStatus('current')
cLSiAqInterferenceClassReportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportIndex.setStatus('current')
cLSiAqInterferenceClassReportDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 10, 17, 18, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("bluetoothLink", 1), ("microwaveOven", 8), ("eightZeroTwoDot11Fh", 10), ("bluetoothDiscovery", 17), ("tddTransmitter", 18), ("jammer", 19), ("continuousTransmitter", 25), ("dectLikePhone", 26), ("videoCamera", 27), ("eightZeroTwoDot15dot4", 28), ("wifiInverted", 30), ("wifiInvalidChannel", 31), ("superAg", 32), ("radar", 33), ("canopy", 34), ("microsoftDevice", 35), ("wiMaxMobile", 36), ("wiMaxFixed", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportDeviceClass.setStatus('current')
cLSiAqInterferenceClassReportSeverityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportSeverityIndex.setStatus('current')
cLSiAqInterferenceClassReportPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -60))).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportPower.setStatus('current')
cLSiAqInterferenceClassReportDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportDutyCycle.setStatus('current')
cLSiAqInterferenceClassReportDeviceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiAqInterferenceClassReportDeviceCount.setStatus('current')
cLSiIdrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1), )
if mibBuilder.loadTexts: cLSiIdrTable.setStatus('current')
cLSiIdrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceId"))
if mibBuilder.loadTexts: cLSiIdrEntry.setStatus('current')
cLSiIdrDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cLSiIdrDeviceId.setStatus('current')
cLSiIdrClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterId.setStatus('current')
cLSiIdrTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrTimeStamp.setStatus('current')
cLSiIdrDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 10, 17, 18, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("bluetoothLink", 1), ("microwaveOven", 8), ("eightZeroTwoDot11Fh", 10), ("bluetoothDiscovery", 17), ("tddTransmitter", 18), ("jammer", 19), ("continuousTransmitter", 25), ("dectLikePhone", 26), ("videoCamera", 27), ("eightZeroTwoDot15dot4", 28), ("wifiInverted", 30), ("wifiInvalidChannel", 31), ("superAg", 32), ("radar", 33), ("canopy", 34), ("microsoftDevice", 35), ("wiMaxMobile", 36), ("wiMaxFixed", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrDeviceType.setStatus('current')
cLSiIdrSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrSeverity.setStatus('current')
cLSiIdrDetectingApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrDetectingApMac.setStatus('current')
cLSiIdrDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrDutyCycle.setStatus('current')
cLSiIdrAntennaId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrAntennaId.setStatus('current')
cLSiIdrRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -60))).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrRssi.setStatus('current')
cLSiIdrRadioBandId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 10), CLDot11Band()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrRadioBandId.setStatus('current')
cLSiIdrAffectedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrAffectedChannels.setStatus('current')
cLSiIdrDeviceSignatureLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrDeviceSignatureLen.setStatus('current')
cLSiIdrDeviceSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrDeviceSignature.setStatus('current')
cLSiIdrClusterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2), )
if mibBuilder.loadTexts: cLSiIdrClusterTable.setStatus('current')
cLSiIdrClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-SI-MIB", "cLSiIdrClusterRadioBandId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiIdrClusterClusterId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDeviceIndex"))
if mibBuilder.loadTexts: cLSiIdrClusterEntry.setStatus('current')
cLSiIdrClusterRadioBandId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 1), CLDot11Band()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterRadioBandId.setStatus('current')
cLSiIdrClusterClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterClusterId.setStatus('current')
cLSiIdrClusterDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: cLSiIdrClusterDeviceIndex.setStatus('current')
cLSiIdrClusterDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterDeviceId.setStatus('current')
cLSiIdrClusterTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterTimeStamp.setStatus('current')
cLSiIdrClusterDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 10, 17, 18, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40))).clone(namedValues=NamedValues(("bluetoothLink", 1), ("microwaveOven", 8), ("eightZeroTwoDot11Fh", 10), ("bluetoothDiscovery", 17), ("tddTransmitter", 18), ("jammer", 19), ("continuousTransmitter", 25), ("dectLikePhone", 26), ("videoCamera", 27), ("eightZeroTwoDot15dot4", 28), ("wifiInverted", 30), ("wifiInvalidChannel", 31), ("superAg", 32), ("radar", 33), ("canopy", 34), ("microsoftDevice", 35), ("wiMaxMobile", 36), ("wiMaxFixed", 37), ("wifiAci", 38), ("unclassified", 39), ("unknown", 40)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterDeviceType.setStatus('current')
cLSiIdrClusterSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterSeverity.setStatus('current')
cLSiIdrClusterDetectingApMac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 8), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterDetectingApMac.setStatus('current')
cLSiIdrClusterDutyCycle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterDutyCycle.setStatus('current')
cLSiIdrClusterAntennaId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterAntennaId.setStatus('current')
cLSiIdrClusterRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -60))).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterRssi.setStatus('current')
cLSiIdrClusterAffectedChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterAffectedChannels.setStatus('current')
cLSiIdrClusterDeviceSignatureLen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterDeviceSignatureLen.setStatus('current')
cLSiIdrClusterDeviceSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterDeviceSignature.setStatus('current')
cLSiIdrClusterCenterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterCenterIndex.setStatus('current')
cLSiIdrClusterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 8, 10, 17, 18, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40))).clone(namedValues=NamedValues(("bluetoothLink", 1), ("microwaveOven", 8), ("eightZeroTwoDot11Fh", 10), ("bluetoothDiscovery", 17), ("tddTransmitter", 18), ("jammer", 19), ("continuousTransmitter", 25), ("dectLikePhone", 26), ("videoCamera", 27), ("eightZeroTwoDot15dot4", 28), ("wifiInverted", 30), ("wifiInvalidChannel", 31), ("superAg", 32), ("radar", 33), ("canopy", 34), ("microsoftDevice", 35), ("wiMaxMobile", 36), ("wiMaxFixed", 37), ("wifiAci", 38), ("unclassified", 39), ("unknown", 40)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiIdrClusterType.setStatus('current')
cLSiDot11BandEventDrivenRrmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 2), )
if mibBuilder.loadTexts: cLSiDot11BandEventDrivenRrmTable.setStatus('current')
cLSiDot11BandEventDrivenRrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-SI-MIB", "cLSiD11Band"))
if mibBuilder.loadTexts: cLSiDot11BandEventDrivenRrmEntry.setStatus('current')
cLSiD11EventDrivenRrmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 2, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11EventDrivenRrmEnable.setStatus('current')
cLSiD11EventDrivenRrmThresLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3), ("custom", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11EventDrivenRrmThresLvl.setStatus('current')
cLSiD11EventDrivenRrmCustomThresVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLSiD11EventDrivenRrmCustomThresVal.setStatus('current')
cLSiPersistentDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 3), )
if mibBuilder.loadTexts: cLSiPersistentDeviceTable.setStatus('current')
cLSiPersistentDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceId"))
if mibBuilder.loadTexts: cLSiPersistentDeviceEntry.setStatus('current')
cLSiPersistentDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cLSiPersistentDeviceId.setStatus('current')
cLSiPersistentDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiPersistentDeviceType.setStatus('current')
cLSiPersistentTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiPersistentTimeStamp.setStatus('current')
cLSiPersistentDeviceChanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 4), )
if mibBuilder.loadTexts: cLSiPersistentDeviceChanTable.setStatus('current')
cLSiPersistentDeviceChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceId"), (0, "CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceChanIndex"))
if mibBuilder.loadTexts: cLSiPersistentDeviceChanEntry.setStatus('current')
cLSiPersistentDeviceChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cLSiPersistentDeviceChanIndex.setStatus('current')
cLSiChannelAffected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiChannelAffected.setStatus('current')
cLSiChannelUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiChannelUtil.setStatus('current')
cLSiChannelRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLSiChannelRSSI.setStatus('current')
cLSiAlarmClear = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 3, 1), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLSiAlarmClear.setStatus('current')
cLSiIdrPreviousClusterId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 3, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLSiIdrPreviousClusterId.setStatus('current')
cLSiApAqLimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 3, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLSiApAqLimit.setStatus('current')
cLSiD11IdrUnclassifiedCurrentSevIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLSiD11IdrUnclassifiedCurrentSevIndex.setStatus('current')
ciscoLwappSiAqLow = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 1)).setObjects(("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), ("CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), ("CISCO-LWAPP-SI-MIB", "cLSiAqChannelNumber"), ("CISCO-LWAPP-SI-MIB", "cLSiAqIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiD11AqiTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"))
if mibBuilder.loadTexts: ciscoLwappSiAqLow.setStatus('deprecated')
ciscoLwappSiIdrDevice = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 2)).setObjects(("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), ("CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceType"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrAffectedChannels"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrSeverity"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterId"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"), ("CISCO-LWAPP-AP-MIB", "cLApName"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrPreviousClusterId"))
if mibBuilder.loadTexts: ciscoLwappSiIdrDevice.setStatus('deprecated')
ciscoLwappSiSensorCrash = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 3)).setObjects(("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), ("CISCO-LWAPP-AP-MIB", "cLApName"), ("CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfSensordOperationalStatus"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfSensordErrorCode"))
if mibBuilder.loadTexts: ciscoLwappSiSensorCrash.setStatus('deprecated')
ciscoLwappSiAqBufferUnavailable = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 4)).setObjects(("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), ("CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), ("CISCO-LWAPP-SI-MIB", "cLSiApAqLimit"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"))
if mibBuilder.loadTexts: ciscoLwappSiAqBufferUnavailable.setStatus('deprecated')
ciscoLwappSiAqLowSeverityHigh = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 5)).setObjects(("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), ("CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), ("CISCO-LWAPP-SI-MIB", "cLSiAqChannelNumber"), ("CISCO-LWAPP-SI-MIB", "cLSiAqIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiD11AqiTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedCurrentSevIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"))
if mibBuilder.loadTexts: ciscoLwappSiAqLowSeverityHigh.setStatus('deprecated')
ciscoLwappSiAqLowRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 6)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiAqIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiD11AqiTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"))
if mibBuilder.loadTexts: ciscoLwappSiAqLowRev1.setStatus('current')
ciscoLwappSiIdrDeviceRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 7)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceType"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrAffectedChannels"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrSeverity"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterId"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"), ("CISCO-LWAPP-AP-MIB", "cLApName"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrPreviousClusterId"))
if mibBuilder.loadTexts: ciscoLwappSiIdrDeviceRev1.setStatus('current')
ciscoLwappSiSensorCrashRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 8)).setObjects(("CISCO-LWAPP-AP-MIB", "cLApName"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfSensordOperationalStatus"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfSensordErrorCode"))
if mibBuilder.loadTexts: ciscoLwappSiSensorCrashRev1.setStatus('current')
ciscoLwappSiAqBufferUnavailableRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 9)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiApAqLimit"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"))
if mibBuilder.loadTexts: ciscoLwappSiAqBufferUnavailableRev1.setStatus('current')
ciscoLwappSiAqLowSeverityHighRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 0, 10)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiAqIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiD11AqiTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedCurrentSevIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"))
if mibBuilder.loadTexts: ciscoLwappSiAqLowSeverityHighRev1.setStatus('current')
ciscoLwappSiMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 1))
ciscoLwappSiMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2))
ciscoLwappApSiMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 1, 1)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiApIfConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11ConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiAqChannelStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceChanStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappApSiMIBCompliance = ciscoLwappApSiMIBCompliance.setStatus('deprecated')
ciscoLwappApSiMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 1, 2)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiApIfConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11ConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11ConfigSup1Group"), ("CISCO-LWAPP-SI-MIB", "cLSiAqChannelStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmConfigSup1Group"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceChanStatusGroup"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiMIBNotifGroup"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiMIBNotifVariableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappApSiMIBComplianceRev1 = ciscoLwappApSiMIBComplianceRev1.setStatus('deprecated')
ciscoLwappApSiMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 1, 3)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiApIfConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11ConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11ConfigSup1Group"), ("CISCO-LWAPP-SI-MIB", "cLSiAqChannelStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmConfigGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmConfigSup1Group"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceStatusGroup"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceChanStatusGroup"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiMIBNotifVariableGroup"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiMIBNotifGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappApSiMIBComplianceRev2 = ciscoLwappApSiMIBComplianceRev2.setStatus('current')
cLSiApIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 1)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiApIfSpectrumIntelligenceEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfRapidUpdateEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfDetailSpectrumModeEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiApIfConfigGroup = cLSiApIfConfigGroup.setStatus('current')
cLSiApIfStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 2)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiApIfSpectrumCapable"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfSensordOperationalStatus"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfNumOfSeActiveConnection"), ("CISCO-LWAPP-SI-MIB", "cLSiApIfSensordErrorCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiApIfStatusGroup = cLSiApIfStatusGroup.setStatus('current')
cLSiD11ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 3)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiD11SpectrumIntelligenceEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiD11InterferenceDeviceList"), ("CISCO-LWAPP-SI-MIB", "cLSiD11PollingInterval"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrReportingEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiD11AqiTrapEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiD11AqiTrapThreshold"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrTrapEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrTrapDeviceList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiD11ConfigGroup = cLSiD11ConfigGroup.setStatus('current')
cLSiAqChannelStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 4)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiAqMinIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiAqIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiAqTotalChannelPower"), ("CISCO-LWAPP-SI-MIB", "cLSiAqTotalChannelDutyCycle"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferencePower"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceDutyCycle"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceDeviceCount"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterfererClassReportCount"), ("CISCO-LWAPP-SI-MIB", "cLSiAqTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiAqChannelStatusGroup = cLSiAqChannelStatusGroup.setStatus('current')
cLSiAqInterferenceClassReportStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 5)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportDeviceClass"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportSeverityIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportPower"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportDutyCycle"), ("CISCO-LWAPP-SI-MIB", "cLSiAqInterferenceClassReportDeviceCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiAqInterferenceClassReportStatusGroup = cLSiAqInterferenceClassReportStatusGroup.setStatus('current')
cLSiIdrStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 6)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrTimeStamp"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceType"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrSeverity"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDetectingApMac"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDutyCycle"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrAntennaId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrRssi"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrRadioBandId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrAffectedChannels"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceSignatureLen"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrDeviceSignature"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiIdrStatusGroup = cLSiIdrStatusGroup.setStatus('current')
cLSiIdrClusterStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 7)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterRadioBandId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterClusterId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDeviceId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterTimeStamp"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDeviceType"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterSeverity"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDetectingApMac"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDutyCycle"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterAntennaId"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterRssi"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterAffectedChannels"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDeviceSignatureLen"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterDeviceSignature"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterCenterIndex"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrClusterType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiIdrClusterStatusGroup = cLSiIdrClusterStatusGroup.setStatus('current')
cLSiD11EventDrivenRrmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 8)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmThresLvl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiD11EventDrivenRrmConfigGroup = cLSiD11EventDrivenRrmConfigGroup.setStatus('current')
cLSiPersistentDeviceStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 9)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiPersistentDeviceType"), ("CISCO-LWAPP-SI-MIB", "cLSiPersistentTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiPersistentDeviceStatusGroup = cLSiPersistentDeviceStatusGroup.setStatus('current')
cLSiPersistentDeviceChanStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 10)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiChannelAffected"), ("CISCO-LWAPP-SI-MIB", "cLSiChannelUtil"), ("CISCO-LWAPP-SI-MIB", "cLSiChannelRSSI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiPersistentDeviceChanStatusGroup = cLSiPersistentDeviceChanStatusGroup.setStatus('current')
cLSiD11ConfigSup1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 11)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiD11IdrPersistentDevicePropagation"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedTrapEnable"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedTrapThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiD11ConfigSup1Group = cLSiD11ConfigSup1Group.setStatus('current')
cLSiD11EventDrivenRrmConfigSup1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 12)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiD11EventDrivenRrmCustomThresVal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSiD11EventDrivenRrmConfigSup1Group = cLSiD11EventDrivenRrmConfigSup1Group.setStatus('current')
ciscoLwappSiMIBNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 13)).setObjects(("CISCO-LWAPP-SI-MIB", "ciscoLwappSiAqLow"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiIdrDevice"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiSensorCrash"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiAqBufferUnavailable"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiAqLowSeverityHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappSiMIBNotifGroup = ciscoLwappSiMIBNotifGroup.setStatus('deprecated')
ciscoLwappSiMIBNotifVariableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 14)).setObjects(("CISCO-LWAPP-SI-MIB", "cLSiAlarmClear"), ("CISCO-LWAPP-SI-MIB", "cLSiIdrPreviousClusterId"), ("CISCO-LWAPP-SI-MIB", "cLSiApAqLimit"), ("CISCO-LWAPP-SI-MIB", "cLSiD11IdrUnclassifiedCurrentSevIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappSiMIBNotifVariableGroup = ciscoLwappSiMIBNotifVariableGroup.setStatus('current')
ciscoLwappSiMIBNotifGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 513, 1, 6, 1, 2, 2, 15)).setObjects(("CISCO-LWAPP-SI-MIB", "ciscoLwappSiAqLowRev1"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiIdrDeviceRev1"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiSensorCrashRev1"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiAqBufferUnavailableRev1"), ("CISCO-LWAPP-SI-MIB", "ciscoLwappSiAqLowSeverityHighRev1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappSiMIBNotifGroupRev1 = ciscoLwappSiMIBNotifGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-SI-MIB", cLSiAqIndex=cLSiAqIndex, PYSNMP_MODULE_ID=ciscoLwappSiMIB, cLSiAqEntry=cLSiAqEntry, cLSiD11EventDrivenRrmCustomThresVal=cLSiD11EventDrivenRrmCustomThresVal, cLSiD11Band=cLSiD11Band, cLSiPersistentDeviceTable=cLSiPersistentDeviceTable, cLSiD11InterferenceDeviceList=cLSiD11InterferenceDeviceList, cLSiAqInterferenceClassReportSeverityIndex=cLSiAqInterferenceClassReportSeverityIndex, cLSiAqInterferenceClassReportStatusGroup=cLSiAqInterferenceClassReportStatusGroup, cLSiAqInterferenceClassReportDutyCycle=cLSiAqInterferenceClassReportDutyCycle, cLSiIdrDetectingApMac=cLSiIdrDetectingApMac, cLSiIdrClusterEntry=cLSiIdrClusterEntry, cLSiAqChannelStatusGroup=cLSiAqChannelStatusGroup, cLSiDot11BandTable=cLSiDot11BandTable, cLSiAqTotalChannelPower=cLSiAqTotalChannelPower, ciscoLwappSiMIBNotifs=ciscoLwappSiMIBNotifs, cLSiIdrSeverity=cLSiIdrSeverity, cLSiD11IdrUnclassifiedTrapEnable=cLSiD11IdrUnclassifiedTrapEnable, cLSiIdrAffectedChannels=cLSiIdrAffectedChannels, cLSiD11IdrReportingEnable=cLSiD11IdrReportingEnable, ciscoLwappApSiMIBComplianceRev1=ciscoLwappApSiMIBComplianceRev1, ciscoLwappSiMIBCompliances=ciscoLwappSiMIBCompliances, cLSiPersistentDeviceEntry=cLSiPersistentDeviceEntry, cLSiIdrClusterSeverity=cLSiIdrClusterSeverity, cLSiAqInterferenceClassReportEntry=cLSiAqInterferenceClassReportEntry, cLSiD11ConfigSup1Group=cLSiD11ConfigSup1Group, cLSiIdrPreviousClusterId=cLSiIdrPreviousClusterId, ciscoLwappSiMIBNotifGroup=ciscoLwappSiMIBNotifGroup, cLSiD11IdrUnclassifiedCurrentSevIndex=cLSiD11IdrUnclassifiedCurrentSevIndex, cLSiIdrDeviceId=cLSiIdrDeviceId, cLSiPersistentDeviceChanTable=cLSiPersistentDeviceChanTable, cLSiIdrDeviceSignature=cLSiIdrDeviceSignature, cLSiIdrDeviceType=cLSiIdrDeviceType, cLSiPersistentDeviceChanIndex=cLSiPersistentDeviceChanIndex, cLSiAqTimeStamp=cLSiAqTimeStamp, cLSiIdrEntry=cLSiIdrEntry, cLSiAqInterfererClassReportCount=cLSiAqInterfererClassReportCount, cLSiD11AqiTrapThreshold=cLSiD11AqiTrapThreshold, cLSiIdrClusterId=cLSiIdrClusterId, cLSiAqInterferenceClassReportPower=cLSiAqInterferenceClassReportPower, cLSiIdrDeviceSignatureLen=cLSiIdrDeviceSignatureLen, cLSiChannelAffected=cLSiChannelAffected, cLSiD11IdrTrapEnable=cLSiD11IdrTrapEnable, cLSiIdrClusterDeviceSignature=cLSiIdrClusterDeviceSignature, cLSiIdrStatusGroup=cLSiIdrStatusGroup, ciscoLwappAirQuality=ciscoLwappAirQuality, cLSiD11AqiTrapEnable=cLSiD11AqiTrapEnable, cLSiD11IdrTrapDeviceList=cLSiD11IdrTrapDeviceList, cLSiAqInterferenceClassReportTable=cLSiAqInterferenceClassReportTable, ciscoLwappSiMIB=ciscoLwappSiMIB, ciscoLwappSiAqLow=ciscoLwappSiAqLow, cLSiDot11BandEntry=cLSiDot11BandEntry, cLSiPersistentDeviceStatusGroup=cLSiPersistentDeviceStatusGroup, cLSiIdrClusterTimeStamp=cLSiIdrClusterTimeStamp, cLSiAqInterferenceClassReportIndex=cLSiAqInterferenceClassReportIndex, cLSiApIfSpectrumIntelligenceEnable=cLSiApIfSpectrumIntelligenceEnable, cLSiD11EventDrivenRrmConfigSup1Group=cLSiD11EventDrivenRrmConfigSup1Group, cLSiIdrClusterDeviceIndex=cLSiIdrClusterDeviceIndex, cLSiAlarmClear=cLSiAlarmClear, cLSiApIfDetailSpectrumModeEnable=cLSiApIfDetailSpectrumModeEnable, cLSiPersistentDeviceChanStatusGroup=cLSiPersistentDeviceChanStatusGroup, cLSiD11IdrUnclassifiedTrapThreshold=cLSiD11IdrUnclassifiedTrapThreshold, cLSiApIfStatusGroup=cLSiApIfStatusGroup, ciscoLwappSiMIBObjects=ciscoLwappSiMIBObjects, ciscoLwappSiMIBConform=ciscoLwappSiMIBConform, cLSiIdrClusterStatusGroup=cLSiIdrClusterStatusGroup, ciscoLwappSiMIBNotifGroupRev1=ciscoLwappSiMIBNotifGroupRev1, cLSiD11EventDrivenRrmThresLvl=cLSiD11EventDrivenRrmThresLvl, ciscoLwappSiAqLowRev1=ciscoLwappSiAqLowRev1, cLSiIdrClusterRssi=cLSiIdrClusterRssi, cLSiIdrAntennaId=cLSiIdrAntennaId, ciscoLwappInterference=ciscoLwappInterference, cLSiIdrClusterAntennaId=cLSiIdrClusterAntennaId, ciscoLwappSiSensorCrash=ciscoLwappSiSensorCrash, cLSiApIfNumOfSeActiveConnection=cLSiApIfNumOfSeActiveConnection, cLSiApIfSensordErrorCode=cLSiApIfSensordErrorCode, ciscoLwappSiDot11Band=ciscoLwappSiDot11Band, cLSiAqInterferenceDeviceCount=cLSiAqInterferenceDeviceCount, cLSiApIfRapidUpdateEnable=cLSiApIfRapidUpdateEnable, cLSiD11ConfigGroup=cLSiD11ConfigGroup, ciscoLwappSiMIBGroups=ciscoLwappSiMIBGroups, cLSiChannelRSSI=cLSiChannelRSSI, ciscoLwappSiAqBufferUnavailable=ciscoLwappSiAqBufferUnavailable, cLSiApIfConfigGroup=cLSiApIfConfigGroup, cLSiApIfTable=cLSiApIfTable, ciscoLwappSiIdrDeviceRev1=ciscoLwappSiIdrDeviceRev1, cLSiIdrClusterCenterIndex=cLSiIdrClusterCenterIndex, ciscoLwappSiAqLowSeverityHigh=ciscoLwappSiAqLowSeverityHigh, cLSiPersistentTimeStamp=cLSiPersistentTimeStamp, cLSiD11EventDrivenRrmEnable=cLSiD11EventDrivenRrmEnable, ciscoLwappSiMIBNotifVariableGroup=ciscoLwappSiMIBNotifVariableGroup, cLSiIdrClusterAffectedChannels=cLSiIdrClusterAffectedChannels, cLSiAqChannelNumber=cLSiAqChannelNumber, cLSiIdrRssi=cLSiIdrRssi, ciscoLwappSiSensorCrashRev1=ciscoLwappSiSensorCrashRev1, cLSiD11SpectrumIntelligenceEnable=cLSiD11SpectrumIntelligenceEnable, ciscoLwappApSiMIBComplianceRev2=ciscoLwappApSiMIBComplianceRev2, ciscoLwappSiAqBufferUnavailableRev1=ciscoLwappSiAqBufferUnavailableRev1, cLSiD11EventDrivenRrmConfigGroup=cLSiD11EventDrivenRrmConfigGroup, ciscoLwappSiIdrDevice=ciscoLwappSiIdrDevice, cLSiApAqLimit=cLSiApAqLimit, cLSiPersistentDeviceType=cLSiPersistentDeviceType, ciscoLwappSiAqLowSeverityHighRev1=ciscoLwappSiAqLowSeverityHighRev1, ciscoLwappSiApIf=ciscoLwappSiApIf, cLSiAqInterferenceClassReportDeviceCount=cLSiAqInterferenceClassReportDeviceCount, cLSiIdrClusterTable=cLSiIdrClusterTable, cLSiDot11BandEventDrivenRrmEntry=cLSiDot11BandEventDrivenRrmEntry, cLSiIdrClusterRadioBandId=cLSiIdrClusterRadioBandId, cLSiAqTotalChannelDutyCycle=cLSiAqTotalChannelDutyCycle, cLSiAqInterferencePower=cLSiAqInterferencePower, cLSiAqMinIndex=cLSiAqMinIndex, cLSiApIfSpectrumCapable=cLSiApIfSpectrumCapable, cLSiIdrClusterDeviceSignatureLen=cLSiIdrClusterDeviceSignatureLen, cLSiAqTable=cLSiAqTable, ciscoLwappSiMIBNotifObjects=ciscoLwappSiMIBNotifObjects, cLSiIdrTimeStamp=cLSiIdrTimeStamp, cLSiDot11BandEventDrivenRrmTable=cLSiDot11BandEventDrivenRrmTable, cLSiIdrDutyCycle=cLSiIdrDutyCycle, cLSiAqInterferenceDutyCycle=cLSiAqInterferenceDutyCycle, cLSiIdrClusterDeviceType=cLSiIdrClusterDeviceType, cLSiD11IdrPersistentDevicePropagation=cLSiD11IdrPersistentDevicePropagation, cLSiIdrClusterDutyCycle=cLSiIdrClusterDutyCycle, cLSiIdrClusterDetectingApMac=cLSiIdrClusterDetectingApMac, cLSiPersistentDeviceChanEntry=cLSiPersistentDeviceChanEntry, cLSiIdrClusterDeviceId=cLSiIdrClusterDeviceId, cLSiChannelUtil=cLSiChannelUtil, ciscoLwappApSiMIBCompliance=ciscoLwappApSiMIBCompliance, cLSiApIfSensordOperationalStatus=cLSiApIfSensordOperationalStatus, cLSiD11PollingInterval=cLSiD11PollingInterval, cLSiPersistentDeviceId=cLSiPersistentDeviceId, cLSiIdrClusterType=cLSiIdrClusterType, cLSiApIfEntry=cLSiApIfEntry, cLSiIdrRadioBandId=cLSiIdrRadioBandId, cLSiAqInterferenceClassReportDeviceClass=cLSiAqInterferenceClassReportDeviceClass, cLSiIdrTable=cLSiIdrTable, cLSiIdrClusterClusterId=cLSiIdrClusterClusterId)
