#
# PySNMP MIB module TPLINK-L2BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-L2BRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:17:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, ModuleIdentity, Gauge32, MibIdentifier, Bits, Integer32, Counter64, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "ModuleIdentity", "Gauge32", "MibIdentifier", "Bits", "Integer32", "Counter64", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkl2BridgeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 10))
tplinkl2BridgeMIB.setRevisions(('2012-12-13 00:00',))
if mibBuilder.loadTexts: tplinkl2BridgeMIB.setLastUpdated('201212130000Z')
if mibBuilder.loadTexts: tplinkl2BridgeMIB.setOrganization('TP-LINK')
tplinkl2BridgeMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1))
tplinkl2BridgeNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2))
tpl2BridgeManageStaticAddrCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1))
tpl2BridgeManageDynAddrCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2))
tpl2BridgeManageFilterAddrCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 3))
tpl2BridgeManageVlanSecurityCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 4))
tpl2BridgeManageNotificationCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5))
fdbDynMacNew = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2, 1)).setObjects(("TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageDynPort"))
if mibBuilder.loadTexts: fdbDynMacNew.setStatus('current')
fdbStaticMacNew = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2, 2)).setObjects(("TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageStaticPort"))
if mibBuilder.loadTexts: fdbStaticMacNew.setStatus('current')
fdbFilterMacNew = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2, 3)).setObjects(("TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageFilterVlanId"))
if mibBuilder.loadTexts: fdbFilterMacNew.setStatus('current')
fdbMacTableFull = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2, 4)).setObjects(("TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageStaticPort"))
if mibBuilder.loadTexts: fdbMacTableFull.setStatus('current')
fdbMacMaxLearnedNumExceed = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2, 5)).setObjects(("TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageStaticPort"))
if mibBuilder.loadTexts: fdbMacMaxLearnedNumExceed.setStatus('current')
fdbMacLearnModeChange = NotificationType((1, 3, 6, 1, 4, 1, 11863, 6, 10, 2, 6)).setObjects(("TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageStaticPort"))
if mibBuilder.loadTexts: fdbMacLearnModeChange.setStatus('current')
tpl2BridgeManageStaticAddrCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1, 1), )
if mibBuilder.loadTexts: tpl2BridgeManageStaticAddrCtrlTable.setStatus('current')
tpl2BridgeManageStaticAddrCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1, 1, 1), ).setIndexNames((0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageStaticMac"), (0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageStaticVlanId"))
if mibBuilder.loadTexts: tpl2BridgeManageStaticAddrCtrlEntry.setStatus('current')
tpl2BridgeManageStaticMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageStaticMac.setStatus('current')
tpl2BridgeManageStaticVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageStaticVlanId.setStatus('current')
tpl2BridgeManageStaticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpl2BridgeManageStaticPort.setStatus('current')
tpl2BridgeManageStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 1, 1, 1, 4), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpl2BridgeManageStaticStatus.setStatus('current')
tpl2BridgeManageDynAddrCtrlAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 630))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageDynAddrCtrlAgingTime.setStatus('current')
tpl2BridgeManageDynAddrCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2), )
if mibBuilder.loadTexts: tpl2BridgeManageDynAddrCtrlTable.setStatus('current')
tpl2BridgeManageDynAddrCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2, 1), ).setIndexNames((0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageDynMac"), (0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageDynVlanId"))
if mibBuilder.loadTexts: tpl2BridgeManageDynAddrCtrlEntry.setStatus('current')
tpl2BridgeManageDynMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageDynMac.setStatus('current')
tpl2BridgeManageDynVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageDynVlanId.setStatus('current')
tpl2BridgeManageDynPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageDynPort.setStatus('current')
tpl2BridgeManageDynAgeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noAging", 0), ("aging", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageDynAgeStatus.setStatus('current')
tpl2BridgeManageDynStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("bind", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageDynStatus.setStatus('current')
tpl2BridgeManageFilterCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 3, 1), )
if mibBuilder.loadTexts: tpl2BridgeManageFilterCtrlTable.setStatus('current')
tpl2BridgeManageFilterCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 3, 1, 1), ).setIndexNames((0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageFilterMac"), (0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManageFilterVlanId"))
if mibBuilder.loadTexts: tpl2BridgeManageFilterCtrlEntry.setStatus('current')
tpl2BridgeManageFilterMac = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 3, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageFilterMac.setStatus('current')
tpl2BridgeManageFilterVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManageFilterVlanId.setStatus('current')
tpl2BridgeManageFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 3, 1, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpl2BridgeManageFilterStatus.setStatus('current')
class VlanSecEntryStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("disable", 0), ("drop", 1), ("forward", 2), ("createRequest", 3), ("destroy", 4))

tpl2BridgeManagevlanSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 4, 1), )
if mibBuilder.loadTexts: tpl2BridgeManagevlanSecurityTable.setStatus('current')
tpl2BridgeManagevlanSecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 4, 1, 1), ).setIndexNames((0, "TPLINK-L2BRIDGE-MIB", "tpFdbVlanSecurityVid"))
if mibBuilder.loadTexts: tpl2BridgeManagevlanSecEntry.setStatus('current')
tpFdbVlanSecurityVid = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpFdbVlanSecurityVid.setStatus('current')
tpFdbVlanSecurityMaxLearned = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpFdbVlanSecurityMaxLearned.setStatus('current')
tpFdbVlanSecurityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 4, 1, 1, 3), VlanSecEntryStatus().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tpFdbVlanSecurityRowStatus.setStatus('current')
tpl2BridgeManageNotificationGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageNotificationGlobalStatus.setStatus('current')
tpl2BridgeManageNotificationTableFullStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageNotificationTableFullStatus.setStatus('current')
tpl2BridgeManageNotificationInterval = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageNotificationInterval.setStatus('current')
tpl2BridgeManageNotificationTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 4), )
if mibBuilder.loadTexts: tpl2BridgeManageNotificationTable.setStatus('current')
tpl2BridgeManageNotificationCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 4, 1), ).setIndexNames((0, "TPLINK-L2BRIDGE-MIB", "tpl2BridgeManagePortIndex"))
if mibBuilder.loadTexts: tpl2BridgeManageNotificationCtrlEntry.setStatus('current')
tpl2BridgeManagePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tpl2BridgeManagePortIndex.setStatus('current')
tpl2BridgeManageLrnModeChg = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageLrnModeChg.setStatus('current')
tpl2BridgeManageExceedMaxLrn = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageExceedMaxLrn.setStatus('current')
tpl2BridgeManageNewMacLrn = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 10, 1, 5, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tpl2BridgeManageNewMacLrn.setStatus('current')
mibBuilder.exportSymbols("TPLINK-L2BRIDGE-MIB", tpl2BridgeManageFilterAddrCtrl=tpl2BridgeManageFilterAddrCtrl, fdbMacLearnModeChange=fdbMacLearnModeChange, tpl2BridgeManageFilterCtrlTable=tpl2BridgeManageFilterCtrlTable, tpl2BridgeManageNotificationTable=tpl2BridgeManageNotificationTable, tplinkl2BridgeMIB=tplinkl2BridgeMIB, tpl2BridgeManageVlanSecurityCtrl=tpl2BridgeManageVlanSecurityCtrl, tpl2BridgeManageNotificationInterval=tpl2BridgeManageNotificationInterval, tpl2BridgeManageStaticMac=tpl2BridgeManageStaticMac, fdbFilterMacNew=fdbFilterMacNew, tpl2BridgeManageDynStatus=tpl2BridgeManageDynStatus, tplinkl2BridgeNotifications=tplinkl2BridgeNotifications, PYSNMP_MODULE_ID=tplinkl2BridgeMIB, fdbMacTableFull=fdbMacTableFull, tpl2BridgeManageDynAgeStatus=tpl2BridgeManageDynAgeStatus, tpl2BridgeManageDynVlanId=tpl2BridgeManageDynVlanId, tpl2BridgeManageNotificationCtrlEntry=tpl2BridgeManageNotificationCtrlEntry, tpl2BridgeManagevlanSecEntry=tpl2BridgeManagevlanSecEntry, tpl2BridgeManageExceedMaxLrn=tpl2BridgeManageExceedMaxLrn, tpFdbVlanSecurityRowStatus=tpFdbVlanSecurityRowStatus, tpl2BridgeManageDynAddrCtrlTable=tpl2BridgeManageDynAddrCtrlTable, tpl2BridgeManageFilterCtrlEntry=tpl2BridgeManageFilterCtrlEntry, tpl2BridgeManageNewMacLrn=tpl2BridgeManageNewMacLrn, tpl2BridgeManageStaticVlanId=tpl2BridgeManageStaticVlanId, fdbDynMacNew=fdbDynMacNew, tpFdbVlanSecurityMaxLearned=tpFdbVlanSecurityMaxLearned, tpl2BridgeManageStaticAddrCtrlTable=tpl2BridgeManageStaticAddrCtrlTable, tpFdbVlanSecurityVid=tpFdbVlanSecurityVid, tpl2BridgeManageFilterStatus=tpl2BridgeManageFilterStatus, tpl2BridgeManageNotificationTableFullStatus=tpl2BridgeManageNotificationTableFullStatus, fdbMacMaxLearnedNumExceed=fdbMacMaxLearnedNumExceed, tpl2BridgeManageNotificationCtrl=tpl2BridgeManageNotificationCtrl, tpl2BridgeManageDynAddrCtrlAgingTime=tpl2BridgeManageDynAddrCtrlAgingTime, tpl2BridgeManageFilterVlanId=tpl2BridgeManageFilterVlanId, tpl2BridgeManagePortIndex=tpl2BridgeManagePortIndex, tpl2BridgeManageDynAddrCtrl=tpl2BridgeManageDynAddrCtrl, tpl2BridgeManageStaticPort=tpl2BridgeManageStaticPort, tpl2BridgeManageDynMac=tpl2BridgeManageDynMac, VlanSecEntryStatus=VlanSecEntryStatus, tpl2BridgeManageFilterMac=tpl2BridgeManageFilterMac, tpl2BridgeManageLrnModeChg=tpl2BridgeManageLrnModeChg, tpl2BridgeManageDynPort=tpl2BridgeManageDynPort, tplinkl2BridgeMIBObjects=tplinkl2BridgeMIBObjects, tpl2BridgeManagevlanSecurityTable=tpl2BridgeManagevlanSecurityTable, tpl2BridgeManageNotificationGlobalStatus=tpl2BridgeManageNotificationGlobalStatus, tpl2BridgeManageStaticStatus=tpl2BridgeManageStaticStatus, tpl2BridgeManageStaticAddrCtrl=tpl2BridgeManageStaticAddrCtrl, tpl2BridgeManageStaticAddrCtrlEntry=tpl2BridgeManageStaticAddrCtrlEntry, tpl2BridgeManageDynAddrCtrlEntry=tpl2BridgeManageDynAddrCtrlEntry, fdbStaticMacNew=fdbStaticMacNew)
