#
# PySNMP MIB module VERILINK-ENTERPRISE-NCMM13-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERILINK-ENTERPRISE-NCMM13-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:26:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Unsigned32, Counter32, ModuleIdentity, iso, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Counter64, ObjectIdentity, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "Counter32", "ModuleIdentity", "iso", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Counter64", "ObjectIdentity", "Bits", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ncm_m13, = mibBuilder.importSymbols("VERILINK-ENTERPRISE-NCMALARM-MIB", "ncm-m13")
ncmm13DS3PortTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000), )
if mibBuilder.loadTexts: ncmm13DS3PortTable.setStatus('mandatory')
ncmm13DS3PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13DS3PortNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13DS3PortIndex"))
if mibBuilder.loadTexts: ncmm13DS3PortEntry.setStatus('mandatory')
ncmm13DS3PortNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3PortNIDIndex.setStatus('mandatory')
ncmm13DS3PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3PortIndex.setStatus('mandatory')
ncmm13DS3ModeControl = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("c-bit", 1), ("m23-bit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3ModeControl.setStatus('mandatory')
ncmm13DS3LineType = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bi-polar", 1), ("uni-polar", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3LineType.setStatus('mandatory')
ncmm13DS3PerfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3PerfControl.setStatus('mandatory')
ncmm13DS3AlarmControl = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3AlarmControl.setStatus('mandatory')
ncmm13DS3FarEndControl = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3FarEndControl.setStatus('mandatory')
ncmm13DS3BusType = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("c-bus", 1), ("a-bus", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3BusType.setStatus('mandatory')
ncmm13DS3InbandControl = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3InbandControl.setStatus('mandatory')
ncmm13DS3CableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("short", 1), ("long", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3CableLength.setStatus('mandatory')
ncmm13DS3EquipCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3EquipCode.setStatus('mandatory')
ncmm13DS3LocationIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3LocationIDCode.setStatus('mandatory')
ncmm13DS3FrameIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3FrameIDCode.setStatus('mandatory')
ncmm13DS3UnitCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3UnitCode.setStatus('mandatory')
ncmm13DS3FacilityIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3FacilityIDCode.setStatus('mandatory')
ncmm13DS3PortIdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3PortIdCode.setStatus('mandatory')
ncmm13DS3GenIDCode = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14000, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 38))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3GenIDCode.setStatus('mandatory')
ncmm13StatTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001), )
if mibBuilder.loadTexts: ncmm13StatTable.setStatus('mandatory')
ncmm13StatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13StatNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13StatIndex"))
if mibBuilder.loadTexts: ncmm13StatEntry.setStatus('mandatory')
ncmm13StatNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatNIDIndex.setStatus('mandatory')
ncmm13StatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatIndex.setStatus('mandatory')
ncmm13StatAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatAIS.setStatus('mandatory')
ncmm13StatIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatIdle.setStatus('mandatory')
ncmm13StatYellowAlm = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatYellowAlm.setStatus('mandatory')
ncmm13StatOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatOOF.setStatus('mandatory')
ncmm13StatLOS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13StatLOS.setStatus('mandatory')
ncmm13DS3NearEndLocalLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3NearEndLocalLoopback.setStatus('mandatory')
ncmm13DS3NearEndLineLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3NearEndLineLoopback.setStatus('mandatory')
ncmm13DS3FarEndLineLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3FarEndLineLoopback.setStatus('mandatory')
ncmm13T1NearEndLineLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1NearEndLineLoopback.setStatus('mandatory')
ncmm13T1FarEndLineLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1FarEndLineLoopback.setStatus('mandatory')
ncmm13FarEndAllT1LineLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13FarEndAllT1LineLoopback.setStatus('mandatory')
ncmm13T1LocalLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14001, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1LocalLoopback.setStatus('mandatory')
ncmm13CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002), )
if mibBuilder.loadTexts: ncmm13CurrentTable.setStatus('mandatory')
ncmm13CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13CurrentNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13CurrentIndex"))
if mibBuilder.loadTexts: ncmm13CurrentEntry.setStatus('mandatory')
ncmm13CurrentNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentNIDIndex.setStatus('mandatory')
ncmm13CurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentIndex.setStatus('mandatory')
ncmm13CurrentCRCStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentCRCStatus.setStatus('mandatory')
ncmm13CurrentTimeStampSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentTimeStampSecs.setStatus('mandatory')
ncmm13CurrentTimeStampMSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentTimeStampMSecs.setStatus('mandatory')
ncmm13CurrentIntervalSecsElaps = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentIntervalSecsElaps.setStatus('mandatory')
ncmm13CurrentFarEndCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentFarEndCCV.setStatus('mandatory')
ncmm13CurrentFarEndCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentFarEndCES.setStatus('mandatory')
ncmm13CurrentFarEndCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentFarEndCSES.setStatus('mandatory')
ncmm13CurrentFarEndLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentFarEndLUAS.setStatus('mandatory')
ncmm13CurrentLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentLCV.setStatus('mandatory')
ncmm13CurrentLES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentLES.setStatus('mandatory')
ncmm13CurrentLSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentLSES.setStatus('mandatory')
ncmm13CurrentPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentPCV.setStatus('mandatory')
ncmm13CurrentPES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentPES.setStatus('mandatory')
ncmm13CurrentPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentPSES.setStatus('mandatory')
ncmm13CurrentCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentCCV.setStatus('mandatory')
ncmm13CurrentCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentCES.setStatus('mandatory')
ncmm13CurrentCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentCSES.setStatus('mandatory')
ncmm13CurrentSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentSEFS.setStatus('mandatory')
ncmm13CurrentAISS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentAISS.setStatus('mandatory')
ncmm13CurrentLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentLUAS.setStatus('mandatory')
ncmm13CurrentLOOS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentLOOS.setStatus('mandatory')
ncmm13CurrentLOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14002, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13CurrentLOFS.setStatus('mandatory')
ncmm13IntervalTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003), )
if mibBuilder.loadTexts: ncmm13IntervalTable.setStatus('mandatory')
ncmm13IntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13IntervalNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13IntervalIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13IntervalNumber"))
if mibBuilder.loadTexts: ncmm13IntervalEntry.setStatus('mandatory')
ncmm13IntervalNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalNIDIndex.setStatus('mandatory')
ncmm13IntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalIndex.setStatus('mandatory')
ncmm13IntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalNumber.setStatus('mandatory')
ncmm13IntervalFarEndCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalFarEndCCV.setStatus('mandatory')
ncmm13IntervalFarEndCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalFarEndCES.setStatus('mandatory')
ncmm13IntervalFarEndCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalFarEndCSES.setStatus('mandatory')
ncmm13IntervalFarEndLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalFarEndLUAS.setStatus('mandatory')
ncmm13IntervalLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalLCV.setStatus('mandatory')
ncmm13IntervalLES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalLES.setStatus('mandatory')
ncmm13IntervalLSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalLSES.setStatus('mandatory')
ncmm13IntervalPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalPCV.setStatus('mandatory')
ncmm13IntervalPES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalPES.setStatus('mandatory')
ncmm13IntervalPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalPSES.setStatus('mandatory')
ncmm13IntervalCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalCCV.setStatus('mandatory')
ncmm13IntervalCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalCES.setStatus('mandatory')
ncmm13IntervalCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalCSES.setStatus('mandatory')
ncmm13IntervalSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalSEFS.setStatus('mandatory')
ncmm13IntervalAISS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalAISS.setStatus('mandatory')
ncmm13IntervalLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalLUAS.setStatus('mandatory')
ncmm13IntervalLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalLOSS.setStatus('mandatory')
ncmm13IntervalLOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14003, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13IntervalLOFS.setStatus('mandatory')
ncmm13TotalTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004), )
if mibBuilder.loadTexts: ncmm13TotalTable.setStatus('mandatory')
ncmm13TotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TotalNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TotalIndex"))
if mibBuilder.loadTexts: ncmm13TotalEntry.setStatus('mandatory')
ncmm13TotalNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalNIDIndex.setStatus('mandatory')
ncmm13TotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalIndex.setStatus('mandatory')
ncmm13TotalCRCStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalCRCStatus.setStatus('mandatory')
ncmm13TotalValidInterv = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalValidInterv.setStatus('mandatory')
ncmm13TotalFarEndCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalFarEndCCV.setStatus('mandatory')
ncmm13TotalFarEndCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalFarEndCES.setStatus('mandatory')
ncmm13TotalFarEndCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalFarEndCSES.setStatus('mandatory')
ncmm13TotalFarEndLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalFarEndLUAS.setStatus('mandatory')
ncmm13TotalLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalLCV.setStatus('mandatory')
ncmm13TotalLES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalLES.setStatus('mandatory')
ncmm13TotalLSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalLSES.setStatus('mandatory')
ncmm13TotalPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalPCV.setStatus('mandatory')
ncmm13TotalPES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalPES.setStatus('mandatory')
ncmm13TotalPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalPSES.setStatus('mandatory')
ncmm13TotalCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalCCV.setStatus('mandatory')
ncmm13TotalCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalCES.setStatus('mandatory')
ncmm13TotalCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalCSES.setStatus('mandatory')
ncmm13TotalSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalSEFS.setStatus('mandatory')
ncmm13TotalAISS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalAISS.setStatus('mandatory')
ncmm13TotalLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalLUAS.setStatus('mandatory')
ncmm13TotalLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalLOSS.setStatus('mandatory')
ncmm13TotalLOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14004, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TotalLOFS.setStatus('mandatory')
ncmm13PerformanceSnapShotTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005), )
if mibBuilder.loadTexts: ncmm13PerformanceSnapShotTable.setStatus('mandatory')
ncmm13PerformanceSnapShotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13SnapShotNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13SnapShotIndex"))
if mibBuilder.loadTexts: ncmm13PerformanceSnapShotEntry.setStatus('mandatory')
ncmm13SnapShotNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13SnapShotNIDIndex.setStatus('mandatory')
ncmm13SnapShotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13SnapShotIndex.setStatus('mandatory')
ncmm13SnapShotCRCStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13SnapShotCRCStatus.setStatus('mandatory')
ncmm13SnapShot = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13SnapShot.setStatus('mandatory')
ncmm13TimeStampSec = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TimeStampSec.setStatus('mandatory')
ncmm13TimeStampMilliSec = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TimeStampMilliSec.setStatus('mandatory')
ncmm13SnapShotSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13SnapShotSecs.setStatus('mandatory')
ncmm13ResetPerfReg = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14005, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13ResetPerfReg.setStatus('mandatory')
ncmm13TCAQtrTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006), )
if mibBuilder.loadTexts: ncmm13TCAQtrTable.setStatus('mandatory')
ncmm13TCAQtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TCAQtrNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TCAQtrIndex"))
if mibBuilder.loadTexts: ncmm13TCAQtrEntry.setStatus('mandatory')
ncmm13TCAQtrNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TCAQtrNIDIndex.setStatus('mandatory')
ncmm13TCAQtrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TCAQtrIndex.setStatus('mandatory')
ncmm13TCAQtrFarEndCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrFarEndCCV.setStatus('mandatory')
ncmm13TCAQtrFarEndCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrFarEndCES.setStatus('mandatory')
ncmm13TCAQtrFarEndCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrFarEndCSES.setStatus('mandatory')
ncmm13TCAQtrFarEndLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrFarEndLUAS.setStatus('mandatory')
ncmm13TCAQtrLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrLCV.setStatus('mandatory')
ncmm13TCAQtrLES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrLES.setStatus('mandatory')
ncmm13TCAQtrLSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrLSES.setStatus('mandatory')
ncmm13TCAQtrPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrPCV.setStatus('mandatory')
ncmm13TCAQtrPES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrPES.setStatus('mandatory')
ncmm13TCAQtrPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrPSES.setStatus('mandatory')
ncmm13TCAQtrCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrCCV.setStatus('mandatory')
ncmm13TCAQtrCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrCES.setStatus('mandatory')
ncmm13TCAQtrCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrCSES.setStatus('mandatory')
ncmm13TCAQtrSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrSEFS.setStatus('mandatory')
ncmm13TCAQtrAISS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrAISS.setStatus('mandatory')
ncmm13TCAQtrLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrLUAS.setStatus('mandatory')
ncmm13TCAQtrLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrLOSS.setStatus('mandatory')
ncmm13TCAQtrLOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14006, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCAQtrLOFS.setStatus('mandatory')
ncmm13TCADayTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007), )
if mibBuilder.loadTexts: ncmm13TCADayTable.setStatus('mandatory')
ncmm13TCADayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TCADayNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TCADayIndex"))
if mibBuilder.loadTexts: ncmm13TCADayEntry.setStatus('mandatory')
ncmm13TCADayNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TCADayNIDIndex.setStatus('mandatory')
ncmm13TCADayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TCADayIndex.setStatus('mandatory')
ncmm13TCADayFarEndCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayFarEndCCV.setStatus('mandatory')
ncmm13TCADayFarEndCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayFarEndCES.setStatus('mandatory')
ncmm13TCADayFarEndCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayFarEndCSES.setStatus('mandatory')
ncmm13TCADayFarEndLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayFarEndLUAS.setStatus('mandatory')
ncmm13TCADayLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayLCV.setStatus('mandatory')
ncmm13TCADayLES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayLES.setStatus('mandatory')
ncmm13TCADayLSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayLSES.setStatus('mandatory')
ncmm13TCADayPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayPCV.setStatus('mandatory')
ncmm13TCADayPES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayPES.setStatus('mandatory')
ncmm13TCADayPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayPSES.setStatus('mandatory')
ncmm13TCADayCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayCCV.setStatus('mandatory')
ncmm13TCADayCES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayCES.setStatus('mandatory')
ncmm13TCADayCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayCSES.setStatus('mandatory')
ncmm13TCADaySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADaySEFS.setStatus('mandatory')
ncmm13TCADayAISS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayAISS.setStatus('mandatory')
ncmm13TCADayLUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayLUAS.setStatus('mandatory')
ncmm13TCADayLOSS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayLOSS.setStatus('mandatory')
ncmm13TCADayLOFS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14007, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TCADayLOFS.setStatus('mandatory')
ncmm13TxAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008), )
if mibBuilder.loadTexts: ncmm13TxAlarmTable.setStatus('mandatory')
ncmm13TxAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TxAlarmNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13TxAlarmIndex"))
if mibBuilder.loadTexts: ncmm13TxAlarmEntry.setStatus('mandatory')
ncmm13TxAlarmNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TxAlarmNIDIndex.setStatus('mandatory')
ncmm13TxAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13TxAlarmIndex.setStatus('mandatory')
ncmm13TxYellowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TxYellowAlarm.setStatus('mandatory')
ncmm13TxAIS = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TxAIS.setStatus('mandatory')
ncmm13TxIdleSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TxIdleSignal.setStatus('mandatory')
ncmm13TxFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TxFEBE.setStatus('mandatory')
ncmm13TxFEACAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14008, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("no-FEAC-Alarm-enabled", 1), ("eqpt-FailureSA-Alarm", 2), ("los-HBER-Alarm", 3), ("oof-Alarm", 4), ("ais-Received-Alarm", 5), ("idle-Received-Alarm", 6), ("eqpt-NSA-Alarm", 7), ("common-Eqpt-NSA-Alarm", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13TxFEACAlarm.setStatus('mandatory')
ncmm13DS3LPBKTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14009), )
if mibBuilder.loadTexts: ncmm13DS3LPBKTable.setStatus('mandatory')
ncmm13DS3LPBKEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14009, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13DS3LPBKNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13DS3LPBKIndex"))
if mibBuilder.loadTexts: ncmm13DS3LPBKEntry.setStatus('mandatory')
ncmm13DS3LPBKNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14009, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3LPBKNIDIndex.setStatus('mandatory')
ncmm13DS3LPBKIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14009, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13DS3LPBKIndex.setStatus('mandatory')
ncmm13DS3LPBKAction = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14009, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("no-Loopback", 1), ("m13-DS3-Activate-Local", 2), ("m13-DS3-Activate-Line", 3), ("m13-DS3-Activate-FEAC-Far-End", 4), ("m13-DS3-Activate-Inband-Far-End", 5), ("m13-DS3-DeActivate-Local", 6), ("m13-DS3-DeActivate-Line", 7), ("m13-DS3-DeActivate-FEAC-Far-End", 8), ("m13-DS3-DeActivate-Inband-Far-End", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13DS3LPBKAction.setStatus('mandatory')
ncmm13T1LPBKTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14010), )
if mibBuilder.loadTexts: ncmm13T1LPBKTable.setStatus('mandatory')
ncmm13T1LPBKEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14010, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13T1LPBKNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13T1LPBKIndex"))
if mibBuilder.loadTexts: ncmm13T1LPBKEntry.setStatus('mandatory')
ncmm13T1LPBKNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14010, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1LPBKNIDIndex.setStatus('mandatory')
ncmm13T1LPBKIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14010, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1LPBKIndex.setStatus('mandatory')
ncmm13T1LPBKAction = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14010, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("no-Loopback", 1), ("m13-Activate-1-28-T1-Line", 10), ("m13-Activate-All-T1-Line", 11), ("m13-Activate-1-28-T1-Far-End", 12), ("m13-Activate-All-T1-Far-End", 13), ("m13-Activate-1-28-T1-Local", 14), ("m13-Activate-All-T1-Local", 15), ("m13-DeActivate-1-28-T1-Line", 16), ("m13-DeActivate-All-T1-Line", 17), ("m13-DeActivate-1-28-T1-Far-End", 18), ("m13-DeActivate-All-T1-Far-End", 19), ("m13-DeActivate-1-28-T1-Local", 20), ("m13-DeActivate-All-T1-Local", 21)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13T1LPBKAction.setStatus('mandatory')
ncmm13T1ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011), )
if mibBuilder.loadTexts: ncmm13T1ConfigTable.setStatus('mandatory')
ncmm13T1ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1), ).setIndexNames((0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13T1ConfigNIDIndex"), (0, "VERILINK-ENTERPRISE-NCMM13-MIB", "ncmm13T1LineIndex"))
if mibBuilder.loadTexts: ncmm13T1ConfigEntry.setStatus('mandatory')
ncmm13T1ConfigNIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1ConfigNIDIndex.setStatus('mandatory')
ncmm13T1LineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmm13T1LineIndex.setStatus('mandatory')
ncmm13T1FramingFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sF", 1), ("eSF", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13T1FramingFormat.setStatus('mandatory')
ncmm13T1LineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aMI", 1), ("b8ZS", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13T1LineCoding.setStatus('mandatory')
ncmm13T1EnableNetOnesDensity = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13T1EnableNetOnesDensity.setStatus('mandatory')
ncmm13T1DensityPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("d80Zeros", 1), ("d15Zeros", 2), ("d12d5c80Zero", 3), ("tR-62411", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13T1DensityPattern.setStatus('mandatory')
ncmm13T1PortService = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 1, 3037, 14011, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("out-of-service", 1), ("in-service", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncmm13T1PortService.setStatus('mandatory')
mibBuilder.exportSymbols("VERILINK-ENTERPRISE-NCMM13-MIB", ncmm13StatNIDIndex=ncmm13StatNIDIndex, ncmm13TCAQtrPSES=ncmm13TCAQtrPSES, ncmm13IntervalSEFS=ncmm13IntervalSEFS, ncmm13IntervalCES=ncmm13IntervalCES, ncmm13TCAQtrLCV=ncmm13TCAQtrLCV, ncmm13TxAlarmEntry=ncmm13TxAlarmEntry, ncmm13IntervalLES=ncmm13IntervalLES, ncmm13CurrentPCV=ncmm13CurrentPCV, ncmm13TotalTable=ncmm13TotalTable, ncmm13StatAIS=ncmm13StatAIS, ncmm13TotalSEFS=ncmm13TotalSEFS, ncmm13IntervalFarEndCES=ncmm13IntervalFarEndCES, ncmm13TCADayEntry=ncmm13TCADayEntry, ncmm13DS3LPBKEntry=ncmm13DS3LPBKEntry, ncmm13TCADayFarEndLUAS=ncmm13TCADayFarEndLUAS, ncmm13TCAQtrSEFS=ncmm13TCAQtrSEFS, ncmm13IntervalLSES=ncmm13IntervalLSES, ncmm13CurrentTimeStampSecs=ncmm13CurrentTimeStampSecs, ncmm13TCADayLES=ncmm13TCADayLES, ncmm13TimeStampMilliSec=ncmm13TimeStampMilliSec, ncmm13CurrentIntervalSecsElaps=ncmm13CurrentIntervalSecsElaps, ncmm13TotalCES=ncmm13TotalCES, ncmm13TCADayFarEndCES=ncmm13TCADayFarEndCES, ncmm13TotalCCV=ncmm13TotalCCV, ncmm13TxAIS=ncmm13TxAIS, ncmm13T1LPBKIndex=ncmm13T1LPBKIndex, ncmm13IntervalCCV=ncmm13IntervalCCV, ncmm13TxAlarmTable=ncmm13TxAlarmTable, ncmm13CurrentFarEndCCV=ncmm13CurrentFarEndCCV, ncmm13DS3PortTable=ncmm13DS3PortTable, ncmm13StatIdle=ncmm13StatIdle, ncmm13TotalCRCStatus=ncmm13TotalCRCStatus, ncmm13DS3PortIdCode=ncmm13DS3PortIdCode, ncmm13PerformanceSnapShotEntry=ncmm13PerformanceSnapShotEntry, ncmm13DS3PerfControl=ncmm13DS3PerfControl, ncmm13T1LineCoding=ncmm13T1LineCoding, ncmm13T1EnableNetOnesDensity=ncmm13T1EnableNetOnesDensity, ncmm13DS3LocationIDCode=ncmm13DS3LocationIDCode, ncmm13CurrentSEFS=ncmm13CurrentSEFS, ncmm13IntervalAISS=ncmm13IntervalAISS, ncmm13StatLOS=ncmm13StatLOS, ncmm13TCADayCSES=ncmm13TCADayCSES, ncmm13TotalLOSS=ncmm13TotalLOSS, ncmm13TCAQtrLES=ncmm13TCAQtrLES, ncmm13CurrentCSES=ncmm13CurrentCSES, ncmm13CurrentTable=ncmm13CurrentTable, ncmm13TotalFarEndLUAS=ncmm13TotalFarEndLUAS, ncmm13DS3FacilityIDCode=ncmm13DS3FacilityIDCode, ncmm13IntervalPCV=ncmm13IntervalPCV, ncmm13TCAQtrPES=ncmm13TCAQtrPES, ncmm13CurrentFarEndCSES=ncmm13CurrentFarEndCSES, ncmm13CurrentEntry=ncmm13CurrentEntry, ncmm13TCADayLOSS=ncmm13TCADayLOSS, ncmm13DS3BusType=ncmm13DS3BusType, ncmm13IntervalIndex=ncmm13IntervalIndex, ncmm13TCAQtrNIDIndex=ncmm13TCAQtrNIDIndex, ncmm13T1LPBKNIDIndex=ncmm13T1LPBKNIDIndex, ncmm13TCAQtrLUAS=ncmm13TCAQtrLUAS, ncmm13TCADayFarEndCCV=ncmm13TCADayFarEndCCV, ncmm13DS3PortEntry=ncmm13DS3PortEntry, ncmm13CurrentFarEndLUAS=ncmm13CurrentFarEndLUAS, ncmm13TotalLSES=ncmm13TotalLSES, ncmm13CurrentCRCStatus=ncmm13CurrentCRCStatus, ncmm13TCAQtrIndex=ncmm13TCAQtrIndex, ncmm13T1LineIndex=ncmm13T1LineIndex, ncmm13TCAQtrLOFS=ncmm13TCAQtrLOFS, ncmm13T1LPBKEntry=ncmm13T1LPBKEntry, ncmm13IntervalNumber=ncmm13IntervalNumber, ncmm13T1LocalLoopback=ncmm13T1LocalLoopback, ncmm13TCAQtrAISS=ncmm13TCAQtrAISS, ncmm13PerformanceSnapShotTable=ncmm13PerformanceSnapShotTable, ncmm13DS3FrameIDCode=ncmm13DS3FrameIDCode, ncmm13StatEntry=ncmm13StatEntry, ncmm13TCADayIndex=ncmm13TCADayIndex, ncmm13TCADaySEFS=ncmm13TCADaySEFS, ncmm13TCADayLUAS=ncmm13TCADayLUAS, ncmm13IntervalLUAS=ncmm13IntervalLUAS, ncmm13CurrentTimeStampMSecs=ncmm13CurrentTimeStampMSecs, ncmm13TotalFarEndCES=ncmm13TotalFarEndCES, ncmm13CurrentFarEndCES=ncmm13CurrentFarEndCES, ncmm13T1LPBKAction=ncmm13T1LPBKAction, ncmm13SnapShotCRCStatus=ncmm13SnapShotCRCStatus, ncmm13SnapShotIndex=ncmm13SnapShotIndex, ncmm13T1LPBKTable=ncmm13T1LPBKTable, ncmm13CurrentNIDIndex=ncmm13CurrentNIDIndex, ncmm13FarEndAllT1LineLoopback=ncmm13FarEndAllT1LineLoopback, ncmm13StatYellowAlm=ncmm13StatYellowAlm, ncmm13DS3EquipCode=ncmm13DS3EquipCode, ncmm13T1FarEndLineLoopback=ncmm13T1FarEndLineLoopback, ncmm13DS3CableLength=ncmm13DS3CableLength, ncmm13TCADayPSES=ncmm13TCADayPSES, ncmm13DS3InbandControl=ncmm13DS3InbandControl, ncmm13IntervalPSES=ncmm13IntervalPSES, ncmm13TotalFarEndCSES=ncmm13TotalFarEndCSES, ncmm13TCADayPCV=ncmm13TCADayPCV, ncmm13TotalEntry=ncmm13TotalEntry, ncmm13TCAQtrLOSS=ncmm13TCAQtrLOSS, ncmm13IntervalLOFS=ncmm13IntervalLOFS, ncmm13TxAlarmNIDIndex=ncmm13TxAlarmNIDIndex, ncmm13TCAQtrCCV=ncmm13TCAQtrCCV, ncmm13TxFEBE=ncmm13TxFEBE, ncmm13TCADayLOFS=ncmm13TCADayLOFS, ncmm13T1PortService=ncmm13T1PortService, ncmm13IntervalTable=ncmm13IntervalTable, ncmm13TotalPES=ncmm13TotalPES, ncmm13TotalCSES=ncmm13TotalCSES, ncmm13DS3AlarmControl=ncmm13DS3AlarmControl, ncmm13T1NearEndLineLoopback=ncmm13T1NearEndLineLoopback, ncmm13TotalPCV=ncmm13TotalPCV, ncmm13DS3ModeControl=ncmm13DS3ModeControl, ncmm13TCAQtrLSES=ncmm13TCAQtrLSES, ncmm13TotalIndex=ncmm13TotalIndex, ncmm13TimeStampSec=ncmm13TimeStampSec, ncmm13CurrentPES=ncmm13CurrentPES, ncmm13TotalFarEndCCV=ncmm13TotalFarEndCCV, ncmm13T1ConfigNIDIndex=ncmm13T1ConfigNIDIndex, ncmm13TotalPSES=ncmm13TotalPSES, ncmm13DS3LPBKAction=ncmm13DS3LPBKAction, ncmm13TCADayNIDIndex=ncmm13TCADayNIDIndex, ncmm13DS3FarEndLineLoopback=ncmm13DS3FarEndLineLoopback, ncmm13TCADayCES=ncmm13TCADayCES, ncmm13T1FramingFormat=ncmm13T1FramingFormat, ncmm13DS3UnitCode=ncmm13DS3UnitCode, ncmm13TotalLUAS=ncmm13TotalLUAS, ncmm13TCADayLSES=ncmm13TCADayLSES, ncmm13StatOOF=ncmm13StatOOF, ncmm13TCAQtrFarEndCES=ncmm13TCAQtrFarEndCES, ncmm13T1ConfigTable=ncmm13T1ConfigTable, ncmm13TCAQtrPCV=ncmm13TCAQtrPCV, ncmm13CurrentCES=ncmm13CurrentCES, ncmm13TxFEACAlarm=ncmm13TxFEACAlarm, ncmm13StatTable=ncmm13StatTable, ncmm13IntervalFarEndLUAS=ncmm13IntervalFarEndLUAS, ncmm13IntervalPES=ncmm13IntervalPES, ncmm13TotalLCV=ncmm13TotalLCV, ncmm13TCAQtrCSES=ncmm13TCAQtrCSES, ncmm13CurrentIndex=ncmm13CurrentIndex, ncmm13SnapShotSecs=ncmm13SnapShotSecs, ncmm13DS3PortNIDIndex=ncmm13DS3PortNIDIndex, ncmm13TCADayPES=ncmm13TCADayPES, ncmm13TCADayFarEndCSES=ncmm13TCADayFarEndCSES, ncmm13TCAQtrFarEndCSES=ncmm13TCAQtrFarEndCSES, ncmm13TCAQtrCES=ncmm13TCAQtrCES, ncmm13DS3LineType=ncmm13DS3LineType, ncmm13IntervalEntry=ncmm13IntervalEntry, ncmm13IntervalFarEndCSES=ncmm13IntervalFarEndCSES, ncmm13DS3NearEndLocalLoopback=ncmm13DS3NearEndLocalLoopback, ncmm13TCADayAISS=ncmm13TCADayAISS, ncmm13SnapShotNIDIndex=ncmm13SnapShotNIDIndex, ncmm13CurrentLSES=ncmm13CurrentLSES, ncmm13TotalLOFS=ncmm13TotalLOFS, ncmm13TCAQtrTable=ncmm13TCAQtrTable, ncmm13TxIdleSignal=ncmm13TxIdleSignal, ncmm13DS3LPBKIndex=ncmm13DS3LPBKIndex, ncmm13IntervalLOSS=ncmm13IntervalLOSS, ncmm13DS3LPBKTable=ncmm13DS3LPBKTable, ncmm13TotalAISS=ncmm13TotalAISS, ncmm13IntervalNIDIndex=ncmm13IntervalNIDIndex, ncmm13DS3NearEndLineLoopback=ncmm13DS3NearEndLineLoopback, ncmm13ResetPerfReg=ncmm13ResetPerfReg, ncmm13IntervalFarEndCCV=ncmm13IntervalFarEndCCV, ncmm13DS3PortIndex=ncmm13DS3PortIndex, ncmm13DS3GenIDCode=ncmm13DS3GenIDCode, ncmm13TCADayTable=ncmm13TCADayTable, ncmm13CurrentPSES=ncmm13CurrentPSES, ncmm13IntervalCSES=ncmm13IntervalCSES, ncmm13TCAQtrFarEndCCV=ncmm13TCAQtrFarEndCCV, ncmm13TotalLES=ncmm13TotalLES, ncmm13DS3LPBKNIDIndex=ncmm13DS3LPBKNIDIndex, ncmm13CurrentLUAS=ncmm13CurrentLUAS, ncmm13TCADayLCV=ncmm13TCADayLCV, ncmm13TotalValidInterv=ncmm13TotalValidInterv, ncmm13TCAQtrFarEndLUAS=ncmm13TCAQtrFarEndLUAS, ncmm13CurrentLCV=ncmm13CurrentLCV, ncmm13TotalNIDIndex=ncmm13TotalNIDIndex, ncmm13CurrentAISS=ncmm13CurrentAISS, ncmm13IntervalLCV=ncmm13IntervalLCV, ncmm13TCAQtrEntry=ncmm13TCAQtrEntry, ncmm13T1DensityPattern=ncmm13T1DensityPattern, ncmm13TxAlarmIndex=ncmm13TxAlarmIndex, ncmm13TxYellowAlarm=ncmm13TxYellowAlarm, ncmm13T1ConfigEntry=ncmm13T1ConfigEntry, ncmm13CurrentCCV=ncmm13CurrentCCV, ncmm13StatIndex=ncmm13StatIndex, ncmm13CurrentLOFS=ncmm13CurrentLOFS, ncmm13DS3FarEndControl=ncmm13DS3FarEndControl, ncmm13TCADayCCV=ncmm13TCADayCCV, ncmm13CurrentLES=ncmm13CurrentLES, ncmm13CurrentLOOS=ncmm13CurrentLOOS, ncmm13SnapShot=ncmm13SnapShot)
