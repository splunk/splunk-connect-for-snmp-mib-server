#
# PySNMP MIB module CYAN-BTM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-BTM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
cyanEntityModules, CyanTypeTc = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules", "CyanTypeTc")
CyanOpStateQualTc, CyanOpStateTc, CyanAdminStateTc, CyanRelayTc, CyanSecServiceStateTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanOpStateQualTc", "CyanOpStateTc", "CyanAdminStateTc", "CyanRelayTc", "CyanSecServiceStateTc")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, Bits, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Integer32, iso, Gauge32, MibIdentifier, ModuleIdentity, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Integer32", "iso", "Gauge32", "MibIdentifier", "ModuleIdentity", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanBtmModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60))
cyanBtmModule.setRevisions(('2014-12-07 05:45',))
if mibBuilder.loadTexts: cyanBtmModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanBtmModule.setOrganization('Cyan, Inc.')
cyanBtmMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1))
cyanBtmTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1), )
if mibBuilder.loadTexts: cyanBtmTable.setStatus('current')
cyanBtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1), ).setIndexNames((0, "CYAN-BTM-MIB", "cyanBtmShelfId"), (0, "CYAN-BTM-MIB", "cyanBtmBtmId"))
if mibBuilder.loadTexts: cyanBtmEntry.setStatus('current')
cyanBtmShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanBtmShelfId.setStatus('current')
cyanBtmBtmId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanBtmBtmId.setStatus('current')
cyanBtmAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 3), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmAdminState.setStatus('current')
cyanBtmAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmAssetTag.setStatus('current')
cyanBtmAudible = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 5), CyanRelayTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmAudible.setStatus('current')
cyanBtmAutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmAutoinserviceSoakTimeSec.setStatus('current')
cyanBtmBaseMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmBaseMacAddress.setStatus('current')
cyanBtmCritical = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 8), CyanRelayTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmCritical.setStatus('current')
cyanBtmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmDescription.setStatus('current')
cyanBtmIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmIdentifier.setStatus('current')
cyanBtmMacBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMacBlockSize.setStatus('current')
cyanBtmMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 12), CyanRelayTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMajor.setStatus('current')
cyanBtmMfgCleiCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMfgCleiCode.setStatus('current')
cyanBtmMfgEciCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMfgEciCode.setStatus('current')
cyanBtmMfgModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMfgModuleId.setStatus('current')
cyanBtmMfgPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMfgPartNumber.setStatus('current')
cyanBtmMfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMfgRevision.setStatus('current')
cyanBtmMfgSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMfgSerialNumber.setStatus('current')
cyanBtmMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 19), CyanRelayTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmMinor.setStatus('current')
cyanBtmName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmName.setStatus('current')
cyanBtmOidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmOidClass.setStatus('current')
cyanBtmOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 22), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmOperState.setStatus('current')
cyanBtmOperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 23), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmOperStateQual.setStatus('current')
cyanBtmOssLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmOssLabel.setStatus('current')
cyanBtmOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmOwner.setStatus('current')
cyanBtmPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmPartNumber.setStatus('current')
cyanBtmSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 27), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmSecServState.setStatus('current')
cyanBtmType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 1, 1, 1, 28), CyanTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanBtmType.setStatus('current')
cyanBtmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 20)).setObjects(("CYAN-BTM-MIB", "cyanBtmAdminState"), ("CYAN-BTM-MIB", "cyanBtmAssetTag"), ("CYAN-BTM-MIB", "cyanBtmAudible"), ("CYAN-BTM-MIB", "cyanBtmAutoinserviceSoakTimeSec"), ("CYAN-BTM-MIB", "cyanBtmBaseMacAddress"), ("CYAN-BTM-MIB", "cyanBtmCritical"), ("CYAN-BTM-MIB", "cyanBtmDescription"), ("CYAN-BTM-MIB", "cyanBtmIdentifier"), ("CYAN-BTM-MIB", "cyanBtmMacBlockSize"), ("CYAN-BTM-MIB", "cyanBtmMajor"), ("CYAN-BTM-MIB", "cyanBtmMfgCleiCode"), ("CYAN-BTM-MIB", "cyanBtmMfgEciCode"), ("CYAN-BTM-MIB", "cyanBtmMfgModuleId"), ("CYAN-BTM-MIB", "cyanBtmMfgPartNumber"), ("CYAN-BTM-MIB", "cyanBtmMfgRevision"), ("CYAN-BTM-MIB", "cyanBtmMfgSerialNumber"), ("CYAN-BTM-MIB", "cyanBtmMinor"), ("CYAN-BTM-MIB", "cyanBtmName"), ("CYAN-BTM-MIB", "cyanBtmOidClass"), ("CYAN-BTM-MIB", "cyanBtmOperState"), ("CYAN-BTM-MIB", "cyanBtmOperStateQual"), ("CYAN-BTM-MIB", "cyanBtmOssLabel"), ("CYAN-BTM-MIB", "cyanBtmOwner"), ("CYAN-BTM-MIB", "cyanBtmPartNumber"), ("CYAN-BTM-MIB", "cyanBtmSecServState"), ("CYAN-BTM-MIB", "cyanBtmType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanBtmObjectGroup = cyanBtmObjectGroup.setStatus('current')
cyanBtmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 60, 30)).setObjects(("CYAN-BTM-MIB", "cyanBtmObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanBtmCompliance = cyanBtmCompliance.setStatus('current')
mibBuilder.exportSymbols("CYAN-BTM-MIB", cyanBtmBaseMacAddress=cyanBtmBaseMacAddress, cyanBtmMfgEciCode=cyanBtmMfgEciCode, cyanBtmEntry=cyanBtmEntry, cyanBtmName=cyanBtmName, cyanBtmShelfId=cyanBtmShelfId, cyanBtmOidClass=cyanBtmOidClass, cyanBtmAutoinserviceSoakTimeSec=cyanBtmAutoinserviceSoakTimeSec, cyanBtmPartNumber=cyanBtmPartNumber, cyanBtmCompliance=cyanBtmCompliance, cyanBtmMfgModuleId=cyanBtmMfgModuleId, cyanBtmAdminState=cyanBtmAdminState, cyanBtmOssLabel=cyanBtmOssLabel, PYSNMP_MODULE_ID=cyanBtmModule, cyanBtmMfgCleiCode=cyanBtmMfgCleiCode, cyanBtmModule=cyanBtmModule, cyanBtmIdentifier=cyanBtmIdentifier, cyanBtmCritical=cyanBtmCritical, cyanBtmMfgSerialNumber=cyanBtmMfgSerialNumber, cyanBtmMinor=cyanBtmMinor, cyanBtmAssetTag=cyanBtmAssetTag, cyanBtmMibObjects=cyanBtmMibObjects, cyanBtmOperState=cyanBtmOperState, cyanBtmTable=cyanBtmTable, cyanBtmObjectGroup=cyanBtmObjectGroup, cyanBtmBtmId=cyanBtmBtmId, cyanBtmMfgRevision=cyanBtmMfgRevision, cyanBtmType=cyanBtmType, cyanBtmMfgPartNumber=cyanBtmMfgPartNumber, cyanBtmMacBlockSize=cyanBtmMacBlockSize, cyanBtmAudible=cyanBtmAudible, cyanBtmDescription=cyanBtmDescription, cyanBtmOperStateQual=cyanBtmOperStateQual, cyanBtmOwner=cyanBtmOwner, cyanBtmMajor=cyanBtmMajor, cyanBtmSecServState=cyanBtmSecServState)
