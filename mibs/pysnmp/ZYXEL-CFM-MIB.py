#
# PySNMP MIB module ZYXEL-CFM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-CFM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:43:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
dot1agCfmMaIndex, dot1agCfmMdIndex, dot1agCfmMepIdentifier = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "dot1agCfmMaIndex", "dot1agCfmMdIndex", "dot1agCfmMepIdentifier")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, TimeTicks, Gauge32, Counter64, Counter32, MibIdentifier, ModuleIdentity, Bits, Unsigned32, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "TimeTicks", "Gauge32", "Counter64", "Counter32", "MibIdentifier", "ModuleIdentity", "Bits", "Unsigned32", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DisplayString, TDomain = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TDomain")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelCfm = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13))
if mibBuilder.loadTexts: zyxelCfm.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelCfm.setOrganization('Enterprise Solution ZyXEL')
zyxelCfmSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1))
zyxelCfmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2))
zyCfmState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmState.setStatus('current')
zyxelCfmMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2))
zyCfmMgmtIpAddressDomain = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 1), TDomain()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMgmtIpAddressDomain.setStatus('current')
zyCfmMgmtIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMgmtIpAddress.setStatus('current')
zyxelCfmMepTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 3), )
if mibBuilder.loadTexts: zyxelCfmMepTable.setStatus('current')
zyxelCfmMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"))
if mibBuilder.loadTexts: zyxelCfmMepEntry.setStatus('current')
zyCfmMepTransmitLbmDataTlvSize = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMepTransmitLbmDataTlvSize.setStatus('current')
zyCfmLinkTraceClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmLinkTraceClear.setStatus('current')
zyCfmMepCcmDbClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMepCcmDbClear.setStatus('current')
zyCfmMepDefectsClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMepDefectsClear.setStatus('current')
zyCfmMipCcmDbClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 13, 2, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyCfmMipCcmDbClear.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-CFM-MIB", zyxelCfm=zyxelCfm, zyCfmMgmtIpAddressDomain=zyCfmMgmtIpAddressDomain, zyCfmMgmtIpAddress=zyCfmMgmtIpAddress, zyCfmMipCcmDbClear=zyCfmMipCcmDbClear, zyxelCfmMibObjects=zyxelCfmMibObjects, zyxelCfmMepEntry=zyxelCfmMepEntry, zyCfmMepTransmitLbmDataTlvSize=zyCfmMepTransmitLbmDataTlvSize, zyCfmMepCcmDbClear=zyCfmMepCcmDbClear, zyxelCfmSetup=zyxelCfmSetup, PYSNMP_MODULE_ID=zyxelCfm, zyxelCfmStatus=zyxelCfmStatus, zyCfmMepDefectsClear=zyCfmMepDefectsClear, zyCfmState=zyCfmState, zyCfmLinkTraceClear=zyCfmLinkTraceClear, zyxelCfmMepTable=zyxelCfmMepTable)
