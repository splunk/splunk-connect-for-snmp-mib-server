#
# PySNMP MIB module CISCO-ATM-VIRTUAL-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ATM-VIRTUAL-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:33:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
AtmVpIdentifier, = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Unsigned32, NotificationType, Bits, Integer32, Counter64, Gauge32, ObjectIdentity, iso, Counter32, IpAddress, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "NotificationType", "Bits", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "iso", "Counter32", "IpAddress", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ciscoAtmVirtualIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 129))
ciscoAtmVirtualIfMIB.setRevisions(('2002-10-11 00:00', '2002-05-07 00:00', '2001-09-03 00:00', '2000-08-11 00:00', '2000-01-14 00:00',))
if mibBuilder.loadTexts: ciscoAtmVirtualIfMIB.setLastUpdated('200210110000Z')
if mibBuilder.loadTexts: ciscoAtmVirtualIfMIB.setOrganization('Cisco Systems, Inc.')
ciscoAtmVirtualIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 129, 1))
caviConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1))
caviStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2))
caviTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1), )
if mibBuilder.loadTexts: caviTable.setStatus('current')
caviEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ATM-VIRTUAL-IF-MIB", "caviIndex"))
if mibBuilder.loadTexts: caviEntry.setStatus('current')
caviIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: caviIndex.setStatus('current')
caviPhyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviPhyIfIndex.setStatus('current')
caviViIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviViIfIndex.setStatus('current')
caviMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 4), Unsigned32()).setUnits('cells-per-second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviMinRate.setStatus('current')
caviMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 5), Unsigned32()).setUnits('cells-per-second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviMaxRate.setStatus('current')
caviFileId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviFileId.setStatus('current')
caviIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("uni", 1), ("nni", 2), ("vnni", 3), ("vuni", 4), ("evuni", 5), ("evnni", 6))).clone('uni')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviIfType.setStatus('current')
caviVpiNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 8), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviVpiNum.setStatus('current')
caviRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviRowStatus.setStatus('current')
caviMinVpiNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 10), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviMinVpiNum.setStatus('current')
caviMaxVpiNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 1, 1, 1, 11), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: caviMaxVpiNum.setStatus('current')
caviStatEgressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1), )
if mibBuilder.loadTexts: caviStatEgressTable.setStatus('current')
caviStatEgressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: caviStatEgressEntry.setStatus('current')
caviEgrRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrRcvClp0Cells.setStatus('current')
caviEgrRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrRcvClp1Cells.setStatus('current')
caviEgrClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrClp0DiscCells.setStatus('current')
caviEgrClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrClp1DiscCells.setStatus('current')
caviEgrXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrXmtClp0Cells.setStatus('current')
caviEgrXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrXmtClp1Cells.setStatus('current')
caviEgrRcvOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrRcvOAMCells.setStatus('current')
caviEgrRMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrRMCells.setStatus('current')
caviEgrXmtEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrXmtEFCICells.setStatus('current')
caviEgrRcvEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrRcvEFCICells.setStatus('current')
caviEgrXmtOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgrXmtOAMCells.setStatus('current')
caviHEgrXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHEgrXmtClp0Cells.setStatus('current')
caviHEgrXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHEgrXmtClp1Cells.setStatus('current')
caviHighEgrRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighEgrRcvClp0Cells.setStatus('current')
caviHighEgrRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighEgrRcvClp1Cells.setStatus('current')
caviHighEgrClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighEgrClp0DiscCells.setStatus('current')
caviHighEgrClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighEgrClp1DiscCells.setStatus('current')
caviHighEgrXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighEgrXmtClp0Cells.setStatus('current')
caviHighEgrXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighEgrXmtClp1Cells.setStatus('current')
caviHEgrRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHEgrRcvClp0Cells.setStatus('current')
caviHEgrRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHEgrRcvClp1Cells.setStatus('current')
caviHEgrClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHEgrClp0DiscCells.setStatus('current')
caviHEgrClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHEgrClp1DiscCells.setStatus('current')
caviEgressIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2), )
if mibBuilder.loadTexts: caviEgressIntervalTable.setStatus('current')
caviEgressIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalNumber"))
if mibBuilder.loadTexts: caviEgressIntervalEntry.setStatus('current')
caviEgressIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviEgressIntervalNumber.setStatus('current')
caviIntEgrRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrRcvClp0Cells.setStatus('current')
caviIntEgrRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrRcvClp1Cells.setStatus('current')
caviIntEgrClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrClp0DiscCells.setStatus('current')
caviIntEgrClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrClp1DiscCells.setStatus('current')
caviIntEgrXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrXmtClp0Cells.setStatus('current')
caviIntEgrXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrXmtClp1Cells.setStatus('current')
caviIntEgrRcvOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrRcvOAMCells.setStatus('current')
caviIntEgrRMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrRMCells.setStatus('current')
caviIntEgrXmtEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrXmtEFCICells.setStatus('current')
caviIntEgrRcvEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrRcvEFCICells.setStatus('current')
caviIntEgrXmtOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntEgrXmtOAMCells.setStatus('current')
caviHighIntEgrRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntEgrRcvClp0Cells.setStatus('current')
caviHighIntEgrRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntEgrRcvClp1Cells.setStatus('current')
caviHighIntEgrClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntEgrClp0DiscCells.setStatus('current')
caviHighIntEgrClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntEgrClp1DiscCells.setStatus('current')
caviHighIntEgrXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntEgrXmtClp0Cells.setStatus('current')
caviHighIntEgrXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntEgrXmtClp1Cells.setStatus('current')
caviHIntEgrRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntEgrRcvClp0Cells.setStatus('current')
caviHIntEgrRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntEgrRcvClp1Cells.setStatus('current')
caviHIntEgrClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntEgrClp0DiscCells.setStatus('current')
caviHIntEgrClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntEgrClp1DiscCells.setStatus('current')
caviHIntEgrXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntEgrXmtClp0Cells.setStatus('current')
caviHIntEgrXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntEgrXmtClp1Cells.setStatus('current')
caviStatIngressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3), )
if mibBuilder.loadTexts: caviStatIngressTable.setStatus('current')
caviStatIngressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: caviStatIngressEntry.setStatus('current')
caviIngRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngRcvClp0Cells.setStatus('current')
caviIngRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngRcvClp1Cells.setStatus('current')
caviIngClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngClp0DiscCells.setStatus('current')
caviIngClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngClp1DiscCells.setStatus('current')
caviIngXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngXmtClp0Cells.setStatus('current')
caviIngXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngXmtClp1Cells.setStatus('current')
caviIngRcvOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngRcvOAMCells.setStatus('current')
caviIngRMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngRMCells.setStatus('current')
caviIngXmtEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngXmtEFCICells.setStatus('current')
caviIngRcvEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngRcvEFCICells.setStatus('current')
caviIngXmtOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIngXmtOAMCells.setStatus('current')
caviHIngRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIngRcvClp0Cells.setStatus('current')
caviHIngRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIngRcvClp1Cells.setStatus('current')
caviHighIngRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIngRcvClp0Cells.setStatus('current')
caviHighIngRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIngRcvClp1Cells.setStatus('current')
caviHighIngClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIngClp0DiscCells.setStatus('current')
caviHighIngClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIngClp1DiscCells.setStatus('current')
caviHighIngXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIngXmtClp0Cells.setStatus('current')
caviHighIngXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIngXmtClp1Cells.setStatus('current')
caviHIngClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIngClp0DiscCells.setStatus('current')
caviHIngClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIngClp1DiscCells.setStatus('current')
caviHIngXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIngXmtClp0Cells.setStatus('current')
caviHIngXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIngXmtClp1Cells.setStatus('current')
caviIngressIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4), )
if mibBuilder.loadTexts: caviIngressIntervalTable.setStatus('current')
caviIngressIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressIntervalNumber"))
if mibBuilder.loadTexts: caviIngressIntervalEntry.setStatus('current')
caviIngressIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96)))
if mibBuilder.loadTexts: caviIngressIntervalNumber.setStatus('current')
caviIntIngRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngRcvClp0Cells.setStatus('current')
caviIntIngRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngRcvClp1Cells.setStatus('current')
caviIntIngClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngClp0DiscCells.setStatus('current')
caviIntIngClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngClp1DiscCells.setStatus('current')
caviIntIngXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngXmtClp0Cells.setStatus('current')
caviIntIngXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngXmtClp1Cells.setStatus('current')
caviIntIngRcvOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngRcvOAMCells.setStatus('current')
caviIntIngRMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngRMCells.setStatus('current')
caviIntIngXmtEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngXmtEFCICells.setStatus('current')
caviIntIngRcvEFCICells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngRcvEFCICells.setStatus('current')
caviIntIngXmtOAMCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviIntIngXmtOAMCells.setStatus('current')
caviHighIntIngRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntIngRcvClp0Cells.setStatus('current')
caviHighIntIngRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntIngRcvClp1Cells.setStatus('current')
caviHighIntIngClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntIngClp0DiscCells.setStatus('current')
caviHighIntIngClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntIngClp1DiscCells.setStatus('current')
caviHighIntIngXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntIngXmtClp0Cells.setStatus('current')
caviHighIntIngXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHighIntIngXmtClp1Cells.setStatus('current')
caviHIntIngRcvClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntIngRcvClp0Cells.setStatus('current')
caviHIntIngRcvClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntIngRcvClp1Cells.setStatus('current')
caviHIntIngClp0DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntIngClp0DiscCells.setStatus('current')
caviHIntIngClp1DiscCells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntIngClp1DiscCells.setStatus('current')
caviHIntIngXmtClp0Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntIngXmtClp0Cells.setStatus('current')
caviHIntIngXmtClp1Cells = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 129, 1, 2, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caviHIntIngXmtClp1Cells.setStatus('current')
caviMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 129, 3))
caviMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 1))
caviMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2))
caviMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 1, 1)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressStatMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressHighSpeedStatMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressStatMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressHighSpeedStatMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviMIBCompliance = caviMIBCompliance.setStatus('deprecated')
caviMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 1, 2)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviMIBGroupRev1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressStatMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressHighSpeedStatMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressStatMIBGroup"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressHighSpeedStatMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviMIBComplianceRev1 = caviMIBComplianceRev1.setStatus('deprecated')
caviMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 1, 3)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviMIBGroupRev1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressStatMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressHighSpeedStatMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressStatMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngHighSpeedStatMIBGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviMIBComplianceRev2 = caviMIBComplianceRev2.setStatus('deprecated')
caviMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 1, 4)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviMIBGroupRev1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressStatMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressHighSpeedStatMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressStatMIBGroup1"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngHighSpeedStatMIBGroup2"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngressIntervalStatMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviMIBComplianceRev3 = caviMIBComplianceRev3.setStatus('current')
caviMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 1)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviPhyIfIndex"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviViIfIndex"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviMinRate"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviMaxRate"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviFileId"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIfType"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviVpiNum"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviMIBGroup = caviMIBGroup.setStatus('deprecated')
caviEgressStatMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 2)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtOAMCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviEgressStatMIBGroup = caviEgressStatMIBGroup.setStatus('deprecated')
caviEgressHighSpeedStatMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 3)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviEgressHighSpeedStatMIBGroup = caviEgressHighSpeedStatMIBGroup.setStatus('deprecated')
caviEgressIntervalMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 4)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalNumber"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtOAMCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviEgressIntervalMIBGroup = caviEgressIntervalMIBGroup.setStatus('deprecated')
caviIngressStatMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 5)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtOAMCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviIngressStatMIBGroup = caviIngressStatMIBGroup.setStatus('deprecated')
caviIngressHighSpeedStatMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 6)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngRcvClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviIngressHighSpeedStatMIBGroup = caviIngressHighSpeedStatMIBGroup.setStatus('deprecated')
caviMIBGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 7)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviPhyIfIndex"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviViIfIndex"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviMinRate"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviMaxRate"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviFileId"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIfType"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviVpiNum"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviRowStatus"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviMinVpiNum"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviMaxVpiNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviMIBGroupRev1 = caviMIBGroupRev1.setStatus('current')
caviEgressStatMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 8)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgrXmtOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighEgrXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviEgressStatMIBGroup1 = caviEgressStatMIBGroup1.setStatus('current')
caviEgressHighSpeedStatMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 9)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntEgrXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviEgressHighSpeedStatMIBGroup1 = caviEgressHighSpeedStatMIBGroup1.setStatus('current')
caviEgressIntervalMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 10)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviEgressIntervalNumber"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntEgrXmtOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntEgrRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntEgrRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntEgrClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntEgrClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntEgrXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntEgrXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviEgressIntervalMIBGroup1 = caviEgressIntervalMIBGroup1.setStatus('current')
caviIngressStatMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 11)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIngXmtOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIngXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviIngressStatMIBGroup1 = caviIngressStatMIBGroup1.setStatus('current')
caviIngHighSpeedStatMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 12)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviIngHighSpeedStatMIBGroup1 = caviIngHighSpeedStatMIBGroup1.setStatus('deprecated')
caviIngressIntervalStatMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 13)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngRcvOAMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngRMCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngXmtEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngRcvEFCICells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviIntIngXmtOAMCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviIngressIntervalStatMIBGroup = caviIngressIntervalStatMIBGroup.setStatus('current')
caviIngHighSpeedStatMIBGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 129, 3, 2, 14)).setObjects(("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHighIntIngXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIngXmtClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntIngRcvClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntIngRcvClp1Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntIngClp0DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntIngClp1DiscCells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntIngXmtClp0Cells"), ("CISCO-ATM-VIRTUAL-IF-MIB", "caviHIntIngXmtClp1Cells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    caviIngHighSpeedStatMIBGroup2 = caviIngHighSpeedStatMIBGroup2.setStatus('current')
mibBuilder.exportSymbols("CISCO-ATM-VIRTUAL-IF-MIB", caviHighIntEgrXmtClp0Cells=caviHighIntEgrXmtClp0Cells, ciscoAtmVirtualIfMIB=ciscoAtmVirtualIfMIB, caviIngressIntervalTable=caviIngressIntervalTable, caviHighIntEgrRcvClp0Cells=caviHighIntEgrRcvClp0Cells, caviIntEgrXmtEFCICells=caviIntEgrXmtEFCICells, caviHighIntEgrClp0DiscCells=caviHighIntEgrClp0DiscCells, caviEgressStatMIBGroup=caviEgressStatMIBGroup, caviIngClp0DiscCells=caviIngClp0DiscCells, caviIngressStatMIBGroup1=caviIngressStatMIBGroup1, caviEgrClp1DiscCells=caviEgrClp1DiscCells, caviHIntIngClp0DiscCells=caviHIntIngClp0DiscCells, caviHIngXmtClp1Cells=caviHIngXmtClp1Cells, caviMIBGroups=caviMIBGroups, caviIntIngRMCells=caviIntIngRMCells, caviEntry=caviEntry, caviEgressIntervalMIBGroup1=caviEgressIntervalMIBGroup1, ciscoAtmVirtualIfMIBObjects=ciscoAtmVirtualIfMIBObjects, caviMIBComplianceRev2=caviMIBComplianceRev2, caviIntIngRcvClp0Cells=caviIntIngRcvClp0Cells, caviHEgrRcvClp0Cells=caviHEgrRcvClp0Cells, caviHighIngRcvClp1Cells=caviHighIngRcvClp1Cells, caviHIntIngRcvClp1Cells=caviHIntIngRcvClp1Cells, caviIntIngXmtClp0Cells=caviIntIngXmtClp0Cells, caviEgrClp0DiscCells=caviEgrClp0DiscCells, caviEgressHighSpeedStatMIBGroup=caviEgressHighSpeedStatMIBGroup, caviHIntEgrClp1DiscCells=caviHIntEgrClp1DiscCells, caviHighEgrClp0DiscCells=caviHighEgrClp0DiscCells, caviHighEgrXmtClp0Cells=caviHighEgrXmtClp0Cells, caviHighIntIngRcvClp1Cells=caviHighIntIngRcvClp1Cells, caviVpiNum=caviVpiNum, caviMIBCompliances=caviMIBCompliances, caviStatIngressTable=caviStatIngressTable, caviIntEgrRcvClp1Cells=caviIntEgrRcvClp1Cells, caviPhyIfIndex=caviPhyIfIndex, caviEgrXmtEFCICells=caviEgrXmtEFCICells, caviHEgrRcvClp1Cells=caviHEgrRcvClp1Cells, caviHighIngClp0DiscCells=caviHighIngClp0DiscCells, caviHIngXmtClp0Cells=caviHIngXmtClp0Cells, caviHIntIngRcvClp0Cells=caviHIntIngRcvClp0Cells, caviMaxRate=caviMaxRate, caviHIntIngXmtClp0Cells=caviHIntIngXmtClp0Cells, caviIndex=caviIndex, caviIngressIntervalNumber=caviIngressIntervalNumber, caviHighIngXmtClp1Cells=caviHighIngXmtClp1Cells, caviIngRcvClp0Cells=caviIngRcvClp0Cells, caviIntEgrClp0DiscCells=caviIntEgrClp0DiscCells, caviStatEgressEntry=caviStatEgressEntry, caviMIBConformance=caviMIBConformance, caviIntIngRcvEFCICells=caviIntIngRcvEFCICells, caviHighEgrXmtClp1Cells=caviHighEgrXmtClp1Cells, caviIfType=caviIfType, caviIngXmtClp0Cells=caviIngXmtClp0Cells, caviIngRcvClp1Cells=caviIngRcvClp1Cells, caviIngClp1DiscCells=caviIngClp1DiscCells, caviIngressIntervalStatMIBGroup=caviIngressIntervalStatMIBGroup, caviIngHighSpeedStatMIBGroup1=caviIngHighSpeedStatMIBGroup1, caviMIBGroupRev1=caviMIBGroupRev1, caviIngressStatMIBGroup=caviIngressStatMIBGroup, caviEgrXmtClp0Cells=caviEgrXmtClp0Cells, caviEgressHighSpeedStatMIBGroup1=caviEgressHighSpeedStatMIBGroup1, caviIntEgrXmtClp0Cells=caviIntEgrXmtClp0Cells, caviHIntEgrRcvClp1Cells=caviHIntEgrRcvClp1Cells, caviMIBComplianceRev1=caviMIBComplianceRev1, caviHighEgrRcvClp0Cells=caviHighEgrRcvClp0Cells, caviEgrRcvEFCICells=caviEgrRcvEFCICells, caviIngRcvOAMCells=caviIngRcvOAMCells, caviStatEgressTable=caviStatEgressTable, caviHIngRcvClp0Cells=caviHIngRcvClp0Cells, caviTable=caviTable, caviHighIntIngXmtClp0Cells=caviHighIntIngXmtClp0Cells, caviHIntIngClp1DiscCells=caviHIntIngClp1DiscCells, caviHEgrClp0DiscCells=caviHEgrClp0DiscCells, caviHIngRcvClp1Cells=caviHIngRcvClp1Cells, caviHighIntIngClp1DiscCells=caviHighIntIngClp1DiscCells, caviEgressIntervalMIBGroup=caviEgressIntervalMIBGroup, caviIntEgrClp1DiscCells=caviIntEgrClp1DiscCells, caviHIntEgrClp0DiscCells=caviHIntEgrClp0DiscCells, caviRowStatus=caviRowStatus, caviHIntEgrXmtClp1Cells=caviHIntEgrXmtClp1Cells, caviIngRcvEFCICells=caviIngRcvEFCICells, caviIntEgrRMCells=caviIntEgrRMCells, caviIntIngRcvOAMCells=caviIntIngRcvOAMCells, caviHighIntEgrXmtClp1Cells=caviHighIntEgrXmtClp1Cells, caviMIBGroup=caviMIBGroup, caviHEgrXmtClp0Cells=caviHEgrXmtClp0Cells, caviHighIntEgrRcvClp1Cells=caviHighIntEgrRcvClp1Cells, caviEgrRcvClp0Cells=caviEgrRcvClp0Cells, caviHighEgrRcvClp1Cells=caviHighEgrRcvClp1Cells, caviHIntEgrXmtClp0Cells=caviHIntEgrXmtClp0Cells, caviHighIntIngRcvClp0Cells=caviHighIntIngRcvClp0Cells, caviStatistics=caviStatistics, caviEgrRMCells=caviEgrRMCells, caviIntIngClp0DiscCells=caviIntIngClp0DiscCells, caviMinRate=caviMinRate, caviHEgrClp1DiscCells=caviHEgrClp1DiscCells, caviHIntEgrRcvClp0Cells=caviHIntEgrRcvClp0Cells, caviEgressStatMIBGroup1=caviEgressStatMIBGroup1, caviEgressIntervalTable=caviEgressIntervalTable, caviIngHighSpeedStatMIBGroup2=caviIngHighSpeedStatMIBGroup2, caviStatIngressEntry=caviStatIngressEntry, PYSNMP_MODULE_ID=ciscoAtmVirtualIfMIB, caviIntIngRcvClp1Cells=caviIntIngRcvClp1Cells, caviEgressIntervalEntry=caviEgressIntervalEntry, caviIntEgrXmtClp1Cells=caviIntEgrXmtClp1Cells, caviIntEgrRcvEFCICells=caviIntEgrRcvEFCICells, caviFileId=caviFileId, caviHighIntIngXmtClp1Cells=caviHighIntIngXmtClp1Cells, caviHighIngRcvClp0Cells=caviHighIngRcvClp0Cells, caviHEgrXmtClp1Cells=caviHEgrXmtClp1Cells, caviHighIntIngClp0DiscCells=caviHighIntIngClp0DiscCells, caviHIngClp0DiscCells=caviHIngClp0DiscCells, caviHighIngClp1DiscCells=caviHighIngClp1DiscCells, caviHIngClp1DiscCells=caviHIngClp1DiscCells, caviIngressHighSpeedStatMIBGroup=caviIngressHighSpeedStatMIBGroup, caviEgrRcvOAMCells=caviEgrRcvOAMCells, caviIntEgrRcvClp0Cells=caviIntEgrRcvClp0Cells, caviIngressIntervalEntry=caviIngressIntervalEntry, caviIngXmtEFCICells=caviIngXmtEFCICells, caviMIBCompliance=caviMIBCompliance, caviIntEgrRcvOAMCells=caviIntEgrRcvOAMCells, caviIntIngXmtClp1Cells=caviIntIngXmtClp1Cells, caviIntIngXmtEFCICells=caviIntIngXmtEFCICells, caviEgrRcvClp1Cells=caviEgrRcvClp1Cells, caviIngXmtClp1Cells=caviIngXmtClp1Cells, caviIntEgrXmtOAMCells=caviIntEgrXmtOAMCells, caviEgrXmtOAMCells=caviEgrXmtOAMCells, caviHIntIngXmtClp1Cells=caviHIntIngXmtClp1Cells, caviHighIngXmtClp0Cells=caviHighIngXmtClp0Cells, caviEgressIntervalNumber=caviEgressIntervalNumber, caviConfig=caviConfig, caviMinVpiNum=caviMinVpiNum, caviHighIntEgrClp1DiscCells=caviHighIntEgrClp1DiscCells, caviMIBComplianceRev3=caviMIBComplianceRev3, caviEgrXmtClp1Cells=caviEgrXmtClp1Cells, caviIntIngXmtOAMCells=caviIntIngXmtOAMCells, caviMaxVpiNum=caviMaxVpiNum, caviViIfIndex=caviViIfIndex, caviIntIngClp1DiscCells=caviIntIngClp1DiscCells, caviIngRMCells=caviIngRMCells, caviHighEgrClp1DiscCells=caviHighEgrClp1DiscCells, caviIngXmtOAMCells=caviIngXmtOAMCells)
