#
# PySNMP MIB module ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:01:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Vfc, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Vfc")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Bits, ModuleIdentity, TimeTicks, Counter64, Unsigned32, Counter32, NotificationType, ObjectIdentity, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Bits", "ModuleIdentity", "TimeTicks", "Counter64", "Unsigned32", "Counter32", "NotificationType", "ObjectIdentity", "Gauge32", "iso")
TextualConvention, RowStatus, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "DateAndTime")
alcatelIND1VfcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1))
alcatelIND1VfcMIB.setRevisions(('2010-03-15 00:00',))
if mibBuilder.loadTexts: alcatelIND1VfcMIB.setLastUpdated('201003150000Z')
if mibBuilder.loadTexts: alcatelIND1VfcMIB.setOrganization('Alcatel-Lucent')
alcatelIND1VfcMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1))
if mibBuilder.loadTexts: alcatelIND1VfcMIBObjects.setStatus('current')
alcatelIND1VfcMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2))
if mibBuilder.loadTexts: alcatelIND1VfcMIBConformance.setStatus('current')
alcatelIND1VfcMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1VfcMIBGroups.setStatus('current')
alcatelIND1VfcMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1VfcMIBCompliances.setStatus('current')
alaVfcConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1))
alaVfcConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 2))
class VfcEnableState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("disabled", 0), ("enabled", 1))

class VfcBwLimitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("mbits", 1), ("percentage", 2))

class VfcProfileType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("wredProfile", 1), ("qsetProfile", 2), ("qProfile", 3))

class VfcQueueType(TextualConvention, Integer32):
    status = 'current'

class VfcQsetAction(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("default", 0), ("override", 1), ("detach", 2), ("revert", 3))

class VfcQsapList(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 128)

class VfcQsapType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("all", 1), ("slot", 2), ("slotport", 3), ("lag", 4), ("ipif", 5), ("lsp", 6), ("sbind", 7), ("sap", 8))

class VfcSchedulingMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("strictPriority", 1), ("queueSpecified", 2))

class VfcWfqMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("werr", 1), ("wrr", 2))

class VfcProfileMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("nonDcb", 1), ("dcb", 2))

alaVfcWREDProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaVfcWREDProfileTable.setStatus('current')
alaVfcWREDProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPId"))
if mibBuilder.loadTexts: alaVfcWREDProfileEntry.setStatus('current')
alaVfcWRPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: alaVfcWRPId.setStatus('current')
alaVfcWRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 2), VfcEnableState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVfcWRPAdminState.setStatus('deprecated')
alaVfcWRPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPName.setStatus('current')
alaVfcWRPGreenMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPGreenMinThreshold.setStatus('current')
alaVfcWRPGreenMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPGreenMaxThreshold.setStatus('current')
alaVfcWRPGreenMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPGreenMaxDropProbability.setStatus('current')
alaVfcWRPGreenGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPGreenGain.setStatus('current')
alaVfcWRPYellowMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPYellowMinThreshold.setStatus('current')
alaVfcWRPYellowMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPYellowMaxThreshold.setStatus('current')
alaVfcWRPYellowMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPYellowMaxDropProbability.setStatus('current')
alaVfcWRPYellowGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPYellowGain.setStatus('current')
alaVfcWRPRedMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPRedMinThreshold.setStatus('current')
alaVfcWRPRedMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPRedMaxThreshold.setStatus('current')
alaVfcWRPRedMaxDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPRedMaxDropProbability.setStatus('current')
alaVfcWRPRedGain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(7)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPRedGain.setStatus('current')
alaVfcWRPStatsAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 16), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPStatsAdmin.setStatus('deprecated')
alaVfcWRPAttachmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPAttachmentCount.setStatus('current')
alaVfcWRPMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPMTU.setStatus('current')
alaVfcWRPLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPLastChange.setStatus('current')
alaVfcWRPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 1, 1, 20), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcWRPRowStatus.setStatus('current')
alaVfcQsetProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alaVfcQsetProfileTable.setStatus('current')
alaVfcQsetProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPId"))
if mibBuilder.loadTexts: alaVfcQsetProfileEntry.setStatus('current')
alaVfcQSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: alaVfcQSPId.setStatus('current')
alaVfcQSPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 2), VfcEnableState().clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPAdminState.setStatus('deprecated')
alaVfcQSPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPName.setStatus('current')
alaVfcQSPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPType.setStatus('current')
alaVfcQSPTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPTemplateId.setStatus('current')
alaVfcQSPTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPTemplateName.setStatus('current')
alaVfcQSPBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 7), VfcBwLimitType().clone('percentage')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPBandwidthLimitType.setStatus('current')
alaVfcQSPBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPBandwidthLimitValue.setStatus('current')
alaVfcQSPQueueCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 9), Unsigned32().clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPQueueCount.setStatus('current')
alaVfcQSPWRPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPWRPId.setStatus('current')
alaVfcQSPWRPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPWRPName.setStatus('current')
alaVfcQSPWRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 12), VfcEnableState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVfcQSPWRPAdminState.setStatus('deprecated')
alaVfcQSPSchedulingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 13), VfcSchedulingMethod().clone('strictPriority')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPSchedulingMethod.setStatus('current')
alaVfcQSPStatsAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 14), VfcEnableState().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVfcQSPStatsAdmin.setStatus('deprecated')
alaVfcQSPAttachmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPAttachmentCount.setStatus('current')
alaVfcQSPLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPLastChange.setStatus('current')
alaVfcQSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 2, 1, 17), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSPRowStatus.setStatus('current')
alaVfcQsetInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3), )
if mibBuilder.loadTexts: alaVfcQsetInstanceTable.setStatus('current')
alaVfcQsetInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetId"))
if mibBuilder.loadTexts: alaVfcQsetInstanceEntry.setStatus('current')
alaVfcQsetId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaVfcQsetId.setStatus('current')
alaVfcQsetQsapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetQsapId.setStatus('current')
alaVfcQsetAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 3), VfcEnableState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetAdminState.setStatus('deprecated')
alaVfcQsetOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 4), VfcEnableState().clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetOperState.setStatus('deprecated')
alaVfcQsetQSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetQSPId.setStatus('current')
alaVfcQsetQSPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetQSPName.setStatus('current')
alaVfcQsetOperBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 7), VfcBwLimitType().clone('percentage')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetOperBandwidthLimitType.setStatus('current')
alaVfcQsetOperBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetOperBandwidthLimitValue.setStatus('current')
alaVfcQsetBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 9), VfcBwLimitType().clone('percentage')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetBandwidthLimitType.setStatus('deprecated')
alaVfcQsetBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetBandwidthLimitValue.setStatus('deprecated')
alaVfcQsetQueueCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 11), Unsigned32().clone(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetQueueCount.setStatus('deprecated')
alaVfcQsetWRPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetWRPId.setStatus('deprecated')
alaVfcQsetWRPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetWRPName.setStatus('deprecated')
alaVfcQsetWRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 14), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetWRPAdminState.setStatus('current')
alaVfcQsetWRPOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 15), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetWRPOperState.setStatus('current')
alaVfcQsetSchedulingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 16), VfcSchedulingMethod().clone('strictPriority')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetSchedulingMethod.setStatus('deprecated')
alaVfcQsetStatsAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 17), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetStatsAdmin.setStatus('current')
alaVfcQsetStatsOper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 18), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetStatsOper.setStatus('current')
alaVfcQsetLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 19), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetLastChange.setStatus('current')
alaVfcQsetStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 20), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetStatsClear.setStatus('current')
alaVfcQsetStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsetStatsInterval.setStatus('current')
alaVfcQsetMisconfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 22), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetMisconfigured.setStatus('current')
alaVfcQsetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 3, 1, 23), VfcProfileMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsetMode.setStatus('current')
alaVfcQProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4), )
if mibBuilder.loadTexts: alaVfcQProfileTable.setStatus('current')
alaVfcQProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPQSPId"), (0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPQId"))
if mibBuilder.loadTexts: alaVfcQProfileEntry.setStatus('current')
alaVfcQPQSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: alaVfcQPQSPId.setStatus('current')
alaVfcQPQId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: alaVfcQPQId.setStatus('current')
alaVfcQPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 3), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPAdminState.setStatus('deprecated')
alaVfcQPWRPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPWRPId.setStatus('current')
alaVfcQPWRPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPWRPName.setStatus('current')
alaVfcQPWRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 6), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPWRPAdminState.setStatus('deprecated')
alaVfcQPQSPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPQSPName.setStatus('current')
alaVfcQPTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPTrafficClass.setStatus('current')
alaVfcQPQType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 9), VfcQueueType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPQType.setStatus('current')
alaVfcQPCIRBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 10), VfcBwLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPCIRBandwidthLimitType.setStatus('current')
alaVfcQPCIRBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPCIRBandwidthLimitValue.setStatus('current')
alaVfcQPPIRBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 12), VfcBwLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPPIRBandwidthLimitType.setStatus('current')
alaVfcQPPIRBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPPIRBandwidthLimitValue.setStatus('current')
alaVfcQPStatsAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 14), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPStatsAdmin.setStatus('deprecated')
alaVfcQPCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPCbs.setStatus('current')
alaVfcQPMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPMbs.setStatus('current')
alaVfcQPLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 17), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPLastChange.setStatus('current')
alaVfcQPWfqWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPWfqWeight.setStatus('current')
alaVfcQPWfqMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 4, 1, 19), VfcWfqMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQPWfqMode.setStatus('current')
alaVfcQInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5), )
if mibBuilder.loadTexts: alaVfcQInstanceTable.setStatus('current')
alaVfcQInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceQsiId"), (0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceQId"))
if mibBuilder.loadTexts: alaVfcQInstanceEntry.setStatus('current')
alaVfcQInstanceQsiId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaVfcQInstanceQsiId.setStatus('current')
alaVfcQInstanceQId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: alaVfcQInstanceQId.setStatus('current')
alaVfcQInstanceQsapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceQsapId.setStatus('deprecated')
alaVfcQInstanceQSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceQSPId.setStatus('deprecated')
alaVfcQInstanceQSPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceQSPName.setStatus('deprecated')
alaVfcQInstanceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 6), VfcEnableState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQInstanceAdminState.setStatus('deprecated')
alaVfcQInstanceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 7), VfcEnableState().clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceOperState.setStatus('deprecated')
alaVfcQInstanceWRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 8), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQInstanceWRPAdminState.setStatus('current')
alaVfcQInstanceWRPOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 9), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceWRPOperState.setStatus('current')
alaVfcQInstanceWRPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceWRPId.setStatus('deprecated')
alaVfcQInstanceWRPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceWRPName.setStatus('deprecated')
alaVfcQInstanceCIRBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 12), VfcBwLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceCIRBandwidthLimitType.setStatus('deprecated')
alaVfcQInstanceCIRBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceCIRBandwidthLimitValue.setStatus('deprecated')
alaVfcQInstancePIRBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 14), VfcBwLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePIRBandwidthLimitType.setStatus('deprecated')
alaVfcQInstancePIRBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePIRBandwidthLimitValue.setStatus('deprecated')
alaVfcQInstanceCIROperationalBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 16), VfcBwLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceCIROperationalBandwidthLimitType.setStatus('current')
alaVfcQInstanceCIROperationalBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceCIROperationalBandwidthLimitValue.setStatus('current')
alaVfcQInstancePIROperationalBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 18), VfcBwLimitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePIROperationalBandwidthLimitType.setStatus('current')
alaVfcQInstancePIROperationalBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePIROperationalBandwidthLimitValue.setStatus('current')
alaVfcQInstanceStatsAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 20), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQInstanceStatsAdmin.setStatus('deprecated')
alaVfcQInstanceStatsOper = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 21), VfcEnableState().clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceStatsOper.setStatus('deprecated')
alaVfcQInstancePacketsEnqueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePacketsEnqueued.setStatus('current')
alaVfcQInstanceBytesEnqueued = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceBytesEnqueued.setStatus('current')
alaVfcQInstancePacketsDequeued = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePacketsDequeued.setStatus('deprecated')
alaVfcQInstanceBytesDequeued = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceBytesDequeued.setStatus('deprecated')
alaVfcQInstancePacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstancePacketsDropped.setStatus('current')
alaVfcQInstanceBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceBytesDropped.setStatus('current')
alaVfcQInstanceGreenPacketsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceGreenPacketsAccepted.setStatus('current')
alaVfcQInstanceGreenBytesAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceGreenBytesAccepted.setStatus('current')
alaVfcQInstanceGreenPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceGreenPacketsDropped.setStatus('current')
alaVfcQInstanceGreenBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceGreenBytesDropped.setStatus('current')
alaVfcQInstanceYellowPacketsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceYellowPacketsAccepted.setStatus('current')
alaVfcQInstanceYellowBytesAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceYellowBytesAccepted.setStatus('current')
alaVfcQInstanceYellowPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceYellowPacketsDropped.setStatus('current')
alaVfcQInstanceYellowBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceYellowBytesDropped.setStatus('current')
alaVfcQInstanceRedPacketsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceRedPacketsAccepted.setStatus('current')
alaVfcQInstanceRedBytesAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceRedBytesAccepted.setStatus('current')
alaVfcQInstanceRedPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceRedPacketsDropped.setStatus('current')
alaVfcQInstanceRedBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceRedBytesDropped.setStatus('current')
alaVfcQInstanceLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 40), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQInstanceLastChange.setStatus('current')
alaVfcQInstanceStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 5, 1, 41), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQInstanceStatsClear.setStatus('deprecated')
alaVfcQsapTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6), )
if mibBuilder.loadTexts: alaVfcQsapTable.setStatus('current')
alaVfcQsapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapId"))
if mibBuilder.loadTexts: alaVfcQsapEntry.setStatus('current')
alaVfcQsapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaVfcQsapId.setStatus('current')
alaVfcQsapAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 2), VfcEnableState().clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapAdminState.setStatus('deprecated')
alaVfcQsapType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 3), VfcQsapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapType.setStatus('current')
alaVfcQsapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapValue.setStatus('current')
alaVfcQsapQSPId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapQSPId.setStatus('deprecated')
alaVfcQsapQSPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapQSPName.setStatus('deprecated')
alaVfcQsapWRPAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 7), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapWRPAdminState.setStatus('deprecated')
alaVfcQsapStatsAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 8), VfcEnableState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapStatsAdmin.setStatus('deprecated')
alaVfcQsapBandwidthLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 9), VfcBwLimitType().clone('percentage')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapBandwidthLimitType.setStatus('current')
alaVfcQsapBandwidthLimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapBandwidthLimitValue.setStatus('current')
alaVfcQsapClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapClearStats.setStatus('deprecated')
alaVfcQsapQpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapQpId.setStatus('deprecated')
alaVfcQsapAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 13), VfcQsetAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVfcQsapAction.setStatus('deprecated')
alaVfcQsapLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 14), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapLastChange.setStatus('current')
alaVfcQsapParent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 6, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQsapParent.setStatus('current')
alaVfcProfileIndexLookupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 7), )
if mibBuilder.loadTexts: alaVfcProfileIndexLookupTable.setStatus('current')
alaVfcProfileIndexLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileType"), (1, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileName"))
if mibBuilder.loadTexts: alaVfcProfileIndexLookupEntry.setStatus('current')
alaVfcProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 7, 1, 1), VfcProfileType())
if mibBuilder.loadTexts: alaVfcProfileType.setStatus('current')
alaVfcProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaVfcProfileName.setStatus('current')
alaVfcProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcProfileId.setStatus('current')
alaVfcProfileQsapLookupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 8), )
if mibBuilder.loadTexts: alaVfcProfileQsapLookupTable.setStatus('current')
alaVfcProfileQsapLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileQsapLookupType"), (0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileQsapLookupId"), (0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileQsapLookupValue"))
if mibBuilder.loadTexts: alaVfcProfileQsapLookupEntry.setStatus('current')
alaVfcProfileQsapLookupType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 8, 1, 1), VfcProfileType())
if mibBuilder.loadTexts: alaVfcProfileQsapLookupType.setStatus('current')
alaVfcProfileQsapLookupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: alaVfcProfileQsapLookupId.setStatus('current')
alaVfcProfileQsapLookupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 8, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alaVfcProfileQsapLookupValue.setStatus('current')
alaVfcProfileQsapLookupList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 8, 1, 4), VfcQsapList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcProfileQsapLookupList.setStatus('current')
alaVfcQSIQsapLookupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 9), )
if mibBuilder.loadTexts: alaVfcQSIQsapLookupTable.setStatus('current')
alaVfcQSIQsapLookupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSIQsapLookupQsetId"), (0, "ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSIQsapLookupValue"))
if mibBuilder.loadTexts: alaVfcQSIQsapLookupEntry.setStatus('current')
alaVfcQSIQsapLookupQsetId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaVfcQSIQsapLookupQsetId.setStatus('current')
alaVfcQSIQsapLookupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 9, 1, 2), Unsigned32())
if mibBuilder.loadTexts: alaVfcQSIQsapLookupValue.setStatus('current')
alaVfcQSIQsapLookupList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 9, 1, 3), VfcQsapList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcQSIQsapLookupList.setStatus('current')
alaVfcStatisticsCollectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcStatisticsCollectionInterval.setStatus('deprecated')
alaVfcStatisticsCollectionDuration = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVfcStatisticsCollectionDuration.setStatus('deprecated')
alcatelIND1VfcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWREDProfileGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetProfileGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetInstanceGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQProfileGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileIndexLookupGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileQsapLookupGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSIQsapLookupGroup"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1VfcMIBCompliance = alcatelIND1VfcMIBCompliance.setStatus('current')
alaVfcWREDProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPGreenMinThreshold"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPGreenMaxThreshold"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPGreenMaxDropProbability"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPGreenGain"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPYellowMinThreshold"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPYellowMaxThreshold"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPYellowMaxDropProbability"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPYellowGain"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPRedMinThreshold"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPRedMaxThreshold"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPRedMaxDropProbability"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPRedGain"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPStatsAdmin"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPAttachmentCount"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPMTU"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPLastChange"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcWRPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcWREDProfileGroup = alaVfcWREDProfileGroup.setStatus('current')
alaVfcQsetProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPTemplateId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPTemplateName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPQueueCount"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPWRPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPWRPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPWRPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPSchedulingMethod"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPStatsAdmin"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPAttachmentCount"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPLastChange"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcQsetProfileGroup = alaVfcQsetProfileGroup.setStatus('current')
alaVfcQsetInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetQsapId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetOperState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetQSPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetQSPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetOperBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetOperBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetQueueCount"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetWRPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetWRPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetWRPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetWRPOperState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetSchedulingMethod"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetStatsAdmin"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetStatsOper"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetLastChange"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetStatsClear"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetStatsInterval"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetMisconfigured"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsetMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcQsetInstanceGroup = alaVfcQsetInstanceGroup.setStatus('current')
alaVfcQProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPWRPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPWRPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPWRPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPQSPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPTrafficClass"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPQType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPCIRBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPCIRBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPPIRBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPPIRBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPStatsAdmin"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPCbs"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPMbs"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPLastChange"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPWfqWeight"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQPWfqMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcQProfileGroup = alaVfcQProfileGroup.setStatus('current')
alaVfcQInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceQsapId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceQSPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceQSPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceOperState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceWRPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceWRPOperState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceWRPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceWRPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceCIRBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceCIRBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePIRBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePIRBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceCIROperationalBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceCIROperationalBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePIROperationalBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePIROperationalBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceStatsAdmin"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceStatsOper"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePacketsEnqueued"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceBytesEnqueued"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePacketsDequeued"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceBytesDequeued"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstancePacketsDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceBytesDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceGreenPacketsAccepted"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceGreenBytesAccepted"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceGreenPacketsDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceGreenBytesDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceYellowPacketsAccepted"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceYellowBytesAccepted"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceYellowPacketsDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceYellowBytesDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceRedPacketsAccepted"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceRedBytesAccepted"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceRedPacketsDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceRedBytesDropped"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceLastChange"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQInstanceStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcQInstanceGroup = alaVfcQInstanceGroup.setStatus('current')
alaVfcQsapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapQSPId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapQSPName"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapWRPAdminState"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapStatsAdmin"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapBandwidthLimitType"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapBandwidthLimitValue"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapClearStats"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapQpId"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapAction"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapLastChange"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQsapParent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcQsapGroup = alaVfcQsapGroup.setStatus('current')
alaVfcProfileIndexLookupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcProfileIndexLookupGroup = alaVfcProfileIndexLookupGroup.setStatus('current')
alaVfcProfileQsapLookupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcProfileQsapLookupList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcProfileQsapLookupGroup = alaVfcProfileQsapLookupGroup.setStatus('current')
alaVfcQSIQsapLookupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcQSIQsapLookupList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcQSIQsapLookupGroup = alaVfcQSIQsapLookupGroup.setStatus('current')
alaVfcStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 61, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcStatisticsCollectionInterval"), ("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", "alaVfcStatisticsCollectionDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVfcStatsGroup = alaVfcStatsGroup.setStatus('deprecated')
mibBuilder.exportSymbols("ALCATEL-IND1-VIRTUAL-FLOW-CONTROL-MIB", alaVfcQPWfqMode=alaVfcQPWfqMode, alcatelIND1VfcMIBCompliances=alcatelIND1VfcMIBCompliances, alaVfcConfig=alaVfcConfig, alaVfcQInstanceYellowPacketsDropped=alaVfcQInstanceYellowPacketsDropped, alaVfcQSPTemplateId=alaVfcQSPTemplateId, alaVfcQPTrafficClass=alaVfcQPTrafficClass, alaVfcQInstanceQId=alaVfcQInstanceQId, alaVfcQInstanceGreenPacketsDropped=alaVfcQInstanceGreenPacketsDropped, alaVfcWRPMTU=alaVfcWRPMTU, alaVfcQInstanceYellowPacketsAccepted=alaVfcQInstanceYellowPacketsAccepted, VfcEnableState=VfcEnableState, alaVfcQsetProfileEntry=alaVfcQsetProfileEntry, alaVfcWRPRedMinThreshold=alaVfcWRPRedMinThreshold, alaVfcQInstanceGreenBytesAccepted=alaVfcQInstanceGreenBytesAccepted, alaVfcQInstanceStatsClear=alaVfcQInstanceStatsClear, alaVfcQsapId=alaVfcQsapId, alaVfcQSPLastChange=alaVfcQSPLastChange, VfcQsetAction=VfcQsetAction, alaVfcQsapGroup=alaVfcQsapGroup, alaVfcQPWfqWeight=alaVfcQPWfqWeight, alaVfcQsetStatsInterval=alaVfcQsetStatsInterval, alaVfcProfileType=alaVfcProfileType, alaVfcQsapStatsAdmin=alaVfcQsapStatsAdmin, alaVfcWRPYellowMaxDropProbability=alaVfcWRPYellowMaxDropProbability, alaVfcQPStatsAdmin=alaVfcQPStatsAdmin, alaVfcQsetProfileGroup=alaVfcQsetProfileGroup, alaVfcQsetBandwidthLimitType=alaVfcQsetBandwidthLimitType, alaVfcProfileIndexLookupEntry=alaVfcProfileIndexLookupEntry, alaVfcQPAdminState=alaVfcQPAdminState, alaVfcWRPGreenGain=alaVfcWRPGreenGain, alaVfcQInstanceWRPOperState=alaVfcQInstanceWRPOperState, alaVfcQInstanceCIROperationalBandwidthLimitValue=alaVfcQInstanceCIROperationalBandwidthLimitValue, alaVfcQInstanceBytesDropped=alaVfcQInstanceBytesDropped, alaVfcQPPIRBandwidthLimitType=alaVfcQPPIRBandwidthLimitType, alaVfcQsapBandwidthLimitType=alaVfcQsapBandwidthLimitType, alaVfcQSPId=alaVfcQSPId, alaVfcProfileQsapLookupType=alaVfcProfileQsapLookupType, alaVfcQInstanceLastChange=alaVfcQInstanceLastChange, alaVfcQInstanceCIRBandwidthLimitValue=alaVfcQInstanceCIRBandwidthLimitValue, alaVfcQInstanceOperState=alaVfcQInstanceOperState, alaVfcQSIQsapLookupEntry=alaVfcQSIQsapLookupEntry, alaVfcQInstancePIROperationalBandwidthLimitType=alaVfcQInstancePIROperationalBandwidthLimitType, alaVfcQSPName=alaVfcQSPName, alaVfcQInstanceWRPId=alaVfcQInstanceWRPId, alcatelIND1VfcMIBConformance=alcatelIND1VfcMIBConformance, alaVfcWREDProfileGroup=alaVfcWREDProfileGroup, alaVfcQPPIRBandwidthLimitValue=alaVfcQPPIRBandwidthLimitValue, alaVfcQPQSPName=alaVfcQPQSPName, alaVfcQInstancePIROperationalBandwidthLimitValue=alaVfcQInstancePIROperationalBandwidthLimitValue, alaVfcProfileId=alaVfcProfileId, alaVfcWRPAttachmentCount=alaVfcWRPAttachmentCount, alaVfcQsetMisconfigured=alaVfcQsetMisconfigured, alaVfcQInstanceGreenBytesDropped=alaVfcQInstanceGreenBytesDropped, alaVfcWRPGreenMaxDropProbability=alaVfcWRPGreenMaxDropProbability, alaVfcQsapEntry=alaVfcQsapEntry, alaVfcQSIQsapLookupList=alaVfcQSIQsapLookupList, alaVfcQProfileEntry=alaVfcQProfileEntry, alaVfcQInstanceEntry=alaVfcQInstanceEntry, alaVfcWRPGreenMinThreshold=alaVfcWRPGreenMinThreshold, alaVfcQSPWRPName=alaVfcQSPWRPName, alaVfcQsetQSPName=alaVfcQsetQSPName, VfcProfileMode=VfcProfileMode, alaVfcWRPRedMaxThreshold=alaVfcWRPRedMaxThreshold, alaVfcQInstancePacketsDropped=alaVfcQInstancePacketsDropped, alaVfcWRPLastChange=alaVfcWRPLastChange, alaVfcQsapType=alaVfcQsapType, alaVfcQSPWRPId=alaVfcQSPWRPId, alaVfcQsetWRPAdminState=alaVfcQsetWRPAdminState, alaVfcProfileQsapLookupEntry=alaVfcProfileQsapLookupEntry, alaVfcStatsGroup=alaVfcStatsGroup, alaVfcWREDProfileTable=alaVfcWREDProfileTable, alaVfcQsetQsapId=alaVfcQsetQsapId, alaVfcQInstanceGreenPacketsAccepted=alaVfcQInstanceGreenPacketsAccepted, alaVfcQsetBandwidthLimitValue=alaVfcQsetBandwidthLimitValue, alaVfcQsetInstanceGroup=alaVfcQsetInstanceGroup, alaVfcQSPRowStatus=alaVfcQSPRowStatus, alaVfcQsetQSPId=alaVfcQsetQSPId, alaVfcQSPWRPAdminState=alaVfcQSPWRPAdminState, alaVfcQInstanceYellowBytesAccepted=alaVfcQInstanceYellowBytesAccepted, alcatelIND1VfcMIBGroups=alcatelIND1VfcMIBGroups, alaVfcProfileQsapLookupId=alaVfcProfileQsapLookupId, alaVfcQsetQueueCount=alaVfcQsetQueueCount, alaVfcQPWRPAdminState=alaVfcQPWRPAdminState, alaVfcQInstanceRedBytesAccepted=alaVfcQInstanceRedBytesAccepted, alaVfcQInstanceAdminState=alaVfcQInstanceAdminState, alaVfcQsapWRPAdminState=alaVfcQsapWRPAdminState, alaVfcQsetOperState=alaVfcQsetOperState, alaVfcQSPQueueCount=alaVfcQSPQueueCount, alaVfcQsetOperBandwidthLimitValue=alaVfcQsetOperBandwidthLimitValue, alaVfcQInstancePIRBandwidthLimitType=alaVfcQInstancePIRBandwidthLimitType, alaVfcQSIQsapLookupTable=alaVfcQSIQsapLookupTable, alaVfcProfileQsapLookupList=alaVfcProfileQsapLookupList, alaVfcQSPAdminState=alaVfcQSPAdminState, alaVfcQsetStatsOper=alaVfcQsetStatsOper, alaVfcQsetInstanceEntry=alaVfcQsetInstanceEntry, alaVfcQsetStatsAdmin=alaVfcQsetStatsAdmin, VfcProfileType=VfcProfileType, alaVfcQSPBandwidthLimitType=alaVfcQSPBandwidthLimitType, alaVfcQPCbs=alaVfcQPCbs, alaVfcQsapQSPName=alaVfcQsapQSPName, alaVfcWRPAdminState=alaVfcWRPAdminState, alaVfcQsapLastChange=alaVfcQsapLastChange, VfcQueueType=VfcQueueType, alaVfcWREDProfileEntry=alaVfcWREDProfileEntry, alaVfcQSPBandwidthLimitValue=alaVfcQSPBandwidthLimitValue, alaVfcQPWRPId=alaVfcQPWRPId, alaVfcQsapValue=alaVfcQsapValue, alaVfcQInstanceGroup=alaVfcQInstanceGroup, alaVfcQInstanceQSPName=alaVfcQInstanceQSPName, alaVfcQInstanceStatsAdmin=alaVfcQInstanceStatsAdmin, alaVfcQInstancePacketsEnqueued=alaVfcQInstancePacketsEnqueued, VfcSchedulingMethod=VfcSchedulingMethod, alaVfcQSIQsapLookupQsetId=alaVfcQSIQsapLookupQsetId, alaVfcQSPAttachmentCount=alaVfcQSPAttachmentCount, alaVfcQSIQsapLookupGroup=alaVfcQSIQsapLookupGroup, alaVfcQInstanceStatsOper=alaVfcQInstanceStatsOper, alaVfcWRPRedMaxDropProbability=alaVfcWRPRedMaxDropProbability, alaVfcQInstanceBytesEnqueued=alaVfcQInstanceBytesEnqueued, alaVfcQsapParent=alaVfcQsapParent, alaVfcWRPRedGain=alaVfcWRPRedGain, alaVfcQPLastChange=alaVfcQPLastChange, alaVfcQsetId=alaVfcQsetId, alaVfcQSPTemplateName=alaVfcQSPTemplateName, VfcQsapType=VfcQsapType, alaVfcStatisticsCollectionDuration=alaVfcStatisticsCollectionDuration, alaVfcQInstanceRedBytesDropped=alaVfcQInstanceRedBytesDropped, alaVfcProfileQsapLookupGroup=alaVfcProfileQsapLookupGroup, alaVfcQPQId=alaVfcQPQId, alaVfcQPCIRBandwidthLimitType=alaVfcQPCIRBandwidthLimitType, alaVfcQsetProfileTable=alaVfcQsetProfileTable, alaVfcQsetStatsClear=alaVfcQsetStatsClear, alaVfcQsetAdminState=alaVfcQsetAdminState, alaVfcQsetWRPOperState=alaVfcQsetWRPOperState, alaVfcProfileQsapLookupTable=alaVfcProfileQsapLookupTable, alaVfcQInstanceYellowBytesDropped=alaVfcQInstanceYellowBytesDropped, alcatelIND1VfcMIB=alcatelIND1VfcMIB, alaVfcQsapQSPId=alaVfcQsapQSPId, alaVfcQPMbs=alaVfcQPMbs, alaVfcQsetSchedulingMethod=alaVfcQsetSchedulingMethod, alaVfcProfileIndexLookupGroup=alaVfcProfileIndexLookupGroup, alcatelIND1VfcMIBObjects=alcatelIND1VfcMIBObjects, alaVfcWRPYellowGain=alaVfcWRPYellowGain, alaVfcWRPGreenMaxThreshold=alaVfcWRPGreenMaxThreshold, alaVfcWRPYellowMaxThreshold=alaVfcWRPYellowMaxThreshold, alaVfcQsetWRPName=alaVfcQsetWRPName, alaVfcQPQType=alaVfcQPQType, alaVfcQPWRPName=alaVfcQPWRPName, alaVfcQInstanceWRPName=alaVfcQInstanceWRPName, alaVfcQInstanceCIRBandwidthLimitType=alaVfcQInstanceCIRBandwidthLimitType, alaVfcQInstanceCIROperationalBandwidthLimitType=alaVfcQInstanceCIROperationalBandwidthLimitType, alaVfcWRPName=alaVfcWRPName, alaVfcQPCIRBandwidthLimitValue=alaVfcQPCIRBandwidthLimitValue, alaVfcQsetOperBandwidthLimitType=alaVfcQsetOperBandwidthLimitType, alaVfcQSIQsapLookupValue=alaVfcQSIQsapLookupValue, alaVfcQInstanceRedPacketsAccepted=alaVfcQInstanceRedPacketsAccepted, alcatelIND1VfcMIBCompliance=alcatelIND1VfcMIBCompliance, alaVfcQInstanceTable=alaVfcQInstanceTable, alaVfcWRPId=alaVfcWRPId, alaVfcQSPSchedulingMethod=alaVfcQSPSchedulingMethod, alaVfcQSPStatsAdmin=alaVfcQSPStatsAdmin, alaVfcStatisticsCollectionInterval=alaVfcStatisticsCollectionInterval, alaVfcQInstancePIRBandwidthLimitValue=alaVfcQInstancePIRBandwidthLimitValue, VfcQsapList=VfcQsapList, alaVfcProfileQsapLookupValue=alaVfcProfileQsapLookupValue, alaVfcQsapQpId=alaVfcQsapQpId, alaVfcQsapTable=alaVfcQsapTable, VfcWfqMode=VfcWfqMode, alaVfcQsetMode=alaVfcQsetMode, alaVfcWRPStatsAdmin=alaVfcWRPStatsAdmin, alaVfcQsetWRPId=alaVfcQsetWRPId, alaVfcQPQSPId=alaVfcQPQSPId, alaVfcQInstanceQSPId=alaVfcQInstanceQSPId, alaVfcQsapClearStats=alaVfcQsapClearStats, alaVfcQSPType=alaVfcQSPType, alaVfcWRPYellowMinThreshold=alaVfcWRPYellowMinThreshold, alaVfcProfileIndexLookupTable=alaVfcProfileIndexLookupTable, alaVfcQInstanceQsapId=alaVfcQInstanceQsapId, alaVfcQsetInstanceTable=alaVfcQsetInstanceTable, alaVfcQsapAction=alaVfcQsapAction, alaVfcConformance=alaVfcConformance, alaVfcQsapAdminState=alaVfcQsapAdminState, alaVfcQInstanceQsiId=alaVfcQInstanceQsiId, alaVfcProfileName=alaVfcProfileName, alaVfcQInstanceWRPAdminState=alaVfcQInstanceWRPAdminState, alaVfcQInstanceBytesDequeued=alaVfcQInstanceBytesDequeued, alaVfcQProfileTable=alaVfcQProfileTable, alaVfcQInstancePacketsDequeued=alaVfcQInstancePacketsDequeued, VfcBwLimitType=VfcBwLimitType, alaVfcQsapBandwidthLimitValue=alaVfcQsapBandwidthLimitValue, alaVfcWRPRowStatus=alaVfcWRPRowStatus, PYSNMP_MODULE_ID=alcatelIND1VfcMIB, alaVfcQProfileGroup=alaVfcQProfileGroup, alaVfcQInstanceRedPacketsDropped=alaVfcQInstanceRedPacketsDropped, alaVfcQsetLastChange=alaVfcQsetLastChange)
