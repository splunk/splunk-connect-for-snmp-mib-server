#
# PySNMP MIB module CISCOSB-rlBrgMulticast-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-rlBrgMulticast-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:08:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
MacAddress, = mibBuilder.importSymbols("BRIDGE-MIB", "MacAddress")
rndErrorSeverity, rndErrorDesc = mibBuilder.importSymbols("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity", "rndErrorDesc")
switch001, rlBrgMulticast, rndNotifications = mibBuilder.importSymbols("CISCOSB-MIB", "switch001", "rlBrgMulticast", "rndNotifications")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
VlanIndex, PortList = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter64, MibIdentifier, Unsigned32, TimeTicks, NotificationType, Gauge32, Bits, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "MibIdentifier", "Unsigned32", "TimeTicks", "NotificationType", "Gauge32", "Bits", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "iso")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
rlMacMulticast = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55))
rlMacMulticast.setRevisions(('2011-05-30 00:00',))
if mibBuilder.loadTexts: rlMacMulticast.setLastUpdated('201105300000Z')
if mibBuilder.loadTexts: rlMacMulticast.setOrganization('Cisco Small Business')
rlMacMulticastEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMacMulticastEnable.setStatus('current')
rlIgmpSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2))
rlIgmpSnoopMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMibVersion.setStatus('current')
rlIgmpSnoopEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopEnable.setStatus('current')
rlIgmpSnoopHostAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopHostAgingTime.setStatus('obsolete')
rlIgmpSnoopRouterAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopRouterAgingTime.setStatus('obsolete')
class IgmpVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("v1", 1), ("v2", 2), ("v3", 3))

rlIgmpSnoopVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7), )
if mibBuilder.loadTexts: rlIgmpSnoopVlanTable.setStatus('obsolete')
rlIgmpSnoopVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopVlanTag"))
if mibBuilder.loadTexts: rlIgmpSnoopVlanEntry.setStatus('obsolete')
rlIgmpSnoopVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopVlanTag.setStatus('obsolete')
rlIgmpSnoopVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanEnable.setStatus('obsolete')
rlIgmpSnoopVlanRouterLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanRouterLearn.setStatus('obsolete')
rlIgmpSnoopVlanHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanHostTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanQuerierTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanQuerierTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanRouterTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopVlanLeaveTimeOut.setStatus('obsolete')
rlIgmpSnoopVlanIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 8), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopVlanIgmpVersion.setStatus('obsolete')
rlIgmpSnoopVlanRouterPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 7, 1, 9), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopVlanRouterPortlist.setStatus('obsolete')
rlIgmpSnoopIGMP224ReportsHandle = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("ignore", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopIGMP224ReportsHandle.setStatus('current')
rlIgmpSnoopMulticastTvTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 10), )
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvTable.setStatus('current')
rlIgmpSnoopMulticastTvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 10, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopMulticastTvVID"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopMulticastTvGroup"))
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvEntry.setStatus('current')
rlIgmpSnoopMulticastTvVID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 10, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvVID.setStatus('current')
rlIgmpSnoopMulticastTvGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvGroup.setStatus('current')
rlIgmpSnoopMulticastTvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 10, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopMulticastTvStatus.setStatus('current')
rlIgmpSnoopMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11), )
if mibBuilder.loadTexts: rlIgmpSnoopMembershipTable.setStatus('current')
rlIgmpSnoopMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopMembershipVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopMembershipGroupIpAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopMembershipSourceIpAddress"))
if mibBuilder.loadTexts: rlIgmpSnoopMembershipEntry.setStatus('current')
rlIgmpSnoopMembershipVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipVlanTag.setStatus('current')
rlIgmpSnoopMembershipGroupIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipGroupIpAddress.setStatus('current')
rlIgmpSnoopMembershipSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipSourceIpAddress.setStatus('current')
rlIgmpSnoopMembershipIncPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipIncPortlist.setStatus('current')
rlIgmpSnoopMembershipExcPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipExcPortlist.setStatus('current')
rlIgmpSnoopMembershipExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipExpiryTime.setStatus('obsolete')
rlIgmpSnoopMembershipCompatibilityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 11, 1, 7), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopMembershipCompatibilityMode.setStatus('current')
rlIgmpSnoopQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12), )
if mibBuilder.loadTexts: rlIgmpSnoopQuerierVlanTable.setStatus('current')
rlIgmpSnoopQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpSnoopQuerierVlanTag"))
if mibBuilder.loadTexts: rlIgmpSnoopQuerierVlanEntry.setStatus('current')
rlIgmpSnoopQuerierVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierVlanTag.setStatus('current')
rlIgmpSnoopQuerierAdminEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierAdminEnable.setStatus('current')
rlIgmpSnoopQuerierOperEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierOperEnable.setStatus('current')
rlIgmpSnoopQuerierAdminAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierAdminAddr.setStatus('current')
rlIgmpSnoopQuerierOperAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierOperAddr.setStatus('current')
rlIgmpSnoopQuerierAdminVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 6), IgmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierAdminVersionNumber.setStatus('current')
rlIgmpSnoopQuerierOperVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 2, 12, 1, 7), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpSnoopQuerierOperVersionNumber.setStatus('current')
rlMacMulticastMaxEntriesNum = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlMacMulticastMaxEntriesNum.setStatus('current')
rlMacMulticastFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 4))
rlMacMulticastUnregFilterEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 4, 1), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMacMulticastUnregFilterEnable.setStatus('current')
rlBrgMulticastMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgMulticastMibVersion.setStatus('current')
rlBrgStaticIpMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3), )
if mibBuilder.loadTexts: rlBrgStaticIpMulticastTable.setStatus('current')
rlBrgStaticIpMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticIpMulticastVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticIpMulticastGroupAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticIpMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgStaticIpMulticastEntry.setStatus('current')
rlBrgStaticIpMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgStaticIpMulticastVlanTag.setStatus('current')
rlBrgStaticIpMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: rlBrgStaticIpMulticastGroupAddress.setStatus('current')
rlBrgStaticIpMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1, 3), IpAddress())
if mibBuilder.loadTexts: rlBrgStaticIpMulticastSourceAddress.setStatus('current')
rlBrgStaticIpMulticastFrwPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticIpMulticastFrwPorts.setStatus('current')
rlBrgStaticIpMulticastForbiddenPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticIpMulticastForbiddenPorts.setStatus('current')
rlBrgStaticIpMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 3, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticIpMulticastStatus.setStatus('current')
rlBrgIpMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4), )
if mibBuilder.loadTexts: rlBrgIpMulticastTable.setStatus('current')
rlBrgIpMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpMulticastVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpMulticastGroupAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgIpMulticastEntry.setStatus('current')
rlBrgIpMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgIpMulticastVlanTag.setStatus('current')
rlBrgIpMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: rlBrgIpMulticastGroupAddress.setStatus('current')
rlBrgIpMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4, 1, 3), IpAddress())
if mibBuilder.loadTexts: rlBrgIpMulticastSourceAddress.setStatus('current')
rlBrgIpMulticastEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgIpMulticastEgressPorts.setStatus('current')
rlBrgIpMulticastLearntPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 4, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgIpMulticastLearntPorts.setStatus('current')
rlBrgStaticInetMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5), )
if mibBuilder.loadTexts: rlBrgStaticInetMulticastTable.setStatus('current')
rlBrgStaticInetMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastGroupAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastGroupAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastSourceAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgStaticInetMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgStaticInetMulticastEntry.setStatus('current')
rlBrgStaticInetMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgStaticInetMulticastVlanTag.setStatus('current')
rlBrgStaticInetMulticastGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastGroupAddressType.setStatus('current')
rlBrgStaticInetMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlBrgStaticInetMulticastGroupAddress.setStatus('current')
rlBrgStaticInetMulticastSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastSourceAddressType.setStatus('current')
rlBrgStaticInetMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlBrgStaticInetMulticastSourceAddress.setStatus('current')
rlBrgStaticInetMulticastFrwPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 6), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastFrwPorts.setStatus('current')
rlBrgStaticInetMulticastForbiddenPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 7), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastForbiddenPorts.setStatus('current')
rlBrgStaticInetMulticastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 5, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgStaticInetMulticastStatus.setStatus('current')
rlBrgInetMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6), )
if mibBuilder.loadTexts: rlBrgInetMulticastTable.setStatus('current')
rlBrgInetMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgInetMulticastVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgInetMulticastGroupAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgInetMulticastGroupAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgInetMulticastSourceAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgInetMulticastSourceAddress"))
if mibBuilder.loadTexts: rlBrgInetMulticastEntry.setStatus('current')
rlBrgInetMulticastVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgInetMulticastVlanTag.setStatus('current')
rlBrgInetMulticastGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastGroupAddressType.setStatus('current')
rlBrgInetMulticastGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlBrgInetMulticastGroupAddress.setStatus('current')
rlBrgInetMulticastSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastSourceAddressType.setStatus('current')
rlBrgInetMulticastSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlBrgInetMulticastSourceAddress.setStatus('current')
rlBrgInetMulticastEgressPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastEgressPorts.setStatus('current')
rlBrgInetMulticastLearntPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 6, 1, 7), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgInetMulticastLearntPorts.setStatus('current')
rlBrgIpmFdbRefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7), )
if mibBuilder.loadTexts: rlBrgIpmFdbRefTable.setStatus('current')
rlBrgIpmFdbRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpmFdbRefVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpmFdbRefGroupAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpmFdbRefGroupAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpmFdbRefSourceAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgIpmFdbRefSourceAddress"))
if mibBuilder.loadTexts: rlBrgIpmFdbRefEntry.setStatus('current')
rlBrgIpmFdbRefVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1, 1), VlanIndex())
if mibBuilder.loadTexts: rlBrgIpmFdbRefVlanTag.setStatus('current')
rlBrgIpmFdbRefGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1, 2), InetAddressType())
if mibBuilder.loadTexts: rlBrgIpmFdbRefGroupAddressType.setStatus('current')
rlBrgIpmFdbRefGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1, 3), InetAddress())
if mibBuilder.loadTexts: rlBrgIpmFdbRefGroupAddress.setStatus('current')
rlBrgIpmFdbRefSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1, 4), InetAddressType())
if mibBuilder.loadTexts: rlBrgIpmFdbRefSourceAddressType.setStatus('current')
rlBrgIpmFdbRefSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1, 5), InetAddress())
if mibBuilder.loadTexts: rlBrgIpmFdbRefSourceAddress.setStatus('current')
rlBrgIpmFdbRefPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 7, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBrgIpmFdbRefPorts.setStatus('current')
class DynamicCmdType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("createEntry", 0), ("deleteEntry", 1), ("addPorts", 2), ("deletePorts", 3))

rlBrgDynamicCmdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8), )
if mibBuilder.loadTexts: rlBrgDynamicCmdTable.setStatus('current')
rlBrgDynamicCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlBrgDynamicCmdKey"))
if mibBuilder.loadTexts: rlBrgDynamicCmdEntry.setStatus('current')
rlBrgDynamicCmdKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: rlBrgDynamicCmdKey.setStatus('current')
rlBrgDynamicCmdVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 2), VlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdVlanTag.setStatus('current')
rlBrgDynamicCmdGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdGroupAddressType.setStatus('current')
rlBrgDynamicCmdGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdGroupAddress.setStatus('current')
rlBrgDynamicCmdSourceAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdSourceAddressType.setStatus('current')
rlBrgDynamicCmdSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 6), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdSourceAddress.setStatus('current')
rlBrgDynamicCmdPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 7), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdPorts.setStatus('current')
rlBrgDynamicCmdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 116, 8, 1, 8), DynamicCmdType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBrgDynamicCmdType.setStatus('current')
rlMldSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5))
rlMldSnoopEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopEnable.setStatus('current')
rlMldSnoopHostAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopHostAgingTime.setStatus('obsolete')
rlMldSnoopRouterAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlMldSnoopRouterAgingTime.setStatus('obsolete')
rlIgmpMldSnoopMembershipTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4), )
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipTable.setStatus('current')
rlIgmpMldSnoopMembershipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMembershipVlanTag"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMembershipGroupIpAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMembershipGroupIpAddress"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMembershipSourceIpAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMembershipSourceIpAddress"))
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipEntry.setStatus('current')
rlIgmpMldSnoopMembershipVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipVlanTag.setStatus('current')
rlIgmpMldSnoopMembershipGroupIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipGroupIpAddressType.setStatus('current')
rlIgmpMldSnoopMembershipGroupIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipGroupIpAddress.setStatus('current')
rlIgmpMldSnoopMembershipSourceIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipSourceIpAddressType.setStatus('current')
rlIgmpMldSnoopMembershipSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipSourceIpAddress.setStatus('current')
rlIgmpMldSnoopMembershipIncPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipIncPortlist.setStatus('current')
rlIgmpMldSnoopMembershipExcPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 7), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipExcPortlist.setStatus('current')
rlIgmpMldSnoopMembershipExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipExpiryTime.setStatus('obsolete')
rlIgmpMldSnoopMembershipCompatibilityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 4, 1, 9), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMembershipCompatibilityMode.setStatus('current')
rlIgmpMldSnoopVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5), )
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanTable.setStatus('current')
rlIgmpMldSnoopVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopVlanInetAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopVlanTag"))
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanEntry.setStatus('current')
rlIgmpMldSnoopVlanInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanInetAddressType.setStatus('current')
rlIgmpMldSnoopVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanTag.setStatus('current')
rlIgmpMldSnoopVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanEnable.setStatus('current')
rlIgmpMldSnoopVlanRouterLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterLearn.setStatus('current')
rlIgmpMldSnoopVlanHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanHostTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanQuerierTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(260)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanQuerierTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanLeaveTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanIgmpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 9), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanIgmpVersion.setStatus('current')
rlIgmpMldSnoopVlanRouterPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 10), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterPortlist.setStatus('current')
rlIgmpMldSnoopVlanRouterStaticPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 11), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterStaticPortlist.setStatus('current')
rlIgmpMldSnoopVlanRouterForbiddenPortlist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 12), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanRouterForbiddenPortlist.setStatus('current')
rlIgmpMldSnoopVlanQueryOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanQueryOverride.setStatus('current')
rlIgmpMldSnoopVlanOperRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperRobustness.setStatus('current')
rlIgmpMldSnoopVlanOperQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 31744000)).clone(125000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanOperQueryMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8387584)).clone(10000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperQueryMaxResponseTime.setStatus('current')
rlIgmpMldSnoopVlanOperLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8387584)).clone(1000)).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperLastMemberQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanOperLastMemberQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperLastMemberQueryCount.setStatus('current')
rlIgmpMldSnoopVlanOperStartupQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31744000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperStartupQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanOperStartupQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperStartupQueryCount.setStatus('current')
rlIgmpMldSnoopVlanOperHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperHostTimeOut.setStatus('current')
rlIgmpMldSnoopVlanOperRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperRouterTimeOut.setStatus('current')
rlIgmpMldSnoopVlanOperLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanOperLeaveTimeOut.setStatus('current')
rlIgmpMldSnoopVlanAdminRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminRobustness.setStatus('current')
rlIgmpMldSnoopVlanAdminQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 18000000)).clone(125000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanAdminQueryMaxResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 20000)).clone(10000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminQueryMaxResponseTime.setStatus('current')
rlIgmpMldSnoopVlanAdminLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 25500)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminLastMemberQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanAdminLastMemberQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminLastMemberQueryCount.setStatus('current')
rlIgmpMldSnoopVlanAdminStartupQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4500000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminStartupQueryInterval.setStatus('current')
rlIgmpMldSnoopVlanAdminStartupQueryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminStartupQueryCount.setStatus('current')
rlIgmpMldSnoopVlanAdminHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminHostTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanAdminRouterTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminRouterTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanAdminLeaveTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanAdminLeaveTimeOut.setStatus('obsolete')
rlIgmpMldSnoopVlanIsImmediateLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 5, 1, 34), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopVlanIsImmediateLeave.setStatus('current')
rlIgmpMldSnoopMulticastTvTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6), )
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvTable.setStatus('current')
rlIgmpMldSnoopMulticastTvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMulticastTvInetAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMulticastTvVID"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMulticastTvGroupAddressType"), (0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopMulticastTvGroup"))
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvEntry.setStatus('current')
rlIgmpMldSnoopMulticastTvInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvInetAddressType.setStatus('current')
rlIgmpMldSnoopMulticastTvVID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6, 1, 2), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvVID.setStatus('current')
rlIgmpMldSnoopMulticastTvGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvGroupAddressType.setStatus('current')
rlIgmpMldSnoopMulticastTvGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvGroup.setStatus('current')
rlIgmpMldSnoopMulticastTvStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 6, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopMulticastTvStatus.setStatus('current')
rlIgmpMldSnoopQuerierVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7), )
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierVlanTable.setStatus('current')
rlIgmpMldSnoopQuerierVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1), ).setIndexNames((0, "CISCOSB-rlBrgMulticast-MIB", "rlIgmpMldSnoopQuerierVlanTag"))
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierVlanEntry.setStatus('current')
rlIgmpMldSnoopQuerierVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierVlanTag.setStatus('current')
rlIgmpMldSnoopQuerierAdminEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierAdminEnable.setStatus('current')
rlIgmpMldSnoopQuerierOperEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierOperEnable.setStatus('current')
rlIgmpMldSnoopQuerierAdminAddrInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierAdminAddrInetAddressType.setStatus('current')
rlIgmpMldSnoopQuerierAdminAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierAdminAddr.setStatus('current')
rlIgmpMldSnoopQuerierOperAddrInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierOperAddrInetAddressType.setStatus('current')
rlIgmpMldSnoopQuerierOperAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierOperAddr.setStatus('current')
rlIgmpMldSnoopQuerierAdminVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 8), IgmpVersion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierAdminVersionNumber.setStatus('current')
rlIgmpMldSnoopQuerierOperVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 55, 5, 7, 1, 9), IgmpVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlIgmpMldSnoopQuerierOperVersionNumber.setStatus('current')
rlMacMulticastUnregFilterFailed = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101) + (0,1)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
rlIgmpMldSnoopTriplePlayPort = NotificationType((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 0, 208)).setObjects(("CISCOSB-DEVICEPARAMS-MIB", "rndErrorDesc"), ("CISCOSB-DEVICEPARAMS-MIB", "rndErrorSeverity"))
if mibBuilder.loadTexts: rlIgmpMldSnoopTriplePlayPort.setStatus('current')
mibBuilder.exportSymbols("CISCOSB-rlBrgMulticast-MIB", rlIgmpMldSnoopQuerierOperVersionNumber=rlIgmpMldSnoopQuerierOperVersionNumber, rlIgmpSnoopMibVersion=rlIgmpSnoopMibVersion, rlBrgDynamicCmdSourceAddressType=rlBrgDynamicCmdSourceAddressType, rlIgmpSnoopMulticastTvStatus=rlIgmpSnoopMulticastTvStatus, rlMldSnoopRouterAgingTime=rlMldSnoopRouterAgingTime, rlIgmpMldSnoopVlanEntry=rlIgmpMldSnoopVlanEntry, rlIgmpMldSnoopVlanIgmpVersion=rlIgmpMldSnoopVlanIgmpVersion, rlIgmpMldSnoopVlanOperStartupQueryInterval=rlIgmpMldSnoopVlanOperStartupQueryInterval, PYSNMP_MODULE_ID=rlMacMulticast, rlIgmpSnoopVlanEntry=rlIgmpSnoopVlanEntry, rlIgmpMldSnoopMulticastTvTable=rlIgmpMldSnoopMulticastTvTable, rlIgmpMldSnoopVlanOperQueryInterval=rlIgmpMldSnoopVlanOperQueryInterval, rlIgmpMldSnoopVlanAdminLastMemberQueryCount=rlIgmpMldSnoopVlanAdminLastMemberQueryCount, rlIgmpSnoopVlanHostTimeOut=rlIgmpSnoopVlanHostTimeOut, rlIgmpSnoopQuerierAdminEnable=rlIgmpSnoopQuerierAdminEnable, rlIgmpMldSnoopVlanRouterLearn=rlIgmpMldSnoopVlanRouterLearn, rlIgmpMldSnoopVlanOperQueryMaxResponseTime=rlIgmpMldSnoopVlanOperQueryMaxResponseTime, rlIgmpMldSnoopMembershipTable=rlIgmpMldSnoopMembershipTable, rlIgmpMldSnoopVlanQueryOverride=rlIgmpMldSnoopVlanQueryOverride, rlIgmpMldSnoopVlanAdminStartupQueryCount=rlIgmpMldSnoopVlanAdminStartupQueryCount, rlBrgDynamicCmdGroupAddress=rlBrgDynamicCmdGroupAddress, rlIgmpMldSnoopQuerierOperEnable=rlIgmpMldSnoopQuerierOperEnable, rlIgmpSnoopVlanRouterPortlist=rlIgmpSnoopVlanRouterPortlist, rlIgmpSnoopMembershipExcPortlist=rlIgmpSnoopMembershipExcPortlist, rlIgmpMldSnoopMembershipGroupIpAddress=rlIgmpMldSnoopMembershipGroupIpAddress, rlIgmpMldSnoopQuerierAdminVersionNumber=rlIgmpMldSnoopQuerierAdminVersionNumber, rlBrgIpMulticastVlanTag=rlBrgIpMulticastVlanTag, rlIgmpSnoopHostAgingTime=rlIgmpSnoopHostAgingTime, rlBrgIpMulticastSourceAddress=rlBrgIpMulticastSourceAddress, rlBrgIpmFdbRefVlanTag=rlBrgIpmFdbRefVlanTag, rlBrgInetMulticastLearntPorts=rlBrgInetMulticastLearntPorts, rlIgmpMldSnoopVlanAdminStartupQueryInterval=rlIgmpMldSnoopVlanAdminStartupQueryInterval, rlIgmpMldSnoopVlanAdminLeaveTimeOut=rlIgmpMldSnoopVlanAdminLeaveTimeOut, rlBrgStaticIpMulticastStatus=rlBrgStaticIpMulticastStatus, rlIgmpMldSnoopTriplePlayPort=rlIgmpMldSnoopTriplePlayPort, rlIgmpMldSnoopVlanAdminQueryInterval=rlIgmpMldSnoopVlanAdminQueryInterval, rlMacMulticast=rlMacMulticast, rlIgmpSnoopMulticastTvEntry=rlIgmpSnoopMulticastTvEntry, rlIgmpMldSnoopMembershipGroupIpAddressType=rlIgmpMldSnoopMembershipGroupIpAddressType, rlBrgStaticIpMulticastEntry=rlBrgStaticIpMulticastEntry, rlIgmpSnoopQuerierVlanTag=rlIgmpSnoopQuerierVlanTag, rlIgmpMldSnoopVlanEnable=rlIgmpMldSnoopVlanEnable, rlIgmpMldSnoopMulticastTvInetAddressType=rlIgmpMldSnoopMulticastTvInetAddressType, rlIgmpMldSnoopVlanAdminRobustness=rlIgmpMldSnoopVlanAdminRobustness, rlIgmpSnoopVlanRouterLearn=rlIgmpSnoopVlanRouterLearn, rlIgmpMldSnoopVlanRouterPortlist=rlIgmpMldSnoopVlanRouterPortlist, rlIgmpMldSnoopQuerierAdminAddrInetAddressType=rlIgmpMldSnoopQuerierAdminAddrInetAddressType, rlIgmpSnoopVlanQuerierTimeOut=rlIgmpSnoopVlanQuerierTimeOut, rlIgmpMldSnoopVlanAdminHostTimeOut=rlIgmpMldSnoopVlanAdminHostTimeOut, rlIgmpMldSnoopMembershipSourceIpAddress=rlIgmpMldSnoopMembershipSourceIpAddress, DynamicCmdType=DynamicCmdType, rlIgmpSnoopMembershipVlanTag=rlIgmpSnoopMembershipVlanTag, rlBrgStaticIpMulticastFrwPorts=rlBrgStaticIpMulticastFrwPorts, rlBrgStaticInetMulticastTable=rlBrgStaticInetMulticastTable, rlIgmpMldSnoopMembershipVlanTag=rlIgmpMldSnoopMembershipVlanTag, rlIgmpMldSnoopQuerierVlanTag=rlIgmpMldSnoopQuerierVlanTag, rlIgmpMldSnoopVlanLeaveTimeOut=rlIgmpMldSnoopVlanLeaveTimeOut, rlIgmpSnoopQuerierVlanEntry=rlIgmpSnoopQuerierVlanEntry, rlBrgStaticIpMulticastVlanTag=rlBrgStaticIpMulticastVlanTag, rlIgmpMldSnoopQuerierOperAddrInetAddressType=rlIgmpMldSnoopQuerierOperAddrInetAddressType, rlIgmpMldSnoopVlanHostTimeOut=rlIgmpMldSnoopVlanHostTimeOut, rlIgmpSnoopMulticastTvVID=rlIgmpSnoopMulticastTvVID, rlIgmpSnoopMembershipCompatibilityMode=rlIgmpSnoopMembershipCompatibilityMode, rlIgmpMldSnoopVlanOperStartupQueryCount=rlIgmpMldSnoopVlanOperStartupQueryCount, rlIgmpMldSnoopQuerierAdminAddr=rlIgmpMldSnoopQuerierAdminAddr, rlIgmpMldSnoopMulticastTvVID=rlIgmpMldSnoopMulticastTvVID, rlBrgIpmFdbRefEntry=rlBrgIpmFdbRefEntry, rlIgmpSnoopVlanLeaveTimeOut=rlIgmpSnoopVlanLeaveTimeOut, rlMacMulticastMaxEntriesNum=rlMacMulticastMaxEntriesNum, rlBrgStaticIpMulticastSourceAddress=rlBrgStaticIpMulticastSourceAddress, rlIgmpMldSnoopVlanQuerierTimeOut=rlIgmpMldSnoopVlanQuerierTimeOut, rlIgmpMldSnoopVlanRouterStaticPortlist=rlIgmpMldSnoopVlanRouterStaticPortlist, rlIgmpSnoopEnable=rlIgmpSnoopEnable, rlIgmpMldSnoopVlanAdminQueryMaxResponseTime=rlIgmpMldSnoopVlanAdminQueryMaxResponseTime, rlIgmpMldSnoopMembershipIncPortlist=rlIgmpMldSnoopMembershipIncPortlist, rlBrgDynamicCmdSourceAddress=rlBrgDynamicCmdSourceAddress, rlBrgStaticIpMulticastGroupAddress=rlBrgStaticIpMulticastGroupAddress, rlBrgInetMulticastEgressPorts=rlBrgInetMulticastEgressPorts, rlBrgInetMulticastSourceAddressType=rlBrgInetMulticastSourceAddressType, rlIgmpSnoopVlanTag=rlIgmpSnoopVlanTag, rlBrgIpMulticastEgressPorts=rlBrgIpMulticastEgressPorts, rlIgmpMldSnoopVlanOperHostTimeOut=rlIgmpMldSnoopVlanOperHostTimeOut, rlBrgStaticInetMulticastGroupAddress=rlBrgStaticInetMulticastGroupAddress, rlBrgInetMulticastVlanTag=rlBrgInetMulticastVlanTag, rlBrgIpMulticastGroupAddress=rlBrgIpMulticastGroupAddress, rlIgmpSnoopQuerierVlanTable=rlIgmpSnoopQuerierVlanTable, rlBrgDynamicCmdPorts=rlBrgDynamicCmdPorts, rlIgmpSnoopRouterAgingTime=rlIgmpSnoopRouterAgingTime, rlIgmpMldSnoopVlanIsImmediateLeave=rlIgmpMldSnoopVlanIsImmediateLeave, rlIgmpMldSnoopQuerierAdminEnable=rlIgmpMldSnoopQuerierAdminEnable, rlBrgMulticastMibVersion=rlBrgMulticastMibVersion, rlBrgIpmFdbRefGroupAddress=rlBrgIpmFdbRefGroupAddress, rlIgmpMldSnoopMembershipCompatibilityMode=rlIgmpMldSnoopMembershipCompatibilityMode, rlIgmpSnoopVlanEnable=rlIgmpSnoopVlanEnable, rlIgmpSnoopMembershipTable=rlIgmpSnoopMembershipTable, rlBrgStaticInetMulticastGroupAddressType=rlBrgStaticInetMulticastGroupAddressType, rlBrgDynamicCmdTable=rlBrgDynamicCmdTable, rlIgmpMldSnoopVlanAdminLastMemberQueryInterval=rlIgmpMldSnoopVlanAdminLastMemberQueryInterval, rlIgmpMldSnoopQuerierVlanEntry=rlIgmpMldSnoopQuerierVlanEntry, rlBrgInetMulticastEntry=rlBrgInetMulticastEntry, rlIgmpMldSnoopMembershipExcPortlist=rlIgmpMldSnoopMembershipExcPortlist, rlIgmpMldSnoopMulticastTvGroup=rlIgmpMldSnoopMulticastTvGroup, rlIgmpMldSnoopVlanInetAddressType=rlIgmpMldSnoopVlanInetAddressType, rlBrgStaticInetMulticastSourceAddress=rlBrgStaticInetMulticastSourceAddress, rlIgmpMldSnoopVlanRouterForbiddenPortlist=rlIgmpMldSnoopVlanRouterForbiddenPortlist, rlIgmpMldSnoopMulticastTvEntry=rlIgmpMldSnoopMulticastTvEntry, rlBrgIpmFdbRefGroupAddressType=rlBrgIpmFdbRefGroupAddressType, rlIgmpMldSnoopVlanOperLastMemberQueryInterval=rlIgmpMldSnoopVlanOperLastMemberQueryInterval, rlIgmpSnoopVlanIgmpVersion=rlIgmpSnoopVlanIgmpVersion, rlIgmpSnoopMembershipEntry=rlIgmpSnoopMembershipEntry, rlIgmpMldSnoopMembershipEntry=rlIgmpMldSnoopMembershipEntry, rlBrgInetMulticastGroupAddressType=rlBrgInetMulticastGroupAddressType, rlBrgDynamicCmdEntry=rlBrgDynamicCmdEntry, rlIgmpMldSnoopVlanRouterTimeOut=rlIgmpMldSnoopVlanRouterTimeOut, rlIgmpSnoopMulticastTvTable=rlIgmpSnoopMulticastTvTable, rlMldSnoopHostAgingTime=rlMldSnoopHostAgingTime, rlBrgIpmFdbRefPorts=rlBrgIpmFdbRefPorts, rlIgmpSnoopVlanTable=rlIgmpSnoopVlanTable, rlIgmpSnoopQuerierAdminAddr=rlIgmpSnoopQuerierAdminAddr, rlIgmpSnoopMembershipSourceIpAddress=rlIgmpSnoopMembershipSourceIpAddress, rlBrgDynamicCmdType=rlBrgDynamicCmdType, rlIgmpSnoopMembershipExpiryTime=rlIgmpSnoopMembershipExpiryTime, rlBrgDynamicCmdVlanTag=rlBrgDynamicCmdVlanTag, rlBrgStaticInetMulticastSourceAddressType=rlBrgStaticInetMulticastSourceAddressType, IgmpVersion=IgmpVersion, rlBrgInetMulticastSourceAddress=rlBrgInetMulticastSourceAddress, rlBrgIpMulticastTable=rlBrgIpMulticastTable, rlMacMulticastUnregFilterFailed=rlMacMulticastUnregFilterFailed, rlMldSnoop=rlMldSnoop, rlIgmpMldSnoopMulticastTvGroupAddressType=rlIgmpMldSnoopMulticastTvGroupAddressType, rlIgmpMldSnoopMembershipSourceIpAddressType=rlIgmpMldSnoopMembershipSourceIpAddressType, rlBrgIpMulticastLearntPorts=rlBrgIpMulticastLearntPorts, rlBrgStaticInetMulticastFrwPorts=rlBrgStaticInetMulticastFrwPorts, rlIgmpSnoop=rlIgmpSnoop, rlIgmpMldSnoopVlanAdminRouterTimeOut=rlIgmpMldSnoopVlanAdminRouterTimeOut, rlIgmpMldSnoopVlanOperLeaveTimeOut=rlIgmpMldSnoopVlanOperLeaveTimeOut, rlIgmpSnoopMembershipGroupIpAddress=rlIgmpSnoopMembershipGroupIpAddress, rlIgmpSnoopQuerierOperEnable=rlIgmpSnoopQuerierOperEnable, rlBrgIpMulticastEntry=rlBrgIpMulticastEntry, rlBrgDynamicCmdGroupAddressType=rlBrgDynamicCmdGroupAddressType, rlBrgIpmFdbRefTable=rlBrgIpmFdbRefTable, rlIgmpMldSnoopMembershipExpiryTime=rlIgmpMldSnoopMembershipExpiryTime, rlIgmpMldSnoopVlanOperRouterTimeOut=rlIgmpMldSnoopVlanOperRouterTimeOut, rlIgmpMldSnoopVlanTable=rlIgmpMldSnoopVlanTable, rlBrgStaticIpMulticastForbiddenPorts=rlBrgStaticIpMulticastForbiddenPorts, rlIgmpMldSnoopQuerierOperAddr=rlIgmpMldSnoopQuerierOperAddr, rlIgmpSnoopIGMP224ReportsHandle=rlIgmpSnoopIGMP224ReportsHandle, rlIgmpMldSnoopQuerierVlanTable=rlIgmpMldSnoopQuerierVlanTable, rlIgmpSnoopQuerierOperVersionNumber=rlIgmpSnoopQuerierOperVersionNumber, rlBrgStaticInetMulticastForbiddenPorts=rlBrgStaticInetMulticastForbiddenPorts, rlIgmpMldSnoopVlanOperRobustness=rlIgmpMldSnoopVlanOperRobustness, rlIgmpSnoopVlanRouterTimeOut=rlIgmpSnoopVlanRouterTimeOut, rlBrgStaticIpMulticastTable=rlBrgStaticIpMulticastTable, rlIgmpSnoopMembershipIncPortlist=rlIgmpSnoopMembershipIncPortlist, rlIgmpMldSnoopVlanTag=rlIgmpMldSnoopVlanTag, rlIgmpSnoopQuerierAdminVersionNumber=rlIgmpSnoopQuerierAdminVersionNumber, rlBrgIpmFdbRefSourceAddressType=rlBrgIpmFdbRefSourceAddressType, rlIgmpSnoopMulticastTvGroup=rlIgmpSnoopMulticastTvGroup, rlMacMulticastEnable=rlMacMulticastEnable, rlBrgIpmFdbRefSourceAddress=rlBrgIpmFdbRefSourceAddress, rlBrgInetMulticastTable=rlBrgInetMulticastTable, rlIgmpMldSnoopVlanOperLastMemberQueryCount=rlIgmpMldSnoopVlanOperLastMemberQueryCount, rlMacMulticastUnregFilterEnable=rlMacMulticastUnregFilterEnable, rlIgmpMldSnoopMulticastTvStatus=rlIgmpMldSnoopMulticastTvStatus, rlMacMulticastFilter=rlMacMulticastFilter, rlIgmpSnoopQuerierOperAddr=rlIgmpSnoopQuerierOperAddr, rlMldSnoopEnable=rlMldSnoopEnable, rlBrgDynamicCmdKey=rlBrgDynamicCmdKey, rlBrgStaticInetMulticastEntry=rlBrgStaticInetMulticastEntry, rlBrgStaticInetMulticastStatus=rlBrgStaticInetMulticastStatus, rlBrgStaticInetMulticastVlanTag=rlBrgStaticInetMulticastVlanTag, rlBrgInetMulticastGroupAddress=rlBrgInetMulticastGroupAddress)
