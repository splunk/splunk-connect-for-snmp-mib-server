#
# PySNMP MIB module RC7586-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RC7586-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:45:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
satcomMibs, = mibBuilder.importSymbols("CODAN-SMI", "satcomMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ModuleIdentity, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, Bits, ObjectIdentity, NotificationType, Unsigned32, Integer32, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "Bits", "ObjectIdentity", "NotificationType", "Unsigned32", "Integer32", "Gauge32", "IpAddress")
TimeInterval, TestAndIncr, DisplayString, TextualConvention, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TestAndIncr", "DisplayString", "TextualConvention", "TruthValue", "DateAndTime")
rc7586MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 23304, 2, 2))
rc7586MIB.setRevisions(('2009-05-13 00:00',))
if mibBuilder.loadTexts: rc7586MIB.setLastUpdated('200905130000Z')
if mibBuilder.loadTexts: rc7586MIB.setOrganization('Codan Limited.')
class ComponentRevision(DisplayString):
    status = 'current'
    displayHint = 'vxx.yy'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

class FaultStatus7586(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("dc1fault", 0), ("dc2fault", 1), ("buc1fault", 2), ("buc2fault", 3), ("lnb1fault", 4), ("lnb2fault", 5), ("txswfault", 6), ("rxswfault", 7), ("internalfault", 8), ("ref10mhzfault", 9))

buc1 = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1))
buc2 = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2))
ctrl = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3))
settings = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1))
status = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 2))
info = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 3))
operationalMode = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: operationalMode.setStatus('current')
onlineStream = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: onlineStream.setStatus('current')
waveguideSwitch = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: waveguideSwitch.setStatus('current')
startupTime = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: startupTime.setStatus('current')
lnbCurrentLimit = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 5), DisplayString()).setUnits('mA').setMaxAccess("readwrite")
if mibBuilder.loadTexts: lnbCurrentLimit.setStatus('current')
ledState = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ledState.setStatus('current')
refSource = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: refSource.setStatus('current')
refTrim = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: refTrim.setStatus('current')
refThresh = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 9), DisplayString()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: refThresh.setStatus('current')
refPwr = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 10), DisplayString()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: refPwr.setStatus('current')
ipAddr = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAddr.setStatus('current')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macAddress.setStatus('current')
netmask = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netmask.setStatus('current')
gateway = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gateway.setStatus('current')
lnbCurrent = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 2, 1), DisplayString()).setUnits('mA').setMaxAccess("readonly")
if mibBuilder.loadTexts: lnbCurrent.setStatus('current')
lnbVoltage = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 2, 2), DisplayString()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: lnbVoltage.setStatus('current')
faults = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faults.setStatus('current')
idInfo = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 3, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idInfo.setStatus('current')
buc1Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1))
buc1Status = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2))
buc1Info = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 3))
buc2Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1))
buc2Status = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2))
buc2Info = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 3))
buc1TxSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 1))
buc1PktProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 2))
buc1RCSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 3))
buc1Freqs = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 4))
buc1Misc = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 5))
buc2TxSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 1))
buc2PktProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 2))
buc2RCSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 3))
buc2Freqs = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 4))
buc2Misc = MibIdentifier((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 5))
buc1TxOn = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1TxOn.setStatus('current')
buc2TxOn = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2TxOn.setStatus('current')
buc1TxDefault = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1TxDefault.setStatus('current')
buc2TxDefault = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2TxDefault.setStatus('current')
buc1TxAttenuator = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1TxAttenuator.setStatus('current')
buc2TxAttenuator = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2TxAttenuator.setStatus('current')
buc1Protocol = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1Protocol.setStatus('current')
buc2Protocol = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2Protocol.setStatus('current')
buc1Address = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1Address.setStatus('current')
buc2Address = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2Address.setStatus('current')
buc1Mode = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1Mode.setStatus('current')
buc2Mode = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2Mode.setStatus('current')
buc1OnLine = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1OnLine.setStatus('current')
buc2OnLine = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 3, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2OnLine.setStatus('current')
buc1RFFreq = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 4, 1), Integer32()).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1RFFreq.setStatus('current')
buc2RFFreq = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 4, 1), Integer32()).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2RFFreq.setStatus('current')
buc1IFFreq = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 4, 2), Integer32()).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1IFFreq.setStatus('current')
buc2IFFreq = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 4, 2), Integer32()).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2IFFreq.setStatus('current')
buc1LOFreq = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 4, 3), Integer32()).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1LOFreq.setStatus('current')
buc2LOFreq = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 4, 3), Integer32()).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2LOFreq.setStatus('current')
buc1SerIf = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1SerIf.setStatus('current')
buc2SerIf = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2SerIf.setStatus('current')
buc1PwrAlarmThresh = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 5, 2), DisplayString()).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1PwrAlarmThresh.setStatus('current')
buc2PwrAlarmThresh = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 5, 2), DisplayString()).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2PwrAlarmThresh.setStatus('current')
buc1BurstPwrThresh = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 5, 3), DisplayString()).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1BurstPwrThresh.setStatus('current')
buc2BurstPwrThresh = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 5, 3), DisplayString()).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2BurstPwrThresh.setStatus('current')
buc1RefSource = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 5, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1RefSource.setStatus('current')
buc2RefSource = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 5, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2RefSource.setStatus('current')
buc1LEDState = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 1, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc1LEDState.setStatus('current')
buc2LEDState = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 1, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: buc2LEDState.setStatus('current')
buc1PaStatus = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1PaStatus.setStatus('current')
buc2PaStatus = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2PaStatus.setStatus('current')
buc1TxPower = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 2), DisplayString()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1TxPower.setStatus('current')
buc2TxPower = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 2), DisplayString()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2TxPower.setStatus('current')
buc1TxBurstPower = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 3), DisplayString()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1TxBurstPower.setStatus('current')
buc2TxBurstPower = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 3), DisplayString()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2TxBurstPower.setStatus('current')
buc1Faults = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1Faults.setStatus('current')
buc2Faults = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2Faults.setStatus('current')
buc1LatchedFaults = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1LatchedFaults.setStatus('current')
buc2LatchedFaults = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2LatchedFaults.setStatus('current')
buc1Temperature = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1Temperature.setStatus('current')
buc2Temperature = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2Temperature.setStatus('current')
buc1MinMaxTemperature = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1MinMaxTemperature.setStatus('current')
buc2MinMaxTemperature = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2MinMaxTemperature.setStatus('current')
buc1SystemSetting = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1SystemSetting.setStatus('current')
buc2SystemSetting = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2SystemSetting.setStatus('current')
buc1SystemPoll = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1SystemPoll.setStatus('current')
buc2SystemPoll = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2SystemPoll.setStatus('current')
buc1DeviceType = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1DeviceType.setStatus('current')
buc2DeviceType = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2DeviceType.setStatus('current')
buc1Gateway = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1Gateway.setStatus('current')
buc2Gateway = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2Gateway.setStatus('current')
buc1IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1IpAddress.setStatus('current')
buc2IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2IpAddress.setStatus('current')
buc1MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1MACAddress.setStatus('current')
buc2MACAddress = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2MACAddress.setStatus('current')
buc1Netmask = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1Netmask.setStatus('current')
buc2Netmask = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2Netmask.setStatus('current')
buc1RefPower = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1RefPower.setStatus('current')
buc2RefPower = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2RefPower.setStatus('current')
buc1Config = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1Config.setStatus('current')
buc2Config = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2Config.setStatus('current')
buc1BuildStandard = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1BuildStandard.setStatus('current')
buc2BuildStandard = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2BuildStandard.setStatus('current')
buc1IdInfo = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1IdInfo.setStatus('current')
buc2IdInfo = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2IdInfo.setStatus('current')
buc1Limits = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1Limits.setStatus('current')
buc2Limits = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2Limits.setStatus('current')
buc1PktProtocolsInfo = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 1, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc1PktProtocolsInfo.setStatus('current')
buc2PktProtocolsInfo = MibScalar((1, 3, 6, 1, 4, 1, 23304, 2, 2, 2, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: buc2PktProtocolsInfo.setStatus('current')
mibBuilder.exportSymbols("RC7586-MIB", buc2BurstPwrThresh=buc2BurstPwrThresh, info=info, buc1Temperature=buc1Temperature, buc1OnLine=buc1OnLine, buc2IdInfo=buc2IdInfo, status=status, ledState=ledState, buc2Faults=buc2Faults, buc1Address=buc1Address, buc1TxDefault=buc1TxDefault, buc2Mode=buc2Mode, buc2=buc2, buc1SystemPoll=buc1SystemPoll, FaultStatus7586=FaultStatus7586, buc2PktProtocolsInfo=buc2PktProtocolsInfo, buc2SystemPoll=buc2SystemPoll, buc2TxBurstPower=buc2TxBurstPower, waveguideSwitch=waveguideSwitch, buc2Temperature=buc2Temperature, buc1Limits=buc1Limits, buc1Faults=buc1Faults, buc1RFFreq=buc1RFFreq, buc1BuildStandard=buc1BuildStandard, buc1Gateway=buc1Gateway, netmask=netmask, buc2TxAttenuator=buc2TxAttenuator, buc1TxPower=buc1TxPower, PYSNMP_MODULE_ID=rc7586MIB, buc1PaStatus=buc1PaStatus, buc2SerIf=buc2SerIf, lnbVoltage=lnbVoltage, buc2Protocol=buc2Protocol, operationalMode=operationalMode, buc2OnLine=buc2OnLine, buc1SerIf=buc1SerIf, buc1BurstPwrThresh=buc1BurstPwrThresh, buc2TxDefault=buc2TxDefault, faults=faults, refTrim=refTrim, ipAddr=ipAddr, buc2PwrAlarmThresh=buc2PwrAlarmThresh, buc2PktProtocol=buc2PktProtocol, buc1=buc1, buc2DeviceType=buc2DeviceType, buc1IpAddress=buc1IpAddress, buc2LatchedFaults=buc2LatchedFaults, buc1MACAddress=buc1MACAddress, buc2Info=buc2Info, buc1SystemSetting=buc1SystemSetting, buc2Configuration=buc2Configuration, buc1Misc=buc1Misc, buc2Misc=buc2Misc, buc2LEDState=buc2LEDState, buc2SystemSetting=buc2SystemSetting, buc1IFFreq=buc1IFFreq, buc1IdInfo=buc1IdInfo, buc1Freqs=buc1Freqs, buc1DeviceType=buc1DeviceType, rc7586MIB=rc7586MIB, buc1Netmask=buc1Netmask, buc2BuildStandard=buc2BuildStandard, buc2PaStatus=buc2PaStatus, buc2Status=buc2Status, settings=settings, buc2TxSettings=buc2TxSettings, buc2RefPower=buc2RefPower, buc1Config=buc1Config, buc2RFFreq=buc2RFFreq, buc1LOFreq=buc1LOFreq, buc2MinMaxTemperature=buc2MinMaxTemperature, buc2RCSetting=buc2RCSetting, buc2MACAddress=buc2MACAddress, buc2Freqs=buc2Freqs, buc1Mode=buc1Mode, buc2RefSource=buc2RefSource, buc2Gateway=buc2Gateway, buc2TxOn=buc2TxOn, buc1Protocol=buc1Protocol, buc1LatchedFaults=buc1LatchedFaults, buc2IpAddress=buc2IpAddress, gateway=gateway, ctrl=ctrl, buc1TxSettings=buc1TxSettings, buc1PktProtocol=buc1PktProtocol, buc1TxAttenuator=buc1TxAttenuator, lnbCurrentLimit=lnbCurrentLimit, buc2Netmask=buc2Netmask, buc2IFFreq=buc2IFFreq, refThresh=refThresh, buc1PwrAlarmThresh=buc1PwrAlarmThresh, buc2Config=buc2Config, lnbCurrent=lnbCurrent, buc1LEDState=buc1LEDState, buc1PktProtocolsInfo=buc1PktProtocolsInfo, buc1Info=buc1Info, buc1RCSetting=buc1RCSetting, buc1TxBurstPower=buc1TxBurstPower, idInfo=idInfo, buc1MinMaxTemperature=buc1MinMaxTemperature, buc1Status=buc1Status, buc2Address=buc2Address, buc2TxPower=buc2TxPower, buc1RefSource=buc1RefSource, buc2LOFreq=buc2LOFreq, buc1TxOn=buc1TxOn, buc2Limits=buc2Limits, refPwr=refPwr, onlineStream=onlineStream, buc1RefPower=buc1RefPower, ComponentRevision=ComponentRevision, refSource=refSource, macAddress=macAddress, buc1Configuration=buc1Configuration, startupTime=startupTime)
