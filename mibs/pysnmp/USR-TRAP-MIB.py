#
# PySNMP MIB module USR-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/USR-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:22:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
uchasSlotIndex, uchasPowerSupplyOutOfferedVolt, uchasEntityObjectID, uchasPowerSupplyIndex, uchasEntityIndex, uchasPowerSupplyOutNominalVolt, uchasSlotModuleType = mibBuilder.importSymbols("CHS-MIB", "uchasSlotIndex", "uchasPowerSupplyOutOfferedVolt", "uchasEntityObjectID", "uchasPowerSupplyIndex", "uchasEntityIndex", "uchasPowerSupplyOutNominalVolt", "uchasSlotModuleType")
mdmCsCallDuration, mdmCsSecurityUserName, mdmCsCallRefNum = mibBuilder.importSymbols("MDM-MIB", "mdmCsCallDuration", "mdmCsSecurityUserName", "mdmCsCallRefNum")
nmcStatTemperature, nmcTrapSequenceNumber, nmcArTrapId, nmcStatEventId, nmcCfgLogSrvrSelect, nmcGmtime = mibBuilder.importSymbols("NMC-MIB", "nmcStatTemperature", "nmcTrapSequenceNumber", "nmcArTrapId", "nmcStatEventId", "nmcCfgLogSrvrSelect", "nmcGmtime")
pbSessionIndex, pbSessionErrorStatus = mibBuilder.importSymbols("PB-MIB", "pbSessionIndex", "pbSessionErrorStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibIdentifier, Integer32, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, enterprises, NotificationType, Bits, Counter32, Gauge32, ObjectIdentity, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Integer32", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "enterprises", "NotificationType", "Bits", "Counter32", "Gauge32", "ObjectIdentity", "NotificationType", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
uds1StatE1PhysicalState, = mibBuilder.importSymbols("UDS1-MIB", "uds1StatE1PhysicalState")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
moduleInserted = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,1)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasSlotModuleType"))
moduleRemoved = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,2)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasSlotModuleType"))
psuWarning = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,3)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasPowerSupplyOutNominalVolt"), ("CHS-MIB", "uchasPowerSupplyOutOfferedVolt"))
psuFailure = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,4)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasPowerSupplyIndex"))
tempWarning = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,5)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("NMC-MIB", "nmcStatTemperature"))
fanFailure = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,6)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"))
entityWatchdogTimeout = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,7)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
entityMgtBusFailure = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,8)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
incomingConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,9)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
outgoingConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,10)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
incomingConnectionTerminated = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,11)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
outgoingConnectionTerminated = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,12)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
connectAttemptFailure = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,13)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
connectTimerExpired = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,14)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
dteTransmitDataIdle = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,15)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
dtrTrue = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,16)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
dtrFalse = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,17)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
blerCountAtThreshold = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,18)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
fallbackCountAtThreshold = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,19)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
noDialtone = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,20))
noLoopCurrent = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,21)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
yellowAlarm = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,22)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
redAlarm = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,23)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
lossOfSignal = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,24)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
alarmIndicationSignal = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,25)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
transmitTimingSourceSwitch = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,26)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasSlotModuleType"))
modemResetByDte = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,27)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
modemRingNoAnswer = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,28)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
dteRingNoAnswer = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,29)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
pktBusSessActive = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,30)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("PB-MIB", "pbSessionIndex"))
pktBusSessCongestion = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,31)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("PB-MIB", "pbSessionIndex"))
pktBusSessLost = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,32)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("PB-MIB", "pbSessionIndex"))
pktBusSessInactive = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,33)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("PB-MIB", "pbSessionIndex"))
nacUserInterfaceReset = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,34)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"))
gwWanPortOutOfService = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,35)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"))
gwWanPortLinkActive = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,36)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"))
dialOutLoginFail = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,37)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
dialInLoginFail = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,38)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
dialOutRestrictedNum = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,39)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
dialBackRestrictedNum = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,40)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
userBlacklisted = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,41)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
loginAttemptByBlacklistedUser = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,42)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
responseAttemptLimExceeded = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,43)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
mdmLoginAttemptLimExceeded = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,44)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"))
dialOutCallDuration = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,45)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"), ("MDM-MIB", "mdmCsCallDuration"))
dialInCallDuration = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,46)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("MDM-MIB", "mdmCsSecurityUserName"), ("MDM-MIB", "mdmCsCallDuration"))
pktBusSessError = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,47)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("PB-MIB", "pbSessionIndex"), ("PB-MIB", "pbSessionErrorStatus"))
nmcArCustomTrap = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,48)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("NMC-MIB", "nmcArTrapId"))
acctSrvrLoss = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,49)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("NMC-MIB", "nmcCfgLogSrvrSelect"))
yellowAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,50)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
redAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,51)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
lossOfSignalClear = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,52)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
alarmIndicationSignalClear = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,53)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
ctIncomingConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,54)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"), ("MDM-MIB", "mdmCsCallRefNum"))
ctOutgoingConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,55)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"), ("MDM-MIB", "mdmCsCallRefNum"))
ctIncomingConnectionTerminated = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,56)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"), ("MDM-MIB", "mdmCsCallRefNum"))
ctOutgoingConnectionTerminated = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,57)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"), ("MDM-MIB", "mdmCsCallRefNum"))
ctConnectAttemptFailure = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,58)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"), ("MDM-MIB", "mdmCsCallRefNum"))
contCrcAlarm = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,59)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
contCrcAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,60)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"))
phyStateChng = NotificationType((1, 3, 6, 1, 4, 1, 429) + (0,61)).setObjects(("NMC-MIB", "nmcTrapSequenceNumber"), ("NMC-MIB", "nmcStatEventId"), ("NMC-MIB", "nmcGmtime"), ("CHS-MIB", "uchasSlotIndex"), ("CHS-MIB", "uchasEntityIndex"), ("CHS-MIB", "uchasEntityObjectID"), ("UDS1-MIB", "uds1StatE1PhysicalState"))
mibBuilder.exportSymbols("USR-TRAP-MIB", modemResetByDte=modemResetByDte, psuFailure=psuFailure, connectAttemptFailure=connectAttemptFailure, gwWanPortLinkActive=gwWanPortLinkActive, ctIncomingConnectionEstablished=ctIncomingConnectionEstablished, tempWarning=tempWarning, incomingConnectionEstablished=incomingConnectionEstablished, moduleInserted=moduleInserted, gwWanPortOutOfService=gwWanPortOutOfService, pktBusSessError=pktBusSessError, phyStateChng=phyStateChng, lossOfSignalClear=lossOfSignalClear, dialInLoginFail=dialInLoginFail, noLoopCurrent=noLoopCurrent, contCrcAlarmClear=contCrcAlarmClear, redAlarmClear=redAlarmClear, responseAttemptLimExceeded=responseAttemptLimExceeded, dialOutLoginFail=dialOutLoginFail, moduleRemoved=moduleRemoved, mdmLoginAttemptLimExceeded=mdmLoginAttemptLimExceeded, dialInCallDuration=dialInCallDuration, yellowAlarmClear=yellowAlarmClear, ctOutgoingConnectionEstablished=ctOutgoingConnectionEstablished, pktBusSessCongestion=pktBusSessCongestion, outgoingConnectionTerminated=outgoingConnectionTerminated, transmitTimingSourceSwitch=transmitTimingSourceSwitch, noDialtone=noDialtone, dialOutCallDuration=dialOutCallDuration, acctSrvrLoss=acctSrvrLoss, ctConnectAttemptFailure=ctConnectAttemptFailure, pktBusSessActive=pktBusSessActive, loginAttemptByBlacklistedUser=loginAttemptByBlacklistedUser, nmcArCustomTrap=nmcArCustomTrap, dtrTrue=dtrTrue, fallbackCountAtThreshold=fallbackCountAtThreshold, connectTimerExpired=connectTimerExpired, pktBusSessLost=pktBusSessLost, nacUserInterfaceReset=nacUserInterfaceReset, dialBackRestrictedNum=dialBackRestrictedNum, entityWatchdogTimeout=entityWatchdogTimeout, modemRingNoAnswer=modemRingNoAnswer, ctIncomingConnectionTerminated=ctIncomingConnectionTerminated, psuWarning=psuWarning, dtrFalse=dtrFalse, redAlarm=redAlarm, dteRingNoAnswer=dteRingNoAnswer, entityMgtBusFailure=entityMgtBusFailure, incomingConnectionTerminated=incomingConnectionTerminated, usr=usr, blerCountAtThreshold=blerCountAtThreshold, alarmIndicationSignalClear=alarmIndicationSignalClear, alarmIndicationSignal=alarmIndicationSignal, fanFailure=fanFailure, lossOfSignal=lossOfSignal, userBlacklisted=userBlacklisted, outgoingConnectionEstablished=outgoingConnectionEstablished, ctOutgoingConnectionTerminated=ctOutgoingConnectionTerminated, contCrcAlarm=contCrcAlarm, dteTransmitDataIdle=dteTransmitDataIdle, dialOutRestrictedNum=dialOutRestrictedNum, pktBusSessInactive=pktBusSessInactive, yellowAlarm=yellowAlarm)
