#
# PySNMP MIB module ZYXEL-IP-FORWARD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-IP-FORWARD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:43:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, IpAddress, TimeTicks, Counter64, iso, ModuleIdentity, Integer32, NotificationType, Gauge32, Counter32, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "IpAddress", "TimeTicks", "Counter64", "iso", "ModuleIdentity", "Integer32", "NotificationType", "Gauge32", "Counter32", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelIpForward = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32))
if mibBuilder.loadTexts: zyxelIpForward.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelIpForward.setOrganization('Enterprise Solution ZyXEL')
zyxelRouteDomainStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 1))
zyxelHostStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2))
zyxelIpRouteStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3))
zyxelRouteDomainTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 1, 1), )
if mibBuilder.loadTexts: zyxelRouteDomainTable.setStatus('current')
zyxelRouteDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 1, 1, 1), ).setIndexNames((0, "ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpAddress"), (0, "ZYXEL-IP-FORWARD-MIB", "zyRouteDomainIpMaskBits"))
if mibBuilder.loadTexts: zyxelRouteDomainEntry.setStatus('current')
zyRouteDomainIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 1, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: zyRouteDomainIpAddress.setStatus('current')
zyRouteDomainIpMaskBits = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: zyRouteDomainIpMaskBits.setStatus('current')
zyRouteDomainVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyRouteDomainVid.setStatus('current')
zyxelHostTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2, 1), )
if mibBuilder.loadTexts: zyxelHostTable.setStatus('current')
zyxelHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2, 1, 1), ).setIndexNames((0, "ZYXEL-IP-FORWARD-MIB", "zyHostIpAddress"), (0, "ZYXEL-IP-FORWARD-MIB", "zyHostVid"))
if mibBuilder.loadTexts: zyxelHostEntry.setStatus('current')
zyHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: zyHostIpAddress.setStatus('current')
zyHostVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: zyHostVid.setStatus('current')
zyHostPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyHostPort.setStatus('current')
zyHostType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyHostType.setStatus('current')
zyxelIpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1), )
if mibBuilder.loadTexts: zyxelIpRouteTable.setStatus('current')
zyxelIpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1), ).setIndexNames((0, "ZYXEL-IP-FORWARD-MIB", "zyIpRouteDestinationIpAddress"), (0, "ZYXEL-IP-FORWARD-MIB", "zyIpRouteDestinationMaskBits"), (0, "ZYXEL-IP-FORWARD-MIB", "zyIpRouteGateway"))
if mibBuilder.loadTexts: zyxelIpRouteEntry.setStatus('current')
zyIpRouteDestinationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: zyIpRouteDestinationIpAddress.setStatus('current')
zyIpRouteDestinationMaskBits = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: zyIpRouteDestinationMaskBits.setStatus('current')
zyIpRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: zyIpRouteGateway.setStatus('current')
zyIpRouteIf = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpRouteIf.setStatus('current')
zyIpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpRouteMetric.setStatus('current')
zyIpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 32, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rip", 1), ("bgp", 2), ("ospf", 3), ("static", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIpRouteType.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-IP-FORWARD-MIB", zyIpRouteGateway=zyIpRouteGateway, zyHostVid=zyHostVid, zyxelIpRouteEntry=zyxelIpRouteEntry, zyHostPort=zyHostPort, zyHostType=zyHostType, zyHostIpAddress=zyHostIpAddress, zyRouteDomainIpMaskBits=zyRouteDomainIpMaskBits, zyxelHostEntry=zyxelHostEntry, zyxelIpForward=zyxelIpForward, zyxelRouteDomainEntry=zyxelRouteDomainEntry, zyxelRouteDomainTable=zyxelRouteDomainTable, zyRouteDomainVid=zyRouteDomainVid, zyxelIpRouteTable=zyxelIpRouteTable, zyxelHostStatus=zyxelHostStatus, zyIpRouteDestinationIpAddress=zyIpRouteDestinationIpAddress, zyIpRouteMetric=zyIpRouteMetric, zyxelRouteDomainStatus=zyxelRouteDomainStatus, zyIpRouteType=zyIpRouteType, PYSNMP_MODULE_ID=zyxelIpForward, zyIpRouteIf=zyIpRouteIf, zyxelIpRouteStatus=zyxelIpRouteStatus, zyRouteDomainIpAddress=zyRouteDomainIpAddress, zyIpRouteDestinationMaskBits=zyIpRouteDestinationMaskBits, zyxelHostTable=zyxelHostTable)
