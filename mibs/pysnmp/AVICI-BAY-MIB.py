#
# PySNMP MIB module AVICI-BAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVICI-BAY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:16:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
aviciMibs, = mibBuilder.importSymbols("AVICI-SMI", "aviciMibs")
aviciSysTrapDescr, = mibBuilder.importSymbols("AVICI-SYSTEM-MIB", "aviciSysTrapDescr")
AviciUnitType, AviciSlotType, AviciRevisionType, AviciPartNumberType, AviciSerialNumberType, AviciLedValue, AviciBayType, AviciVoltageType, AviciProductIdType, AviciHighAvailabilityType = mibBuilder.importSymbols("AVICI-TC", "AviciUnitType", "AviciSlotType", "AviciRevisionType", "AviciPartNumberType", "AviciSerialNumberType", "AviciLedValue", "AviciBayType", "AviciVoltageType", "AviciProductIdType", "AviciHighAvailabilityType")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Unsigned32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, TimeTicks, MibIdentifier, Counter64, ObjectIdentity, Integer32, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "TimeTicks", "MibIdentifier", "Counter64", "ObjectIdentity", "Integer32", "Gauge32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aviciBayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2474, 1, 4))
if mibBuilder.loadTexts: aviciBayMIB.setLastUpdated('990702121500Z')
if mibBuilder.loadTexts: aviciBayMIB.setOrganization('Avici Systems Inc')
aviciBayObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1))
aviciBayNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2))
aviciBayControllerNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 3))
aviciBayNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2, 0))
aviciBayControllerNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 3, 0))
aviciBayTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1), )
if mibBuilder.loadTexts: aviciBayTable.setStatus('current')
aviciBayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"))
if mibBuilder.loadTexts: aviciBayEntry.setStatus('current')
aviciBayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 1), AviciBayType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayIndex.setStatus('current')
aviciBayCriticalLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 2), AviciLedValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCriticalLed.setStatus('current')
aviciBayMajorLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 3), AviciLedValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayMajorLed.setStatus('current')
aviciBayMinorLed = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 4), AviciLedValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayMinorLed.setStatus('current')
aviciBayAlarmCutOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayAlarmCutOff.setStatus('current')
aviciBayModTempCriticalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayModTempCriticalThreshold.setStatus('current')
aviciBayModTempMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayModTempMajorThreshold.setStatus('current')
aviciBayModTempMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayModTempMinorThreshold.setStatus('current')
aviciBayTempCriticalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayTempCriticalThreshold.setStatus('current')
aviciBayTempMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayTempMajorThreshold.setStatus('current')
aviciBayTempMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayTempMinorThreshold.setStatus('current')
aviciBayControllerTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2), )
if mibBuilder.loadTexts: aviciBayControllerTable.setStatus('current')
aviciBayControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciBayControllerIndex"))
if mibBuilder.loadTexts: aviciBayControllerEntry.setStatus('current')
aviciBayControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerIndex.setStatus('current')
aviciBayControllerOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("down", 1), ("passive", 2), ("active", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerOperStatus.setStatus('current')
aviciBayControllerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reboot", 1), ("passive", 2), ("active", 3), ("diagnostic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aviciBayControllerAdminStatus.setStatus('current')
aviciBayControllerPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 4), AviciPartNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerPartNumber.setStatus('current')
aviciBayControllerSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 5), AviciSerialNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerSerialNumber.setStatus('current')
aviciBayControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 6), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerRevision.setStatus('current')
aviciBayControllerSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerSoftwareVersion.setStatus('current')
aviciBayControllerFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerFirmwareVersion.setStatus('current')
aviciBayControllerProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 9), AviciProductIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerProductId.setStatus('current')
aviciBayControllerProductSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 10), AviciSerialNumberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerProductSerialNumber.setStatus('current')
aviciBayControllerProductRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 11), AviciRevisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerProductRevision.setStatus('current')
aviciBayControllerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayControllerDescr.setStatus('current')
aviciBayVoltageTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3), )
if mibBuilder.loadTexts: aviciBayVoltageTable.setStatus('current')
aviciBayVoltageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciBayVoltageIndex"))
if mibBuilder.loadTexts: aviciBayVoltageEntry.setStatus('current')
aviciBayVoltageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayVoltageIndex.setStatus('current')
aviciBayVoltageType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3, 1, 2), AviciVoltageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayVoltageType.setStatus('current')
aviciBayVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayVoltage.setStatus('current')
aviciBayVoltageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inSpec", 1), ("outSpec", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayVoltageStatus.setStatus('current')
aviciBayVoltageDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayVoltageDescr.setStatus('current')
aviciBayFanTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4), )
if mibBuilder.loadTexts: aviciBayFanTable.setStatus('current')
aviciBayFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciBayFanIndex"))
if mibBuilder.loadTexts: aviciBayFanEntry.setStatus('current')
aviciBayFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanIndex.setStatus('current')
aviciBayFanAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("offline", 1), ("autonomous", 2), ("controlled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanAdminStatus.setStatus('current')
aviciBayFanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offline", 1), ("autonomous", 2), ("controlled", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanOperStatus.setStatus('current')
aviciBayFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2700))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanSpeed.setStatus('current')
aviciBayFanCurrTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanCurrTemp.setStatus('current')
aviciBayFanMaxTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanMaxTemp.setStatus('current')
aviciBayFanLedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 7), AviciLedValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanLedStatus.setStatus('current')
aviciBayFanCurrFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanCurrFailures.setStatus('current')
aviciBayFanDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayFanDescr.setStatus('current')
aviciBaySlotTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5), )
if mibBuilder.loadTexts: aviciBaySlotTable.setStatus('current')
aviciBaySlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciSlotIndex"))
if mibBuilder.loadTexts: aviciBaySlotEntry.setStatus('current')
aviciSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 1), AviciSlotType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSlotIndex.setStatus('current')
aviciBaySlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("empty", 1), ("occupied", 2), ("identified", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotStatus.setStatus('current')
aviciBaySlotRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotRxOctets.setStatus('current')
aviciBaySlotRxMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotRxMessages.setStatus('current')
aviciBaySlotRxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotRxDiscards.setStatus('current')
aviciBaySlotRxProtoErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotRxProtoErrs.setStatus('current')
aviciBaySlotRxIOErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotRxIOErrs.setStatus('current')
aviciBaySlotRxTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotRxTimeouts.setStatus('current')
aviciBaySlotTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotTxOctets.setStatus('current')
aviciBaySlotTxMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotTxMessages.setStatus('current')
aviciBaySlotTxDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotTxDiscards.setStatus('current')
aviciBaySlotTxProtoErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotTxProtoErrs.setStatus('current')
aviciBaySlotTxIOErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotTxIOErrs.setStatus('current')
aviciBaySlotTxTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBaySlotTxTimeouts.setStatus('current')
aviciBayBreakerTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 6), )
if mibBuilder.loadTexts: aviciBayBreakerTable.setStatus('current')
aviciBayBreakerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 6, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciBayBreakerIndex"))
if mibBuilder.loadTexts: aviciBayBreakerEntry.setStatus('current')
aviciBayBreakerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayBreakerIndex.setStatus('current')
aviciBayBreakerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 6, 1, 2), AviciHighAvailabilityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayBreakerType.setStatus('current')
aviciBayBreakerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("open", 2), ("closed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayBreakerStatus.setStatus('current')
aviciBayBreakerDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayBreakerDescr.setStatus('current')
aviciBayCoAlarmSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 7))
aviciBayCoActiveAlarmCount = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoActiveAlarmCount.setStatus('current')
aviciBayCoAlarmLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 7, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmLastChange.setStatus('current')
aviciBayCoAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8), )
if mibBuilder.loadTexts: aviciBayCoAlarmTable.setStatus('current')
aviciBayCoAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1), ).setIndexNames((0, "AVICI-BAY-MIB", "aviciBayIndex"), (0, "AVICI-BAY-MIB", "aviciBayCoAlarmIndex"))
if mibBuilder.loadTexts: aviciBayCoAlarmEntry.setStatus('current')
aviciBayCoAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmIndex.setStatus('current')
aviciBayCoAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmType.setStatus('current')
aviciBayCoAlarmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmDescr.setStatus('current')
aviciBayCoAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmTime.setStatus('current')
aviciBayCoAlarmUnitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmUnitNum.setStatus('current')
aviciBayCoAlarmUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 4, 1, 8, 1, 6), AviciUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciBayCoAlarmUnitType.setStatus('current')
aviciBayControllerColdStart = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 3, 0, 1)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayControllerIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayControllerColdStart.setStatus('current')
aviciBayControllerWarmStart = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 3, 0, 2)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayControllerIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayControllerWarmStart.setStatus('current')
aviciBayControllerDown = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 3, 0, 3)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayControllerIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayControllerDown.setStatus('current')
aviciBayVoltageNotification = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2, 0, 1)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayVoltageIndex"), ("AVICI-BAY-MIB", "aviciBayVoltage"), ("AVICI-BAY-MIB", "aviciBayVoltageStatus"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayVoltageNotification.setStatus('current')
aviciBayFanNotification = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2, 0, 2)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayFanIndex"), ("AVICI-BAY-MIB", "aviciBayFanCurrFailures"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayFanNotification.setStatus('current')
aviciBayBreakerNotification = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2, 0, 3)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayBreakerIndex"), ("AVICI-BAY-MIB", "aviciBayBreakerType"), ("AVICI-BAY-MIB", "aviciBayBreakerStatus"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayBreakerNotification.setStatus('current')
aviciBayMultiFanFailures = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2, 0, 4)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayMultiFanFailures.setStatus('current')
aviciBayMultiBayControllerFailures = NotificationType((1, 3, 6, 1, 4, 1, 2474, 1, 4, 2, 0, 5)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-SYSTEM-MIB", "aviciSysTrapDescr"))
if mibBuilder.loadTexts: aviciBayMultiBayControllerFailures.setStatus('current')
aviciBayMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4))
aviciBayMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 1))
aviciBayMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 2))
aviciBayMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 1, 1)).setObjects(("AVICI-BAY-MIB", "aviciBayGroup"), ("AVICI-BAY-MIB", "aviciBayControllerGroup"), ("AVICI-BAY-MIB", "aviciCentralOfficeGroup"), ("AVICI-BAY-MIB", "aviciBayNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciBayMIBCompliance = aviciBayMIBCompliance.setStatus('current')
aviciBayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 2, 1)).setObjects(("AVICI-BAY-MIB", "aviciBayIndex"), ("AVICI-BAY-MIB", "aviciBayCriticalLed"), ("AVICI-BAY-MIB", "aviciBayMajorLed"), ("AVICI-BAY-MIB", "aviciBayMinorLed"), ("AVICI-BAY-MIB", "aviciBayAlarmCutOff"), ("AVICI-BAY-MIB", "aviciBayModTempCriticalThreshold"), ("AVICI-BAY-MIB", "aviciBayModTempMajorThreshold"), ("AVICI-BAY-MIB", "aviciBayModTempMinorThreshold"), ("AVICI-BAY-MIB", "aviciBayTempCriticalThreshold"), ("AVICI-BAY-MIB", "aviciBayTempMajorThreshold"), ("AVICI-BAY-MIB", "aviciBayTempMinorThreshold"), ("AVICI-BAY-MIB", "aviciBayVoltageIndex"), ("AVICI-BAY-MIB", "aviciBayVoltageType"), ("AVICI-BAY-MIB", "aviciBayVoltage"), ("AVICI-BAY-MIB", "aviciBayVoltageStatus"), ("AVICI-BAY-MIB", "aviciBayVoltageDescr"), ("AVICI-BAY-MIB", "aviciBayFanIndex"), ("AVICI-BAY-MIB", "aviciBayFanAdminStatus"), ("AVICI-BAY-MIB", "aviciBayFanOperStatus"), ("AVICI-BAY-MIB", "aviciBayFanSpeed"), ("AVICI-BAY-MIB", "aviciBayFanCurrTemp"), ("AVICI-BAY-MIB", "aviciBayFanMaxTemp"), ("AVICI-BAY-MIB", "aviciBayFanLedStatus"), ("AVICI-BAY-MIB", "aviciBayFanCurrFailures"), ("AVICI-BAY-MIB", "aviciBayFanDescr"), ("AVICI-BAY-MIB", "aviciSlotIndex"), ("AVICI-BAY-MIB", "aviciBaySlotStatus"), ("AVICI-BAY-MIB", "aviciBaySlotRxOctets"), ("AVICI-BAY-MIB", "aviciBaySlotRxMessages"), ("AVICI-BAY-MIB", "aviciBaySlotRxDiscards"), ("AVICI-BAY-MIB", "aviciBaySlotRxProtoErrs"), ("AVICI-BAY-MIB", "aviciBaySlotRxIOErrs"), ("AVICI-BAY-MIB", "aviciBaySlotRxTimeouts"), ("AVICI-BAY-MIB", "aviciBaySlotTxOctets"), ("AVICI-BAY-MIB", "aviciBaySlotTxMessages"), ("AVICI-BAY-MIB", "aviciBaySlotTxDiscards"), ("AVICI-BAY-MIB", "aviciBaySlotTxProtoErrs"), ("AVICI-BAY-MIB", "aviciBaySlotTxIOErrs"), ("AVICI-BAY-MIB", "aviciBaySlotTxTimeouts"), ("AVICI-BAY-MIB", "aviciBayBreakerIndex"), ("AVICI-BAY-MIB", "aviciBayBreakerType"), ("AVICI-BAY-MIB", "aviciBayBreakerStatus"), ("AVICI-BAY-MIB", "aviciBayBreakerDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciBayGroup = aviciBayGroup.setStatus('current')
aviciBayControllerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 2, 2)).setObjects(("AVICI-BAY-MIB", "aviciBayControllerIndex"), ("AVICI-BAY-MIB", "aviciBayControllerOperStatus"), ("AVICI-BAY-MIB", "aviciBayControllerAdminStatus"), ("AVICI-BAY-MIB", "aviciBayControllerPartNumber"), ("AVICI-BAY-MIB", "aviciBayControllerSerialNumber"), ("AVICI-BAY-MIB", "aviciBayControllerRevision"), ("AVICI-BAY-MIB", "aviciBayControllerSoftwareVersion"), ("AVICI-BAY-MIB", "aviciBayControllerFirmwareVersion"), ("AVICI-BAY-MIB", "aviciBayControllerProductId"), ("AVICI-BAY-MIB", "aviciBayControllerProductSerialNumber"), ("AVICI-BAY-MIB", "aviciBayControllerProductRevision"), ("AVICI-BAY-MIB", "aviciBayControllerDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciBayControllerGroup = aviciBayControllerGroup.setStatus('current')
aviciBayCentralOfficeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 2, 3)).setObjects(("AVICI-BAY-MIB", "aviciBayCoActiveAlarmCount"), ("AVICI-BAY-MIB", "aviciBayCoAlarmLastChange"), ("AVICI-BAY-MIB", "aviciBayCoAlarmIndex"), ("AVICI-BAY-MIB", "aviciBayCoAlarmType"), ("AVICI-BAY-MIB", "aviciBayCoAlarmDescr"), ("AVICI-BAY-MIB", "aviciBayCoAlarmTime"), ("AVICI-BAY-MIB", "aviciBayCoAlarmUnitNum"), ("AVICI-BAY-MIB", "aviciBayCoAlarmUnitType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciBayCentralOfficeGroup = aviciBayCentralOfficeGroup.setStatus('current')
aviciBayNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2474, 1, 4, 4, 2, 4)).setObjects(("AVICI-BAY-MIB", "aviciBayControllerColdStart"), ("AVICI-BAY-MIB", "aviciBayControllerWarmStart"), ("AVICI-BAY-MIB", "aviciBayControllerDown"), ("AVICI-BAY-MIB", "aviciBayVoltageNotification"), ("AVICI-BAY-MIB", "aviciBayFanNotification"), ("AVICI-BAY-MIB", "aviciBayBreakerNotification"), ("AVICI-BAY-MIB", "aviciBayMultiFanFailures"), ("AVICI-BAY-MIB", "aviciBayMultiBayControllerFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciBayNotificationGroup = aviciBayNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("AVICI-BAY-MIB", aviciBayControllerPartNumber=aviciBayControllerPartNumber, aviciBayNotificationGroup=aviciBayNotificationGroup, aviciBaySlotTxDiscards=aviciBaySlotTxDiscards, aviciBayCentralOfficeGroup=aviciBayCentralOfficeGroup, aviciBayCoAlarmTable=aviciBayCoAlarmTable, aviciBaySlotStatus=aviciBaySlotStatus, aviciBayVoltageNotification=aviciBayVoltageNotification, aviciBayVoltageDescr=aviciBayVoltageDescr, aviciBayControllerDown=aviciBayControllerDown, aviciBayTempMajorThreshold=aviciBayTempMajorThreshold, aviciBayMultiFanFailures=aviciBayMultiFanFailures, aviciBayMIBCompliances=aviciBayMIBCompliances, aviciBayTempCriticalThreshold=aviciBayTempCriticalThreshold, aviciBayCoAlarmEntry=aviciBayCoAlarmEntry, aviciBayFanAdminStatus=aviciBayFanAdminStatus, aviciBayControllerEntry=aviciBayControllerEntry, aviciBayEntry=aviciBayEntry, aviciBayControllerWarmStart=aviciBayControllerWarmStart, aviciBaySlotRxOctets=aviciBaySlotRxOctets, aviciBaySlotTxProtoErrs=aviciBaySlotTxProtoErrs, aviciBayVoltageEntry=aviciBayVoltageEntry, aviciBayCoAlarmSystem=aviciBayCoAlarmSystem, aviciBayFanEntry=aviciBayFanEntry, aviciBayFanIndex=aviciBayFanIndex, aviciBayVoltageType=aviciBayVoltageType, aviciBayObjects=aviciBayObjects, aviciBayMinorLed=aviciBayMinorLed, aviciBayFanDescr=aviciBayFanDescr, aviciBayFanMaxTemp=aviciBayFanMaxTemp, aviciBayFanSpeed=aviciBayFanSpeed, aviciBayMajorLed=aviciBayMajorLed, aviciBaySlotTxTimeouts=aviciBaySlotTxTimeouts, aviciBayControllerNotificationPrefix=aviciBayControllerNotificationPrefix, aviciBayBreakerNotification=aviciBayBreakerNotification, aviciBayAlarmCutOff=aviciBayAlarmCutOff, aviciBayFanCurrTemp=aviciBayFanCurrTemp, aviciBayCoAlarmLastChange=aviciBayCoAlarmLastChange, aviciBayCoAlarmUnitType=aviciBayCoAlarmUnitType, aviciBayVoltageIndex=aviciBayVoltageIndex, aviciBaySlotRxProtoErrs=aviciBaySlotRxProtoErrs, aviciBaySlotTxIOErrs=aviciBaySlotTxIOErrs, aviciBayBreakerTable=aviciBayBreakerTable, aviciBaySlotTxMessages=aviciBaySlotTxMessages, aviciBayBreakerStatus=aviciBayBreakerStatus, aviciBayFanCurrFailures=aviciBayFanCurrFailures, aviciBayGroup=aviciBayGroup, aviciBayFanTable=aviciBayFanTable, aviciBayBreakerType=aviciBayBreakerType, aviciBayBreakerDescr=aviciBayBreakerDescr, aviciBayFanOperStatus=aviciBayFanOperStatus, aviciBayControllerSerialNumber=aviciBayControllerSerialNumber, aviciBayControllerNotifications=aviciBayControllerNotifications, aviciBayMIBConformance=aviciBayMIBConformance, aviciBaySlotTable=aviciBaySlotTable, aviciBayControllerIndex=aviciBayControllerIndex, aviciBaySlotEntry=aviciBaySlotEntry, aviciBayControllerProductSerialNumber=aviciBayControllerProductSerialNumber, aviciBayControllerColdStart=aviciBayControllerColdStart, aviciBayCoAlarmDescr=aviciBayCoAlarmDescr, aviciBaySlotRxMessages=aviciBaySlotRxMessages, aviciBayMIBGroups=aviciBayMIBGroups, aviciBaySlotRxDiscards=aviciBaySlotRxDiscards, aviciBayControllerOperStatus=aviciBayControllerOperStatus, aviciBayControllerProductId=aviciBayControllerProductId, aviciBaySlotRxIOErrs=aviciBaySlotRxIOErrs, PYSNMP_MODULE_ID=aviciBayMIB, aviciBayTable=aviciBayTable, aviciBayCoAlarmType=aviciBayCoAlarmType, aviciBayNotifications=aviciBayNotifications, aviciBayCriticalLed=aviciBayCriticalLed, aviciBayControllerAdminStatus=aviciBayControllerAdminStatus, aviciBaySlotTxOctets=aviciBaySlotTxOctets, aviciBayVoltage=aviciBayVoltage, aviciBayMIBCompliance=aviciBayMIBCompliance, aviciBayModTempMajorThreshold=aviciBayModTempMajorThreshold, aviciBayControllerFirmwareVersion=aviciBayControllerFirmwareVersion, aviciBayNotificationPrefix=aviciBayNotificationPrefix, aviciBayFanNotification=aviciBayFanNotification, aviciBayCoAlarmUnitNum=aviciBayCoAlarmUnitNum, aviciBayControllerRevision=aviciBayControllerRevision, aviciBayVoltageStatus=aviciBayVoltageStatus, aviciBayControllerGroup=aviciBayControllerGroup, aviciBayCoAlarmTime=aviciBayCoAlarmTime, aviciBayMIB=aviciBayMIB, aviciBayBreakerIndex=aviciBayBreakerIndex, aviciBayVoltageTable=aviciBayVoltageTable, aviciBayModTempMinorThreshold=aviciBayModTempMinorThreshold, aviciBayControllerProductRevision=aviciBayControllerProductRevision, aviciBayControllerTable=aviciBayControllerTable, aviciBayMultiBayControllerFailures=aviciBayMultiBayControllerFailures, aviciBayIndex=aviciBayIndex, aviciBaySlotRxTimeouts=aviciBaySlotRxTimeouts, aviciBayFanLedStatus=aviciBayFanLedStatus, aviciBayTempMinorThreshold=aviciBayTempMinorThreshold, aviciBayControllerSoftwareVersion=aviciBayControllerSoftwareVersion, aviciSlotIndex=aviciSlotIndex, aviciBayBreakerEntry=aviciBayBreakerEntry, aviciBayCoAlarmIndex=aviciBayCoAlarmIndex, aviciBayCoActiveAlarmCount=aviciBayCoActiveAlarmCount, aviciBayModTempCriticalThreshold=aviciBayModTempCriticalThreshold, aviciBayControllerDescr=aviciBayControllerDescr)
