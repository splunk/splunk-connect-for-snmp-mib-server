#
# PySNMP MIB module WLSR-AP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WLSR-AP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wlsrEnterpriseMibModules, = mibBuilder.importSymbols("ARUBA-MIB", "wlsrEnterpriseMibModules")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Integer32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Unsigned32, iso, MibIdentifier, Bits, Counter32, TimeTicks, Counter64, TextualConvention, NotificationType, snmpModules = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "iso", "MibIdentifier", "Bits", "Counter32", "TimeTicks", "Counter64", "TextualConvention", "NotificationType", "snmpModules")
TDomain, TAddress, MacAddress, DisplayString, TimeInterval, TestAndIncr, RowStatus, PhysAddress, TruthValue, TextualConvention, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TDomain", "TAddress", "MacAddress", "DisplayString", "TimeInterval", "TestAndIncr", "RowStatus", "PhysAddress", "TruthValue", "TextualConvention", "StorageType")
wlsrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1))
wlsrMIB.setRevisions(('1908-04-16 02:06',))
if mibBuilder.loadTexts: wlsrMIB.setLastUpdated('0804160206Z')
if mibBuilder.loadTexts: wlsrMIB.setOrganization('Aruba Wireless Networks')
wlsrConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1))
wlsrStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3))
wlsrAirMonitorGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4))
wlsrTrapsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100))
wlsrConfigTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1), )
if mibBuilder.loadTexts: wlsrConfigTable.setStatus('current')
wlsrConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrBSSID"))
if mibBuilder.loadTexts: wlsrConfigEntry.setStatus('current')
wlsrBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: wlsrBSSID.setStatus('current')
wlsrESSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrESSID.setStatus('current')
wlsrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("master", 1), ("adhoc", 2), ("monitor", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrMode.setStatus('current')
wlsrCurrentChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 165))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrCurrentChannel.setStatus('current')
wlsrTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrTxPower.setStatus('current')
wlsrRTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2347))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrRTSThreshold.setStatus('current')
wlsrRetryLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrRetryLimit.setStatus('current')
wlsrPreamble = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("short", 1), ("long", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrPreamble.setStatus('current')
wlsrBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrBeaconInterval.setStatus('current')
wlsrPowerMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrPowerMgmt.setStatus('current')
wlsrLoadBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrLoadBalance.setStatus('current')
wlsrSupportedRates = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 12), Bits().clone(namedValues=NamedValues(("unused0", 0), ("unused1", 1), ("unused2", 2), ("unused3", 3), ("rate54Mbps", 4), ("rate48Mbps", 5), ("rate36Mbps", 6), ("rate24Mbps", 7), ("rate18Mbps", 8), ("rate12Mbps", 9), ("rate9Mbps", 10), ("rate6Mbps", 11), ("rate11Mbps", 12), ("rate5Mbps", 13), ("rate2Mbps", 14), ("rate1Mbps", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrSupportedRates.setStatus('current')
wlsrDTIMPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrDTIMPeriod.setStatus('current')
wlsrLMSAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrLMSAddress.setStatus('current')
wlsrEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 15), Bits().clone(namedValues=NamedValues(("unused0", 0), ("unused1", 1), ("unused2", 2), ("unused3", 3), ("unused4", 4), ("unused5", 5), ("unused6", 6), ("xSec", 7), ("wpa2PreAuth", 8), ("aes8021x", 9), ("aesPSK", 10), ("dynamicTkip", 11), ("staticTkip", 12), ("dynamicWep", 13), ("staticWep", 14), ("disabled", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrEncryption.setStatus('current')
wlsrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStatus.setStatus('current')
wlsrAgeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAgeout.setStatus('current')
wlsrMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2347))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrMTU.setStatus('current')
wlsrLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrLocation.setStatus('current')
wlsrHideSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrHideSSID.setStatus('current')
wlsrDenyBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrDenyBroadcast.setStatus('current')
wlsrBGmode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bgMixed", 1), ("bOnly", 2), ("gOnly", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrBGmode.setStatus('current')
wlsrCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 10, 11, 12))).clone(namedValues=NamedValues(("noCard", 1), ("intersil", 2), ("atherosA", 3), ("atherosBG", 4), ("atherosABG", 5), ("ar5212A", 10), ("ar5212BG", 11), ("ar5212ABG", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrCardType.setStatus('current')
wlsrRegDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrRegDomain.setStatus('deprecated')
wlsrCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrCountryCode.setStatus('current')
wlsrTxRates = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 1, 1, 1, 27), Bits().clone(namedValues=NamedValues(("unused0", 0), ("unused1", 1), ("unused2", 2), ("unused3", 3), ("rate54Mbps", 4), ("rate48Mbps", 5), ("rate36Mbps", 6), ("rate24Mbps", 7), ("rate18Mbps", 8), ("rate12Mbps", 9), ("rate9Mbps", 10), ("rate6Mbps", 11), ("rate11Mbps", 12), ("rate5Mbps", 13), ("rate2Mbps", 14), ("rate1Mbps", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrTxRates.setStatus('current')
wlsrStatsChannelGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3))
wlsrChannelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1), )
if mibBuilder.loadTexts: wlsrChannelStatsTable.setStatus('current')
wlsrChannelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrChStatsChannel"))
if mibBuilder.loadTexts: wlsrChannelStatsEntry.setStatus('current')
wlsrChStatsChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 165)))
if mibBuilder.loadTexts: wlsrChStatsChannel.setStatus('current')
wlsrChStatsNumAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsNumAPs.setStatus('current')
wlsrChStatsNumStations = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsNumStations.setStatus('current')
wlsrChStatsTotPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPkts.setStatus('current')
wlsrChStatsTotBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytes.setStatus('current')
wlsrChStatsTotRetryPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotRetryPkts.setStatus('current')
wlsrChStatsTotFragmentedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotFragmentedPkts.setStatus('current')
wlsrChStatsTotPhyErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPhyErrPkts.setStatus('current')
wlsrChStatsTotMacErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotMacErrPkts.setStatus('current')
wlsrChStatsFrameErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsFrameErrorRate.setStatus('current')
wlsrChStatsFrameRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsFrameRetryRate.setStatus('current')
wlsrChStatsFrameLowSpeedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsFrameLowSpeedRate.setStatus('current')
wlsrChStatsFrameNonUnicastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsFrameNonUnicastRate.setStatus('current')
wlsrChStatsFrameBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsFrameBandwidthRate.setStatus('current')
wlsrChStatsFrameFragmentationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsFrameFragmentationRate.setStatus('current')
wlsrChStatsMonitoredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 1, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsMonitoredTime.setStatus('current')
wlsrChannelRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2), )
if mibBuilder.loadTexts: wlsrChannelRateStatsTable.setStatus('current')
wlsrChannelRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrChStatsChannel"))
if mibBuilder.loadTexts: wlsrChannelRateStatsEntry.setStatus('current')
wlsrChStatsTotPktsAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt1Mbps.setStatus('current')
wlsrChStatsTotBytesAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt1Mbps.setStatus('current')
wlsrChStatsTotPktsAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt2Mbps.setStatus('current')
wlsrChStatsTotBytesAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt2Mbps.setStatus('current')
wlsrChStatsTotPktsAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt5Mbps.setStatus('current')
wlsrChStatsTotBytesAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt5Mbps.setStatus('current')
wlsrChStatsTotPktsAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt11Mbps.setStatus('current')
wlsrChStatsTotBytesAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt11Mbps.setStatus('current')
wlsrChStatsTotPktsAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt6Mbps.setStatus('current')
wlsrChStatsTotBytesAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt6Mbps.setStatus('current')
wlsrChStatsTotPktsAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt12Mbps.setStatus('current')
wlsrChStatsTotBytesAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt12Mbps.setStatus('current')
wlsrChStatsTotPktsAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt18Mbps.setStatus('current')
wlsrChStatsTotBytesAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt18Mbps.setStatus('current')
wlsrChStatsTotPktsAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt24Mbps.setStatus('current')
wlsrChStatsTotBytesAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt24Mbps.setStatus('current')
wlsrChStatsTotPktsAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt36Mbps.setStatus('current')
wlsrChStatsTotBytesAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt36Mbps.setStatus('current')
wlsrChStatsTotPktsAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt48Mbps.setStatus('current')
wlsrChStatsTotBytesAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt48Mbps.setStatus('current')
wlsrChStatsTotPktsAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotPktsAt54Mbps.setStatus('current')
wlsrChStatsTotBytesAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotBytesAt54Mbps.setStatus('current')
wlsrChannelDATypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3), )
if mibBuilder.loadTexts: wlsrChannelDATypeStatsTable.setStatus('current')
wlsrChannelDATypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrChStatsChannel"))
if mibBuilder.loadTexts: wlsrChannelDATypeStatsEntry.setStatus('current')
wlsrChStatsTotDABroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDABroadcastPkts.setStatus('current')
wlsrChStatsTotDABroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDABroadcastBytes.setStatus('current')
wlsrChStatsTotDAMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDAMulticastPkts.setStatus('current')
wlsrChStatsTotDAMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDAMulticastBytes.setStatus('current')
wlsrChStatsTotDAUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDAUnicastPkts.setStatus('current')
wlsrChStatsTotDAUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDAUnicastBytes.setStatus('current')
wlsrChannelFrameTypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4), )
if mibBuilder.loadTexts: wlsrChannelFrameTypeStatsTable.setStatus('current')
wlsrChannelFrameTypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrChStatsChannel"))
if mibBuilder.loadTexts: wlsrChannelFrameTypeStatsEntry.setStatus('current')
wlsrChStatsTotMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotMgmtPkts.setStatus('current')
wlsrChStatsTotMgmtBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotMgmtBytes.setStatus('current')
wlsrChStatsTotCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotCtrlPkts.setStatus('current')
wlsrChStatsTotCtrlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotCtrlBytes.setStatus('current')
wlsrChStatsTotDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDataPkts.setStatus('current')
wlsrChStatsTotDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsTotDataBytes.setStatus('current')
wlsrChannelPktSizeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5), )
if mibBuilder.loadTexts: wlsrChannelPktSizeStatsTable.setStatus('current')
wlsrChannelPktSizeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrChStatsChannel"))
if mibBuilder.loadTexts: wlsrChannelPktSizeStatsEntry.setStatus('current')
wlsrChStatsPkts63Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsPkts63Bytes.setStatus('current')
wlsrChStatsPkts64To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsPkts64To127.setStatus('current')
wlsrChStatsPkts128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsPkts128To255.setStatus('current')
wlsrChStatsPkts256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsPkts256To511.setStatus('current')
wlsrChStatsPkts512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsPkts512To1023.setStatus('current')
wlsrChStatsPkts1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 3, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrChStatsPkts1024To1518.setStatus('current')
wlsrStatsStaGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4))
wlsrStaStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1), )
if mibBuilder.loadTexts: wlsrStaStatsTable.setStatus('current')
wlsrStaStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrStaAddress"))
if mibBuilder.loadTexts: wlsrStaStatsEntry.setStatus('current')
wlsrStaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: wlsrStaAddress.setStatus('current')
wlsrStaTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts.setStatus('current')
wlsrStaTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytes.setStatus('current')
wlsrStaRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts.setStatus('current')
wlsrStaRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytes.setStatus('current')
wlsrStaTxRetryPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxRetryPkts.setStatus('current')
wlsrStaRxRetryPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxRetryPkts.setStatus('current')
wlsrStaTxFragmentedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxFragmentedPkts.setStatus('current')
wlsrStaRxFragmentedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxFragmentedPkts.setStatus('current')
wlsrStaReceiveErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaReceiveErrPkts.setStatus('current')
wlsrStaTxTotSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxTotSignal.setStatus('current')
wlsrStaTxSignalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxSignalPkts.setStatus('current')
wlsrStaTxCurSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxCurSignal.setStatus('current')
wlsrStaTxHighSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxHighSignal.setStatus('current')
wlsrStaRxTotNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxTotNoise.setStatus('deprecated')
wlsrStaRxNoisePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxNoisePkts.setStatus('deprecated')
wlsrStaRxCurrentNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxCurrentNoise.setStatus('deprecated')
wlsrStaRxHighNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxHighNoise.setStatus('deprecated')
wlsrStaRxLowNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxLowNoise.setStatus('deprecated')
wlsrStaFrameRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameRetryRate.setStatus('current')
wlsrStaFrameLowSpeedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameLowSpeedRate.setStatus('current')
wlsrStaFrameNonUnicastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameNonUnicastRate.setStatus('current')
wlsrStaFrameRetryErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameRetryErrorRate.setStatus('current')
wlsrStaFrameBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameBandwidthRate.setStatus('current')
wlsrStaFrameFragmentationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameFragmentationRate.setStatus('current')
wlsrStaFrameHighBandwidthRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaFrameHighBandwidthRate.setStatus('current')
wlsrStaRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2), )
if mibBuilder.loadTexts: wlsrStaRateStatsTable.setStatus('current')
wlsrStaRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrStaAddress"))
if mibBuilder.loadTexts: wlsrStaRateStatsEntry.setStatus('current')
wlsrStaTxPktsAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt1Mbps.setStatus('current')
wlsrStaTxBytesAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt1Mbps.setStatus('current')
wlsrStaTxPktsAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt2Mbps.setStatus('current')
wlsrStaTxBytesAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt2Mbps.setStatus('current')
wlsrStaTxPktsAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt5Mbps.setStatus('current')
wlsrStaTxBytesAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt5Mbps.setStatus('current')
wlsrStaTxPktsAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt11Mbps.setStatus('current')
wlsrStaTxBytesAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt11Mbps.setStatus('current')
wlsrStaTxPktsAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt6Mbps.setStatus('current')
wlsrStaTxBytesAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt6Mbps.setStatus('current')
wlsrStaTxPktsAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt12Mbps.setStatus('current')
wlsrStaTxBytesAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt12Mbps.setStatus('current')
wlsrStaTxPktsAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt18Mbps.setStatus('current')
wlsrStaTxBytesAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt18Mbps.setStatus('current')
wlsrStaTxPktsAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt24Mbps.setStatus('current')
wlsrStaTxBytesAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt24Mbps.setStatus('current')
wlsrStaTxPktsAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt36Mbps.setStatus('current')
wlsrStaTxBytesAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt36Mbps.setStatus('current')
wlsrStaTxPktsAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt48Mbps.setStatus('current')
wlsrStaTxBytesAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt48Mbps.setStatus('current')
wlsrStaTxPktsAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPktsAt54Mbps.setStatus('current')
wlsrStaTxBytesAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxBytesAt54Mbps.setStatus('current')
wlsrStaRxPktsAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt1Mbps.setStatus('current')
wlsrStaRxBytesAt1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt1Mbps.setStatus('current')
wlsrStaRxPktsAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt2Mbps.setStatus('current')
wlsrStaRxBytesAt2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt2Mbps.setStatus('current')
wlsrStaRxPktsAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt5Mbps.setStatus('current')
wlsrStaRxBytesAt5Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt5Mbps.setStatus('current')
wlsrStaRxPktsAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt11Mbps.setStatus('current')
wlsrStaRxBytesAt11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt11Mbps.setStatus('current')
wlsrStaRxPktsAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt6Mbps.setStatus('current')
wlsrStaRxBytesAt6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt6Mbps.setStatus('current')
wlsrStaRxPktsAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt12Mbps.setStatus('current')
wlsrStaRxBytesAt12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt12Mbps.setStatus('current')
wlsrStaRxPktsAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt18Mbps.setStatus('current')
wlsrStaRxBytesAt18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt18Mbps.setStatus('current')
wlsrStaRxPktsAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt24Mbps.setStatus('current')
wlsrStaRxBytesAt24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt24Mbps.setStatus('current')
wlsrStaRxPktsAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt36Mbps.setStatus('current')
wlsrStaRxBytesAt36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt36Mbps.setStatus('current')
wlsrStaRxPktsAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt48Mbps.setStatus('current')
wlsrStaRxBytesAt48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt48Mbps.setStatus('current')
wlsrStaRxPktsAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPktsAt54Mbps.setStatus('current')
wlsrStaRxBytesAt54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxBytesAt54Mbps.setStatus('current')
wlsrStaDATypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3), )
if mibBuilder.loadTexts: wlsrStaDATypeStatsTable.setStatus('current')
wlsrStaDATypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrStaAddress"))
if mibBuilder.loadTexts: wlsrStaDATypeStatsEntry.setStatus('current')
wlsrStaTxDABroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDABroadcastPkts.setStatus('current')
wlsrStaTxDABroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDABroadcastBytes.setStatus('current')
wlsrStaTxDAMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDAMulticastPkts.setStatus('current')
wlsrStaTxDAMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDAMulticastBytes.setStatus('current')
wlsrStaTxDAUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDAUnicastPkts.setStatus('current')
wlsrStaTxDAUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDAUnicastBytes.setStatus('current')
wlsrStaFrameTypeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4), )
if mibBuilder.loadTexts: wlsrStaFrameTypeStatsTable.setStatus('current')
wlsrStaFrameTypeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrStaAddress"))
if mibBuilder.loadTexts: wlsrStaFrameTypeStatsEntry.setStatus('current')
wlsrStaTxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxMgmtPkts.setStatus('current')
wlsrStaTxMgmtBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxMgmtBytes.setStatus('current')
wlsrStaTxCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxCtrlPkts.setStatus('current')
wlsrStaTxCtrlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxCtrlBytes.setStatus('current')
wlsrStaTxDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDataPkts.setStatus('current')
wlsrStaTxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxDataBytes.setStatus('current')
wlsrStaRxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxMgmtPkts.setStatus('current')
wlsrStaRxMgmtBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxMgmtBytes.setStatus('current')
wlsrStaRxCtrlPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxCtrlPkts.setStatus('current')
wlsrStaRxCtrlBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxCtrlBytes.setStatus('current')
wlsrStaRxDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxDataPkts.setStatus('current')
wlsrStaRxDataBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxDataBytes.setStatus('current')
wlsrStaPktSizeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5), )
if mibBuilder.loadTexts: wlsrStaPktSizeStatsTable.setStatus('current')
wlsrStaPktSizeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrStaAddress"))
if mibBuilder.loadTexts: wlsrStaPktSizeStatsEntry.setStatus('current')
wlsrStaTxPkts63Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts63Bytes.setStatus('current')
wlsrStaTxPkts64To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts64To127.setStatus('current')
wlsrStaTxPkts128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts128To255.setStatus('current')
wlsrStaTxPkts256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts256To511.setStatus('current')
wlsrStaTxPkts512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts512To1023.setStatus('current')
wlsrStaTxPkts1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaTxPkts1024To1518.setStatus('current')
wlsrStaRxPkts63Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts63Bytes.setStatus('current')
wlsrStaRxPkts64To127 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts64To127.setStatus('current')
wlsrStaRxPkts128To255 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts128To255.setStatus('current')
wlsrStaRxPkts256To511 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts256To511.setStatus('current')
wlsrStaRxPkts512To1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts512To1023.setStatus('current')
wlsrStaRxPkts1024To1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 3, 4, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrStaRxPkts1024To1518.setStatus('current')
wlsrAirMonitorApListTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1), )
if mibBuilder.loadTexts: wlsrAirMonitorApListTable.setStatus('current')
wlsrAirMonitorApListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1), ).setIndexNames((0, "WLSR-AP-MIB", "wlsrAmApBSSID"))
if mibBuilder.loadTexts: wlsrAirMonitorApListEntry.setStatus('current')
wlsrAmApBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: wlsrAmApBSSID.setStatus('current')
wlsrAmSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 62))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmSSID.setStatus('current')
wlsrAmChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 165))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmChannel.setStatus('current')
wlsrAmPhysicalType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dot11b", 1), ("dot11a", 2), ("dot11g", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmPhysicalType.setStatus('current')
wlsrAmAccessPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("genericAp", 1), ("softAp", 2), ("ciscoAp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmAccessPointType.setStatus('current')
wlsrAmRAPType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("interfering", 2), ("unsecure", 3), ("dos", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmRAPType.setStatus('current')
wlsrAmRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmRSSI.setStatus('current')
wlsrAmMonitoredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmMonitoredTime.setStatus('current')
wlsrAmInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmInactivityTime.setStatus('current')
wlsrAmLoadBalancing = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAmLoadBalancing.setStatus('current')
wlsrTrapObjectsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100))
wlsrTargetApBSSID = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrTargetApBSSID.setStatus('current')
wlsrTargetApSSID = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrTargetApSSID.setStatus('current')
wlsrTargetApChannel = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 165))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrTargetApChannel.setStatus('current')
wlsrSourceMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrSourceMac.setStatus('current')
wlsrNodeMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrNodeMac.setStatus('current')
wlsrFrameType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("associateRequest", 1), ("associateResponse", 2), ("reassociateRequest", 3), ("reassociateResponse", 4), ("probeRequest", 5), ("probeResponse", 6), ("beacon", 9), ("atim", 10), ("disassociate", 11), ("auth", 12), ("deauth", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrFrameType.setStatus('current')
wlsrAddressType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("srcAddress", 1), ("dstAddress", 2), ("bssid", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrAddressType.setStatus('current')
wlsrSignatureName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrSignatureName.setStatus('current')
wlsrMatchedMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrMatchedMac.setStatus('current')
wlsrMatchedIp = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrMatchedIp.setStatus('current')
wlsrReceiverMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrReceiverMac.setStatus('current')
wlsrTransmitterMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrTransmitterMac.setStatus('current')
wlsrRSSI = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrRSSI.setStatus('current')
wlsrRogueInfoURL = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrRogueInfoURL.setStatus('current')
wlsrInterferingAPInfoURL = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 100, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlsrInterferingAPInfoURL.setStatus('current')
wlsrUnsecureApDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1001)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"), ("WLSR-AP-MIB", "wlsrMatchedMac"), ("WLSR-AP-MIB", "wlsrMatchedIp"), ("WLSR-AP-MIB", "wlsrRogueInfoURL"))
if mibBuilder.loadTexts: wlsrUnsecureApDetected.setStatus('current')
wlsrStaImpersonation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1002)).setObjects(("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrStaImpersonation.setStatus('current')
wlsrReservedChannelViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1003)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrReservedChannelViolation.setStatus('current')
wlsrValidSSIDViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1004)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrValidSSIDViolation.setStatus('current')
wlsrChannelMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1005)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrChannelMisconfiguration.setStatus('current')
wlsrOUIMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1006)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrOUIMisconfiguration.setStatus('current')
wlsrSSIDMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1007)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrSSIDMisconfiguration.setStatus('current')
wlsrShortPreableMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1008)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrShortPreableMisconfiguration.setStatus('current')
wlsrWPAMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1009)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrWPAMisconfiguration.setStatus('current')
wlsrAdhocNetworkDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1010)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrAdhocNetworkDetected.setStatus('current')
wlsrStaPolicyViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1011)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrStaPolicyViolation.setStatus('current')
wlsrRepeatWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1012)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrRepeatWEPIVViolation.setStatus('current')
wlsrWeakWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1013)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrWeakWEPIVViolation.setStatus('current')
wlsrChannelInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1014)).setObjects(("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrChannelInterferenceDetected.setStatus('current')
wlsrAPInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1015)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrAPInterferenceDetected.setStatus('current')
wlsrStaInterferenceDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1016)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrStaInterferenceDetected.setStatus('current')
wlsrFrameRetryRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1017)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrFrameRetryRateExceeded.setStatus('current')
wlsrFrameReceiveErrorRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1018)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrTargetApChannel"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrFrameReceiveErrorRateExceeded.setStatus('current')
wlsrFrameFragmentationRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1019)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrTargetApChannel"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrFrameFragmentationRateExceeded.setStatus('current')
wlsrFrameBandWidthRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1020)).setObjects(("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrFrameBandWidthRateExceeded.setStatus('current')
wlsrFrameLowSpeedRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1021)).setObjects(("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrFrameLowSpeedRateExceeded.setStatus('current')
wlsrFrameNonUnicastRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1022)).setObjects(("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrFrameNonUnicastRateExceeded.setStatus('current')
wlsrLoadbalancingEnabled = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1023)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrLoadbalancingEnabled.setStatus('current')
wlsrChannelFrameRetryRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1024)).setObjects(("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrChannelFrameRetryRateExceeded.setStatus('current')
wlsrChannelFrameFragmentationRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1025)).setObjects(("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrChannelFrameFragmentationRateExceeded.setStatus('current')
wlsrChannelFrameErrorRateExceeded = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1026)).setObjects(("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrChannelFrameErrorRateExceeded.setStatus('current')
wlsrSignatureMatch = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1027)).setObjects(("WLSR-AP-MIB", "wlsrSignatureName"), ("WLSR-AP-MIB", "wlsrSourceMac"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrSignatureMatch.setStatus('current')
wlsrChannelRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1028)).setObjects(("WLSR-AP-MIB", "wlsrFrameType"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrChannelRateAnomaly.setStatus('current')
wlsrNodeRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1029)).setObjects(("WLSR-AP-MIB", "wlsrFrameType"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrNodeRateAnomaly.setStatus('current')
wlsrEAPRateAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1030)).setObjects(("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrEAPRateAnomaly.setStatus('current')
wlsrSignalAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1031)).setObjects(("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrSignalAnomaly.setStatus('current')
wlsrSequenceNumberAnomaly = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1032)).setObjects(("WLSR-AP-MIB", "wlsrSourceMac"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrSequenceNumberAnomaly.setStatus('current')
wlsrDisconnectStationAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1033)).setObjects(("WLSR-AP-MIB", "wlsrFrameType"), ("WLSR-AP-MIB", "wlsrSourceMac"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrDisconnectStationAttack.setStatus('current')
wlsrApFloodAttack = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1034)).setObjects(("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrApFloodAttack.setStatus('current')
wlsrAdhocNetwork = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1035)).setObjects(("WLSR-AP-MIB", "wlsrSourceMac"), ("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrAdhocNetwork.setStatus('current')
wlsrWirelessBridge = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1036)).setObjects(("WLSR-AP-MIB", "wlsrTransmitterMac"), ("WLSR-AP-MIB", "wlsrReceiverMac"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrWirelessBridge.setStatus('current')
wlsrInvalidMacOUI = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1037)).setObjects(("WLSR-AP-MIB", "wlsrAddressType"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrRSSI"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrInvalidMacOUI.setStatus('current')
wlsrLoadbalancingDisabled = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1038)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrTargetApChannel"), ("WLSR-AP-MIB", "wlsrLocation"))
if mibBuilder.loadTexts: wlsrLoadbalancingDisabled.setStatus('current')
wlsrWEPMisconfiguration = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1039)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrWEPMisconfiguration.setStatus('current')
wlsrStaRepeatWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1040)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrStaRepeatWEPIVViolation.setStatus('current')
wlsrStaWeakWEPIVViolation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1041)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrStaWeakWEPIVViolation.setStatus('current')
wlsrStaAssociatedToUnsecureAp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1042)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"), ("WLSR-AP-MIB", "wlsrNodeMac"), ("WLSR-AP-MIB", "wlsrRogueInfoURL"))
if mibBuilder.loadTexts: wlsrStaAssociatedToUnsecureAp.setStatus('current')
wlsrAdhocNetworkBridgeDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1043)).setObjects(("WLSR-AP-MIB", "wlsrSourceMac"), ("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"))
if mibBuilder.loadTexts: wlsrAdhocNetworkBridgeDetected.setStatus('current')
wlsrInterferingApDetected = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 1, 1, 100, 1044)).setObjects(("WLSR-AP-MIB", "wlsrTargetApBSSID"), ("WLSR-AP-MIB", "wlsrTargetApSSID"), ("WLSR-AP-MIB", "wlsrLocation"), ("WLSR-AP-MIB", "wlsrCurrentChannel"), ("WLSR-AP-MIB", "wlsrInterferingAPInfoURL"))
if mibBuilder.loadTexts: wlsrInterferingApDetected.setStatus('current')
mibBuilder.exportSymbols("WLSR-AP-MIB", wlsrStaRxPktsAt36Mbps=wlsrStaRxPktsAt36Mbps, wlsrStaFrameTypeStatsEntry=wlsrStaFrameTypeStatsEntry, wlsrStaRxBytesAt11Mbps=wlsrStaRxBytesAt11Mbps, wlsrAdhocNetworkDetected=wlsrAdhocNetworkDetected, wlsrEncryption=wlsrEncryption, wlsrChStatsTotDABroadcastBytes=wlsrChStatsTotDABroadcastBytes, wlsrStaRxPkts63Bytes=wlsrStaRxPkts63Bytes, wlsrStaReceiveErrPkts=wlsrStaReceiveErrPkts, wlsrStaFrameHighBandwidthRate=wlsrStaFrameHighBandwidthRate, wlsrStaRxBytesAt48Mbps=wlsrStaRxBytesAt48Mbps, wlsrChStatsTotPhyErrPkts=wlsrChStatsTotPhyErrPkts, wlsrChStatsTotPktsAt12Mbps=wlsrChStatsTotPktsAt12Mbps, wlsrStaPktSizeStatsTable=wlsrStaPktSizeStatsTable, wlsrStaRateStatsTable=wlsrStaRateStatsTable, wlsrAmMonitoredTime=wlsrAmMonitoredTime, wlsrStaTxDAMulticastBytes=wlsrStaTxDAMulticastBytes, wlsrStaTxPktsAt18Mbps=wlsrStaTxPktsAt18Mbps, wlsrStaPktSizeStatsEntry=wlsrStaPktSizeStatsEntry, wlsrChStatsTotDAMulticastBytes=wlsrChStatsTotDAMulticastBytes, wlsrValidSSIDViolation=wlsrValidSSIDViolation, wlsrStaStatsTable=wlsrStaStatsTable, wlsrChStatsTotPktsAt36Mbps=wlsrChStatsTotPktsAt36Mbps, wlsrStaRxBytesAt1Mbps=wlsrStaRxBytesAt1Mbps, wlsrStaRxPkts64To127=wlsrStaRxPkts64To127, wlsrReservedChannelViolation=wlsrReservedChannelViolation, wlsrChannelDATypeStatsTable=wlsrChannelDATypeStatsTable, wlsrStaRxCurrentNoise=wlsrStaRxCurrentNoise, wlsrStaRxBytesAt2Mbps=wlsrStaRxBytesAt2Mbps, wlsrStaRxBytesAt24Mbps=wlsrStaRxBytesAt24Mbps, wlsrAirMonitorApListEntry=wlsrAirMonitorApListEntry, wlsrPreamble=wlsrPreamble, wlsrESSID=wlsrESSID, wlsrStaTxPktsAt24Mbps=wlsrStaTxPktsAt24Mbps, wlsrAmChannel=wlsrAmChannel, wlsrTransmitterMac=wlsrTransmitterMac, wlsrChStatsNumStations=wlsrChStatsNumStations, wlsrChannelPktSizeStatsTable=wlsrChannelPktSizeStatsTable, wlsrStaTxBytesAt11Mbps=wlsrStaTxBytesAt11Mbps, wlsrLoadbalancingEnabled=wlsrLoadbalancingEnabled, wlsrChStatsPkts63Bytes=wlsrChStatsPkts63Bytes, wlsrSignatureName=wlsrSignatureName, wlsrStaRxNoisePkts=wlsrStaRxNoisePkts, wlsrStaRxRetryPkts=wlsrStaRxRetryPkts, wlsrStaTxPktsAt54Mbps=wlsrStaTxPktsAt54Mbps, wlsrStaRxPktsAt5Mbps=wlsrStaRxPktsAt5Mbps, wlsrChannelFrameTypeStatsTable=wlsrChannelFrameTypeStatsTable, wlsrRepeatWEPIVViolation=wlsrRepeatWEPIVViolation, wlsrStaTxTotSignal=wlsrStaTxTotSignal, wlsrChStatsPkts256To511=wlsrChStatsPkts256To511, wlsrMatchedMac=wlsrMatchedMac, wlsrAmRSSI=wlsrAmRSSI, wlsrSSIDMisconfiguration=wlsrSSIDMisconfiguration, wlsrStaTxDABroadcastBytes=wlsrStaTxDABroadcastBytes, wlsrMatchedIp=wlsrMatchedIp, wlsrWPAMisconfiguration=wlsrWPAMisconfiguration, wlsrSupportedRates=wlsrSupportedRates, wlsrChStatsTotBytesAt36Mbps=wlsrChStatsTotBytesAt36Mbps, wlsrStaTxPktsAt5Mbps=wlsrStaTxPktsAt5Mbps, wlsrStaInterferenceDetected=wlsrStaInterferenceDetected, wlsrStaRxBytes=wlsrStaRxBytes, wlsrRSSI=wlsrRSSI, wlsrStaRxBytesAt6Mbps=wlsrStaRxBytesAt6Mbps, PYSNMP_MODULE_ID=wlsrMIB, wlsrRogueInfoURL=wlsrRogueInfoURL, wlsrDenyBroadcast=wlsrDenyBroadcast, wlsrTargetApBSSID=wlsrTargetApBSSID, wlsrTrapObjectsGroup=wlsrTrapObjectsGroup, wlsrStaTxPkts63Bytes=wlsrStaTxPkts63Bytes, wlsrFrameNonUnicastRateExceeded=wlsrFrameNonUnicastRateExceeded, wlsrStaTxBytesAt54Mbps=wlsrStaTxBytesAt54Mbps, wlsrCountryCode=wlsrCountryCode, wlsrStaTxFragmentedPkts=wlsrStaTxFragmentedPkts, wlsrFrameRetryRateExceeded=wlsrFrameRetryRateExceeded, wlsrStaTxPktsAt11Mbps=wlsrStaTxPktsAt11Mbps, wlsrStaTxDAUnicastBytes=wlsrStaTxDAUnicastBytes, wlsrChStatsFrameNonUnicastRate=wlsrChStatsFrameNonUnicastRate, wlsrAmSSID=wlsrAmSSID, wlsrStaTxPkts64To127=wlsrStaTxPkts64To127, wlsrStaTxBytesAt36Mbps=wlsrStaTxBytesAt36Mbps, wlsrChStatsFrameBandwidthRate=wlsrChStatsFrameBandwidthRate, wlsrStatsStaGroup=wlsrStatsStaGroup, wlsrChStatsTotDAUnicastPkts=wlsrChStatsTotDAUnicastPkts, wlsrUnsecureApDetected=wlsrUnsecureApDetected, wlsrInvalidMacOUI=wlsrInvalidMacOUI, wlsrStaTxPktsAt12Mbps=wlsrStaTxPktsAt12Mbps, wlsrStaTxDAUnicastPkts=wlsrStaTxDAUnicastPkts, wlsrStatus=wlsrStatus, wlsrChStatsTotFragmentedPkts=wlsrChStatsTotFragmentedPkts, wlsrChannelRateStatsTable=wlsrChannelRateStatsTable, wlsrStaStatsEntry=wlsrStaStatsEntry, wlsrChStatsTotMacErrPkts=wlsrChStatsTotMacErrPkts, wlsrStaRxPkts1024To1518=wlsrStaRxPkts1024To1518, wlsrReceiverMac=wlsrReceiverMac, wlsrChannelFrameErrorRateExceeded=wlsrChannelFrameErrorRateExceeded, wlsrInterferingApDetected=wlsrInterferingApDetected, wlsrDisconnectStationAttack=wlsrDisconnectStationAttack, wlsrStaRxBytesAt18Mbps=wlsrStaRxBytesAt18Mbps, wlsrChStatsTotBytes=wlsrChStatsTotBytes, wlsrChStatsTotRetryPkts=wlsrChStatsTotRetryPkts, wlsrChStatsTotBytesAt1Mbps=wlsrChStatsTotBytesAt1Mbps, wlsrStaRxLowNoise=wlsrStaRxLowNoise, wlsrStaRxPktsAt12Mbps=wlsrStaRxPktsAt12Mbps, wlsrStaTxPkts128To255=wlsrStaTxPkts128To255, wlsrChannelInterferenceDetected=wlsrChannelInterferenceDetected, wlsrChStatsTotBytesAt6Mbps=wlsrChStatsTotBytesAt6Mbps, wlsrChannelStatsTable=wlsrChannelStatsTable, wlsrRTSThreshold=wlsrRTSThreshold, wlsrChStatsTotBytesAt5Mbps=wlsrChStatsTotBytesAt5Mbps, wlsrChStatsTotPktsAt24Mbps=wlsrChStatsTotPktsAt24Mbps, wlsrChannelMisconfiguration=wlsrChannelMisconfiguration, wlsrAmApBSSID=wlsrAmApBSSID, wlsrWeakWEPIVViolation=wlsrWeakWEPIVViolation, wlsrMode=wlsrMode, wlsrStaDATypeStatsTable=wlsrStaDATypeStatsTable, wlsrSourceMac=wlsrSourceMac, wlsrChStatsFrameFragmentationRate=wlsrChStatsFrameFragmentationRate, wlsrChStatsTotBytesAt48Mbps=wlsrChStatsTotBytesAt48Mbps, wlsrStaRxPkts512To1023=wlsrStaRxPkts512To1023, wlsrChStatsTotBytesAt54Mbps=wlsrChStatsTotBytesAt54Mbps, wlsrStaRxBytesAt54Mbps=wlsrStaRxBytesAt54Mbps, wlsrAmPhysicalType=wlsrAmPhysicalType, wlsrSignalAnomaly=wlsrSignalAnomaly, wlsrStaFrameNonUnicastRate=wlsrStaFrameNonUnicastRate, wlsrCardType=wlsrCardType, wlsrLMSAddress=wlsrLMSAddress, wlsrChStatsTotPktsAt18Mbps=wlsrChStatsTotPktsAt18Mbps, wlsrStaTxBytes=wlsrStaTxBytes, wlsrStaTxBytesAt12Mbps=wlsrStaTxBytesAt12Mbps, wlsrStaFrameRetryRate=wlsrStaFrameRetryRate, wlsrStaTxBytesAt6Mbps=wlsrStaTxBytesAt6Mbps, wlsrStaRxPktsAt1Mbps=wlsrStaRxPktsAt1Mbps, wlsrStaRxPktsAt18Mbps=wlsrStaRxPktsAt18Mbps, wlsrStaTxCtrlBytes=wlsrStaTxCtrlBytes, wlsrAmAccessPointType=wlsrAmAccessPointType, wlsrChStatsTotPktsAt6Mbps=wlsrChStatsTotPktsAt6Mbps, wlsrChannelFrameTypeStatsEntry=wlsrChannelFrameTypeStatsEntry, wlsrStaTxPktsAt48Mbps=wlsrStaTxPktsAt48Mbps, wlsrAirMonitorGroup=wlsrAirMonitorGroup, wlsrStaRxHighNoise=wlsrStaRxHighNoise, wlsrStaTxPktsAt1Mbps=wlsrStaTxPktsAt1Mbps, wlsrStaTxDAMulticastPkts=wlsrStaTxDAMulticastPkts, wlsrStaTxDABroadcastPkts=wlsrStaTxDABroadcastPkts, wlsrStaRxCtrlPkts=wlsrStaRxCtrlPkts, wlsrNodeMac=wlsrNodeMac, wlsrMTU=wlsrMTU, wlsrNodeRateAnomaly=wlsrNodeRateAnomaly, wlsrWirelessBridge=wlsrWirelessBridge, wlsrChStatsTotPktsAt5Mbps=wlsrChStatsTotPktsAt5Mbps, wlsrFrameBandWidthRateExceeded=wlsrFrameBandWidthRateExceeded, wlsrChannelStatsEntry=wlsrChannelStatsEntry, wlsrApFloodAttack=wlsrApFloodAttack, wlsrChStatsFrameLowSpeedRate=wlsrChStatsFrameLowSpeedRate, wlsrStaDATypeStatsEntry=wlsrStaDATypeStatsEntry, wlsrStaTxCurSignal=wlsrStaTxCurSignal, wlsrStaRxPktsAt24Mbps=wlsrStaRxPktsAt24Mbps, wlsrSequenceNumberAnomaly=wlsrSequenceNumberAnomaly, wlsrAmInactivityTime=wlsrAmInactivityTime, wlsrStaTxPktsAt36Mbps=wlsrStaTxPktsAt36Mbps, wlsrStaImpersonation=wlsrStaImpersonation, wlsrStaTxHighSignal=wlsrStaTxHighSignal, wlsrStaRxTotNoise=wlsrStaRxTotNoise, wlsrAgeout=wlsrAgeout, wlsrChStatsTotPktsAt48Mbps=wlsrChStatsTotPktsAt48Mbps, wlsrPowerMgmt=wlsrPowerMgmt, wlsrChannelDATypeStatsEntry=wlsrChannelDATypeStatsEntry, wlsrChStatsTotBytesAt18Mbps=wlsrChStatsTotBytesAt18Mbps, wlsrChStatsPkts128To255=wlsrChStatsPkts128To255, wlsrStaRateStatsEntry=wlsrStaRateStatsEntry, wlsrStaTxBytesAt5Mbps=wlsrStaTxBytesAt5Mbps, wlsrChStatsTotPktsAt54Mbps=wlsrChStatsTotPktsAt54Mbps, wlsrChStatsTotCtrlPkts=wlsrChStatsTotCtrlPkts, wlsrStaRxDataPkts=wlsrStaRxDataPkts, wlsrChStatsTotDataBytes=wlsrChStatsTotDataBytes, wlsrStaRxMgmtPkts=wlsrStaRxMgmtPkts, wlsrRetryLimit=wlsrRetryLimit, wlsrAirMonitorApListTable=wlsrAirMonitorApListTable, wlsrChStatsTotMgmtBytes=wlsrChStatsTotMgmtBytes, wlsrStaRxBytesAt5Mbps=wlsrStaRxBytesAt5Mbps, wlsrAmRAPType=wlsrAmRAPType, wlsrStaRxPkts256To511=wlsrStaRxPkts256To511, wlsrRegDomain=wlsrRegDomain, wlsrBSSID=wlsrBSSID, wlsrCurrentChannel=wlsrCurrentChannel, wlsrStaRxDataBytes=wlsrStaRxDataBytes, wlsrEAPRateAnomaly=wlsrEAPRateAnomaly, wlsrFrameFragmentationRateExceeded=wlsrFrameFragmentationRateExceeded, wlsrBGmode=wlsrBGmode, wlsrChStatsChannel=wlsrChStatsChannel, wlsrChStatsPkts64To127=wlsrChStatsPkts64To127, wlsrStaTxBytesAt48Mbps=wlsrStaTxBytesAt48Mbps, wlsrChStatsTotCtrlBytes=wlsrChStatsTotCtrlBytes, wlsrTargetApChannel=wlsrTargetApChannel, wlsrAdhocNetwork=wlsrAdhocNetwork, wlsrChannelRateStatsEntry=wlsrChannelRateStatsEntry, wlsrStaRxMgmtBytes=wlsrStaRxMgmtBytes, wlsrStaRxBytesAt12Mbps=wlsrStaRxBytesAt12Mbps, wlsrChStatsPkts512To1023=wlsrChStatsPkts512To1023, wlsrChStatsTotBytesAt24Mbps=wlsrChStatsTotBytesAt24Mbps, wlsrStaWeakWEPIVViolation=wlsrStaWeakWEPIVViolation, wlsrChStatsTotMgmtPkts=wlsrChStatsTotMgmtPkts, wlsrStaTxRetryPkts=wlsrStaTxRetryPkts, wlsrStaTxCtrlPkts=wlsrStaTxCtrlPkts, wlsrFrameType=wlsrFrameType, wlsrStaAddress=wlsrStaAddress, wlsrStaTxPkts256To511=wlsrStaTxPkts256To511, wlsrStaTxPkts1024To1518=wlsrStaTxPkts1024To1518, wlsrAddressType=wlsrAddressType, wlsrTxRates=wlsrTxRates, wlsrSignatureMatch=wlsrSignatureMatch, wlsrStaFrameLowSpeedRate=wlsrStaFrameLowSpeedRate, wlsrTxPower=wlsrTxPower, wlsrStaPolicyViolation=wlsrStaPolicyViolation, wlsrChStatsTotPkts=wlsrChStatsTotPkts, wlsrStaRxPkts=wlsrStaRxPkts, wlsrStaAssociatedToUnsecureAp=wlsrStaAssociatedToUnsecureAp, wlsrChannelPktSizeStatsEntry=wlsrChannelPktSizeStatsEntry, wlsrChStatsPkts1024To1518=wlsrChStatsPkts1024To1518, wlsrChannelRateAnomaly=wlsrChannelRateAnomaly, wlsrStatsGroup=wlsrStatsGroup, wlsrStaTxPkts=wlsrStaTxPkts, wlsrStaTxMgmtPkts=wlsrStaTxMgmtPkts, wlsrChStatsMonitoredTime=wlsrChStatsMonitoredTime, wlsrConfigGroup=wlsrConfigGroup, wlsrChStatsFrameRetryRate=wlsrChStatsFrameRetryRate, wlsrStaTxDataBytes=wlsrStaTxDataBytes, wlsrAPInterferenceDetected=wlsrAPInterferenceDetected, wlsrLoadbalancingDisabled=wlsrLoadbalancingDisabled, wlsrChStatsTotDAUnicastBytes=wlsrChStatsTotDAUnicastBytes, wlsrStaTxBytesAt2Mbps=wlsrStaTxBytesAt2Mbps, wlsrStaRxPktsAt6Mbps=wlsrStaRxPktsAt6Mbps, wlsrStaTxBytesAt18Mbps=wlsrStaTxBytesAt18Mbps, wlsrLoadBalance=wlsrLoadBalance, wlsrMIB=wlsrMIB, wlsrInterferingAPInfoURL=wlsrInterferingAPInfoURL, wlsrChStatsTotDataPkts=wlsrChStatsTotDataPkts, wlsrStaRepeatWEPIVViolation=wlsrStaRepeatWEPIVViolation, wlsrStaTxPktsAt6Mbps=wlsrStaTxPktsAt6Mbps, wlsrStaRxBytesAt36Mbps=wlsrStaRxBytesAt36Mbps, wlsrChannelFrameFragmentationRateExceeded=wlsrChannelFrameFragmentationRateExceeded, wlsrFrameLowSpeedRateExceeded=wlsrFrameLowSpeedRateExceeded, wlsrStaTxSignalPkts=wlsrStaTxSignalPkts, wlsrLocation=wlsrLocation, wlsrAdhocNetworkBridgeDetected=wlsrAdhocNetworkBridgeDetected, wlsrStaFrameTypeStatsTable=wlsrStaFrameTypeStatsTable, wlsrConfigEntry=wlsrConfigEntry, wlsrStaRxPkts128To255=wlsrStaRxPkts128To255, wlsrTrapsGroup=wlsrTrapsGroup, wlsrStaRxPktsAt2Mbps=wlsrStaRxPktsAt2Mbps, wlsrStaFrameFragmentationRate=wlsrStaFrameFragmentationRate, wlsrChStatsNumAPs=wlsrChStatsNumAPs, wlsrHideSSID=wlsrHideSSID, wlsrBeaconInterval=wlsrBeaconInterval, wlsrStaTxPkts512To1023=wlsrStaTxPkts512To1023, wlsrFrameReceiveErrorRateExceeded=wlsrFrameReceiveErrorRateExceeded)
mibBuilder.exportSymbols("WLSR-AP-MIB", wlsrOUIMisconfiguration=wlsrOUIMisconfiguration, wlsrStaRxPktsAt48Mbps=wlsrStaRxPktsAt48Mbps, wlsrStaRxFragmentedPkts=wlsrStaRxFragmentedPkts, wlsrDTIMPeriod=wlsrDTIMPeriod, wlsrChStatsTotPktsAt1Mbps=wlsrChStatsTotPktsAt1Mbps, wlsrConfigTable=wlsrConfigTable, wlsrStaFrameBandwidthRate=wlsrStaFrameBandwidthRate, wlsrStaTxBytesAt24Mbps=wlsrStaTxBytesAt24Mbps, wlsrTargetApSSID=wlsrTargetApSSID, wlsrWEPMisconfiguration=wlsrWEPMisconfiguration, wlsrStaTxPktsAt2Mbps=wlsrStaTxPktsAt2Mbps, wlsrChStatsTotBytesAt11Mbps=wlsrChStatsTotBytesAt11Mbps, wlsrChStatsTotBytesAt12Mbps=wlsrChStatsTotBytesAt12Mbps, wlsrChStatsTotPktsAt2Mbps=wlsrChStatsTotPktsAt2Mbps, wlsrStaFrameRetryErrorRate=wlsrStaFrameRetryErrorRate, wlsrStaTxBytesAt1Mbps=wlsrStaTxBytesAt1Mbps, wlsrStaTxDataPkts=wlsrStaTxDataPkts, wlsrStaRxCtrlBytes=wlsrStaRxCtrlBytes, wlsrStatsChannelGroup=wlsrStatsChannelGroup, wlsrChStatsFrameErrorRate=wlsrChStatsFrameErrorRate, wlsrChStatsTotBytesAt2Mbps=wlsrChStatsTotBytesAt2Mbps, wlsrChannelFrameRetryRateExceeded=wlsrChannelFrameRetryRateExceeded, wlsrChStatsTotDABroadcastPkts=wlsrChStatsTotDABroadcastPkts, wlsrStaRxPktsAt11Mbps=wlsrStaRxPktsAt11Mbps, wlsrStaTxMgmtBytes=wlsrStaTxMgmtBytes, wlsrShortPreableMisconfiguration=wlsrShortPreableMisconfiguration, wlsrChStatsTotDAMulticastPkts=wlsrChStatsTotDAMulticastPkts, wlsrChStatsTotPktsAt11Mbps=wlsrChStatsTotPktsAt11Mbps, wlsrStaRxPktsAt54Mbps=wlsrStaRxPktsAt54Mbps, wlsrAmLoadBalancing=wlsrAmLoadBalancing)
