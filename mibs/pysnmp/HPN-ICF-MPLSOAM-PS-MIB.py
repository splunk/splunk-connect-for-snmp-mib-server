#
# PySNMP MIB module HPN-ICF-MPLSOAM-PS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPLSOAM-PS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, NotificationType, iso, MibIdentifier, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, ObjectIdentity, Bits, IpAddress, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "iso", "MibIdentifier", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "ObjectIdentity", "Bits", "IpAddress", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
hpnicfMplsOamPs = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80))
if mibBuilder.loadTexts: hpnicfMplsOamPs.setLastUpdated('200703310000Z')
if mibBuilder.loadTexts: hpnicfMplsOamPs.setOrganization('')
hpnicfMplsOamPsScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 1))
hpnicfMplsOamPsTrapOpen = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfMplsOamPsTrapOpen.setStatus('current')
hpnicfMplsOamPsTable = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2))
hpnicfMplsPsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1), )
if mibBuilder.loadTexts: hpnicfMplsPsTable.setStatus('current')
hpnicfMplsPsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsIndex"))
if mibBuilder.loadTexts: hpnicfMplsPsEntry.setStatus('current')
hpnicfMplsPsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfMplsPsIndex.setStatus('current')
hpnicfMplsPsGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsGroupID.setStatus('current')
hpnicfMplsPsWorkLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsWorkLspName.setStatus('current')
hpnicfMplsPsProtectLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsProtectLspName.setStatus('current')
hpnicfMplsPsRevertiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsRevertiveMode.setStatus('current')
hpnicfMplsPsWTR = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 6), Integer32()).setUnits('30s').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsWTR.setStatus('current')
hpnicfMplsPsHoldOff = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 7), Integer32()).setUnits('100ms').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsHoldOff.setStatus('current')
hpnicfMplsPsSwitchCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsSwitchCondition.setStatus('current')
hpnicfMplsPsWorkLspDetectState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsPsWorkLspDetectState.setStatus('current')
hpnicfMplsPsWorkLspUpDownState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsPsWorkLspUpDownState.setStatus('current')
hpnicfMplsPsProtLspDetectState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsPsProtLspDetectState.setStatus('current')
hpnicfMplsPsProtLspUpDownState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsPsProtLspUpDownState.setStatus('current')
hpnicfMplsPsSwitchResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfMplsPsSwitchResult.setStatus('current')
hpnicfMplsPsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 2, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfMplsPsRowStatus.setStatus('current')
hpnicfMplsOamPsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 3))
hpnicfMplsPsSwitchPtoW = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 3, 1)).setObjects(("HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsWorkLspName"), ("HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsProtectLspName"), ("HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsSwitchResult"))
if mibBuilder.loadTexts: hpnicfMplsPsSwitchPtoW.setStatus('current')
hpnicfMplsPsSwitchWtoP = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 80, 3, 2)).setObjects(("HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsWorkLspName"), ("HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsProtectLspName"), ("HPN-ICF-MPLSOAM-PS-MIB", "hpnicfMplsPsSwitchResult"))
if mibBuilder.loadTexts: hpnicfMplsPsSwitchWtoP.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MPLSOAM-PS-MIB", hpnicfMplsPsRevertiveMode=hpnicfMplsPsRevertiveMode, hpnicfMplsPsIndex=hpnicfMplsPsIndex, hpnicfMplsPsProtLspDetectState=hpnicfMplsPsProtLspDetectState, hpnicfMplsPsSwitchResult=hpnicfMplsPsSwitchResult, hpnicfMplsPsWTR=hpnicfMplsPsWTR, hpnicfMplsPsGroupID=hpnicfMplsPsGroupID, hpnicfMplsPsTable=hpnicfMplsPsTable, hpnicfMplsPsSwitchCondition=hpnicfMplsPsSwitchCondition, hpnicfMplsOamPs=hpnicfMplsOamPs, hpnicfMplsPsWorkLspDetectState=hpnicfMplsPsWorkLspDetectState, hpnicfMplsOamPsScalarGroup=hpnicfMplsOamPsScalarGroup, hpnicfMplsPsWorkLspUpDownState=hpnicfMplsPsWorkLspUpDownState, hpnicfMplsPsWorkLspName=hpnicfMplsPsWorkLspName, hpnicfMplsPsProtectLspName=hpnicfMplsPsProtectLspName, hpnicfMplsOamPsTable=hpnicfMplsOamPsTable, hpnicfMplsPsHoldOff=hpnicfMplsPsHoldOff, hpnicfMplsPsProtLspUpDownState=hpnicfMplsPsProtLspUpDownState, hpnicfMplsPsEntry=hpnicfMplsPsEntry, hpnicfMplsPsRowStatus=hpnicfMplsPsRowStatus, PYSNMP_MODULE_ID=hpnicfMplsOamPs, hpnicfMplsPsSwitchWtoP=hpnicfMplsPsSwitchWtoP, hpnicfMplsOamPsTrapOpen=hpnicfMplsOamPsTrapOpen, hpnicfMplsOamPsNotifications=hpnicfMplsOamPsNotifications, hpnicfMplsPsSwitchPtoW=hpnicfMplsPsSwitchPtoW)
