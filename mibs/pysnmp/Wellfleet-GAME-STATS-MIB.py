#
# PySNMP MIB module Wellfleet-GAME-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-GAME-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter64, Gauge32, ObjectIdentity, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, IpAddress, NotificationType, Counter32, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "Gauge32", "ObjectIdentity", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "IpAddress", "NotificationType", "Counter32", "Bits", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfGameGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfGameGroup")
wfKernelTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1), )
if mibBuilder.loadTexts: wfKernelTable.setStatus('mandatory')
wfKernelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1), ).setIndexNames((0, "Wellfleet-GAME-STATS-MIB", "wfKernelSlot"))
if mibBuilder.loadTexts: wfKernelEntry.setStatus('mandatory')
wfKernelSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelSlot.setStatus('mandatory')
wfKernelMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemorySize.setStatus('mandatory')
wfKernelMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemoryFree.setStatus('mandatory')
wfKernelMemorySegsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemorySegsTotal.setStatus('mandatory')
wfKernelMemorySegsFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemorySegsFree.setStatus('mandatory')
wfKernelMemoryMaxSegFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemoryMaxSegFree.setStatus('mandatory')
wfKernelBuffersTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBuffersTotal.setStatus('mandatory')
wfKernelBuffersFree = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBuffersFree.setStatus('mandatory')
wfKernelTasksTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTasksTotal.setStatus('mandatory')
wfKernelTasksInQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTasksInQueue.setStatus('mandatory')
wfKernelTimersTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTimersTotal.setStatus('mandatory')
wfKernelTimersActive = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelTimersActive.setStatus('mandatory')
wfKernelBufOwnerTask1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask1.setStatus('mandatory')
wfKernelBufOwnerTask1Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask1Bufs.setStatus('mandatory')
wfKernelBufOwnerTask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask2.setStatus('mandatory')
wfKernelBufOwnerTask2Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask2Bufs.setStatus('mandatory')
wfKernelBufOwnerTask3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask3.setStatus('mandatory')
wfKernelBufOwnerTask3Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask3Bufs.setStatus('mandatory')
wfKernelBufOwnerTask4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask4.setStatus('mandatory')
wfKernelBufOwnerTask4Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask4Bufs.setStatus('mandatory')
wfKernelBufOwnerTask5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask5.setStatus('mandatory')
wfKernelBufOwnerTask5Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask5Bufs.setStatus('mandatory')
wfKernelBufOwnerTask6 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask6.setStatus('mandatory')
wfKernelBufOwnerTask6Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask6Bufs.setStatus('mandatory')
wfKernelBufOwnerTask7 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask7.setStatus('mandatory')
wfKernelBufOwnerTask7Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask7Bufs.setStatus('mandatory')
wfKernelBufOwnerTask8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask8.setStatus('mandatory')
wfKernelBufOwnerTask8Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask8Bufs.setStatus('mandatory')
wfKernelBufOwnerTask9 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask9.setStatus('mandatory')
wfKernelBufOwnerTask9Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask9Bufs.setStatus('mandatory')
wfKernelBufOwnerTask10 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask10.setStatus('mandatory')
wfKernelBufOwnerTask10Bufs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBufOwnerTask10Bufs.setStatus('mandatory')
wfKernelMemOwnerTask1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask1.setStatus('mandatory')
wfKernelMemOwnerTask1Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask1Size.setStatus('mandatory')
wfKernelMemOwnerTask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask2.setStatus('mandatory')
wfKernelMemOwnerTask2Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask2Size.setStatus('mandatory')
wfKernelMemOwnerTask3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask3.setStatus('mandatory')
wfKernelMemOwnerTask3Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask3Size.setStatus('mandatory')
wfKernelMemOwnerTask4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask4.setStatus('mandatory')
wfKernelMemOwnerTask4Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask4Size.setStatus('mandatory')
wfKernelMemOwnerTask5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask5.setStatus('mandatory')
wfKernelMemOwnerTask5Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask5Size.setStatus('mandatory')
wfKernelMemOwnerTask6 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask6.setStatus('mandatory')
wfKernelMemOwnerTask6Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask6Size.setStatus('mandatory')
wfKernelMemOwnerTask7 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask7.setStatus('mandatory')
wfKernelMemOwnerTask7Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask7Size.setStatus('mandatory')
wfKernelMemOwnerTask8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask8.setStatus('mandatory')
wfKernelMemOwnerTask8Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask8Size.setStatus('mandatory')
wfKernelMemOwnerTask9 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask9.setStatus('mandatory')
wfKernelMemOwnerTask9Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask9Size.setStatus('mandatory')
wfKernelMemOwnerTask10 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask10.setStatus('mandatory')
wfKernelMemOwnerTask10Size = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemOwnerTask10Size.setStatus('mandatory')
wfKernelAliasBuffsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelAliasBuffsDropped.setStatus('mandatory')
wfKernelBallocFail = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelBallocFail.setStatus('mandatory')
wfKernelReplenEmpty = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelReplenEmpty.setStatus('mandatory')
wfKernelMemoryFreeLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelMemoryFreeLow.setStatus('mandatory')
wfKernelAliasNoMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelAliasNoMembers.setStatus('mandatory')
wfKernParamTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 2), )
if mibBuilder.loadTexts: wfKernParamTable.setStatus('mandatory')
wfKernParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 2, 1), ).setIndexNames((0, "Wellfleet-GAME-STATS-MIB", "wfKernParamSlot"))
if mibBuilder.loadTexts: wfKernParamEntry.setStatus('mandatory')
wfKernParamSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernParamSlot.setStatus('mandatory')
wfKernParamTotMem = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernParamTotMem.setStatus('mandatory')
wfKernParamLocMem = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernParamLocMem.setStatus('mandatory')
wfKernParamGlobMem = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernParamGlobMem.setStatus('mandatory')
wfKernCfgParamTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3), )
if mibBuilder.loadTexts: wfKernCfgParamTable.setStatus('mandatory')
wfKernCfgParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1), ).setIndexNames((0, "Wellfleet-GAME-STATS-MIB", "wfKernCfgParamSlot"))
if mibBuilder.loadTexts: wfKernCfgParamEntry.setStatus('mandatory')
wfKernCfgParamDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernCfgParamDelete.setStatus('mandatory')
wfKernCfgParamSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernCfgParamSlot.setStatus('mandatory')
wfKernCfgParamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernCfgParamStatus.setStatus('mandatory')
wfKernCfgParamLocMem = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernCfgParamLocMem.setStatus('mandatory')
wfKernCfgParamGlobMem = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernCfgParamGlobMem.setStatus('mandatory')
wfKernCfgParamGlobMemReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernCfgParamGlobMemReset.setStatus('mandatory')
wfKernCfgParamBufSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernCfgParamBufSize.setStatus('mandatory')
wfKernCfgParamBufSizeReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernCfgParamBufSizeReset.setStatus('mandatory')
wfKernelSysCfgTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 5), )
if mibBuilder.loadTexts: wfKernelSysCfgTable.setStatus('mandatory')
wfKernelSysCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 5, 1), ).setIndexNames((0, "Wellfleet-GAME-STATS-MIB", "wfKernelSysCfgSlot"))
if mibBuilder.loadTexts: wfKernelSysCfgEntry.setStatus('mandatory')
wfKernelSysCfgDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernelSysCfgDelete.setStatus('mandatory')
wfKernelSysCfgSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfKernelSysCfgSlot.setStatus('mandatory')
wfKernelSysCfgLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 5, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfKernelSysCfgLogging.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-GAME-STATS-MIB", wfKernelMemOwnerTask1=wfKernelMemOwnerTask1, wfKernelBufOwnerTask5Bufs=wfKernelBufOwnerTask5Bufs, wfKernelBufOwnerTask6Bufs=wfKernelBufOwnerTask6Bufs, wfKernelTimersActive=wfKernelTimersActive, wfKernelBufOwnerTask3Bufs=wfKernelBufOwnerTask3Bufs, wfKernCfgParamBufSize=wfKernCfgParamBufSize, wfKernelMemOwnerTask6=wfKernelMemOwnerTask6, wfKernelSysCfgLogging=wfKernelSysCfgLogging, wfKernelBufOwnerTask2=wfKernelBufOwnerTask2, wfKernelBufOwnerTask8Bufs=wfKernelBufOwnerTask8Bufs, wfKernelTasksTotal=wfKernelTasksTotal, wfKernelBufOwnerTask1Bufs=wfKernelBufOwnerTask1Bufs, wfKernelBufOwnerTask3=wfKernelBufOwnerTask3, wfKernelBuffersFree=wfKernelBuffersFree, wfKernelMemOwnerTask7Size=wfKernelMemOwnerTask7Size, wfKernelMemOwnerTask3Size=wfKernelMemOwnerTask3Size, wfKernelBufOwnerTask5=wfKernelBufOwnerTask5, wfKernelBufOwnerTask1=wfKernelBufOwnerTask1, wfKernelMemOwnerTask4Size=wfKernelMemOwnerTask4Size, wfKernelBufOwnerTask4=wfKernelBufOwnerTask4, wfKernelBufOwnerTask9Bufs=wfKernelBufOwnerTask9Bufs, wfKernelTimersTotal=wfKernelTimersTotal, wfKernCfgParamGlobMemReset=wfKernCfgParamGlobMemReset, wfKernelBufOwnerTask2Bufs=wfKernelBufOwnerTask2Bufs, wfKernelMemOwnerTask7=wfKernelMemOwnerTask7, wfKernParamTotMem=wfKernParamTotMem, wfKernelMemOwnerTask8Size=wfKernelMemOwnerTask8Size, wfKernelSysCfgEntry=wfKernelSysCfgEntry, wfKernelBufOwnerTask10=wfKernelBufOwnerTask10, wfKernCfgParamGlobMem=wfKernCfgParamGlobMem, wfKernelAliasNoMembers=wfKernelAliasNoMembers, wfKernelBufOwnerTask7Bufs=wfKernelBufOwnerTask7Bufs, wfKernelMemOwnerTask5=wfKernelMemOwnerTask5, wfKernelMemoryMaxSegFree=wfKernelMemoryMaxSegFree, wfKernelMemOwnerTask5Size=wfKernelMemOwnerTask5Size, wfKernelMemOwnerTask2=wfKernelMemOwnerTask2, wfKernelSysCfgDelete=wfKernelSysCfgDelete, wfKernParamLocMem=wfKernParamLocMem, wfKernelTable=wfKernelTable, wfKernCfgParamLocMem=wfKernCfgParamLocMem, wfKernelMemoryFree=wfKernelMemoryFree, wfKernelMemOwnerTask9Size=wfKernelMemOwnerTask9Size, wfKernelBufOwnerTask9=wfKernelBufOwnerTask9, wfKernelBufOwnerTask10Bufs=wfKernelBufOwnerTask10Bufs, wfKernelMemOwnerTask6Size=wfKernelMemOwnerTask6Size, wfKernelMemorySize=wfKernelMemorySize, wfKernParamTable=wfKernParamTable, wfKernelReplenEmpty=wfKernelReplenEmpty, wfKernelMemOwnerTask4=wfKernelMemOwnerTask4, wfKernCfgParamDelete=wfKernCfgParamDelete, wfKernParamSlot=wfKernParamSlot, wfKernelSysCfgSlot=wfKernelSysCfgSlot, wfKernParamGlobMem=wfKernParamGlobMem, wfKernelBufOwnerTask8=wfKernelBufOwnerTask8, wfKernelMemOwnerTask10=wfKernelMemOwnerTask10, wfKernelMemOwnerTask2Size=wfKernelMemOwnerTask2Size, wfKernelMemorySegsFree=wfKernelMemorySegsFree, wfKernelAliasBuffsDropped=wfKernelAliasBuffsDropped, wfKernelBallocFail=wfKernelBallocFail, wfKernCfgParamSlot=wfKernCfgParamSlot, wfKernelBufOwnerTask7=wfKernelBufOwnerTask7, wfKernelSysCfgTable=wfKernelSysCfgTable, wfKernCfgParamStatus=wfKernCfgParamStatus, wfKernelMemOwnerTask10Size=wfKernelMemOwnerTask10Size, wfKernelMemoryFreeLow=wfKernelMemoryFreeLow, wfKernelSlot=wfKernelSlot, wfKernelBufOwnerTask4Bufs=wfKernelBufOwnerTask4Bufs, wfKernelBuffersTotal=wfKernelBuffersTotal, wfKernelMemOwnerTask9=wfKernelMemOwnerTask9, wfKernCfgParamEntry=wfKernCfgParamEntry, wfKernelEntry=wfKernelEntry, wfKernCfgParamTable=wfKernCfgParamTable, wfKernelMemOwnerTask3=wfKernelMemOwnerTask3, wfKernelMemOwnerTask8=wfKernelMemOwnerTask8, wfKernCfgParamBufSizeReset=wfKernCfgParamBufSizeReset, wfKernParamEntry=wfKernParamEntry, wfKernelBufOwnerTask6=wfKernelBufOwnerTask6, wfKernelMemOwnerTask1Size=wfKernelMemOwnerTask1Size, wfKernelMemorySegsTotal=wfKernelMemorySegsTotal, wfKernelTasksInQueue=wfKernelTasksInQueue)
