#
# PySNMP MIB module SWITCHING-EXTENSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SWITCHING-EXTENSION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:05:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
dot1qFdbId, VlanIndex, dot1qVlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qFdbId", "VlanIndex", "dot1qVlanIndex")
quanta, AgentPortMask, switch = mibBuilder.importSymbols("QUANTA-SWITCH-MIB", "quanta", "AgentPortMask", "switch")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, Counter32, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, MibIdentifier, TimeTicks, Unsigned32, Counter64, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Counter32", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "MibIdentifier", "TimeTicks", "Unsigned32", "Counter64", "ObjectIdentity", "ModuleIdentity")
TimeStamp, TextualConvention, RowStatus, MacAddress, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "RowStatus", "MacAddress", "PhysAddress", "DisplayString")
VlanList, = mibBuilder.importSymbols("SWITCHING-MIB", "VlanList")
switchingExtension = ModuleIdentity((1, 3, 6, 1, 4, 1, 7244, 2, 101))
if mibBuilder.loadTexts: switchingExtension.setLastUpdated('200803310000Z')
if mibBuilder.loadTexts: switchingExtension.setOrganization('Quanta Computer Inc.')
agentInfoGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1))
agentInventoryGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1))
agentInventroyHardwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 100), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventroyHardwareVersion.setStatus('current')
agentInventoryLoaderVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 102), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryLoaderVersion.setStatus('current')
agentInventoryBootRomVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryBootRomVersion.setStatus('current')
agentInventoryOpCodeVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 104), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryOpCodeVersion.setStatus('current')
agentInventoryLabelRevNumber = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 105), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentInventoryLabelRevNumber.setStatus('current')
agentTemperatureFanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106), )
if mibBuilder.loadTexts: agentTemperatureFanStatusTable.setStatus('current')
agentTemperatureFanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentTemperatureFanUnitIndex"))
if mibBuilder.loadTexts: agentTemperatureFanStatusEntry.setStatus('current')
agentTemperatureFanUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperatureFanUnitIndex.setStatus('current')
agentTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperature.setStatus('current')
agentTemperature1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperature1.setStatus('current')
agentTemperature2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperature2.setStatus('current')
agentTemperature3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperature3.setStatus('current')
agentTemperature4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperature4.setStatus('current')
agentTemperature5 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTemperature5.setStatus('current')
agentFAN1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFAN1.setStatus('current')
agentFAN2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFAN2.setStatus('current')
agentFAN3 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFAN3.setStatus('current')
agentFAN4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFAN4.setStatus('current')
agentFANChipType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 106, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFANChipType.setStatus('current')
agentPowerSupplyStatusTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107), )
if mibBuilder.loadTexts: agentPowerSupplyStatusTable.setStatus('current')
agentPowerSupplyStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentPowerSupplyUnitIndex"))
if mibBuilder.loadTexts: agentPowerSupplyStatusEntry.setStatus('current')
agentPowerSupplyUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyUnitIndex.setStatus('current')
agentPowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("notpresent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyStatus.setStatus('current')
agentPowerSupplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyName.setStatus('current')
agentPowerSupplyModel = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyModel.setStatus('current')
agentPowerSupplyRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyRevisionNumber.setStatus('current')
agentPowerSupplyManufacturerLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyManufacturerLocation.setStatus('current')
agentPowerSupplyManufacturingDate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyManufacturingDate.setStatus('current')
agentPowerSupplySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplySerialNumber.setStatus('current')
agentPowerSupplyTemperature1 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyTemperature1.setStatus('current')
agentPowerSupplyTemperature2 = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyTemperature2.setStatus('current')
agentPowerSupplyFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyFanSpeed.setStatus('current')
agentPowerSupplyFanDuty = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerSupplyFanDuty.setStatus('current')
agentPowerConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 107, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPowerConsumption.setStatus('current')
agentDOMTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108), )
if mibBuilder.loadTexts: agentDOMTable.setStatus('current')
agentDOMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentDOMtransceiverIndex"))
if mibBuilder.loadTexts: agentDOMEntry.setStatus('current')
agentDOMtransceiverIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtransceiverIndex.setStatus('current')
agentDOMTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMTemperature.setStatus('current')
agentDOMVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMVoltage.setStatus('current')
agentDOMBias = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMBias.setStatus('current')
agentDOMTxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMTxpower.setStatus('current')
agentDOMRxpower = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMRxpower.setStatus('current')
agentDOMtemperatureHighAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtemperatureHighAlarm.setStatus('current')
agentDOMtemperatureHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtemperatureHighWarning.setStatus('current')
agentDOMtemperatureLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtemperatureLowWarning.setStatus('current')
agentDOMtemperatureLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtemperatureLowAlarm.setStatus('current')
agentDOMvotageHighAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMvotageHighAlarm.setStatus('current')
agentDOMvotageHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMvotageHighWarning.setStatus('current')
agentDOMvotageLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMvotageLowWarning.setStatus('current')
agentDOMvotageLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMvotageLowAlarm.setStatus('current')
agentDOMbiasHighAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMbiasHighAlarm.setStatus('current')
agentDOMbiasHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMbiasHighWarning.setStatus('current')
agentDOMbiasLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMbiasLowWarning.setStatus('current')
agentDOMbiasLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMbiasLowAlarm.setStatus('current')
agentDOMtxpowerHighAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtxpowerHighAlarm.setStatus('current')
agentDOMtxpowerHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtxpowerHighWarning.setStatus('current')
agentDOMtxpowerLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtxpowerLowWarning.setStatus('current')
agentDOMtxpowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMtxpowerLowAlarm.setStatus('current')
agentDOMrxpowerHighAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMrxpowerHighAlarm.setStatus('current')
agentDOMrxpowerHighWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMrxpowerHighWarning.setStatus('current')
agentDOMrxpowerLowWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMrxpowerLowWarning.setStatus('current')
agentDOMrxpowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 1, 108, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDOMrxpowerLowAlarm.setStatus('current')
agentDOMGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 100))
agentDOMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 100, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDOMAdminMode.setStatus('current')
agentDOMInterval = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 100, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 1800)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDOMInterval.setStatus('current')
agent10GModuleInfoGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2))
agent10GModuleTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107), )
if mibBuilder.loadTexts: agent10GModuleTable.setStatus('current')
agent10GModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agent10GModuleUnitIndex"), (0, "SWITCHING-EXTENSION-MIB", "agent10GModuleSlotIndex"), (0, "SWITCHING-EXTENSION-MIB", "agent10GModulePortIndex"))
if mibBuilder.loadTexts: agent10GModuleEntry.setStatus('current')
agent10GModuleUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleUnitIndex.setStatus('current')
agent10GModuleSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleSlotIndex.setStatus('current')
agent10GModulePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModulePortIndex.setStatus('current')
agent10GModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleIndex.setStatus('current')
agent10GModuleInterfaceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleInterfaceNumber.setStatus('current')
agent10GModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleType.setStatus('current')
agent10GModuleComplianceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleComplianceCode.setStatus('current')
agent10GModuleVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleVendorName.setStatus('current')
agent10GModulePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModulePartNumber.setStatus('current')
agent10GModuleSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleSerialNumber.setStatus('current')
agent10GModuleRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleRevisionNumber.setStatus('current')
agent10GModuleManufacturingDate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 2, 107, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agent10GModuleManufacturingDate.setStatus('current')
agentGBICInfoTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3), )
if mibBuilder.loadTexts: agentGBICInfoTable.setStatus('current')
agentGBICInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentGBICInfoIndex"))
if mibBuilder.loadTexts: agentGBICInfoEntry.setStatus('current')
agentGBICInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoIndex.setStatus('current')
agentGBICInfoInterfaceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoInterfaceNumber.setStatus('current')
agentGBICInfoComplianceCode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoComplianceCode.setStatus('current')
agentGBICInfoVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoVendorName.setStatus('current')
agentGBICInfoPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoPartNumber.setStatus('current')
agentGBICInfoSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoSerialNumber.setStatus('current')
agentGBICInfoRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoRevisionNumber.setStatus('current')
agentGBICInfoManufacturingDate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 1, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentGBICInfoManufacturingDate.setStatus('current')
agentConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2))
agentCLIConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1))
agentSerialGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 5))
agentSerialPasswdCnt = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 5, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialPasswdCnt.setStatus('current')
agentSerialPasswdCntSetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 5, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialPasswdCntSetToDefault.setStatus('current')
agentSerialSilentTime = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 5, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialSilentTime.setStatus('current')
agentSerialSilentTimeSetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 5, 103), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSerialSilentTimeSetToDefault.setStatus('current')
agentVtyGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 6))
agentVtyTelnetServerAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 6, 103), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVtyTelnetServerAdminMode.setStatus('current')
agentVtyPasswdCnt = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 6, 104), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVtyPasswdCnt.setStatus('current')
agentVtyPasswdCntSetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 6, 105), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVtyPasswdCntSetToDefault.setStatus('current')
agentVtyTerminalLength = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 6, 106), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVtyTerminalLength.setStatus('current')
agentVtyTerminalLengthSetToDefault = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 1, 6, 107), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVtyTerminalLengthSetToDefault.setStatus('current')
agentNetworkConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 3))
agentNetworkHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 3, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkHttpPort.setStatus('current')
agentNetworkDhcpClientIfClientIdFormat = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 3, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hexformat", 1), ("textformat", 2))).clone('hexformat')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDhcpClientIfClientIdFormat.setStatus('current')
agentNetworkDhcpClientIfClientId = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 3, 102), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDhcpClientIfClientId.setStatus('current')
agentNetworkDhcpSetToInventoryClientIfClientId = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 3, 103), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDhcpSetToInventoryClientIfClientId.setStatus('current')
agentNetworkDhcpRestart = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 3, 104), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restart", 1), ("noRestart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentNetworkDhcpRestart.setStatus('obsolete')
agentSwitchConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8))
agentIPFilterConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10))
agentIPFilterConfigAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIPFilterConfigAdminMode.setStatus('current')
agentIpFilterConfigCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpFilterConfigCreate.setStatus('current')
agentIpFilterConfigDelete = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpFilterConfigDelete.setStatus('current')
agentIpFilterConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 30), )
if mibBuilder.loadTexts: agentIpFilterConfigTable.setStatus('current')
agentIpFilterConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 30, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentIpFilterConfigIndex"))
if mibBuilder.loadTexts: agentIpFilterConfigEntry.setStatus('current')
agentIpFilterConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpFilterConfigIndex.setStatus('current')
agentIpFilterConfigIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 30, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpFilterConfigIP.setStatus('current')
agentIpFilterConfigMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 30, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpFilterConfigMask.setStatus('current')
agentIpFilterConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 10, 30, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpFilterConfigName.setStatus('current')
agentTransferConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9))
agentTransferCopyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 3))
agentTransferCopyRunningConfigToSwitchDestFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferCopyRunningConfigToSwitchDestFilename.setStatus('current')
agentTransferCopyRunningConfigStart = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferCopyRunningConfigStart.setStatus('current')
agentTransferCopyRunningConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 4, 15, 16))).clone(namedValues=NamedValues(("success", 0), ("failure", 1), ("wrongFileType", 4), ("noPartitionTableEntry", 15), ("runByOtherUsers", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferCopyRunningConfigStatus.setStatus('current')
agentTransferDeleteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 4))
agentTransferDeleteSwitchFilename = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDeleteSwitchFilename.setStatus('current')
agentTransferDeleteStart = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentTransferDeleteStart.setStatus('current')
agentTransferDeleteStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 9, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("success", 0), ("failure", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentTransferDeleteStatus.setStatus('current')
agentStormContorlConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18))
agentSwitchBroadcastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBroadcastControlMode.setStatus('current')
agentSwitchMulticastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMulticastControlMode.setStatus('current')
agentSwitchUnicastControlMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUnicastControlMode.setStatus('current')
agentSwitchDot3FlowControlMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchDot3FlowControlMode.setStatus('current')
agentSwitchStormControlBroadcastTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 10), )
if mibBuilder.loadTexts: agentSwitchStormControlBroadcastTable.setStatus('current')
agentSwitchStormControlBroadcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 10, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentSwitchBcastStormIfIndex"))
if mibBuilder.loadTexts: agentSwitchStormControlBroadcastEntry.setStatus('current')
agentSwitchBcastStormIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchBcastStormIfIndex.setStatus('current')
agentSwitchBcastStormExtensionPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 14880000)).clone(4160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBcastStormExtensionPktRate.setStatus('current')
agentSwitchBcastStormExtensionAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchBcastStormExtensionAdminMode.setStatus('current')
agentSwitchStormControlMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 20), )
if mibBuilder.loadTexts: agentSwitchStormControlMulticastTable.setStatus('current')
agentSwitchStormControlMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 20, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentSwitchMcastStormIfIndex"))
if mibBuilder.loadTexts: agentSwitchStormControlMulticastEntry.setStatus('current')
agentSwitchMcastStormIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchMcastStormIfIndex.setStatus('current')
agentSwitchMcastStormExtensionPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 14880000)).clone(4160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMcastStormExtensionPktRate.setStatus('current')
agentSwitchMcastStormExtensionAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchMcastStormExtensionAdminMode.setStatus('current')
agentSwitchStormControlUnicastTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 30), )
if mibBuilder.loadTexts: agentSwitchStormControlUnicastTable.setStatus('current')
agentSwitchStormControlUnicastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 30, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentSwitchUcastStormIfIndex"))
if mibBuilder.loadTexts: agentSwitchStormControlUnicastEntry.setStatus('current')
agentSwitchUcastStormIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchUcastStormIfIndex.setStatus('current')
agentSwitchUcastStormExtensionPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 30, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 14880000)).clone(4160)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUcastStormExtensionPktRate.setStatus('current')
agentSwitchUcastStormExtensionAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 30, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchUcastStormExtensionAdminMode.setStatus('current')
agentSwitchFlowControlTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 40), )
if mibBuilder.loadTexts: agentSwitchFlowControlTable.setStatus('current')
agentSwitchFlowControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 40, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentSwitchFlowControlIfIndex"))
if mibBuilder.loadTexts: agentSwitchFlowControlEntry.setStatus('current')
agentSwitchFlowControlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchFlowControlIfIndex.setStatus('current')
agentSwitchFlowControlAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 40, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchFlowControlAdminMode.setStatus('current')
agentSwitchStormControlActionTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 50), )
if mibBuilder.loadTexts: agentSwitchStormControlActionTable.setStatus('current')
agentSwitchStormControlActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 50, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentSwitchStormControlActionIfIndex"))
if mibBuilder.loadTexts: agentSwitchStormControlActionEntry.setStatus('current')
agentSwitchStormControlActionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchStormControlActionIfIndex.setStatus('current')
agentSwitchStormControlActionShutdownMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 50, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStormControlActionShutdownMode.setStatus('current')
agentSwitchStormControlActionTrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 18, 50, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchStormControlActionTrapMode.setStatus('current')
agentErrRecoveryConfigGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28))
agentErrRecoveryInterval = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 86400)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryInterval.setStatus('current')
agentErrRecoveryStormCtrlCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryStormCtrlCauseMode.setStatus('current')
agentErrRecoveryUdldCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryUdldCauseMode.setStatus('current')
agentErrRecoveryPortSecurityCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryPortSecurityCauseMode.setStatus('current')
agentErrRecoveryBpduCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryBpduCauseMode.setStatus('current')
agentErrRecoveryLinkFlapCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryLinkFlapCauseMode.setStatus('current')
agentErrRecoveryMacFlapCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrRecoveryMacFlapCauseMode.setStatus('current')
agentErrDetectLinkFlapCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrDetectLinkFlapCauseMode.setStatus('current')
agentErrDetectMacFlapCauseMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 28, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentErrDetectMacFlapCauseMode.setStatus('current')
agentPortConfigExtensionTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13), )
if mibBuilder.loadTexts: agentPortConfigExtensionTable.setStatus('current')
agentPortConfigExtensionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentPortConfigExtensionIfIndex"))
if mibBuilder.loadTexts: agentPortConfigExtensionEntry.setStatus('current')
agentPortConfigExtensionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortConfigExtensionIfIndex.setStatus('current')
agentPortConfigExtensionAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortConfigExtensionAdminMode.setStatus('current')
agentPortConfigExtensionLinkTrapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortConfigExtensionLinkTrapMode.setStatus('current')
agentPortConfigExtensionClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortConfigExtensionClearStats.setStatus('current')
agentPortConfigExtensionMaxFrameSizeLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1518, 12288))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortConfigExtensionMaxFrameSizeLimit.setStatus('current')
agentPortConfigExtensionMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 13, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1518, 12288))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortConfigExtensionMaxFrameSize.setStatus('current')
agentSwitchSnoopingGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6))
agentIgmpSnoopL2MulticastStaticTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112), )
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticTable.setStatus('current')
agentIgmpSnoopL2MulticastStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentIgmpSnoopL2MulticastStaticIndex"))
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticEntry.setStatus('current')
agentIgmpSnoopL2MulticastStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticIndex.setStatus('current')
agentIgmpSnoopL2MulticastStaticVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticVlanId.setStatus('current')
agentIgmpSnoopL2MulticastStaticMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticMacAddress.setStatus('current')
agentIgmpSnoopL2MulticastStaticMemberPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 4), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticMemberPortMask.setStatus('current')
agentIgmpSnoopL2MulticastStaticActivePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 5), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticActivePortMask.setStatus('current')
agentIgmpSnoopL2MulticastStaticMemberPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticMemberPorts.setStatus('current')
agentIgmpSnoopL2MulticastStaticActivePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 112, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIgmpSnoopL2MulticastStaticActivePorts.setStatus('current')
agentMldSnoopL2MulticastStaticTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113), )
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticTable.setStatus('current')
agentMldSnoopL2MulticastStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentMldSnoopL2MulticastStaticIndex"))
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticEntry.setStatus('current')
agentMldSnoopL2MulticastStaticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticIndex.setStatus('current')
agentMldSnoopL2MulticastStaticVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticVlanId.setStatus('current')
agentMldSnoopL2MulticastStaticMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticMacAddress.setStatus('current')
agentMldSnoopL2MulticastStaticMemberPortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 4), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticMemberPortMask.setStatus('current')
agentMldSnoopL2MulticastStaticActivePortMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 5), AgentPortMask().clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticActivePortMask.setStatus('current')
agentMldSnoopL2MulticastStaticMemberPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticMemberPorts.setStatus('current')
agentMldSnoopL2MulticastStaticActivePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 2, 8, 6, 113, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMldSnoopL2MulticastStaticActivePorts.setStatus('current')
agentSwitchCurrBootFilesGroupExtension = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103))
agentSwitchCurrBootRomFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCurrBootRomFileName.setStatus('current')
agentSwitchCurrBootLoaderFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCurrBootLoaderFileName.setStatus('current')
agentSwitchCurrBootConfigFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCurrBootConfigFileName.setStatus('current')
agentSwitchCurrBootOpCodeFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentSwitchCurrBootOpCodeFileName.setStatus('current')
agentSwitchCurrUBootFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCurrUBootFileName.setStatus('current')
agentSwitchCurrKernelFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCurrKernelFileName.setStatus('current')
agentSwitchCurrVMTracerFileName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 103, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentSwitchCurrVMTracerFileName.setStatus('current')
agentLinkStateConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15))
agentLinkStateConfigAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLinkStateConfigAdminMode.setStatus('current')
agentLinkStateGroupTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2), )
if mibBuilder.loadTexts: agentLinkStateGroupTable.setStatus('current')
agentLinkStateGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentLinkStateGroupId"))
if mibBuilder.loadTexts: agentLinkStateGroupEntry.setStatus('current')
agentLinkStateGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentLinkStateGroupId.setStatus('current')
agentLinkStateGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLinkStateGroupMode.setStatus('current')
agentLinkStateGroupUpstreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLinkStateGroupUpstreamPort.setStatus('current')
agentLinkStateGroupDownstreamPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentLinkStateGroupDownstreamPort.setStatus('current')
agentLinkStateGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 15, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentLinkStateGroupStatus.setStatus('current')
agentPortBackupConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16))
agentPortBackupConfigAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBackupConfigAdminMode.setStatus('current')
agentPortBackupGroupTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2), )
if mibBuilder.loadTexts: agentPortBackupGroupTable.setStatus('current')
agentPortBackupGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentPortBackupGroupId"))
if mibBuilder.loadTexts: agentPortBackupGroupEntry.setStatus('current')
agentPortBackupGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentPortBackupGroupId.setStatus('current')
agentPortBackupGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBackupGroupMode.setStatus('current')
agentPortBackupGroupActivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBackupGroupActivePort.setStatus('current')
agentPortBackupGroupBackupPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBackupGroupBackupPort.setStatus('current')
agentMacMoveUpdatetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMacMoveUpdatetMode.setStatus('current')
agentPortBackupGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentPortBackupGroupStatus.setStatus('current')
agentPortBackupGroupFailBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentPortBackupGroupFailBackTime.setStatus('current')
agentCDPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110))
agentCDPConfigAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCDPConfigAdminMode.setStatus('current')
agentCDPConfigTimeToLive = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCDPConfigTimeToLive.setStatus('current')
agentCDPConfigTransmitInterval = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCDPConfigTransmitInterval.setStatus('current')
agentCDPConfigNumInPkts = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNumInPkts.setStatus('current')
agentCDPConfigNumOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNumOutPkts.setStatus('current')
agentCDPConfigNumErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNumErrPkts.setStatus('current')
agentCDPConfigResetNumPkts = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCDPConfigResetNumPkts.setStatus('current')
agentCDPConfigResetDeviceInformation = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCDPConfigResetDeviceInformation.setStatus('current')
agentCDPConfigPortModeTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 10), )
if mibBuilder.loadTexts: agentCDPConfigPortModeTable.setStatus('current')
agentCDPConfigPortModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 10, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentCDPConfigPortModeIfIndex"))
if mibBuilder.loadTexts: agentCDPConfigPortModeEntry.setStatus('current')
agentCDPConfigPortModeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigPortModeIfIndex.setStatus('current')
agentCDPConfigPortModeAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentCDPConfigPortModeAdminMode.setStatus('current')
agentCDPConfigNeighborInfoTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20), )
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoTable.setStatus('current')
agentCDPConfigNeighborInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentCDPConfigNeighborInfoIndex"))
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoEntry.setStatus('current')
agentCDPConfigNeighborInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoIndex.setStatus('current')
agentCDPConfigNeighborInfoDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoDeviceID.setStatus('current')
agentCDPConfigNeighborInfoLocalIF = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoLocalIF.setStatus('current')
agentCDPConfigNeighborInfoHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoHoldTime.setStatus('current')
agentCDPConfigNeighborInfoCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoCapability.setStatus('current')
agentCDPConfigNeighborInfoPlatform = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoPlatform.setStatus('current')
agentCDPConfigNeighborInfoPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoPortID.setStatus('current')
agentCDPConfigNeighborInfoManagementAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 110, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCDPConfigNeighborInfoManagementAddress.setStatus('current')
agentVlanVoiceConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111))
agentVlanVoiceVlanIDCreate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4093))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoiceVlanIDCreate.setStatus('current')
agentVlanVoiceAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoiceAdminMode.setStatus('current')
agentVlanVoiceMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoiceMacAddress.setStatus('current')
agentVlanVoiceMacMask = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(128, 128), ValueRangeConstraint(192, 192), ValueRangeConstraint(224, 224), ValueRangeConstraint(240, 240), ValueRangeConstraint(248, 248), ValueRangeConstraint(252, 252), ValueRangeConstraint(254, 254), ValueRangeConstraint(255, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoiceMacMask.setStatus('current')
agentVlanVoicePriority = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoicePriority.setStatus('current')
agentVlanVoiceName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoiceName.setStatus('current')
agentVlanVoiceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7), )
if mibBuilder.loadTexts: agentVlanVoiceConfigTable.setStatus('current')
agentVlanVoiceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentVlanVoiceConfigIndex"))
if mibBuilder.loadTexts: agentVlanVoiceConfigEntry.setStatus('current')
agentVlanVoiceConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVlanVoiceConfigIndex.setStatus('current')
agentVlanVoiceConfigName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVlanVoiceConfigName.setStatus('current')
agentVlanVoiceConfigMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVlanVoiceConfigMacAddress.setStatus('current')
agentVlanVoiceConfigMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(128, 128), ValueRangeConstraint(192, 192), ValueRangeConstraint(224, 224), ValueRangeConstraint(240, 240), ValueRangeConstraint(248, 248), ValueRangeConstraint(252, 252), ValueRangeConstraint(254, 254), ValueRangeConstraint(255, 255), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVlanVoiceConfigMacMask.setStatus('current')
agentVlanVoiceConfigPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVlanVoiceConfigPriority.setStatus('current')
agentVlanVoiceConfigDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 111, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVlanVoiceConfigDelete.setStatus('current')
agentVoiceVlanConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114))
agentVoiceVlanAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVoiceVlanAdminMode.setStatus('current')
agentVoiceVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2), )
if mibBuilder.loadTexts: agentVoiceVlanConfigTable.setStatus('current')
agentVoiceVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentVoiceVlanConfigIndex"))
if mibBuilder.loadTexts: agentVoiceVlanConfigEntry.setStatus('current')
agentVoiceVlanConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4093))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVoiceVlanConfigIndex.setStatus('current')
agentVoiceVlanConfigIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 0), ("vlanid", 1), ("dot1p", 2), ("none", 3), ("untagged", 4))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVoiceVlanConfigIfMode.setStatus('current')
agentVoiceVlanConfigIfModeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVoiceVlanConfigIfModeValue.setStatus('current')
agentVoiceVlanConfigCosOverrideMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVoiceVlanConfigCosOverrideMode.setStatus('current')
agentVoiceVlanConfigOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 114, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVoiceVlanConfigOperState.setStatus('current')
agentVTPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115))
agentVTPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPAdminMode.setStatus('current')
agentVTPVersion = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPVersion.setStatus('current')
agentVTPConfigRevision = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPConfigRevision.setStatus('current')
agentVTPMaxVlanNumSupported = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPMaxVlanNumSupported.setStatus('current')
agentVTPVlanNumSupported = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPVlanNumSupported.setStatus('current')
agentVTPOperatingMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("server", 0), ("client", 1), ("transparent", 2))).clone('server')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPOperatingMode.setStatus('current')
agentVTPDomainName = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPDomainName.setStatus('current')
agentVTPPruningMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPPruningMode.setStatus('current')
agentVTPDomainPassword = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPDomainPassword.setStatus('current')
agentVTPV2Mode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPV2Mode.setStatus('current')
agentVTPMD5Digest = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPMD5Digest.setStatus('current')
agentVTPConfigLastModified = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPConfigLastModified.setStatus('current')
agentVTPLocalUpdaterID = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVTPLocalUpdaterID.setStatus('current')
agentVTPPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 14), )
if mibBuilder.loadTexts: agentVTPPortConfigTable.setStatus('current')
agentVTPPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 14, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentVTPPortConfigIndex"))
if mibBuilder.loadTexts: agentVTPPortConfigEntry.setStatus('current')
agentVTPPortConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentVTPPortConfigIndex.setStatus('current')
agentVTPPortConfigTrunkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 115, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVTPPortConfigTrunkMode.setStatus('current')
agentFIPSnoopingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116))
agentFIPSnoopingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFIPSnoopingAdminMode.setStatus('current')
agentFIPSnoopingVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 2), )
if mibBuilder.loadTexts: agentFIPSnoopingVlanConfigTable.setStatus('current')
agentFIPSnoopingVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentFIPSnoopingVlanIndex"))
if mibBuilder.loadTexts: agentFIPSnoopingVlanConfigEntry.setStatus('current')
agentFIPSnoopingVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingVlanIndex.setStatus('current')
agentFIPSnoopingVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentFIPSnoopingVlanAdminMode.setStatus('current')
agentFIPSnoopingSessionTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5), )
if mibBuilder.loadTexts: agentFIPSnoopingSessionTable.setStatus('current')
agentFIPSnoopingSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentFIPSnoopingSessionKey"))
if mibBuilder.loadTexts: agentFIPSnoopingSessionEntry.setStatus('current')
agentFIPSnoopingSessionKey = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5, 1, 1), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingSessionKey.setStatus('current')
agentFIPSnoopingSessionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingSessionIfIndex.setStatus('current')
agentFIPSnoopingSessionFCFMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingSessionFCFMacAddress.setStatus('current')
agentFIPSnoopingSessionENodeMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5, 1, 4), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingSessionENodeMacAddress.setStatus('current')
agentFIPSnoopingSessionENodeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingSessionENodeIfIndex.setStatus('current')
agentFIPSnoopingFCFTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6), )
if mibBuilder.loadTexts: agentFIPSnoopingFCFTable.setStatus('current')
agentFIPSnoopingFCFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentFIPSnoopingFCFKey"))
if mibBuilder.loadTexts: agentFIPSnoopingFCFEntry.setStatus('current')
agentFIPSnoopingFCFKey = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 1), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFKey.setStatus('current')
agentFIPSnoopingFCFIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFIfIndex.setStatus('current')
agentFIPSnoopingFCFVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 3), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFVlan.setStatus('current')
agentFIPSnoopingFCFENodeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFENodeNumber.setStatus('current')
agentFIPSnoopingFCFFCMap = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFFCMap.setStatus('current')
agentFIPSnoopingFCFSwitchName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFSwitchName.setStatus('current')
agentFIPSnoopingFCFFabricName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingFCFFabricName.setStatus('current')
agentFIPSnoopingENodeTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 7), )
if mibBuilder.loadTexts: agentFIPSnoopingENodeTable.setStatus('current')
agentFIPSnoopingENodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 7, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentFIPSnoopingENodeKey"))
if mibBuilder.loadTexts: agentFIPSnoopingENodeEntry.setStatus('current')
agentFIPSnoopingENodeKey = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 7, 1, 1), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingENodeKey.setStatus('current')
agentFIPSnoopingENodeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingENodeIfIndex.setStatus('current')
agentFIPSnoopingENodeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 7, 1, 3), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingENodeVlan.setStatus('current')
agentFIPSnoopingENodeNameID = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 116, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentFIPSnoopingENodeNameID.setStatus('current')
agentMLAGGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117))
agentMLAGAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGAdminMode.setStatus('current')
agentMLAGDomainId = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGDomainId.setStatus('current')
agentMLAGConfigurationConsistancyStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGConfigurationConsistancyStatus.setStatus('current')
agentMLAGMemberCount = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGMemberCount.setStatus('current')
agentMLAGSystemMac = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGSystemMac.setStatus('current')
agentMLAGKeepaliveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGKeepaliveTimeout.setStatus('current')
agentMLAGPeerGatewayMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGPeerGatewayMode.setStatus('current')
agentMLAGDelayRestore = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGDelayRestore.setStatus('current')
agentMLAGMemberLinkdownMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGMemberLinkdownMode.setStatus('current')
agentMLAGPeerLinkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 10))
agentMLAGPeerLinkifIndex = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGPeerLinkifIndex.setStatus('current')
agentMLAGPeerLinkifStatus = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPeerLinkifStatus.setStatus('current')
agentMLAGPeerLinkActiveVlans = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 10, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPeerLinkActiveVlans.setStatus('current')
agentMLAGPeerLinkForbiddenVlans = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 10, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPeerLinkForbiddenVlans.setStatus('current')
agentMLAGPortChannelTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11), )
if mibBuilder.loadTexts: agentMLAGPortChannelTable.setStatus('current')
agentMLAGPortChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentMLAGPortChannelifIndex"))
if mibBuilder.loadTexts: agentMLAGPortChannelEntry.setStatus('current')
agentMLAGPortChannelifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPortChannelifIndex.setStatus('current')
agentMLAGPortChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMLAGPortChannelId.setStatus('current')
agentMLAGPortChannelifIndexStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPortChannelifIndexStatus.setStatus('current')
agentMLAGPortChannelConsistancy = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPortChannelConsistancy.setStatus('current')
agentMLAGPortChannelActiveVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGPortChannelActiveVlans.setStatus('current')
agentMLAGVlanRoutingPortTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 12), )
if mibBuilder.loadTexts: agentMLAGVlanRoutingPortTable.setStatus('current')
agentMLAGVlanRoutingPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 12, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentMLAGVlanRoutingPortifIndex"))
if mibBuilder.loadTexts: agentMLAGVlanRoutingPortEntry.setStatus('current')
agentMLAGVlanRoutingPortifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 12, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMLAGVlanRoutingPortifIndex.setStatus('current')
agentMLAGVlanRoutingPortForbiddenMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 117, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMLAGVlanRoutingPortForbiddenMode.setStatus('current')
agentDCBXGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118))
agentDCBXConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 1), )
if mibBuilder.loadTexts: agentDCBXConfigTable.setStatus('current')
agentDCBXConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 1, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentDCBXifIndex"))
if mibBuilder.loadTexts: agentDCBXConfigEntry.setStatus('current')
agentDCBXifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXifIndex.setStatus('current')
agentDCBXAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDCBXAdminMode.setStatus('current')
agentDCBXVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cee", 1), ("ieee", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDCBXVersion.setStatus('current')
agentDCBXPFCConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2), )
if mibBuilder.loadTexts: agentDCBXPFCConfigTable.setStatus('current')
agentDCBXPFCConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentDCBXifIndex"))
if mibBuilder.loadTexts: agentDCBXPFCConfigEntry.setStatus('current')
agentDCBXPFCEnableMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCEnableMode.setStatus('current')
agentDCBXPFCAdvertiseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCAdvertiseMode.setStatus('current')
agentDCBXPFCWillingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDCBXPFCWillingMode.setStatus('current')
agentDCBXPFCPriorityMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPriorityMask.setStatus('current')
agentDCBXPFCMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCMaxTrafficClass.setStatus('current')
agentDCBXPFCOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperVersion.setStatus('current')
agentDCBXPFCOperMaxVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperMaxVersion.setStatus('current')
agentDCBXPFCOperErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperErrors.setStatus('current')
agentDCBXPFCOperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperMode.setStatus('current')
agentDCBXPFCOperPeerSyncd = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperPeerSyncd.setStatus('current')
agentDCBXPFCOperPriorityMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperPriorityMask.setStatus('current')
agentDCBXPFCOperMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCOperMaxTrafficClass.setStatus('current')
agentDCBXPFCPeerLocalifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 13), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPeerLocalifIndex.setStatus('current')
agentDCBXPFCPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notpresent", 0), ("successful", 1), ("unsuccessful", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPeerStatus.setStatus('current')
agentDCBXPFCPeerEnableMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPeerEnableMode.setStatus('current')
agentDCBXPFCPeerWillingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPeerWillingMode.setStatus('current')
agentDCBXPFCPeerPriorityMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPeerPriorityMask.setStatus('current')
agentDCBXPFCPeerMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCPeerMaxTrafficClass.setStatus('current')
agentDCBXPFCDCBXOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cee", 1), ("ieee", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPFCDCBXOperVersion.setStatus('current')
agentDCBXPgConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3), )
if mibBuilder.loadTexts: agentDCBXPgConfigTable.setStatus('current')
agentDCBXPgConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentDCBXifIndex"))
if mibBuilder.loadTexts: agentDCBXPgConfigEntry.setStatus('current')
agentDCBXPgEnableMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgEnableMode.setStatus('current')
agentDCBXPgAdvertiseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgAdvertiseMode.setStatus('current')
agentDCBXPgWillingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentDCBXPgWillingMode.setStatus('current')
agentDCBXPgGroupBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgGroupBandwidth.setStatus('current')
agentDCBXPgPriorityGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPriorityGroupId.setStatus('current')
agentDCBXPgMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgMaxTrafficClass.setStatus('current')
agentDCBXPgOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgOperVersion.setStatus('current')
agentDCBXPgMaxVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgMaxVersion.setStatus('current')
agentDCBXPgErrorReason = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgErrorReason.setStatus('current')
agentDCBXPgIsOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgIsOperational.setStatus('current')
agentDCBXPgSyncedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgSyncedMode.setStatus('current')
agentDCBXPgOperGroupBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgOperGroupBandwidth.setStatus('current')
agentDCBXPgOperPriorityGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgOperPriorityGroupId.setStatus('current')
agentDCBXPgOperMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgOperMaxTrafficClass.setStatus('current')
agentDCBXPgPeerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notpresent", 0), ("successful", 1), ("unsuccessful", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPeerStatus.setStatus('current')
agentDCBXPgPeerEnableMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPeerEnableMode.setStatus('current')
agentDCBXPgPeerWillingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPeerWillingMode.setStatus('current')
agentDCBXPgPeerGroupBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPeerGroupBandwidth.setStatus('current')
agentDCBXPgPeerPriorityGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPeerPriorityGroupId.setStatus('current')
agentDCBXPgPeerMaxTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgPeerMaxTrafficClass.setStatus('current')
agentDCBXPgDCBXOperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 118, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cee", 1), ("ieee", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDCBXPgDCBXOperVersion.setStatus('current')
class BridgeEvbTLVTC(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("vdpCapable", 0), ("ecpCapable", 1), ("ecpRTE", 2), ("vdpTimerCapable", 3), ("reflectiveRelayCap", 14), ("stdForwardingCap", 15))

agentEvbGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119))
agentEvbConfigTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1), )
if mibBuilder.loadTexts: agentEvbConfigTable.setStatus('current')
agentEvbConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentEvbifIndex"))
if mibBuilder.loadTexts: agentEvbConfigEntry.setStatus('current')
agentEvbifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 53))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbifIndex.setStatus('current')
agentEvbAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentEvbAdminMode.setStatus('current')
agentEvbCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 3), BridgeEvbTLVTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbCapability.setStatus('current')
agentEvbForwardingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 4), BridgeEvbTLVTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbForwardingMode.setStatus('current')
agentEvbRetransmissionExp = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentEvbRetransmissionExp.setStatus('current')
agentEvbOperCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 6), BridgeEvbTLVTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbOperCapability.setStatus('current')
agentEvbOperForwardingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 7), BridgeEvbTLVTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbOperForwardingMode.setStatus('current')
agentEvbOperRetransmissionExp = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbOperRetransmissionExp.setStatus('current')
agentEvbVsiGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2))
agentEvbVsiTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1), )
if mibBuilder.loadTexts: agentEvbVsiTable.setStatus('current')
agentEvbVsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentEvbifIndex"), (0, "SWITCHING-EXTENSION-MIB", "agentEvbVsiInstanceId"))
if mibBuilder.loadTexts: agentEvbVsiEntry.setStatus('current')
agentEvbVsiInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiInstanceId.setStatus('current')
agentEvbVsiMgrId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiMgrId.setStatus('current')
agentEvbVsiId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiId.setStatus('current')
agentEvbVsiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiVersion.setStatus('current')
agentEvbVsiMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("preassociate", 1), ("preassocerr", 2), ("associate", 3), ("deassociate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiMode.setStatus('current')
agentEvbVsiState = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unassociated", 1), ("assocprocessing", 2), ("associated", 3), ("preassocprocessing", 4), ("preassociated", 5), ("deassocprocessing", 6), ("exit", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiState.setStatus('current')
agentEvbVsiNumMacs = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiNumMacs.setStatus('current')
agentEvbVsiMacTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 2), )
if mibBuilder.loadTexts: agentEvbVsiMacTable.setStatus('current')
agentEvbVsiMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentEvbifIndex"), (0, "SWITCHING-EXTENSION-MIB", "agentEvbVsiInstanceId"), (0, "SWITCHING-EXTENSION-MIB", "agentEvbVsiMacAddress"), (0, "SWITCHING-EXTENSION-MIB", "agentEvbVsiVlanId"))
if mibBuilder.loadTexts: agentEvbVsiMacEntry.setStatus('current')
agentEvbVsiMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiMacAddress.setStatus('current')
agentEvbVsiVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 119, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4093))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentEvbVsiVlanId.setStatus('current')
agentVMTracerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120))
agentVMTracerIfCtlTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 1), )
if mibBuilder.loadTexts: agentVMTracerIfCtlTable.setStatus('current')
agentVMTracerIfCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 1, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentVMTracerIfIndex"))
if mibBuilder.loadTexts: agentVMTracerIfCtlEntry.setStatus('current')
agentVMTracerIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerIfIndex.setStatus('current')
agentVMTracerAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerAdminMode.setStatus('current')
agentVMTracerSessionTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2), )
if mibBuilder.loadTexts: agentVMTracerSessionTable.setStatus('current')
agentVMTracerSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentVMTracerSessionIndex"))
if mibBuilder.loadTexts: agentVMTracerSessionEntry.setStatus('current')
agentVMTracerSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerSessionIndex.setStatus('current')
agentVMTracerSessionName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionName.setStatus('current')
agentVMTracerSessionUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionUrl.setStatus('current')
agentVMTracerSessionUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionUsername.setStatus('current')
agentVMTracerSessionPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionPassword.setStatus('current')
agentVMTracerSessionAutoVlanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionAutoVlanMode.setStatus('current')
agentVMTracerSessionAllowVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 7), VlanList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionAllowVlan.setStatus('current')
agentVMTracerSessionConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("disconnected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerSessionConnectionStatus.setStatus('current')
agentVMTracerSessionClear = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentVMTracerSessionClear.setStatus('current')
agentVMTracerVMTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3), )
if mibBuilder.loadTexts: agentVMTracerVMTable.setStatus('current')
agentVMTracerVMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1), ).setIndexNames((0, "SWITCHING-EXTENSION-MIB", "agentVMTracerSessionIndex"), (0, "SWITCHING-EXTENSION-MIB", "agentVMTracerVMIndex"))
if mibBuilder.loadTexts: agentVMTracerVMEntry.setStatus('current')
agentVMTracerVMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMIndex.setStatus('current')
agentVMTracerVMName = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMName.setStatus('current')
agentVMTracerVMInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMInterface.setStatus('current')
agentVMTracerVMAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMAdapter.setStatus('current')
agentVMTracerVMMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMMacAddress.setStatus('current')
agentVMTracerVMPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMPortGroup.setStatus('current')
agentVMTracerVMVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMVlanId.setStatus('current')
agentVMTracerVMSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMSwitch.setStatus('current')
agentVMTracerVMHost = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHost.setStatus('current')
agentVMTracerVMHostCpuSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHostCpuSpeed.setStatus('current')
agentVMTracerVMHostMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHostMemory.setStatus('current')
agentVMTracerVMHostSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHostSystem.setStatus('current')
agentVMTracerVMHostVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHostVendor.setStatus('current')
agentVMTracerVMHostCpuCores = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHostCpuCores.setStatus('current')
agentVMTracerVMHostCpuPackages = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 101, 120, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVMTracerVMHostCpuPackages.setStatus('current')
mibBuilder.exportSymbols("SWITCHING-EXTENSION-MIB", agentDOMRxpower=agentDOMRxpower, agentSwitchStormControlActionShutdownMode=agentSwitchStormControlActionShutdownMode, agentMLAGPeerLinkifIndex=agentMLAGPeerLinkifIndex, agent10GModuleUnitIndex=agent10GModuleUnitIndex, agentCDPConfigNeighborInfoLocalIF=agentCDPConfigNeighborInfoLocalIF, PYSNMP_MODULE_ID=switchingExtension, agentVMTracerVMHostMemory=agentVMTracerVMHostMemory, agentVlanVoiceName=agentVlanVoiceName, agentDCBXPgMaxVersion=agentDCBXPgMaxVersion, agent10GModuleManufacturingDate=agent10GModuleManufacturingDate, agentVMTracerVMHost=agentVMTracerVMHost, agentIpFilterConfigIndex=agentIpFilterConfigIndex, agentLinkStateGroupMode=agentLinkStateGroupMode, agentInventoryGroupExtension=agentInventoryGroupExtension, agentEvbVsiId=agentEvbVsiId, agentVtyTerminalLength=agentVtyTerminalLength, agentEvbVsiMode=agentEvbVsiMode, agentDOMbiasHighWarning=agentDOMbiasHighWarning, agentSwitchStormControlActionIfIndex=agentSwitchStormControlActionIfIndex, agentVlanVoiceConfigDelete=agentVlanVoiceConfigDelete, agentMLAGConfigurationConsistancyStatus=agentMLAGConfigurationConsistancyStatus, agentCDPConfigPortModeIfIndex=agentCDPConfigPortModeIfIndex, agentLinkStateGroupDownstreamPort=agentLinkStateGroupDownstreamPort, agentDCBXPgPriorityGroupId=agentDCBXPgPriorityGroupId, agentIgmpSnoopL2MulticastStaticActivePorts=agentIgmpSnoopL2MulticastStaticActivePorts, agentPortConfigExtensionTable=agentPortConfigExtensionTable, agentDCBXPFCConfigEntry=agentDCBXPFCConfigEntry, agentPortConfigExtensionEntry=agentPortConfigExtensionEntry, agentDCBXPgOperVersion=agentDCBXPgOperVersion, agentPowerSupplyStatusTable=agentPowerSupplyStatusTable, agentPortConfigExtensionLinkTrapMode=agentPortConfigExtensionLinkTrapMode, agentVtyPasswdCntSetToDefault=agentVtyPasswdCntSetToDefault, agentDOMtxpowerHighAlarm=agentDOMtxpowerHighAlarm, agentPortBackupGroupMode=agentPortBackupGroupMode, agentCDPConfigGroup=agentCDPConfigGroup, agentVMTracerSessionConnectionStatus=agentVMTracerSessionConnectionStatus, agentInventoryLabelRevNumber=agentInventoryLabelRevNumber, agentMldSnoopL2MulticastStaticMemberPorts=agentMldSnoopL2MulticastStaticMemberPorts, agentSwitchFlowControlTable=agentSwitchFlowControlTable, agentDCBXPgConfigEntry=agentDCBXPgConfigEntry, agentVlanVoiceConfigName=agentVlanVoiceConfigName, agentEvbVsiVersion=agentEvbVsiVersion, agentDOMtxpowerLowWarning=agentDOMtxpowerLowWarning, agentEvbRetransmissionExp=agentEvbRetransmissionExp, agentVoiceVlanAdminMode=agentVoiceVlanAdminMode, agentDCBXPFCOperMaxVersion=agentDCBXPFCOperMaxVersion, agentSwitchCurrBootConfigFileName=agentSwitchCurrBootConfigFileName, agentDCBXifIndex=agentDCBXifIndex, agentEvbVsiMacAddress=agentEvbVsiMacAddress, agentMldSnoopL2MulticastStaticEntry=agentMldSnoopL2MulticastStaticEntry, agentCDPConfigNeighborInfoManagementAddress=agentCDPConfigNeighborInfoManagementAddress, agentDOMtxpowerHighWarning=agentDOMtxpowerHighWarning, agentDOMbiasHighAlarm=agentDOMbiasHighAlarm, agentDCBXConfigEntry=agentDCBXConfigEntry, agentVlanVoiceVlanIDCreate=agentVlanVoiceVlanIDCreate, agentVMTracerVMName=agentVMTracerVMName, agentDCBXConfigTable=agentDCBXConfigTable, agentSerialPasswdCntSetToDefault=agentSerialPasswdCntSetToDefault, agentDCBXPgIsOperational=agentDCBXPgIsOperational, agentEvbConfigTable=agentEvbConfigTable, agentSwitchCurrBootRomFileName=agentSwitchCurrBootRomFileName, agentVTPDomainName=agentVTPDomainName, agentDOMGroup=agentDOMGroup, agentDOMtemperatureLowAlarm=agentDOMtemperatureLowAlarm, agentSwitchMcastStormIfIndex=agentSwitchMcastStormIfIndex, agentErrDetectLinkFlapCauseMode=agentErrDetectLinkFlapCauseMode, agentMldSnoopL2MulticastStaticMemberPortMask=agentMldSnoopL2MulticastStaticMemberPortMask, agentVMTracerSessionEntry=agentVMTracerSessionEntry, agentNetworkConfigGroupExtension=agentNetworkConfigGroupExtension, agentTransferConfigGroupExtension=agentTransferConfigGroupExtension, agentTransferDeleteStart=agentTransferDeleteStart, agentInventoryBootRomVersion=agentInventoryBootRomVersion, agentCDPConfigNeighborInfoDeviceID=agentCDPConfigNeighborInfoDeviceID, agentNetworkDhcpClientIfClientIdFormat=agentNetworkDhcpClientIfClientIdFormat, agentPowerSupplyModel=agentPowerSupplyModel, agentFANChipType=agentFANChipType, agentDOMvotageHighWarning=agentDOMvotageHighWarning, agentSwitchBcastStormIfIndex=agentSwitchBcastStormIfIndex, agentVMTracerVMHostSystem=agentVMTracerVMHostSystem, agentDCBXPFCConfigTable=agentDCBXPFCConfigTable, agentIgmpSnoopL2MulticastStaticMemberPortMask=agentIgmpSnoopL2MulticastStaticMemberPortMask, agentVMTracerVMPortGroup=agentVMTracerVMPortGroup, agentPowerSupplyUnitIndex=agentPowerSupplyUnitIndex, agentSwitchStormControlActionTable=agentSwitchStormControlActionTable, agentCDPConfigResetNumPkts=agentCDPConfigResetNumPkts, agentVMTracerVMHostVendor=agentVMTracerVMHostVendor, agentIpFilterConfigTable=agentIpFilterConfigTable, agentPortConfigExtensionClearStats=agentPortConfigExtensionClearStats, agentFIPSnoopingENodeIfIndex=agentFIPSnoopingENodeIfIndex, agentVMTracerVMMacAddress=agentVMTracerVMMacAddress, agentSwitchMcastStormExtensionPktRate=agentSwitchMcastStormExtensionPktRate, agentDCBXPgSyncedMode=agentDCBXPgSyncedMode, agentSwitchUcastStormExtensionPktRate=agentSwitchUcastStormExtensionPktRate, agentTemperature4=agentTemperature4, agentDOMTxpower=agentDOMTxpower, agentStormContorlConfigGroupExtension=agentStormContorlConfigGroupExtension, agentDCBXPFCPeerEnableMode=agentDCBXPFCPeerEnableMode, agentPortBackupGroupTable=agentPortBackupGroupTable, agentPowerSupplyFanSpeed=agentPowerSupplyFanSpeed, agentVoiceVlanConfigEntry=agentVoiceVlanConfigEntry, agentVMTracerIfCtlEntry=agentVMTracerIfCtlEntry, agentSwitchUcastStormExtensionAdminMode=agentSwitchUcastStormExtensionAdminMode, agentEvbVsiGroup=agentEvbVsiGroup, agentTemperatureFanStatusEntry=agentTemperatureFanStatusEntry, agentDOMvotageHighAlarm=agentDOMvotageHighAlarm, agentMLAGVlanRoutingPortTable=agentMLAGVlanRoutingPortTable, agentLinkStateConfigAdminMode=agentLinkStateConfigAdminMode, agentGBICInfoComplianceCode=agentGBICInfoComplianceCode, agentMldSnoopL2MulticastStaticMacAddress=agentMldSnoopL2MulticastStaticMacAddress, agentVMTracerVMHostCpuPackages=agentVMTracerVMHostCpuPackages, agentIpFilterConfigEntry=agentIpFilterConfigEntry, agentEvbGroup=agentEvbGroup, agentVMTracerSessionClear=agentVMTracerSessionClear, agentVMTracerSessionUsername=agentVMTracerSessionUsername, agentSwitchStormControlMulticastEntry=agentSwitchStormControlMulticastEntry, agentSwitchCurrVMTracerFileName=agentSwitchCurrVMTracerFileName, agentFIPSnoopingSessionENodeIfIndex=agentFIPSnoopingSessionENodeIfIndex, agentPowerSupplyStatusEntry=agentPowerSupplyStatusEntry, agentSerialGroupExtension=agentSerialGroupExtension, agentIgmpSnoopL2MulticastStaticIndex=agentIgmpSnoopL2MulticastStaticIndex, agentFIPSnoopingENodeNameID=agentFIPSnoopingENodeNameID, agentMLAGPortChannelTable=agentMLAGPortChannelTable, agent10GModulePortIndex=agent10GModulePortIndex, agentGBICInfoSerialNumber=agentGBICInfoSerialNumber, agentDCBXPgPeerGroupBandwidth=agentDCBXPgPeerGroupBandwidth, agentIgmpSnoopL2MulticastStaticActivePortMask=agentIgmpSnoopL2MulticastStaticActivePortMask, agentPowerSupplyManufacturerLocation=agentPowerSupplyManufacturerLocation, agentPowerSupplyRevisionNumber=agentPowerSupplyRevisionNumber, agent10GModuleSerialNumber=agent10GModuleSerialNumber, agentIgmpSnoopL2MulticastStaticMemberPorts=agentIgmpSnoopL2MulticastStaticMemberPorts, agentMacMoveUpdatetMode=agentMacMoveUpdatetMode, agentFIPSnoopingSessionKey=agentFIPSnoopingSessionKey, agentCDPConfigNumInPkts=agentCDPConfigNumInPkts, agentTransferCopyRunningConfigStatus=agentTransferCopyRunningConfigStatus, agentDOMTemperature=agentDOMTemperature, agentErrRecoveryPortSecurityCauseMode=agentErrRecoveryPortSecurityCauseMode, agent10GModuleInfoGroupExtension=agent10GModuleInfoGroupExtension, agentDOMtxpowerLowAlarm=agentDOMtxpowerLowAlarm, agentSwitchUnicastControlMode=agentSwitchUnicastControlMode, agentFIPSnoopingVlanIndex=agentFIPSnoopingVlanIndex, agentVMTracerVMHostCpuSpeed=agentVMTracerVMHostCpuSpeed, agentDCBXPFCOperMaxTrafficClass=agentDCBXPFCOperMaxTrafficClass, agentVMTracerVMTable=agentVMTracerVMTable, agentPowerSupplyManufacturingDate=agentPowerSupplyManufacturingDate, agentSwitchCurrBootLoaderFileName=agentSwitchCurrBootLoaderFileName, agentDCBXPFCAdvertiseMode=agentDCBXPFCAdvertiseMode, agentSwitchStormControlUnicastTable=agentSwitchStormControlUnicastTable, agentPowerSupplyFanDuty=agentPowerSupplyFanDuty, agentCDPConfigTransmitInterval=agentCDPConfigTransmitInterval, agentVMTracerVMInterface=agentVMTracerVMInterface, agentVlanVoiceAdminMode=agentVlanVoiceAdminMode, agentVMTracerIfIndex=agentVMTracerIfIndex, agentDCBXGroup=agentDCBXGroup, agentDCBXPFCWillingMode=agentDCBXPFCWillingMode, agentSwitchCurrUBootFileName=agentSwitchCurrUBootFileName, agentVTPMD5Digest=agentVTPMD5Digest, agentDCBXPFCOperErrors=agentDCBXPFCOperErrors, agentInventoryOpCodeVersion=agentInventoryOpCodeVersion, agentInventroyHardwareVersion=agentInventroyHardwareVersion, agentSwitchFlowControlAdminMode=agentSwitchFlowControlAdminMode, agentVtyPasswdCnt=agentVtyPasswdCnt, agentPowerSupplyStatus=agentPowerSupplyStatus, agentDOMTable=agentDOMTable, agentPowerSupplyTemperature1=agentPowerSupplyTemperature1, agentSwitchBcastStormExtensionAdminMode=agentSwitchBcastStormExtensionAdminMode, agentDCBXPgOperGroupBandwidth=agentDCBXPgOperGroupBandwidth, agentMLAGSystemMac=agentMLAGSystemMac, agentSwitchStormControlBroadcastEntry=agentSwitchStormControlBroadcastEntry, agentIgmpSnoopL2MulticastStaticVlanId=agentIgmpSnoopL2MulticastStaticVlanId, agentLinkStateGroupTable=agentLinkStateGroupTable, agentSwitchMcastStormExtensionAdminMode=agentSwitchMcastStormExtensionAdminMode, agentLinkStateGroupStatus=agentLinkStateGroupStatus, agentGBICInfoRevisionNumber=agentGBICInfoRevisionNumber, agentInfoGroupExtension=agentInfoGroupExtension, agentFIPSnoopingSessionTable=agentFIPSnoopingSessionTable, agentNetworkDhcpSetToInventoryClientIfClientId=agentNetworkDhcpSetToInventoryClientIfClientId, agentErrRecoveryLinkFlapCauseMode=agentErrRecoveryLinkFlapCauseMode, agentCDPConfigNumErrPkts=agentCDPConfigNumErrPkts, agentVoiceVlanConfigGroup=agentVoiceVlanConfigGroup, agentFIPSnoopingENodeVlan=agentFIPSnoopingENodeVlan, agentVlanVoiceConfigIndex=agentVlanVoiceConfigIndex, agentMldSnoopL2MulticastStaticTable=agentMldSnoopL2MulticastStaticTable, agentVTPDomainPassword=agentVTPDomainPassword, agentFIPSnoopingFCFFCMap=agentFIPSnoopingFCFFCMap, agent10GModuleComplianceCode=agent10GModuleComplianceCode, agentSwitchFlowControlIfIndex=agentSwitchFlowControlIfIndex, agentPortConfigExtensionAdminMode=agentPortConfigExtensionAdminMode, agentPowerSupplyTemperature2=agentPowerSupplyTemperature2, agentVTPVersion=agentVTPVersion, agentVTPAdminMode=agentVTPAdminMode, agentPortBackupGroupBackupPort=agentPortBackupGroupBackupPort, agentVoiceVlanConfigIfMode=agentVoiceVlanConfigIfMode, agentDCBXPgPeerStatus=agentDCBXPgPeerStatus, agentIpFilterConfigDelete=agentIpFilterConfigDelete, agentSwitchBcastStormExtensionPktRate=agentSwitchBcastStormExtensionPktRate, agentErrRecoveryConfigGroupExtension=agentErrRecoveryConfigGroupExtension, agentEvbVsiMacTable=agentEvbVsiMacTable, agentVlanVoiceConfigMacAddress=agentVlanVoiceConfigMacAddress, agentEvbAdminMode=agentEvbAdminMode, agentFIPSnoopingGroup=agentFIPSnoopingGroup, agentDCBXPgAdvertiseMode=agentDCBXPgAdvertiseMode, agentVMTracerSessionIndex=agentVMTracerSessionIndex, agentCDPConfigNeighborInfoHoldTime=agentCDPConfigNeighborInfoHoldTime, agentEvbVsiInstanceId=agentEvbVsiInstanceId, agentCDPConfigNeighborInfoCapability=agentCDPConfigNeighborInfoCapability, agentPowerSupplyName=agentPowerSupplyName, agentVTPPortConfigTrunkMode=agentVTPPortConfigTrunkMode, agentVTPConfigLastModified=agentVTPConfigLastModified, agentGBICInfoEntry=agentGBICInfoEntry, agent10GModulePartNumber=agent10GModulePartNumber, agentFIPSnoopingFCFVlan=agentFIPSnoopingFCFVlan, agentPortBackupGroupEntry=agentPortBackupGroupEntry, agentDCBXPFCPeerMaxTrafficClass=agentDCBXPFCPeerMaxTrafficClass, agentDCBXPgEnableMode=agentDCBXPgEnableMode, agentVlanVoiceConfigMacMask=agentVlanVoiceConfigMacMask, agentFIPSnoopingVlanConfigEntry=agentFIPSnoopingVlanConfigEntry, agentDCBXPFCOperPriorityMask=agentDCBXPFCOperPriorityMask, agentMLAGPeerLinkActiveVlans=agentMLAGPeerLinkActiveVlans, agentSwitchStormControlActionEntry=agentSwitchStormControlActionEntry, agentFAN3=agentFAN3, agentMLAGVlanRoutingPortForbiddenMode=agentMLAGVlanRoutingPortForbiddenMode, agentDCBXPFCMaxTrafficClass=agentDCBXPFCMaxTrafficClass, agentVMTracerIfCtlTable=agentVMTracerIfCtlTable, agentMLAGPortChannelEntry=agentMLAGPortChannelEntry, agentIgmpSnoopL2MulticastStaticEntry=agentIgmpSnoopL2MulticastStaticEntry, agentFIPSnoopingVlanConfigTable=agentFIPSnoopingVlanConfigTable, agentVMTracerSessionPassword=agentVMTracerSessionPassword, agentDCBXPFCPeerPriorityMask=agentDCBXPFCPeerPriorityMask, agentDCBXPgWillingMode=agentDCBXPgWillingMode, agentGBICInfoPartNumber=agentGBICInfoPartNumber, agentFIPSnoopingVlanAdminMode=agentFIPSnoopingVlanAdminMode, agentIpFilterConfigMask=agentIpFilterConfigMask, BridgeEvbTLVTC=BridgeEvbTLVTC, agentVTPOperatingMode=agentVTPOperatingMode, agentFIPSnoopingFCFEntry=agentFIPSnoopingFCFEntry, agentSwitchDot3FlowControlMode=agentSwitchDot3FlowControlMode, agentDOMtemperatureHighWarning=agentDOMtemperatureHighWarning, agentEvbVsiTable=agentEvbVsiTable, agentSwitchStormControlBroadcastTable=agentSwitchStormControlBroadcastTable, agentVlanVoiceConfigTable=agentVlanVoiceConfigTable, agentDOMVoltage=agentDOMVoltage, agentDCBXPFCPeerWillingMode=agentDCBXPFCPeerWillingMode, agentMLAGPeerLinkForbiddenVlans=agentMLAGPeerLinkForbiddenVlans, agentEvbConfigEntry=agentEvbConfigEntry, agentVMTracerVMAdapter=agentVMTracerVMAdapter, agentSerialSilentTimeSetToDefault=agentSerialSilentTimeSetToDefault, agentEvbVsiMgrId=agentEvbVsiMgrId, agentVMTracerVMVlanId=agentVMTracerVMVlanId, agentFAN4=agentFAN4, agentVtyGroupExtension=agentVtyGroupExtension, agentVlanVoiceMacMask=agentVlanVoiceMacMask, agentVMTracerSessionName=agentVMTracerSessionName, agentVtyTelnetServerAdminMode=agentVtyTelnetServerAdminMode, agentCDPConfigPortModeTable=agentCDPConfigPortModeTable)
mibBuilder.exportSymbols("SWITCHING-EXTENSION-MIB", agentGBICInfoIndex=agentGBICInfoIndex, agentDOMvotageLowAlarm=agentDOMvotageLowAlarm, agentVoiceVlanConfigTable=agentVoiceVlanConfigTable, agentTransferCopyRunningConfigToSwitchDestFilename=agentTransferCopyRunningConfigToSwitchDestFilename, agentVTPMaxVlanNumSupported=agentVTPMaxVlanNumSupported, agentFIPSnoopingFCFENodeNumber=agentFIPSnoopingFCFENodeNumber, agentDCBXPgMaxTrafficClass=agentDCBXPgMaxTrafficClass, agentSwitchMulticastControlMode=agentSwitchMulticastControlMode, agentDCBXPFCOperPeerSyncd=agentDCBXPFCOperPeerSyncd, agentFIPSnoopingFCFTable=agentFIPSnoopingFCFTable, agentEvbVsiVlanId=agentEvbVsiVlanId, agentPortBackupGroupId=agentPortBackupGroupId, agent10GModuleTable=agent10GModuleTable, agentFIPSnoopingFCFFabricName=agentFIPSnoopingFCFFabricName, agentEvbifIndex=agentEvbifIndex, agentMLAGVlanRoutingPortifIndex=agentMLAGVlanRoutingPortifIndex, agentFAN2=agentFAN2, agentEvbCapability=agentEvbCapability, agentLinkStateGroupEntry=agentLinkStateGroupEntry, agentPortBackupGroupStatus=agentPortBackupGroupStatus, agentDCBXPFCEnableMode=agentDCBXPFCEnableMode, agentCDPConfigAdminMode=agentCDPConfigAdminMode, agentPowerSupplySerialNumber=agentPowerSupplySerialNumber, agentFIPSnoopingFCFKey=agentFIPSnoopingFCFKey, agentVTPPortConfigIndex=agentVTPPortConfigIndex, agentDOMbiasLowWarning=agentDOMbiasLowWarning, agentIgmpSnoopL2MulticastStaticMacAddress=agentIgmpSnoopL2MulticastStaticMacAddress, agentDCBXPgGroupBandwidth=agentDCBXPgGroupBandwidth, agentMLAGMemberCount=agentMLAGMemberCount, agentVtyTerminalLengthSetToDefault=agentVtyTerminalLengthSetToDefault, agentDCBXPgErrorReason=agentDCBXPgErrorReason, agentErrRecoveryMacFlapCauseMode=agentErrRecoveryMacFlapCauseMode, agentCDPConfigResetDeviceInformation=agentCDPConfigResetDeviceInformation, agentMLAGAdminMode=agentMLAGAdminMode, agentSwitchCurrBootOpCodeFileName=agentSwitchCurrBootOpCodeFileName, agentFIPSnoopingSessionIfIndex=agentFIPSnoopingSessionIfIndex, agentVoiceVlanConfigIndex=agentVoiceVlanConfigIndex, agentDOMtemperatureLowWarning=agentDOMtemperatureLowWarning, agentGBICInfoTable=agentGBICInfoTable, agentVlanVoiceConfigGroup=agentVlanVoiceConfigGroup, agent10GModuleRevisionNumber=agent10GModuleRevisionNumber, agentDCBXPFCOperVersion=agentDCBXPFCOperVersion, agentDOMInterval=agentDOMInterval, agentTransferDeleteGroup=agentTransferDeleteGroup, agentGBICInfoInterfaceNumber=agentGBICInfoInterfaceNumber, agent10GModuleInterfaceNumber=agent10GModuleInterfaceNumber, agentPortBackupConfigAdminMode=agentPortBackupConfigAdminMode, agentTransferCopyGroup=agentTransferCopyGroup, agentMldSnoopL2MulticastStaticActivePorts=agentMldSnoopL2MulticastStaticActivePorts, agentDCBXPgPeerMaxTrafficClass=agentDCBXPgPeerMaxTrafficClass, agentVoiceVlanConfigCosOverrideMode=agentVoiceVlanConfigCosOverrideMode, agentSwitchCurrKernelFileName=agentSwitchCurrKernelFileName, agentNetworkDhcpClientIfClientId=agentNetworkDhcpClientIfClientId, agentErrDetectMacFlapCauseMode=agentErrDetectMacFlapCauseMode, agentDCBXPgOperMaxTrafficClass=agentDCBXPgOperMaxTrafficClass, agentEvbOperRetransmissionExp=agentEvbOperRetransmissionExp, agentTemperature2=agentTemperature2, agentSerialSilentTime=agentSerialSilentTime, agentVTPConfigGroup=agentVTPConfigGroup, agentMLAGGroup=agentMLAGGroup, agentDCBXPFCPriorityMask=agentDCBXPFCPriorityMask, agentVTPPortConfigEntry=agentVTPPortConfigEntry, agentVMTracerSessionUrl=agentVMTracerSessionUrl, agentGBICInfoManufacturingDate=agentGBICInfoManufacturingDate, agentVMTracerGroup=agentVMTracerGroup, agentDCBXPgPeerWillingMode=agentDCBXPgPeerWillingMode, agentMLAGPeerGatewayMode=agentMLAGPeerGatewayMode, agentMLAGPortChannelConsistancy=agentMLAGPortChannelConsistancy, agentLinkStateGroupId=agentLinkStateGroupId, agentVMTracerVMSwitch=agentVMTracerVMSwitch, agentFIPSnoopingFCFSwitchName=agentFIPSnoopingFCFSwitchName, agentIpFilterConfigIP=agentIpFilterConfigIP, agentDCBXPFCPeerStatus=agentDCBXPFCPeerStatus, agentDOMEntry=agentDOMEntry, agentDCBXPgPeerPriorityGroupId=agentDCBXPgPeerPriorityGroupId, agentPortBackupGroupFailBackTime=agentPortBackupGroupFailBackTime, agent10GModuleEntry=agent10GModuleEntry, agentPortConfigExtensionMaxFrameSizeLimit=agentPortConfigExtensionMaxFrameSizeLimit, agentDOMtransceiverIndex=agentDOMtransceiverIndex, agentCDPConfigNumOutPkts=agentCDPConfigNumOutPkts, agentDCBXPgConfigTable=agentDCBXPgConfigTable, agentDOMrxpowerHighAlarm=agentDOMrxpowerHighAlarm, agentVMTracerSessionAutoVlanMode=agentVMTracerSessionAutoVlanMode, agentLinkStateConfigGroup=agentLinkStateConfigGroup, agentDOMtemperatureHighAlarm=agentDOMtemperatureHighAlarm, agentInventoryLoaderVersion=agentInventoryLoaderVersion, agentCDPConfigNeighborInfoPortID=agentCDPConfigNeighborInfoPortID, agentVoiceVlanConfigIfModeValue=agentVoiceVlanConfigIfModeValue, agentEvbOperForwardingMode=agentEvbOperForwardingMode, agentMLAGVlanRoutingPortEntry=agentMLAGVlanRoutingPortEntry, agentMLAGPortChannelId=agentMLAGPortChannelId, agentIPFilterConfigGroupExtension=agentIPFilterConfigGroupExtension, agentVTPVlanNumSupported=agentVTPVlanNumSupported, agentEvbVsiNumMacs=agentEvbVsiNumMacs, agentTemperature5=agentTemperature5, agentTemperatureFanUnitIndex=agentTemperatureFanUnitIndex, agentVlanVoiceConfigEntry=agentVlanVoiceConfigEntry, agentCDPConfigPortModeEntry=agentCDPConfigPortModeEntry, agentVlanVoiceMacAddress=agentVlanVoiceMacAddress, agentTransferDeleteStatus=agentTransferDeleteStatus, agent10GModuleVendorName=agent10GModuleVendorName, agentIgmpSnoopL2MulticastStaticTable=agentIgmpSnoopL2MulticastStaticTable, agentDOMBias=agentDOMBias, agentPortBackupConfigGroup=agentPortBackupConfigGroup, agentErrRecoveryBpduCauseMode=agentErrRecoveryBpduCauseMode, agentDOMvotageLowWarning=agentDOMvotageLowWarning, agentVlanVoiceConfigPriority=agentVlanVoiceConfigPriority, agentPortBackupGroupActivePort=agentPortBackupGroupActivePort, agentDOMrxpowerHighWarning=agentDOMrxpowerHighWarning, agentMldSnoopL2MulticastStaticActivePortMask=agentMldSnoopL2MulticastStaticActivePortMask, agentEvbVsiEntry=agentEvbVsiEntry, agentTemperatureFanStatusTable=agentTemperatureFanStatusTable, agentMLAGPortChannelActiveVlans=agentMLAGPortChannelActiveVlans, agentVMTracerAdminMode=agentVMTracerAdminMode, agent10GModuleType=agent10GModuleType, agentErrRecoveryInterval=agentErrRecoveryInterval, agentMLAGMemberLinkdownMode=agentMLAGMemberLinkdownMode, agentVMTracerSessionAllowVlan=agentVMTracerSessionAllowVlan, agentMLAGPortChannelifIndexStatus=agentMLAGPortChannelifIndexStatus, agentCDPConfigNeighborInfoTable=agentCDPConfigNeighborInfoTable, agentDOMbiasLowAlarm=agentDOMbiasLowAlarm, agentCDPConfigPortModeAdminMode=agentCDPConfigPortModeAdminMode, agentCDPConfigNeighborInfoIndex=agentCDPConfigNeighborInfoIndex, agentFIPSnoopingFCFIfIndex=agentFIPSnoopingFCFIfIndex, agentVMTracerVMIndex=agentVMTracerVMIndex, agentDCBXPFCOperMode=agentDCBXPFCOperMode, agentConfigGroupExtension=agentConfigGroupExtension, agentEvbOperCapability=agentEvbOperCapability, agentVTPPruningMode=agentVTPPruningMode, agentMLAGPortChannelifIndex=agentMLAGPortChannelifIndex, agentVlanVoicePriority=agentVlanVoicePriority, agentPowerConsumption=agentPowerConsumption, agentVTPPortConfigTable=agentVTPPortConfigTable, agentSwitchCurrBootFilesGroupExtension=agentSwitchCurrBootFilesGroupExtension, agentFIPSnoopingAdminMode=agentFIPSnoopingAdminMode, agentDCBXPgOperPriorityGroupId=agentDCBXPgOperPriorityGroupId, agentSwitchUcastStormIfIndex=agentSwitchUcastStormIfIndex, agentVTPV2Mode=agentVTPV2Mode, agentVTPConfigRevision=agentVTPConfigRevision, agentVMTracerSessionTable=agentVMTracerSessionTable, agentFIPSnoopingSessionEntry=agentFIPSnoopingSessionEntry, agentCLIConfigGroupExtension=agentCLIConfigGroupExtension, agentMldSnoopL2MulticastStaticIndex=agentMldSnoopL2MulticastStaticIndex, agentTemperature3=agentTemperature3, agentSwitchBroadcastControlMode=agentSwitchBroadcastControlMode, switchingExtension=switchingExtension, agentDCBXPFCPeerLocalifIndex=agentDCBXPFCPeerLocalifIndex, agentTemperature=agentTemperature, agentEvbVsiState=agentEvbVsiState, agentTemperature1=agentTemperature1, agentDOMrxpowerLowAlarm=agentDOMrxpowerLowAlarm, agent10GModuleIndex=agent10GModuleIndex, agentDCBXPgPeerEnableMode=agentDCBXPgPeerEnableMode, agent10GModuleSlotIndex=agent10GModuleSlotIndex, agentIPFilterConfigAdminMode=agentIPFilterConfigAdminMode, agentErrRecoveryUdldCauseMode=agentErrRecoveryUdldCauseMode, agentFIPSnoopingENodeEntry=agentFIPSnoopingENodeEntry, agentVMTracerVMHostCpuCores=agentVMTracerVMHostCpuCores, agentNetworkDhcpRestart=agentNetworkDhcpRestart, agentEvbVsiMacEntry=agentEvbVsiMacEntry, agentSwitchSnoopingGroupExtension=agentSwitchSnoopingGroupExtension, agentDCBXPgDCBXOperVersion=agentDCBXPgDCBXOperVersion, agentGBICInfoVendorName=agentGBICInfoVendorName, agentMldSnoopL2MulticastStaticVlanId=agentMldSnoopL2MulticastStaticVlanId, agentDCBXPFCDCBXOperVersion=agentDCBXPFCDCBXOperVersion, agentPortConfigExtensionIfIndex=agentPortConfigExtensionIfIndex, agentSwitchStormControlMulticastTable=agentSwitchStormControlMulticastTable, agentLinkStateGroupUpstreamPort=agentLinkStateGroupUpstreamPort, agentCDPConfigNeighborInfoPlatform=agentCDPConfigNeighborInfoPlatform, agentTransferCopyRunningConfigStart=agentTransferCopyRunningConfigStart, agentVoiceVlanConfigOperState=agentVoiceVlanConfigOperState, agentMLAGPeerLinkifStatus=agentMLAGPeerLinkifStatus, agentDCBXAdminMode=agentDCBXAdminMode, agentSwitchStormControlUnicastEntry=agentSwitchStormControlUnicastEntry, agentDOMrxpowerLowWarning=agentDOMrxpowerLowWarning, agentPortConfigExtensionMaxFrameSize=agentPortConfigExtensionMaxFrameSize, agentFIPSnoopingENodeTable=agentFIPSnoopingENodeTable, agentMLAGDelayRestore=agentMLAGDelayRestore, agentSwitchConfigGroupExtension=agentSwitchConfigGroupExtension, agentCDPConfigTimeToLive=agentCDPConfigTimeToLive, agentTransferDeleteSwitchFilename=agentTransferDeleteSwitchFilename, agentMLAGPeerLinkGroup=agentMLAGPeerLinkGroup, agentDCBXVersion=agentDCBXVersion, agentErrRecoveryStormCtrlCauseMode=agentErrRecoveryStormCtrlCauseMode, agentDOMAdminMode=agentDOMAdminMode, agentFIPSnoopingSessionENodeMacAddress=agentFIPSnoopingSessionENodeMacAddress, agentSwitchStormControlActionTrapMode=agentSwitchStormControlActionTrapMode, agentMLAGDomainId=agentMLAGDomainId, agentFAN1=agentFAN1, agentIpFilterConfigCreate=agentIpFilterConfigCreate, agentIpFilterConfigName=agentIpFilterConfigName, agentSwitchFlowControlEntry=agentSwitchFlowControlEntry, agentCDPConfigNeighborInfoEntry=agentCDPConfigNeighborInfoEntry, agentEvbForwardingMode=agentEvbForwardingMode, agentSerialPasswdCnt=agentSerialPasswdCnt, agentVTPLocalUpdaterID=agentVTPLocalUpdaterID, agentMLAGKeepaliveTimeout=agentMLAGKeepaliveTimeout, agentNetworkHttpPort=agentNetworkHttpPort, agentFIPSnoopingSessionFCFMacAddress=agentFIPSnoopingSessionFCFMacAddress, agentFIPSnoopingENodeKey=agentFIPSnoopingENodeKey, agentVMTracerVMEntry=agentVMTracerVMEntry)
