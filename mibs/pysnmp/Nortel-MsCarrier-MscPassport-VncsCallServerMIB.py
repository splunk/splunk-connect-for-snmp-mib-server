#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-VncsCallServerMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-VncsCallServerMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:22:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
Unsigned32, Counter32, StorageType, RowPointer, DisplayString, Integer32, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "Counter32", "StorageType", "RowPointer", "DisplayString", "Integer32", "RowStatus")
AsciiString, FixedPoint1, WildcardedDigitString, DigitString, Link = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiString", "FixedPoint1", "WildcardedDigitString", "DigitString", "Link")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, ObjectIdentity, Unsigned32, iso, TimeTicks, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Gauge32, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "ObjectIdentity", "Unsigned32", "iso", "TimeTicks", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Gauge32", "IpAddress", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vncsCallServerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66))
mscVncs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44))
mscVncsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 1), )
if mibBuilder.loadTexts: mscVncsRowStatusTable.setStatus('mandatory')
mscVncsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"))
if mibBuilder.loadTexts: mscVncsRowStatusEntry.setStatus('mandatory')
mscVncsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsRowStatus.setStatus('mandatory')
mscVncsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsComponentName.setStatus('mandatory')
mscVncsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsStorageType.setStatus('mandatory')
mscVncsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: mscVncsIndex.setStatus('mandatory')
mscVncsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 10), )
if mibBuilder.loadTexts: mscVncsProvTable.setStatus('mandatory')
mscVncsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"))
if mibBuilder.loadTexts: mscVncsProvEntry.setStatus('mandatory')
mscVncsCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsCommentText.setStatus('mandatory')
mscVncsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 11), )
if mibBuilder.loadTexts: mscVncsStatsTable.setStatus('mandatory')
mscVncsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"))
if mibBuilder.loadTexts: mscVncsStatsEntry.setStatus('mandatory')
mscVncsTotalTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsTotalTranslations.setStatus('mandatory')
mscVncsVRoutesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 305), )
if mibBuilder.loadTexts: mscVncsVRoutesTable.setStatus('mandatory')
mscVncsVRoutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 305, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVRoutesValue"))
if mibBuilder.loadTexts: mscVncsVRoutesEntry.setStatus('mandatory')
mscVncsVRoutesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 305, 1, 1), Link()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsVRoutesValue.setStatus('mandatory')
mscVncsDP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2))
mscVncsDPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 1), )
if mibBuilder.loadTexts: mscVncsDPRowStatusTable.setStatus('mandatory')
mscVncsDPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsDPIndex"))
if mibBuilder.loadTexts: mscVncsDPRowStatusEntry.setStatus('mandatory')
mscVncsDPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPRowStatus.setStatus('mandatory')
mscVncsDPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPComponentName.setStatus('mandatory')
mscVncsDPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPStorageType.setStatus('mandatory')
mscVncsDPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: mscVncsDPIndex.setStatus('mandatory')
mscVncsDPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 10), )
if mibBuilder.loadTexts: mscVncsDPStatsTable.setStatus('mandatory')
mscVncsDPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsDPIndex"))
if mibBuilder.loadTexts: mscVncsDPStatsEntry.setStatus('mandatory')
mscVncsDPCompleteTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPCompleteTranslations.setStatus('mandatory')
mscVncsDPIncompleteTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPIncompleteTranslations.setStatus('mandatory')
mscVncsDPFailedTranslations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPFailedTranslations.setStatus('mandatory')
mscVncsDPDn = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2))
mscVncsDPDnRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 1), )
if mibBuilder.loadTexts: mscVncsDPDnRowStatusTable.setStatus('mandatory')
mscVncsDPDnRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsDPIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsDPDnIndex"))
if mibBuilder.loadTexts: mscVncsDPDnRowStatusEntry.setStatus('mandatory')
mscVncsDPDnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPDnRowStatus.setStatus('mandatory')
mscVncsDPDnComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPDnComponentName.setStatus('mandatory')
mscVncsDPDnStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsDPDnStorageType.setStatus('mandatory')
mscVncsDPDnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 1, 1, 10), WildcardedDigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscVncsDPDnIndex.setStatus('mandatory')
mscVncsDPDnProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10), )
if mibBuilder.loadTexts: mscVncsDPDnProvTable.setStatus('mandatory')
mscVncsDPDnProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsDPIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsDPDnIndex"))
if mibBuilder.loadTexts: mscVncsDPDnProvEntry.setStatus('mandatory')
mscVncsDPDnDestinationNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPDnDestinationNodeId.setStatus('mandatory')
mscVncsDPDnDestinationComponentId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10, 1, 2), RowPointer()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPDnDestinationComponentId.setStatus('mandatory')
mscVncsDPDnVoiceProfileNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPDnVoiceProfileNumber.setStatus('mandatory')
mscVncsDPDnNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('e164')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPDnNumberingPlanIndicator.setStatus('mandatory')
mscVncsDPDnDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 2, 2, 10, 1, 5), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsDPDnDataNetworkAddress.setStatus('mandatory')
mscVncsVp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3))
mscVncsVpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 1), )
if mibBuilder.loadTexts: mscVncsVpRowStatusTable.setStatus('mandatory')
mscVncsVpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"))
if mibBuilder.loadTexts: mscVncsVpRowStatusEntry.setStatus('mandatory')
mscVncsVpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpRowStatus.setStatus('mandatory')
mscVncsVpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsVpComponentName.setStatus('mandatory')
mscVncsVpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsVpStorageType.setStatus('mandatory')
mscVncsVpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: mscVncsVpIndex.setStatus('mandatory')
mscVncsVpLCOpsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2), )
if mibBuilder.loadTexts: mscVncsVpLCOpsTable.setStatus('mandatory')
mscVncsVpLCOpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"))
if mibBuilder.loadTexts: mscVncsVpLCOpsEntry.setStatus('mandatory')
mscVncsVpSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpSetupPriority.setStatus('mandatory')
mscVncsVpHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpHoldingPriority.setStatus('mandatory')
mscVncsVpBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1))).clone('bumpWhenNecessary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpBumpPreference.setStatus('mandatory')
mscVncsVpRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7))).clone('voice')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpRequiredTrafficType.setStatus('mandatory')
mscVncsVpPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="f8")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpPermittedTrunkTypes.setStatus('mandatory')
mscVncsVpRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpRequiredSecurity.setStatus('mandatory')
mscVncsVpRequiredCustomerParm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpRequiredCustomerParm.setStatus('mandatory')
mscVncsVpPathAttributeToMinimize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("cost", 0), ("delay", 1))).clone('cost')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpPathAttributeToMinimize.setStatus('mandatory')
mscVncsVpMaximumAcceptableCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1280)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMaximumAcceptableCost.setStatus('mandatory')
mscVncsVpMaximumAcceptableDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMaximumAcceptableDelay.setStatus('mandatory')
mscVncsVpEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpEmissionPriority.setStatus('mandatory')
mscVncsVpDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpDiscardPriority.setStatus('mandatory')
mscVncsVpPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1))).clone('reRoutePath')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpPathFailureAction.setStatus('mandatory')
mscVncsVpOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpOptimization.setStatus('mandatory')
mscVncsVpMaximumAcceptableGatewayCost = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMaximumAcceptableGatewayCost.setStatus('mandatory')
mscVncsVpFrOpsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3), )
if mibBuilder.loadTexts: mscVncsVpFrOpsTable.setStatus('mandatory')
mscVncsVpFrOpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"))
if mibBuilder.loadTexts: mscVncsVpFrOpsEntry.setStatus('mandatory')
mscVncsVpMaxVoiceBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMaxVoiceBitRate.setStatus('obsolete')
mscVncsVpMinVoiceBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMinVoiceBitRate.setStatus('obsolete')
mscVncsVpMaxModemBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n64')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMaxModemBitRate.setStatus('obsolete')
mscVncsVpMinModemBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("n64", 0), ("n32", 1), ("n24", 2), ("n16", 3))).clone('n32')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpMinModemBitRate.setStatus('obsolete')
mscVncsVpAudioGain = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("minus6", 0), ("minus4", 1), ("minus2", 2), ("n0", 3), ("n2", 4), ("n4", 5), ("n6", 6))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpAudioGain.setStatus('obsolete')
mscVncsVpSilenceSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("congested", 2), ("slow", 3), ("slowAndCongested", 4))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpSilenceSuppression.setStatus('mandatory')
mscVncsVpEchoCancellation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpEchoCancellation.setStatus('obsolete')
mscVncsVpSilenceSuppressionFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpSilenceSuppressionFactor.setStatus('mandatory')
mscVncsVpDataCallsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpDataCallsAccepted.setStatus('mandatory')
mscVncsVpFaxIdleSuppressionG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpFaxIdleSuppressionG711G726.setStatus('mandatory')
mscVncsVpInsertedOutputDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 15, 22, 30, 35, 40, 45, 50, 75, 100, 125, 150))).clone(namedValues=NamedValues(("n5", 5), ("n15", 15), ("n22", 22), ("n30", 30), ("n35", 35), ("n40", 40), ("n45", 45), ("n50", 50), ("n75", 75), ("n100", 100), ("n125", 125), ("n150", 150))).clone('n22')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpInsertedOutputDelay.setStatus('mandatory')
mscVncsVpVoiceTrafficOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bandwidth", 0), ("delay", 1))).clone('bandwidth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpVoiceTrafficOptimization.setStatus('obsolete')
mscVncsVpDtmfRegeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpDtmfRegeneration.setStatus('mandatory')
mscVncsVpV17EncodedAsG711G726 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpV17EncodedAsG711G726.setStatus('mandatory')
mscVncsVpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 4), )
if mibBuilder.loadTexts: mscVncsVpStatsTable.setStatus('mandatory')
mscVncsVpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 4, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"))
if mibBuilder.loadTexts: mscVncsVpStatsEntry.setStatus('mandatory')
mscVncsVpUsageCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscVncsVpUsageCount.setStatus('mandatory')
mscVncsVpVoiceRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 322), )
if mibBuilder.loadTexts: mscVncsVpVoiceRatesTable.setStatus('obsolete')
mscVncsVpVoiceRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 322, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpVoiceRatesEncodingIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpVoiceRatesRateIndex"))
if mibBuilder.loadTexts: mscVncsVpVoiceRatesEntry.setStatus('obsolete')
mscVncsVpVoiceRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 322, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3))))
if mibBuilder.loadTexts: mscVncsVpVoiceRatesEncodingIndex.setStatus('obsolete')
mscVncsVpVoiceRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 322, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: mscVncsVpVoiceRatesRateIndex.setStatus('obsolete')
mscVncsVpVoiceRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 322, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(80, 80), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpVoiceRatesValue.setStatus('obsolete')
mscVncsVpVoiceEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 323), )
if mibBuilder.loadTexts: mscVncsVpVoiceEncodingChoiceTable.setStatus('obsolete')
mscVncsVpVoiceEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 323, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpVoiceEncodingChoiceIndex"))
if mibBuilder.loadTexts: mscVncsVpVoiceEncodingChoiceEntry.setStatus('obsolete')
mscVncsVpVoiceEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 323, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: mscVncsVpVoiceEncodingChoiceIndex.setStatus('obsolete')
mscVncsVpVoiceEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 323, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpVoiceEncodingChoiceValue.setStatus('obsolete')
mscVncsVpModemFaxRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 324), )
if mibBuilder.loadTexts: mscVncsVpModemFaxRatesTable.setStatus('obsolete')
mscVncsVpModemFaxRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 324, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpModemFaxRatesEncodingIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpModemFaxRatesRateIndex"))
if mibBuilder.loadTexts: mscVncsVpModemFaxRatesEntry.setStatus('obsolete')
mscVncsVpModemFaxRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 324, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2))))
if mibBuilder.loadTexts: mscVncsVpModemFaxRatesEncodingIndex.setStatus('obsolete')
mscVncsVpModemFaxRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 324, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: mscVncsVpModemFaxRatesRateIndex.setStatus('obsolete')
mscVncsVpModemFaxRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 324, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 3), ValueRangeConstraint(12, 12), ValueRangeConstraint(24, 24), ValueRangeConstraint(48, 48), ValueRangeConstraint(72, 72), ValueRangeConstraint(96, 96), ValueRangeConstraint(120, 120), ValueRangeConstraint(144, 144), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpModemFaxRatesValue.setStatus('obsolete')
mscVncsVpModemFaxEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 325), )
if mibBuilder.loadTexts: mscVncsVpModemFaxEncodingChoiceTable.setStatus('obsolete')
mscVncsVpModemFaxEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 325, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpModemFaxEncodingChoiceIndex"))
if mibBuilder.loadTexts: mscVncsVpModemFaxEncodingChoiceEntry.setStatus('obsolete')
mscVncsVpModemFaxEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 325, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: mscVncsVpModemFaxEncodingChoiceIndex.setStatus('obsolete')
mscVncsVpModemFaxEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 325, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpModemFaxEncodingChoiceValue.setStatus('obsolete')
mscVncsVpNewVoiceRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 381), )
if mibBuilder.loadTexts: mscVncsVpNewVoiceRatesTable.setStatus('mandatory')
mscVncsVpNewVoiceRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 381, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpNewVoiceRatesEncodingIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpNewVoiceRatesRateIndex"))
if mibBuilder.loadTexts: mscVncsVpNewVoiceRatesEntry.setStatus('mandatory')
mscVncsVpNewVoiceRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 381, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3))))
if mibBuilder.loadTexts: mscVncsVpNewVoiceRatesEncodingIndex.setStatus('mandatory')
mscVncsVpNewVoiceRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 381, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: mscVncsVpNewVoiceRatesRateIndex.setStatus('mandatory')
mscVncsVpNewVoiceRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 381, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(80, 80), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpNewVoiceRatesValue.setStatus('mandatory')
mscVncsVpNewVoiceEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 382), )
if mibBuilder.loadTexts: mscVncsVpNewVoiceEncodingChoiceTable.setStatus('mandatory')
mscVncsVpNewVoiceEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 382, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpNewVoiceEncodingChoiceIndex"))
if mibBuilder.loadTexts: mscVncsVpNewVoiceEncodingChoiceEntry.setStatus('mandatory')
mscVncsVpNewVoiceEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 382, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: mscVncsVpNewVoiceEncodingChoiceIndex.setStatus('mandatory')
mscVncsVpNewVoiceEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 382, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("g728Only", 2), ("g729Only", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpNewVoiceEncodingChoiceValue.setStatus('mandatory')
mscVncsVpNewModemFaxRatesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 383), )
if mibBuilder.loadTexts: mscVncsVpNewModemFaxRatesTable.setStatus('mandatory')
mscVncsVpNewModemFaxRatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 383, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpNewModemFaxRatesEncodingIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpNewModemFaxRatesRateIndex"))
if mibBuilder.loadTexts: mscVncsVpNewModemFaxRatesEntry.setStatus('mandatory')
mscVncsVpNewModemFaxRatesEncodingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 383, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2))))
if mibBuilder.loadTexts: mscVncsVpNewModemFaxRatesEncodingIndex.setStatus('mandatory')
mscVncsVpNewModemFaxRatesRateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 383, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("min", 0), ("max", 1))))
if mibBuilder.loadTexts: mscVncsVpNewModemFaxRatesRateIndex.setStatus('mandatory')
mscVncsVpNewModemFaxRatesValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 383, 1, 3), FixedPoint1().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 3), ValueRangeConstraint(12, 12), ValueRangeConstraint(24, 24), ValueRangeConstraint(48, 48), ValueRangeConstraint(72, 72), ValueRangeConstraint(96, 96), ValueRangeConstraint(120, 120), ValueRangeConstraint(144, 144), ValueRangeConstraint(160, 160), ValueRangeConstraint(240, 240), ValueRangeConstraint(320, 320), ValueRangeConstraint(640, 640), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpNewModemFaxRatesValue.setStatus('mandatory')
mscVncsVpNewModemFaxEncodingChoiceTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 384), )
if mibBuilder.loadTexts: mscVncsVpNewModemFaxEncodingChoiceTable.setStatus('mandatory')
mscVncsVpNewModemFaxEncodingChoiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 384, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpIndex"), (0, "Nortel-MsCarrier-MscPassport-VncsCallServerMIB", "mscVncsVpNewModemFaxEncodingChoiceIndex"))
if mibBuilder.loadTexts: mscVncsVpNewModemFaxEncodingChoiceEntry.setStatus('mandatory')
mscVncsVpNewModemFaxEncodingChoiceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 384, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("first", 0), ("second", 1), ("third", 2))))
if mibBuilder.loadTexts: mscVncsVpNewModemFaxEncodingChoiceIndex.setStatus('mandatory')
mscVncsVpNewModemFaxEncodingChoiceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 44, 3, 384, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g711Only", 0), ("g711G726", 1), ("relay", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscVncsVpNewModemFaxEncodingChoiceValue.setStatus('mandatory')
vncsCallServerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 1))
vncsCallServerGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 1, 1))
vncsCallServerGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 1, 1, 3))
vncsCallServerGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 1, 1, 3, 2))
vncsCallServerCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 3))
vncsCallServerCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 3, 1))
vncsCallServerCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 3, 1, 3))
vncsCallServerCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 66, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-VncsCallServerMIB", vncsCallServerGroup=vncsCallServerGroup, mscVncsVpNewVoiceRatesEntry=mscVncsVpNewVoiceRatesEntry, mscVncsRowStatusEntry=mscVncsRowStatusEntry, mscVncsVpNewModemFaxRatesEntry=mscVncsVpNewModemFaxRatesEntry, mscVncsDPDnProvTable=mscVncsDPDnProvTable, mscVncsVpNewModemFaxRatesTable=mscVncsVpNewModemFaxRatesTable, mscVncsStorageType=mscVncsStorageType, mscVncsDPDnRowStatusEntry=mscVncsDPDnRowStatusEntry, mscVncsVpVoiceEncodingChoiceEntry=mscVncsVpVoiceEncodingChoiceEntry, mscVncsVpModemFaxRatesEntry=mscVncsVpModemFaxRatesEntry, mscVncsStatsEntry=mscVncsStatsEntry, mscVncsVpNewVoiceEncodingChoiceEntry=mscVncsVpNewVoiceEncodingChoiceEntry, mscVncsVpVoiceRatesEntry=mscVncsVpVoiceRatesEntry, mscVncsVpVoiceEncodingChoiceValue=mscVncsVpVoiceEncodingChoiceValue, mscVncsVpPermittedTrunkTypes=mscVncsVpPermittedTrunkTypes, mscVncsVRoutesValue=mscVncsVRoutesValue, mscVncsCommentText=mscVncsCommentText, mscVncsVpModemFaxEncodingChoiceTable=mscVncsVpModemFaxEncodingChoiceTable, mscVncsVpNewModemFaxRatesRateIndex=mscVncsVpNewModemFaxRatesRateIndex, mscVncsVpFaxIdleSuppressionG711G726=mscVncsVpFaxIdleSuppressionG711G726, mscVncsVpVoiceTrafficOptimization=mscVncsVpVoiceTrafficOptimization, mscVncsVpMaximumAcceptableDelay=mscVncsVpMaximumAcceptableDelay, mscVncsVRoutesTable=mscVncsVRoutesTable, mscVncsVpEmissionPriority=mscVncsVpEmissionPriority, mscVncsVpNewVoiceEncodingChoiceTable=mscVncsVpNewVoiceEncodingChoiceTable, mscVncsVpDiscardPriority=mscVncsVpDiscardPriority, mscVncsVpLCOpsTable=mscVncsVpLCOpsTable, vncsCallServerGroupCA=vncsCallServerGroupCA, mscVncsVpEchoCancellation=mscVncsVpEchoCancellation, mscVncsVpRequiredCustomerParm=mscVncsVpRequiredCustomerParm, mscVncsVpNewVoiceRatesValue=mscVncsVpNewVoiceRatesValue, mscVncsVpNewModemFaxEncodingChoiceValue=mscVncsVpNewModemFaxEncodingChoiceValue, vncsCallServerCapabilitiesCA02A=vncsCallServerCapabilitiesCA02A, mscVncsVpOptimization=mscVncsVpOptimization, vncsCallServerCapabilitiesCA02=vncsCallServerCapabilitiesCA02, mscVncsVpNewModemFaxEncodingChoiceTable=mscVncsVpNewModemFaxEncodingChoiceTable, mscVncsVpBumpPreference=mscVncsVpBumpPreference, mscVncsVpNewModemFaxEncodingChoiceEntry=mscVncsVpNewModemFaxEncodingChoiceEntry, mscVncsDPDnDataNetworkAddress=mscVncsDPDnDataNetworkAddress, mscVncsVpModemFaxRatesTable=mscVncsVpModemFaxRatesTable, mscVncsStatsTable=mscVncsStatsTable, mscVncsVpFrOpsEntry=mscVncsVpFrOpsEntry, mscVncsVpSilenceSuppression=mscVncsVpSilenceSuppression, mscVncsDPDnVoiceProfileNumber=mscVncsDPDnVoiceProfileNumber, mscVncsDPDn=mscVncsDPDn, mscVncsDPDnIndex=mscVncsDPDnIndex, mscVncsVpVoiceEncodingChoiceIndex=mscVncsVpVoiceEncodingChoiceIndex, mscVncsVpModemFaxEncodingChoiceIndex=mscVncsVpModemFaxEncodingChoiceIndex, mscVncsVpV17EncodedAsG711G726=mscVncsVpV17EncodedAsG711G726, mscVncsVpNewVoiceRatesEncodingIndex=mscVncsVpNewVoiceRatesEncodingIndex, mscVncsVpAudioGain=mscVncsVpAudioGain, vncsCallServerCapabilitiesCA=vncsCallServerCapabilitiesCA, mscVncsVpDtmfRegeneration=mscVncsVpDtmfRegeneration, mscVncsVpModemFaxRatesEncodingIndex=mscVncsVpModemFaxRatesEncodingIndex, mscVncsDPRowStatusEntry=mscVncsDPRowStatusEntry, mscVncsVpNewVoiceRatesTable=mscVncsVpNewVoiceRatesTable, mscVncsVpNewVoiceEncodingChoiceIndex=mscVncsVpNewVoiceEncodingChoiceIndex, mscVncsDPStatsTable=mscVncsDPStatsTable, mscVncsDPDnProvEntry=mscVncsDPDnProvEntry, mscVncsDPIncompleteTranslations=mscVncsDPIncompleteTranslations, mscVncsVp=mscVncsVp, mscVncsVpMaxVoiceBitRate=mscVncsVpMaxVoiceBitRate, mscVncsVpModemFaxRatesValue=mscVncsVpModemFaxRatesValue, mscVncsVpUsageCount=mscVncsVpUsageCount, mscVncsVpNewModemFaxEncodingChoiceIndex=mscVncsVpNewModemFaxEncodingChoiceIndex, mscVncsDPIndex=mscVncsDPIndex, mscVncsVpNewModemFaxRatesValue=mscVncsVpNewModemFaxRatesValue, mscVncsVpMaximumAcceptableGatewayCost=mscVncsVpMaximumAcceptableGatewayCost, mscVncsVpMinModemBitRate=mscVncsVpMinModemBitRate, mscVncsDP=mscVncsDP, vncsCallServerGroupCA02=vncsCallServerGroupCA02, mscVncsDPRowStatusTable=mscVncsDPRowStatusTable, mscVncsVpVoiceRatesRateIndex=mscVncsVpVoiceRatesRateIndex, mscVncsVpHoldingPriority=mscVncsVpHoldingPriority, mscVncsVpMinVoiceBitRate=mscVncsVpMinVoiceBitRate, mscVncsDPDnDestinationComponentId=mscVncsDPDnDestinationComponentId, mscVncsVpRowStatus=mscVncsVpRowStatus, mscVncsDPStatsEntry=mscVncsDPStatsEntry, mscVncsDPDnRowStatusTable=mscVncsDPDnRowStatusTable, mscVncsVpLCOpsEntry=mscVncsVpLCOpsEntry, vncsCallServerGroupCA02A=vncsCallServerGroupCA02A, mscVncsVpVoiceRatesTable=mscVncsVpVoiceRatesTable, mscVncsDPDnNumberingPlanIndicator=mscVncsDPDnNumberingPlanIndicator, mscVncsVpNewVoiceRatesRateIndex=mscVncsVpNewVoiceRatesRateIndex, mscVncsVpRowStatusEntry=mscVncsVpRowStatusEntry, mscVncsVpModemFaxRatesRateIndex=mscVncsVpModemFaxRatesRateIndex, mscVncsVpStatsEntry=mscVncsVpStatsEntry, mscVncsVpSetupPriority=mscVncsVpSetupPriority, mscVncsVpRequiredSecurity=mscVncsVpRequiredSecurity, mscVncsVpStorageType=mscVncsVpStorageType, mscVncsVpNewVoiceEncodingChoiceValue=mscVncsVpNewVoiceEncodingChoiceValue, mscVncsVpComponentName=mscVncsVpComponentName, mscVncsDPDnRowStatus=mscVncsDPDnRowStatus, mscVncsVpMaximumAcceptableCost=mscVncsVpMaximumAcceptableCost, mscVncsVpModemFaxEncodingChoiceValue=mscVncsVpModemFaxEncodingChoiceValue, mscVncsDPDnStorageType=mscVncsDPDnStorageType, mscVncsDPComponentName=mscVncsDPComponentName, mscVncsVpInsertedOutputDelay=mscVncsVpInsertedOutputDelay, mscVncsVpIndex=mscVncsVpIndex, mscVncsVpVoiceRatesValue=mscVncsVpVoiceRatesValue, mscVncsVpStatsTable=mscVncsVpStatsTable, mscVncsVpRowStatusTable=mscVncsVpRowStatusTable, mscVncsProvTable=mscVncsProvTable, mscVncsTotalTranslations=mscVncsTotalTranslations, mscVncsProvEntry=mscVncsProvEntry, mscVncsDPCompleteTranslations=mscVncsDPCompleteTranslations, mscVncsVpMaxModemBitRate=mscVncsVpMaxModemBitRate, mscVncsIndex=mscVncsIndex, mscVncsVpPathFailureAction=mscVncsVpPathFailureAction, mscVncsRowStatusTable=mscVncsRowStatusTable, mscVncsDPRowStatus=mscVncsDPRowStatus, mscVncsVRoutesEntry=mscVncsVRoutesEntry, mscVncsVpVoiceRatesEncodingIndex=mscVncsVpVoiceRatesEncodingIndex, mscVncsVpModemFaxEncodingChoiceEntry=mscVncsVpModemFaxEncodingChoiceEntry, mscVncsVpDataCallsAccepted=mscVncsVpDataCallsAccepted, mscVncsComponentName=mscVncsComponentName, mscVncsVpRequiredTrafficType=mscVncsVpRequiredTrafficType, mscVncsRowStatus=mscVncsRowStatus, mscVncsVpPathAttributeToMinimize=mscVncsVpPathAttributeToMinimize, mscVncsDPDnComponentName=mscVncsDPDnComponentName, mscVncsVpNewModemFaxRatesEncodingIndex=mscVncsVpNewModemFaxRatesEncodingIndex, mscVncsDPStorageType=mscVncsDPStorageType, vncsCallServerCapabilities=vncsCallServerCapabilities, mscVncs=mscVncs, vncsCallServerMIB=vncsCallServerMIB, mscVncsVpFrOpsTable=mscVncsVpFrOpsTable, mscVncsVpVoiceEncodingChoiceTable=mscVncsVpVoiceEncodingChoiceTable, mscVncsDPDnDestinationNodeId=mscVncsDPDnDestinationNodeId, mscVncsVpSilenceSuppressionFactor=mscVncsVpSilenceSuppressionFactor, mscVncsDPFailedTranslations=mscVncsDPFailedTranslations)
