#
# PySNMP MIB module ZYXEL-VLAN-STACK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-VLAN-STACK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:46:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, Gauge32, Unsigned32, Counter32, NotificationType, MibIdentifier, Bits, ModuleIdentity, iso, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "Gauge32", "Unsigned32", "Counter32", "NotificationType", "MibIdentifier", "Bits", "ModuleIdentity", "iso", "IpAddress", "Counter64")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelVlanStack = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89))
if mibBuilder.loadTexts: zyxelVlanStack.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelVlanStack.setOrganization('Enterprise Solution ZyXEL')
zyxelVlanStackSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1))
zyVlanStackState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanStackState.setStatus('current')
zyxelVlanStackPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 2), )
if mibBuilder.loadTexts: zyxelVlanStackPortTable.setStatus('current')
zyxelVlanStackPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelVlanStackPortEntry.setStatus('current')
zyVlanStackPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("access", 2), ("tunnel", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanStackPortMode.setStatus('current')
zyVlanStackPortVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanStackPortVid.setStatus('current')
zyVlanStackPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("priority0", 0), ("priority1", 1), ("priority2", 2), ("priority3", 3), ("priority4", 4), ("priority5", 5), ("priority6", 6), ("priority7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanStackPortPriority.setStatus('current')
zyVlanStackTunnelPortTpid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyVlanStackTunnelPortTpid.setStatus('current')
zySelectiveQinQMaxNumberOfRules = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zySelectiveQinQMaxNumberOfRules.setStatus('current')
zyxelSelectiveQinQTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4), )
if mibBuilder.loadTexts: zyxelSelectiveQinQTable.setStatus('current')
zyxelSelectiveQinQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1), ).setIndexNames((0, "ZYXEL-VLAN-STACK-MIB", "zySelectiveQinQPort"), (0, "ZYXEL-VLAN-STACK-MIB", "zySelectiveQinQCvid"))
if mibBuilder.loadTexts: zyxelSelectiveQinQEntry.setStatus('current')
zySelectiveQinQName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySelectiveQinQName.setStatus('current')
zySelectiveQinQPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: zySelectiveQinQPort.setStatus('current')
zySelectiveQinQCvid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1, 3), Integer32())
if mibBuilder.loadTexts: zySelectiveQinQCvid.setStatus('current')
zySelectiveQinQSpvid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySelectiveQinQSpvid.setStatus('current')
zySelectiveQinQPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("priority0", 0), ("priority1", 1), ("priority2", 2), ("priority3", 3), ("priority4", 4), ("priority5", 5), ("priority6", 6), ("priority7", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zySelectiveQinQPriority.setStatus('current')
zySelectiveQinQRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 89, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zySelectiveQinQRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-VLAN-STACK-MIB", zySelectiveQinQName=zySelectiveQinQName, zyVlanStackPortPriority=zyVlanStackPortPriority, zySelectiveQinQPriority=zySelectiveQinQPriority, zySelectiveQinQRowStatus=zySelectiveQinQRowStatus, PYSNMP_MODULE_ID=zyxelVlanStack, zySelectiveQinQMaxNumberOfRules=zySelectiveQinQMaxNumberOfRules, zyVlanStackTunnelPortTpid=zyVlanStackTunnelPortTpid, zyxelVlanStack=zyxelVlanStack, zyxelVlanStackPortTable=zyxelVlanStackPortTable, zyVlanStackPortMode=zyVlanStackPortMode, zyVlanStackState=zyVlanStackState, zyxelSelectiveQinQEntry=zyxelSelectiveQinQEntry, zySelectiveQinQPort=zySelectiveQinQPort, zySelectiveQinQSpvid=zySelectiveQinQSpvid, zyxelVlanStackSetup=zyxelVlanStackSetup, zyxelSelectiveQinQTable=zyxelSelectiveQinQTable, zySelectiveQinQCvid=zySelectiveQinQCvid, zyxelVlanStackPortEntry=zyxelVlanStackPortEntry, zyVlanStackPortVid=zyVlanStackPortVid)
