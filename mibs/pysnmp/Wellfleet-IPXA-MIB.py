#
# PySNMP MIB module Wellfleet-IPXA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-IPXA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, IpAddress, Gauge32, Unsigned32, iso, Counter32, Counter64, ObjectIdentity, Opaque, NotificationType, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "IpAddress", "Gauge32", "Unsigned32", "iso", "Counter32", "Counter64", "ObjectIdentity", "Opaque", "NotificationType", "ModuleIdentity", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfIpxGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfIpxGroup")
wfIpxBasicSysTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15), )
if mibBuilder.loadTexts: wfIpxBasicSysTable.setStatus('mandatory')
wfIpxBasicSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxBasicSysInstance"))
if mibBuilder.loadTexts: wfIpxBasicSysEntry.setStatus('mandatory')
wfIpxBasicSysDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBasicSysDelete.setStatus('mandatory')
wfIpxBasicSysDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBasicSysDisable.setStatus('mandatory')
wfIpxBasicSysState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysState.setStatus('mandatory')
wfIpxBasicSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInstance.setStatus('mandatory')
wfIpxBasicSysPrimaryNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBasicSysPrimaryNetworkNumber.setStatus('mandatory')
wfIpxBasicSysMultipleHostAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBasicSysMultipleHostAddresses.setStatus('mandatory')
wfIpxBasicSysCfgHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBasicSysCfgHostAddress.setStatus('mandatory')
wfIpxBasicSysHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysHostAddress.setStatus('mandatory')
wfIpxBasicSysRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxBasicSysRouterName.setStatus('mandatory')
wfIpxBasicSysInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInReceives.setStatus('mandatory')
wfIpxBasicSysInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInHdrErrors.setStatus('mandatory')
wfIpxBasicSysInUnknownSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInUnknownSockets.setStatus('mandatory')
wfIpxBasicSysInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInDiscards.setStatus('mandatory')
wfIpxBasicSysInBadChecksums = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInBadChecksums.setStatus('mandatory')
wfIpxBasicSysInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysInDelivers.setStatus('mandatory')
wfIpxBasicSysNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysNoRoutes.setStatus('mandatory')
wfIpxBasicSysOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysOutRequests.setStatus('mandatory')
wfIpxBasicSysOutMalformedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysOutMalformedRequests.setStatus('mandatory')
wfIpxBasicSysOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysOutPackets.setStatus('mandatory')
wfIpxBasicSysOpenEncapsFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysOpenEncapsFails.setStatus('mandatory')
wfIpxBasicSysOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 15, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxBasicSysOutDiscards.setStatus('mandatory')
wfIpxAdvSysTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16), )
if mibBuilder.loadTexts: wfIpxAdvSysTable.setStatus('mandatory')
wfIpxAdvSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxAdvSysInstance"))
if mibBuilder.loadTexts: wfIpxAdvSysEntry.setStatus('mandatory')
wfIpxAdvSysDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysDelete.setStatus('mandatory')
wfIpxAdvSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysInstance.setStatus('mandatory')
wfIpxAdvSysRoutingMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hop", 1), ("tick", 2))).clone('tick')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysRoutingMethod.setStatus('mandatory')
wfIpxAdvSysLogFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 16, 3, 17, 18, 19))).clone(namedValues=NamedValues(("debug", 1), ("info", 2), ("trace", 16), ("debuginfo", 3), ("debugtrace", 17), ("infotrace", 18), ("debuginfotrace", 19))).clone('trace')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysLogFilter.setStatus('mandatory')
wfIpxAdvSysMaximumPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysMaximumPath.setStatus('mandatory')
wfIpxAdvSysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 6), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysMaxPathSplits.setStatus('mandatory')
wfIpxAdvSysMaxHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 7), Integer32().clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysMaxHops.setStatus('mandatory')
wfIpxAdvSysInTooManyHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysInTooManyHops.setStatus('mandatory')
wfIpxAdvSysInFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysInFiltered.setStatus('mandatory')
wfIpxAdvSysInCompressDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysInCompressDiscards.setStatus('mandatory')
wfIpxAdvSysNETBIOSPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysNETBIOSPackets.setStatus('mandatory')
wfIpxAdvSysForwPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysForwPackets.setStatus('mandatory')
wfIpxAdvSysOutFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysOutFiltered.setStatus('mandatory')
wfIpxAdvSysOutCompressDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysOutCompressDiscards.setStatus('mandatory')
wfIpxAdvSysNovellCertificationConformanceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysNovellCertificationConformanceDisable.setStatus('mandatory')
wfIpxAdvSysCircCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysCircCount.setStatus('mandatory')
wfIpxAdvSysCfgDestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysCfgDestCount.setStatus('mandatory')
wfIpxAdvSysDestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysDestCount.setStatus('mandatory')
wfIpxAdvSysCfgServCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysCfgServCount.setStatus('mandatory')
wfIpxAdvSysServCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysServCount.setStatus('mandatory')
wfIpxAdvSysCfgHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysCfgHostCount.setStatus('mandatory')
wfIpxAdvSysHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAdvSysHostCount.setStatus('mandatory')
wfIpxAdvSysAgingFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 23), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysAgingFrequency.setStatus('mandatory')
wfIpxAdvSysAgingPendingFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 24), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysAgingPendingFrequency.setStatus('mandatory')
wfIpxAdvSysDefaultRouteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysDefaultRouteEnable.setStatus('mandatory')
wfIpxAdvSysSapViaDefaultRouteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysSapViaDefaultRouteEnable.setStatus('mandatory')
wfIpxAdvSysCT = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysCT.setStatus('mandatory')
wfIpxAdvSysMibReplySlots = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysMibReplySlots.setStatus('mandatory')
wfIpxAdvSysGNSRespMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("alphabetical", 1), ("lastlearned", 2))).clone('alphabetical')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysGNSRespMode.setStatus('mandatory')
wfIpxAdvSysMaxNetTblSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysMaxNetTblSize.setStatus('mandatory')
wfIpxAdvSysNetTblFillNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysNetTblFillNotify.setStatus('mandatory')
wfIpxAdvSysGlobalTrigUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysGlobalTrigUpdate.setStatus('mandatory')
wfIpxAdvSysTrigUpdateDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysTrigUpdateDelay.setStatus('mandatory')
wfIpxAdvSysLostRouteDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 16, 1, 34), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAdvSysLostRouteDelay.setStatus('mandatory')
wfIpxCircTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17), )
if mibBuilder.loadTexts: wfIpxCircTable.setStatus('mandatory')
wfIpxCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxCircSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxCircIndex"))
if mibBuilder.loadTexts: wfIpxCircEntry.setStatus('mandatory')
wfIpxCircDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircDelete.setStatus('mandatory')
wfIpxCircDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircDisable.setStatus('mandatory')
wfIpxCircState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircState.setStatus('mandatory')
wfIpxCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircSysInstance.setStatus('mandatory')
wfIpxCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircIndex.setStatus('mandatory')
wfIpxCircIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircIfIndex.setStatus('mandatory')
wfIpxCircName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircName.setStatus('mandatory')
wfIpxCircCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("other", 1), ("broadcast", 2), ("pt", 4), ("wanrip", 8), ("unnumberedrip", 16), ("dynamic", 32), ("ws", 64), ("nlsp", 128))).clone('dynamic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgType.setStatus('mandatory')
wfIpxCircLocalMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircLocalMaxPacketSize.setStatus('mandatory')
wfIpxCircCfgCompressState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgCompressState.setStatus('mandatory')
wfIpxCircCompressState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressState.setStatus('mandatory')
wfIpxCircCompressSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 12), Integer32().clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCompressSlots.setStatus('mandatory')
wfIpxCircCompressedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressedSent.setStatus('mandatory')
wfIpxCircCompressedInitSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressedInitSent.setStatus('mandatory')
wfIpxCircCompressedRejectsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressedRejectsSent.setStatus('mandatory')
wfIpxCircUncompressedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircUncompressedSent.setStatus('mandatory')
wfIpxCircCompressedReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressedReceived.setStatus('mandatory')
wfIpxCircCompressedInitReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressedInitReceived.setStatus('mandatory')
wfIpxCircCompressedRejectsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircCompressedRejectsReceived.setStatus('mandatory')
wfIpxCircUncompressedReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircUncompressedReceived.setStatus('mandatory')
wfIpxCircMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircMediaType.setStatus('mandatory')
wfIpxCircCfgNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 22), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgNetworkNumber.setStatus('mandatory')
wfIpxCircNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 23), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircNetworkNumber.setStatus('mandatory')
wfIpxCircCommonNetworkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 24), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCommonNetworkNumber.setStatus('mandatory')
wfIpxCircCfgHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgHostAddress.setStatus('mandatory')
wfIpxCircHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircHostAddress.setStatus('mandatory')
wfIpxCircMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircMacAddress.setStatus('mandatory')
wfIpxCircCfgBroadcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 28), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgBroadcastAddress.setStatus('mandatory')
wfIpxCircBroadcastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircBroadcastAddress.setStatus('mandatory')
wfIpxCircCfgMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 30), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgMulticastAddress.setStatus('mandatory')
wfIpxCircMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircMulticastAddress.setStatus('mandatory')
wfIpxCircStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircStateChanges.setStatus('mandatory')
wfIpxCircInitFails = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInitFails.setStatus('mandatory')
wfIpxCircDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircDelay.setStatus('mandatory')
wfIpxCircThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircThroughput.setStatus('mandatory')
wfIpxCircNeighRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircNeighRouterName.setStatus('mandatory')
wfIpxCircNeighInternalNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircNeighInternalNetNum.setStatus('mandatory')
wfIpxCircCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 38), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCost.setStatus('mandatory')
wfIpxCircChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircChecksum.setStatus('mandatory')
wfIpxCircCfgEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ethernet", 1), ("lsap", 2), ("novell", 3), ("snap", 4), ("ppp", 5))).clone('ethernet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgEncaps.setStatus('mandatory')
wfIpxCircEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ethernet", 1), ("lsap", 2), ("novell", 3), ("snap", 4), ("ppp", 5))).clone('ethernet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircEncaps.setStatus('mandatory')
wfIpxCircInTooManyHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInTooManyHops.setStatus('mandatory')
wfIpxCircInFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInFiltered.setStatus('mandatory')
wfIpxCircInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInHdrErrors.setStatus('mandatory')
wfIpxCircInUnknownSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInUnknownSockets.setStatus('mandatory')
wfIpxCircNETBIOSPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircNETBIOSPackets.setStatus('mandatory')
wfIpxCircInBadChecksums = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInBadChecksums.setStatus('mandatory')
wfIpxCircInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInDelivers.setStatus('mandatory')
wfIpxCircInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircInDiscards.setStatus('mandatory')
wfIpxCircNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircNoRoutes.setStatus('mandatory')
wfIpxCircOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircOutRequests.setStatus('mandatory')
wfIpxCircOutMalformedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircOutMalformedRequests.setStatus('mandatory')
wfIpxCircOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircOutDiscards.setStatus('mandatory')
wfIpxCircOutFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircOutFiltered.setStatus('mandatory')
wfIpxCircDestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircDestCount.setStatus('mandatory')
wfIpxCircServCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircServCount.setStatus('mandatory')
wfIpxCircHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircHostCount.setStatus('mandatory')
wfIpxCircForwardCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircForwardCount.setStatus('mandatory')
wfIpxCircTrEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircTrEndStation.setStatus('mandatory')
wfIpxCircNetbiosAccept = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircNetbiosAccept.setStatus('mandatory')
wfIpxCircNetbiosDeliver = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircNetbiosDeliver.setStatus('mandatory')
wfIpxCircSMDSIndividualAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 62), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircSMDSIndividualAddress.setStatus('mandatory')
wfIpxCircType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("broadcast", 2), ("pt", 3), ("wanrip", 4), ("unnumberedrip", 5), ("dynamic", 6), ("ws", 7), ("nlsp", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircType.setStatus('mandatory')
wfIpxCircWatchdogSpoof = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircWatchdogSpoof.setStatus('mandatory')
wfIpxCircIPXOutWatchdogSpoofRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircIPXOutWatchdogSpoofRsps.setStatus('mandatory')
wfIpxCircCfgDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 66), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgDelay.setStatus('mandatory')
wfIpxCircCfgThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 67), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircCfgThroughput.setStatus('mandatory')
wfIpxCircSPXOutWatchdogSpoofRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircSPXOutWatchdogSpoofRsps.setStatus('mandatory')
wfIpxCircInitStabilizationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 69), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircInitStabilizationTimer.setStatus('mandatory')
wfIpxCircSVCBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxCircSVCBroadcast.setStatus('mandatory')
wfIpxCircVRRPTriggerState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 17, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxCircVRRPTriggerState.setStatus('mandatory')
wfIpxDestEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18), )
if mibBuilder.loadTexts: wfIpxDestEntryTable.setStatus('mandatory')
wfIpxDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxDestSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxDestNetNum"))
if mibBuilder.loadTexts: wfIpxDestEntry.setStatus('mandatory')
wfIpxDestSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestSysInstance.setStatus('mandatory')
wfIpxDestNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestNetNum.setStatus('mandatory')
wfIpxDestProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("nlsp", 4), ("static", 5))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestProtocol.setStatus('mandatory')
wfIpxDestTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestTicks.setStatus('mandatory')
wfIpxDestHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestHopCount.setStatus('mandatory')
wfIpxDestNextHopCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestNextHopCircIndex.setStatus('mandatory')
wfIpxDestNextHopHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestNextHopHostAddress.setStatus('mandatory')
wfIpxDestNextHopNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestNextHopNetNum.setStatus('mandatory')
wfIpxDestAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxDestAge.setStatus('mandatory')
wfIpxUserStaticRouteEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19), )
if mibBuilder.loadTexts: wfIpxUserStaticRouteEntryTable.setStatus('mandatory')
wfIpxUserStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticRouteSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticRouteCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticRouteNetNum"))
if mibBuilder.loadTexts: wfIpxUserStaticRouteEntry.setStatus('mandatory')
wfIpxUserStaticRouteDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticRouteDelete.setStatus('mandatory')
wfIpxUserStaticRouteDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticRouteDisable.setStatus('mandatory')
wfIpxUserStaticRouteSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticRouteSysInstance.setStatus('mandatory')
wfIpxUserStaticRouteCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticRouteCircIndex.setStatus('mandatory')
wfIpxUserStaticRouteNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticRouteNetNum.setStatus('mandatory')
wfIpxUserStaticRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticRouteTicks.setStatus('mandatory')
wfIpxUserStaticRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticRouteHopCount.setStatus('mandatory')
wfIpxUserStaticRouteNextHopHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 19, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticRouteNextHopHostAddress.setStatus('mandatory')
wfIpxAutoStaticRouteEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20), )
if mibBuilder.loadTexts: wfIpxAutoStaticRouteEntryTable.setStatus('mandatory')
wfIpxAutoStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticRouteSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticRouteCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticRouteNetNum"))
if mibBuilder.loadTexts: wfIpxAutoStaticRouteEntry.setStatus('mandatory')
wfIpxAutoStaticRouteDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteDelete.setStatus('mandatory')
wfIpxAutoStaticRouteDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteDisable.setStatus('mandatory')
wfIpxAutoStaticRouteSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteSysInstance.setStatus('mandatory')
wfIpxAutoStaticRouteCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteCircIndex.setStatus('mandatory')
wfIpxAutoStaticRouteNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteNetNum.setStatus('mandatory')
wfIpxAutoStaticRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteTicks.setStatus('mandatory')
wfIpxAutoStaticRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteHopCount.setStatus('mandatory')
wfIpxAutoStaticRouteNextHopHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 20, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticRouteNextHopHostAddress.setStatus('mandatory')
wfIpxStaticRouteMaskEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21), )
if mibBuilder.loadTexts: wfIpxStaticRouteMaskEntryTable.setStatus('mandatory')
wfIpxStaticRouteMaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxStaticRouteMaskSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticRouteMaskCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticRouteMaskNetwork"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticRouteMaskNetworkMask"))
if mibBuilder.loadTexts: wfIpxStaticRouteMaskEntry.setStatus('mandatory')
wfIpxStaticRouteMaskDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticRouteMaskDelete.setStatus('mandatory')
wfIpxStaticRouteMaskDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticRouteMaskDisable.setStatus('mandatory')
wfIpxStaticRouteMaskSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticRouteMaskSysInstance.setStatus('mandatory')
wfIpxStaticRouteMaskCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticRouteMaskCircIndex.setStatus('mandatory')
wfIpxStaticRouteMaskNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticRouteMaskNetwork.setStatus('mandatory')
wfIpxStaticRouteMaskNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 21, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticRouteMaskNetworkMask.setStatus('mandatory')
wfIpxServEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22), )
if mibBuilder.loadTexts: wfIpxServEntryTable.setStatus('mandatory')
wfIpxServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxServSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxServType"), (0, "Wellfleet-IPXA-MIB", "wfIpxServName"))
if mibBuilder.loadTexts: wfIpxServEntry.setStatus('mandatory')
wfIpxServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServSysInstance.setStatus('mandatory')
wfIpxServType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServType.setStatus('mandatory')
wfIpxServName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServName.setStatus('mandatory')
wfIpxServProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("nlsp", 4), ("static", 5), ("sap", 6))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServProtocol.setStatus('mandatory')
wfIpxServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNetNum.setStatus('mandatory')
wfIpxServNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNode.setStatus('mandatory')
wfIpxServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServSocket.setStatus('mandatory')
wfIpxServHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServHopCount.setStatus('mandatory')
wfIpxServNextHopCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNextHopCircIndex.setStatus('mandatory')
wfIpxServNextHopHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNextHopHostAddress.setStatus('mandatory')
wfIpxServNextHopNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNextHopNetNum.setStatus('mandatory')
wfIpxServAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 22, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServAge.setStatus('mandatory')
wfIpxUserStaticServEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23), )
if mibBuilder.loadTexts: wfIpxUserStaticServEntryTable.setStatus('mandatory')
wfIpxUserStaticServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticServSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticServCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticServName"), (0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticServType"))
if mibBuilder.loadTexts: wfIpxUserStaticServEntry.setStatus('mandatory')
wfIpxUserStaticServDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticServDelete.setStatus('mandatory')
wfIpxUserStaticServDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticServDisable.setStatus('mandatory')
wfIpxUserStaticServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticServSysInstance.setStatus('mandatory')
wfIpxUserStaticServCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticServCircIndex.setStatus('mandatory')
wfIpxUserStaticServName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticServName.setStatus('mandatory')
wfIpxUserStaticServType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticServType.setStatus('mandatory')
wfIpxUserStaticServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticServNetNum.setStatus('mandatory')
wfIpxUserStaticServHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticServHostAddress.setStatus('mandatory')
wfIpxUserStaticServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticServSocket.setStatus('mandatory')
wfIpxUserStaticServHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 23, 1, 10), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticServHopCount.setStatus('mandatory')
wfIpxAutoStaticServEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24), )
if mibBuilder.loadTexts: wfIpxAutoStaticServEntryTable.setStatus('mandatory')
wfIpxAutoStaticServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticServSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticServCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticServName"), (0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticServType"))
if mibBuilder.loadTexts: wfIpxAutoStaticServEntry.setStatus('mandatory')
wfIpxAutoStaticServDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAutoStaticServDelete.setStatus('mandatory')
wfIpxAutoStaticServDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAutoStaticServDisable.setStatus('mandatory')
wfIpxAutoStaticServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServSysInstance.setStatus('mandatory')
wfIpxAutoStaticServCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServCircIndex.setStatus('mandatory')
wfIpxAutoStaticServName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServName.setStatus('mandatory')
wfIpxAutoStaticServType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServType.setStatus('mandatory')
wfIpxAutoStaticServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServNetNum.setStatus('mandatory')
wfIpxAutoStaticServHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServHostAddress.setStatus('mandatory')
wfIpxAutoStaticServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServSocket.setStatus('mandatory')
wfIpxAutoStaticServHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 24, 1, 10), Integer32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticServHopCount.setStatus('mandatory')
wfIpxStaticServMaskEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25), )
if mibBuilder.loadTexts: wfIpxStaticServMaskEntryTable.setStatus('mandatory')
wfIpxStaticServMaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxStaticServMaskSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticServMaskCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticServMaskNetwork"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticServMaskNetworkMask"))
if mibBuilder.loadTexts: wfIpxStaticServMaskEntry.setStatus('mandatory')
wfIpxStaticServMaskDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticServMaskDelete.setStatus('mandatory')
wfIpxStaticServMaskDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticServMaskDisable.setStatus('mandatory')
wfIpxStaticServMaskSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticServMaskSysInstance.setStatus('mandatory')
wfIpxStaticServMaskCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticServMaskCircIndex.setStatus('mandatory')
wfIpxStaticServMaskNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticServMaskNetwork.setStatus('mandatory')
wfIpxStaticServMaskNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 25, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticServMaskNetworkMask.setStatus('mandatory')
wfIpxStaticHostEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26), )
if mibBuilder.loadTexts: wfIpxStaticHostEntryTable.setStatus('mandatory')
wfIpxStaticHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxStaticHostSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticHostCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxStaticHostAddress"))
if mibBuilder.loadTexts: wfIpxStaticHostEntry.setStatus('mandatory')
wfIpxStaticHostDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostDelete.setStatus('mandatory')
wfIpxStaticHostDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostDisable.setStatus('mandatory')
wfIpxStaticHostSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticHostSysInstance.setStatus('mandatory')
wfIpxStaticHostCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticHostCircIndex.setStatus('mandatory')
wfIpxStaticHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxStaticHostAddress.setStatus('mandatory')
wfIpxStaticHostWanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostWanAddress.setStatus('mandatory')
wfIpxStaticHostSubaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostSubaddress.setStatus('mandatory')
wfIpxStaticHostTypeOfNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("international", 2))).clone('international')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostTypeOfNumber.setStatus('mandatory')
wfIpxStaticHostType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fre164", 1), ("default", 2), ("frx121", 3), ("frdlci", 4), ("gre", 5), ("atmsvc", 6))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostType.setStatus('mandatory')
wfIpxStaticHostGreConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 26, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxStaticHostGreConnName.setStatus('mandatory')
wfIpxUserStaticNETBIOSTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27), )
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSTable.setStatus('mandatory')
wfIpxUserStaticNETBIOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticNETBIOSSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxUserStaticNETBIOSName"))
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSEntry.setStatus('mandatory')
wfIpxUserStaticNETBIOSDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSDelete.setStatus('mandatory')
wfIpxUserStaticNETBIOSDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSDisable.setStatus('mandatory')
wfIpxUserStaticNETBIOSSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSSysInstance.setStatus('mandatory')
wfIpxUserStaticNETBIOSName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSName.setStatus('mandatory')
wfIpxUserStaticNETBIOSDestNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 27, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxUserStaticNETBIOSDestNetwork.setStatus('mandatory')
wfIpxAutoStaticNETBIOSTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28), )
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSTable.setStatus('mandatory')
wfIpxAutoStaticNETBIOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticNETBIOSSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxAutoStaticNETBIOSDestNetwork"))
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSEntry.setStatus('mandatory')
wfIpxAutoStaticNETBIOSDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSDelete.setStatus('mandatory')
wfIpxAutoStaticNETBIOSDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSDisable.setStatus('mandatory')
wfIpxAutoStaticNETBIOSSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSSysInstance.setStatus('mandatory')
wfIpxAutoStaticNETBIOSDestNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSDestNetwork.setStatus('mandatory')
wfIpxAutoStaticNETBIOSName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 28, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxAutoStaticNETBIOSName.setStatus('mandatory')
wfIpxRouteFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29), )
if mibBuilder.loadTexts: wfIpxRouteFilterTable.setStatus('mandatory')
wfIpxRouteFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxRouteFilterSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxRouteFilterCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxRouteFilterRuleNumber"))
if mibBuilder.loadTexts: wfIpxRouteFilterEntry.setStatus('mandatory')
wfIpxRouteFilterDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterDelete.setStatus('mandatory')
wfIpxRouteFilterDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterDisable.setStatus('mandatory')
wfIpxRouteFilterSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRouteFilterSysInstance.setStatus('mandatory')
wfIpxRouteFilterCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRouteFilterCircIndex.setStatus('mandatory')
wfIpxRouteFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRouteFilterRuleNumber.setStatus('mandatory')
wfIpxRouteFilterNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterNetwork.setStatus('mandatory')
wfIpxRouteFilterNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterNetworkMask.setStatus('mandatory')
wfIpxRouteFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outbound", 1), ("inbound", 2), ("both", 3))).clone('outbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterMode.setStatus('mandatory')
wfIpxRouteFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertise", 1), ("suppress", 2))).clone('advertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterAction.setStatus('mandatory')
wfIpxRouteFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("any", 1), ("local", 2), ("rip", 3), ("nlsp", 4), ("static", 5))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterProtocol.setStatus('mandatory')
wfIpxRouteFilterCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterCost.setStatus('mandatory')
wfIpxRouteFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRouteFilterCounter.setStatus('mandatory')
wfIpxRouteFilterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 29, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRouteFilterPriority.setStatus('mandatory')
wfIpxServNetFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30), )
if mibBuilder.loadTexts: wfIpxServNetFilterTable.setStatus('mandatory')
wfIpxServNetFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxServNetFilterSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxServNetFilterCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxServNetFilterRuleNumber"))
if mibBuilder.loadTexts: wfIpxServNetFilterEntry.setStatus('mandatory')
wfIpxServNetFilterDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterDelete.setStatus('mandatory')
wfIpxServNetFilterDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterDisable.setStatus('mandatory')
wfIpxServNetFilterSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNetFilterSysInstance.setStatus('mandatory')
wfIpxServNetFilterCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNetFilterCircIndex.setStatus('mandatory')
wfIpxServNetFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNetFilterRuleNumber.setStatus('mandatory')
wfIpxServNetFilterNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterNetwork.setStatus('mandatory')
wfIpxServNetFilterNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterNetworkMask.setStatus('mandatory')
wfIpxServNetFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterType.setStatus('mandatory')
wfIpxServNetFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outbound", 1), ("inbound", 2), ("both", 3))).clone('outbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterMode.setStatus('mandatory')
wfIpxServNetFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertise", 1), ("suppress", 2))).clone('advertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterAction.setStatus('mandatory')
wfIpxServNetFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("any", 1), ("local", 2), ("nlsp", 4), ("static", 5), ("sap", 6))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterProtocol.setStatus('mandatory')
wfIpxServNetFilterCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterCost.setStatus('mandatory')
wfIpxServNetFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNetFilterCounter.setStatus('mandatory')
wfIpxServNetFilterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 30, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNetFilterPriority.setStatus('mandatory')
wfIpxServNameFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31), )
if mibBuilder.loadTexts: wfIpxServNameFilterTable.setStatus('mandatory')
wfIpxServNameFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxServNameFilterSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxServNameFilterCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxServNameFilterRuleNumber"))
if mibBuilder.loadTexts: wfIpxServNameFilterEntry.setStatus('mandatory')
wfIpxServNameFilterDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterDelete.setStatus('mandatory')
wfIpxServNameFilterDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterDisable.setStatus('mandatory')
wfIpxServNameFilterSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNameFilterSysInstance.setStatus('mandatory')
wfIpxServNameFilterCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNameFilterCircIndex.setStatus('mandatory')
wfIpxServNameFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNameFilterRuleNumber.setStatus('mandatory')
wfIpxServNameFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterName.setStatus('mandatory')
wfIpxServNameFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterType.setStatus('mandatory')
wfIpxServNameFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("outbound", 1), ("inbound", 2), ("both", 3))).clone('outbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterMode.setStatus('mandatory')
wfIpxServNameFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("advertise", 1), ("suppress", 2))).clone('advertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterAction.setStatus('mandatory')
wfIpxServNameFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("any", 1), ("local", 2), ("nlsp", 4), ("static", 5), ("sap", 6))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterProtocol.setStatus('mandatory')
wfIpxServNameFilterCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterCost.setStatus('mandatory')
wfIpxServNameFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxServNameFilterCounter.setStatus('mandatory')
wfIpxServNameFilterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 31, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxServNameFilterPriority.setStatus('mandatory')
wfIpxRipCircTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32), )
if mibBuilder.loadTexts: wfIpxRipCircTable.setStatus('mandatory')
wfIpxRipCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxRipCircSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxRipCircIndex"))
if mibBuilder.loadTexts: wfIpxRipCircEntry.setStatus('mandatory')
wfIpxRipCircDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircDelete.setStatus('mandatory')
wfIpxRipCircDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircDisable.setStatus('mandatory')
wfIpxRipCircState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipCircState.setStatus('mandatory')
wfIpxRipCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipCircSysInstance.setStatus('mandatory')
wfIpxRipCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipCircIndex.setStatus('mandatory')
wfIpxRipCircMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("standard", 1), ("listen", 2), ("supply", 3), ("auto", 4))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircMode.setStatus('mandatory')
wfIpxRipCircPace = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 7), Integer32().clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircPace.setStatus('mandatory')
wfIpxRipCircUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 8), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircUpdate.setStatus('mandatory')
wfIpxRipCircAgeMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 9), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircAgeMultiplier.setStatus('mandatory')
wfIpxRipCircPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 10), Integer32().clone(432)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircPacketSize.setStatus('mandatory')
wfIpxRipCircOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipCircOutPackets.setStatus('mandatory')
wfIpxRipCircInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipCircInPackets.setStatus('mandatory')
wfIpxRipCircBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxRipCircBadPackets.setStatus('mandatory')
wfIpxRipCircUseMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircUseMulticast.setStatus('mandatory')
wfIpxRipCircSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircSplitHorizon.setStatus('mandatory')
wfIpxRipCircGenAutoStaticRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircGenAutoStaticRoutes.setStatus('mandatory')
wfIpxRipCircImmedUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("useglobal", 3))).clone('useglobal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircImmedUpdate.setStatus('mandatory')
wfIpxRipCircDefaultRouteSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircDefaultRouteSupply.setStatus('mandatory')
wfIpxRipCircDefaultRouteListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircDefaultRouteListen.setStatus('mandatory')
wfIpxRipCircLostRouteDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 32, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxRipCircLostRouteDisable.setStatus('mandatory')
wfIpxSapCircTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33), )
if mibBuilder.loadTexts: wfIpxSapCircTable.setStatus('mandatory')
wfIpxSapCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxSapCircSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxSapCircIndex"))
if mibBuilder.loadTexts: wfIpxSapCircEntry.setStatus('mandatory')
wfIpxSapCircDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircDelete.setStatus('mandatory')
wfIpxSapCircDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircDisable.setStatus('mandatory')
wfIpxSapCircState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapCircState.setStatus('mandatory')
wfIpxSapCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapCircSysInstance.setStatus('mandatory')
wfIpxSapCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapCircIndex.setStatus('mandatory')
wfIpxSapCircMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("standard", 1), ("listen", 2), ("supply", 3), ("auto", 4))).clone('standard')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircMode.setStatus('mandatory')
wfIpxSapCircPace = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 7), Integer32().clone(18)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircPace.setStatus('mandatory')
wfIpxSapCircUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 8), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircUpdate.setStatus('mandatory')
wfIpxSapCircAgeMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 9), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircAgeMultiplier.setStatus('mandatory')
wfIpxSapCircPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 10), Integer32().clone(480)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircPacketSize.setStatus('mandatory')
wfIpxSapCircGetNearestServerReply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircGetNearestServerReply.setStatus('mandatory')
wfIpxSapCircNSQAlphabetical = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircNSQAlphabetical.setStatus('mandatory')
wfIpxSapCircOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapCircOutPackets.setStatus('mandatory')
wfIpxSapCircInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapCircInPackets.setStatus('mandatory')
wfIpxSapCircBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxSapCircBadPackets.setStatus('mandatory')
wfIpxSapCircUseMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircUseMulticast.setStatus('mandatory')
wfIpxSapCircSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircSplitHorizon.setStatus('mandatory')
wfIpxSapCircGenAutoStaticServices = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircGenAutoStaticServices.setStatus('mandatory')
wfIpxSapCircImmedUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("useglobal", 3))).clone('useglobal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircImmedUpdate.setStatus('mandatory')
wfIpxSapCircSaveFullName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 33, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxSapCircSaveFullName.setStatus('mandatory')
wfIpxHostEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34), )
if mibBuilder.loadTexts: wfIpxHostEntryTable.setStatus('mandatory')
wfIpxHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxHostSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxHostNextHopCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxHostHostAddress"))
if mibBuilder.loadTexts: wfIpxHostEntry.setStatus('mandatory')
wfIpxHostSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostSysInstance.setStatus('mandatory')
wfIpxHostNextHopCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostNextHopCircIndex.setStatus('mandatory')
wfIpxHostHostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostHostAddress.setStatus('mandatory')
wfIpxHostNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostNetNum.setStatus('mandatory')
wfIpxHostWanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostWanAddress.setStatus('mandatory')
wfIpxHostProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("dynamic", 3), ("static", 4))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostProtocol.setStatus('mandatory')
wfIpxHostAge = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 34, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxHostAge.setStatus('mandatory')
wfIpxForwardEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35), )
if mibBuilder.loadTexts: wfIpxForwardEntryTable.setStatus('mandatory')
wfIpxForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxForwardSysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxForwardCircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxForwardNetNum"))
if mibBuilder.loadTexts: wfIpxForwardEntry.setStatus('mandatory')
wfIpxForwardSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxForwardSysInstance.setStatus('mandatory')
wfIpxForwardCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxForwardCircIndex.setStatus('mandatory')
wfIpxForwardNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxForwardNetNum.setStatus('mandatory')
wfIpxForwardType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("remote", 3))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxForwardType.setStatus('mandatory')
wfIpxForwardProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("nlsp", 4), ("static", 5))).clone('other')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxForwardProtocol.setStatus('mandatory')
wfIpxForwardCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 35, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxForwardCount.setStatus('mandatory')
wfIpxTrafficFilter2Table = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36), )
if mibBuilder.loadTexts: wfIpxTrafficFilter2Table.setStatus('mandatory')
wfIpxTrafficFilter2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1), ).setIndexNames((0, "Wellfleet-IPXA-MIB", "wfIpxTrafficFilter2SysInstance"), (0, "Wellfleet-IPXA-MIB", "wfIpxTrafficFilter2CircIndex"), (0, "Wellfleet-IPXA-MIB", "wfIpxTrafficFilter2RuleNumber"), (0, "Wellfleet-IPXA-MIB", "wfIpxTrafficFilter2Fragment"))
if mibBuilder.loadTexts: wfIpxTrafficFilter2Entry.setStatus('mandatory')
wfIpxTrafficFilter2Create = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Create.setStatus('mandatory')
wfIpxTrafficFilter2Enable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Enable.setStatus('mandatory')
wfIpxTrafficFilter2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Status.setStatus('mandatory')
wfIpxTrafficFilter2Counter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Counter.setStatus('mandatory')
wfIpxTrafficFilter2Definition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Definition.setStatus('mandatory')
wfIpxTrafficFilter2Reserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Reserved.setStatus('mandatory')
wfIpxTrafficFilter2SysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2SysInstance.setStatus('mandatory')
wfIpxTrafficFilter2CircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2CircIndex.setStatus('mandatory')
wfIpxTrafficFilter2RuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2RuleNumber.setStatus('mandatory')
wfIpxTrafficFilter2Fragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Fragment.setStatus('mandatory')
wfIpxTrafficFilter2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 5, 36, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfIpxTrafficFilter2Name.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-IPXA-MIB", wfIpxBasicSysInDelivers=wfIpxBasicSysInDelivers, wfIpxStaticServMaskSysInstance=wfIpxStaticServMaskSysInstance, wfIpxStaticHostDisable=wfIpxStaticHostDisable, wfIpxRipCircImmedUpdate=wfIpxRipCircImmedUpdate, wfIpxAdvSysDestCount=wfIpxAdvSysDestCount, wfIpxRipCircUseMulticast=wfIpxRipCircUseMulticast, wfIpxCircDelay=wfIpxCircDelay, wfIpxCircCompressState=wfIpxCircCompressState, wfIpxRouteFilterPriority=wfIpxRouteFilterPriority, wfIpxStaticRouteMaskEntry=wfIpxStaticRouteMaskEntry, wfIpxRipCircDisable=wfIpxRipCircDisable, wfIpxSapCircNSQAlphabetical=wfIpxSapCircNSQAlphabetical, wfIpxCircInDiscards=wfIpxCircInDiscards, wfIpxRipCircLostRouteDisable=wfIpxRipCircLostRouteDisable, wfIpxCircNETBIOSPackets=wfIpxCircNETBIOSPackets, wfIpxStaticRouteMaskCircIndex=wfIpxStaticRouteMaskCircIndex, wfIpxTrafficFilter2Fragment=wfIpxTrafficFilter2Fragment, wfIpxAdvSysMaxHops=wfIpxAdvSysMaxHops, wfIpxAdvSysTrigUpdateDelay=wfIpxAdvSysTrigUpdateDelay, wfIpxServNetFilterCounter=wfIpxServNetFilterCounter, wfIpxServNameFilterType=wfIpxServNameFilterType, wfIpxForwardType=wfIpxForwardType, wfIpxTrafficFilter2RuleNumber=wfIpxTrafficFilter2RuleNumber, wfIpxStaticRouteMaskNetworkMask=wfIpxStaticRouteMaskNetworkMask, wfIpxCircInBadChecksums=wfIpxCircInBadChecksums, wfIpxStaticHostDelete=wfIpxStaticHostDelete, wfIpxUserStaticRouteNetNum=wfIpxUserStaticRouteNetNum, wfIpxBasicSysDelete=wfIpxBasicSysDelete, wfIpxBasicSysMultipleHostAddresses=wfIpxBasicSysMultipleHostAddresses, wfIpxCircNetbiosAccept=wfIpxCircNetbiosAccept, wfIpxAutoStaticServEntryTable=wfIpxAutoStaticServEntryTable, wfIpxTrafficFilter2Table=wfIpxTrafficFilter2Table, wfIpxRipCircAgeMultiplier=wfIpxRipCircAgeMultiplier, wfIpxAutoStaticNETBIOSTable=wfIpxAutoStaticNETBIOSTable, wfIpxUserStaticRouteDelete=wfIpxUserStaticRouteDelete, wfIpxAutoStaticRouteSysInstance=wfIpxAutoStaticRouteSysInstance, wfIpxStaticHostGreConnName=wfIpxStaticHostGreConnName, wfIpxCircUncompressedReceived=wfIpxCircUncompressedReceived, wfIpxRipCircState=wfIpxRipCircState, wfIpxCircIndex=wfIpxCircIndex, wfIpxStaticServMaskNetworkMask=wfIpxStaticServMaskNetworkMask, wfIpxUserStaticServEntryTable=wfIpxUserStaticServEntryTable, wfIpxServNetFilterAction=wfIpxServNetFilterAction, wfIpxSapCircDisable=wfIpxSapCircDisable, wfIpxServType=wfIpxServType, wfIpxCircNoRoutes=wfIpxCircNoRoutes, wfIpxRipCircBadPackets=wfIpxRipCircBadPackets, wfIpxCircCommonNetworkNumber=wfIpxCircCommonNetworkNumber, wfIpxServNetFilterEntry=wfIpxServNetFilterEntry, wfIpxHostAge=wfIpxHostAge, wfIpxCircNeighInternalNetNum=wfIpxCircNeighInternalNetNum, wfIpxForwardCircIndex=wfIpxForwardCircIndex, wfIpxAdvSysCT=wfIpxAdvSysCT, wfIpxDestSysInstance=wfIpxDestSysInstance, wfIpxAutoStaticNETBIOSSysInstance=wfIpxAutoStaticNETBIOSSysInstance, wfIpxServNextHopCircIndex=wfIpxServNextHopCircIndex, wfIpxAutoStaticServCircIndex=wfIpxAutoStaticServCircIndex, wfIpxHostNetNum=wfIpxHostNetNum, wfIpxStaticServMaskDelete=wfIpxStaticServMaskDelete, wfIpxServNameFilterCounter=wfIpxServNameFilterCounter, wfIpxServNode=wfIpxServNode, wfIpxServNetFilterPriority=wfIpxServNetFilterPriority, wfIpxUserStaticServHostAddress=wfIpxUserStaticServHostAddress, wfIpxAdvSysInFiltered=wfIpxAdvSysInFiltered, wfIpxRouteFilterNetworkMask=wfIpxRouteFilterNetworkMask, wfIpxCircCfgNetworkNumber=wfIpxCircCfgNetworkNumber, wfIpxAutoStaticRouteNetNum=wfIpxAutoStaticRouteNetNum, wfIpxAutoStaticServNetNum=wfIpxAutoStaticServNetNum, wfIpxCircCompressedInitReceived=wfIpxCircCompressedInitReceived, wfIpxUserStaticRouteEntry=wfIpxUserStaticRouteEntry, wfIpxServNameFilterRuleNumber=wfIpxServNameFilterRuleNumber, wfIpxSapCircIndex=wfIpxSapCircIndex, wfIpxAutoStaticRouteNextHopHostAddress=wfIpxAutoStaticRouteNextHopHostAddress, wfIpxServSocket=wfIpxServSocket, wfIpxAutoStaticServType=wfIpxAutoStaticServType, wfIpxServNameFilterDisable=wfIpxServNameFilterDisable, wfIpxCircDisable=wfIpxCircDisable, wfIpxCircForwardCount=wfIpxCircForwardCount, wfIpxCircTrEndStation=wfIpxCircTrEndStation, wfIpxRouteFilterCircIndex=wfIpxRouteFilterCircIndex, wfIpxRipCircPace=wfIpxRipCircPace, wfIpxServEntryTable=wfIpxServEntryTable, wfIpxServNetFilterRuleNumber=wfIpxServNetFilterRuleNumber, wfIpxCircInHdrErrors=wfIpxCircInHdrErrors, wfIpxAutoStaticRouteEntry=wfIpxAutoStaticRouteEntry, wfIpxBasicSysInstance=wfIpxBasicSysInstance, wfIpxUserStaticServNetNum=wfIpxUserStaticServNetNum, wfIpxSapCircInPackets=wfIpxSapCircInPackets, wfIpxUserStaticNETBIOSEntry=wfIpxUserStaticNETBIOSEntry, wfIpxAdvSysAgingFrequency=wfIpxAdvSysAgingFrequency, wfIpxUserStaticRouteSysInstance=wfIpxUserStaticRouteSysInstance, wfIpxUserStaticRouteHopCount=wfIpxUserStaticRouteHopCount, wfIpxHostEntry=wfIpxHostEntry, wfIpxCircCfgDelay=wfIpxCircCfgDelay, wfIpxTrafficFilter2Status=wfIpxTrafficFilter2Status, wfIpxUserStaticNETBIOSName=wfIpxUserStaticNETBIOSName, wfIpxAdvSysOutFiltered=wfIpxAdvSysOutFiltered, wfIpxAutoStaticServDisable=wfIpxAutoStaticServDisable, wfIpxRipCircGenAutoStaticRoutes=wfIpxRipCircGenAutoStaticRoutes, wfIpxCircCompressSlots=wfIpxCircCompressSlots, wfIpxHostProtocol=wfIpxHostProtocol, wfIpxRouteFilterAction=wfIpxRouteFilterAction, wfIpxCircSVCBroadcast=wfIpxCircSVCBroadcast, wfIpxAdvSysGlobalTrigUpdate=wfIpxAdvSysGlobalTrigUpdate, wfIpxCircHostCount=wfIpxCircHostCount, wfIpxServNetFilterSysInstance=wfIpxServNetFilterSysInstance, wfIpxServProtocol=wfIpxServProtocol, wfIpxBasicSysInHdrErrors=wfIpxBasicSysInHdrErrors, wfIpxStaticHostEntryTable=wfIpxStaticHostEntryTable, wfIpxCircHostAddress=wfIpxCircHostAddress, wfIpxAdvSysInTooManyHops=wfIpxAdvSysInTooManyHops, wfIpxServEntry=wfIpxServEntry, wfIpxRipCircSysInstance=wfIpxRipCircSysInstance, wfIpxServSysInstance=wfIpxServSysInstance, wfIpxUserStaticServHopCount=wfIpxUserStaticServHopCount, wfIpxDestNetNum=wfIpxDestNetNum, wfIpxHostHostAddress=wfIpxHostHostAddress, wfIpxCircCost=wfIpxCircCost, wfIpxUserStaticServType=wfIpxUserStaticServType, wfIpxStaticHostEntry=wfIpxStaticHostEntry, wfIpxSapCircTable=wfIpxSapCircTable, wfIpxAdvSysAgingPendingFrequency=wfIpxAdvSysAgingPendingFrequency, wfIpxTrafficFilter2CircIndex=wfIpxTrafficFilter2CircIndex, wfIpxStaticHostWanAddress=wfIpxStaticHostWanAddress, wfIpxStaticHostAddress=wfIpxStaticHostAddress, wfIpxAdvSysTable=wfIpxAdvSysTable, wfIpxAdvSysLogFilter=wfIpxAdvSysLogFilter, wfIpxBasicSysDisable=wfIpxBasicSysDisable, wfIpxAutoStaticNETBIOSDelete=wfIpxAutoStaticNETBIOSDelete, wfIpxRouteFilterTable=wfIpxRouteFilterTable, wfIpxAdvSysEntry=wfIpxAdvSysEntry, wfIpxAdvSysNETBIOSPackets=wfIpxAdvSysNETBIOSPackets, wfIpxStaticHostSubaddress=wfIpxStaticHostSubaddress, wfIpxBasicSysRouterName=wfIpxBasicSysRouterName, wfIpxCircName=wfIpxCircName, wfIpxCircLocalMaxPacketSize=wfIpxCircLocalMaxPacketSize, wfIpxUserStaticRouteNextHopHostAddress=wfIpxUserStaticRouteNextHopHostAddress, wfIpxSapCircUpdate=wfIpxSapCircUpdate, wfIpxServNetFilterNetwork=wfIpxServNetFilterNetwork, wfIpxAdvSysMibReplySlots=wfIpxAdvSysMibReplySlots, wfIpxCircTable=wfIpxCircTable, wfIpxBasicSysPrimaryNetworkNumber=wfIpxBasicSysPrimaryNetworkNumber, wfIpxSapCircGenAutoStaticServices=wfIpxSapCircGenAutoStaticServices, wfIpxCircStateChanges=wfIpxCircStateChanges, wfIpxAutoStaticRouteDelete=wfIpxAutoStaticRouteDelete, wfIpxAutoStaticRouteDisable=wfIpxAutoStaticRouteDisable, wfIpxBasicSysNoRoutes=wfIpxBasicSysNoRoutes, wfIpxHostNextHopCircIndex=wfIpxHostNextHopCircIndex, wfIpxBasicSysInDiscards=wfIpxBasicSysInDiscards, wfIpxServNetFilterDelete=wfIpxServNetFilterDelete, wfIpxCircNeighRouterName=wfIpxCircNeighRouterName, wfIpxStaticServMaskEntryTable=wfIpxStaticServMaskEntryTable, wfIpxUserStaticRouteCircIndex=wfIpxUserStaticRouteCircIndex, wfIpxBasicSysCfgHostAddress=wfIpxBasicSysCfgHostAddress, wfIpxSapCircBadPackets=wfIpxSapCircBadPackets, wfIpxUserStaticServSocket=wfIpxUserStaticServSocket, wfIpxCircEntry=wfIpxCircEntry, wfIpxRipCircIndex=wfIpxRipCircIndex, wfIpxCircIfIndex=wfIpxCircIfIndex, wfIpxHostEntryTable=wfIpxHostEntryTable, wfIpxBasicSysInReceives=wfIpxBasicSysInReceives, wfIpxServNetFilterMode=wfIpxServNetFilterMode, wfIpxAdvSysServCount=wfIpxAdvSysServCount, wfIpxDestNextHopCircIndex=wfIpxDestNextHopCircIndex, wfIpxServNetFilterCost=wfIpxServNetFilterCost, wfIpxServNetFilterProtocol=wfIpxServNetFilterProtocol, wfIpxCircDestCount=wfIpxCircDestCount, wfIpxServAge=wfIpxServAge, wfIpxRouteFilterSysInstance=wfIpxRouteFilterSysInstance, wfIpxBasicSysOpenEncapsFails=wfIpxBasicSysOpenEncapsFails, wfIpxForwardNetNum=wfIpxForwardNetNum, wfIpxCircServCount=wfIpxCircServCount, wfIpxUserStaticRouteDisable=wfIpxUserStaticRouteDisable, wfIpxCircCfgHostAddress=wfIpxCircCfgHostAddress, wfIpxAdvSysForwPackets=wfIpxAdvSysForwPackets, wfIpxCircCompressedSent=wfIpxCircCompressedSent, wfIpxCircCfgEncaps=wfIpxCircCfgEncaps, wfIpxBasicSysHostAddress=wfIpxBasicSysHostAddress, wfIpxCircCompressedReceived=wfIpxCircCompressedReceived, wfIpxAutoStaticRouteEntryTable=wfIpxAutoStaticRouteEntryTable, wfIpxRipCircDelete=wfIpxRipCircDelete, wfIpxCircCompressedRejectsReceived=wfIpxCircCompressedRejectsReceived, wfIpxServNameFilterMode=wfIpxServNameFilterMode, wfIpxTrafficFilter2Name=wfIpxTrafficFilter2Name, wfIpxForwardSysInstance=wfIpxForwardSysInstance, wfIpxCircWatchdogSpoof=wfIpxCircWatchdogSpoof, wfIpxRipCircDefaultRouteListen=wfIpxRipCircDefaultRouteListen, wfIpxCircNetworkNumber=wfIpxCircNetworkNumber, wfIpxAdvSysMaxNetTblSize=wfIpxAdvSysMaxNetTblSize, wfIpxDestEntry=wfIpxDestEntry, wfIpxUserStaticRouteEntryTable=wfIpxUserStaticRouteEntryTable, wfIpxCircCfgCompressState=wfIpxCircCfgCompressState, wfIpxServNetFilterNetworkMask=wfIpxServNetFilterNetworkMask, wfIpxForwardProtocol=wfIpxForwardProtocol, wfIpxAdvSysInCompressDiscards=wfIpxAdvSysInCompressDiscards, wfIpxCircEncaps=wfIpxCircEncaps, wfIpxServNameFilterName=wfIpxServNameFilterName, wfIpxRipCircPacketSize=wfIpxRipCircPacketSize, wfIpxCircInFiltered=wfIpxCircInFiltered, wfIpxAdvSysDelete=wfIpxAdvSysDelete, wfIpxUserStaticServEntry=wfIpxUserStaticServEntry, wfIpxServNameFilterProtocol=wfIpxServNameFilterProtocol, wfIpxStaticServMaskCircIndex=wfIpxStaticServMaskCircIndex, wfIpxAutoStaticRouteTicks=wfIpxAutoStaticRouteTicks, wfIpxBasicSysInUnknownSockets=wfIpxBasicSysInUnknownSockets, wfIpxAutoStaticRouteHopCount=wfIpxAutoStaticRouteHopCount, wfIpxBasicSysTable=wfIpxBasicSysTable, wfIpxCircCfgBroadcastAddress=wfIpxCircCfgBroadcastAddress, wfIpxAutoStaticNETBIOSEntry=wfIpxAutoStaticNETBIOSEntry, wfIpxCircInitStabilizationTimer=wfIpxCircInitStabilizationTimer, wfIpxServNetFilterDisable=wfIpxServNetFilterDisable, wfIpxAutoStaticServDelete=wfIpxAutoStaticServDelete, wfIpxRipCircUpdate=wfIpxRipCircUpdate, wfIpxDestNextHopNetNum=wfIpxDestNextHopNetNum, wfIpxUserStaticNETBIOSDelete=wfIpxUserStaticNETBIOSDelete, wfIpxStaticRouteMaskDelete=wfIpxStaticRouteMaskDelete, wfIpxSapCircSplitHorizon=wfIpxSapCircSplitHorizon, wfIpxAutoStaticRouteCircIndex=wfIpxAutoStaticRouteCircIndex, wfIpxBasicSysOutDiscards=wfIpxBasicSysOutDiscards, wfIpxUserStaticNETBIOSDestNetwork=wfIpxUserStaticNETBIOSDestNetwork, wfIpxUserStaticServDisable=wfIpxUserStaticServDisable, wfIpxCircOutFiltered=wfIpxCircOutFiltered, wfIpxDestAge=wfIpxDestAge, wfIpxStaticHostCircIndex=wfIpxStaticHostCircIndex, wfIpxServNameFilterAction=wfIpxServNameFilterAction, wfIpxStaticServMaskEntry=wfIpxStaticServMaskEntry, wfIpxRipCircOutPackets=wfIpxRipCircOutPackets, wfIpxCircSMDSIndividualAddress=wfIpxCircSMDSIndividualAddress, wfIpxBasicSysState=wfIpxBasicSysState, wfIpxStaticServMaskDisable=wfIpxStaticServMaskDisable, wfIpxCircIPXOutWatchdogSpoofRsps=wfIpxCircIPXOutWatchdogSpoofRsps, wfIpxRouteFilterDisable=wfIpxRouteFilterDisable, wfIpxCircInDelivers=wfIpxCircInDelivers, wfIpxAdvSysRoutingMethod=wfIpxAdvSysRoutingMethod, wfIpxTrafficFilter2Definition=wfIpxTrafficFilter2Definition, wfIpxStaticHostSysInstance=wfIpxStaticHostSysInstance, wfIpxDestProtocol=wfIpxDestProtocol, wfIpxCircSPXOutWatchdogSpoofRsps=wfIpxCircSPXOutWatchdogSpoofRsps, wfIpxUserStaticServDelete=wfIpxUserStaticServDelete, wfIpxRipCircInPackets=wfIpxRipCircInPackets, wfIpxServNextHopNetNum=wfIpxServNextHopNetNum, wfIpxSapCircState=wfIpxSapCircState, wfIpxAutoStaticServEntry=wfIpxAutoStaticServEntry, wfIpxCircOutRequests=wfIpxCircOutRequests, wfIpxSapCircImmedUpdate=wfIpxSapCircImmedUpdate, wfIpxServNameFilterCircIndex=wfIpxServNameFilterCircIndex, wfIpxCircThroughput=wfIpxCircThroughput, wfIpxRipCircTable=wfIpxRipCircTable, wfIpxBasicSysInBadChecksums=wfIpxBasicSysInBadChecksums, wfIpxServNetFilterType=wfIpxServNetFilterType, wfIpxRouteFilterRuleNumber=wfIpxRouteFilterRuleNumber, wfIpxSapCircMode=wfIpxSapCircMode, wfIpxCircMacAddress=wfIpxCircMacAddress, wfIpxStaticRouteMaskNetwork=wfIpxStaticRouteMaskNetwork)
mibBuilder.exportSymbols("Wellfleet-IPXA-MIB", wfIpxRouteFilterMode=wfIpxRouteFilterMode, wfIpxAdvSysCfgDestCount=wfIpxAdvSysCfgDestCount, wfIpxAutoStaticNETBIOSName=wfIpxAutoStaticNETBIOSName, wfIpxCircState=wfIpxCircState, wfIpxCircOutMalformedRequests=wfIpxCircOutMalformedRequests, wfIpxServNameFilterPriority=wfIpxServNameFilterPriority, wfIpxAdvSysCfgHostCount=wfIpxAdvSysCfgHostCount, wfIpxCircInTooManyHops=wfIpxCircInTooManyHops, wfIpxUserStaticRouteTicks=wfIpxUserStaticRouteTicks, wfIpxSapCircSaveFullName=wfIpxSapCircSaveFullName, wfIpxDestNextHopHostAddress=wfIpxDestNextHopHostAddress, wfIpxStaticHostType=wfIpxStaticHostType, wfIpxForwardEntry=wfIpxForwardEntry, wfIpxTrafficFilter2Reserved=wfIpxTrafficFilter2Reserved, wfIpxRouteFilterCost=wfIpxRouteFilterCost, wfIpxAdvSysInstance=wfIpxAdvSysInstance, wfIpxSapCircDelete=wfIpxSapCircDelete, wfIpxAutoStaticServName=wfIpxAutoStaticServName, wfIpxAdvSysHostCount=wfIpxAdvSysHostCount, wfIpxAdvSysOutCompressDiscards=wfIpxAdvSysOutCompressDiscards, wfIpxUserStaticNETBIOSDisable=wfIpxUserStaticNETBIOSDisable, wfIpxRipCircSplitHorizon=wfIpxRipCircSplitHorizon, wfIpxCircMulticastAddress=wfIpxCircMulticastAddress, wfIpxCircCompressedInitSent=wfIpxCircCompressedInitSent, wfIpxSapCircAgeMultiplier=wfIpxSapCircAgeMultiplier, wfIpxAdvSysNetTblFillNotify=wfIpxAdvSysNetTblFillNotify, wfIpxAutoStaticServHopCount=wfIpxAutoStaticServHopCount, wfIpxStaticRouteMaskSysInstance=wfIpxStaticRouteMaskSysInstance, wfIpxSapCircEntry=wfIpxSapCircEntry, wfIpxBasicSysEntry=wfIpxBasicSysEntry, wfIpxServHopCount=wfIpxServHopCount, wfIpxRipCircEntry=wfIpxRipCircEntry, wfIpxUserStaticServSysInstance=wfIpxUserStaticServSysInstance, wfIpxRouteFilterProtocol=wfIpxRouteFilterProtocol, wfIpxAutoStaticServSysInstance=wfIpxAutoStaticServSysInstance, wfIpxCircSysInstance=wfIpxCircSysInstance, wfIpxServNameFilterEntry=wfIpxServNameFilterEntry, wfIpxAdvSysNovellCertificationConformanceDisable=wfIpxAdvSysNovellCertificationConformanceDisable, wfIpxAdvSysSapViaDefaultRouteEnable=wfIpxAdvSysSapViaDefaultRouteEnable, wfIpxServNameFilterTable=wfIpxServNameFilterTable, wfIpxCircVRRPTriggerState=wfIpxCircVRRPTriggerState, wfIpxTrafficFilter2SysInstance=wfIpxTrafficFilter2SysInstance, wfIpxSapCircUseMulticast=wfIpxSapCircUseMulticast, wfIpxServNameFilterCost=wfIpxServNameFilterCost, wfIpxAdvSysCfgServCount=wfIpxAdvSysCfgServCount, wfIpxCircCompressedRejectsSent=wfIpxCircCompressedRejectsSent, wfIpxServName=wfIpxServName, wfIpxBasicSysOutPackets=wfIpxBasicSysOutPackets, wfIpxCircDelete=wfIpxCircDelete, wfIpxTrafficFilter2Create=wfIpxTrafficFilter2Create, wfIpxCircUncompressedSent=wfIpxCircUncompressedSent, wfIpxSapCircPacketSize=wfIpxSapCircPacketSize, wfIpxCircCfgThroughput=wfIpxCircCfgThroughput, wfIpxCircMediaType=wfIpxCircMediaType, wfIpxCircBroadcastAddress=wfIpxCircBroadcastAddress, wfIpxServNameFilterDelete=wfIpxServNameFilterDelete, wfIpxHostWanAddress=wfIpxHostWanAddress, wfIpxRouteFilterEntry=wfIpxRouteFilterEntry, wfIpxTrafficFilter2Enable=wfIpxTrafficFilter2Enable, wfIpxForwardCount=wfIpxForwardCount, wfIpxStaticServMaskNetwork=wfIpxStaticServMaskNetwork, wfIpxAutoStaticServHostAddress=wfIpxAutoStaticServHostAddress, wfIpxUserStaticNETBIOSTable=wfIpxUserStaticNETBIOSTable, wfIpxCircCfgMulticastAddress=wfIpxCircCfgMulticastAddress, wfIpxUserStaticServCircIndex=wfIpxUserStaticServCircIndex, wfIpxTrafficFilter2Counter=wfIpxTrafficFilter2Counter, wfIpxAdvSysDefaultRouteEnable=wfIpxAdvSysDefaultRouteEnable, wfIpxStaticRouteMaskEntryTable=wfIpxStaticRouteMaskEntryTable, wfIpxAdvSysMaximumPath=wfIpxAdvSysMaximumPath, wfIpxAdvSysLostRouteDelay=wfIpxAdvSysLostRouteDelay, wfIpxSapCircOutPackets=wfIpxSapCircOutPackets, wfIpxCircCfgType=wfIpxCircCfgType, wfIpxRouteFilterNetwork=wfIpxRouteFilterNetwork, wfIpxBasicSysOutRequests=wfIpxBasicSysOutRequests, wfIpxDestTicks=wfIpxDestTicks, wfIpxUserStaticNETBIOSSysInstance=wfIpxUserStaticNETBIOSSysInstance, wfIpxRipCircMode=wfIpxRipCircMode, wfIpxDestHopCount=wfIpxDestHopCount, wfIpxAutoStaticServSocket=wfIpxAutoStaticServSocket, wfIpxRipCircDefaultRouteSupply=wfIpxRipCircDefaultRouteSupply, wfIpxAdvSysCircCount=wfIpxAdvSysCircCount, wfIpxTrafficFilter2Entry=wfIpxTrafficFilter2Entry, wfIpxRouteFilterDelete=wfIpxRouteFilterDelete, wfIpxForwardEntryTable=wfIpxForwardEntryTable, wfIpxCircInitFails=wfIpxCircInitFails, wfIpxBasicSysOutMalformedRequests=wfIpxBasicSysOutMalformedRequests, wfIpxStaticHostTypeOfNumber=wfIpxStaticHostTypeOfNumber, wfIpxCircNetbiosDeliver=wfIpxCircNetbiosDeliver, wfIpxAdvSysMaxPathSplits=wfIpxAdvSysMaxPathSplits, wfIpxSapCircSysInstance=wfIpxSapCircSysInstance, wfIpxCircInUnknownSockets=wfIpxCircInUnknownSockets, wfIpxDestEntryTable=wfIpxDestEntryTable, wfIpxCircType=wfIpxCircType, wfIpxRouteFilterCounter=wfIpxRouteFilterCounter, wfIpxServNetFilterCircIndex=wfIpxServNetFilterCircIndex, wfIpxServNetNum=wfIpxServNetNum, wfIpxAutoStaticNETBIOSDestNetwork=wfIpxAutoStaticNETBIOSDestNetwork, wfIpxAutoStaticNETBIOSDisable=wfIpxAutoStaticNETBIOSDisable, wfIpxCircOutDiscards=wfIpxCircOutDiscards, wfIpxSapCircPace=wfIpxSapCircPace, wfIpxCircChecksum=wfIpxCircChecksum, wfIpxAdvSysGNSRespMode=wfIpxAdvSysGNSRespMode, wfIpxSapCircGetNearestServerReply=wfIpxSapCircGetNearestServerReply, wfIpxUserStaticServName=wfIpxUserStaticServName, wfIpxHostSysInstance=wfIpxHostSysInstance, wfIpxStaticRouteMaskDisable=wfIpxStaticRouteMaskDisable, wfIpxServNextHopHostAddress=wfIpxServNextHopHostAddress, wfIpxServNetFilterTable=wfIpxServNetFilterTable, wfIpxServNameFilterSysInstance=wfIpxServNameFilterSysInstance)
