#
# PySNMP MIB module DEV-CFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEV-CFG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Unsigned32, IpAddress, iso, enterprises, TimeTicks, MibIdentifier, Counter64, Counter32, ModuleIdentity, Gauge32, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Unsigned32", "IpAddress", "iso", "enterprises", "TimeTicks", "MibIdentifier", "Counter64", "Counter32", "ModuleIdentity", "Gauge32", "NotificationType", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbDeviceConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 11))
nbDevGen = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1))
nbDevOperationMode = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accelerouter", 1), ("router", 2), ("switch", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevOperationMode.setStatus('mandatory')
nbDevErrorText = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbDevErrorText.setStatus('mandatory')
nbDevRouterSaveConfig = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("saveConfig", 1), ("resetConfig", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbDevRouterSaveConfig.setStatus('mandatory')
nbsDevProperties = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevProperties.setStatus('mandatory')
nbsDevTemperatureMode = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("normal", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevTemperatureMode.setStatus('mandatory')
nbsDevPS = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8))
nbsDevPSNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSNumber.setStatus('mandatory')
nbsDevPSTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2), )
if mibBuilder.loadTexts: nbsDevPSTable.setStatus('mandatory')
nbsDevPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1), ).setIndexNames((0, "DEV-CFG-MIB", "nbsDevPSIndex"))
if mibBuilder.loadTexts: nbsDevPSEntry.setStatus('mandatory')
nbsDevPSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSIndex.setStatus('mandatory')
nbsDevPSType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("acPS", 2), ("dcPS", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSType.setStatus('mandatory')
nbsDevPSDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSDescription.setStatus('mandatory')
nbsDevPSRedundantMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("mainPS", 2), ("secondaryPS", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSRedundantMode.setStatus('mandatory')
nbsDevPSOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSOperStatus.setStatus('mandatory')
nbsDevPSAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsDevPSAdminStatus.setStatus('mandatory')
nbsDevPSInput = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9))
nbsDevPSInputNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSInputNumber.setStatus('mandatory')
nbsDevPSInputTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2), )
if mibBuilder.loadTexts: nbsDevPSInputTable.setStatus('mandatory')
nbsDevPSInputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1), ).setIndexNames((0, "DEV-CFG-MIB", "nbsDevPSInputIndex"))
if mibBuilder.loadTexts: nbsDevPSInputEntry.setStatus('mandatory')
nbsDevPSInputIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSInputIndex.setStatus('mandatory')
nbsDevPSInputType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("acInput", 2), ("dcInput", 3), ("dcRedundInput", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSInputType.setStatus('mandatory')
nbsDevPSInputDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSInputDescription.setStatus('mandatory')
nbsDevPSInputRedundantMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("mainInput", 2), ("secondaryInput", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSInputRedundantMode.setStatus('mandatory')
nbsDevPSInputOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevPSInputOperStatus.setStatus('mandatory')
nbsDevPSInputAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsDevPSInputAdminStatus.setStatus('mandatory')
nbsDevCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10))
nbsDevCPUNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPUNumber.setStatus('mandatory')
nbsDevCPUTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2), )
if mibBuilder.loadTexts: nbsDevCPUTable.setStatus('mandatory')
nbsDevCPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1), ).setIndexNames((0, "DEV-CFG-MIB", "nbsDevCPUIndex"))
if mibBuilder.loadTexts: nbsDevCPUEntry.setStatus('mandatory')
nbsDevCPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPUIndex.setStatus('mandatory')
nbsDevCPUType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("cx33CPU", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPUType.setStatus('mandatory')
nbsDevCPUDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPUDescription.setStatus('mandatory')
nbsDevCPURedundantMode = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("mainCPU", 2), ("redundantCPU", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPURedundantMode.setStatus('mandatory')
nbsDevCPUOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPUOperStatus.setStatus('mandatory')
nbsDevCPUAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsDevCPUAdminStatus.setStatus('mandatory')
nbsDevCPUOrderNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 10, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevCPUOrderNumber.setStatus('mandatory')
nbsDevFAN = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11))
nbsDevFANsNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevFANsNumber.setStatus('mandatory')
nbsDevFANTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2), )
if mibBuilder.loadTexts: nbsDevFANTable.setStatus('mandatory')
nbsDevFANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2, 1), ).setIndexNames((0, "DEV-CFG-MIB", "nbsDevFANIndex"))
if mibBuilder.loadTexts: nbsDevFANEntry.setStatus('mandatory')
nbsDevFANIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevFANIndex.setStatus('mandatory')
nbsDevFANType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("none", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevFANType.setStatus('mandatory')
nbsDevFANDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevFANDescription.setStatus('mandatory')
nbsDevFANOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsDevFANOperStatus.setStatus('mandatory')
nbsDevFANAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 11, 1, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("notActive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsDevFANAdminStatus.setStatus('mandatory')
mibBuilder.exportSymbols("DEV-CFG-MIB", nbsDevPSType=nbsDevPSType, nbDevErrorText=nbDevErrorText, nbsDevTemperatureMode=nbsDevTemperatureMode, nbsDevCPUDescription=nbsDevCPUDescription, nbsDevFANEntry=nbsDevFANEntry, nbDevGen=nbDevGen, nbsDevPSInputType=nbsDevPSInputType, nbsDevPSInputDescription=nbsDevPSInputDescription, nbsDevCPUEntry=nbsDevCPUEntry, nbsDevPSDescription=nbsDevPSDescription, nbsDevPSInputEntry=nbsDevPSInputEntry, nbsDevPSInput=nbsDevPSInput, nbsDevFANOperStatus=nbsDevFANOperStatus, nbsDevProperties=nbsDevProperties, nbsDevCPUNumber=nbsDevCPUNumber, nbsDevPSAdminStatus=nbsDevPSAdminStatus, nbsDevPSInputNumber=nbsDevPSInputNumber, nbsDevFANIndex=nbsDevFANIndex, nbsDevFANType=nbsDevFANType, nbsDevPSInputTable=nbsDevPSInputTable, nbDeviceConfig=nbDeviceConfig, nbsDevCPUTable=nbsDevCPUTable, nbsDevFANDescription=nbsDevFANDescription, nbSwitchG1Il=nbSwitchG1Il, nbsDevPSIndex=nbsDevPSIndex, nbsDevCPU=nbsDevCPU, nbsDevFANsNumber=nbsDevFANsNumber, nbsDevCPURedundantMode=nbsDevCPURedundantMode, nbase=nbase, nbsDevPSOperStatus=nbsDevPSOperStatus, nbsDevPSInputOperStatus=nbsDevPSInputOperStatus, nbSwitchG1=nbSwitchG1, nbsDevCPUOrderNumber=nbsDevCPUOrderNumber, nbsDevPSNumber=nbsDevPSNumber, nbDevOperationMode=nbDevOperationMode, nbsDevPSRedundantMode=nbsDevPSRedundantMode, nbsDevPS=nbsDevPS, nbsDevCPUAdminStatus=nbsDevCPUAdminStatus, nbsDevFANAdminStatus=nbsDevFANAdminStatus, nbDevRouterSaveConfig=nbDevRouterSaveConfig, nbsDevPSInputIndex=nbsDevPSInputIndex, nbsDevCPUType=nbsDevCPUType, nbsDevPSTable=nbsDevPSTable, nbsDevCPUOperStatus=nbsDevCPUOperStatus, nbsDevFANTable=nbsDevFANTable, nbsDevFAN=nbsDevFAN, nbsDevCPUIndex=nbsDevCPUIndex, nbsDevPSEntry=nbsDevPSEntry, nbsDevPSInputAdminStatus=nbsDevPSInputAdminStatus, nbsDevPSInputRedundantMode=nbsDevPSInputRedundantMode)
