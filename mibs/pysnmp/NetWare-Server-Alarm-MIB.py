#
# PySNMP MIB module NetWare-Server-Alarm-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NetWare-Server-Alarm-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
InternationalDisplayString, = mibBuilder.importSymbols("HOST-RESOURCES-MIB", "InternationalDisplayString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ObjectIdentity, Gauge32, Counter32, iso, ModuleIdentity, Counter64, enterprises, NotificationType, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Gauge32", "Counter32", "iso", "ModuleIdentity", "Counter64", "enterprises", "NotificationType", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "NotificationType", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
nwalarm_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 10)).setLabel("nwalarm-mib")
trapinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 10, 1))
class NetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

memoryAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: memoryAddress.setStatus('mandatory')
auditEventNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 2), Integer32())
if mibBuilder.loadTexts: auditEventNumber.setStatus('mandatory')
blockNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 3), Integer32())
if mibBuilder.loadTexts: blockNumber.setStatus('mandatory')
numberOfBlocks = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 4), Integer32())
if mibBuilder.loadTexts: numberOfBlocks.setStatus('mandatory')
packetSize = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 5), Integer32())
if mibBuilder.loadTexts: packetSize.setStatus('mandatory')
boardNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 6), Integer32())
if mibBuilder.loadTexts: boardNumber.setStatus('mandatory')
codeOffset = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 7), Integer32())
if mibBuilder.loadTexts: codeOffset.setStatus('mandatory')
connectionNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 8), Integer32())
if mibBuilder.loadTexts: connectionNumber.setStatus('mandatory')
dataStreamNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 9), Integer32())
if mibBuilder.loadTexts: dataStreamNumber.setStatus('mandatory')
diskSpace = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 10), Integer32())
if mibBuilder.loadTexts: diskSpace.setStatus('mandatory')
domainName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 11), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: domainName.setStatus('mandatory')
resourceDescription = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 12), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: resourceDescription.setStatus('mandatory')
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 13), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: deviceName.setStatus('mandatory')
dosType = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 14), Integer32())
if mibBuilder.loadTexts: dosType.setStatus('mandatory')
errorNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 15), Integer32())
if mibBuilder.loadTexts: errorNumber.setStatus('mandatory')
exceptionName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 16), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: exceptionName.setStatus('mandatory')
eipAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 17), Integer32())
if mibBuilder.loadTexts: eipAddress.setStatus('mandatory')
fileName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 18), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: fileName.setStatus('mandatory')
pathName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 19), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 124)))
if mibBuilder.loadTexts: pathName.setStatus('mandatory')
fileOffset = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 20), Integer32())
if mibBuilder.loadTexts: fileOffset.setStatus('mandatory')
ncpFunctionNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 21), Integer32())
if mibBuilder.loadTexts: ncpFunctionNumber.setStatus('mandatory')
fileSize = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 22), Integer32())
if mibBuilder.loadTexts: fileSize.setStatus('mandatory')
fileValue = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 23), Integer32())
if mibBuilder.loadTexts: fileValue.setStatus('mandatory')
fileLength = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 24), Integer32())
if mibBuilder.loadTexts: fileLength.setStatus('mandatory')
interruptNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 25), Integer32())
if mibBuilder.loadTexts: interruptNumber.setStatus('mandatory')
nlmName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 26), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)))
if mibBuilder.loadTexts: nlmName.setStatus('mandatory')
mediaLabel = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 27), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: mediaLabel.setStatus('mandatory')
message = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 28), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 512)))
if mibBuilder.loadTexts: message.setStatus('mandatory')
numberOfFailedMemoryAllocAttempts = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 29), Integer32())
if mibBuilder.loadTexts: numberOfFailedMemoryAllocAttempts.setStatus('mandatory')
numberOfResources = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 30), Integer32())
if mibBuilder.loadTexts: numberOfResources.setStatus('mandatory')
networkAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 31), NetNumber())
if mibBuilder.loadTexts: networkAddress.setStatus('mandatory')
numberOfFailedFileLockRequests = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 32), Integer32())
if mibBuilder.loadTexts: numberOfFailedFileLockRequests.setStatus('mandatory')
processName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 33), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: processName.setStatus('mandatory')
partitionNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 34), Integer32())
if mibBuilder.loadTexts: partitionNumber.setStatus('mandatory')
protocolName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 35), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: protocolName.setStatus('mandatory')
numberOfPackets = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 36), Integer32())
if mibBuilder.loadTexts: numberOfPackets.setStatus('mandatory')
resourceName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 37), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: resourceName.setStatus('mandatory')
numberOfFailedRecordLockRequests = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 38), Integer32())
if mibBuilder.loadTexts: numberOfFailedRecordLockRequests.setStatus('mandatory')
serverName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 39), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: serverName.setStatus('mandatory')
stationNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 40), Integer32())
if mibBuilder.loadTexts: stationNumber.setStatus('mandatory')
networkAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 41), NetNumber())
if mibBuilder.loadTexts: networkAddress1.setStatus('mandatory')
ncpSubFunctionNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 42), Integer32())
if mibBuilder.loadTexts: ncpSubFunctionNumber.setStatus('mandatory')
nlmSeverity = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("informational", 1), ("warning", 2), ("recoverable", 3), ("critical", 4), ("fatal", 5), ("operationAborted", 6))))
if mibBuilder.loadTexts: nlmSeverity.setStatus('mandatory')
trapTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 44), Integer32())
if mibBuilder.loadTexts: trapTime.setStatus('mandatory')
taskNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 45), Integer32())
if mibBuilder.loadTexts: taskNumber.setStatus('mandatory')
numberOfTransactions = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 46), Integer32())
if mibBuilder.loadTexts: numberOfTransactions.setStatus('mandatory')
serverTime = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 47), Integer32())
if mibBuilder.loadTexts: serverTime.setStatus('mandatory')
pathFileName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 48), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 124)))
if mibBuilder.loadTexts: pathFileName.setStatus('mandatory')
userName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 49), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: userName.setStatus('mandatory')
volumeName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 50), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: volumeName.setStatus('mandatory')
volumeNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 51), Integer32())
if mibBuilder.loadTexts: volumeNumber.setStatus('mandatory')
lanDriverName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 52), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: lanDriverName.setStatus('mandatory')
routerName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 53), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: routerName.setStatus('mandatory')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 54), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: macAddress.setStatus('mandatory')
macAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 55), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: macAddress1.setStatus('mandatory')
numberOfConnections = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 56), Integer32())
if mibBuilder.loadTexts: numberOfConnections.setStatus('mandatory')
socketNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 57), Integer32())
if mibBuilder.loadTexts: socketNumber.setStatus('mandatory')
accountName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 58), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: accountName.setStatus('mandatory')
fileMiscInfo = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 59), Integer32())
if mibBuilder.loadTexts: fileMiscInfo.setStatus('mandatory')
callBackNumber = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 60), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: callBackNumber.setStatus('mandatory')
baudRate = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 61), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11))
if mibBuilder.loadTexts: baudRate.setStatus('mandatory')
objectName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 62), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: objectName.setStatus('mandatory')
userName1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 63), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: userName1.setStatus('mandatory')
dosType1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 64), Integer32())
if mibBuilder.loadTexts: dosType1.setStatus('mandatory')
blockNumber1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 65), Integer32())
if mibBuilder.loadTexts: blockNumber1.setStatus('mandatory')
internalNetworkAddress = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 66), NetNumber())
if mibBuilder.loadTexts: internalNetworkAddress.setStatus('mandatory')
internalNetworkAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 67), NetNumber())
if mibBuilder.loadTexts: internalNetworkAddress1.setStatus('mandatory')
macAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 68), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: macAddress2.setStatus('mandatory')
serverName1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 69), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48)))
if mibBuilder.loadTexts: serverName1.setStatus('mandatory')
socketNumber1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 70), Integer32())
if mibBuilder.loadTexts: socketNumber1.setStatus('mandatory')
fileMiscInfo1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 71), Integer32())
if mibBuilder.loadTexts: fileMiscInfo1.setStatus('mandatory')
fileSize1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 72), Integer32())
if mibBuilder.loadTexts: fileSize1.setStatus('mandatory')
fileSize2 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 73), Integer32())
if mibBuilder.loadTexts: fileSize2.setStatus('mandatory')
packetSize1 = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 74), Integer32())
if mibBuilder.loadTexts: packetSize1.setStatus('mandatory')
diskName = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 75), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: diskName.setStatus('mandatory')
reason = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 76), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 35)))
if mibBuilder.loadTexts: reason.setStatus('mandatory')
maximumPercent = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 77), Integer32())
if mibBuilder.loadTexts: maximumPercent.setStatus('mandatory')
iRamLength = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 78), Integer32())
if mibBuilder.loadTexts: iRamLength.setStatus('mandatory')
iTimerTicks = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 79), Integer32())
if mibBuilder.loadTexts: iTimerTicks.setStatus('mandatory')
pollingLoops = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 80), Integer32())
if mibBuilder.loadTexts: pollingLoops.setStatus('mandatory')
iHopsCount = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 81), Integer32())
if mibBuilder.loadTexts: iHopsCount.setStatus('mandatory')
synchronizationRadius = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 82), Integer32())
if mibBuilder.loadTexts: synchronizationRadius.setStatus('mandatory')
cmmndLnPrmtr = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 83), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256)))
if mibBuilder.loadTexts: cmmndLnPrmtr.setStatus('mandatory')
volumePercentage = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 84), Integer32())
if mibBuilder.loadTexts: volumePercentage.setStatus('mandatory')
szReason = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 85), InternationalDisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 35)))
if mibBuilder.loadTexts: szReason.setStatus('mandatory')
iRamStart = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 10, 1, 86), Integer32())
if mibBuilder.loadTexts: iRamStart.setStatus('mandatory')
outOfShortTermMemoryRequestFailed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,1)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfFailedMemoryAllocAttempts"))
errWritingToTheExtendedDirSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,2)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errWritingToFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,3)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"))
errWritingToFileUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,4)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
errWritingToFileDataStream = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,5)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathName"))
errWritingToFileDataStreamUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,6)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathName"))
fileReaderrSrvrNofileName = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,7)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"))
fileReaderrUsrNofileName = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,8)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
fileReaderrDSSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,9)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathName"))
fileReaderrDSUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,10)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathName"))
fileWritePreReaderrSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,11)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"))
fileWritePreReaderrUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,12)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
fileWritePreReaderrDSSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,13)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathName"))
fileWritePreReaderrDSUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,14)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "dataStreamNumber"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathName"))
cacheMemAllocExceededMinLeftLimit = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,15)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
cacheMemAllocOutOfMem = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,16)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
numberOfCacheBuffersGettingLow = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,17)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
volOfDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,18)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
volOfDiskSpaceNoPurge = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,19)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "diskSpace"))
volAlmostOutOfDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,20)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
errWritingFatTables = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,21)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
errWritingDirectoryBlk = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,22)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
dirCopyReadErr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,23)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
errReadingBothCopiesofDir = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,24)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
allocateDirEntryWriteError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,25)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
errExpandingDirDuetoWriteErr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,26)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
dirReachedItsLimit = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,27)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
errExpandingNoDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,28)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
errExpandingNoMemSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,29)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
dirSizeGettingTooLrgeForMem = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,30)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
lanReceiveBuffLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,31)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
connTerminatedByWatchDog = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,32)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
copyrightViolation = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,33)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
writeFault = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,34)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "processName"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "codeOffset"), ("NetWare-Server-Alarm-MIB", "memoryAddress"))
readFault = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,35)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "processName"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "codeOffset"), ("NetWare-Server-Alarm-MIB", "memoryAddress"))
ipxReceivedIncomPacket = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,36)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "numberOfPackets"))
unableToCreateVOLERR = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,37)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
unableToWriteVOLERR = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,38)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
volOprDespiteDeviceDriveDeact = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,39)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
loginDisabledByUser = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,40)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
loginEnabledByUser = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,41)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
clrStnByConsole = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,42)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
clrStnByUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,43)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "userName1"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
fileServerDowned = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,44)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
errOpeningRIPSocket = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,45)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
rtrConfigErr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,46)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "networkAddress1"))
lanDriverLoopBack = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,47)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"))
dupInternetAddr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,48)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
lanBdUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,49)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"))
ipxUnbndRequest = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,50)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"))
errOpeningSAPSocket = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,51)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
rtrClaimingSameInterAddr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,52)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "routerName"))
spuriousInt = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,53)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "interruptNumber"))
checksumInvalid = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,54)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
prmyPicLostInterrupt = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,55)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
scndryPicLostInterrupt = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,56)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
exception = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,57)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "domainName"), ("NetWare-Server-Alarm-MIB", "processName"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "codeOffset"))
invalidScreenID = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,58)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "codeOffset"))
prssDidNotRelqhCntlFqtly = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,59)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "processName"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "codeOffset"))
fileSrvrUsrDeleted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,60)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"))
usrAcctDeletedByAUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,61)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "accountName"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "numberOfConnections"))
invalidResourceTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,62)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
diskDeactivatedUnknownReason = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,63)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedDriverUnload = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,64)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedDeviceFailure = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,65)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedUsrRequest = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,66)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedMediaDismount = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,67)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedEOM = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,68)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedServerDown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,69)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
diskDeactivatedServerFailure = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,70)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
moduleDidNotReleaseOneResource = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,71)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "resourceName"), ("NetWare-Server-Alarm-MIB", "resourceDescription"))
mirroredPartNotAllSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,72)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
allMirroredPartAreSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,73)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
partitionsSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,74)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
partitionsUnSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,75)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
remirroringPart = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,76)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
abortRemirrorPart = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,77)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
mirrorInconsistencies = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,78)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
systemFileLockThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,79)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfFailedFileLockRequests"))
stationFileLockThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,80)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "numberOfFailedFileLockRequests"))
systemRecordLockThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,81)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfFailedRecordLockRequests"))
stationRecordLockThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,82)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "numberOfFailedRecordLockRequests"))
errorOpeningNetAcctData = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,83)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ncpSearchLimitExecBySrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,84)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "userName"))
ncpSearchLimitExecByStation = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,85)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
insertMediaAck = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,86)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
insertMediaAborted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,87)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
remMediaAck = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,88)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
remMediaAborted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,89)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
insertDSMediaInto = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,90)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "mediaLabel"), ("NetWare-Server-Alarm-MIB", "deviceName"))
removeMediaFrom = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,91)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
redirectBlk = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,92)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "blockNumber"), ("NetWare-Server-Alarm-MIB", "blockNumber1"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
couldNotRedirectBlk = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,93)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "blockNumber"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
outOfHotFixBlks = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,94)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
fewRedirectionBlks = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,95)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfBlocks"))
redirectInconsistNoFix = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,96)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
redirectInconsistFix = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,97)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"))
invalidResourceTagPassed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,98)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
checkAddHardware = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,99)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
removeHardwareOptions = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,100)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errUnloadKilledNlm = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,101)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
invldRrceTagPsedToCreatePrss = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,102)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
createPrssReqtdStackTooSmall = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,103)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
createPrssUnableToAllocPrssCntlBlk = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,104)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
filePreservationErrorDuringErase = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,105)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
filePreservationErrorInsuffSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,106)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
mlidResetLanBd = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,107)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "socketNumber"))
requestedRtrReset = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,108)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "socketNumber"))
volContainstheWrongDOSType = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,109)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "dosType"), ("NetWare-Server-Alarm-MIB", "dosType1"))
originalNameSpaceNotFound = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,110)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
rdTimeDataMigratorModuleChanged = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,111)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errCreateOpenTTSLogFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,112)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errWriteOpenTTSLogFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,113)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDownbyVolDismount = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,114)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
disableTTSbyUser = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,115)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
ttsDisabledByOperator = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,116)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisErrReadTTSduringBackout = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,117)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisErrWritingTTSduringBackout = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,118)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisErrTooManyDefInfo = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,119)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisErrWritingVolDefInfo = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,120)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisErrRdBlkFlRecGen = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,121)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisGrowMemTables = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,122)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisErrAllDiskSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,123)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
ttsDisDirErrOnBkFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,124)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
enableTTSByUser = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,125)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
transactionAbortedForStation = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,126)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "taskNumber"))
ttsLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,127)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfTransactions"))
ttsNoMemForExpandingTxNodeTables = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,128)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfFailedMemoryAllocAttempts"))
auditEvent = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,129)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "auditEventNumber"), ("NetWare-Server-Alarm-MIB", "volumeNumber"))
auditAlertThresholdOverFlow = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,130)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
auditAlertInvalidConfigFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,131)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
auditAlertNoMemory = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,132)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
auditFileWriteError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,133)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
auditFileFull = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,134)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
invalidConnTypetoAllocConn = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,135)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
invalidRsrcTagPassedtoAllocConn = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,136)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
outOfServerConn = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,137)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
connTerminated5MinNotice = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,138)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
usrAcctDisabledByAUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,139)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "accountName"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "numberOfConnections"))
useOfUnEncryptedPwd = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,140)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
supAcctLockoutClrdByConsole = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,141)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
systemTimeChangedByConsole = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,142)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"))
systemTimeChangedByUser = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,143)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "userName"))
volDismountedDueToDriveDeact = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,144)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
rtrFalsehood = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,145)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "internalNetworkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "internalNetworkAddress1"), ("NetWare-Server-Alarm-MIB", "macAddress1"), ("NetWare-Server-Alarm-MIB", "macAddress2"))
srvrAddrChanged = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,146)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "serverName1"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "socketNumber"), ("NetWare-Server-Alarm-MIB", "networkAddress1"), ("NetWare-Server-Alarm-MIB", "macAddress1"), ("NetWare-Server-Alarm-MIB", "socketNumber1"), ("NetWare-Server-Alarm-MIB", "macAddress2"))
extendFileHasNoOwnerToCharge = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,147)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
rtrConfigErr3 = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,148)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "networkAddress1"))
rtrConfigErr2 = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,149)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "macAddress"), ("NetWare-Server-Alarm-MIB", "routerName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "networkAddress1"))
dataMgrtrNotLoadedWhenRequested = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,150)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
noSpecificSupportModulesLoaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,151)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
notEnoughRAMForComp = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,152)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
diskErrorCompression = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,153)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
compressErrorHoleCountMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,154)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo1"))
unknownErrorCompression = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,155)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "errorNumber"))
insufficientSpaceForDecompression = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,156)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
decompUnknownCompVersion = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,157)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
unknownErrorDecomp = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,158)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "errorNumber"))
insufficientDecompError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,159)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
compFileCorrupted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,160)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
rejectedIncompleteNCP = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,161)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "ncpFunctionNumber"), ("NetWare-Server-Alarm-MIB", "ncpSubFunctionNumber"))
stationUsedABadPacket = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,162)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "ncpFunctionNumber"), ("NetWare-Server-Alarm-MIB", "ncpSubFunctionNumber"))
rejectedNCPBadSubfunctionLngth = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,163)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "ncpFunctionNumber"), ("NetWare-Server-Alarm-MIB", "ncpSubFunctionNumber"))
processedNCPBadSubfunctionLngth = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,164)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "ncpFunctionNumber"), ("NetWare-Server-Alarm-MIB", "ncpSubFunctionNumber"))
compFilePathCorrupted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,165)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
compFileInUse = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,166)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
nlmNoPriority = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,167)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
workToDo = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,168)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
compErrTempFileErr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,169)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileOffset"), ("NetWare-Server-Alarm-MIB", "fileValue"))
compErrLngthTotMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,170)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo1"))
compErrOffsetTotalsMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,171)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo1"))
compErrDataCodeCountMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,172)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo1"))
compErrLthOffsetCodeCountMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,173)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo"), ("NetWare-Server-Alarm-MIB", "fileMiscInfo1"))
compErrLgrLngthCodeCountMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,174)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "message"))
compErrReadZeroBytesInt = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,175)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "fileOffset"))
compErrTreeTooBig = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,176)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"))
compErrMatchSizeFail = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,177)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileSize1"), ("NetWare-Server-Alarm-MIB", "fileSize2"))
signatureInvalid = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,178)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
licenseInvalid = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,179)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "message"))
deactHotFix = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,180)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
unknownDecompressErrorWithName = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,181)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "errorNumber"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
insufficientRamToDecompWithName = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,182)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
decompressUnderFreePercentage = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,183)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
negPktLargeBuffer = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,184)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "packetSize"), ("NetWare-Server-Alarm-MIB", "packetSize1"))
loginDisabledByConsole = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,185)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
loginEnabledByConsole = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,186)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
growableStackNotAllocated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,187)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
insertDSMediaAck = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,188)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
insertMagazineAck = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,189)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
insertDSMediaAborted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,190)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
insertMagazineAborted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,191)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
remDSMediaAck = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,192)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
remMagazineAck = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,193)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
remDSMediaAborted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,194)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
remMagazineAborted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,195)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
insertMagazineInto = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,196)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "mediaLabel"), ("NetWare-Server-Alarm-MIB", "deviceName"))
removeDSMediaFrom = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,197)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
removeMagazineFrom = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,198)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "deviceName"))
moduleDidNotReleaseResources = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,199)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfResources"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "resourceName"), ("NetWare-Server-Alarm-MIB", "resourceDescription"))
opnBinderyFailSinceVolNotMounted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,200)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
binderyOpnReqtdByUsrFailed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,201)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
binderyOpnReqtdBySrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,202)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
binderyOpnReqtdByUsR = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,203)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
binderyClosedBySrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,204)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
binderyClosedByUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,205)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
intruderLockout = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,206)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "accountName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
dsOpenFailed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,207)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
dsOpenFailedInconsistentDatabase = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,208)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
dsopenSucceeded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,209)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
dsCloseSucceeded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,210)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
skulkingError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,211)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "errorNumber"))
dsIntruderNoAddr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,212)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "accountName"))
domainQuarantined = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,213)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "exceptionName"), ("NetWare-Server-Alarm-MIB", "domainName"), ("NetWare-Server-Alarm-MIB", "processName"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "eipAddress"))
commandProcess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,214)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
remoteConnGranted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,215)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
remoteConnCleared = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,216)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
remoteConnRefused = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,217)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
translatorUp = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,218)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
translatorDown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,219)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
volAnyMounted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,220)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
volAnyDismounted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,221)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"))
serverDownatServer = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,222)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
protocolBound = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,223)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "lanDriverName"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "protocolName"))
protocolUnBound = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,224)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "lanDriverName"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "protocolName"))
moduleLoad = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,225)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"))
moduleUnLoad = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,226)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"))
mlidRegister = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,227)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "lanDriverName"))
mlidUnRegister = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,228)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "lanDriverName"))
clearConnection = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,229)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "connectionNumber"))
loginConnection = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,230)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "connectionNumber"))
nlmAlertCritical = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,231)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "nlmSeverity"), ("NetWare-Server-Alarm-MIB", "message"))
logoutConnection = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,232)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "connectionNumber"))
usrAcctDeletedByAUsrSingleConn = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,233)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "accountName"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "stationNumber"))
compErrReadZeroBytesOrig = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,234)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeNumber"), ("NetWare-Server-Alarm-MIB", "fileSize"), ("NetWare-Server-Alarm-MIB", "fileName"), ("NetWare-Server-Alarm-MIB", "fileOffset"))
diskDeactivated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,235)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "diskName"), ("NetWare-Server-Alarm-MIB", "reason"))
diskMounted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,236)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "diskName"))
redirectBlockMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,237)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"), ("NetWare-Server-Alarm-MIB", "numberOfPackets"))
shortTermMemoryLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,238)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "numberOfFailedMemoryAllocAttempts"))
semipermanentMemoryExhausted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,239)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
diskDismounted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,240)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "diskName"))
diskAdded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,241)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "diskName"))
diskActivated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,242)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "diskName"))
generalTTSfailures = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,243)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "message"))
mirroredPartNotAllSynced = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,244)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
reqtdRtrReset311 = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,245)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
invalidSignatureString = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,246)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
invalidDuplicateSignature = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,247)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
invalidPburstSignature = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,248)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
failedToDeleteMigrateFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,249)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "pathFileName"))
unsignedRemoteConnectionRefused = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,250)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
unsignedRemoteConnectionGranted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,251)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"), ("NetWare-Server-Alarm-MIB", "macAddress"))
responsePacketNotAllocated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,252)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
wsNotLocated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,253)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
remoteConnectionTimedOut = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,254)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"))
modemConnectionCleared = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,255)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
remoteConnectionClearedNameKnown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,256)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"))
callBackNumberNotReceived = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,257)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
nlmUnableToOpenListFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,258)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
nlmUnableToReadListFile = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,259)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
unauthorizedCallBackNumber = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,260)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "callBackNumber"))
modemClearedAndCallBackAttempted = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,261)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
attmptngToEstblshCallBckConnectn = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,262)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "callBackNumber"))
remoteConnectionRefusedNameKnown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,263)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"))
remoteConnectionGrantedNameKnown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,264)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "userName"))
modemConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,265)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "baudRate"))
dsAuditFileWriteError = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,266)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "objectName"))
dsAuditFileFull = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,267)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "objectName"))
dsAuditFileThresholdOverflow = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,268)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "objectName"))
dsAuditMemoryAllocation = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,269)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
serverUp = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,270)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
volRestrictedSpace = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,271)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "volumeName"), ("NetWare-Server-Alarm-MIB", "volumePercentage"))
cannotInitialize = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,272)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
cannotStart = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,273)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noSAPSocketTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,274)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noSAPSocket = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,275)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noSetableParameterTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,276)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noTimerTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,277)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noAllocTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,278)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noResourceTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,279)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noProcessTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,280)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noEventTag = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,281)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noGlobalInfo = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,282)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noParseCommandLine = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,283)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noTimeSyncNCPVariable = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,284)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
cantAllocateMainStack = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,285)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
cantCreateMainProcess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,286)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
syncRadiusLess = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,287)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "synchronizationRadius"))
unrecognizedCommandLinePrmtr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,288)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "cmmndLnPrmtr"))
unrecognizedCommandLineOption = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,289)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "cmmndLnPrmtr"))
serverPolled = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,290)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "serverName1"))
singleSrvrIncompatible = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,291)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "serverName1"))
timeSyncLost = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,292)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "pollingLoops"))
timeSyncEstablished = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,293)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
connTerminated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,294)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "connectionNumber"))
connClearedByUsr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,295)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "userName"))
loginDisabled = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,296)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "userName"))
downFileServer = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,297)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "stationNumber"), ("NetWare-Server-Alarm-MIB", "userName"))
loginEnabled = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,298)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "connectionNumber"), ("NetWare-Server-Alarm-MIB", "userName"))
errLogTransferErr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,299)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
faultInConsoleCommandHandler = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,300)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commLinkActivated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,301)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commLinkFailure = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,302)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commLinkDeactivated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,303)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrAttemptedToSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,304)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commLinkBrokeOK = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,305)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
syncStartingAmSecondarySrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,306)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
badSrvrInitMsg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,307)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commLinkInitFailed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,308)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
failedDuringSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,309)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"))
commDriverLoadedDuringActivate = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,310)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errWritingStatusDump = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,311)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commDriverFailureOnPrimary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,312)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
commDriverFailureOnSecondary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,313)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errFinishingGeneratingStatusDump = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,314)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
sFTIIWhatToDoReasonString = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,315)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
sFTIIErrorUnexpected = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,316)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
syncErrorGeneratedFromCustomSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,317)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrLinkHasPluggedPacket = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,318)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrToBeRevived = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,319)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrsAreSyncedThisIsThePrimary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,320)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrCantRouteViaIPXToSecondary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,321)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrIPXRouteInfoToSecondary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,322)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "iHopsCount"), ("NetWare-Server-Alarm-MIB", "macAddress"))
errGivingRAMtoMSEngine = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,323)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
moreRAMgivenToMSEngine = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,324)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "iRamStart"), ("NetWare-Server-Alarm-MIB", "iRamLength"))
srvrsAreSyncedThisIsTheSecondary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,325)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrCantRouteViaIPXToPrimary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,326)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrIPXRouteInfoToPrimary = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,327)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "iHopsCount"), ("NetWare-Server-Alarm-MIB", "macAddress"))
priSrvrFailedButSecDown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,328)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"))
priSrvrFailedNewPri = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,329)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"))
numMemSegsExceedLimit = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,330)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
numScreenExceedsLimit = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,331)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iOVersionMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,332)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrProtectLevelNoMatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,333)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrScreenAddressMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,334)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iOEngineNotLoadedAtSameAddress = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,335)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "iRamStart"), ("NetWare-Server-Alarm-MIB", "iRamLength"))
bothSrvrHaveActiveMSEngines = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,336)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noActiveMSEngineOnServers = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,337)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
secSrvrMissingRAM = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,338)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "iRamStart"), ("NetWare-Server-Alarm-MIB", "iRamLength"))
bothSrvrHaveSameIPXAddr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,339)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iOEngIPXAddrMatchesMSEngine = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,340)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iOEnginesMismatchLANRxBufferSize = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,341)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "iRamStart"), ("NetWare-Server-Alarm-MIB", "iRamLength"))
iOEnginesHaveSameName = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,342)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
noMemoryForIOEngineName = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,343)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrToSrvrLinkBeginSync = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,344)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
mSEngineActivated = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,345)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
mSEngActivatedWillSyncWithOther = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,346)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iOtoMSCommBeingUnloaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,347)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
sFTIIIOutOfMsgCodes = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,348)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
secIOEngSupportModulesNotLoaded = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,349)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
errXferDumpToSystem = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,350)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
failureCheckingPrimarySrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,351)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"))
errStarting2ndProcessor = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,352)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvrFailure = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,353)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
srvsSyncing = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,354)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
mSLBoardNumberConnEstablished = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,355)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "boardNumber"))
secSrvrLANIsBetter = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,356)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iPXreturningStatusPackets = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,357)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"))
iPXnotReturningStatCheckPackets = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,358)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"))
iPXnotReturningStatPcktLANJammed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,359)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "networkAddress"))
failReasonByOtherSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,360)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "serverName1"))
iPXInternetIsJammed = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,361)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iPXTooSlowForSecSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,362)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
otherSrvrTooManyHops = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,363)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iPXappearsDown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,364)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iPXFoundRouteToOtherSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,365)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
iPXNewRouteToSecSrvr = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,366)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "boardNumber"), ("NetWare-Server-Alarm-MIB", "iHopsCount"), ("NetWare-Server-Alarm-MIB", "macAddress"))
iPXLostRoute = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,367)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
secSrvrGoingToDie = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,368)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"), ("NetWare-Server-Alarm-MIB", "iTimerTicks"))
priSrvrDyingTimerReStart = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,369)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"), ("NetWare-Server-Alarm-MIB", "iTimerTicks"))
priSrvrDying = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,370)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "szReason"), ("NetWare-Server-Alarm-MIB", "iTimerTicks"))
noMemForOtherIOEngScreen = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,371)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
timesyncErrorMsg = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,372)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"))
dsAlertSetServerDown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,373)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "serverName1"))
dsAlertSetServerUp = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,374)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "serverName1"))
redirectTableMismatch = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,375)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "partitionNumber"), ("NetWare-Server-Alarm-MIB", "numberOfPackets"))
nlmAlertMajor = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,376)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "nlmSeverity"), ("NetWare-Server-Alarm-MIB", "message"))
nlmAlertMinor = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,377)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "nlmSeverity"), ("NetWare-Server-Alarm-MIB", "message"))
nlmAlertInformational = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 10) + (0,378)).setObjects(("NetWare-Server-Alarm-MIB", "serverName"), ("NetWare-Server-Alarm-MIB", "trapTime"), ("NetWare-Server-Alarm-MIB", "nlmName"), ("NetWare-Server-Alarm-MIB", "nlmSeverity"), ("NetWare-Server-Alarm-MIB", "message"))
mibBuilder.exportSymbols("NetWare-Server-Alarm-MIB", diskDeactivatedDeviceFailure=diskDeactivatedDeviceFailure, blockNumber=blockNumber, secSrvrMissingRAM=secSrvrMissingRAM, compErrDataCodeCountMismatch=compErrDataCodeCountMismatch, priSrvrFailedButSecDown=priSrvrFailedButSecDown, compErrTreeTooBig=compErrTreeTooBig, noProcessTag=noProcessTag, iPXappearsDown=iPXappearsDown, nlmAlertInformational=nlmAlertInformational, noEventTag=noEventTag, auditAlertThresholdOverFlow=auditAlertThresholdOverFlow, auditAlertNoMemory=auditAlertNoMemory, bothSrvrHaveActiveMSEngines=bothSrvrHaveActiveMSEngines, unknownErrorDecomp=unknownErrorDecomp, eipAddress=eipAddress, protocolName=protocolName, allocateDirEntryWriteError=allocateDirEntryWriteError, syncErrorGeneratedFromCustomSrvr=syncErrorGeneratedFromCustomSrvr, lanDriverLoopBack=lanDriverLoopBack, noMemoryForIOEngineName=noMemoryForIOEngineName, pathFileName=pathFileName, ncpSubFunctionNumber=ncpSubFunctionNumber, processName=processName, mirrorInconsistencies=mirrorInconsistencies, noSetableParameterTag=noSetableParameterTag, dataMgrtrNotLoadedWhenRequested=dataMgrtrNotLoadedWhenRequested, fileWritePreReaderrDSUsr=fileWritePreReaderrDSUsr, clearConnection=clearConnection, packetSize=packetSize, interruptNumber=interruptNumber, errGivingRAMtoMSEngine=errGivingRAMtoMSEngine, sFTIIIOutOfMsgCodes=sFTIIIOutOfMsgCodes, insufficientDecompError=insufficientDecompError, commLinkBrokeOK=commLinkBrokeOK, couldNotRedirectBlk=couldNotRedirectBlk, srvrIPXRouteInfoToSecondary=srvrIPXRouteInfoToSecondary, volDismountedDueToDriveDeact=volDismountedDueToDriveDeact, removeHardwareOptions=removeHardwareOptions, cantAllocateMainStack=cantAllocateMainStack, iPXTooSlowForSecSrvr=iPXTooSlowForSecSrvr, fileReaderrDSSrvr=fileReaderrDSSrvr, ipxUnbndRequest=ipxUnbndRequest, remMagazineAck=remMagazineAck, dataStreamNumber=dataStreamNumber, commLinkActivated=commLinkActivated, rtrConfigErr2=rtrConfigErr2, volumePercentage=volumePercentage, callBackNumberNotReceived=callBackNumberNotReceived, errWritingToFileUsr=errWritingToFileUsr, deactHotFix=deactHotFix, redirectInconsistNoFix=redirectInconsistNoFix, loginDisabled=loginDisabled, useOfUnEncryptedPwd=useOfUnEncryptedPwd, insertMediaAck=insertMediaAck, binderyClosedByUsr=binderyClosedByUsr, syncRadiusLess=syncRadiusLess, exceptionName=exceptionName, cannotInitialize=cannotInitialize, iRamStart=iRamStart, nlmName=nlmName, mSEngineActivated=mSEngineActivated, compErrLgrLngthCodeCountMismatch=compErrLgrLngthCodeCountMismatch, diskDeactivated=diskDeactivated, volOfDiskSpace=volOfDiskSpace, outOfShortTermMemoryRequestFailed=outOfShortTermMemoryRequestFailed, stationUsedABadPacket=stationUsedABadPacket, prmyPicLostInterrupt=prmyPicLostInterrupt, compressErrorHoleCountMismatch=compressErrorHoleCountMismatch, iOtoMSCommBeingUnloaded=iOtoMSCommBeingUnloaded, numberOfTransactions=numberOfTransactions, remoteConnectionRefusedNameKnown=remoteConnectionRefusedNameKnown, memoryAddress=memoryAddress, mirroredPartNotAllSync=mirroredPartNotAllSync, nwalarm_mib=nwalarm_mib, fileWritePreReaderrUsr=fileWritePreReaderrUsr, commLinkFailure=commLinkFailure, dsAlertSetServerUp=dsAlertSetServerUp, remoteConnectionClearedNameKnown=remoteConnectionClearedNameKnown, failureCheckingPrimarySrvr=failureCheckingPrimarySrvr, sFTIIWhatToDoReasonString=sFTIIWhatToDoReasonString, iPXnotReturningStatPcktLANJammed=iPXnotReturningStatPcktLANJammed, remMediaAck=remMediaAck, diskDeactivatedMediaDismount=diskDeactivatedMediaDismount, requestedRtrReset=requestedRtrReset, fileMiscInfo1=fileMiscInfo1, reason=reason, userName=userName, connTerminatedByWatchDog=connTerminatedByWatchDog, clrStnByUsr=clrStnByUsr, insertMagazineAborted=insertMagazineAborted, connectionNumber=connectionNumber, rdTimeDataMigratorModuleChanged=rdTimeDataMigratorModuleChanged, invldRrceTagPsedToCreatePrss=invldRrceTagPsedToCreatePrss, compErrTempFileErr=compErrTempFileErr, growableStackNotAllocated=growableStackNotAllocated, networkAddress=networkAddress, noAllocTag=noAllocTag, remMagazineAborted=remMagazineAborted, dsOpenFailed=dsOpenFailed, enableTTSByUser=enableTTSByUser, userName1=userName1, callBackNumber=callBackNumber, compErrMatchSizeFail=compErrMatchSizeFail, serverName=serverName, srvrsAreSyncedThisIsTheSecondary=srvrsAreSyncedThisIsTheSecondary, extendFileHasNoOwnerToCharge=extendFileHasNoOwnerToCharge, semipermanentMemoryExhausted=semipermanentMemoryExhausted, createPrssReqtdStackTooSmall=createPrssReqtdStackTooSmall, fileReaderrSrvrNofileName=fileReaderrSrvrNofileName, wsNotLocated=wsNotLocated, stationRecordLockThresholdReached=stationRecordLockThresholdReached, iPXFoundRouteToOtherSrvr=iPXFoundRouteToOtherSrvr, moduleUnLoad=moduleUnLoad, errReadingBothCopiesofDir=errReadingBothCopiesofDir, originalNameSpaceNotFound=originalNameSpaceNotFound, iRamLength=iRamLength, iOEnginesMismatchLANRxBufferSize=iOEnginesMismatchLANRxBufferSize, moduleLoad=moduleLoad, macAddress=macAddress, iPXInternetIsJammed=iPXInternetIsJammed, unsignedRemoteConnectionRefused=unsignedRemoteConnectionRefused, trapTime=trapTime, macAddress1=macAddress1, ttsDisErrTooManyDefInfo=ttsDisErrTooManyDefInfo, binderyOpnReqtdByUsR=binderyOpnReqtdByUsR, noGlobalInfo=noGlobalInfo, errExpandingNoDiskSpace=errExpandingNoDiskSpace, timeSyncLost=timeSyncLost, copyrightViolation=copyrightViolation, commandProcess=commandProcess, diskActivated=diskActivated, unknownDecompressErrorWithName=unknownDecompressErrorWithName, diskSpace=diskSpace, connTerminated=connTerminated, baudRate=baudRate, socketNumber=socketNumber, serverTime=serverTime, srvrCantRouteViaIPXToSecondary=srvrCantRouteViaIPXToSecondary, numberOfConnections=numberOfConnections, diskAdded=diskAdded, errUnloadKilledNlm=errUnloadKilledNlm, checkAddHardware=checkAddHardware, transactionAbortedForStation=transactionAbortedForStation, mSEngActivatedWillSyncWithOther=mSEngActivatedWillSyncWithOther, insufficientSpaceForDecompression=insufficientSpaceForDecompression, message=message, noParseCommandLine=noParseCommandLine, cmmndLnPrmtr=cmmndLnPrmtr, lanBdUnreachable=lanBdUnreachable, errorOpeningNetAcctData=errorOpeningNetAcctData, serverName1=serverName1, systemRecordLockThresholdReached=systemRecordLockThresholdReached, reqtdRtrReset311=reqtdRtrReset311, synchronizationRadius=synchronizationRadius, commDriverFailureOnPrimary=commDriverFailureOnPrimary, iOEnginesHaveSameName=iOEnginesHaveSameName, remoteConnectionGrantedNameKnown=remoteConnectionGrantedNameKnown, usrAcctDisabledByAUsr=usrAcctDisabledByAUsr, codeOffset=codeOffset, numberOfPackets=numberOfPackets, otherSrvrTooManyHops=otherSrvrTooManyHops, invalidResourceTagPassed=invalidResourceTagPassed, logoutConnection=logoutConnection, internalNetworkAddress=internalNetworkAddress, binderyOpnReqtdByUsrFailed=binderyOpnReqtdByUsrFailed, dupInternetAddr=dupInternetAddr, srvrIPXRouteInfoToPrimary=srvrIPXRouteInfoToPrimary, resourceDescription=resourceDescription, compFileInUse=compFileInUse, dosType1=dosType1, errOpeningSAPSocket=errOpeningSAPSocket, diskName=diskName, boardNumber=boardNumber, nlmNoPriority=nlmNoPriority, commDriverLoadedDuringActivate=commDriverLoadedDuringActivate, ttsDisabledByOperator=ttsDisabledByOperator, disableTTSbyUser=disableTTSbyUser, usrAcctDeletedByAUsr=usrAcctDeletedByAUsr, errOpeningRIPSocket=errOpeningRIPSocket, socketNumber1=socketNumber1, noSpecificSupportModulesLoaded=noSpecificSupportModulesLoaded, iPXnotReturningStatCheckPackets=iPXnotReturningStatCheckPackets, remirroringPart=remirroringPart, rtrConfigErr=rtrConfigErr, numberOfResources=numberOfResources, ttsDisErrWritingTTSduringBackout=ttsDisErrWritingTTSduringBackout, taskNumber=taskNumber, dsAlertSetServerDown=dsAlertSetServerDown, auditFileFull=auditFileFull, ttsDisErrAllDiskSpace=ttsDisErrAllDiskSpace, diskDismounted=diskDismounted, invalidConnTypetoAllocConn=invalidConnTypetoAllocConn, loginEnabledByConsole=loginEnabledByConsole, maximumPercent=maximumPercent, prssDidNotRelqhCntlFqtly=prssDidNotRelqhCntlFqtly, nlmAlertMinor=nlmAlertMinor, allMirroredPartAreSync=allMirroredPartAreSync, dirCopyReadErr=dirCopyReadErr, loginEnabledByUser=loginEnabledByUser, syncStartingAmSecondarySrvr=syncStartingAmSecondarySrvr, fileSize=fileSize, dirReachedItsLimit=dirReachedItsLimit, insertMagazineInto=insertMagazineInto, serverPolled=serverPolled, errFinishingGeneratingStatusDump=errFinishingGeneratingStatusDump, loginDisabledByConsole=loginDisabledByConsole, compErrLthOffsetCodeCountMismatch=compErrLthOffsetCodeCountMismatch, responsePacketNotAllocated=responsePacketNotAllocated, ncpSearchLimitExecBySrvr=ncpSearchLimitExecBySrvr, fileOffset=fileOffset, ttsDisErrRdBlkFlRecGen=ttsDisErrRdBlkFlRecGen, fileValue=fileValue, removeMediaFrom=removeMediaFrom, iPXreturningStatusPackets=iPXreturningStatusPackets, partitionsUnSync=partitionsUnSync, unsignedRemoteConnectionGranted=unsignedRemoteConnectionGranted, modemConnectionCleared=modemConnectionCleared, nlmUnableToReadListFile=nlmUnableToReadListFile, serverDownatServer=serverDownatServer, unableToCreateVOLERR=unableToCreateVOLERR, unrecognizedCommandLineOption=unrecognizedCommandLineOption, iHopsCount=iHopsCount, ttsLimitExceeded=ttsLimitExceeded, internalNetworkAddress1=internalNetworkAddress1, outOfServerConn=outOfServerConn, removeMagazineFrom=removeMagazineFrom, loginDisabledByUser=loginDisabledByUser, opnBinderyFailSinceVolNotMounted=opnBinderyFailSinceVolNotMounted, moduleDidNotReleaseResources=moduleDidNotReleaseResources, mlidResetLanBd=mlidResetLanBd, volAnyMounted=volAnyMounted, mlidRegister=mlidRegister, commDriverFailureOnSecondary=commDriverFailureOnSecondary, removeDSMediaFrom=removeDSMediaFrom, failReasonByOtherSrvr=failReasonByOtherSrvr, insertMagazineAck=insertMagazineAck, errCreateOpenTTSLogFile=errCreateOpenTTSLogFile, redirectTableMismatch=redirectTableMismatch, rejectedIncompleteNCP=rejectedIncompleteNCP, iTimerTicks=iTimerTicks, cacheMemAllocExceededMinLeftLimit=cacheMemAllocExceededMinLeftLimit, fileSrvrUsrDeleted=fileSrvrUsrDeleted, objectName=objectName, srvrFailure=srvrFailure, filePreservationErrorDuringErase=filePreservationErrorDuringErase, stationFileLockThresholdReached=stationFileLockThresholdReached, nlmAlertCritical=nlmAlertCritical, licenseInvalid=licenseInvalid, iPXNewRouteToSecSrvr=iPXNewRouteToSecSrvr, srvrLinkHasPluggedPacket=srvrLinkHasPluggedPacket, abortRemirrorPart=abortRemirrorPart, checksumInvalid=checksumInvalid, lanReceiveBuffLimitReached=lanReceiveBuffLimitReached, rtrClaimingSameInterAddr=rtrClaimingSameInterAddr)
mibBuilder.exportSymbols("NetWare-Server-Alarm-MIB", invalidSignatureString=invalidSignatureString, invalidScreenID=invalidScreenID, compFileCorrupted=compFileCorrupted, decompUnknownCompVersion=decompUnknownCompVersion, srvrAttemptedToSync=srvrAttemptedToSync, ncpFunctionNumber=ncpFunctionNumber, remoteConnRefused=remoteConnRefused, srvrScreenAddressMismatch=srvrScreenAddressMismatch, numberOfFailedFileLockRequests=numberOfFailedFileLockRequests, remoteConnGranted=remoteConnGranted, errExpandingNoMemSpace=errExpandingNoMemSpace, mediaLabel=mediaLabel, failedDuringSync=failedDuringSync, numScreenExceedsLimit=numScreenExceedsLimit, errWriteOpenTTSLogFile=errWriteOpenTTSLogFile, fileWritePreReaderrDSSrvr=fileWritePreReaderrDSSrvr, decompressUnderFreePercentage=decompressUnderFreePercentage, numberOfFailedRecordLockRequests=numberOfFailedRecordLockRequests, blockNumber1=blockNumber1, srvrToBeRevived=srvrToBeRevived, numMemSegsExceedLimit=numMemSegsExceedLimit, errWritingToFile=errWritingToFile, dsAuditFileWriteError=dsAuditFileWriteError, ttsNoMemForExpandingTxNodeTables=ttsNoMemForExpandingTxNodeTables, resourceName=resourceName, fileReaderrDSUsr=fileReaderrDSUsr, protocolUnBound=protocolUnBound, remoteConnectionTimedOut=remoteConnectionTimedOut, attmptngToEstblshCallBckConnectn=attmptngToEstblshCallBckConnectn, connTerminated5MinNotice=connTerminated5MinNotice, ttsDisDirErrOnBkFile=ttsDisDirErrOnBkFile, timesyncErrorMsg=timesyncErrorMsg, invalidDuplicateSignature=invalidDuplicateSignature, errWritingFatTables=errWritingFatTables, dsCloseSucceeded=dsCloseSucceeded, noActiveMSEngineOnServers=noActiveMSEngineOnServers, ttsDownbyVolDismount=ttsDownbyVolDismount, supAcctLockoutClrdByConsole=supAcctLockoutClrdByConsole, dsOpenFailedInconsistentDatabase=dsOpenFailedInconsistentDatabase, srvrProtectLevelNoMatch=srvrProtectLevelNoMatch, diskErrorCompression=diskErrorCompression, ipxReceivedIncomPacket=ipxReceivedIncomPacket, mibDoc=mibDoc, failedToDeleteMigrateFile=failedToDeleteMigrateFile, fileLength=fileLength, volumeName=volumeName, partitionsSync=partitionsSync, priSrvrFailedNewPri=priSrvrFailedNewPri, nlmUnableToOpenListFile=nlmUnableToOpenListFile, auditEvent=auditEvent, priSrvrDying=priSrvrDying, intruderLockout=intruderLockout, errLogTransferErr=errLogTransferErr, systemTimeChangedByUser=systemTimeChangedByUser, unrecognizedCommandLinePrmtr=unrecognizedCommandLinePrmtr, diskDeactivatedUnknownReason=diskDeactivatedUnknownReason, binderyClosedBySrvr=binderyClosedBySrvr, pollingLoops=pollingLoops, NetNumber=NetNumber, accountName=accountName, errWritingDirectoryBlk=errWritingDirectoryBlk, errStarting2ndProcessor=errStarting2ndProcessor, iOEngIPXAddrMatchesMSEngine=iOEngIPXAddrMatchesMSEngine, numberOfCacheBuffersGettingLow=numberOfCacheBuffersGettingLow, volAlmostOutOfDiskSpace=volAlmostOutOfDiskSpace, redirectBlk=redirectBlk, processedNCPBadSubfunctionLngth=processedNCPBadSubfunctionLngth, modemClearedAndCallBackAttempted=modemClearedAndCallBackAttempted, commLinkInitFailed=commLinkInitFailed, diskDeactivatedServerFailure=diskDeactivatedServerFailure, partitionNumber=partitionNumber, outOfHotFixBlks=outOfHotFixBlks, szReason=szReason, compErrReadZeroBytesInt=compErrReadZeroBytesInt, priSrvrDyingTimerReStart=priSrvrDyingTimerReStart, errorNumber=errorNumber, secSrvrGoingToDie=secSrvrGoingToDie, remMediaAborted=remMediaAborted, ncpSearchLimitExecByStation=ncpSearchLimitExecByStation, fileServerDowned=fileServerDowned, novell=novell, rtrFalsehood=rtrFalsehood, ttsDisErrWritingVolDefInfo=ttsDisErrWritingVolDefInfo, fileReaderrUsrNofileName=fileReaderrUsrNofileName, fewRedirectionBlks=fewRedirectionBlks, domainName=domainName, invalidResourceTag=invalidResourceTag, binderyOpnReqtdBySrvr=binderyOpnReqtdBySrvr, networkAddress1=networkAddress1, noMemForOtherIOEngScreen=noMemForOtherIOEngScreen, filePreservationErrorInsuffSpace=filePreservationErrorInsuffSpace, workToDo=workToDo, fileSize2=fileSize2, dsAuditMemoryAllocation=dsAuditMemoryAllocation, skulkingError=skulkingError, moduleDidNotReleaseOneResource=moduleDidNotReleaseOneResource, createPrssUnableToAllocPrssCntlBlk=createPrssUnableToAllocPrssCntlBlk, mirroredPartNotAllSynced=mirroredPartNotAllSynced, systemFileLockThresholdReached=systemFileLockThresholdReached, timeSyncEstablished=timeSyncEstablished, iOVersionMismatch=iOVersionMismatch, volumeNumber=volumeNumber, bothSrvrHaveSameIPXAddr=bothSrvrHaveSameIPXAddr, diskDeactivatedServerDown=diskDeactivatedServerDown, iPXLostRoute=iPXLostRoute, volOfDiskSpaceNoPurge=volOfDiskSpaceNoPurge, systemTimeChangedByConsole=systemTimeChangedByConsole, ttsDisGrowMemTables=ttsDisGrowMemTables, cacheMemAllocOutOfMem=cacheMemAllocOutOfMem, noSAPSocketTag=noSAPSocketTag, unauthorizedCallBackNumber=unauthorizedCallBackNumber, srvrAddrChanged=srvrAddrChanged, compErrLngthTotMismatch=compErrLngthTotMismatch, dsIntruderNoAddr=dsIntruderNoAddr, fileWritePreReaderrSrvr=fileWritePreReaderrSrvr, downFileServer=downFileServer, noResourceTag=noResourceTag, writeFault=writeFault, clrStnByConsole=clrStnByConsole, insufficientRamToDecompWithName=insufficientRamToDecompWithName, mlidUnRegister=mlidUnRegister, dsopenSucceeded=dsopenSucceeded, dirSizeGettingTooLrgeForMem=dirSizeGettingTooLrgeForMem, commLinkDeactivated=commLinkDeactivated, redirectInconsistFix=redirectInconsistFix, deviceName=deviceName, srvrToSrvrLinkBeginSync=srvrToSrvrLinkBeginSync, translatorUp=translatorUp, noSAPSocket=noSAPSocket, diskMounted=diskMounted, nlmAlertMajor=nlmAlertMajor, trapinfo=trapinfo, iOEngineNotLoadedAtSameAddress=iOEngineNotLoadedAtSameAddress, volRestrictedSpace=volRestrictedSpace, errWritingStatusDump=errWritingStatusDump, diskDeactivatedDriverUnload=diskDeactivatedDriverUnload, badSrvrInitMsg=badSrvrInitMsg, serverUp=serverUp, volOprDespiteDeviceDriveDeact=volOprDespiteDeviceDriveDeact, macAddress2=macAddress2, rtrConfigErr3=rtrConfigErr3, numberOfBlocks=numberOfBlocks, mSLBoardNumberConnEstablished=mSLBoardNumberConnEstablished, dosType=dosType, rejectedNCPBadSubfunctionLngth=rejectedNCPBadSubfunctionLngth, noTimeSyncNCPVariable=noTimeSyncNCPVariable, secIOEngSupportModulesNotLoaded=secIOEngSupportModulesNotLoaded, domainQuarantined=domainQuarantined, usrAcctDeletedByAUsrSingleConn=usrAcctDeletedByAUsrSingleConn, remDSMediaAck=remDSMediaAck, connClearedByUsr=connClearedByUsr, loginEnabled=loginEnabled, negPktLargeBuffer=negPktLargeBuffer, redirectBlockMismatch=redirectBlockMismatch, auditFileWriteError=auditFileWriteError, srvrCantRouteViaIPXToPrimary=srvrCantRouteViaIPXToPrimary, fileName=fileName, diskDeactivatedUsrRequest=diskDeactivatedUsrRequest, diskDeactivatedEOM=diskDeactivatedEOM, loginConnection=loginConnection, volAnyDismounted=volAnyDismounted, faultInConsoleCommandHandler=faultInConsoleCommandHandler, insertDSMediaAck=insertDSMediaAck, packetSize1=packetSize1, unableToWriteVOLERR=unableToWriteVOLERR, sFTIIErrorUnexpected=sFTIIErrorUnexpected, fileMiscInfo=fileMiscInfo, remDSMediaAborted=remDSMediaAborted, readFault=readFault, shortTermMemoryLimitExceeded=shortTermMemoryLimitExceeded, dsAuditFileThresholdOverflow=dsAuditFileThresholdOverflow, moreRAMgivenToMSEngine=moreRAMgivenToMSEngine, invalidPburstSignature=invalidPburstSignature, auditAlertInvalidConfigFile=auditAlertInvalidConfigFile, unknownErrorCompression=unknownErrorCompression, lanDriverName=lanDriverName, compFilePathCorrupted=compFilePathCorrupted, compErrOffsetTotalsMismatch=compErrOffsetTotalsMismatch, insertDSMediaInto=insertDSMediaInto, modemConnectionEstablished=modemConnectionEstablished, insertMediaAborted=insertMediaAborted, protocolBound=protocolBound, fileSize1=fileSize1, secSrvrLANIsBetter=secSrvrLANIsBetter, errWritingToFileDataStream=errWritingToFileDataStream, srvsSyncing=srvsSyncing, cannotStart=cannotStart, errWritingToTheExtendedDirSpace=errWritingToTheExtendedDirSpace, routerName=routerName, invalidRsrcTagPassedtoAllocConn=invalidRsrcTagPassedtoAllocConn, signatureInvalid=signatureInvalid, srvrsAreSyncedThisIsThePrimary=srvrsAreSyncedThisIsThePrimary, stationNumber=stationNumber, ttsDisErrReadTTSduringBackout=ttsDisErrReadTTSduringBackout, volContainstheWrongDOSType=volContainstheWrongDOSType, nlmSeverity=nlmSeverity, cantCreateMainProcess=cantCreateMainProcess, errExpandingDirDuetoWriteErr=errExpandingDirDuetoWriteErr, insertDSMediaAborted=insertDSMediaAborted, singleSrvrIncompatible=singleSrvrIncompatible, scndryPicLostInterrupt=scndryPicLostInterrupt, remoteConnCleared=remoteConnCleared, notEnoughRAMForComp=notEnoughRAMForComp, noTimerTag=noTimerTag, spuriousInt=spuriousInt, generalTTSfailures=generalTTSfailures, compErrReadZeroBytesOrig=compErrReadZeroBytesOrig, translatorDown=translatorDown, dsAuditFileFull=dsAuditFileFull, numberOfFailedMemoryAllocAttempts=numberOfFailedMemoryAllocAttempts, exception=exception, errWritingToFileDataStreamUsr=errWritingToFileDataStreamUsr, auditEventNumber=auditEventNumber, pathName=pathName, errXferDumpToSystem=errXferDumpToSystem)
