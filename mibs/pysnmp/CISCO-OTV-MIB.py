#
# PySNMP MIB module CISCO-OTV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-OTV-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:52:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
Cisco2KVlanList, = mibBuilder.importSymbols("CISCO-TC", "Cisco2KVlanList")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, ModuleIdentity, TimeTicks, Counter64, ObjectIdentity, Unsigned32, Counter32, NotificationType, Integer32, iso, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "ModuleIdentity", "TimeTicks", "Counter64", "ObjectIdentity", "Unsigned32", "Counter32", "NotificationType", "Integer32", "iso", "MibIdentifier", "Gauge32")
TruthValue, StorageType, DisplayString, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "StorageType", "DisplayString", "TextualConvention", "RowStatus", "MacAddress")
ciscoOtvMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 810))
ciscoOtvMIB.setRevisions(('2013-08-05 00:00',))
if mibBuilder.loadTexts: ciscoOtvMIB.setLastUpdated('201308050000Z')
if mibBuilder.loadTexts: ciscoOtvMIB.setOrganization('Cisco Systems, Inc.')
ciscoOtvMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 0))
ciscoOtvMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1))
ciscoOtvMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 2))
cotvGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1))
cotvOverlayObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2))
cotvAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3))
cotvArpNdObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4))
cotvRouteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5))
cotvSiteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1, 1))
cotvGlobalStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1, 2))
cotvSiteIdAdmin = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cotvSiteIdAdmin.setStatus('current')
cotvSiteIdOper = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvSiteIdOper.setStatus('current')
cotvSiteVlan = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1, 1, 3), VlanIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cotvSiteVlan.setStatus('current')
cotvSiteVlanState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvSiteVlanState.setStatus('current')
cotvOverlayTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1), )
if mibBuilder.loadTexts: cotvOverlayTable.setStatus('current')
cotvOverlayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvOverlayNumber"))
if mibBuilder.loadTexts: cotvOverlayEntry.setStatus('current')
cotvOverlayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cotvOverlayNumber.setStatus('current')
cotvOverlayVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvOverlayVpnName.setStatus('current')
cotvOverlayVpnState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("other", 0), ("down", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvOverlayVpnState.setStatus('current')
cotvOverlayVpnDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("other", 0), ("configChange", 1), ("missingControlGroup", 2), ("missingDataGroupRange", 3), ("missingJoinOrSourceInterface", 4), ("missingVpnName", 5), ("missingJoinInterfaceAddr", 6), ("joinInterfaceDown", 7), ("adminDown", 8), ("deleteHoldDown", 9), ("reinit", 10), ("missingSiteId", 11), ("siteIdMismatch", 12), ("missingSourceInterfaceAddr", 13), ("sourceInterfaceDown", 14), ("changingSiteId", 15), ("changingControlGroup", 16), ("missingDeviceId", 17), ("changingDeviceId", 18), ("cleanupInProgress", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvOverlayVpnDownReason.setStatus('current')
cotvOverlayVlansExtendedFirst2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 5), Cisco2KVlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayVlansExtendedFirst2k.setStatus('current')
cotvOverlayVlansExtendedSecond2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 6), Cisco2KVlanList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayVlansExtendedSecond2k.setStatus('current')
cotvOverlayControlGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayControlGroupAddrType.setStatus('current')
cotvOverlayControlGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayControlGroupAddr.setStatus('current')
cotvOverlayBroadcastGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 9), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayBroadcastGroupAddrType.setStatus('current')
cotvOverlayBroadcastGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 10), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayBroadcastGroupAddr.setStatus('current')
cotvOverlayJoinInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayJoinInterface.setStatus('current')
cotvOverlaySourceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 12), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlaySourceInterface.setStatus('current')
cotvOverlayAedCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvOverlayAedCapable.setStatus('current')
cotvOverlayAedIncapableReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("other", 0), ("overlayDown", 1), ("siteIdNotConfigured", 2), ("siteIdMismatch", 3), ("versionMismatch", 4), ("siteVlanDown", 5), ("noExtendedVlanUp", 6), ("noOverlayAdjacencyUp", 7), ("lspdbSyncIncomplete", 8), ("overlayDownInProgress", 9), ("isisControlGroupSyncPending", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvOverlayAedIncapableReason.setStatus('current')
cotvOverlayAdjServerTransportType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multicastAndUnicast", 1), ("unicastOnly", 2))).clone('multicastAndUnicast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayAdjServerTransportType.setStatus('current')
cotvOverlayAdjServerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayAdjServerEnable.setStatus('current')
cotvOverlayPrimaryAdjServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 17), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayPrimaryAdjServerAddrType.setStatus('current')
cotvOverlayPrimaryAdjServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 18), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayPrimaryAdjServerAddr.setStatus('current')
cotvOverlaySecondaryAdjServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 19), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlaySecondaryAdjServerAddrType.setStatus('current')
cotvOverlaySecondaryAdjServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 20), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlaySecondaryAdjServerAddr.setStatus('current')
cotvOverlaySuppressArpND = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlaySuppressArpND.setStatus('current')
cotvOverlayStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 22), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayStorageType.setStatus('current')
cotvOverlayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 1, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvOverlayRowStatus.setStatus('current')
cotvVlansTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2), )
if mibBuilder.loadTexts: cotvVlansTable.setStatus('current')
cotvVlansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvOverlayNumber"), (0, "CISCO-OTV-MIB", "cotvVlanId"))
if mibBuilder.loadTexts: cotvVlansEntry.setStatus('current')
cotvVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cotvVlanId.setStatus('current')
cotvVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvVlanState.setStatus('current')
cotvVlanInactiveReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("nonAed", 2), ("vlanDisabled", 3), ("overlayDown", 4), ("deleteHoldDown", 5), ("hwDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvVlanInactiveReason.setStatus('current')
cotvVlanAedAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvVlanAedAddrType.setStatus('current')
cotvVlanAedAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvVlanAedAddr.setStatus('current')
cotvVlanEdgeDevIsAed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvVlanEdgeDevIsAed.setStatus('current')
cotvDataGroupConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3), )
if mibBuilder.loadTexts: cotvDataGroupConfigTable.setStatus('current')
cotvDataGroupConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvOverlayNumber"), (0, "CISCO-OTV-MIB", "cotvDataGroupMcastRangeAddrType"), (0, "CISCO-OTV-MIB", "cotvDataGroupMcastRangeAddr"), (0, "CISCO-OTV-MIB", "cotvDataGroupMcastRangePrefixLength"))
if mibBuilder.loadTexts: cotvDataGroupConfigEntry.setStatus('current')
cotvDataGroupMcastRangeAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cotvDataGroupMcastRangeAddrType.setStatus('current')
cotvDataGroupMcastRangeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvDataGroupMcastRangeAddr.setStatus('current')
cotvDataGroupMcastRangePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: cotvDataGroupMcastRangePrefixLength.setStatus('current')
cotvDataGroupStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3, 1, 4), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvDataGroupStorageType.setStatus('current')
cotvDataGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cotvDataGroupRowStatus.setStatus('current')
cotvDataGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4), )
if mibBuilder.loadTexts: cotvDataGroupInfoTable.setStatus('current')
cotvDataGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvOverlayNumber"), (0, "CISCO-OTV-MIB", "cotvDataGroupActiveSrcLocation"), (0, "CISCO-OTV-MIB", "cotvDataGroupVlanId"), (0, "CISCO-OTV-MIB", "cotvDataGroupActiveGroupAddrType"), (0, "CISCO-OTV-MIB", "cotvDataGroupActiveGroupAddr"), (0, "CISCO-OTV-MIB", "cotvDataGroupActiveSrcAddrType"), (0, "CISCO-OTV-MIB", "cotvDataGroupActiveSrcAddr"), (0, "CISCO-OTV-MIB", "cotvDataGroupDeliveryGroupAddrType"), (0, "CISCO-OTV-MIB", "cotvDataGroupDeliveryGroupAddr"), (0, "CISCO-OTV-MIB", "cotvDataGroupDeliverySrcAddrType"), (0, "CISCO-OTV-MIB", "cotvDataGroupDeliverySrcAddr"))
if mibBuilder.loadTexts: cotvDataGroupInfoEntry.setStatus('current')
cotvDataGroupActiveSrcLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2))))
if mibBuilder.loadTexts: cotvDataGroupActiveSrcLocation.setStatus('current')
cotvDataGroupVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 2), VlanIndex())
if mibBuilder.loadTexts: cotvDataGroupVlanId.setStatus('current')
cotvDataGroupActiveGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cotvDataGroupActiveGroupAddrType.setStatus('current')
cotvDataGroupActiveGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvDataGroupActiveGroupAddr.setStatus('current')
cotvDataGroupActiveSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 5), InetAddressType())
if mibBuilder.loadTexts: cotvDataGroupActiveSrcAddrType.setStatus('current')
cotvDataGroupActiveSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvDataGroupActiveSrcAddr.setStatus('current')
cotvDataGroupDeliveryGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 7), InetAddressType())
if mibBuilder.loadTexts: cotvDataGroupDeliveryGroupAddrType.setStatus('current')
cotvDataGroupDeliveryGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvDataGroupDeliveryGroupAddr.setStatus('current')
cotvDataGroupDeliverySrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 9), InetAddressType())
if mibBuilder.loadTexts: cotvDataGroupDeliverySrcAddrType.setStatus('current')
cotvDataGroupDeliverySrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvDataGroupDeliverySrcAddr.setStatus('current')
cotvDataGroupJoinInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvDataGroupJoinInterface.setStatus('current')
cotvDataGroupLocalActiveSrcState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 2, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("remote", 3), ("orphan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvDataGroupLocalActiveSrcState.setStatus('current')
cotvAdjacencyDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1), )
if mibBuilder.loadTexts: cotvAdjacencyDatabaseTable.setStatus('current')
cotvAdjacencyDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvOverlayNumber"), (0, "CISCO-OTV-MIB", "cotvAdjacentDevAddrType"), (0, "CISCO-OTV-MIB", "cotvAdjacentDevAddr"))
if mibBuilder.loadTexts: cotvAdjacencyDatabaseEntry.setStatus('current')
cotvAdjacentDevAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cotvAdjacentDevAddrType.setStatus('current')
cotvAdjacentDevAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cotvAdjacentDevAddr.setStatus('current')
cotvAdjacentDevSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvAdjacentDevSystemID.setStatus('current')
cotvAdjacentDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvAdjacentDevName.setStatus('current')
cotvAdjacentDevState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("other", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvAdjacentDevState.setStatus('current')
cotvAdjacentDevUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 3, 1, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvAdjacentDevUpTime.setStatus('current')
cotvArpNdCacheTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1), )
if mibBuilder.loadTexts: cotvArpNdCacheTable.setStatus('current')
cotvArpNdCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvOverlayNumber"), (0, "CISCO-OTV-MIB", "cotvVlanId"), (0, "CISCO-OTV-MIB", "cotvArpNdCacheL3AddrType"), (0, "CISCO-OTV-MIB", "cotvArpNdCacheL3Addr"))
if mibBuilder.loadTexts: cotvArpNdCacheEntry.setStatus('current')
cotvArpNdCacheL3AddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cotvArpNdCacheL3AddrType.setStatus('current')
cotvArpNdCacheL3Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 64)))
if mibBuilder.loadTexts: cotvArpNdCacheL3Addr.setStatus('current')
cotvArpNdCacheMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvArpNdCacheMacAddr.setStatus('current')
cotvArpNdCacheAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvArpNdCacheAge.setStatus('current')
cotvArpNdCacheTimeToExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 4, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvArpNdCacheTimeToExpire.setStatus('current')
cotvRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1), )
if mibBuilder.loadTexts: cotvRouteTable.setStatus('current')
cotvRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvRouteVlanId"), (0, "CISCO-OTV-MIB", "cotvRouteMacAddr"))
if mibBuilder.loadTexts: cotvRouteEntry.setStatus('current')
cotvRouteVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cotvRouteVlanId.setStatus('current')
cotvRouteMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: cotvRouteMacAddr.setStatus('current')
cotvRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvRouteMetric.setStatus('current')
cotvRouteUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvRouteUpTime.setStatus('current')
cotvRouteOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvRouteOwner.setStatus('current')
cotvRouteNextHopIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvRouteNextHopIf.setStatus('current')
cotvRouteNextHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvRouteNextHopAddrType.setStatus('current')
cotvRouteNextHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 1, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvRouteNextHopAddr.setStatus('current')
cotvMcastRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2), )
if mibBuilder.loadTexts: cotvMcastRouteTable.setStatus('current')
cotvMcastRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvMcastRouteVlanId"), (0, "CISCO-OTV-MIB", "cotvMcastRouteActiveSrcAddrType"), (0, "CISCO-OTV-MIB", "cotvMcastRouteActiveSrcAddr"), (0, "CISCO-OTV-MIB", "cotvMcastRouteActiveGroupAddrType"), (0, "CISCO-OTV-MIB", "cotvMcastRouteActiveGroupAddr"))
if mibBuilder.loadTexts: cotvMcastRouteEntry.setStatus('current')
cotvMcastRouteVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cotvMcastRouteVlanId.setStatus('current')
cotvMcastRouteActiveSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cotvMcastRouteActiveSrcAddrType.setStatus('current')
cotvMcastRouteActiveSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvMcastRouteActiveSrcAddr.setStatus('current')
cotvMcastRouteActiveGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 4), InetAddressType())
if mibBuilder.loadTexts: cotvMcastRouteActiveGroupAddrType.setStatus('current')
cotvMcastRouteActiveGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvMcastRouteActiveGroupAddr.setStatus('current')
cotvMcastRouteOwners = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteOwners.setStatus('current')
cotvMcastRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteMetric.setStatus('current')
cotvMcastRouteUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 2, 1, 8), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteUpTime.setStatus('current')
cotvMcastRouteInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3), )
if mibBuilder.loadTexts: cotvMcastRouteInfoTable.setStatus('current')
cotvMcastRouteInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1), ).setIndexNames((0, "CISCO-OTV-MIB", "cotvMcastRouteInfoVlanId"), (0, "CISCO-OTV-MIB", "cotvMcastRouteInfoActiveSrcAddrType"), (0, "CISCO-OTV-MIB", "cotvMcastRouteInfoActiveSrcAddr"), (0, "CISCO-OTV-MIB", "cotvMcastRouteInfoActiveGroupAddrType"), (0, "CISCO-OTV-MIB", "cotvMcastRouteInfoActiveGroupAddr"), (0, "CISCO-OTV-MIB", "cotvMcastRouteInfoIf"))
if mibBuilder.loadTexts: cotvMcastRouteInfoEntry.setStatus('current')
cotvMcastRouteInfoVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cotvMcastRouteInfoVlanId.setStatus('current')
cotvMcastRouteInfoActiveSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cotvMcastRouteInfoActiveSrcAddrType.setStatus('current')
cotvMcastRouteInfoActiveSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvMcastRouteInfoActiveSrcAddr.setStatus('current')
cotvMcastRouteInfoActiveGroupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 4), InetAddressType())
if mibBuilder.loadTexts: cotvMcastRouteInfoActiveGroupAddrType.setStatus('current')
cotvMcastRouteInfoActiveGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: cotvMcastRouteInfoActiveGroupAddr.setStatus('current')
cotvMcastRouteInfoIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 6), InterfaceIndexOrZero())
if mibBuilder.loadTexts: cotvMcastRouteInfoIf.setStatus('current')
cotvMcastRouteInfoHostAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteInfoHostAddrType.setStatus('current')
cotvMcastRouteInfoHostAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteInfoHostAddr.setStatus('current')
cotvMcastRouteInfoProtocolOwners = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteInfoProtocolOwners.setStatus('current')
cotvMcastRouteInfoMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteInfoMetric.setStatus('current')
cotvMcastRouteInfoUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 810, 1, 5, 3, 1, 11), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cotvMcastRouteInfoUpTime.setStatus('current')
ciscoOtvMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 1))
ciscoOtvMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2))
ciscoOtvMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 1, 1)).setObjects(("CISCO-OTV-MIB", "ciscoOtvSiteGroup"), ("CISCO-OTV-MIB", "ciscoOtvOverlayGroup"), ("CISCO-OTV-MIB", "ciscoOtvVlanGroup"), ("CISCO-OTV-MIB", "ciscoOtvDataGroupConfigGroup"), ("CISCO-OTV-MIB", "ciscoOtvDataGroupInfoGroup"), ("CISCO-OTV-MIB", "ciscoOtvAdjacencyGroup"), ("CISCO-OTV-MIB", "ciscoOtvArpNdCacheGroup"), ("CISCO-OTV-MIB", "ciscoOtvRouteGroup"), ("CISCO-OTV-MIB", "ciscoOtvMcastRouteGroup"), ("CISCO-OTV-MIB", "ciscoOtvMcastRouteInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvMIBCompliance = ciscoOtvMIBCompliance.setStatus('current')
ciscoOtvSiteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 1)).setObjects(("CISCO-OTV-MIB", "cotvSiteIdAdmin"), ("CISCO-OTV-MIB", "cotvSiteIdOper"), ("CISCO-OTV-MIB", "cotvSiteVlan"), ("CISCO-OTV-MIB", "cotvSiteVlanState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvSiteGroup = ciscoOtvSiteGroup.setStatus('current')
ciscoOtvOverlayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 2)).setObjects(("CISCO-OTV-MIB", "cotvOverlayVpnName"), ("CISCO-OTV-MIB", "cotvOverlayVpnState"), ("CISCO-OTV-MIB", "cotvOverlayVpnDownReason"), ("CISCO-OTV-MIB", "cotvOverlayVlansExtendedFirst2k"), ("CISCO-OTV-MIB", "cotvOverlayVlansExtendedSecond2k"), ("CISCO-OTV-MIB", "cotvOverlayControlGroupAddrType"), ("CISCO-OTV-MIB", "cotvOverlayControlGroupAddr"), ("CISCO-OTV-MIB", "cotvOverlayBroadcastGroupAddrType"), ("CISCO-OTV-MIB", "cotvOverlayBroadcastGroupAddr"), ("CISCO-OTV-MIB", "cotvOverlayJoinInterface"), ("CISCO-OTV-MIB", "cotvOverlaySourceInterface"), ("CISCO-OTV-MIB", "cotvOverlayAedCapable"), ("CISCO-OTV-MIB", "cotvOverlayAedIncapableReason"), ("CISCO-OTV-MIB", "cotvOverlayAdjServerTransportType"), ("CISCO-OTV-MIB", "cotvOverlayAdjServerEnable"), ("CISCO-OTV-MIB", "cotvOverlayPrimaryAdjServerAddrType"), ("CISCO-OTV-MIB", "cotvOverlayPrimaryAdjServerAddr"), ("CISCO-OTV-MIB", "cotvOverlaySecondaryAdjServerAddrType"), ("CISCO-OTV-MIB", "cotvOverlaySecondaryAdjServerAddr"), ("CISCO-OTV-MIB", "cotvOverlaySuppressArpND"), ("CISCO-OTV-MIB", "cotvOverlayStorageType"), ("CISCO-OTV-MIB", "cotvOverlayRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvOverlayGroup = ciscoOtvOverlayGroup.setStatus('current')
ciscoOtvVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 3)).setObjects(("CISCO-OTV-MIB", "cotvVlanState"), ("CISCO-OTV-MIB", "cotvVlanInactiveReason"), ("CISCO-OTV-MIB", "cotvVlanAedAddrType"), ("CISCO-OTV-MIB", "cotvVlanAedAddr"), ("CISCO-OTV-MIB", "cotvVlanEdgeDevIsAed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvVlanGroup = ciscoOtvVlanGroup.setStatus('current')
ciscoOtvDataGroupConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 4)).setObjects(("CISCO-OTV-MIB", "cotvDataGroupStorageType"), ("CISCO-OTV-MIB", "cotvDataGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvDataGroupConfigGroup = ciscoOtvDataGroupConfigGroup.setStatus('current')
ciscoOtvDataGroupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 5)).setObjects(("CISCO-OTV-MIB", "cotvDataGroupJoinInterface"), ("CISCO-OTV-MIB", "cotvDataGroupLocalActiveSrcState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvDataGroupInfoGroup = ciscoOtvDataGroupInfoGroup.setStatus('current')
ciscoOtvAdjacencyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 6)).setObjects(("CISCO-OTV-MIB", "cotvAdjacentDevSystemID"), ("CISCO-OTV-MIB", "cotvAdjacentDevName"), ("CISCO-OTV-MIB", "cotvAdjacentDevState"), ("CISCO-OTV-MIB", "cotvAdjacentDevUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvAdjacencyGroup = ciscoOtvAdjacencyGroup.setStatus('current')
ciscoOtvArpNdCacheGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 7)).setObjects(("CISCO-OTV-MIB", "cotvArpNdCacheMacAddr"), ("CISCO-OTV-MIB", "cotvArpNdCacheAge"), ("CISCO-OTV-MIB", "cotvArpNdCacheTimeToExpire"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvArpNdCacheGroup = ciscoOtvArpNdCacheGroup.setStatus('current')
ciscoOtvRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 8)).setObjects(("CISCO-OTV-MIB", "cotvRouteMetric"), ("CISCO-OTV-MIB", "cotvRouteUpTime"), ("CISCO-OTV-MIB", "cotvRouteOwner"), ("CISCO-OTV-MIB", "cotvRouteNextHopIf"), ("CISCO-OTV-MIB", "cotvRouteNextHopAddrType"), ("CISCO-OTV-MIB", "cotvRouteNextHopAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvRouteGroup = ciscoOtvRouteGroup.setStatus('current')
ciscoOtvMcastRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 9)).setObjects(("CISCO-OTV-MIB", "cotvMcastRouteOwners"), ("CISCO-OTV-MIB", "cotvMcastRouteMetric"), ("CISCO-OTV-MIB", "cotvMcastRouteUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvMcastRouteGroup = ciscoOtvMcastRouteGroup.setStatus('current')
ciscoOtvMcastRouteInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 810, 2, 2, 10)).setObjects(("CISCO-OTV-MIB", "cotvMcastRouteInfoHostAddrType"), ("CISCO-OTV-MIB", "cotvMcastRouteInfoHostAddr"), ("CISCO-OTV-MIB", "cotvMcastRouteInfoProtocolOwners"), ("CISCO-OTV-MIB", "cotvMcastRouteInfoMetric"), ("CISCO-OTV-MIB", "cotvMcastRouteInfoUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOtvMcastRouteInfoGroup = ciscoOtvMcastRouteInfoGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-OTV-MIB", cotvMcastRouteInfoHostAddr=cotvMcastRouteInfoHostAddr, cotvDataGroupRowStatus=cotvDataGroupRowStatus, cotvOverlayObjects=cotvOverlayObjects, ciscoOtvMIBObjects=ciscoOtvMIBObjects, cotvDataGroupLocalActiveSrcState=cotvDataGroupLocalActiveSrcState, cotvArpNdCacheMacAddr=cotvArpNdCacheMacAddr, ciscoOtvArpNdCacheGroup=ciscoOtvArpNdCacheGroup, cotvOverlayVlansExtendedSecond2k=cotvOverlayVlansExtendedSecond2k, ciscoOtvRouteGroup=ciscoOtvRouteGroup, cotvDataGroupStorageType=cotvDataGroupStorageType, cotvSiteIdOper=cotvSiteIdOper, cotvMcastRouteInfoUpTime=cotvMcastRouteInfoUpTime, cotvOverlayRowStatus=cotvOverlayRowStatus, cotvDataGroupConfigEntry=cotvDataGroupConfigEntry, PYSNMP_MODULE_ID=ciscoOtvMIB, ciscoOtvMcastRouteGroup=ciscoOtvMcastRouteGroup, cotvVlanAedAddr=cotvVlanAedAddr, cotvMcastRouteInfoEntry=cotvMcastRouteInfoEntry, cotvOverlayJoinInterface=cotvOverlayJoinInterface, cotvMcastRouteOwners=cotvMcastRouteOwners, cotvArpNdCacheL3Addr=cotvArpNdCacheL3Addr, cotvRouteMacAddr=cotvRouteMacAddr, cotvMcastRouteInfoIf=cotvMcastRouteInfoIf, cotvRouteUpTime=cotvRouteUpTime, cotvOverlaySecondaryAdjServerAddrType=cotvOverlaySecondaryAdjServerAddrType, cotvMcastRouteInfoActiveGroupAddr=cotvMcastRouteInfoActiveGroupAddr, cotvMcastRouteInfoVlanId=cotvMcastRouteInfoVlanId, ciscoOtvMcastRouteInfoGroup=ciscoOtvMcastRouteInfoGroup, cotvOverlayControlGroupAddr=cotvOverlayControlGroupAddr, cotvDataGroupMcastRangePrefixLength=cotvDataGroupMcastRangePrefixLength, cotvDataGroupActiveSrcAddr=cotvDataGroupActiveSrcAddr, cotvOverlayBroadcastGroupAddrType=cotvOverlayBroadcastGroupAddrType, cotvVlanInactiveReason=cotvVlanInactiveReason, cotvOverlayPrimaryAdjServerAddr=cotvOverlayPrimaryAdjServerAddr, cotvArpNdCacheL3AddrType=cotvArpNdCacheL3AddrType, cotvOverlayEntry=cotvOverlayEntry, cotvOverlayVpnState=cotvOverlayVpnState, cotvAdjacencyObjects=cotvAdjacencyObjects, cotvDataGroupActiveSrcAddrType=cotvDataGroupActiveSrcAddrType, cotvOverlayAedCapable=cotvOverlayAedCapable, cotvSiteIdAdmin=cotvSiteIdAdmin, cotvAdjacentDevState=cotvAdjacentDevState, cotvVlansEntry=cotvVlansEntry, cotvAdjacentDevAddr=cotvAdjacentDevAddr, cotvMcastRouteInfoActiveGroupAddrType=cotvMcastRouteInfoActiveGroupAddrType, cotvAdjacentDevAddrType=cotvAdjacentDevAddrType, ciscoOtvDataGroupConfigGroup=ciscoOtvDataGroupConfigGroup, cotvDataGroupActiveGroupAddr=cotvDataGroupActiveGroupAddr, cotvDataGroupInfoEntry=cotvDataGroupInfoEntry, cotvMcastRouteInfoProtocolOwners=cotvMcastRouteInfoProtocolOwners, cotvOverlayAdjServerEnable=cotvOverlayAdjServerEnable, cotvRouteNextHopAddr=cotvRouteNextHopAddr, cotvSiteVlanState=cotvSiteVlanState, cotvOverlayAedIncapableReason=cotvOverlayAedIncapableReason, cotvOverlayVpnName=cotvOverlayVpnName, cotvRouteVlanId=cotvRouteVlanId, ciscoOtvMIBCompliances=ciscoOtvMIBCompliances, cotvMcastRouteActiveGroupAddrType=cotvMcastRouteActiveGroupAddrType, cotvMcastRouteMetric=cotvMcastRouteMetric, cotvSiteObjects=cotvSiteObjects, cotvMcastRouteEntry=cotvMcastRouteEntry, cotvDataGroupDeliveryGroupAddr=cotvDataGroupDeliveryGroupAddr, cotvOverlaySuppressArpND=cotvOverlaySuppressArpND, cotvOverlayVlansExtendedFirst2k=cotvOverlayVlansExtendedFirst2k, cotvOverlayVpnDownReason=cotvOverlayVpnDownReason, cotvOverlayNumber=cotvOverlayNumber, cotvDataGroupMcastRangeAddrType=cotvDataGroupMcastRangeAddrType, cotvAdjacentDevSystemID=cotvAdjacentDevSystemID, cotvArpNdCacheTimeToExpire=cotvArpNdCacheTimeToExpire, cotvRouteObjects=cotvRouteObjects, cotvMcastRouteInfoMetric=cotvMcastRouteInfoMetric, cotvVlansTable=cotvVlansTable, cotvDataGroupDeliverySrcAddrType=cotvDataGroupDeliverySrcAddrType, cotvVlanEdgeDevIsAed=cotvVlanEdgeDevIsAed, cotvOverlayAdjServerTransportType=cotvOverlayAdjServerTransportType, cotvAdjacentDevUpTime=cotvAdjacentDevUpTime, cotvMcastRouteActiveSrcAddr=cotvMcastRouteActiveSrcAddr, cotvMcastRouteInfoTable=cotvMcastRouteInfoTable, cotvAdjacencyDatabaseTable=cotvAdjacencyDatabaseTable, cotvOverlayControlGroupAddrType=cotvOverlayControlGroupAddrType, cotvOverlaySecondaryAdjServerAddr=cotvOverlaySecondaryAdjServerAddr, cotvOverlayStorageType=cotvOverlayStorageType, ciscoOtvOverlayGroup=ciscoOtvOverlayGroup, cotvMcastRouteInfoActiveSrcAddr=cotvMcastRouteInfoActiveSrcAddr, cotvAdjacencyDatabaseEntry=cotvAdjacencyDatabaseEntry, ciscoOtvMIBCompliance=ciscoOtvMIBCompliance, ciscoOtvAdjacencyGroup=ciscoOtvAdjacencyGroup, cotvMcastRouteUpTime=cotvMcastRouteUpTime, cotvVlanId=cotvVlanId, cotvRouteTable=cotvRouteTable, cotvArpNdCacheEntry=cotvArpNdCacheEntry, cotvRouteNextHopAddrType=cotvRouteNextHopAddrType, cotvOverlaySourceInterface=cotvOverlaySourceInterface, cotvDataGroupConfigTable=cotvDataGroupConfigTable, cotvMcastRouteInfoHostAddrType=cotvMcastRouteInfoHostAddrType, cotvMcastRouteVlanId=cotvMcastRouteVlanId, cotvMcastRouteActiveSrcAddrType=cotvMcastRouteActiveSrcAddrType, ciscoOtvMIBNotifs=ciscoOtvMIBNotifs, cotvOverlayPrimaryAdjServerAddrType=cotvOverlayPrimaryAdjServerAddrType, cotvDataGroupDeliveryGroupAddrType=cotvDataGroupDeliveryGroupAddrType, cotvDataGroupInfoTable=cotvDataGroupInfoTable, cotvGlobalObjects=cotvGlobalObjects, cotvDataGroupActiveSrcLocation=cotvDataGroupActiveSrcLocation, cotvVlanState=cotvVlanState, cotvSiteVlan=cotvSiteVlan, cotvArpNdObjects=cotvArpNdObjects, ciscoOtvMIBConform=ciscoOtvMIBConform, cotvArpNdCacheTable=cotvArpNdCacheTable, ciscoOtvMIB=ciscoOtvMIB, cotvAdjacentDevName=cotvAdjacentDevName, ciscoOtvVlanGroup=ciscoOtvVlanGroup, cotvDataGroupDeliverySrcAddr=cotvDataGroupDeliverySrcAddr, cotvMcastRouteActiveGroupAddr=cotvMcastRouteActiveGroupAddr, ciscoOtvDataGroupInfoGroup=ciscoOtvDataGroupInfoGroup, cotvRouteNextHopIf=cotvRouteNextHopIf, ciscoOtvSiteGroup=ciscoOtvSiteGroup, cotvMcastRouteTable=cotvMcastRouteTable, cotvGlobalStatsObjects=cotvGlobalStatsObjects, cotvArpNdCacheAge=cotvArpNdCacheAge, cotvDataGroupVlanId=cotvDataGroupVlanId, cotvRouteOwner=cotvRouteOwner, cotvVlanAedAddrType=cotvVlanAedAddrType, cotvOverlayBroadcastGroupAddr=cotvOverlayBroadcastGroupAddr, cotvOverlayTable=cotvOverlayTable, ciscoOtvMIBGroups=ciscoOtvMIBGroups, cotvRouteMetric=cotvRouteMetric, cotvDataGroupActiveGroupAddrType=cotvDataGroupActiveGroupAddrType, cotvDataGroupJoinInterface=cotvDataGroupJoinInterface, cotvDataGroupMcastRangeAddr=cotvDataGroupMcastRangeAddr, cotvRouteEntry=cotvRouteEntry, cotvMcastRouteInfoActiveSrcAddrType=cotvMcastRouteInfoActiveSrcAddrType)
