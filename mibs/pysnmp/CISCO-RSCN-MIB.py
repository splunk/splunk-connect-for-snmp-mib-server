#
# PySNMP MIB module CISCO-RSCN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-RSCN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:54:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
FcGs3RejectReasonCode, = mibBuilder.importSymbols("CISCO-NS-MIB", "FcGs3RejectReasonCode")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcAddressId, = mibBuilder.importSymbols("CISCO-ST-TC", "FcAddressId")
vsanIndex, = mibBuilder.importSymbols("CISCO-VSAN-MIB", "vsanIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, ObjectIdentity, TimeTicks, Gauge32, MibIdentifier, Counter32, IpAddress, Integer32, Unsigned32, Counter64, Bits, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Gauge32", "MibIdentifier", "Counter32", "IpAddress", "Integer32", "Unsigned32", "Counter64", "Bits", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
ciscoRscnMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 292))
ciscoRscnMIB.setRevisions(('2008-09-01 00:00', '2006-08-17 00:00', '2005-05-06 00:00', '2003-10-16 00:00', '2002-09-20 00:00',))
if mibBuilder.loadTexts: ciscoRscnMIB.setLastUpdated('200809010000Z')
if mibBuilder.loadTexts: ciscoRscnMIB.setOrganization('Cisco Systems Inc.')
ciscoRscnMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 1))
rscnMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 2))
rscnConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1))
rscnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2))
rscnInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 3))
rscnNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 4))
rscnNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 4, 0))
rscnScrNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnScrNumber.setStatus('current')
rscnScrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 2), )
if mibBuilder.loadTexts: rscnScrTable.setStatus('current')
rscnScrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-RSCN-MIB", "rscnScrFcId"))
if mibBuilder.loadTexts: rscnScrEntry.setStatus('current')
rscnScrFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 2, 1, 1), FcAddressId())
if mibBuilder.loadTexts: rscnScrFcId.setStatus('current')
rscnScrRegType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fromFabricCtrlr", 1), ("fromNxPort", 2), ("fromBoth", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnScrRegType.setStatus('current')
rscnScrTotalRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnScrTotalRejects.setStatus('current')
rscnRscnReqTotalRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnRscnReqTotalRejects.setStatus('current')
rscnSwRscnReqTotalRejects = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnSwRscnReqTotalRejects.setStatus('current')
rscnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4), )
if mibBuilder.loadTexts: rscnStatsTable.setStatus('current')
rscnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"))
if mibBuilder.loadTexts: rscnStatsEntry.setStatus('current')
rscnRxScrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnRxScrs.setStatus('current')
rscnRxRscns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnRxRscns.setStatus('current')
rscnTxRscns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnTxRscns.setStatus('current')
rscnRxSwRscns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnRxSwRscns.setStatus('current')
rscnTxSwRscns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnTxSwRscns.setStatus('current')
rscnScrRej = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnScrRej.setStatus('current')
rscnRscnReqRej = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnRscnReqRej.setStatus('current')
rscnSwRscnReqRej = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnSwRscnReqRej.setStatus('current')
rscnIlsRejReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 3, 1), FcGs3RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnIlsRejReasonCode.setStatus('current')
rscnElsRejReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 3, 2), FcGs3RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscnElsRejReasonCode.setStatus('current')
rscnIlsRejectReqNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscnIlsRejectReqNotifyEnable.setStatus('current')
rscnElsRejectReqNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscnElsRejectReqNotifyEnable.setStatus('current')
rscnNotifyFcId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 5), FcAddressId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rscnNotifyFcId.setStatus('current')
rscnMultiPidTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 6), )
if mibBuilder.loadTexts: rscnMultiPidTable.setStatus('current')
rscnMultiPidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"))
if mibBuilder.loadTexts: rscnMultiPidEntry.setStatus('current')
rscnMultiPidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 6, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscnMultiPidEnable.setStatus('current')
rscnEventTovTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 7), )
if mibBuilder.loadTexts: rscnEventTovTable.setStatus('current')
rscnEventTovEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"))
if mibBuilder.loadTexts: rscnEventTovEntry.setStatus('current')
rscnEventTov = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000)).clone(2000)).setUnits('milli-secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscnEventTov.setStatus('current')
rscnIlsRxRejectReqNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscnIlsRxRejectReqNotifyEnable.setStatus('current')
rscnElsRxRejectReqNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscnElsRxRejectReqNotifyEnable.setStatus('current')
rscnElsRejectReqNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 4, 0, 1)).setObjects(("CISCO-RSCN-MIB", "rscnElsRejReasonCode"), ("CISCO-RSCN-MIB", "rscnNotifyFcId"))
if mibBuilder.loadTexts: rscnElsRejectReqNotify.setStatus('current')
rscnIlsRejectReqNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 4, 0, 2)).setObjects(("CISCO-RSCN-MIB", "rscnIlsRejReasonCode"), ("CISCO-RSCN-MIB", "rscnNotifyFcId"))
if mibBuilder.loadTexts: rscnIlsRejectReqNotify.setStatus('current')
rscnElsRxRejectReqNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 4, 0, 3)).setObjects(("CISCO-RSCN-MIB", "rscnElsRejReasonCode"), ("CISCO-RSCN-MIB", "rscnNotifyFcId"))
if mibBuilder.loadTexts: rscnElsRxRejectReqNotify.setStatus('current')
rscnIlsRxRejectReqNotify = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 292, 1, 4, 0, 4)).setObjects(("CISCO-RSCN-MIB", "rscnIlsRejReasonCode"), ("CISCO-RSCN-MIB", "rscnNotifyFcId"))
if mibBuilder.loadTexts: rscnIlsRxRejectReqNotify.setStatus('current')
rscnMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 1))
rscnMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2))
rscnMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 1, 1)).setObjects(("CISCO-RSCN-MIB", "rscnConfigGroup"), ("CISCO-RSCN-MIB", "rscnStatsGroup"), ("CISCO-RSCN-MIB", "rscnNotifyControlGroup"), ("CISCO-RSCN-MIB", "rscnNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnMIBCompliance = rscnMIBCompliance.setStatus('deprecated')
rscnMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 1, 2)).setObjects(("CISCO-RSCN-MIB", "rscnConfigGroupRev1"), ("CISCO-RSCN-MIB", "rscnStatsGroup"), ("CISCO-RSCN-MIB", "rscnNotifyControlGroup"), ("CISCO-RSCN-MIB", "rscnNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnMIBComplianceRev1 = rscnMIBComplianceRev1.setStatus('deprecated')
rscnMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 1, 3)).setObjects(("CISCO-RSCN-MIB", "rscnConfigGroupRev1"), ("CISCO-RSCN-MIB", "rscnStatsGroup"), ("CISCO-RSCN-MIB", "rscnNotifyControlGroup"), ("CISCO-RSCN-MIB", "rscnNotifyGroup"), ("CISCO-RSCN-MIB", "rscnConfigGroupRev1Sup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnMIBComplianceRev2 = rscnMIBComplianceRev2.setStatus('deprecated')
rscnMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 1, 4)).setObjects(("CISCO-RSCN-MIB", "rscnConfigGroupRev1"), ("CISCO-RSCN-MIB", "rscnStatsGroup"), ("CISCO-RSCN-MIB", "rscnNotifyControlGroup"), ("CISCO-RSCN-MIB", "rscnNotifyGroup"), ("CISCO-RSCN-MIB", "rscnConfigGroupRev1Sup1"), ("CISCO-RSCN-MIB", "rscnRejectNotifyGroup"), ("CISCO-RSCN-MIB", "rscnNotifyControlGroupSup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnMIBComplianceRev3 = rscnMIBComplianceRev3.setStatus('current')
rscnConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 1)).setObjects(("CISCO-RSCN-MIB", "rscnScrNumber"), ("CISCO-RSCN-MIB", "rscnScrRegType"), ("CISCO-RSCN-MIB", "rscnNotifyFcId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnConfigGroup = rscnConfigGroup.setStatus('deprecated')
rscnStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 2)).setObjects(("CISCO-RSCN-MIB", "rscnScrTotalRejects"), ("CISCO-RSCN-MIB", "rscnRscnReqTotalRejects"), ("CISCO-RSCN-MIB", "rscnSwRscnReqTotalRejects"), ("CISCO-RSCN-MIB", "rscnRxScrs"), ("CISCO-RSCN-MIB", "rscnRxRscns"), ("CISCO-RSCN-MIB", "rscnTxRscns"), ("CISCO-RSCN-MIB", "rscnRxSwRscns"), ("CISCO-RSCN-MIB", "rscnTxSwRscns"), ("CISCO-RSCN-MIB", "rscnScrRej"), ("CISCO-RSCN-MIB", "rscnRscnReqRej"), ("CISCO-RSCN-MIB", "rscnSwRscnReqRej"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnStatsGroup = rscnStatsGroup.setStatus('current')
rscnNotifyControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 3)).setObjects(("CISCO-RSCN-MIB", "rscnIlsRejReasonCode"), ("CISCO-RSCN-MIB", "rscnElsRejReasonCode"), ("CISCO-RSCN-MIB", "rscnIlsRejectReqNotifyEnable"), ("CISCO-RSCN-MIB", "rscnElsRejectReqNotifyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnNotifyControlGroup = rscnNotifyControlGroup.setStatus('current')
rscnNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 4)).setObjects(("CISCO-RSCN-MIB", "rscnIlsRejectReqNotify"), ("CISCO-RSCN-MIB", "rscnElsRejectReqNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnNotifyGroup = rscnNotifyGroup.setStatus('current')
rscnConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 5)).setObjects(("CISCO-RSCN-MIB", "rscnScrNumber"), ("CISCO-RSCN-MIB", "rscnScrRegType"), ("CISCO-RSCN-MIB", "rscnNotifyFcId"), ("CISCO-RSCN-MIB", "rscnMultiPidEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnConfigGroupRev1 = rscnConfigGroupRev1.setStatus('current')
rscnConfigGroupRev1Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 6)).setObjects(("CISCO-RSCN-MIB", "rscnEventTov"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnConfigGroupRev1Sup1 = rscnConfigGroupRev1Sup1.setStatus('current')
rscnRejectNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 7)).setObjects(("CISCO-RSCN-MIB", "rscnIlsRxRejectReqNotify"), ("CISCO-RSCN-MIB", "rscnElsRxRejectReqNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnRejectNotifyGroup = rscnRejectNotifyGroup.setStatus('current')
rscnNotifyControlGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 292, 2, 2, 8)).setObjects(("CISCO-RSCN-MIB", "rscnIlsRxRejectReqNotifyEnable"), ("CISCO-RSCN-MIB", "rscnElsRxRejectReqNotifyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rscnNotifyControlGroupSup1 = rscnNotifyControlGroupSup1.setStatus('current')
mibBuilder.exportSymbols("CISCO-RSCN-MIB", PYSNMP_MODULE_ID=ciscoRscnMIB, rscnElsRejectReqNotifyEnable=rscnElsRejectReqNotifyEnable, rscnStatsTable=rscnStatsTable, rscnConfiguration=rscnConfiguration, rscnEventTovTable=rscnEventTovTable, rscnIlsRejectReqNotify=rscnIlsRejectReqNotify, rscnIlsRxRejectReqNotifyEnable=rscnIlsRxRejectReqNotifyEnable, rscnMIBGroups=rscnMIBGroups, rscnMIBComplianceRev1=rscnMIBComplianceRev1, rscnScrRej=rscnScrRej, rscnScrTable=rscnScrTable, rscnMultiPidEnable=rscnMultiPidEnable, rscnRxScrs=rscnRxScrs, rscnConfigGroup=rscnConfigGroup, ciscoRscnMIB=ciscoRscnMIB, rscnMIBCompliances=rscnMIBCompliances, rscnNotifyControlGroupSup1=rscnNotifyControlGroupSup1, rscnStatsGroup=rscnStatsGroup, rscnScrFcId=rscnScrFcId, rscnNotification=rscnNotification, rscnRejectNotifyGroup=rscnRejectNotifyGroup, rscnScrRegType=rscnScrRegType, rscnSwRscnReqTotalRejects=rscnSwRscnReqTotalRejects, rscnRxSwRscns=rscnRxSwRscns, rscnTxSwRscns=rscnTxSwRscns, rscnNotifyFcId=rscnNotifyFcId, rscnInformation=rscnInformation, rscnMultiPidTable=rscnMultiPidTable, rscnElsRejectReqNotify=rscnElsRejectReqNotify, rscnNotifications=rscnNotifications, rscnStatsEntry=rscnStatsEntry, rscnElsRxRejectReqNotify=rscnElsRxRejectReqNotify, ciscoRscnMIBObjects=ciscoRscnMIBObjects, rscnStats=rscnStats, rscnRscnReqTotalRejects=rscnRscnReqTotalRejects, rscnSwRscnReqRej=rscnSwRscnReqRej, rscnNotifyControlGroup=rscnNotifyControlGroup, rscnConfigGroupRev1Sup1=rscnConfigGroupRev1Sup1, rscnIlsRejReasonCode=rscnIlsRejReasonCode, rscnMIBComplianceRev3=rscnMIBComplianceRev3, rscnScrEntry=rscnScrEntry, rscnIlsRejectReqNotifyEnable=rscnIlsRejectReqNotifyEnable, rscnElsRxRejectReqNotifyEnable=rscnElsRxRejectReqNotifyEnable, rscnConfigGroupRev1=rscnConfigGroupRev1, rscnEventTov=rscnEventTov, rscnIlsRxRejectReqNotify=rscnIlsRxRejectReqNotify, rscnMIBConformance=rscnMIBConformance, rscnRscnReqRej=rscnRscnReqRej, rscnEventTovEntry=rscnEventTovEntry, rscnScrTotalRejects=rscnScrTotalRejects, rscnElsRejReasonCode=rscnElsRejReasonCode, rscnTxRscns=rscnTxRscns, rscnMIBCompliance=rscnMIBCompliance, rscnMIBComplianceRev2=rscnMIBComplianceRev2, rscnRxRscns=rscnRxRscns, rscnScrNumber=rscnScrNumber, rscnNotifyGroup=rscnNotifyGroup, rscnMultiPidEntry=rscnMultiPidEntry)
