#
# PySNMP MIB module STN-VEI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-VEI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:03:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, Bits, iso, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, MibIdentifier, Integer32, Counter32, ModuleIdentity, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "Bits", "iso", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "MibIdentifier", "Integer32", "Counter32", "ModuleIdentity", "NotificationType", "IpAddress")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
stnNotification, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnNotification")
stnRouterVEI, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterVEI")
stnVei = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1))
if mibBuilder.loadTexts: stnVei.setLastUpdated('0004060000Z')
if mibBuilder.loadTexts: stnVei.setOrganization('Spring Tide Networks')
stnVeiObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1))
stnVeiL2Table = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1), )
if mibBuilder.loadTexts: stnVeiL2Table.setStatus('current')
stnVeiL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1), ).setIndexNames((0, "STN-VEI-MIB", "stnVeiL2IfIndex"))
if mibBuilder.loadTexts: stnVeiL2Entry.setStatus('current')
stnVeiL2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2IfIndex.setStatus('current')
stnVeiL2ViId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2ViId.setStatus('current')
stnVeiL2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2Name.setStatus('current')
stnVeiL2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("atmBridgeEnetV2", 1), ("atmBridgeEnet8023", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2Type.setStatus('current')
stnVeiL2MacTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2MacTtl.setStatus('current')
stnVeiL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2State.setStatus('current')
stnVeiL2RegisteredLowerLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2RegisteredLowerLinks.setStatus('current')
stnVeiL2ActiveLowerLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2ActiveLowerLinks.setStatus('current')
stnVeiL2NoFreeEndStations = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2NoFreeEndStations.setStatus('current')
stnVeiL2TxDestNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2TxDestNotFound.setStatus('current')
stnVeiL2TxArpRspDropNoEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2TxArpRspDropNoEndStation.setStatus('current')
stnVeiL2ActiveMultiCasts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2ActiveMultiCasts.setStatus('current')
stnVeiL2MultiCastsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2MultiCastsDrop.setStatus('current')
stnVeiLinkTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2), )
if mibBuilder.loadTexts: stnVeiLinkTable.setStatus('current')
stnVeiLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1), ).setIndexNames((0, "STN-VEI-MIB", "stnVeiLinkVeiIfIndex"), (0, "STN-VEI-MIB", "stnVeiLinkIfIndex"))
if mibBuilder.loadTexts: stnVeiLinkEntry.setStatus('current')
stnVeiLinkVeiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkVeiIfIndex.setStatus('current')
stnVeiLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkIfIndex.setStatus('current')
stnVeiLinkMaxEndStations = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMaxEndStations.setStatus('current')
stnVeiLinkCurrentEndStations = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkCurrentEndStations.setStatus('current')
stnVeiLinkLearnFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkLearnFailures.setStatus('current')
stnVeiLinkMacRecycledLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacRecycledLocal.setStatus('current')
stnVeiLinkMacRecycledGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacRecycledGlobal.setStatus('current')
stnVeiLinkArpRspDropSameIface = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkArpRspDropSameIface.setStatus('current')
stnVeiLinkEndStationMoved = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkEndStationMoved.setStatus('current')
stnVeiLinkPhysIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 10), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkPhysIfIndex.setStatus('current')
stnVeiLinkVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkVpi.setStatus('current')
stnVeiLinkVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkVci.setStatus('current')
stnVeiLinkMacTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3), )
if mibBuilder.loadTexts: stnVeiLinkMacTable.setStatus('current')
stnVeiLinkMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1), ).setIndexNames((0, "STN-VEI-MIB", "stnVeiLinkMacVeiIfIndex"), (0, "STN-VEI-MIB", "stnVeiLinkMacLinkIfIndex"), (0, "STN-VEI-MIB", "stnVeiLinkMacAddress"))
if mibBuilder.loadTexts: stnVeiLinkMacEntry.setStatus('current')
stnVeiLinkMacVeiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacVeiIfIndex.setStatus('current')
stnVeiLinkMacLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacLinkIfIndex.setStatus('current')
stnVeiLinkMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacAddress.setStatus('current')
stnVeiLinkMacAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacAge.setStatus('current')
stnVeiLinkMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("veiLinkMacLearned", 1), ("veiLinkMacStatic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacType.setStatus('current')
mibBuilder.exportSymbols("STN-VEI-MIB", stnVeiL2ViId=stnVeiL2ViId, stnVeiLinkMaxEndStations=stnVeiLinkMaxEndStations, stnVeiLinkMacTable=stnVeiLinkMacTable, stnVeiLinkVpi=stnVeiLinkVpi, stnVei=stnVei, stnVeiLinkIfIndex=stnVeiLinkIfIndex, stnVeiL2RegisteredLowerLinks=stnVeiL2RegisteredLowerLinks, stnVeiL2IfIndex=stnVeiL2IfIndex, stnVeiLinkMacType=stnVeiLinkMacType, stnVeiL2Entry=stnVeiL2Entry, stnVeiL2ActiveMultiCasts=stnVeiL2ActiveMultiCasts, stnVeiL2MacTtl=stnVeiL2MacTtl, stnVeiL2State=stnVeiL2State, stnVeiLinkArpRspDropSameIface=stnVeiLinkArpRspDropSameIface, stnVeiLinkEntry=stnVeiLinkEntry, stnVeiLinkMacEntry=stnVeiLinkMacEntry, stnVeiLinkLearnFailures=stnVeiLinkLearnFailures, stnVeiL2TxArpRspDropNoEndStation=stnVeiL2TxArpRspDropNoEndStation, stnVeiLinkMacVeiIfIndex=stnVeiLinkMacVeiIfIndex, stnVeiL2Type=stnVeiL2Type, stnVeiLinkVci=stnVeiLinkVci, stnVeiLinkMacLinkIfIndex=stnVeiLinkMacLinkIfIndex, stnVeiLinkEndStationMoved=stnVeiLinkEndStationMoved, PYSNMP_MODULE_ID=stnVei, stnVeiLinkCurrentEndStations=stnVeiLinkCurrentEndStations, stnVeiLinkPhysIfIndex=stnVeiLinkPhysIfIndex, stnVeiL2Name=stnVeiL2Name, stnVeiLinkMacRecycledLocal=stnVeiLinkMacRecycledLocal, stnVeiL2NoFreeEndStations=stnVeiL2NoFreeEndStations, stnVeiLinkMacAddress=stnVeiLinkMacAddress, stnVeiL2MultiCastsDrop=stnVeiL2MultiCastsDrop, stnVeiLinkMacAge=stnVeiLinkMacAge, stnVeiObjects=stnVeiObjects, stnVeiLinkMacRecycledGlobal=stnVeiLinkMacRecycledGlobal, stnVeiLinkTable=stnVeiLinkTable, stnVeiLinkVeiIfIndex=stnVeiLinkVeiIfIndex, stnVeiL2TxDestNotFound=stnVeiL2TxDestNotFound, stnVeiL2Table=stnVeiL2Table, stnVeiL2ActiveLowerLinks=stnVeiL2ActiveLowerLinks)
