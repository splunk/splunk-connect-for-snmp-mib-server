#
# PySNMP MIB module HH3C-DOT11-RRM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DOT11-RRM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
Hh3cDot11RadioType, Hh3cDot11RadioElementIndex, Hh3cDot11SSIDStringType, hh3cDot11APElementIndex, hh3cDot11, Hh3cDot11ChannelScopeType, Hh3cDot11RadioScopeType, Hh3cDot11ObjectIDType = mibBuilder.importSymbols("HH3C-DOT11-REF-MIB", "Hh3cDot11RadioType", "Hh3cDot11RadioElementIndex", "Hh3cDot11SSIDStringType", "hh3cDot11APElementIndex", "hh3cDot11", "Hh3cDot11ChannelScopeType", "Hh3cDot11RadioScopeType", "Hh3cDot11ObjectIDType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, Bits, Integer32, NotificationType, Counter32, iso, Gauge32, TimeTicks, ObjectIdentity, IpAddress, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "Bits", "Integer32", "NotificationType", "Counter32", "iso", "Gauge32", "TimeTicks", "ObjectIdentity", "IpAddress", "MibIdentifier", "Unsigned32")
DisplayString, RowStatus, TruthValue, DateAndTime, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "DateAndTime", "TextualConvention", "MacAddress")
hh3cDot11RRM = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8))
hh3cDot11RRM.setRevisions(('2010-09-25 18:00', '2010-02-23 18:00', '2009-08-01 20:00', '2009-05-07 20:00', '2009-04-17 20:00', '2008-07-14 14:29',))
if mibBuilder.loadTexts: hh3cDot11RRM.setLastUpdated('201009251800Z')
if mibBuilder.loadTexts: hh3cDot11RRM.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cDot11RRMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1))
hh3cDot11RRMGlobalCfgPara = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1))
hh3cDot11RRM11nMadtMaxMcs = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 76), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRM11nMadtMaxMcs.setStatus('current')
hh3cDot11RRM11nSuptMaxMcs = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 76)).clone(76)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRM11nSuptMaxMcs.setStatus('current')
hh3cDot11RRM11gProtect = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRM11gProtect.setStatus('current')
hh3cDot11RRM11aPwrConstrt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRM11aPwrConstrt.setStatus('current')
hh3cDot11RRM11aSpectrumManag = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRM11aSpectrumManag.setStatus('current')
hh3cDot11RRMAutoChlAvoid11h = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMAutoChlAvoid11h.setStatus('current')
hh3cDot11RRMScanChl = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("all", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMScanChl.setStatus('current')
hh3cDot11RRMScanRptIntvel = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120)).clone(10)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMScanRptIntvel.setStatus('current')
hh3cDot11APInterfNumThreshhd = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11APInterfNumThreshhd.setStatus('current')
hh3cDot11StaInterfNumThreshhd = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11StaInterfNumThreshhd.setStatus('current')
hh3cDot11RRMRadioCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2), )
if mibBuilder.loadTexts: hh3cDot11RRMRadioCfgTable.setStatus('current')
hh3cDot11RRMRadioCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMRadioType"))
if mibBuilder.loadTexts: hh3cDot11RRMRadioCfgEntry.setStatus('current')
hh3cDot11RRMRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 1), Hh3cDot11RadioType())
if mibBuilder.loadTexts: hh3cDot11RRMRadioType.setStatus('current')
hh3cDot11RRMCfgChlState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgChlState.setStatus('current')
hh3cDot11RRMCfgChlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selfDecisive", 1), ("userTriggered", 2))).clone('userTriggered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgChlMode.setStatus('current')
hh3cDot11RRMChlProntoRadioElmt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMChlProntoRadioElmt.setStatus('current')
hh3cDot11RRMCfgPwrState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgPwrState.setStatus('current')
hh3cDot11RRMCfgPwrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("selfDecisive", 1), ("userTriggered", 2))).clone('userTriggered')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgPwrMode.setStatus('current')
hh3cDot11RRMPwrProntoRadioElmt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMPwrProntoRadioElmt.setStatus('current')
hh3cDot11RRMCfgIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 8), Integer32().clone(8)).setUnits('minute').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgIntrvl.setStatus('current')
hh3cDot11RRMCfgIntrfThres = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40, 100)).clone(50)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgIntrfThres.setStatus('current')
hh3cDot11RRMCfgNoiseThres = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 127)).clone(-70)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgNoiseThres.setStatus('current')
hh3cDot11RRMCfgPERThres = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgPERThres.setStatus('current')
hh3cDot11RRMCfgToleranceFctr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 45)).clone(20)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgToleranceFctr.setStatus('current')
hh3cDot11RRMCfgAdjacencyFctr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCfgAdjacencyFctr.setStatus('current')
hh3cDot11RRMAPCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 3), )
if mibBuilder.loadTexts: hh3cDot11RRMAPCfgTable.setStatus('current')
hh3cDot11RRMAPCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 3, 1), ).setIndexNames((0, "HH3C-DOT11-REF-MIB", "hh3cDot11APElementIndex"))
if mibBuilder.loadTexts: hh3cDot11RRMAPCfgEntry.setStatus('current')
hh3cDot11RRMAPWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("monitor", 2), ("hybrid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMAPWorkMode.setStatus('current')
hh3cDot11RRMSDRadioGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4), )
if mibBuilder.loadTexts: hh3cDot11RRMSDRadioGroupTable.setStatus('current')
hh3cDot11RRMSDRadioGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMSDRadioGroupId"))
if mibBuilder.loadTexts: hh3cDot11RRMSDRadioGroupEntry.setStatus('current')
hh3cDot11RRMSDRadioGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cDot11RRMSDRadioGroupId.setStatus('current')
hh3cDot11RRMSDRadioGroupDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11RRMSDRadioGroupDesc.setStatus('current')
hh3cDot11RRMSDRdGrpChlHolddownTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4, 1, 3), Unsigned32()).setUnits('minute').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11RRMSDRdGrpChlHolddownTm.setStatus('current')
hh3cDot11RRMSDRdGrpPwrHolddownTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4, 1, 4), Unsigned32()).setUnits('minute').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11RRMSDRdGrpPwrHolddownTm.setStatus('current')
hh3cDot11RRMSDRdGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDot11RRMSDRdGroupRowStatus.setStatus('current')
hh3cDot11RRMAPCfg2Table = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5), )
if mibBuilder.loadTexts: hh3cDot11RRMAPCfg2Table.setStatus('current')
hh3cDot11RRMAPCfg2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMAPSerialID"))
if mibBuilder.loadTexts: hh3cDot11RRMAPCfg2Entry.setStatus('current')
hh3cDot11RRMAPSerialID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5, 1, 1), Hh3cDot11ObjectIDType())
if mibBuilder.loadTexts: hh3cDot11RRMAPSerialID.setStatus('current')
hh3cDot11RRMAPIntfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMAPIntfThreshold.setStatus('current')
hh3cDot11RRMStaIntfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMStaIntfThreshold.setStatus('current')
hh3cDot11RRMCoChlIntfTrapThhd = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5, 1, 4), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMCoChlIntfTrapThhd.setStatus('current')
hh3cDot11RRMAdjChlIntfTrapThhd = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 1, 5, 1, 5), Integer32()).setUnits('dbm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMAdjChlIntfTrapThhd.setStatus('current')
hh3cDot11RRMDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2))
hh3cDot11RRMChlRptTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1), )
if mibBuilder.loadTexts: hh3cDot11RRMChlRptTable.setStatus('current')
hh3cDot11RRMChlRptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMRadioIndex"), (0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMChlRptChlNum"))
if mibBuilder.loadTexts: hh3cDot11RRMChlRptEntry.setStatus('current')
hh3cDot11RRMRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 1), Hh3cDot11RadioElementIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11RRMRadioIndex.setStatus('current')
hh3cDot11RRMChlRptChlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptChlNum.setStatus('current')
hh3cDot11RRMChlRptChlType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primeChannel", 1), ("offChannel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptChlType.setStatus('current')
hh3cDot11RRMChlRptChlQlty = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("good", 1), ("bad", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptChlQlty.setStatus('current')
hh3cDot11RRMChlRptNbrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptNbrCnt.setStatus('current')
hh3cDot11RRMChlRptLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptLoad.setStatus('current')
hh3cDot11RRMChlRptUtlz = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptUtlz.setStatus('current')
hh3cDot11RRMChlRptIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptIntrf.setStatus('current')
hh3cDot11RRMChlRptPER = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptPER.setStatus('current')
hh3cDot11RRMChlRptRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptRetryRate.setStatus('current')
hh3cDot11RRMChlRptNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptNoise.setStatus('current')
hh3cDot11RRMChlRptRadarIndtcr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("detected", 1), ("notDetected", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11RRMChlRptRadarIndtcr.setStatus('current')
hh3cDot11RRMNbrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2), )
if mibBuilder.loadTexts: hh3cDot11RRMNbrInfoTable.setStatus('current')
hh3cDot11RRMNbrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMRadioIndex"), (0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RrmNbrBSSID"))
if mibBuilder.loadTexts: hh3cDot11RRMNbrInfoEntry.setStatus('current')
hh3cDot11RrmNbrBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11RrmNbrBSSID.setStatus('current')
hh3cDot11RrmNbrChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1, 2), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RrmNbrChl.setStatus('current')
hh3cDot11RRMNbrIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMNbrIntrf.setStatus('current')
hh3cDot11RrmNbrRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RrmNbrRSSI.setStatus('current')
hh3cDot11RrmNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("managed", 1), ("unmanaged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RrmNbrType.setStatus('current')
hh3cDot11RrmNbrSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 2, 1, 6), Hh3cDot11SSIDStringType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RrmNbrSSID.setStatus('current')
hh3cDot11RRMHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3), )
if mibBuilder.loadTexts: hh3cDot11RRMHistoryTable.setStatus('current')
hh3cDot11RRMHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMRadioIndex"), (0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMHistoryId"), (0, "HH3C-DOT11-RRM-MIB", "hh3cDot11RRMHistoryRecIndctr"))
if mibBuilder.loadTexts: hh3cDot11RRMHistoryEntry.setStatus('current')
hh3cDot11RRMHistoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11RRMHistoryId.setStatus('current')
hh3cDot11RRMHistoryRecIndctr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("before", 1), ("after", 2))))
if mibBuilder.loadTexts: hh3cDot11RRMHistoryRecIndctr.setStatus('current')
hh3cDot11RRMHistoryChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 3), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryChl.setStatus('current')
hh3cDot11RRMHistoryPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 4), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryPwr.setStatus('current')
hh3cDot11RRMHistoryLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryLoad.setStatus('current')
hh3cDot11RRMHistoryUtlz = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryUtlz.setStatus('current')
hh3cDot11RRMHistoryIntrf = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryIntrf.setStatus('current')
hh3cDot11RRMHistoryNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryNoise.setStatus('current')
hh3cDot11RRMHistoryPER = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryPER.setStatus('current')
hh3cDot11RRMHistoryRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryRetryRate.setStatus('current')
hh3cDot11RRMHistoryChgReason = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 11), Bits().clone(namedValues=NamedValues(("others", 0), ("coverage", 1), ("radar", 2), ("retransmission", 3), ("packetsDiscarded", 4), ("interference", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryChgReason.setStatus('current')
hh3cDot11RRMHistoryChgDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 2, 3, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11RRMHistoryChgDateTime.setStatus('current')
hh3cDot11RRMNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3))
hh3cDot11RRMChlQltyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 1))
hh3cDot11RRMChlQltyNtfPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 1, 0))
hh3cDot11RRMIntrfLimit = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 1, 0, 1)).setObjects(("HH3C-DOT11-RRM-MIB", "hh3cDot11RRMChlRptIntrf"))
if mibBuilder.loadTexts: hh3cDot11RRMIntrfLimit.setStatus('current')
hh3cDot11RRMPERLimit = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 1, 0, 2)).setObjects(("HH3C-DOT11-RRM-MIB", "hh3cDot11RRMChlRptPER"))
if mibBuilder.loadTexts: hh3cDot11RRMPERLimit.setStatus('current')
hh3cDot11RRMNoiseLimit = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 1, 0, 3)).setObjects(("HH3C-DOT11-RRM-MIB", "hh3cDot11RRMChlRptNoise"))
if mibBuilder.loadTexts: hh3cDot11RRMNoiseLimit.setStatus('current')
hh3cDot11RRMResChgNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 2))
hh3cDot11RRMResChgNtfPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 2, 0))
hh3cDot11RRMPowerChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 2, 0, 1)).setObjects(("HH3C-DOT11-RRM-MIB", "hh3cDot11RRMRadioIndex"), ("HH3C-DOT11-RRM-MIB", "hh3cDot11NewPower"), ("HH3C-DOT11-RRM-MIB", "hh3cDot11OldPower"))
if mibBuilder.loadTexts: hh3cDot11RRMPowerChange.setStatus('current')
hh3cDot11RRMNotificationsVar = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 3))
hh3cDot11NewPower = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 3, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11NewPower.setStatus('current')
hh3cDot11OldPower = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 3, 3, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11OldPower.setStatus('current')
hh3cDot11MonitorDetectedGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4))
hh3cDot11MonitorDetectedDevTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1), )
if mibBuilder.loadTexts: hh3cDot11MonitorDetectedDevTable.setStatus('current')
hh3cDot11MonitorDetectedDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1), ).setIndexNames((0, "HH3C-DOT11-RRM-MIB", "hh3cDot11MonitorDevMAC"), (0, "HH3C-DOT11-REF-MIB", "hh3cDot11APElementIndex"))
if mibBuilder.loadTexts: hh3cDot11MonitorDetectedDevEntry.setStatus('current')
hh3cDot11MonitorDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cDot11MonitorDevMAC.setStatus('current')
hh3cDot11MonitorDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("client", 1), ("ap", 2), ("adhoc", 3), ("wirelessBridge", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevType.setStatus('current')
hh3cDot11MonitorDevVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevVendor.setStatus('current')
hh3cDot11MonitorDevSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevSSID.setStatus('current')
hh3cDot11MonitorDevBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevBSSID.setStatus('current')
hh3cDot11MonitorDevChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 6), Hh3cDot11ChannelScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevChannel.setStatus('current')
hh3cDot11MonitorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 7), Hh3cDot11RadioScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorRadioId.setStatus('current')
hh3cDot11MonitorDevMaxRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 8), Integer32()).setUnits('dbm').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevMaxRSSI.setStatus('current')
hh3cDot11MonitorDevBeaconIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevBeaconIntvl.setStatus('current')
hh3cDot11MonitorDevFstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevFstDctTime.setStatus('current')
hh3cDot11MonitorDevLstDctTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevLstDctTime.setStatus('current')
hh3cDot11MonitorDevClear = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDot11MonitorDevClear.setStatus('current')
hh3cDot11MonitorDevSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 8, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MonitorDevSNR.setStatus('current')
mibBuilder.exportSymbols("HH3C-DOT11-RRM-MIB", hh3cDot11MonitorDevType=hh3cDot11MonitorDevType, hh3cDot11RRMIntrfLimit=hh3cDot11RRMIntrfLimit, hh3cDot11RRMSDRdGrpChlHolddownTm=hh3cDot11RRMSDRdGrpChlHolddownTm, hh3cDot11MonitorDevBSSID=hh3cDot11MonitorDevBSSID, hh3cDot11RRMChlRptNbrCnt=hh3cDot11RRMChlRptNbrCnt, hh3cDot11RRMScanChl=hh3cDot11RRMScanChl, hh3cDot11RRMHistoryChl=hh3cDot11RRMHistoryChl, hh3cDot11RRMNbrInfoTable=hh3cDot11RRMNbrInfoTable, hh3cDot11RRMNotificationsVar=hh3cDot11RRMNotificationsVar, hh3cDot11RrmNbrSSID=hh3cDot11RrmNbrSSID, hh3cDot11RRM11nMadtMaxMcs=hh3cDot11RRM11nMadtMaxMcs, hh3cDot11RrmNbrRSSI=hh3cDot11RrmNbrRSSI, hh3cDot11RRMRadioCfgTable=hh3cDot11RRMRadioCfgTable, hh3cDot11RRMGlobalCfgPara=hh3cDot11RRMGlobalCfgPara, hh3cDot11RrmNbrBSSID=hh3cDot11RrmNbrBSSID, hh3cDot11RRMChlRptChlQlty=hh3cDot11RRMChlRptChlQlty, hh3cDot11RRMPowerChange=hh3cDot11RRMPowerChange, hh3cDot11RRMHistoryPER=hh3cDot11RRMHistoryPER, hh3cDot11RRMNoiseLimit=hh3cDot11RRMNoiseLimit, hh3cDot11RRMHistoryChgReason=hh3cDot11RRMHistoryChgReason, hh3cDot11RRMRadioCfgEntry=hh3cDot11RRMRadioCfgEntry, hh3cDot11RRMChlRptRadarIndtcr=hh3cDot11RRMChlRptRadarIndtcr, hh3cDot11RRMNbrIntrf=hh3cDot11RRMNbrIntrf, hh3cDot11RRMCfgPwrMode=hh3cDot11RRMCfgPwrMode, hh3cDot11RRMChlRptUtlz=hh3cDot11RRMChlRptUtlz, hh3cDot11RRMChlRptNoise=hh3cDot11RRMChlRptNoise, hh3cDot11RRMHistoryPwr=hh3cDot11RRMHistoryPwr, hh3cDot11RRMChlQltyNtfPrefix=hh3cDot11RRMChlQltyNtfPrefix, hh3cDot11RRMSDRadioGroupTable=hh3cDot11RRMSDRadioGroupTable, hh3cDot11RRMResChgNtfPrefix=hh3cDot11RRMResChgNtfPrefix, hh3cDot11RRMHistoryNoise=hh3cDot11RRMHistoryNoise, hh3cDot11RRMChlRptRetryRate=hh3cDot11RRMChlRptRetryRate, hh3cDot11RRMHistoryEntry=hh3cDot11RRMHistoryEntry, hh3cDot11RRMChlProntoRadioElmt=hh3cDot11RRMChlProntoRadioElmt, hh3cDot11RRMAPCfg2Entry=hh3cDot11RRMAPCfg2Entry, hh3cDot11RRMSDRdGroupRowStatus=hh3cDot11RRMSDRdGroupRowStatus, hh3cDot11RRMAPIntfThreshold=hh3cDot11RRMAPIntfThreshold, hh3cDot11RRMNbrInfoEntry=hh3cDot11RRMNbrInfoEntry, hh3cDot11RrmNbrType=hh3cDot11RrmNbrType, hh3cDot11RRMRadioType=hh3cDot11RRMRadioType, hh3cDot11RRMAPWorkMode=hh3cDot11RRMAPWorkMode, hh3cDot11MonitorRadioId=hh3cDot11MonitorRadioId, hh3cDot11MonitorDevVendor=hh3cDot11MonitorDevVendor, hh3cDot11MonitorDevLstDctTime=hh3cDot11MonitorDevLstDctTime, PYSNMP_MODULE_ID=hh3cDot11RRM, hh3cDot11MonitorDevSNR=hh3cDot11MonitorDevSNR, hh3cDot11RRMDetectGroup=hh3cDot11RRMDetectGroup, hh3cDot11RRMResChgNotifications=hh3cDot11RRMResChgNotifications, hh3cDot11MonitorDetectedDevTable=hh3cDot11MonitorDetectedDevTable, hh3cDot11RRMChlRptChlType=hh3cDot11RRMChlRptChlType, hh3cDot11APInterfNumThreshhd=hh3cDot11APInterfNumThreshhd, hh3cDot11RRMAdjChlIntfTrapThhd=hh3cDot11RRMAdjChlIntfTrapThhd, hh3cDot11RRMHistoryTable=hh3cDot11RRMHistoryTable, hh3cDot11MonitorDevChannel=hh3cDot11MonitorDevChannel, hh3cDot11RRMAPCfgTable=hh3cDot11RRMAPCfgTable, hh3cDot11RRMChlRptIntrf=hh3cDot11RRMChlRptIntrf, hh3cDot11RRMStaIntfThreshold=hh3cDot11RRMStaIntfThreshold, hh3cDot11RRMCfgChlState=hh3cDot11RRMCfgChlState, hh3cDot11RRMHistoryUtlz=hh3cDot11RRMHistoryUtlz, hh3cDot11MonitorDevFstDctTime=hh3cDot11MonitorDevFstDctTime, hh3cDot11OldPower=hh3cDot11OldPower, hh3cDot11RRMCfgIntrfThres=hh3cDot11RRMCfgIntrfThres, hh3cDot11RRMNotifyGroup=hh3cDot11RRMNotifyGroup, hh3cDot11MonitorDevClear=hh3cDot11MonitorDevClear, hh3cDot11RRMCfgChlMode=hh3cDot11RRMCfgChlMode, hh3cDot11RRMCfgPwrState=hh3cDot11RRMCfgPwrState, hh3cDot11RRMHistoryRetryRate=hh3cDot11RRMHistoryRetryRate, hh3cDot11RRM11nSuptMaxMcs=hh3cDot11RRM11nSuptMaxMcs, hh3cDot11RRMAPSerialID=hh3cDot11RRMAPSerialID, hh3cDot11RRMCoChlIntfTrapThhd=hh3cDot11RRMCoChlIntfTrapThhd, hh3cDot11RRMSDRadioGroupId=hh3cDot11RRMSDRadioGroupId, hh3cDot11RRM11aSpectrumManag=hh3cDot11RRM11aSpectrumManag, hh3cDot11RRMHistoryId=hh3cDot11RRMHistoryId, hh3cDot11RRMChlQltyNotifications=hh3cDot11RRMChlQltyNotifications, hh3cDot11RRMCfgNoiseThres=hh3cDot11RRMCfgNoiseThres, hh3cDot11RRMHistoryRecIndctr=hh3cDot11RRMHistoryRecIndctr, hh3cDot11RRMChlRptPER=hh3cDot11RRMChlRptPER, hh3cDot11RRMSDRadioGroupEntry=hh3cDot11RRMSDRadioGroupEntry, hh3cDot11RRMChlRptChlNum=hh3cDot11RRMChlRptChlNum, hh3cDot11RRMHistoryLoad=hh3cDot11RRMHistoryLoad, hh3cDot11RRMPERLimit=hh3cDot11RRMPERLimit, hh3cDot11MonitorDetectedGroup=hh3cDot11MonitorDetectedGroup, hh3cDot11RRMChlRptEntry=hh3cDot11RRMChlRptEntry, hh3cDot11RRMPwrProntoRadioElmt=hh3cDot11RRMPwrProntoRadioElmt, hh3cDot11RRMHistoryIntrf=hh3cDot11RRMHistoryIntrf, hh3cDot11RRMCfgAdjacencyFctr=hh3cDot11RRMCfgAdjacencyFctr, hh3cDot11RRMChlRptTable=hh3cDot11RRMChlRptTable, hh3cDot11RRM11gProtect=hh3cDot11RRM11gProtect, hh3cDot11MonitorDevMAC=hh3cDot11MonitorDevMAC, hh3cDot11RRM11aPwrConstrt=hh3cDot11RRM11aPwrConstrt, hh3cDot11NewPower=hh3cDot11NewPower, hh3cDot11RRMSDRdGrpPwrHolddownTm=hh3cDot11RRMSDRdGrpPwrHolddownTm, hh3cDot11MonitorDevSSID=hh3cDot11MonitorDevSSID, hh3cDot11RRMConfigGroup=hh3cDot11RRMConfigGroup, hh3cDot11RRMScanRptIntvel=hh3cDot11RRMScanRptIntvel, hh3cDot11StaInterfNumThreshhd=hh3cDot11StaInterfNumThreshhd, hh3cDot11RRMAPCfg2Table=hh3cDot11RRMAPCfg2Table, hh3cDot11MonitorDevMaxRSSI=hh3cDot11MonitorDevMaxRSSI, hh3cDot11RRM=hh3cDot11RRM, hh3cDot11RRMAutoChlAvoid11h=hh3cDot11RRMAutoChlAvoid11h, hh3cDot11RrmNbrChl=hh3cDot11RrmNbrChl, hh3cDot11RRMAPCfgEntry=hh3cDot11RRMAPCfgEntry, hh3cDot11MonitorDevBeaconIntvl=hh3cDot11MonitorDevBeaconIntvl, hh3cDot11RRMCfgToleranceFctr=hh3cDot11RRMCfgToleranceFctr, hh3cDot11RRMCfgPERThres=hh3cDot11RRMCfgPERThres, hh3cDot11RRMRadioIndex=hh3cDot11RRMRadioIndex, hh3cDot11RRMCfgIntrvl=hh3cDot11RRMCfgIntrvl, hh3cDot11MonitorDetectedDevEntry=hh3cDot11MonitorDetectedDevEntry, hh3cDot11RRMChlRptLoad=hh3cDot11RRMChlRptLoad, hh3cDot11RRMSDRadioGroupDesc=hh3cDot11RRMSDRadioGroupDesc, hh3cDot11RRMHistoryChgDateTime=hh3cDot11RRMHistoryChgDateTime)
