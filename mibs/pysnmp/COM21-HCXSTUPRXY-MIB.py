#
# PySNMP MIB module COM21-HCXSTUPRXY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COM21-HCXSTUPRXY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
com21, com21Traps, com21Hcx, com21Stu = mibBuilder.importSymbols("COM21-HCX-MIB", "com21", "com21Traps", "com21Hcx", "com21Stu")
hcxEventLogTime, hcxAlmSeverity = mibBuilder.importSymbols("COM21-HCXALM-MIB", "hcxEventLogTime", "hcxAlmSeverity")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Gauge32, IpAddress, iso, TimeTicks, Integer32, Counter32, NotificationType, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "IpAddress", "iso", "TimeTicks", "Integer32", "Counter32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Counter64")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
com21StuPrxy = ModuleIdentity((1, 3, 6, 1, 4, 1, 1141, 3, 1))
if mibBuilder.loadTexts: com21StuPrxy.setLastUpdated('9701080000Z')
if mibBuilder.loadTexts: com21StuPrxy.setOrganization('Com21, Inc.')
com21StuControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 2))
com21StuPhysicalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 3))
com21StuAlarmGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 4))
com21StuEtherConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 5))
com21StuEtherTypeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 6))
com21StuFiltIpMultiGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 7))
com21StuEtherMacGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 8))
com21StuEtherStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 9))
com21StuStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 10))
com21StuQStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 11))
com21StuAlarmSevGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 12))
com21StuCodeImageGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 13))
com21StuVoiceChanStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 3, 14))
class FrequencyKhz(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 800000)

class UpstrmFreqKhz(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(5000, 40000)

class EpochTime(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class Offset(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16383)

class AlarmSeverity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("clear", 1), ("warning", 2), ("minor", 3), ("major", 4), ("critical", 5))

class Com21RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("active", 1), ("create", 2), ("destroy", 3), ("deactive", 4))

com21StuControlTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1), )
if mibBuilder.loadTexts: com21StuControlTable.setStatus('current')
com21StuControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuCtrlMacAddress"))
if mibBuilder.loadTexts: com21StuControlEntry.setStatus('current')
stuCtrlMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCtrlMacAddress.setStatus('current')
stuUserText = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuUserText.setStatus('current')
stuSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuSerialNumber.setStatus('current')
stuBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuBoardRevision.setStatus('current')
stuUnitRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuUnitRevision.setStatus('current')
stuTunerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuTunerRevision.setStatus('current')
stuModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuModelName.setStatus('current')
stuUnitManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuUnitManufacturer.setStatus('current')
stuDesKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bit56key", 1), ("bit40key", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuDesKeySize.setStatus('current')
stuMibRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuMibRevision.setStatus('current')
stuEpochTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 11), EpochTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEpochTime.setStatus('current')
stuRestartAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuRestartAction.setStatus('current')
stuPrevTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevTestResult.setStatus('current')
stuPrevTestFailCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, -1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevTestFailCode.setStatus('current')
stuOperationState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("operational", 1), ("deauthorized", 2), ("offline", 3), ("upstreamTest", 4), ("etherLoopback", 5), ("downloading", 6), ("failedRanging", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuOperationState.setStatus('current')
stuOperationStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 110)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuCtrlMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuOperationState"))
if mibBuilder.loadTexts: stuOperationStateChange.setStatus('current')
stuAimModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("debugModule", 2), ("teleReturn", 3), ("telephony1", 4), ("telephony2", 5), ("wirelessEthernet", 6), ("atm", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAimModuleId.setStatus('current')
stuMaceFail = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 119)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuCtrlMacAddress"))
if mibBuilder.loadTexts: stuMaceFail.setStatus('current')
stuUpstrmTestFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 17), UpstrmFreqKhz()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuUpstrmTestFreq.setStatus('current')
stuInbPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbInstalled", 1), ("noInbSupport", 2), ("inbReady", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuInbPresent.setStatus('current')
stuInbContToneEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuInbContToneEnable.setStatus('current')
stuLastRestartCause = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("hcxDirected", 2), ("pingFail", 3), ("imageRefresh", 4), ("lof", 5), ("fault", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuLastRestartCause.setStatus('current')
stuUpstrmPingCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuUpstrmPingCntrl.setStatus('current')
stuUpstrmTestTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuUpstrmTestTimeout.setStatus('current')
stuDnstrmAltFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 24), FrequencyKhz()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuDnstrmAltFreq.setStatus('current')
stuAsicRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAsicRevision.setStatus('current')
stuVoiceAimLpBk = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("stuLpBk", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuVoiceAimLpBk.setStatus('current')
stuVoiceAimPort1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onHook", 1), ("offHook", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceAimPort1Status.setStatus('current')
stuVoiceAimPort2Status = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onHook", 1), ("offHook", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceAimPort2Status.setStatus('current')
com21StuPhysicalTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1), )
if mibBuilder.loadTexts: com21StuPhysicalTable.setStatus('current')
com21StuPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuPhyMacAddress"))
if mibBuilder.loadTexts: com21StuPhysicalEntry.setStatus('current')
stuPhyMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPhyMacAddress.setStatus('current')
stuXmitFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 2), UpstrmFreqKhz()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuXmitFrequency.setStatus('current')
stuXmitFeqChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 111)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuPhyMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuXmitFrequency"))
if mibBuilder.loadTexts: stuXmitFeqChange.setStatus('current')
stuRecvFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 3), FrequencyKhz()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuRecvFrequency.setStatus('current')
stuRecvRfSrEstimate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuRecvRfSrEstimate.setStatus('current')
stuRecvRfSigLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuRecvRfSigLevel.setStatus('current')
stuOutOfSpecRFCond = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 117)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuPhyMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuRecvRfSigLevel"))
if mibBuilder.loadTexts: stuOutOfSpecRFCond.setStatus('current')
stuXmitOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 6), Offset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuXmitOffset.setStatus('current')
stuXmitDacVRef = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuXmitDacVRef.setStatus('current')
stuRecvFreqDrift = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-250, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuRecvFreqDrift.setStatus('current')
com21StuAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 4, 1), )
if mibBuilder.loadTexts: com21StuAlarmTable.setStatus('current')
com21StuAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 4, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuAlmMacAddress"), (0, "COM21-HCXSTUPRXY-MIB", "stuAlmTime"))
if mibBuilder.loadTexts: com21StuAlarmEntry.setStatus('current')
stuAlmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 4, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAlmMacAddress.setStatus('current')
stuAlmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 4, 1, 1, 2), EpochTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAlmTime.setStatus('current')
stuAlmTrapId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAlmTrapId.setStatus('current')
stuAlmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 4, 1, 1, 4), AlarmSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAlmSeverity.setStatus('current')
com21StuAlarmSevTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1), )
if mibBuilder.loadTexts: com21StuAlarmSevTable.setStatus('current')
com21StuAlarmSevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuAlmSevMacAddress"))
if mibBuilder.loadTexts: com21StuAlarmSevEntry.setStatus('current')
stuAlmSevMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAlmSevMacAddress.setStatus('current')
stuAlmSevCrcThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1, 2), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAlmSevCrcThres.setStatus('current')
stuAlmSevTeiThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1, 3), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAlmSevTeiThres.setStatus('current')
stuAlmSevHecThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1, 4), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAlmSevHecThres.setStatus('current')
stuAlmSevEsThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1, 5), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAlmSevEsThres.setStatus('current')
stuAlmSevFecThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 12, 1, 1, 6), AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAlmSevFecThres.setStatus('current')
com21StuEtherConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1), )
if mibBuilder.loadTexts: com21StuEtherConfigTable.setStatus('current')
com21StuEtherConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuEthMacAddress"))
if mibBuilder.loadTexts: com21StuEtherConfigEntry.setStatus('current')
stuEthMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuEthMacAddress.setStatus('current')
stuEtherFiltFlushAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("flushMac", 2), ("flushEtherType", 3), ("flushIp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherFiltFlushAction.setStatus('current')
stuEtherForwArpOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherForwArpOnly.setStatus('current')
stuEtherMacFiltAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherMacFiltAge.setStatus('current')
stuEtherBCastRateEn = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherBCastRateEn.setStatus('current')
stuEtherBCastRateCo = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherBCastRateCo.setStatus('current')
stuEtherStickyBitCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherStickyBitCtrl.setStatus('current')
stuEther8021QEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEther8021QEnable.setStatus('current')
stuEtherNonSnapRej = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherNonSnapRej.setStatus('current')
stuEtherIgmpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherIgmpEnable.setStatus('current')
stuEtherNonIpMultiEn = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherNonIpMultiEn.setStatus('current')
stuEtherBcmpOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherBcmpOnly.setStatus('current')
stuEtherIgmpSnoopEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherIgmpSnoopEnable.setStatus('current')
com21StuEtherTypeTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 6, 1), )
if mibBuilder.loadTexts: com21StuEtherTypeTable.setStatus('current')
com21StuFiltEthTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 6, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuFiltEtherMacAddr"), (0, "COM21-HCXSTUPRXY-MIB", "stuFiltEtherType"))
if mibBuilder.loadTexts: com21StuFiltEthTypeEntry.setStatus('current')
stuFiltEtherMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 6, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuFiltEtherMacAddr.setStatus('current')
stuFiltEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuFiltEtherType.setStatus('current')
stuFiltEtherStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 6, 1, 1, 3), Com21RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stuFiltEtherStatus.setStatus('current')
com21StuFiltIpMultiTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 7, 1), )
if mibBuilder.loadTexts: com21StuFiltIpMultiTable.setStatus('current')
com21StuFiltIpMultiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 7, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuFiltIpMacAddr"), (0, "COM21-HCXSTUPRXY-MIB", "stuFiltIpMultiAddr"))
if mibBuilder.loadTexts: com21StuFiltIpMultiEntry.setStatus('current')
stuFiltIpMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 7, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuFiltIpMacAddr.setStatus('current')
stuFiltIpMultiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 7, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuFiltIpMultiAddr.setStatus('current')
stuFiltIpMultiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 7, 1, 1, 3), Com21RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stuFiltIpMultiStatus.setStatus('current')
stuFiltIpDirectCntrl = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("upstreamOnly", 1), ("downstreamOnly", 2), ("bothDirections", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuFiltIpDirectCntrl.setStatus('current')
com21StuEtherMacTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 8, 1), )
if mibBuilder.loadTexts: com21StuEtherMacTable.setStatus('current')
com21StuEtherMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 8, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuEtherStuMac"), (0, "COM21-HCXSTUPRXY-MIB", "stuEtherMacAddr"))
if mibBuilder.loadTexts: com21StuEtherMacEntry.setStatus('current')
stuEtherStuMac = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 8, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuEtherStuMac.setStatus('current')
stuEtherMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 8, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuEtherMacAddr.setStatus('current')
stuEtherMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("learned", 1), ("processor", 2), ("upstream", 3), ("reject", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherMacType.setStatus('current')
stuEtherMacStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 8, 1, 1, 4), Com21RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: stuEtherMacStatus.setStatus('current')
com21StuEtherStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1), )
if mibBuilder.loadTexts: com21StuEtherStatsTable.setStatus('current')
com21StuEtherStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuEthStatsMacAddr"))
if mibBuilder.loadTexts: com21StuEtherStatsEntry.setStatus('current')
stuEthStatsMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuEthStatsMacAddr.setStatus('current')
stuCurrEtherRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherRunts.setStatus('current')
stuCurrEtherCollitns = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherCollitns.setStatus('current')
stuCurrEtherFramErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherFramErrs.setStatus('current')
stuCurrEtherCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherCrcErrs.setStatus('current')
stuCurrEtherCrcThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuCurrEtherCrcThres.setStatus('current')
stuEtherCrcThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 112)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuEthStatsMacAddr"), ("COM21-HCXSTUPRXY-MIB", "stuCurrEtherCrcErrs"), ("COM21-HCXSTUPRXY-MIB", "stuCurrEtherCrcThres"))
if mibBuilder.loadTexts: stuEtherCrcThres.setStatus('current')
stuCurrEtherTxUnder = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherTxUnder.setStatus('current')
stuCurrEtherRxOver = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherRxOver.setStatus('current')
stuCurrEtherDropFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCurrEtherDropFrms.setStatus('current')
stuPrevEtherRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherRunts.setStatus('current')
stuPrevEtherCollitns = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherCollitns.setStatus('current')
stuPrevEtherFramErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherFramErrs.setStatus('current')
stuPrevEtherCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherCrcErrs.setStatus('current')
stuPrevEtherTxUnder = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherTxUnder.setStatus('current')
stuPrevEtherRxOver = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherRxOver.setStatus('current')
stuPrevEtherDropFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuPrevEtherDropFrms.setStatus('current')
stuEtherConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unint", 1), ("is", 2), ("oos", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuEtherConnState.setStatus('current')
stuEtherClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 9, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuEtherClearStats.setStatus('current')
com21StuStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1), )
if mibBuilder.loadTexts: com21StuStatsTable.setStatus('current')
com21StuStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuStatsMacAddress"))
if mibBuilder.loadTexts: com21StuStatsEntry.setStatus('current')
stuStatsMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsMacAddress.setStatus('current')
stuStatsCurrAtmTei = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsCurrAtmTei.setStatus('current')
stuAtmTeiThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAtmTeiThreshold.setStatus('current')
stuAtmTeiThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 113)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuStatsMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuStatsCurrAtmTei"), ("COM21-HCXSTUPRXY-MIB", "stuAtmTeiThreshold"))
if mibBuilder.loadTexts: stuAtmTeiThres.setStatus('current')
stuStatsCurrAtmHec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsCurrAtmHec.setStatus('current')
stuAtmHecThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAtmHecThreshold.setStatus('current')
stuAtmHecThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 114)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuStatsMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuStatsCurrAtmHec"), ("COM21-HCXSTUPRXY-MIB", "stuAtmHecThreshold"))
if mibBuilder.loadTexts: stuAtmHecThres.setStatus('current')
stuStatsCurrESMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsCurrESMin.setStatus('current')
stuESMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuESMinThreshold.setStatus('current')
stuESMinThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 115)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuStatsMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuStatsCurrESMin"), ("COM21-HCXSTUPRXY-MIB", "stuESMinThreshold"))
if mibBuilder.loadTexts: stuESMinThres.setStatus('current')
stuStatsCurrFecCorrect = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsCurrFecCorrect.setStatus('current')
stuFecCorrectThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuFecCorrectThreshold.setStatus('current')
stuFecCorrectThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 116)).setObjects(("COM21-HCXSTUPRXY-MIB", "stuAlmSeverity"), ("COM21-HCXSTUPRXY-MIB", "stuAlmTime"), ("COM21-HCXSTUPRXY-MIB", "stuStatsMacAddress"), ("COM21-HCXSTUPRXY-MIB", "stuStatsCurrFecCorrect"), ("COM21-HCXSTUPRXY-MIB", "stuFecCorrectThreshold"))
if mibBuilder.loadTexts: stuFecCorrectThres.setStatus('current')
stuStatsCurrUASMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsCurrUASMin.setStatus('current')
stuStatsPrevAtmTei = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsPrevAtmTei.setStatus('current')
stuStatsPrevAtmHec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsPrevAtmHec.setStatus('current')
stuStatsPrevESMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsPrevESMin.setStatus('current')
stuStatsPrevFecCorrect = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsPrevFecCorrect.setStatus('current')
stuStatsPrevUASMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuStatsPrevUASMin.setStatus('current')
stuStatsClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 10, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuStatsClearStats.setStatus('current')
com21StuQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1), )
if mibBuilder.loadTexts: com21StuQStatsTable.setStatus('current')
com21StuQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuAtmStuMacAddr"), (0, "COM21-HCXSTUPRXY-MIB", "stuAtmStuQNo"))
if mibBuilder.loadTexts: com21StuQStatsEntry.setStatus('current')
stuAtmStuMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStuMacAddr.setStatus('current')
stuAtmStuQNo = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStuQNo.setStatus('current')
stuAtmStatsCurrMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStatsCurrMinRx.setStatus('current')
stuAtmStatsCurrMinRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStatsCurrMinRxDropped.setStatus('current')
stuAtmStatsCurrMinCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStatsCurrMinCRCErrors.setStatus('current')
stuAtmStatsPrevMinRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStatsPrevMinRx.setStatus('current')
stuAtmStatsPrevMinRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStatsPrevMinRxDropped.setStatus('current')
stuAtmStatsPrevMinCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuAtmStatsPrevMinCRCErrors.setStatus('current')
stuAtmStatsClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuAtmStatsClearStats.setStatus('current')
com21StuCodeImageTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1), )
if mibBuilder.loadTexts: com21StuCodeImageTable.setStatus('current')
com21StuCodeImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuCodeStuMacAddr"), (0, "COM21-HCXSTUPRXY-MIB", "stuCodeImageIndex"))
if mibBuilder.loadTexts: com21StuCodeImageEntry.setStatus('current')
stuCodeStuMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeStuMacAddr.setStatus('current')
stuCodeImageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("vxWorksImage", 1), ("applicationStu", 2), ("downloadImage", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeImageIndex.setStatus('current')
stuCodeImageType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("stuBoot", 1), ("reserved1", 2), ("stuNewapp", 3), ("stuDnld", 4), ("updateApp", 5), ("reserved2", 6), ("reserved3", 7), ("reserved4", 8), ("updateBoth", 9), ("reserved5", 10), ("vxWorks", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeImageType.setStatus('current')
stuCodeImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeImageVersion.setStatus('current')
stuCodeImageBuildDir = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(80, 80)).setFixedLength(80)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeImageBuildDir.setStatus('current')
stuCodeImageDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeImageDate.setStatus('current')
stuCodeImageTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 13, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuCodeImageTime.setStatus('current')
com21StuVoiceChanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1), )
if mibBuilder.loadTexts: com21StuVoiceChanStatsTable.setStatus('current')
com21StuVoiceChanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1), ).setIndexNames((0, "COM21-HCXSTUPRXY-MIB", "stuVoiceChanStatsMacAddr"), (0, "COM21-HCXSTUPRXY-MIB", "stuVoiceChanStatsNum"))
if mibBuilder.loadTexts: com21StuVoiceChanStatsEntry.setStatus('current')
stuVoiceChanStatsMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsMacAddr.setStatus('current')
stuVoiceChanStatsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsNum.setStatus('current')
stuVoiceChanStatsCurrLostCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrLostCellCnt.setStatus('current')
stuVoiceChanStatsCurrDrpdCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrDrpdCellCnt.setStatus('current')
stuVoiceChanStatsCurrCrc3ErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrCrc3ErrCnt.setStatus('current')
stuVoiceChanStatsCurrSetUpFailCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrSetUpFailCnt.setStatus('current')
stuVoiceChanStatsCurrTxVoiceCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrTxVoiceCellCnt.setStatus('current')
stuVoiceChanStatsCurrRxVoiceCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrRxVoiceCellCnt.setStatus('current')
stuVoiceChanStatsCurrTxOamCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrTxOamCellCnt.setStatus('current')
stuVoiceChanStatsCurrRxOamCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsCurrRxOamCellCnt.setStatus('current')
stuVoiceChanStatsPrevLostCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevLostCellCnt.setStatus('current')
stuVoiceChanStatsPrevDrpdCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevDrpdCellCnt.setStatus('current')
stuVoiceChanStatsPrevCrc3ErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevCrc3ErrCnt.setStatus('current')
stuVoiceChanStatsPrevSetUpFailCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevSetUpFailCnt.setStatus('current')
stuVoiceChanStatsPrevTxVoiceCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevTxVoiceCellCnt.setStatus('current')
stuVoiceChanStatsPrevRxVoiceCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevRxVoiceCellCnt.setStatus('current')
stuVoiceChanStatsPrevTxOamCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevTxOamCellCnt.setStatus('current')
stuVoiceChanStatsPrevRxOamCellCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuVoiceChanStatsPrevRxOamCellCnt.setStatus('current')
stuVoiceChanStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 3, 14, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stuVoiceChanStatsClear.setStatus('current')
mibBuilder.exportSymbols("COM21-HCXSTUPRXY-MIB", stuCtrlMacAddress=stuCtrlMacAddress, com21StuAlarmGroup=com21StuAlarmGroup, stuEtherIgmpSnoopEnable=stuEtherIgmpSnoopEnable, com21StuEtherMacEntry=com21StuEtherMacEntry, stuPrevTestFailCode=stuPrevTestFailCode, stuXmitOffset=stuXmitOffset, com21StuVoiceChanStatsTable=com21StuVoiceChanStatsTable, stuOperationStateChange=stuOperationStateChange, com21StuFiltEthTypeEntry=com21StuFiltEthTypeEntry, stuAtmHecThreshold=stuAtmHecThreshold, stuVoiceChanStatsPrevLostCellCnt=stuVoiceChanStatsPrevLostCellCnt, stuStatsCurrFecCorrect=stuStatsCurrFecCorrect, com21StuPhysicalTable=com21StuPhysicalTable, stuEtherBcmpOnly=stuEtherBcmpOnly, stuAsicRevision=stuAsicRevision, stuStatsPrevUASMin=stuStatsPrevUASMin, stuStatsCurrESMin=stuStatsCurrESMin, stuEtherNonSnapRej=stuEtherNonSnapRej, stuVoiceChanStatsCurrTxVoiceCellCnt=stuVoiceChanStatsCurrTxVoiceCellCnt, stuEtherNonIpMultiEn=stuEtherNonIpMultiEn, com21StuAlarmSevGroup=com21StuAlarmSevGroup, stuRestartAction=stuRestartAction, stuUserText=stuUserText, com21StuStatsTable=com21StuStatsTable, stuEtherClearStats=stuEtherClearStats, com21StuQStatsTable=com21StuQStatsTable, stuVoiceChanStatsCurrRxVoiceCellCnt=stuVoiceChanStatsCurrRxVoiceCellCnt, stuVoiceChanStatsPrevRxOamCellCnt=stuVoiceChanStatsPrevRxOamCellCnt, stuOperationState=stuOperationState, stuAtmHecThres=stuAtmHecThres, stuVoiceChanStatsPrevTxOamCellCnt=stuVoiceChanStatsPrevTxOamCellCnt, stuPrevEtherDropFrms=stuPrevEtherDropFrms, stuEtherBCastRateCo=stuEtherBCastRateCo, com21StuAlarmTable=com21StuAlarmTable, stuUnitRevision=stuUnitRevision, com21StuEtherConfigEntry=com21StuEtherConfigEntry, com21StuEtherTypeTable=com21StuEtherTypeTable, stuVoiceChanStatsPrevCrc3ErrCnt=stuVoiceChanStatsPrevCrc3ErrCnt, stuPrevEtherCrcErrs=stuPrevEtherCrcErrs, com21StuAlarmSevTable=com21StuAlarmSevTable, stuEther8021QEnable=stuEther8021QEnable, stuStatsCurrUASMin=stuStatsCurrUASMin, stuModelName=stuModelName, stuVoiceAimPort2Status=stuVoiceAimPort2Status, stuAimModuleId=stuAimModuleId, stuCurrEtherCrcThres=stuCurrEtherCrcThres, stuInbPresent=stuInbPresent, Com21RowStatus=Com21RowStatus, stuCodeImageBuildDir=stuCodeImageBuildDir, stuPrevEtherFramErrs=stuPrevEtherFramErrs, stuCodeImageVersion=stuCodeImageVersion, stuPrevTestResult=stuPrevTestResult, stuDnstrmAltFreq=stuDnstrmAltFreq, stuEthMacAddress=stuEthMacAddress, stuEtherMacType=stuEtherMacType, stuPrevEtherRxOver=stuPrevEtherRxOver, com21StuStatsEntry=com21StuStatsEntry, stuCurrEtherCollitns=stuCurrEtherCollitns, stuRecvRfSrEstimate=stuRecvRfSrEstimate, AlarmSeverity=AlarmSeverity, stuAtmStatsPrevMinRx=stuAtmStatsPrevMinRx, stuAlmTrapId=stuAlmTrapId, stuAlmTime=stuAlmTime, stuMibRevision=stuMibRevision, stuCurrEtherFramErrs=stuCurrEtherFramErrs, EpochTime=EpochTime, stuFiltIpMultiStatus=stuFiltIpMultiStatus, stuAlmSevMacAddress=stuAlmSevMacAddress, stuAtmStatsCurrMinCRCErrors=stuAtmStatsCurrMinCRCErrors, stuFiltEtherStatus=stuFiltEtherStatus, stuESMinThres=stuESMinThres, com21StuEtherMacGroup=com21StuEtherMacGroup, com21StuControlGroup=com21StuControlGroup, stuEtherForwArpOnly=stuEtherForwArpOnly, stuEtherMacAddr=stuEtherMacAddr, stuEtherMacStatus=stuEtherMacStatus, stuPrevEtherTxUnder=stuPrevEtherTxUnder, stuVoiceChanStatsPrevSetUpFailCnt=stuVoiceChanStatsPrevSetUpFailCnt, PYSNMP_MODULE_ID=com21StuPrxy, stuStatsCurrAtmTei=stuStatsCurrAtmTei, stuStatsPrevAtmHec=stuStatsPrevAtmHec, stuEtherIgmpEnable=stuEtherIgmpEnable, com21StuEtherMacTable=com21StuEtherMacTable, stuEtherCrcThres=stuEtherCrcThres, stuAlmSevEsThres=stuAlmSevEsThres, stuRecvRfSigLevel=stuRecvRfSigLevel, stuStatsClearStats=stuStatsClearStats, stuAtmStatsClearStats=stuAtmStatsClearStats, stuFecCorrectThres=stuFecCorrectThres, com21StuStatsGroup=com21StuStatsGroup, stuPrevEtherRunts=stuPrevEtherRunts, stuVoiceChanStatsMacAddr=stuVoiceChanStatsMacAddr, stuRecvFreqDrift=stuRecvFreqDrift, stuAlmSevTeiThres=stuAlmSevTeiThres, stuStatsMacAddress=stuStatsMacAddress, stuEtherStickyBitCtrl=stuEtherStickyBitCtrl, stuAlmSeverity=stuAlmSeverity, stuVoiceAimLpBk=stuVoiceAimLpBk, stuEtherMacFiltAge=stuEtherMacFiltAge, stuCodeImageType=stuCodeImageType, stuCodeImageIndex=stuCodeImageIndex, stuVoiceChanStatsClear=stuVoiceChanStatsClear, com21StuControlTable=com21StuControlTable, stuUpstrmTestTimeout=stuUpstrmTestTimeout, com21StuEtherConfigGroup=com21StuEtherConfigGroup, stuAlmSevFecThres=stuAlmSevFecThres, stuCurrEtherRunts=stuCurrEtherRunts, stuStatsPrevESMin=stuStatsPrevESMin, com21StuEtherConfigTable=com21StuEtherConfigTable, com21StuEtherStatsEntry=com21StuEtherStatsEntry, stuVoiceChanStatsCurrLostCellCnt=stuVoiceChanStatsCurrLostCellCnt, stuEtherFiltFlushAction=stuEtherFiltFlushAction, stuSerialNumber=stuSerialNumber, stuXmitFeqChange=stuXmitFeqChange, stuEtherBCastRateEn=stuEtherBCastRateEn, stuXmitFrequency=stuXmitFrequency, stuBoardRevision=stuBoardRevision, stuVoiceChanStatsPrevTxVoiceCellCnt=stuVoiceChanStatsPrevTxVoiceCellCnt, com21StuFiltIpMultiGroup=com21StuFiltIpMultiGroup, com21StuAlarmEntry=com21StuAlarmEntry, com21StuEtherStatsTable=com21StuEtherStatsTable, stuAtmStuMacAddr=stuAtmStuMacAddr, stuPhyMacAddress=stuPhyMacAddress, com21StuCodeImageEntry=com21StuCodeImageEntry, stuVoiceChanStatsCurrRxOamCellCnt=stuVoiceChanStatsCurrRxOamCellCnt, stuEtherStuMac=stuEtherStuMac, stuStatsPrevFecCorrect=stuStatsPrevFecCorrect, stuCurrEtherTxUnder=stuCurrEtherTxUnder, stuAtmStatsCurrMinRx=stuAtmStatsCurrMinRx, stuVoiceChanStatsCurrDrpdCellCnt=stuVoiceChanStatsCurrDrpdCellCnt, stuEthStatsMacAddr=stuEthStatsMacAddr, stuFiltIpDirectCntrl=stuFiltIpDirectCntrl, stuVoiceChanStatsNum=stuVoiceChanStatsNum, stuCodeStuMacAddr=stuCodeStuMacAddr, stuFiltEtherType=stuFiltEtherType, stuVoiceChanStatsCurrSetUpFailCnt=stuVoiceChanStatsCurrSetUpFailCnt, stuDesKeySize=stuDesKeySize, stuCodeImageTime=stuCodeImageTime, stuCurrEtherDropFrms=stuCurrEtherDropFrms, stuLastRestartCause=stuLastRestartCause, stuPrevEtherCollitns=stuPrevEtherCollitns, stuAtmTeiThres=stuAtmTeiThres, stuStatsPrevAtmTei=stuStatsPrevAtmTei, stuEtherConnState=stuEtherConnState, stuAlmSevHecThres=stuAlmSevHecThres, Offset=Offset, stuCurrEtherCrcErrs=stuCurrEtherCrcErrs, stuVoiceChanStatsPrevDrpdCellCnt=stuVoiceChanStatsPrevDrpdCellCnt, com21StuPhysicalGroup=com21StuPhysicalGroup, com21StuPrxy=com21StuPrxy, stuAtmStatsCurrMinRxDropped=stuAtmStatsCurrMinRxDropped, UpstrmFreqKhz=UpstrmFreqKhz, stuAlmMacAddress=stuAlmMacAddress, com21StuPhysicalEntry=com21StuPhysicalEntry, stuCurrEtherRxOver=stuCurrEtherRxOver, stuUpstrmPingCntrl=stuUpstrmPingCntrl, com21StuControlEntry=com21StuControlEntry, stuRecvFrequency=stuRecvFrequency, com21StuEtherStatsGroup=com21StuEtherStatsGroup, stuAtmStatsPrevMinRxDropped=stuAtmStatsPrevMinRxDropped, stuVoiceChanStatsCurrTxOamCellCnt=stuVoiceChanStatsCurrTxOamCellCnt, stuTunerRevision=stuTunerRevision, com21StuQStatsEntry=com21StuQStatsEntry, stuEpochTime=stuEpochTime, stuFiltIpMultiAddr=stuFiltIpMultiAddr, stuFecCorrectThreshold=stuFecCorrectThreshold, stuAlmSevCrcThres=stuAlmSevCrcThres, com21StuFiltIpMultiEntry=com21StuFiltIpMultiEntry, com21StuFiltIpMultiTable=com21StuFiltIpMultiTable, stuESMinThreshold=stuESMinThreshold, stuAtmTeiThreshold=stuAtmTeiThreshold, stuStatsCurrAtmHec=stuStatsCurrAtmHec, stuVoiceChanStatsPrevRxVoiceCellCnt=stuVoiceChanStatsPrevRxVoiceCellCnt, stuFiltIpMacAddr=stuFiltIpMacAddr, com21StuAlarmSevEntry=com21StuAlarmSevEntry, com21StuCodeImageGroup=com21StuCodeImageGroup, stuAtmStatsPrevMinCRCErrors=stuAtmStatsPrevMinCRCErrors, stuVoiceChanStatsCurrCrc3ErrCnt=stuVoiceChanStatsCurrCrc3ErrCnt, stuOutOfSpecRFCond=stuOutOfSpecRFCond, stuMaceFail=stuMaceFail, stuInbContToneEnable=stuInbContToneEnable, com21StuEtherTypeGroup=com21StuEtherTypeGroup, com21StuVoiceChanStatsEntry=com21StuVoiceChanStatsEntry, stuFiltEtherMacAddr=stuFiltEtherMacAddr, stuVoiceAimPort1Status=stuVoiceAimPort1Status, com21StuQStatsGroup=com21StuQStatsGroup, stuXmitDacVRef=stuXmitDacVRef, stuAtmStuQNo=stuAtmStuQNo, com21StuVoiceChanStatsGroup=com21StuVoiceChanStatsGroup, com21StuCodeImageTable=com21StuCodeImageTable, stuUpstrmTestFreq=stuUpstrmTestFreq, stuUnitManufacturer=stuUnitManufacturer, FrequencyKhz=FrequencyKhz, stuCodeImageDate=stuCodeImageDate)
