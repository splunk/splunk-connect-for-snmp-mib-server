#
# PySNMP MIB module JUNIPER-LSYSSP-FLOWSESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-FLOWSESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
jnxLsysSpFlowsess, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpFlowsess")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, NotificationType, ObjectIdentity, IpAddress, MibIdentifier, TimeTicks, Counter64, Counter32, iso, ModuleIdentity, Integer32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "ObjectIdentity", "IpAddress", "MibIdentifier", "TimeTicks", "Counter64", "Counter32", "iso", "ModuleIdentity", "Integer32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxLsysSpFlowsessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1))
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setOrganization('Juniper Networks, Inc.')
jnxLsysSpFlowsessObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1))
jnxLsysSpFlowsessSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2))
jnxLsysSpFlowsessTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpFlowsessTable.setStatus('current')
jnxLsysSpFlowsessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-FLOWSESS-MIB", "jnxLsysSpFlowsessLsysName"))
if mibBuilder.loadTexts: jnxLsysSpFlowsessEntry.setStatus('current')
jnxLsysSpFlowsessLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpFlowsessLsysName.setStatus('current')
jnxLsysSpFlowsessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessProfileName.setStatus('current')
jnxLsysSpFlowsessUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsage.setStatus('current')
jnxLsysSpFlowsessReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessReserved.setStatus('current')
jnxLsysSpFlowsessMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaximum.setStatus('current')
jnxLsysSpFlowsessUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsedAmount.setStatus('current')
jnxLsysSpFlowsessMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaxQuota.setStatus('current')
jnxLsysSpFlowsessAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessAvailableAmount.setStatus('current')
jnxLsysSpFlowsessHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUsage.setStatus('current')
jnxLsysSpFlowsessHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUser.setStatus('current')
jnxLsysSpFlowsessLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUsage.setStatus('current')
jnxLsysSpFlowsessLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUser.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWSESS-MIB", PYSNMP_MODULE_ID=jnxLsysSpFlowsessMIB, jnxLsysSpFlowsessUsedAmount=jnxLsysSpFlowsessUsedAmount, jnxLsysSpFlowsessMIB=jnxLsysSpFlowsessMIB, jnxLsysSpFlowsessSummary=jnxLsysSpFlowsessSummary, jnxLsysSpFlowsessLsysName=jnxLsysSpFlowsessLsysName, jnxLsysSpFlowsessProfileName=jnxLsysSpFlowsessProfileName, jnxLsysSpFlowsessMaxQuota=jnxLsysSpFlowsessMaxQuota, jnxLsysSpFlowsessLightestUser=jnxLsysSpFlowsessLightestUser, jnxLsysSpFlowsessMaximum=jnxLsysSpFlowsessMaximum, jnxLsysSpFlowsessLightestUsage=jnxLsysSpFlowsessLightestUsage, jnxLsysSpFlowsessHeaviestUsage=jnxLsysSpFlowsessHeaviestUsage, jnxLsysSpFlowsessHeaviestUser=jnxLsysSpFlowsessHeaviestUser, jnxLsysSpFlowsessObjects=jnxLsysSpFlowsessObjects, jnxLsysSpFlowsessReserved=jnxLsysSpFlowsessReserved, jnxLsysSpFlowsessUsage=jnxLsysSpFlowsessUsage, jnxLsysSpFlowsessEntry=jnxLsysSpFlowsessEntry, jnxLsysSpFlowsessAvailableAmount=jnxLsysSpFlowsessAvailableAmount, jnxLsysSpFlowsessTable=jnxLsysSpFlowsessTable)
