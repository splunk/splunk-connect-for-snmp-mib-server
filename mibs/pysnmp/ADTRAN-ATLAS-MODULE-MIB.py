#
# PySNMP MIB module ADTRAN-ATLAS-MODULE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-ATLAS-MODULE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:59:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
adATLASUnitSlotAddress, adATLASUnitFPStatus, adATLASUnitPortAddress = mibBuilder.importSymbols("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress", "adATLASUnitFPStatus", "adATLASUnitPortAddress")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, Integer32, Counter64, IpAddress, ModuleIdentity, ObjectIdentity, iso, Unsigned32, Counter32, MibIdentifier, NotificationType, NotificationType, enterprises, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "Integer32", "Counter64", "IpAddress", "ModuleIdentity", "ObjectIdentity", "iso", "Unsigned32", "Counter32", "MibIdentifier", "NotificationType", "NotificationType", "enterprises", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
adtran = MibIdentifier((1, 3, 6, 1, 4, 1, 664))
adMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2))
adATLASmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154))
adGenATLASmg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154, 1))
adATLASModulemg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6))
adATLASModuleInfoNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoNumber.setStatus('mandatory')
adATLASModuleInfoTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2), )
if mibBuilder.loadTexts: adATLASModuleInfoTable.setStatus('mandatory')
adATLASModuleInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1), ).setIndexNames((0, "ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoIndex"))
if mibBuilder.loadTexts: adATLASModuleInfoEntry.setStatus('mandatory')
adATLASModuleInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoIndex.setStatus('mandatory')
adATLASModuleInfoNumIfs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoNumIfs.setStatus('mandatory')
adATLASModuleInfoNumRsrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoNumRsrcs.setStatus('mandatory')
adATLASModuleInfoOID = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoOID.setStatus('mandatory')
adATLASModuleInfoPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoPartNum.setStatus('mandatory')
adATLASModuleInfoSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoSerialNum.setStatus('mandatory')
adATLASModuleInfoHardwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoHardwareRev.setStatus('mandatory')
adATLASModuleInfoFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoFirmwareRev.setStatus('mandatory')
adATLASModuleInfoState = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adATLASModuleInfoState.setStatus('mandatory')
adATLASModuleInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("online", 1), ("offline", 2), ("noResponse", 3), ("unResponsiveOffline", 4), ("notReady", 5), ("restarting", 6), ("notSupported", 7), ("standby", 8), ("empty", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoStatus.setStatus('mandatory')
adATLASModuleInfoFPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 154, 1, 6, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adATLASModuleInfoFPStatus.setStatus('mandatory')
adATLASModuleOffline = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400600)).setObjects(("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoIndex"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASModuleOnline = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400601)).setObjects(("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoIndex"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuBackupAttempt = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400602)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuBackupAttemptFailed = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400603)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuBackupActive = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400604)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuPrimaryRestored = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400605)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuTestCallOriginated = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400606)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuTestCallConnected = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400607)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuTestCallPassed = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400608)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
adATLASCbuTestCallFailed = NotificationType((1, 3, 6, 1, 4, 1, 664, 2, 154) + (0,15400609)).setObjects(("IF-MIB", "ifIndex"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitSlotAddress"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitPortAddress"), ("ADTRAN-ATLAS-MODULE-MIB", "adATLASModuleInfoFPStatus"), ("ADTRAN-ATLAS-UNIT-MIB", "adATLASUnitFPStatus"))
mibBuilder.exportSymbols("ADTRAN-ATLAS-MODULE-MIB", adATLASCbuBackupActive=adATLASCbuBackupActive, adATLASCbuTestCallOriginated=adATLASCbuTestCallOriginated, adATLASCbuTestCallPassed=adATLASCbuTestCallPassed, adATLASModuleInfoNumRsrcs=adATLASModuleInfoNumRsrcs, adATLASModuleOnline=adATLASModuleOnline, adATLASModuleInfoPartNum=adATLASModuleInfoPartNum, adATLASmg=adATLASmg, adATLASCbuPrimaryRestored=adATLASCbuPrimaryRestored, adATLASCbuBackupAttempt=adATLASCbuBackupAttempt, adATLASModuleInfoNumber=adATLASModuleInfoNumber, adGenATLASmg=adGenATLASmg, adATLASModuleInfoSerialNum=adATLASModuleInfoSerialNum, adATLASModuleInfoTable=adATLASModuleInfoTable, adATLASModuleInfoStatus=adATLASModuleInfoStatus, adATLASModuleInfoIndex=adATLASModuleInfoIndex, adATLASCbuTestCallConnected=adATLASCbuTestCallConnected, adATLASModuleInfoHardwareRev=adATLASModuleInfoHardwareRev, adATLASModuleInfoFPStatus=adATLASModuleInfoFPStatus, adATLASModuleInfoNumIfs=adATLASModuleInfoNumIfs, adATLASModuleOffline=adATLASModuleOffline, adATLASCbuTestCallFailed=adATLASCbuTestCallFailed, adATLASModuleInfoState=adATLASModuleInfoState, adATLASModuleInfoEntry=adATLASModuleInfoEntry, adtran=adtran, adMgmt=adMgmt, adATLASCbuBackupAttemptFailed=adATLASCbuBackupAttemptFailed, adATLASModuleInfoOID=adATLASModuleInfoOID, adATLASModulemg=adATLASModulemg, adATLASModuleInfoFirmwareRev=adATLASModuleInfoFirmwareRev)
