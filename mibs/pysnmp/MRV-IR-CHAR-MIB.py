#
# PySNMP MIB module MRV-IR-CHAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MRV-IR-CHAR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
TrapSeverity, mrvLx = mibBuilder.importSymbols("MRV-IR-SYSTEM-MIB", "TrapSeverity", "mrvLx")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, Counter64, ObjectIdentity, iso, Counter32, Gauge32, ModuleIdentity, IpAddress, TimeTicks, MibIdentifier, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "Counter64", "ObjectIdentity", "iso", "Counter32", "Gauge32", "ModuleIdentity", "IpAddress", "TimeTicks", "MibIdentifier", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
irCharMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 33, 100, 2))
if mibBuilder.loadTexts: irCharMib.setLastUpdated('200711180000Z')
if mibBuilder.loadTexts: irCharMib.setOrganization('MRV Communications - BPD Division')
class IrContactState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("open", 1), ("closed", 2))

class IrControlState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("deassert", 1), ("assert", 2))

class PortAccessType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19))
    namedValues = NamedValues(("local", 1), ("remote", 2), ("dynamic", 3), ("power", 4), ("sensor", 5), ("apd", 6), ("dataBuffer", 7), ("tcpPipe", 8), ("control", 9), ("master", 10), ("slave", 11), ("ppp", 12), ("notify", 13), ("none", 14), ("hdam", 16), ("ldam", 17), ("lpd", 18), ("ups", 19))

class PortSpeed(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("sp134", 1), ("sp200", 2), ("sp300", 3), ("sp600", 4), ("sp1200", 5), ("sp2400", 6), ("sp4800", 7), ("sp9600", 8), ("sp19200", 9), ("sp38400", 10), ("sp57600", 11), ("sp115200", 12), ("sp230400", 13), ("sp460800", 14), ("sp921600", 15))

class PortAuthType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("securid", 2), ("radius", 3), ("tacacs", 4), ("ldap", 5), ("local", 6))

class SignalStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("up", 1), ("down", 2))

irCharNumber = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharNumber.setStatus('current')
irCharPortTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 2), )
if mibBuilder.loadTexts: irCharPortTable.setStatus('current')
irCharPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irCharPortIndex"))
if mibBuilder.loadTexts: irCharPortEntry.setStatus('current')
irCharPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortIndex.setStatus('current')
irCharPortAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 2), PortAccessType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortAccessType.setStatus('current')
irCharPortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("xon", 2), ("cts", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortFlowControl.setStatus('current')
irCharPortStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortStopBits.setStatus('current')
irCharPortParity = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3), ("mark", 4), ("space", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortParity.setStatus('current')
irCharPortBitsPerChar = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortBitsPerChar.setStatus('current')
irCharPortAutoDial = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortAutoDial.setStatus('deprecated')
irCharPortAutoHangup = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortAutoHangup.setStatus('current')
irCharPortAutobaud = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortAutobaud.setStatus('current')
irCharPortAutobaudRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortAutobaudRetry.setStatus('current')
irCharPortInSignalCts = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 11), SignalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortInSignalCts.setStatus('current')
irCharPortInSignalDsr = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 12), SignalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortInSignalDsr.setStatus('current')
irCharPortInSignalDcd = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 13), SignalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortInSignalDcd.setStatus('current')
irCharPortOutSignalRts = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 14), SignalStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortOutSignalRts.setStatus('current')
irCharPortOutSignalDtr = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 15), SignalStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortOutSignalDtr.setStatus('current')
irCharPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 16), PortSpeed()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortSpeed.setStatus('current')
irCharPortPrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortPrompt.setStatus('current')
irCharPortBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortBreak.setStatus('current')
irCharPortSpecialBreakString = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortSpecialBreakString.setStatus('current')
irCharPortSpecialBreak = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortSpecialBreak.setStatus('current')
irCharPortInboundAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 21), PortAuthType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortInboundAuth.setStatus('current')
irCharPortOutboundAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 22), PortAuthType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortOutboundAuth.setStatus('current')
irCharPortAuthFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortAuthFallback.setStatus('current')
irCharPortRadiusAcct = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortRadiusAcct.setStatus('current')
irCharPortTacacsAcct = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortTacacsAcct.setStatus('current')
irCharPortTransparent = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortTransparent.setStatus('current')
irCharPortDataBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortDataBufferSize.setStatus('current')
irCharPortDataBufferSyslog = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortDataBufferSyslog.setStatus('current')
irCharPortDataBufferDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("prompt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortDataBufferDisplay.setStatus('current')
irCharPortDataBufferTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irCharPortDataBufferTimeStamp.setStatus('current')
irCharPortTelnetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortTelnetPort.setStatus('current')
irCharPortSshPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortSshPort.setStatus('current')
irCharPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 3), )
if mibBuilder.loadTexts: irCharPortStatsTable.setStatus('current')
irCharPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 3, 1), )
irCharPortEntry.registerAugmentions(("MRV-IR-CHAR-MIB", "irCharPortStatsEntry"))
irCharPortStatsEntry.setIndexNames(*irCharPortEntry.getIndexNames())
if mibBuilder.loadTexts: irCharPortStatsEntry.setStatus('current')
irCharPortTransmitBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortTransmitBytes.setStatus('current')
irCharPortReceiveBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortReceiveBytes.setStatus('current')
irCharPortFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortFrameErrors.setStatus('current')
irCharPortOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortOverrunErrors.setStatus('current')
irCharPortParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irCharPortParityErrors.setStatus('current')
irTempSensorTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 4), )
if mibBuilder.loadTexts: irTempSensorTable.setStatus('current')
irTempSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irTempPortIndex"), (0, "MRV-IR-CHAR-MIB", "irTempSensorIndex"))
if mibBuilder.loadTexts: irTempSensorEntry.setStatus('current')
irTempPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irTempPortIndex.setStatus('current')
irTempSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irTempSensorIndex.setStatus('current')
irTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irTempValue.setStatus('current')
irTempValueUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("celsius", 1), ("fahrenheit", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTempValueUnits.setStatus('current')
irTempThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTempThresholdHigh.setStatus('current')
irTempThresholdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTempThresholdLow.setStatus('current')
irTempTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 7), TrapSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTempTrapSeverity.setStatus('current')
irTempHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTempHysteresis.setStatus('current')
irHumiditySensorTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 5), )
if mibBuilder.loadTexts: irHumiditySensorTable.setStatus('current')
irHumiditySensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irHumidityPortIndex"), (0, "MRV-IR-CHAR-MIB", "irHumiditySensorIndex"))
if mibBuilder.loadTexts: irHumiditySensorEntry.setStatus('current')
irHumidityPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHumidityPortIndex.setStatus('current')
irHumiditySensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHumiditySensorIndex.setStatus('current')
irHumidityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irHumidityValue.setStatus('current')
irHumidityThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irHumidityThresholdHigh.setStatus('current')
irHumidityThresholdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irHumidityThresholdLow.setStatus('current')
irHumidityTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 6), TrapSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irHumidityTrapSeverity.setStatus('current')
irHumidityHysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irHumidityHysteresis.setStatus('current')
irPowerTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 6), )
if mibBuilder.loadTexts: irPowerTable.setStatus('current')
irPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1), )
irCharPortEntry.registerAugmentions(("MRV-IR-CHAR-MIB", "irPowerEntry"))
irPowerEntry.setIndexNames(*irCharPortEntry.getIndexNames())
if mibBuilder.loadTexts: irPowerEntry.setStatus('current')
irPowerModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("module5150", 1), ("module4800", 2), ("module5250", 3), ("moduleOther", 4), ("module5210", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerModuleType.setStatus('current')
irPowerCurrentLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerCurrentLoad.setStatus('current')
irPowerOutletCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerOutletCount.setStatus('current')
irPowerCurrentLoadA = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerCurrentLoadA.setStatus('current')
irPowerCurrentLoadB = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerCurrentLoadB.setStatus('current')
irPowerCurrentLoadC = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerCurrentLoadC.setStatus('current')
irPowerOutletTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 7), )
if mibBuilder.loadTexts: irPowerOutletTable.setStatus('current')
irPowerOutletEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irPowerPortIndex"), (0, "MRV-IR-CHAR-MIB", "irPowerOutletIndex"))
if mibBuilder.loadTexts: irPowerOutletEntry.setStatus('current')
irPowerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerPortIndex.setStatus('current')
irPowerOutletIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerOutletIndex.setStatus('current')
irPowerOutletName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irPowerOutletName.setStatus('current')
irPowerOutletStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerOutletStatus.setStatus('current')
irPowerOutletAction = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("on", 2), ("off", 3), ("reboot", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irPowerOutletAction.setStatus('current')
irPowerOutletCurrentLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irPowerOutletCurrentLoad.setStatus('current')
irTcpPipeTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 8), )
if mibBuilder.loadTexts: irTcpPipeTable.setStatus('current')
irTcpPipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 8, 1), )
irCharPortEntry.registerAugmentions(("MRV-IR-CHAR-MIB", "irTcpPipeEntry"))
irTcpPipeEntry.setIndexNames(*irCharPortEntry.getIndexNames())
if mibBuilder.loadTexts: irTcpPipeEntry.setStatus('current')
irTcpPipeRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 8, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTcpPipeRemoteIpAddress.setStatus('current')
irTcpPipeRemoteTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2001, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTcpPipeRemoteTcpPort.setStatus('current')
irTcpPipeWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(128, 1400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTcpPipeWindowSize.setStatus('current')
irTcpPipeConnRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irTcpPipeConnRetryCount.setStatus('current')
irTcpPipeConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("idle", 0), ("connecting", 1), ("connected", 2), ("suspended", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irTcpPipeConnStatus.setStatus('current')
irModem = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 100, 2, 9))
irModemCfgTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1), )
if mibBuilder.loadTexts: irModemCfgTable.setStatus('current')
irModemCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irModemIndex"))
if mibBuilder.loadTexts: irModemCfgEntry.setStatus('current')
irModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irModemIndex.setStatus('current')
irModemTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irModemTimeout.setStatus('current')
irModemRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irModemRetry.setStatus('current')
irModemState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irModemState.setStatus('current')
irModemPooling = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irModemPooling.setStatus('current')
irModemDialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irModemDialNumber.setStatus('current')
irModemInitString = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irModemInitString.setStatus('current')
irInternalModemPort = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irInternalModemPort.setStatus('current')
irInternalModemType = MibScalar((1, 3, 6, 1, 4, 1, 33, 100, 2, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("v90", 2), ("rs485", 3), ("gsmGprs", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irInternalModemType.setStatus('current')
irLdAlarmConfigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 10), )
if mibBuilder.loadTexts: irLdAlarmConfigTable.setStatus('current')
irLdAlarmConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irLdAlarmPortIndex"), (0, "MRV-IR-CHAR-MIB", "irLdAlarmPointIndex"))
if mibBuilder.loadTexts: irLdAlarmConfigEntry.setStatus('current')
irLdAlarmPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdAlarmPortIndex.setStatus('current')
irLdAlarmPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdAlarmPointIndex.setStatus('current')
irLdAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdAlarmName.setStatus('current')
irLdAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdAlarmDescription.setStatus('current')
irLdAlarmContactState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 5), IrContactState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdAlarmContactState.setStatus('current')
irLdAlarmContactFaultState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 6), IrContactState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdAlarmContactFaultState.setStatus('current')
irLdAlarmTrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdAlarmTrapStatus.setStatus('current')
irLdAlarmTrapSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 8), TrapSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdAlarmTrapSeverity.setStatus('current')
irLdAlarmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdAlarmCount.setStatus('current')
irLdAlarmTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 10, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdAlarmTimestamp.setStatus('current')
irLdControlConfigTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 11), )
if mibBuilder.loadTexts: irLdControlConfigTable.setStatus('current')
irLdControlConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irLdControlPortIndex"), (0, "MRV-IR-CHAR-MIB", "irLdControlPointIndex"))
if mibBuilder.loadTexts: irLdControlConfigEntry.setStatus('current')
irLdControlPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdControlPortIndex.setStatus('current')
irLdControlPointIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irLdControlPointIndex.setStatus('current')
irLdControlName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdControlName.setStatus('current')
irLdControlDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdControlDescription.setStatus('current')
irLdControlState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1, 5), IrControlState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdControlState.setStatus('current')
irLdControlEnergizedState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 11, 1, 6), IrControlState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irLdControlEnergizedState.setStatus('current')
irRs485PortTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 12), )
if mibBuilder.loadTexts: irRs485PortTable.setStatus('current')
irRs485PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 12, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irRs485PortIndex"))
if mibBuilder.loadTexts: irRs485PortEntry.setStatus('current')
irRs485PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irRs485PortIndex.setStatus('current')
irRs485PortDuplexMode = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irRs485PortDuplexMode.setStatus('current')
irRs485PortEchoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irRs485PortEchoMode.setStatus('current')
irRs485PortTransmitter = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("always", 1), ("rts", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irRs485PortTransmitter.setStatus('current')
irGsmPortTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 13), )
if mibBuilder.loadTexts: irGsmPortTable.setStatus('current')
irGsmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 13, 1), ).setIndexNames((0, "MRV-IR-CHAR-MIB", "irGsmPortIndex"))
if mibBuilder.loadTexts: irGsmPortEntry.setStatus('current')
irGsmPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irGsmPortIndex.setStatus('current')
irGsmPortRcvSigStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irGsmPortRcvSigStrength.setStatus('current')
irGsmPortBitErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irGsmPortBitErrorRate.setStatus('current')
irUpsTable = MibTable((1, 3, 6, 1, 4, 1, 33, 100, 2, 14), )
if mibBuilder.loadTexts: irUpsTable.setStatus('current')
irUpsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1), )
irCharPortEntry.registerAugmentions(("MRV-IR-CHAR-MIB", "irUpsEntry"))
irUpsEntry.setIndexNames(*irCharPortEntry.getIndexNames())
if mibBuilder.loadTexts: irUpsEntry.setStatus('current')
irUpsType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("smart", 1), ("simple", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irUpsType.setStatus('current')
irUpsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("offline", 1), ("online", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irUpsStatus.setStatus('current')
irUpsModel = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irUpsModel.setStatus('current')
irUpsCharge = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irUpsCharge.setStatus('current')
irUpsLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irUpsLoad.setStatus('current')
irUpsLife = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 100, 2, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irUpsLife.setStatus('current')
mibBuilder.exportSymbols("MRV-IR-CHAR-MIB", irRs485PortTable=irRs485PortTable, irCharPortInSignalCts=irCharPortInSignalCts, irLdControlPointIndex=irLdControlPointIndex, irTempSensorIndex=irTempSensorIndex, PortAccessType=PortAccessType, irPowerOutletName=irPowerOutletName, irCharPortPrompt=irCharPortPrompt, irLdAlarmConfigTable=irLdAlarmConfigTable, irCharPortBitsPerChar=irCharPortBitsPerChar, irLdAlarmTrapStatus=irLdAlarmTrapStatus, irLdAlarmCount=irLdAlarmCount, PortAuthType=PortAuthType, irPowerPortIndex=irPowerPortIndex, irCharPortStatsEntry=irCharPortStatsEntry, irCharPortTacacsAcct=irCharPortTacacsAcct, irTcpPipeTable=irTcpPipeTable, irUpsLife=irUpsLife, PYSNMP_MODULE_ID=irCharMib, irCharPortOutSignalRts=irCharPortOutSignalRts, irPowerCurrentLoad=irPowerCurrentLoad, irModemState=irModemState, irCharPortInboundAuth=irCharPortInboundAuth, irLdControlEnergizedState=irLdControlEnergizedState, irCharPortTransmitBytes=irCharPortTransmitBytes, SignalStatus=SignalStatus, irGsmPortTable=irGsmPortTable, irCharPortTelnetPort=irCharPortTelnetPort, irTempValue=irTempValue, irCharPortStatsTable=irCharPortStatsTable, irHumidityValue=irHumidityValue, irModemCfgEntry=irModemCfgEntry, irPowerCurrentLoadB=irPowerCurrentLoadB, irUpsStatus=irUpsStatus, irCharPortInSignalDcd=irCharPortInSignalDcd, irTempHysteresis=irTempHysteresis, irModemInitString=irModemInitString, irPowerOutletEntry=irPowerOutletEntry, irTcpPipeConnRetryCount=irTcpPipeConnRetryCount, irCharPortSshPort=irCharPortSshPort, irPowerOutletTable=irPowerOutletTable, irModemPooling=irModemPooling, irGsmPortBitErrorRate=irGsmPortBitErrorRate, irTempPortIndex=irTempPortIndex, irTempValueUnits=irTempValueUnits, irRs485PortDuplexMode=irRs485PortDuplexMode, irCharPortDataBufferTimeStamp=irCharPortDataBufferTimeStamp, irCharPortTransparent=irCharPortTransparent, irLdControlConfigEntry=irLdControlConfigEntry, irCharPortStopBits=irCharPortStopBits, irTcpPipeWindowSize=irTcpPipeWindowSize, irLdAlarmContactFaultState=irLdAlarmContactFaultState, irCharPortIndex=irCharPortIndex, irCharPortFrameErrors=irCharPortFrameErrors, irCharPortEntry=irCharPortEntry, irInternalModemPort=irInternalModemPort, irCharPortSpecialBreakString=irCharPortSpecialBreakString, irModemTimeout=irModemTimeout, irCharPortReceiveBytes=irCharPortReceiveBytes, irTcpPipeConnStatus=irTcpPipeConnStatus, irLdAlarmConfigEntry=irLdAlarmConfigEntry, irTempTrapSeverity=irTempTrapSeverity, irCharPortOutSignalDtr=irCharPortOutSignalDtr, irModemCfgTable=irModemCfgTable, irLdControlPortIndex=irLdControlPortIndex, IrContactState=IrContactState, irCharPortBreak=irCharPortBreak, irTcpPipeEntry=irTcpPipeEntry, irCharPortDataBufferSyslog=irCharPortDataBufferSyslog, irCharPortDataBufferSize=irCharPortDataBufferSize, irHumidityHysteresis=irHumidityHysteresis, irHumiditySensorIndex=irHumiditySensorIndex, irPowerOutletStatus=irPowerOutletStatus, irUpsCharge=irUpsCharge, irPowerModuleType=irPowerModuleType, irModem=irModem, irRs485PortIndex=irRs485PortIndex, irLdAlarmPointIndex=irLdAlarmPointIndex, irHumiditySensorEntry=irHumiditySensorEntry, irCharPortAutobaud=irCharPortAutobaud, irCharPortSpeed=irCharPortSpeed, irTempSensorTable=irTempSensorTable, irCharPortRadiusAcct=irCharPortRadiusAcct, irRs485PortEntry=irRs485PortEntry, irRs485PortTransmitter=irRs485PortTransmitter, irCharPortDataBufferDisplay=irCharPortDataBufferDisplay, PortSpeed=PortSpeed, irHumidityThresholdLow=irHumidityThresholdLow, irUpsTable=irUpsTable, irCharPortAccessType=irCharPortAccessType, irLdAlarmTrapSeverity=irLdAlarmTrapSeverity, irPowerOutletCurrentLoad=irPowerOutletCurrentLoad, irUpsLoad=irUpsLoad, irTcpPipeRemoteTcpPort=irTcpPipeRemoteTcpPort, irCharPortAutobaudRetry=irCharPortAutobaudRetry, irCharPortParityErrors=irCharPortParityErrors, irModemDialNumber=irModemDialNumber, irGsmPortEntry=irGsmPortEntry, irTempSensorEntry=irTempSensorEntry, irCharPortTable=irCharPortTable, irLdAlarmDescription=irLdAlarmDescription, irCharPortAutoHangup=irCharPortAutoHangup, irPowerEntry=irPowerEntry, irCharPortParity=irCharPortParity, irLdControlDescription=irLdControlDescription, irCharPortAutoDial=irCharPortAutoDial, irPowerCurrentLoadA=irPowerCurrentLoadA, irLdAlarmTimestamp=irLdAlarmTimestamp, irCharMib=irCharMib, irGsmPortIndex=irGsmPortIndex, irUpsType=irUpsType, irCharPortSpecialBreak=irCharPortSpecialBreak, irTcpPipeRemoteIpAddress=irTcpPipeRemoteIpAddress, irCharPortAuthFallback=irCharPortAuthFallback, irLdAlarmName=irLdAlarmName, irUpsEntry=irUpsEntry, irHumidityThresholdHigh=irHumidityThresholdHigh, irModemIndex=irModemIndex, irPowerOutletAction=irPowerOutletAction, irUpsModel=irUpsModel, irCharNumber=irCharNumber, irModemRetry=irModemRetry, irLdControlState=irLdControlState, irInternalModemType=irInternalModemType, irCharPortOutboundAuth=irCharPortOutboundAuth, irLdAlarmContactState=irLdAlarmContactState, irHumidityTrapSeverity=irHumidityTrapSeverity, irCharPortInSignalDsr=irCharPortInSignalDsr, irHumidityPortIndex=irHumidityPortIndex, irPowerOutletIndex=irPowerOutletIndex, irLdAlarmPortIndex=irLdAlarmPortIndex, irLdControlConfigTable=irLdControlConfigTable, irCharPortOverrunErrors=irCharPortOverrunErrors, irLdControlName=irLdControlName, irGsmPortRcvSigStrength=irGsmPortRcvSigStrength, irTempThresholdLow=irTempThresholdLow, irPowerCurrentLoadC=irPowerCurrentLoadC, irPowerOutletCount=irPowerOutletCount, IrControlState=IrControlState, irCharPortFlowControl=irCharPortFlowControl, irHumiditySensorTable=irHumiditySensorTable, irPowerTable=irPowerTable, irTempThresholdHigh=irTempThresholdHigh, irRs485PortEchoMode=irRs485PortEchoMode)
