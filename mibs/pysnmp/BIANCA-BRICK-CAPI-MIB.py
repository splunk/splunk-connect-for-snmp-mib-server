#
# PySNMP MIB module BIANCA-BRICK-CAPI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-CAPI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
BitValue, = mibBuilder.importSymbols("BIANCA-BRICK-PPP-MIB", "BitValue")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, MibIdentifier, Bits, Counter32, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, NotificationType, ObjectIdentity, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "MibIdentifier", "Bits", "Counter32", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "NotificationType", "ObjectIdentity", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
capi = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 7))
class HexValue(Integer32):
    pass

capiApplTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 1), )
if mibBuilder.loadTexts: capiApplTable.setStatus('mandatory')
capiApplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiApplNumber"))
if mibBuilder.loadTexts: capiApplEntry.setStatus('mandatory')
capiApplNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplNumber.setStatus('mandatory')
capiApplVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("capi11", 1), ("capi20", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplVersion.setStatus('mandatory')
capiApplByteOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("little-endian", 1), ("big-endian", 2), ("undef", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplByteOrder.setStatus('mandatory')
capiApplRegLevel3Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplRegLevel3Cnt.setStatus('mandatory')
capiApplRegMsgCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplRegMsgCnt.setStatus('mandatory')
capiApplRegDblkCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplRegDblkCnt.setStatus('mandatory')
capiApplRegDblkSize = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplRegDblkSize.setStatus('mandatory')
capiApplInfoStr = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiApplInfoStr.setStatus('mandatory')
capiListenTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 2), )
if mibBuilder.loadTexts: capiListenTable.setStatus('mandatory')
capiListenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiListenApplication"))
if mibBuilder.loadTexts: capiListenEntry.setStatus('mandatory')
capiListenApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenApplication.setStatus('mandatory')
capiListenController = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 2), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenController.setStatus('mandatory')
capiListenServiceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 3), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenServiceMask.setStatus('mandatory')
capiListenEazMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 4), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenEazMask.setStatus('mandatory')
capiListenInfoMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 5), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenInfoMask.setStatus('mandatory')
capiListenCipMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 6), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenCipMask.setStatus('mandatory')
capiListenCipMask2 = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 2, 1, 7), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiListenCipMask2.setStatus('mandatory')
capiPlciTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 3), )
if mibBuilder.loadTexts: capiPlciTable.setStatus('mandatory')
capiPlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiPlciNumber"))
if mibBuilder.loadTexts: capiPlciEntry.setStatus('mandatory')
capiPlciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 1), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciNumber.setStatus('mandatory')
capiPlciApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciApplication.setStatus('mandatory')
capiPlciController = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 3), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciController.setStatus('mandatory')
capiPlciState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("p-0", 1), ("p-1", 2), ("p-2", 3), ("p-3", 4), ("p-4", 5), ("p-5", 6), ("p-6", 7), ("p-7", 8), ("p-act", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciState.setStatus('mandatory')
capiPlciSelectB2Proto = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 241, 242))).clone(namedValues=NamedValues(("undef", 1), ("x75", 2), ("hdlccrc", 3), ("trans", 4), ("sdlc", 5), ("x75btx", 6), ("fax", 7), ("lapd", 8), ("v110trans", 9), ("v110sdlc", 10), ("v110x75", 11), ("txonly", 12), ("modem", 241), ("v110sync", 242)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciSelectB2Proto.setStatus('mandatory')
capiPlciSelectB2Dlpd = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciSelectB2Dlpd.setStatus('mandatory')
capiPlciSelectB3Proto = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("undef", 1), ("t70nl", 2), ("iso8208", 3), ("t90", 4), ("trans", 5), ("t30", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciSelectB3Proto.setStatus('mandatory')
capiPlciSelectB3Ncpd = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciSelectB3Ncpd.setStatus('mandatory')
capiPlciB1Proto = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("undef", 1), ("hdlc", 2), ("trans", 3), ("v110trans", 4), ("v110hdlc", 5), ("faxg3", 6), ("hdlcinv", 7), ("hdlc56", 8), ("modemneg", 9), ("modemasync", 10), ("modemsync", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciB1Proto.setStatus('mandatory')
capiPlciB1Config = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciB1Config.setStatus('mandatory')
capiPlciB2Proto = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("undef", 1), ("x75", 2), ("trans", 3), ("sdlc", 4), ("lapd", 5), ("t30", 6), ("ppp", 7), ("transerr", 8), ("modem", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciB2Proto.setStatus('mandatory')
capiPlciB2Config = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciB2Config.setStatus('mandatory')
capiPlciB3Proto = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9))).clone(namedValues=NamedValues(("undef", 1), ("trans", 2), ("t90", 3), ("iso8208", 4), ("x25dce", 5), ("t30", 6), ("t30ext", 7), ("modem", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciB3Proto.setStatus('mandatory')
capiPlciB3Config = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciB3Config.setStatus('mandatory')
capiPlciCipValue = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciCipValue.setStatus('mandatory')
capiPlciInfoMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 3, 1, 16), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiPlciInfoMask.setStatus('mandatory')
capiNcciTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 4), )
if mibBuilder.loadTexts: capiNcciTable.setStatus('mandatory')
capiNcciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 4, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiNcciNumber"))
if mibBuilder.loadTexts: capiNcciEntry.setStatus('mandatory')
capiNcciNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 4, 1, 1), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiNcciNumber.setStatus('mandatory')
capiNcciApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiNcciApplication.setStatus('mandatory')
capiNcciPlci = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 4, 1, 3), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiNcciPlci.setStatus('mandatory')
capiNcciState = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("n-0", 1), ("n-1", 2), ("n-2", 3), ("n-3", 4), ("n-4", 5), ("n-5", 6), ("n-act", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiNcciState.setStatus('mandatory')
capiInfoTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 5), )
if mibBuilder.loadTexts: capiInfoTable.setStatus('mandatory')
capiInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiInfoApplication"))
if mibBuilder.loadTexts: capiInfoEntry.setStatus('mandatory')
capiInfoApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoApplication.setStatus('mandatory')
capiInfoPlci = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 2), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoPlci.setStatus('mandatory')
capiInfoNcci = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 3), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoNcci.setStatus('mandatory')
capiInfoC1Command = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 64, 128, 129, 130, 131, 132, 133, 134, 135))).clone(namedValues=NamedValues(("resetb3", 1), ("connect", 2), ("conact", 3), ("disc", 4), ("listen", 5), ("param", 6), ("info", 7), ("data", 8), ("conninfo", 9), ("dtmf", 10), ("selb2", 64), ("selb3", 128), ("listenb3", 129), ("conb3", 130), ("conb3act", 131), ("discb3", 132), ("b3param", 133), ("datab3", 134), ("handset", 135)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoC1Command.setStatus('mandatory')
capiInfoC2Command = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 8, 65, 128, 130, 131, 132, 134, 135, 136, 255))).clone(namedValues=NamedValues(("alert", 1), ("connect", 2), ("conact", 3), ("disc", 4), ("listen", 5), ("info", 8), ("selectb", 65), ("facility", 128), ("conb3", 130), ("conb3act", 131), ("discb3", 132), ("datab3", 134), ("resetb3", 135), ("conb3t90", 136), ("manufact", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoC2Command.setStatus('mandatory')
capiInfoSubCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("req", 1), ("conf", 2), ("ind", 3), ("resp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoSubCommand.setStatus('mandatory')
capiInfoNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 5, 1, 7), HexValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiInfoNumber.setStatus('mandatory')
capiConfigTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 6), )
if mibBuilder.loadTexts: capiConfigTable.setStatus('mandatory')
capiConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiConfigStkNumber"))
if mibBuilder.loadTexts: capiConfigEntry.setStatus('mandatory')
capiConfigStkNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: capiConfigStkNumber.setStatus('mandatory')
capiConfigFaxG3RcvSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("r4800", 1), ("r7200", 2), ("r9600", 3), ("r14400", 4), ("maximum", 5), ("not-available", 6), ("delete", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigFaxG3RcvSpeed.setStatus('mandatory')
capiConfigFaxG3ECM = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("not-available", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigFaxG3ECM.setStatus('mandatory')
capiConfigFaxG3Header = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("logo-header", 1), ("no-logo", 2), ("no-header", 3), ("not-available", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigFaxG3Header.setStatus('mandatory')
capiConfigVoiceCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reverse", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigVoiceCoding.setStatus('mandatory')
capiConfigSendAlerting = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("never", 1), ("ever", 2), ("voice-only", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigSendAlerting.setStatus('mandatory')
capiConfigV42bis = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("not-available", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigV42bis.setStatus('mandatory')
capiConfigModemDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("modem-profile-1", 1), ("modem-profile-2", 2), ("modem-profile-3", 3), ("modem-profile-4", 4), ("modem-profile-5", 5), ("modem-profile-6", 6), ("modem-profile-7", 7), ("modem-profile-8", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigModemDefault.setStatus('mandatory')
capiConfigFaxModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("v17", 1), ("v33", 2), ("v29", 3), ("v17s", 5), ("v33s", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigFaxModulation.setStatus('mandatory')
capiConfigFax12000 = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigFax12000.setStatus('mandatory')
capiConfigFaxTXLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("db0", 1), ("db3", 2), ("db6", 3), ("db9", 4), ("db12", 5), ("db15", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiConfigFaxTXLevel.setStatus('mandatory')
capiMultiControllerTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 7, 7), )
if mibBuilder.loadTexts: capiMultiControllerTable.setStatus('mandatory')
capiMultiControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 7, 7, 1), ).setIndexNames((0, "BIANCA-BRICK-CAPI-MIB", "capiControllerNumber"))
if mibBuilder.loadTexts: capiMultiControllerEntry.setStatus('mandatory')
capiControllerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiControllerNumber.setStatus('mandatory')
capiControllerStkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 7, 1, 2), BitValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiControllerStkMask.setStatus('mandatory')
capiControllerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 7, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("capi11", 1), ("capi20", 2), ("delete", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: capiControllerVersion.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-CAPI-MIB", capiListenInfoMask=capiListenInfoMask, capiNcciEntry=capiNcciEntry, enterprises=enterprises, capiPlciB3Proto=capiPlciB3Proto, dod=dod, capiListenApplication=capiListenApplication, capiPlciInfoMask=capiPlciInfoMask, capiInfoC2Command=capiInfoC2Command, capiMultiControllerTable=capiMultiControllerTable, capiInfoTable=capiInfoTable, capiListenCipMask=capiListenCipMask, capiControllerStkMask=capiControllerStkMask, capiMultiControllerEntry=capiMultiControllerEntry, capiListenCipMask2=capiListenCipMask2, capiPlciNumber=capiPlciNumber, capiListenServiceMask=capiListenServiceMask, capiPlciB1Proto=capiPlciB1Proto, capiNcciPlci=capiNcciPlci, bintec=bintec, capiPlciApplication=capiPlciApplication, capiApplTable=capiApplTable, capiNcciNumber=capiNcciNumber, capiApplInfoStr=capiApplInfoStr, capiInfoC1Command=capiInfoC1Command, capiInfoApplication=capiInfoApplication, capiConfigEntry=capiConfigEntry, capiControllerNumber=capiControllerNumber, capiApplRegDblkSize=capiApplRegDblkSize, capiApplEntry=capiApplEntry, capiInfoNcci=capiInfoNcci, capiInfoSubCommand=capiInfoSubCommand, capiListenEntry=capiListenEntry, capiConfigVoiceCoding=capiConfigVoiceCoding, capiInfoNumber=capiInfoNumber, HexValue=HexValue, capiConfigTable=capiConfigTable, capiApplRegMsgCnt=capiApplRegMsgCnt, capiApplRegLevel3Cnt=capiApplRegLevel3Cnt, capiConfigFaxModulation=capiConfigFaxModulation, capiListenController=capiListenController, capiApplVersion=capiApplVersion, capiInfoEntry=capiInfoEntry, capiPlciState=capiPlciState, capiNcciTable=capiNcciTable, capiPlciTable=capiPlciTable, capiPlciSelectB3Ncpd=capiPlciSelectB3Ncpd, internet=internet, capiInfoPlci=capiInfoPlci, capiApplByteOrder=capiApplByteOrder, bibo=bibo, capiConfigFaxG3Header=capiConfigFaxG3Header, capiApplRegDblkCnt=capiApplRegDblkCnt, capiConfigStkNumber=capiConfigStkNumber, capiListenEazMask=capiListenEazMask, capiListenTable=capiListenTable, capiPlciEntry=capiPlciEntry, capiPlciB3Config=capiPlciB3Config, capiPlciSelectB2Proto=capiPlciSelectB2Proto, capiConfigModemDefault=capiConfigModemDefault, capiControllerVersion=capiControllerVersion, capiPlciSelectB2Dlpd=capiPlciSelectB2Dlpd, capiConfigSendAlerting=capiConfigSendAlerting, capiNcciApplication=capiNcciApplication, capi=capi, capiPlciB2Proto=capiPlciB2Proto, capiPlciSelectB3Proto=capiPlciSelectB3Proto, capiPlciB1Config=capiPlciB1Config, capiApplNumber=capiApplNumber, capiConfigFaxG3RcvSpeed=capiConfigFaxG3RcvSpeed, capiPlciB2Config=capiPlciB2Config, capiNcciState=capiNcciState, private=private, capiConfigFaxTXLevel=capiConfigFaxTXLevel, capiPlciCipValue=capiPlciCipValue, capiConfigV42bis=capiConfigV42bis, capiConfigFax12000=capiConfigFax12000, capiPlciController=capiPlciController, org=org, capiConfigFaxG3ECM=capiConfigFaxG3ECM)
