#
# PySNMP MIB module CADANT-HW-MEAS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-HW-MEAS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:28:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
cadIf3CmtsCmUsStatusChIfIndex, = mibBuilder.importSymbols("CADANT-CMTS-IF3-MIB", "cadIf3CmtsCmUsStatusChIfIndex")
cadIfMacDomainIfIndex, = mibBuilder.importSymbols("CADANT-CMTS-LAYER2CMTS-MIB", "cadIfMacDomainIfIndex")
cadIfCmtsCmStatusMacAddress, = mibBuilder.importSymbols("CADANT-CMTS-MAC-MIB", "cadIfCmtsCmStatusMacAddress")
cadEquipment, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadEquipment")
CardId, CadIfDirection, PortId = mibBuilder.importSymbols("CADANT-TC", "CardId", "CadIfDirection", "PortId")
TenthdB, = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdB")
IfDirection, = mibBuilder.importSymbols("DOCS-QOS3-MIB", "IfDirection")
docsSubmgt3FilterGrpEntry, = mibBuilder.importSymbols("DOCS-SUBMGT3-MIB", "docsSubmgt3FilterGrpEntry")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
pktcEScTapStreamIndex, pktcEScTapMediationContentId = mibBuilder.importSymbols("PKTC-ES-TAP-MIB", "pktcEScTapStreamIndex", "pktcEScTapMediationContentId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, Counter32, ObjectIdentity, ModuleIdentity, Counter64, NotificationType, Bits, Integer32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Counter32", "ObjectIdentity", "ModuleIdentity", "Counter64", "NotificationType", "Bits", "Integer32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32")
TruthValue, DisplayString, TimeStamp, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TimeStamp", "MacAddress", "TextualConvention")
cadHardwareMeasMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2))
cadHardwareMeasMib.setRevisions(('2015-08-27 00:00', '2015-07-13 00:00', '2015-06-03 00:00', '2014-10-14 00:00', '2014-06-13 00:00', '2014-06-04 00:00', '2013-11-22 00:00', '2012-10-30 00:00', '2012-05-09 00:00', '2011-08-31 00:00', '2011-06-29 00:00', '2011-02-28 00:00', '2011-02-24 00:00', '2011-02-18 00:00', '2010-11-22 00:00', '2010-03-09 00:00', '2008-11-24 00:00', '2008-11-21 00:00', '2008-11-05 00:00', '2008-04-24 00:00', '2006-09-14 00:00', '2006-04-14 00:00', '2005-07-13 00:00', '2004-12-10 00:00', '2004-08-31 00:00', '2004-04-09 00:00', '2004-03-09 00:00', '2004-02-23 00:00', '2004-02-18 00:00', '2004-02-15 00:00', '2004-01-24 00:00', '2003-12-18 00:00', '2003-12-10 00:00', '2003-09-19 00:00', '2003-08-26 00:00', '2003-07-30 00:00', '2002-05-06 00:00',))
if mibBuilder.loadTexts: cadHardwareMeasMib.setLastUpdated('201508270000Z')
if mibBuilder.loadTexts: cadHardwareMeasMib.setOrganization('Arris International, Inc.')
class DFIDIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class PktClassId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

class SFIDIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class UFIDIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32768)

class SIDValue(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 16384)

class TMSide(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("tma", 1), ("tmb", 2))

cadantHWMeasGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 1))
cadantFabActualDepth = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantFabActualDepth.setStatus('current')
cadantFabAvgDepth = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantFabAvgDepth.setStatus('current')
cadantUPortMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3), )
if mibBuilder.loadTexts: cadantUPortMeasTable.setStatus('current')
cadantUPortMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1), ).setIndexNames((0, "CADANT-HW-MEAS-MIB", "cadantUPortMeasCardId"), (0, "CADANT-HW-MEAS-MIB", "cadantUPortMeasPortId"))
if mibBuilder.loadTexts: cadantUPortMeasEntry.setStatus('current')
cadantUPortMeasCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 1), CardId())
if mibBuilder.loadTexts: cadantUPortMeasCardId.setStatus('current')
cadantUPortMeasPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 2), PortId())
if mibBuilder.loadTexts: cadantUPortMeasPortId.setStatus('current')
cadantUPortMeasUcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasUcastFrms.setStatus('current')
cadantUPortMeasMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasMcastFrms.setStatus('current')
cadantUPortMeasBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastFrms.setStatus('current')
cadantUPortMeasUcastDataFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasUcastDataFrms.setStatus('current')
cadantUPortMeasMcastDataFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasMcastDataFrms.setStatus('current')
cadantUPortMeasBcastDataFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastDataFrms.setStatus('current')
cadantUPortMeasDiscardFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasDiscardFrms.setStatus('current')
cadantUPortMeasIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasIfInOctets.setStatus('current')
cadantUPortMeasIfInDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasIfInDataOctets.setStatus('current')
cadantUPortMeasIfInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasIfInUnknownProtos.setStatus('current')
cadantUPortMeasAppMinusBWReqFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasAppMinusBWReqFrms.setStatus('current')
cadantUPortMeasErroredFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasErroredFrms.setStatus('current')
cadantUPortMeasFilteredFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasFilteredFrms.setStatus('current')
cadantUPortMeasBcastReqOpps = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastReqOpps.setStatus('current')
cadantUPortMeasBcastReqColls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastReqColls.setStatus('current')
cadantUPortMeasBcastReqNoEnergies = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastReqNoEnergies.setStatus('current')
cadantUPortMeasBcastReqRxPwr1s = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastReqRxPwr1s.setStatus('current')
cadantUPortMeasBcastReqRxPwr2s = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasBcastReqRxPwr2s.setStatus('current')
cadantUPortMeasInitMaintOpps = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasInitMaintOpps.setStatus('current')
cadantUPortMeasInitMaintColls = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasInitMaintColls.setStatus('current')
cadantUPortMeasInitMaintNoEnergies = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasInitMaintNoEnergies.setStatus('current')
cadantUPortMeasInitMaintRxPwr1s = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasInitMaintRxPwr1s.setStatus('current')
cadantUPortMeasInitMaintRxPwr2s = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUPortMeasInitMaintRxPwr2s.setStatus('current')
cadantDPortMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4), )
if mibBuilder.loadTexts: cadantDPortMeasTable.setStatus('current')
cadantDPortMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1), ).setIndexNames((0, "CADANT-HW-MEAS-MIB", "cadantDPortMeasCardId"), (0, "CADANT-HW-MEAS-MIB", "cadantDPortMeasPortId"))
if mibBuilder.loadTexts: cadantDPortMeasEntry.setStatus('current')
cadantDPortMeasCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 1), CardId())
if mibBuilder.loadTexts: cadantDPortMeasCardId.setStatus('current')
cadantDPortMeasPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 2), PortId())
if mibBuilder.loadTexts: cadantDPortMeasPortId.setStatus('current')
cadantDPortMeasIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutOctets.setStatus('current')
cadantDPortMeasIfOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutUcastPkts.setStatus('current')
cadantDPortMeasIfOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutMcastPkts.setStatus('current')
cadantDPortMeasIfOutBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutBcastPkts.setStatus('current')
cadantDPortMeasIfOutDataOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutDataOctets.setStatus('current')
cadantDPortMeasIfOutUcastDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutUcastDataPkts.setStatus('current')
cadantDPortMeasIfOutMcastDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutMcastDataPkts.setStatus('current')
cadantDPortMeasIfOutBcastDataPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutBcastDataPkts.setStatus('current')
cadantDPortMeasGotNoDMACs = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasGotNoDMACs.setStatus('current')
cadantDPortMeasGotNoClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasGotNoClasses.setStatus('current')
cadantDPortMeasSyncPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasSyncPkts.setStatus('current')
cadantDPortMeasAppUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasAppUcastPkts.setStatus('current')
cadantDPortMeasAppMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasAppMcastPkts.setStatus('current')
cadantDPortMeasIfOutTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasIfOutTotalOctets.setStatus('current')
cadantDPortMeasOfdmIfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasOfdmIfSpeed.setStatus('current')
cadantDPortMeasOfdmHighestAvgBitsPerSubc = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasOfdmHighestAvgBitsPerSubc.setStatus('current')
cadantDPortMeasOfdmNumDataSubc = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasOfdmNumDataSubc.setStatus('current')
cadantDPortMeasOfdmChanUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 4, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantDPortMeasOfdmChanUtilization.setStatus('current')
cadantUFIDMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6), )
if mibBuilder.loadTexts: cadantUFIDMeasTable.setStatus('current')
cadantUFIDMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-HW-MEAS-MIB", "cadantUFIDMeasSID"))
if mibBuilder.loadTexts: cadantUFIDMeasEntry.setStatus('current')
cadantUFIDMeasSID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 3), SIDValue())
if mibBuilder.loadTexts: cadantUFIDMeasSID.setStatus('current')
cadantUFIDMeasPktsSGreedyDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasPktsSGreedyDrop.setStatus('current')
cadantUFIDMeasBytsOtherDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasBytsOtherDrop.setStatus('current')
cadantUFIDMeasBytsArrived = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasBytsArrived.setStatus('current')
cadantUFIDMeasPktsArrived = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasPktsArrived.setStatus('current')
cadantUFIDMeasSIDCorrecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDCorrecteds.setStatus('current')
cadantUFIDMeasSIDUnerroreds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDUnerroreds.setStatus('current')
cadantUFIDMeasSIDUnCorrecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDUnCorrecteds.setStatus('current')
cadantUFIDMeasSIDNoUniqueWordDetecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDNoUniqueWordDetecteds.setStatus('current')
cadantUFIDMeasSIDCollidedBursts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDCollidedBursts.setStatus('current')
cadantUFIDMeasSIDNoEnergyDetecteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDNoEnergyDetecteds.setStatus('current')
cadantUFIDMeasSIDLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDLengthErrors.setStatus('current')
cadantUFIDMeasSIDMACErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDMACErrors.setStatus('current')
cadantUFIDMeasMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 17), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasMacAddress.setStatus('current')
cadantUFIDMeasSCN = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSCN.setStatus('current')
cadantUFIDMeasSFID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 19), SFIDIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSFID.setStatus('current')
cadantUFIDMeasPHSUnknowns = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasPHSUnknowns.setStatus('current')
cadantUFIDMeasFragPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasFragPkts.setStatus('current')
cadantUFIDMeasIncompletePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasIncompletePkts.setStatus('current')
cadantUFIDMeasConcatBursts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasConcatBursts.setStatus('current')
cadantUFIDMeasSIDSignalNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 24), TenthdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDSignalNoise.setStatus('current')
cadantUFIDMeasSIDMicroreflections = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDMicroreflections.setStatus('current')
cadantUFIDMeasSIDHCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDHCSErrors.setStatus('current')
cadantUFIDMeasSIDCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDCRCErrors.setStatus('current')
cadantUFIDMeasUFIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 28), UFIDIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasUFIDIndex.setStatus('current')
cadantUFIDMeasGateID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasGateID.setStatus('current')
cadantUFIDMeasSIDMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 30), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDMacIfIndex.setStatus('current')
cadantUFIDMeasSIDBonded = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasSIDBonded.setStatus('current')
cadantUFIDMeasCcfStatsSgmtValids = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 32), Counter32()).setUnits('segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasCcfStatsSgmtValids.setStatus('current')
cadantUFIDMeasCcfStatsSgmtLost = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 33), Counter32()).setUnits('segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasCcfStatsSgmtLost.setStatus('current')
cadantUFIDMeasCcfStatsSgmtDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 6, 1, 34), Counter32()).setUnits('segments').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantUFIDMeasCcfStatsSgmtDrop.setStatus('current')
cadantEtherPhyMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10), )
if mibBuilder.loadTexts: cadantEtherPhyMeasTable.setStatus('current')
cadantEtherPhyMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1), ).setIndexNames((0, "CADANT-HW-MEAS-MIB", "cadantEtherPhyMeasCardId"), (0, "CADANT-HW-MEAS-MIB", "cadantEtherPhyMeasPortId"))
if mibBuilder.loadTexts: cadantEtherPhyMeasEntry.setStatus('current')
cadantEtherPhyMeasCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 1), CardId())
if mibBuilder.loadTexts: cadantEtherPhyMeasCardId.setStatus('current')
cadantEtherPhyMeasPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 2), PortId())
if mibBuilder.loadTexts: cadantEtherPhyMeasPortId.setStatus('current')
cadantEtherPhyMeasRxOctOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxOctOK.setStatus('current')
cadantEtherPhyMeasRxUniOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxUniOK.setStatus('current')
cadantEtherPhyMeasRxMultiOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxMultiOK.setStatus('current')
cadantEtherPhyMeasRxBroadOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxBroadOK.setStatus('current')
cadantEtherPhyMeasRxOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxOverflow.setStatus('current')
cadantEtherPhyMeasRxNormAlign = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxNormAlign.setStatus('current')
cadantEtherPhyMeasRxNormCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxNormCRC.setStatus('current')
cadantEtherPhyMeasRxLongOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxLongOK.setStatus('current')
cadantEtherPhyMeasRxLongCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxLongCRC.setStatus('current')
cadantEtherPhyMeasRxFalsCRS = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxFalsCRS.setStatus('current')
cadantEtherPhyMeasRxSymbolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxSymbolErrors.setStatus('current')
cadantEtherPhyMeasRxPause = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxPause.setStatus('current')
cadantEtherPhyMeasTxOctOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxOctOK.setStatus('current')
cadantEtherPhyMeasTxUniOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxUniOK.setStatus('current')
cadantEtherPhyMeasTxMultiOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxMultiOK.setStatus('current')
cadantEtherPhyMeasTxBroadOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxBroadOK.setStatus('current')
cadantEtherPhyMeasTxScol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxScol.setStatus('current')
cadantEtherPhyMeasTxMcol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxMcol.setStatus('current')
cadantEtherPhyMeasTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxDeferred.setStatus('current')
cadantEtherPhyMeasTxLcol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxLcol.setStatus('current')
cadantEtherPhyMeasTxCcol = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxCcol.setStatus('current')
cadantEtherPhyMeasTxErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxErr.setStatus('current')
cadantEtherPhyMeasTxPause = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasTxPause.setStatus('current')
cadantEtherPhyMeasRxShortOK = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxShortOK.setStatus('current')
cadantEtherPhyMeasRxShortCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxShortCRC.setStatus('current')
cadantEtherPhyMeasRxRunt = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxRunt.setStatus('current')
cadantEtherPhyMeasRxOctBad = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 10, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadantEtherPhyMeasRxOctBad.setStatus('current')
cadDFIDMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14), )
if mibBuilder.loadTexts: cadDFIDMeasTable.setStatus('current')
cadDFIDMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-HW-MEAS-MIB", "cadDFIDMeasIndex"))
if mibBuilder.loadTexts: cadDFIDMeasEntry.setStatus('current')
cadDFIDMeasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 3), SFIDIndex())
if mibBuilder.loadTexts: cadDFIDMeasIndex.setStatus('current')
cadDFIDMeasBytsArrived = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasBytsArrived.setStatus('current')
cadDFIDMeasPktsArrived = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasPktsArrived.setStatus('current')
cadDFIDMeasBytsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasBytsDropped.setStatus('current')
cadDFIDMeasPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasPktsDropped.setStatus('current')
cadDFIDMeasBytsUnkDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasBytsUnkDropped.setStatus('current')
cadDFIDMeasDFID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 9), DFIDIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasDFID.setStatus('current')
cadDFIDMeasPHSUnknowns = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasPHSUnknowns.setStatus('current')
cadDFIDMeasMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasMacAddress.setStatus('current')
cadDFIDMeasSCN = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasSCN.setStatus('current')
cadDFIDMeasPolicedDelayPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasPolicedDelayPkts.setStatus('current')
cadDFIDMeasGateID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 14, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDFIDMeasGateID.setStatus('current')
cadQosPktClassMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 16), )
if mibBuilder.loadTexts: cadQosPktClassMeasTable.setStatus('current')
cadQosPktClassMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 16, 1), ).setIndexNames((0, "CADANT-HW-MEAS-MIB", "cadQosPktClassMeasIfIndex"), (0, "CADANT-HW-MEAS-MIB", "cadQosPktClassMeasSFID"), (0, "CADANT-HW-MEAS-MIB", "cadQosPktClassMeasPktClassId"))
if mibBuilder.loadTexts: cadQosPktClassMeasEntry.setStatus('current')
cadQosPktClassMeasIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 16, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cadQosPktClassMeasIfIndex.setStatus('current')
cadQosPktClassMeasSFID = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 16, 1, 2), SFIDIndex())
if mibBuilder.loadTexts: cadQosPktClassMeasSFID.setStatus('current')
cadQosPktClassMeasPktClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 16, 1, 3), PktClassId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadQosPktClassMeasPktClassId.setStatus('current')
cadQosPktClassMeasPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 16, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadQosPktClassMeasPkts.setStatus('current')
cadIfMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18), )
if mibBuilder.loadTexts: cadIfMeasTable.setStatus('current')
cadIfMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadIfMeasEntry.setStatus('current')
cadIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInOctets.setStatus('current')
cadIfInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInUcastPkts.setStatus('current')
cadIfInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInMulticastPkts.setStatus('current')
cadIfInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInBroadcastPkts.setStatus('current')
cadIfInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInDiscards.setStatus('current')
cadIfInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInErrors.setStatus('current')
cadIfInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfInUnknownProtos.setStatus('current')
cadIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfOutOctets.setStatus('current')
cadIfOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfOutUcastPkts.setStatus('current')
cadIfOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfOutMulticastPkts.setStatus('current')
cadIfOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfOutBroadcastPkts.setStatus('current')
cadIfOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfOutDiscards.setStatus('current')
cadIfOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 18, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadIfOutErrors.setStatus('current')
cadDCardMeasTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20), )
if mibBuilder.loadTexts: cadDCardMeasTable.setStatus('current')
cadDCardMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1), ).setIndexNames((0, "CADANT-HW-MEAS-MIB", "cadDCardMeasCardId"))
if mibBuilder.loadTexts: cadDCardMeasEntry.setStatus('current')
cadDCardMeasCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 1), CardId())
if mibBuilder.loadTexts: cadDCardMeasCardId.setStatus('current')
cadDCardIpInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardIpInReceives.setStatus('current')
cadDCardIpInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardIpInHdrErrors.setStatus('current')
cadDCardIpInAddrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardIpInAddrErrors.setStatus('current')
cadDCardDhcpThrottleDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardDhcpThrottleDropPkts.setStatus('current')
cadDCardArpThrottleDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardArpThrottleDropPkts.setStatus('current')
cadDCardDhcpV6ThrottleDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardDhcpV6ThrottleDropPkts.setStatus('current')
cadDCardNdThrottleDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardNdThrottleDropPkts.setStatus('current')
cadDCardIgmpThrottleDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 20, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadDCardIgmpThrottleDropPkts.setStatus('current')
cadInterfaceUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23), )
if mibBuilder.loadTexts: cadInterfaceUtilizationTable.setStatus('current')
cadInterfaceUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-HW-MEAS-MIB", "cadInterfaceUtilizationDirection"))
if mibBuilder.loadTexts: cadInterfaceUtilizationEntry.setStatus('current')
cadInterfaceUtilizationDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23, 1, 1), CadIfDirection())
if mibBuilder.loadTexts: cadInterfaceUtilizationDirection.setStatus('current')
cadInterfaceUtilizationPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadInterfaceUtilizationPercentage.setStatus('current')
cadInterfaceUtilizationAvgContSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadInterfaceUtilizationAvgContSlots.setStatus('current')
cadInterfaceHighResUtilizationPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('Hundredth of a percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cadInterfaceHighResUtilizationPercentage.setStatus('current')
cadInterfaceIntervalOctetsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 23, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadInterfaceIntervalOctetsForwarded.setStatus('current')
cadSubMgtPktFilterExtTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 25), )
if mibBuilder.loadTexts: cadSubMgtPktFilterExtTable.setStatus('current')
cadSubMgtPktFilterExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 25, 1), )
docsSubmgt3FilterGrpEntry.registerAugmentions(("CADANT-HW-MEAS-MIB", "cadSubMgtPktFilterExtEntry"))
cadSubMgtPktFilterExtEntry.setIndexNames(*docsSubmgt3FilterGrpEntry.getIndexNames())
if mibBuilder.loadTexts: cadSubMgtPktFilterExtEntry.setStatus('current')
cadSubMgtPktFilterMatchesReset = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 25, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSubMgtPktFilterMatchesReset.setStatus('current')
cadSubMgtPktFilterLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 25, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadSubMgtPktFilterLastChanged.setStatus('current')
cadSubMgtPktFilterCaptureEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 25, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadSubMgtPktFilterCaptureEnabled.setStatus('current')
cadLaesCountTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 26), )
if mibBuilder.loadTexts: cadLaesCountTable.setStatus('current')
cadLaesCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 26, 1), ).setIndexNames((0, "PKTC-ES-TAP-MIB", "pktcEScTapMediationContentId"), (0, "PKTC-ES-TAP-MIB", "pktcEScTapStreamIndex"))
if mibBuilder.loadTexts: cadLaesCountEntry.setStatus('current')
cadLaesCountMacDomainIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 26, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadLaesCountMacDomainIfIndex.setStatus('current')
cadLaesCountStreamDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 26, 1, 2), IfDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadLaesCountStreamDirection.setStatus('current')
cadLaesCountInterceptedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 26, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadLaesCountInterceptedPackets.setStatus('current')
cadLaesCountInterceptDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 26, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadLaesCountInterceptDrops.setStatus('current')
cadFftUpstreamChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 24), )
if mibBuilder.loadTexts: cadFftUpstreamChannelTable.setStatus('current')
cadFftUpstreamChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadFftUpstreamChannelEntry.setStatus('current')
cadFftInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 24, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadFftInProgress.setStatus('current')
cadFftCurrentTriggers = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10, 2, 24, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadFftCurrentTriggers.setStatus('current')
mibBuilder.exportSymbols("CADANT-HW-MEAS-MIB", cadantDPortMeasOfdmNumDataSubc=cadantDPortMeasOfdmNumDataSubc, cadIfInUcastPkts=cadIfInUcastPkts, cadDCardDhcpV6ThrottleDropPkts=cadDCardDhcpV6ThrottleDropPkts, cadIfInMulticastPkts=cadIfInMulticastPkts, cadSubMgtPktFilterCaptureEnabled=cadSubMgtPktFilterCaptureEnabled, cadLaesCountMacDomainIfIndex=cadLaesCountMacDomainIfIndex, cadFftUpstreamChannelEntry=cadFftUpstreamChannelEntry, cadIfInOctets=cadIfInOctets, cadantEtherPhyMeasRxOctOK=cadantEtherPhyMeasRxOctOK, cadantEtherPhyMeasRxLongCRC=cadantEtherPhyMeasRxLongCRC, cadantUPortMeasMcastFrms=cadantUPortMeasMcastFrms, cadantUFIDMeasPHSUnknowns=cadantUFIDMeasPHSUnknowns, cadantUFIDMeasSIDUnerroreds=cadantUFIDMeasSIDUnerroreds, cadantEtherPhyMeasTxUniOK=cadantEtherPhyMeasTxUniOK, cadantEtherPhyMeasRxMultiOK=cadantEtherPhyMeasRxMultiOK, cadSubMgtPktFilterExtEntry=cadSubMgtPktFilterExtEntry, cadantEtherPhyMeasRxFalsCRS=cadantEtherPhyMeasRxFalsCRS, cadantUPortMeasUcastFrms=cadantUPortMeasUcastFrms, cadantEtherPhyMeasRxSymbolErrors=cadantEtherPhyMeasRxSymbolErrors, cadantUPortMeasIfInOctets=cadantUPortMeasIfInOctets, cadLaesCountEntry=cadLaesCountEntry, cadantUFIDMeasIncompletePkts=cadantUFIDMeasIncompletePkts, cadantEtherPhyMeasRxOctBad=cadantEtherPhyMeasRxOctBad, DFIDIndex=DFIDIndex, cadantUPortMeasMcastDataFrms=cadantUPortMeasMcastDataFrms, cadLaesCountInterceptDrops=cadLaesCountInterceptDrops, cadantUPortMeasBcastDataFrms=cadantUPortMeasBcastDataFrms, cadantDPortMeasGotNoDMACs=cadantDPortMeasGotNoDMACs, cadInterfaceHighResUtilizationPercentage=cadInterfaceHighResUtilizationPercentage, cadantUFIDMeasSIDCorrecteds=cadantUFIDMeasSIDCorrecteds, cadantEtherPhyMeasTxMultiOK=cadantEtherPhyMeasTxMultiOK, cadantUPortMeasTable=cadantUPortMeasTable, cadantFabAvgDepth=cadantFabAvgDepth, cadantDPortMeasIfOutBcastPkts=cadantDPortMeasIfOutBcastPkts, cadantUFIDMeasBytsArrived=cadantUFIDMeasBytsArrived, cadIfOutOctets=cadIfOutOctets, cadInterfaceIntervalOctetsForwarded=cadInterfaceIntervalOctetsForwarded, cadantUPortMeasEntry=cadantUPortMeasEntry, cadLaesCountTable=cadLaesCountTable, cadantDPortMeasPortId=cadantDPortMeasPortId, cadIfInDiscards=cadIfInDiscards, cadantEtherPhyMeasRxShortOK=cadantEtherPhyMeasRxShortOK, cadantEtherPhyMeasRxPause=cadantEtherPhyMeasRxPause, cadDFIDMeasSCN=cadDFIDMeasSCN, cadDCardNdThrottleDropPkts=cadDCardNdThrottleDropPkts, cadantUFIDMeasPktsArrived=cadantUFIDMeasPktsArrived, cadantDPortMeasIfOutMcastDataPkts=cadantDPortMeasIfOutMcastDataPkts, cadantUFIDMeasFragPkts=cadantUFIDMeasFragPkts, cadantEtherPhyMeasTxCcol=cadantEtherPhyMeasTxCcol, cadSubMgtPktFilterExtTable=cadSubMgtPktFilterExtTable, cadantUFIDMeasBytsOtherDrop=cadantUFIDMeasBytsOtherDrop, cadantDPortMeasIfOutUcastDataPkts=cadantDPortMeasIfOutUcastDataPkts, cadantUFIDMeasEntry=cadantUFIDMeasEntry, cadDFIDMeasBytsArrived=cadDFIDMeasBytsArrived, cadantUPortMeasIfInDataOctets=cadantUPortMeasIfInDataOctets, cadantUFIDMeasSFID=cadantUFIDMeasSFID, cadDCardMeasEntry=cadDCardMeasEntry, cadantDPortMeasIfOutDataOctets=cadantDPortMeasIfOutDataOctets, cadHardwareMeasMib=cadHardwareMeasMib, cadantUFIDMeasCcfStatsSgmtLost=cadantUFIDMeasCcfStatsSgmtLost, cadantUFIDMeasPktsSGreedyDrop=cadantUFIDMeasPktsSGreedyDrop, cadantUFIDMeasSIDMicroreflections=cadantUFIDMeasSIDMicroreflections, cadIfOutDiscards=cadIfOutDiscards, UFIDIndex=UFIDIndex, cadantUFIDMeasSIDBonded=cadantUFIDMeasSIDBonded, cadantEtherPhyMeasRxBroadOK=cadantEtherPhyMeasRxBroadOK, cadantEtherPhyMeasRxOverflow=cadantEtherPhyMeasRxOverflow, cadantEtherPhyMeasRxShortCRC=cadantEtherPhyMeasRxShortCRC, cadDCardArpThrottleDropPkts=cadDCardArpThrottleDropPkts, cadantUFIDMeasSIDHCSErrors=cadantUFIDMeasSIDHCSErrors, cadantUFIDMeasConcatBursts=cadantUFIDMeasConcatBursts, cadInterfaceUtilizationPercentage=cadInterfaceUtilizationPercentage, cadantEtherPhyMeasPortId=cadantEtherPhyMeasPortId, cadInterfaceUtilizationEntry=cadInterfaceUtilizationEntry, cadantUFIDMeasSIDNoUniqueWordDetecteds=cadantUFIDMeasSIDNoUniqueWordDetecteds, cadantUPortMeasInitMaintColls=cadantUPortMeasInitMaintColls, cadantDPortMeasIfOutBcastDataPkts=cadantDPortMeasIfOutBcastDataPkts, cadantEtherPhyMeasTxBroadOK=cadantEtherPhyMeasTxBroadOK, cadantDPortMeasEntry=cadantDPortMeasEntry, cadIfInUnknownProtos=cadIfInUnknownProtos, cadantDPortMeasIfOutOctets=cadantDPortMeasIfOutOctets, cadDCardIpInHdrErrors=cadDCardIpInHdrErrors, cadantUPortMeasBcastFrms=cadantUPortMeasBcastFrms, cadDCardDhcpThrottleDropPkts=cadDCardDhcpThrottleDropPkts, cadDFIDMeasIndex=cadDFIDMeasIndex, cadantEtherPhyMeasRxNormAlign=cadantEtherPhyMeasRxNormAlign, cadantEtherPhyMeasTxLcol=cadantEtherPhyMeasTxLcol, cadantEtherPhyMeasCardId=cadantEtherPhyMeasCardId, cadantDPortMeasIfOutUcastPkts=cadantDPortMeasIfOutUcastPkts, cadantDPortMeasAppMcastPkts=cadantDPortMeasAppMcastPkts, cadantUFIDMeasCcfStatsSgmtDrop=cadantUFIDMeasCcfStatsSgmtDrop, cadantEtherPhyMeasEntry=cadantEtherPhyMeasEntry, cadIfInErrors=cadIfInErrors, cadantEtherPhyMeasRxUniOK=cadantEtherPhyMeasRxUniOK, cadantUFIDMeasSIDSignalNoise=cadantUFIDMeasSIDSignalNoise, cadLaesCountInterceptedPackets=cadLaesCountInterceptedPackets, cadantUPortMeasFilteredFrms=cadantUPortMeasFilteredFrms, cadantEtherPhyMeasRxLongOK=cadantEtherPhyMeasRxLongOK, cadFftUpstreamChannelTable=cadFftUpstreamChannelTable, cadDCardIpInReceives=cadDCardIpInReceives, cadQosPktClassMeasPkts=cadQosPktClassMeasPkts, cadIfMeasEntry=cadIfMeasEntry, cadantUFIDMeasMacAddress=cadantUFIDMeasMacAddress, cadantDPortMeasOfdmIfSpeed=cadantDPortMeasOfdmIfSpeed, cadIfOutMulticastPkts=cadIfOutMulticastPkts, cadantUPortMeasIfInUnknownProtos=cadantUPortMeasIfInUnknownProtos, cadIfInBroadcastPkts=cadIfInBroadcastPkts, PYSNMP_MODULE_ID=cadHardwareMeasMib, cadantHWMeasGeneral=cadantHWMeasGeneral, cadantUPortMeasBcastReqOpps=cadantUPortMeasBcastReqOpps, cadantUPortMeasCardId=cadantUPortMeasCardId, cadantUFIDMeasSIDUnCorrecteds=cadantUFIDMeasSIDUnCorrecteds, cadantUPortMeasPortId=cadantUPortMeasPortId, cadantEtherPhyMeasTxOctOK=cadantEtherPhyMeasTxOctOK, cadantUFIDMeasCcfStatsSgmtValids=cadantUFIDMeasCcfStatsSgmtValids, cadIfOutUcastPkts=cadIfOutUcastPkts, cadDFIDMeasMacAddress=cadDFIDMeasMacAddress, cadantUFIDMeasSIDMACErrors=cadantUFIDMeasSIDMACErrors, cadantUPortMeasBcastReqRxPwr2s=cadantUPortMeasBcastReqRxPwr2s, cadIfMeasTable=cadIfMeasTable, cadFftCurrentTriggers=cadFftCurrentTriggers, cadantUFIDMeasTable=cadantUFIDMeasTable, cadantEtherPhyMeasTxErr=cadantEtherPhyMeasTxErr, cadDFIDMeasTable=cadDFIDMeasTable, cadantUFIDMeasSCN=cadantUFIDMeasSCN, SIDValue=SIDValue, cadSubMgtPktFilterMatchesReset=cadSubMgtPktFilterMatchesReset, cadantDPortMeasIfOutMcastPkts=cadantDPortMeasIfOutMcastPkts, cadantDPortMeasOfdmHighestAvgBitsPerSubc=cadantDPortMeasOfdmHighestAvgBitsPerSubc, cadDCardMeasTable=cadDCardMeasTable, cadDFIDMeasBytsDropped=cadDFIDMeasBytsDropped, cadIfOutBroadcastPkts=cadIfOutBroadcastPkts, cadantUFIDMeasSIDMacIfIndex=cadantUFIDMeasSIDMacIfIndex, cadDFIDMeasDFID=cadDFIDMeasDFID, cadantUPortMeasAppMinusBWReqFrms=cadantUPortMeasAppMinusBWReqFrms, cadantDPortMeasCardId=cadantDPortMeasCardId, cadantUFIDMeasSIDLengthErrors=cadantUFIDMeasSIDLengthErrors, cadantEtherPhyMeasTxPause=cadantEtherPhyMeasTxPause, cadantEtherPhyMeasRxNormCRC=cadantEtherPhyMeasRxNormCRC, cadantUPortMeasBcastReqNoEnergies=cadantUPortMeasBcastReqNoEnergies, cadantUPortMeasBcastReqRxPwr1s=cadantUPortMeasBcastReqRxPwr1s, cadDFIDMeasPktsArrived=cadDFIDMeasPktsArrived, cadantFabActualDepth=cadantFabActualDepth, cadantUFIDMeasSID=cadantUFIDMeasSID, cadIfOutErrors=cadIfOutErrors, cadQosPktClassMeasPktClassId=cadQosPktClassMeasPktClassId, PktClassId=PktClassId, cadantUPortMeasInitMaintOpps=cadantUPortMeasInitMaintOpps, cadDFIDMeasPolicedDelayPkts=cadDFIDMeasPolicedDelayPkts, cadInterfaceUtilizationTable=cadInterfaceUtilizationTable, cadInterfaceUtilizationAvgContSlots=cadInterfaceUtilizationAvgContSlots, cadantEtherPhyMeasTxDeferred=cadantEtherPhyMeasTxDeferred, cadantUFIDMeasSIDCRCErrors=cadantUFIDMeasSIDCRCErrors, cadantUPortMeasErroredFrms=cadantUPortMeasErroredFrms, cadantDPortMeasOfdmChanUtilization=cadantDPortMeasOfdmChanUtilization, TMSide=TMSide, cadQosPktClassMeasSFID=cadQosPktClassMeasSFID, cadantUPortMeasDiscardFrms=cadantUPortMeasDiscardFrms, cadantDPortMeasIfOutTotalOctets=cadantDPortMeasIfOutTotalOctets, cadantUPortMeasInitMaintRxPwr1s=cadantUPortMeasInitMaintRxPwr1s, cadQosPktClassMeasIfIndex=cadQosPktClassMeasIfIndex, cadantUFIDMeasUFIDIndex=cadantUFIDMeasUFIDIndex, SFIDIndex=SFIDIndex, cadSubMgtPktFilterLastChanged=cadSubMgtPktFilterLastChanged, cadantEtherPhyMeasTxScol=cadantEtherPhyMeasTxScol, cadantDPortMeasSyncPkts=cadantDPortMeasSyncPkts, cadDFIDMeasPktsDropped=cadDFIDMeasPktsDropped, cadDCardMeasCardId=cadDCardMeasCardId, cadantEtherPhyMeasTxMcol=cadantEtherPhyMeasTxMcol, cadantEtherPhyMeasTable=cadantEtherPhyMeasTable, cadQosPktClassMeasTable=cadQosPktClassMeasTable, cadFftInProgress=cadFftInProgress, cadantUPortMeasBcastReqColls=cadantUPortMeasBcastReqColls, cadantDPortMeasGotNoClasses=cadantDPortMeasGotNoClasses, cadantUFIDMeasSIDCollidedBursts=cadantUFIDMeasSIDCollidedBursts, cadQosPktClassMeasEntry=cadQosPktClassMeasEntry, cadantDPortMeasTable=cadantDPortMeasTable, cadLaesCountStreamDirection=cadLaesCountStreamDirection, cadantDPortMeasAppUcastPkts=cadantDPortMeasAppUcastPkts, cadDFIDMeasEntry=cadDFIDMeasEntry, cadDFIDMeasBytsUnkDropped=cadDFIDMeasBytsUnkDropped, cadantUFIDMeasGateID=cadantUFIDMeasGateID, cadDFIDMeasGateID=cadDFIDMeasGateID, cadantUFIDMeasSIDNoEnergyDetecteds=cadantUFIDMeasSIDNoEnergyDetecteds, cadantUPortMeasInitMaintRxPwr2s=cadantUPortMeasInitMaintRxPwr2s, cadDCardIgmpThrottleDropPkts=cadDCardIgmpThrottleDropPkts, cadInterfaceUtilizationDirection=cadInterfaceUtilizationDirection, cadantUPortMeasUcastDataFrms=cadantUPortMeasUcastDataFrms, cadantEtherPhyMeasRxRunt=cadantEtherPhyMeasRxRunt, cadDFIDMeasPHSUnknowns=cadDFIDMeasPHSUnknowns, cadDCardIpInAddrErrors=cadDCardIpInAddrErrors, cadantUPortMeasInitMaintNoEnergies=cadantUPortMeasInitMaintNoEnergies)
