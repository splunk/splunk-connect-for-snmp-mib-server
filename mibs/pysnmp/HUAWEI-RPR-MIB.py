#
# PySNMP MIB module HUAWEI-RPR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-RPR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:36:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
rprIfCurrentStatus, RprSpan, rprSpanIfIndex, rprSpanTotalRingletReservedRate, rprTopoImageEastProtectionStatus, rprTopoImageRinglet1Hops, rprIfRingOperModes, rprIfIndex, rprTopoImageRinglet0Hops, rprTopoImageStationIfIndex, rprTopoImageMacAddress, rprTopoImageStatus, rprTopoImageWestProtectionStatus, rprTopoImageIfIndex, rprSpanId, rprIfWrapConfig = mibBuilder.importSymbols("IEEE-802DOT17-RPR-MIB", "rprIfCurrentStatus", "RprSpan", "rprSpanIfIndex", "rprSpanTotalRingletReservedRate", "rprTopoImageEastProtectionStatus", "rprTopoImageRinglet1Hops", "rprIfRingOperModes", "rprIfIndex", "rprTopoImageRinglet0Hops", "rprTopoImageStationIfIndex", "rprTopoImageMacAddress", "rprTopoImageStatus", "rprTopoImageWestProtectionStatus", "rprTopoImageIfIndex", "rprSpanId", "rprIfWrapConfig")
ifName, ifIndex, InterfaceIndex, ifPhysAddress = mibBuilder.importSymbols("IF-MIB", "ifName", "ifIndex", "InterfaceIndex", "ifPhysAddress")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Bits, Counter64, iso, Counter32, TimeTicks, ObjectIdentity, Unsigned32, Gauge32, NotificationType, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Counter64", "iso", "Counter32", "TimeTicks", "ObjectIdentity", "Unsigned32", "Gauge32", "NotificationType", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwRPR = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36))
if mibBuilder.loadTexts: hwRPR.setLastUpdated('200601090000Z')
if mibBuilder.loadTexts: hwRPR.setOrganization('Huawei Technologies co.,Ltd.')
hwRPRObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1))
hwRPRIfEventTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 1), )
if mibBuilder.loadTexts: hwRPRIfEventTable.setStatus('current')
hwRPRIfEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 1, 1), ).setIndexNames((0, "HUAWEI-RPR-MIB", "hwRPRLogicIfIndex"), (0, "HUAWEI-RPR-MIB", "hwRPRLogicIfSpanId"))
if mibBuilder.loadTexts: hwRPRIfEventEntry.setStatus('current')
hwRPRLogicIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRPRLogicIfIndex.setStatus('current')
hwRPRLogicIfSpanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 1, 1, 2), RprSpan()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRPRLogicIfSpanId.setStatus('current')
hwRPRLogicIfEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sd", 1), ("sf", 2), ("mateerr", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRPRLogicIfEvent.setStatus('current')
hwRPRPhyIfEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("sdHFramerSDst", 1), ("sdHFramerSFst", 2), ("sdHFramerLOSst", 3), ("sdHFramerLOFst", 4), ("sdHFramerRDIst", 5), ("sdHFramerAISst", 6), ("sdHFramerREIst", 7), ("miscabling", 8), ("keepalive", 9), ("mateState", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRPRPhyIfEvent.setStatus('current')
hwRPRIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 2), )
if mibBuilder.loadTexts: hwRPRIfConfigTable.setStatus('current')
hwRPRIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 2, 1), ).setIndexNames((0, "HUAWEI-RPR-MIB", "hwRPRIfConfigIfIndex"))
if mibBuilder.loadTexts: hwRPRIfConfigEntry.setStatus('current')
hwRPRIfConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRPRIfConfigIfIndex.setStatus('current')
hwRPRLogicIfTotalBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1000, 2488, 10000))).clone(namedValues=NamedValues(("bandwidth1000", 1000), ("bandwidth2488", 2488), ("bandwidth10000", 10000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRPRLogicIfTotalBandWidth.setStatus('current')
hwRPRTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2))
hwRPRexcessReservedRateDefect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 1)).setObjects(("IEEE-802DOT17-RPR-MIB", "rprSpanTotalRingletReservedRate"))
if mibBuilder.loadTexts: hwRPRexcessReservedRateDefect.setStatus('current')
hwRPRprotMisconfigDefect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 2)).setObjects(("IEEE-802DOT17-RPR-MIB", "rprIfWrapConfig"), ("IEEE-802DOT17-RPR-MIB", "rprIfRingOperModes"))
if mibBuilder.loadTexts: hwRPRprotMisconfigDefect.setStatus('current')
hwRPRtopoChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 3)).setObjects(("IEEE-802DOT17-RPR-MIB", "rprTopoImageStationIfIndex"), ("IEEE-802DOT17-RPR-MIB", "rprTopoImageStatus"), ("IEEE-802DOT17-RPR-MIB", "rprTopoImageWestProtectionStatus"), ("IEEE-802DOT17-RPR-MIB", "rprTopoImageEastProtectionStatus"), ("IEEE-802DOT17-RPR-MIB", "rprIfCurrentStatus"))
if mibBuilder.loadTexts: hwRPRtopoChange.setStatus('current')
hwRPRtopoInvalidDefect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 4)).setObjects(("IF-MIB", "ifPhysAddress"), ("IEEE-802DOT17-RPR-MIB", "rprIfCurrentStatus"))
if mibBuilder.loadTexts: hwRPRtopoInvalidDefect.setStatus('current')
hwRPRduplicateMacAddressDefect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 5)).setObjects(("IF-MIB", "ifPhysAddress"), ("IEEE-802DOT17-RPR-MIB", "rprTopoImageRinglet0Hops"), ("IEEE-802DOT17-RPR-MIB", "rprTopoImageRinglet1Hops"))
if mibBuilder.loadTexts: hwRPRduplicateMacAddressDefect.setStatus('current')
hwRPRtopoInstabilityDefect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 6)).setObjects(("IF-MIB", "ifPhysAddress"))
if mibBuilder.loadTexts: hwRPRtopoInstabilityDefect.setStatus('current')
hwRPRtopoStabilityRestore = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 7)).setObjects(("IF-MIB", "ifPhysAddress"))
if mibBuilder.loadTexts: hwRPRtopoStabilityRestore.setStatus('current')
hwRPRPhyIfEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 8)).setObjects(("HUAWEI-RPR-MIB", "hwRPRLogicIfIndex"), ("HUAWEI-RPR-MIB", "hwRPRLogicIfSpanId"), ("HUAWEI-RPR-MIB", "hwRPRPhyIfEvent"))
if mibBuilder.loadTexts: hwRPRPhyIfEventTrap.setStatus('current')
hwRPRLogicIfEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 9)).setObjects(("HUAWEI-RPR-MIB", "hwRPRLogicIfIndex"), ("HUAWEI-RPR-MIB", "hwRPRLogicIfSpanId"), ("HUAWEI-RPR-MIB", "hwRPRLogicIfEvent"))
if mibBuilder.loadTexts: hwRPRLogicIfEventTrap.setStatus('current')
hwRPRNodeConErr = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 10)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRNodeConErr.setStatus('current')
hwRPRNodeConErrResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 11)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRNodeConErrResume.setStatus('current')
hwRPRNodeMisCabling = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 12)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRNodeMisCabling.setStatus('current')
hwRPRNodeMisCablingResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 13)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRNodeMisCablingResume.setStatus('current')
hwRPRMateErr = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 14)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRMateErr.setStatus('current')
hwRPRMateErrResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 15)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRMateErrResume.setStatus('current')
hwRPRLOS = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 16)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRLOS.setStatus('current')
hwRPRLOSResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 2, 17)).setObjects(("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwRPRLOSResume.setStatus('current')
hwRPRTrapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3))
hwRPRTrapCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3, 1))
hwRPRTrapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3, 1, 1)).setObjects(("HUAWEI-RPR-MIB", "hwRPRIfEventGroup"), ("HUAWEI-RPR-MIB", "hwRPRTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRPRTrapCompliance = hwRPRTrapCompliance.setStatus('current')
hwRPRTrapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3, 2))
hwRPRIfEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3, 2, 1)).setObjects(("HUAWEI-RPR-MIB", "hwRPRLogicIfIndex"), ("HUAWEI-RPR-MIB", "hwRPRLogicIfSpanId"), ("HUAWEI-RPR-MIB", "hwRPRPhyIfEvent"), ("HUAWEI-RPR-MIB", "hwRPRLogicIfEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRPRIfEventGroup = hwRPRIfEventGroup.setStatus('current')
hwRPRTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3, 2, 2)).setObjects(("HUAWEI-RPR-MIB", "hwRPRexcessReservedRateDefect"), ("HUAWEI-RPR-MIB", "hwRPRprotMisconfigDefect"), ("HUAWEI-RPR-MIB", "hwRPRtopoChange"), ("HUAWEI-RPR-MIB", "hwRPRtopoInvalidDefect"), ("HUAWEI-RPR-MIB", "hwRPRduplicateMacAddressDefect"), ("HUAWEI-RPR-MIB", "hwRPRtopoInstabilityDefect"), ("HUAWEI-RPR-MIB", "hwRPRtopoStabilityRestore"), ("HUAWEI-RPR-MIB", "hwRPRPhyIfEventTrap"), ("HUAWEI-RPR-MIB", "hwRPRLogicIfEventTrap"), ("HUAWEI-RPR-MIB", "hwRPRNodeConErr"), ("HUAWEI-RPR-MIB", "hwRPRNodeConErrResume"), ("HUAWEI-RPR-MIB", "hwRPRNodeMisCabling"), ("HUAWEI-RPR-MIB", "hwRPRNodeMisCablingResume"), ("HUAWEI-RPR-MIB", "hwRPRMateErr"), ("HUAWEI-RPR-MIB", "hwRPRMateErrResume"), ("HUAWEI-RPR-MIB", "hwRPRLOS"), ("HUAWEI-RPR-MIB", "hwRPRLOSResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRPRTrapGroup = hwRPRTrapGroup.setStatus('current')
hwRPRIfConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 36, 3, 2, 3)).setObjects(("HUAWEI-RPR-MIB", "hwRPRLogicIfTotalBandWidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRPRIfConfigGroup = hwRPRIfConfigGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-RPR-MIB", hwRPRTrapGroups=hwRPRTrapGroups, hwRPR=hwRPR, hwRPRLogicIfSpanId=hwRPRLogicIfSpanId, hwRPRIfEventEntry=hwRPRIfEventEntry, hwRPRtopoInstabilityDefect=hwRPRtopoInstabilityDefect, hwRPRTrapCompliance=hwRPRTrapCompliance, hwRPRNodeConErrResume=hwRPRNodeConErrResume, hwRPRObjects=hwRPRObjects, hwRPRIfConfigTable=hwRPRIfConfigTable, hwRPRLogicIfIndex=hwRPRLogicIfIndex, hwRPRtopoChange=hwRPRtopoChange, hwRPRMateErr=hwRPRMateErr, hwRPRtopoStabilityRestore=hwRPRtopoStabilityRestore, hwRPRNodeMisCabling=hwRPRNodeMisCabling, hwRPRTrapCompliances=hwRPRTrapCompliances, hwRPRduplicateMacAddressDefect=hwRPRduplicateMacAddressDefect, hwRPRIfConfigEntry=hwRPRIfConfigEntry, hwRPRprotMisconfigDefect=hwRPRprotMisconfigDefect, hwRPRIfConfigGroup=hwRPRIfConfigGroup, hwRPRTraps=hwRPRTraps, hwRPRPhyIfEvent=hwRPRPhyIfEvent, hwRPRexcessReservedRateDefect=hwRPRexcessReservedRateDefect, hwRPRLOSResume=hwRPRLOSResume, hwRPRLogicIfEventTrap=hwRPRLogicIfEventTrap, hwRPRLOS=hwRPRLOS, hwRPRTrapConformance=hwRPRTrapConformance, hwRPRTrapGroup=hwRPRTrapGroup, hwRPRLogicIfTotalBandWidth=hwRPRLogicIfTotalBandWidth, hwRPRIfConfigIfIndex=hwRPRIfConfigIfIndex, PYSNMP_MODULE_ID=hwRPR, hwRPRNodeMisCablingResume=hwRPRNodeMisCablingResume, hwRPRIfEventTable=hwRPRIfEventTable, hwRPRtopoInvalidDefect=hwRPRtopoInvalidDefect, hwRPRPhyIfEventTrap=hwRPRPhyIfEventTrap, hwRPRLogicIfEvent=hwRPRLogicIfEvent, hwRPRIfEventGroup=hwRPRIfEventGroup, hwRPRNodeConErr=hwRPRNodeConErr, hwRPRMateErrResume=hwRPRMateErrResume)
