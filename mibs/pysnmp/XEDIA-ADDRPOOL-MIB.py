#
# PySNMP MIB module XEDIA-ADDRPOOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XEDIA-ADDRPOOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:36:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, ModuleIdentity, Bits, IpAddress, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, TimeTicks, iso, Counter64, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "Bits", "IpAddress", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "TimeTicks", "iso", "Counter64", "Unsigned32", "ObjectIdentity")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
xediaMibs, = mibBuilder.importSymbols("XEDIA-REG", "xediaMibs")
xediaAddrPoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 838, 3, 43))
if mibBuilder.loadTexts: xediaAddrPoolMIB.setLastUpdated('0001272155Z')
if mibBuilder.loadTexts: xediaAddrPoolMIB.setOrganization('Xedia Corp.')
addrPoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 43, 1))
addrPoolConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 43, 2))
addrPoolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 1), )
if mibBuilder.loadTexts: addrPoolConfigTable.setStatus('current')
addrPoolConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 1, 1), ).setIndexNames((0, "XEDIA-ADDRPOOL-MIB", "addrPoolConfigIdentifier"))
if mibBuilder.loadTexts: addrPoolConfigEntry.setStatus('current')
addrPoolConfigIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: addrPoolConfigIdentifier.setStatus('current')
addrPoolConfigNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addrPoolConfigNetwork.setStatus('current')
addrPoolConfigMask = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addrPoolConfigMask.setStatus('current')
addrPoolConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addrPoolConfigRowStatus.setStatus('current')
addrPoolAllocationTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 2), )
if mibBuilder.loadTexts: addrPoolAllocationTable.setStatus('current')
addrPoolAllocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 2, 1), ).setIndexNames((0, "XEDIA-ADDRPOOL-MIB", "addrPoolAllocationNameIdentifier"), (0, "XEDIA-ADDRPOOL-MIB", "addrPoolAllocationIpAddress"))
if mibBuilder.loadTexts: addrPoolAllocationEntry.setStatus('current')
addrPoolAllocationNameIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: addrPoolAllocationNameIdentifier.setStatus('current')
addrPoolAllocationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 2, 1, 2), IpAddress())
if mibBuilder.loadTexts: addrPoolAllocationIpAddress.setStatus('current')
addrPoolAllocationUserLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addrPoolAllocationUserLayer.setStatus('current')
addrPoolAllocationRemoteUser = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 43, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addrPoolAllocationRemoteUser.setStatus('current')
addrPoolCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 43, 2, 1))
addrPoolGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 43, 2, 2))
addrPoolCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 838, 3, 43, 2, 1, 1)).setObjects(("XEDIA-ADDRPOOL-MIB", "addrPoolConfigGroup"), ("XEDIA-ADDRPOOL-MIB", "addrPoolAllocationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    addrPoolCompliance = addrPoolCompliance.setStatus('current')
addrPoolConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 43, 2, 2, 1)).setObjects(("XEDIA-ADDRPOOL-MIB", "addrPoolConfigNetwork"), ("XEDIA-ADDRPOOL-MIB", "addrPoolConfigMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    addrPoolConfigGroup = addrPoolConfigGroup.setStatus('current')
addrPoolAllocationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 838, 3, 43, 2, 2, 2)).setObjects(("XEDIA-ADDRPOOL-MIB", "addrPoolAllocationUserLayer"), ("XEDIA-ADDRPOOL-MIB", "addrPoolAllocationRemoteUser"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    addrPoolAllocationGroup = addrPoolAllocationGroup.setStatus('current')
mibBuilder.exportSymbols("XEDIA-ADDRPOOL-MIB", PYSNMP_MODULE_ID=xediaAddrPoolMIB, addrPoolCompliances=addrPoolCompliances, addrPoolAllocationEntry=addrPoolAllocationEntry, addrPoolAllocationRemoteUser=addrPoolAllocationRemoteUser, addrPoolConfigIdentifier=addrPoolConfigIdentifier, addrPoolObjects=addrPoolObjects, addrPoolConfigRowStatus=addrPoolConfigRowStatus, addrPoolGroups=addrPoolGroups, addrPoolAllocationNameIdentifier=addrPoolAllocationNameIdentifier, addrPoolConfigGroup=addrPoolConfigGroup, addrPoolConfigEntry=addrPoolConfigEntry, addrPoolConfigNetwork=addrPoolConfigNetwork, addrPoolAllocationUserLayer=addrPoolAllocationUserLayer, addrPoolAllocationIpAddress=addrPoolAllocationIpAddress, addrPoolConfigTable=addrPoolConfigTable, addrPoolConformance=addrPoolConformance, addrPoolAllocationTable=addrPoolAllocationTable, addrPoolAllocationGroup=addrPoolAllocationGroup, addrPoolConfigMask=addrPoolConfigMask, xediaAddrPoolMIB=xediaAddrPoolMIB, addrPoolCompliance=addrPoolCompliance)
